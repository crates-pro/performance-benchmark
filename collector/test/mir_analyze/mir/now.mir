fn cat::_IMPL_DESERIALIZE_FOR_Args::<impl at src/cmd/cat.rs:41:10: 41:21>::deserialize::<impl at src/cmd/cat.rs:41:10: 41:21>::visit_bytes(_1: cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__FieldVisitor, _2: &[u8]) -> Result<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E> {
    debug self => const cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__FieldVisitor;
    debug __value => _2;
    let mut _0: std::result::Result<cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field, __E>;
    let mut _3: usize;
    let mut _4: usize;
    let mut _5: bool;
    let mut _6: usize;
    let mut _7: usize;
    let mut _8: bool;
    let mut _9: usize;
    let mut _10: usize;
    let mut _11: bool;
    let mut _12: usize;
    let mut _13: usize;
    let mut _14: bool;
    let mut _15: usize;
    let mut _16: usize;
    let mut _17: bool;
    let mut _18: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _19: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _20: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _21: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _22: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _23: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _24: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;
    let mut _25: cmd::cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cmd::cat::Args>::deserialize::__Field;

    bb0: {
        _15 = Len((*_2));
        _16 = const 8_usize;
        _17 = Eq(move _15, move _16);
        switchInt(move _17) -> [0: bb17, otherwise: bb1];
    }

    bb1: {
        switchInt((*_2)[0 of 8]) -> [99: bb2, 102: bb10, otherwise: bb9];
    }

    bb2: {
        switchInt((*_2)[1 of 8]) -> [109: bb3, otherwise: bb9];
    }

    bb3: {
        switchInt((*_2)[2 of 8]) -> [100: bb4, otherwise: bb9];
    }

    bb4: {
        switchInt((*_2)[3 of 8]) -> [95: bb5, otherwise: bb9];
    }

    bb5: {
        switchInt((*_2)[4 of 8]) -> [114: bb6, otherwise: bb9];
    }

    bb6: {
        switchInt((*_2)[5 of 8]) -> [111: bb7, otherwise: bb9];
    }

    bb7: {
        switchInt((*_2)[6 of 8]) -> [119: bb8, otherwise: bb9];
    }

    bb8: {
        switchInt((*_2)[7 of 8]) -> [115: bb80, otherwise: bb9];
    }

    bb9: {
        _25 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__ignore;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _25);
        goto -> bb87;
    }

    bb10: {
        switchInt((*_2)[1 of 8]) -> [108: bb11, otherwise: bb9];
    }

    bb11: {
        switchInt((*_2)[2 of 8]) -> [97: bb12, otherwise: bb9];
    }

    bb12: {
        switchInt((*_2)[3 of 8]) -> [103: bb13, otherwise: bb9];
    }

    bb13: {
        switchInt((*_2)[4 of 8]) -> [95: bb14, otherwise: bb9];
    }

    bb14: {
        switchInt((*_2)[5 of 8]) -> [112: bb15, otherwise: bb9];
    }

    bb15: {
        switchInt((*_2)[6 of 8]) -> [97: bb16, otherwise: bb9];
    }

    bb16: {
         switchInt((*_2)[7 of 8]) -> [100: bb83, otherwise: bb9];
    }

    bb17: {
        _12 = Len((*_2));
        _13 = const 11_usize;
        _14 = Eq(move _12, move _13);
        switchInt(move _14) -> [0: bb39, otherwise: bb18];
    }

    bb18: {
        switchInt((*_2)[0 of 11]) -> [99: bb19, 102: bb29, otherwise: bb9];
    }

    bb19: {
        switchInt((*_2)[1 of 11]) -> [109: bb20, otherwise: bb9];
    }

    bb20: {
        switchInt((*_2)[2 of 11]) -> [100: bb21, otherwise: bb9];
    }

    bb21: {
        switchInt((*_2)[3 of 11]) -> [95: bb22, otherwise: bb9];
    }

    bb22: {
        switchInt((*_2)[4 of 11]) -> [99: bb23, otherwise: bb9];
    }

    bb23: {
        switchInt((*_2)[5 of 11]) -> [111: bb24, otherwise: bb9];
    }

    bb24: {
        switchInt((*_2)[6 of 11]) -> [108: bb25, otherwise: bb9];
    }

    bb25: {
        switchInt((*_2)[7 of 11]) -> [117: bb26, otherwise: bb9];
    }

    bb26: {
        switchInt((*_2)[8 of 11]) -> [109: bb27, otherwise: bb9];
    }

    bb27: {
        switchInt((*_2)[9 of 11]) -> [110: bb28, otherwise: bb9];
    }

    bb28: {
        switchInt((*_2)[10 of 11]) -> [115: bb81, otherwise: bb9];
    }

    bb29: {
        switchInt((*_2)[1 of 11]) -> [108: bb30, otherwise: bb9];
    }

    bb30: {
        switchInt((*_2)[2 of 11]) -> [97: bb31, otherwise: bb9];
    }

    bb31: {
        switchInt((*_2)[3 of 11]) -> [103: bb32, otherwise: bb9];
    }

    bb32: {
        switchInt((*_2)[4 of 11]) -> [95: bb33, otherwise: bb9];
    }

    bb33: {
        switchInt((*_2)[5 of 11]) -> [111: bb34, otherwise: bb9];
    }

    bb34: {
        switchInt((*_2)[6 of 11]) -> [117: bb35, otherwise: bb9];
    }

    bb35: {
        switchInt((*_2)[7 of 11]) -> [116: bb36, otherwise: bb9];
    }

    bb36: {
        switchInt((*_2)[8 of 11]) -> [112: bb37, otherwise: bb9];
    }

    bb37: {
        switchInt((*_2)[9 of 11]) -> [117: bb38, otherwise: bb9];
    }

    bb38: {
        switchInt((*_2)[10 of 11]) -> [116: bb84, otherwise: bb9];
    }

    bb39: {
        _9 = Len((*_2));
        _10 = const 9_usize;
        _11 = Eq(move _9, move _10);
        switchInt(move _11) -> [0: bb49, otherwise: bb40];
    }

    bb40: {
        switchInt((*_2)[0 of 9]) -> [97: bb41, otherwise: bb9];
    }

    bb41: {
        switchInt((*_2)[1 of 9]) -> [114: bb42, otherwise: bb9];
    }

    bb42: {
        switchInt((*_2)[2 of 9]) -> [103: bb43, otherwise: bb9];
    }

    bb43: {
        switchInt((*_2)[3 of 9]) -> [95: bb44, otherwise: bb9];
    }

    bb44: {
        switchInt((*_2)[4 of 9]) -> [105: bb45, otherwise: bb9];
    }

    bb45: {
        switchInt((*_2)[5 of 9]) -> [110: bb46, otherwise: bb9];
    }

    bb46: {
        switchInt((*_2)[6 of 9]) -> [112: bb47, otherwise: bb9];
    }

    bb47: {
        switchInt((*_2)[7 of 9]) -> [117: bb48, otherwise: bb9];
    }

    bb48: {
        switchInt((*_2)[8 of 9]) -> [116: bb82, otherwise: bb9];
    }

    bb49: {
        _6 = Len((*_2));
        _7 = const 15_usize;
        _8 = Eq(move _6, move _7);
        switchInt(move _8) -> [0: bb65, otherwise: bb50];
    }

    bb50: {
        switchInt((*_2)[0 of 15]) -> [102: bb51, otherwise: bb9];
    }

    bb51: {
        switchInt((*_2)[1 of 15]) -> [108: bb52, otherwise: bb9];
    }

    bb52: {
        switchInt((*_2)[2 of 15]) -> [97: bb53, otherwise: bb9];
    }

    bb53: {
        switchInt((*_2)[3 of 15]) -> [103: bb54, otherwise: bb9];
    }

    bb54: {
        switchInt((*_2)[4 of 15]) -> [95: bb55, otherwise: bb9];
    }

    bb55: {
        switchInt((*_2)[5 of 15]) -> [110: bb56, otherwise: bb9];
    }

    bb56: {
        switchInt((*_2)[6 of 15]) -> [111: bb57, otherwise: bb9];
    }

    bb57: {
        switchInt((*_2)[7 of 15]) -> [95: bb58, otherwise: bb9];
    }

    bb58: {
        switchInt((*_2)[8 of 15]) -> [104: bb59, otherwise: bb9];
    }

    bb59: {
        switchInt((*_2)[9 of 15]) -> [101: bb60, otherwise: bb9];
    }

    bb60: {
        switchInt((*_2)[10 of 15]) -> [97: bb61, otherwise: bb9];
    }

    bb61: {
        switchInt((*_2)[11 of 15]) -> [100: bb62, otherwise: bb9];
    }

    bb62: {
        switchInt((*_2)[12 of 15]) -> [101: bb63, otherwise: bb9];
    }

    bb63: {
        switchInt((*_2)[13 of 15]) -> [114: bb64, otherwise: bb9];
    }

    bb64: {
        switchInt((*_2)[14 of 15]) -> [115: bb85, otherwise: bb9];
    }

    bb65: {
        _3 = Len((*_2));
        _4 = const 14_usize;
        _5 = Eq(move _3, move _4);
        switchInt(move _5) -> [0: bb9, otherwise: bb66];
    }

    bb66: {
        switchInt((*_2)[0 of 14]) -> [102: bb67, otherwise: bb9];
    }

    bb67: {
        switchInt((*_2)[1 of 14]) -> [108: bb68, otherwise: bb9];
    }

    bb68: {
        switchInt((*_2)[2 of 14]) -> [97: bb69, otherwise: bb9];
    }

    bb69: {
        switchInt((*_2)[3 of 14]) -> [103: bb70, otherwise: bb9];
    }

    bb70: {
        switchInt((*_2)[4 of 14]) -> [95: bb71, otherwise: bb9];
    }

    bb71: {
        switchInt((*_2)[5 of 14]) -> [100: bb72, otherwise: bb9];
    }

    bb72: {
        switchInt((*_2)[6 of 14]) -> [101: bb73, otherwise: bb9];
    }

    bb73: {
        switchInt((*_2)[7 of 14]) -> [108: bb74, otherwise: bb9];
    }

    bb74: {
        switchInt((*_2)[8 of 14]) -> [105: bb75, otherwise: bb9];
    }

    bb75: {
        switchInt((*_2)[9 of 14]) -> [109: bb76, otherwise: bb9];
    }

    bb76: {
        switchInt((*_2)[10 of 14]) -> [105: bb77, otherwise: bb9];
    }

    bb77: {
        switchInt((*_2)[11 of 14]) -> [116: bb78, otherwise: bb9];
    }

    bb78: {
        switchInt((*_2)[12 of 14]) -> [101: bb79, otherwise: bb9];
    }

    bb79: {
        switchInt((*_2)[13 of 14]) -> [114: bb86, otherwise: bb9];
    }

    bb80: {
        _18 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field0;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _18);
        goto -> bb87;
    }

    bb81: {
        _19 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field1;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _19);
        goto -> bb87;
    }

    bb82: {
        _20 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field2;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _20);
        goto -> bb87;
    }

    bb83: {
        _21 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field3;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _21);
        goto -> bb87;
    }

    bb84: {
        _22 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field4;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _22);
        goto -> bb87;
    }

    bb85: {
        _23 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field5;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _23);
        goto -> bb87;
    }

    bb86: {
        _24 = cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field::__field6;
        _0 = Result::<cat::_IMPL_DESERIALIZE_FOR_Args::<impl serde::Deserialize<'de> for cat::Args>::deserialize::__Field, __E>::Ok(move _24);
        goto -> bb87;
    }

    bb87: {
        return;
    }
}