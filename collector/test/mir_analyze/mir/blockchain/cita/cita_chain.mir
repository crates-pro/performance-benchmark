// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn block_processor::<impl at cita-chain/src/block_processor.rs:21:10: 21:15>::clone(_1: &BlockProcessor) -> BlockProcessor {
    debug self => _1;                    // in scope 0 at cita-chain/src/block_processor.rs:21:10: 21:15
    let mut _0: block_processor::BlockProcessor; // return place in scope 0 at cita-chain/src/block_processor.rs:21:10: 21:15
    let mut _2: std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:23:5: 23:26
    let _3: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:23:5: 23:26
    let mut _4: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/block_processor.rs:24:5: 24:39
    let _5: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/block_processor.rs:24:5: 24:39

    bb0: {
        _3 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:23:5: 23:26
        _2 = <Arc<core::libchain::chain::Chain> as Clone>::clone(_3) -> bb1; // scope 0 at cita-chain/src/block_processor.rs:23:5: 23:26
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:23:5: 23:26
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> Arc<core::libchain::chain::Chain> {<Arc<core::libchain::chain::Chain> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-chain/src/block_processor.rs:24:5: 24:39
        _4 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(_5) -> [return: bb2, unwind: bb3]; // scope 0 at cita-chain/src/block_processor.rs:24:5: 24:39
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:24:5: 24:39
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = BlockProcessor { chain: move _2, ctx_pub: move _4 }; // scope 0 at cita-chain/src/block_processor.rs:21:10: 21:15
        return;                          // scope 0 at cita-chain/src/block_processor.rs:21:15: 21:15
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at cita-chain/src/block_processor.rs:21:14: 21:15
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/block_processor.rs:21:10: 21:15
    }
}

fn block_processor::<impl at cita-chain/src/block_processor.rs:27:1: 27:20>::new(_1: Arc<core::libchain::chain::Chain>, _2: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> BlockProcessor {
    debug chain => _1;                   // in scope 0 at cita-chain/src/block_processor.rs:28:16: 28:21
    debug ctx_pub => _2;                 // in scope 0 at cita-chain/src/block_processor.rs:28:35: 28:42
    let mut _0: block_processor::BlockProcessor; // return place in scope 0 at cita-chain/src/block_processor.rs:28:74: 28:78

    bb0: {
        _0 = BlockProcessor { chain: move _1, ctx_pub: move _2 }; // scope 0 at cita-chain/src/block_processor.rs:29:9: 29:42
        return;                          // scope 0 at cita-chain/src/block_processor.rs:30:6: 30:6
    }
}

fn block_processor::<impl at cita-chain/src/block_processor.rs:27:1: 27:20>::broadcast_current_status(_1: &BlockProcessor) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/block_processor.rs:32:37: 32:42
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/block_processor.rs:32:44: 32:44
    let _2: ();                          // in scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
    let mut _3: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
    let _4: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
    let mut _5: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
    let _6: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/block_processor.rs:33:45: 33:58

    bb0: {
        _5 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
        _4 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _5) -> bb1; // scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:33:9: 33:59
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
        _6 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-chain/src/block_processor.rs:33:45: 33:58
        _2 = core::libchain::chain::Chain::broadcast_current_status(move _3, _6) -> bb2; // scope 0 at cita-chain/src/block_processor.rs:33:9: 33:59
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:33:20: 33:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, &'b pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) {core::libchain::chain::Chain::broadcast_current_status}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-chain/src/block_processor.rs:34:6: 34:6
    }
}

fn block_processor::<impl at cita-chain/src/block_processor.rs:27:1: 27:20>::set_executed_result(_1: &BlockProcessor, _2: &libproto::ExecutedResult) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/block_processor.rs:36:32: 36:37
    debug ret => _2;                     // in scope 0 at cita-chain/src/block_processor.rs:36:39: 36:42
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/block_processor.rs:36:61: 36:61
    let _3: ();                          // in scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
    let mut _4: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
    let _5: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
    let mut _6: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
    let _7: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/block_processor.rs:37:45: 37:58

    bb0: {
        _6 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
        _5 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _6) -> bb1; // scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:37:9: 37:59
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
        _7 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-chain/src/block_processor.rs:37:45: 37:58
        _3 = core::libchain::chain::Chain::set_executed_result(move _4, _2, _7) -> bb2; // scope 0 at cita-chain/src/block_processor.rs:37:9: 37:59
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:37:20: 37:39
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a core::libchain::chain::Chain, &'b libproto::ExecutedResult, &'c pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) {core::libchain::chain::Chain::set_executed_result}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-chain/src/block_processor.rs:38:6: 38:6
    }
}

fn block_processor::<impl at cita-chain/src/block_processor.rs:27:1: 27:20>::reset_max_store_height(_1: &BlockProcessor) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/block_processor.rs:40:35: 40:40
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/block_processor.rs:40:42: 40:42
    let _2: ();                          // in scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
    let mut _3: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
    let _4: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
    let mut _5: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
    let mut _6: u64;                     // in scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
    let mut _7: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
    let _8: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
    let mut _9: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66

    bb0: {
        _5 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
        _4 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _5) -> bb1; // scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:41:9: 42:67
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
        _9 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
        _8 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _9) -> bb2; // scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:42:35: 42:66
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = _8;                         // scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
        _6 = core::libchain::chain::Chain::get_current_height(move _7) -> bb3; // scope 0 at cita-chain/src/block_processor.rs:42:35: 42:66
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:42:46: 42:64
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb3: {
        _2 = core::libchain::chain::Chain::set_max_store_height(move _3, move _6) -> bb4; // scope 0 at cita-chain/src/block_processor.rs:41:9: 42:67
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:42:14: 42:34
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, u64) {core::libchain::chain::Chain::set_max_store_height}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-chain/src/block_processor.rs:43:6: 43:6
    }
}

fn block_processor::<impl at cita-chain/src/block_processor.rs:27:1: 27:20>::signal_to_executor(_1: &BlockProcessor) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/block_processor.rs:45:31: 45:36
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/block_processor.rs:45:38: 45:38
    let mut _2: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
    let _3: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
    let mut _4: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
    let _5: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/block_processor.rs:46:39: 46:52

    bb0: {
        _4 = &((*_1).0: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
        _3 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _4) -> bb1; // scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:46:9: 46:53
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _3;                         // scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
        _5 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-chain/src/block_processor.rs:46:39: 46:52
        _0 = core::libchain::chain::Chain::signal_to_executor(move _2, _5) -> bb2; // scope 0 at cita-chain/src/block_processor.rs:46:9: 46:53
                                         // mir::Constant
                                         // + span: cita-chain/src/block_processor.rs:46:20: 46:38
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, &'b pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) {core::libchain::chain::Chain::signal_to_executor}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-chain/src/block_processor.rs:47:6: 47:6
    }
}

fn forward::<impl at cita-chain/src/forward.rs:43:10: 43:15>::clone(_1: &Forward) -> Forward {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:43:10: 43:15
    let mut _0: forward::Forward;        // return place in scope 0 at cita-chain/src/forward.rs:43:10: 43:15
    let mut _2: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/forward.rs:45:5: 45:41
    let _3: &pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/forward.rs:45:5: 45:41
    let mut _4: std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:46:5: 46:22
    let _5: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:46:5: 46:22
    let mut _6: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:47:5: 47:39
    let _7: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:47:5: 47:39

    bb0: {
        _3 = &((*_1).0: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>); // scope 0 at cita-chain/src/forward.rs:45:5: 45:41
        _2 = <pubsub::crossbeam_channel::Sender<libproto::ExecutedResult> as Clone>::clone(_3) -> bb1; // scope 0 at cita-chain/src/forward.rs:45:5: 45:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:45:5: 45:41
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>) -> pubsub::crossbeam_channel::Sender<libproto::ExecutedResult> {<pubsub::crossbeam_channel::Sender<libproto::ExecutedResult> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/forward.rs:46:5: 46:22
        _4 = <Arc<core::libchain::chain::Chain> as Clone>::clone(_5) -> [return: bb2, unwind: bb5]; // scope 0 at cita-chain/src/forward.rs:46:5: 46:22
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:46:5: 46:22
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> Arc<core::libchain::chain::Chain> {<Arc<core::libchain::chain::Chain> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-chain/src/forward.rs:47:5: 47:39
        _6 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(_7) -> [return: bb3, unwind: bb4]; // scope 0 at cita-chain/src/forward.rs:47:5: 47:39
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:47:5: 47:39
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = Forward { write_sender: move _2, chain: move _4, ctx_pub: move _6 }; // scope 0 at cita-chain/src/forward.rs:43:10: 43:15
        return;                          // scope 0 at cita-chain/src/forward.rs:43:15: 43:15
    }

    bb4 (cleanup): {
        drop(_4) -> bb5;                 // scope 0 at cita-chain/src/forward.rs:43:14: 43:15
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at cita-chain/src/forward.rs:43:14: 43:15
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:43:10: 43:15
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::new(_1: Arc<core::libchain::chain::Chain>, _2: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _3: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>) -> Forward {
    debug chain => _1;                   // in scope 0 at cita-chain/src/forward.rs:53:9: 53:14
    debug ctx_pub => _2;                 // in scope 0 at cita-chain/src/forward.rs:54:9: 54:16
    debug write_sender => _3;            // in scope 0 at cita-chain/src/forward.rs:55:9: 55:21
    let mut _0: forward::Forward;        // return place in scope 0 at cita-chain/src/forward.rs:56:10: 56:17

    bb0: {
        _0 = Forward { write_sender: move _3, chain: move _1, ctx_pub: move _2 }; // scope 0 at cita-chain/src/forward.rs:57:9: 61:10
        return;                          // scope 0 at cita-chain/src/forward.rs:62:6: 62:6
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::dispatch_msg(_1: &Forward, _2: &str, _3: &[u8]) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:65:25: 65:30
    debug key => _2;                     // in scope 0 at cita-chain/src/forward.rs:65:32: 65:35
    debug msg_bytes => _3;               // in scope 0 at cita-chain/src/forward.rs:65:43: 65:52
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:65:61: 65:61
    let mut _4: libproto::Message;       // in scope 0 at cita-chain/src/forward.rs:66:13: 66:20
    let mut _5: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-chain/src/forward.rs:66:23: 66:51
    let mut _7: &libproto::Message;      // in scope 0 at cita-chain/src/forward.rs:67:22: 67:38
    let mut _8: libproto::router::RoutingKey; // in scope 0 at cita-chain/src/forward.rs:68:15: 68:36
    let mut _9: isize;                   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _10: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _11: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _12: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _13: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _14: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _16: std::option::Option<libproto::Request>; // in scope 0 at cita-chain/src/forward.rs:70:27: 70:45
    let mut _17: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:70:27: 70:45
    let _18: ();                         // in scope 0 at cita-chain/src/forward.rs:71:17: 71:60
    let mut _19: libproto::Request;      // in scope 0 at cita-chain/src/forward.rs:71:36: 71:39
    let mut _20: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:71:41: 71:59
    let mut _22: std::option::Option<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/forward.rs:76:28: 76:54
    let mut _23: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:76:28: 76:54
    let _24: ();                         // in scope 0 at cita-chain/src/forward.rs:77:17: 77:54
    let mut _25: std::result::Result<(), pubsub::crossbeam_channel::SendError<libproto::ExecutedResult>>; // in scope 0 at cita-chain/src/forward.rs:77:17: 77:45
    let mut _26: &pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/forward.rs:77:17: 77:45
    let mut _27: libproto::ExecutedResult; // in scope 0 at cita-chain/src/forward.rs:77:40: 77:44
    let mut _28: std::option::Option<libproto::StateSignal>; // in scope 0 at cita-chain/src/forward.rs:81:45: 81:68
    let mut _29: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:81:45: 81:68
    let mut _30: isize;                  // in scope 0 at cita-chain/src/forward.rs:81:24: 81:42
    let mut _33: &libproto::StateSignal; // in scope 0 at cita-chain/src/forward.rs:82:44: 82:69
    let mut _35: std::ops::RangeInclusive<u64>; // in scope 0 at cita-chain/src/forward.rs:84:25: 84:81
    let mut _36: u64;                    // in scope 0 at cita-chain/src/forward.rs:84:26: 84:46
    let mut _37: u64;                    // in scope 0 at cita-chain/src/forward.rs:84:26: 84:42
    let mut _38: (u64, bool);            // in scope 0 at cita-chain/src/forward.rs:84:26: 84:46
    let mut _39: u64;                    // in scope 0 at cita-chain/src/forward.rs:84:49: 84:80
    let mut _40: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:84:49: 84:80
    let _41: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:84:49: 84:80
    let mut _42: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:84:49: 84:80
    let _43: ();                         // in scope 0 at cita-chain/src/forward.rs:85:21: 85:61
    let mut _44: std::vec::Vec<u64>;     // in scope 0 at cita-chain/src/forward.rs:85:46: 85:60
    let mut _46: std::option::Option<libproto::BlockWithProof>; // in scope 0 at cita-chain/src/forward.rs:90:33: 90:60
    let mut _47: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:90:33: 90:60
    let _48: ();                         // in scope 0 at cita-chain/src/forward.rs:91:17: 91:56
    let mut _49: libproto::BlockWithProof; // in scope 0 at cita-chain/src/forward.rs:91:46: 91:55
    let mut _51: std::option::Option<libproto::SyncRequest>; // in scope 0 at cita-chain/src/forward.rs:95:32: 95:55
    let mut _52: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:95:32: 95:55
    let _53: ();                         // in scope 0 at cita-chain/src/forward.rs:96:17: 96:53
    let mut _54: libproto::SyncRequest;  // in scope 0 at cita-chain/src/forward.rs:96:36: 96:44
    let mut _55: u32;                    // in scope 0 at cita-chain/src/forward.rs:96:46: 96:52
    let mut _57: std::option::Option<libproto::SyncResponse>; // in scope 0 at cita-chain/src/forward.rs:100:32: 100:56
    let mut _58: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:100:32: 100:56
    let _59: ();                         // in scope 0 at cita-chain/src/forward.rs:101:17: 101:48
    let mut _60: libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:101:39: 101:47
    let mut _62: std::option::Option<libproto::BlockTxHashesReq>; // in scope 0 at cita-chain/src/forward.rs:105:43: 105:73
    let mut _63: &mut libproto::Message; // in scope 0 at cita-chain/src/forward.rs:105:43: 105:73
    let _64: ();                         // in scope 0 at cita-chain/src/forward.rs:106:17: 106:61
    let _65: &libproto::BlockTxHashesReq; // in scope 0 at cita-chain/src/forward.rs:106:40: 106:60
    let mut _67: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _68: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _69: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _70: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _71: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _72: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _73: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _74: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _75: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: &[&str];                // in scope 0 at cita-chain/src/forward.rs:110:24: 110:69
    let mut _77: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _78: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _79: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _80: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:110:71: 110:74
    let _81: &&str;                      // in scope 0 at cita-chain/src/forward.rs:110:71: 110:74
    let mut _85: bool;                   // in scope 0 at cita-chain/src/forward.rs:87:13: 87:14
    let mut _86: bool;                   // in scope 0 at cita-chain/src/forward.rs:71:59: 71:60
    let mut _87: isize;                  // in scope 0 at cita-chain/src/forward.rs:87:13: 87:14
    scope 1 {
        debug msg => _4;                 // in scope 1 at cita-chain/src/forward.rs:66:13: 66:20
        let _6: u32;                     // in scope 1 at cita-chain/src/forward.rs:67:13: 67:19
        scope 2 {
            debug origin => _6;          // in scope 2 at cita-chain/src/forward.rs:67:13: 67:19
            let _15: libproto::Request;  // in scope 2 at cita-chain/src/forward.rs:70:21: 70:24
            let _21: libproto::ExecutedResult; // in scope 2 at cita-chain/src/forward.rs:76:21: 76:25
            let _45: libproto::BlockWithProof; // in scope 2 at cita-chain/src/forward.rs:90:21: 90:30
            let _50: libproto::SyncRequest; // in scope 2 at cita-chain/src/forward.rs:95:21: 95:29
            let _56: libproto::SyncResponse; // in scope 2 at cita-chain/src/forward.rs:100:21: 100:29
            let _61: libproto::BlockTxHashesReq; // in scope 2 at cita-chain/src/forward.rs:105:21: 105:40
            let _66: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug req => _15;        // in scope 3 at cita-chain/src/forward.rs:70:21: 70:24
            }
            scope 4 {
                debug info => _21;       // in scope 4 at cita-chain/src/forward.rs:76:21: 76:25
            }
            scope 5 {
                debug state_signal => _31; // in scope 5 at cita-chain/src/forward.rs:81:29: 81:41
                let _31: libproto::StateSignal; // in scope 5 at cita-chain/src/forward.rs:81:29: 81:41
                let _32: u64;            // in scope 5 at cita-chain/src/forward.rs:82:25: 82:41
                scope 6 {
                    debug specified_height => _32; // in scope 6 at cita-chain/src/forward.rs:82:25: 82:41
                    let _34: std::vec::Vec<u64>; // in scope 6 at cita-chain/src/forward.rs:83:25: 83:39
                    scope 7 {
                        debug missing_blocks => _34; // in scope 7 at cita-chain/src/forward.rs:83:25: 83:39
                    }
                }
            }
            scope 8 {
                debug proof_blk => _45;  // in scope 8 at cita-chain/src/forward.rs:90:21: 90:30
            }
            scope 9 {
                debug sync_req => _50;   // in scope 9 at cita-chain/src/forward.rs:95:21: 95:29
            }
            scope 10 {
                debug sync_res => _56;   // in scope 10 at cita-chain/src/forward.rs:100:21: 100:29
            }
            scope 11 {
                debug block_tx_hashes_req => _61; // in scope 11 at cita-chain/src/forward.rs:105:21: 105:40
            }
            scope 12 {
                debug lvl => _66;        // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _82: &(&str, &str, &str, u32); // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _83: &[&str; 2]; // in scope 12 at cita-chain/src/forward.rs:110:24: 110:69
                let mut _84: &log::LevelFilter; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _85 = const false;               // scope 0 at cita-chain/src/forward.rs:66:13: 66:20
        _86 = const false;               // scope 0 at cita-chain/src/forward.rs:66:13: 66:20
        _5 = <libproto::Message as libproto::TryFrom<&[u8]>>::try_from(_3) -> bb1; // scope 0 at cita-chain/src/forward.rs:66:23: 66:51
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:66:23: 66:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&[u8]>>::Error> {<libproto::Message as libproto::TryFrom<&[u8]>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _5) -> bb2; // scope 0 at cita-chain/src/forward.rs:66:23: 66:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:66:52: 66:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &_4;                        // scope 1 at cita-chain/src/forward.rs:67:22: 67:38
        _6 = libproto::Message::get_origin(move _7) -> [return: bb3, unwind: bb56]; // scope 1 at cita-chain/src/forward.rs:67:22: 67:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:67:26: 67:36
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = <RoutingKey as From<&str>>::from(_2) -> [return: bb4, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:68:15: 68:31
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&str) -> RoutingKey {<RoutingKey as From<&str>>::from}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = discriminant((_8.0: libproto::router::SubModules)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _14) -> [0: bb5, 1: bb7, 3: bb8, 4: bb9, 5: bb10, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb5: {
        _9 = discriminant((_8.1: libproto::router::MsgType)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _9) -> [1: bb11, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb6: {
        _66 = log::Level::Error;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _69 = &_66;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _84 = const _;                   // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::dispatch_msg, [], Some(promoted[2])) }
        _68 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _69, _84) -> [return: bb46, unwind: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _10 = discriminant((_8.1: libproto::router::MsgType)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _10) -> [3: bb33, 4: bb36, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb8: {
        _11 = discriminant((_8.1: libproto::router::MsgType)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _11) -> [9: bb30, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb9: {
        _12 = discriminant((_8.1: libproto::router::MsgType)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _12) -> [13: bb39, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb10: {
        _13 = discriminant((_8.1: libproto::router::MsgType)); // scope 2 at cita-chain/src/forward.rs:68:15: 68:36
        switchInt(move _13) -> [16: bb16, 22: bb20, otherwise: bb6]; // scope 2 at cita-chain/src/forward.rs:68:9: 68:36
    }

    bb11: {
        _17 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:70:27: 70:45
        _16 = libproto::Message::take_request(move _17) -> [return: bb12, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:70:27: 70:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:70:31: 70:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::Request> {libproto::Message::take_request}, val: Value(<ZST>) }
    }

    bb12: {
        _15 = Option::<libproto::Request>::unwrap(move _16) -> [return: bb13, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:70:27: 70:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:70:46: 70:52
                                         // + literal: Const { ty: fn(Option<libproto::Request>) -> libproto::Request {Option::<libproto::Request>::unwrap}, val: Value(<ZST>) }
    }

    bb13: {
        _86 = const true;                // scope 3 at cita-chain/src/forward.rs:71:36: 71:39
        _19 = move _15;                  // scope 3 at cita-chain/src/forward.rs:71:36: 71:39
        _20 = slice::<impl [u8]>::to_vec(_3) -> [return: bb14, unwind: bb63]; // scope 3 at cita-chain/src/forward.rs:71:41: 71:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:71:51: 71:57
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb14: {
        _86 = const false;               // scope 3 at cita-chain/src/forward.rs:71:17: 71:60
        _18 = Forward::reply_request(_1, move _19, move _20) -> [return: bb15, unwind: bb63]; // scope 3 at cita-chain/src/forward.rs:71:17: 71:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:71:22: 71:35
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, libproto::Request, Vec<u8>) {Forward::reply_request}, val: Value(<ZST>) }
    }

    bb15: {
        _86 = const false;               // scope 3 at cita-chain/src/forward.rs:71:59: 71:60
        goto -> bb52;                    // scope 2 at cita-chain/src/forward.rs:72:13: 72:14
    }

    bb16: {
        _23 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:76:28: 76:54
        _22 = libproto::Message::take_executed_result(move _23) -> [return: bb17, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:76:28: 76:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:76:32: 76:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::ExecutedResult> {libproto::Message::take_executed_result}, val: Value(<ZST>) }
    }

    bb17: {
        _21 = Option::<libproto::ExecutedResult>::unwrap(move _22) -> [return: bb18, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:76:28: 76:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:76:55: 76:61
                                         // + literal: Const { ty: fn(Option<libproto::ExecutedResult>) -> libproto::ExecutedResult {Option::<libproto::ExecutedResult>::unwrap}, val: Value(<ZST>) }
    }

    bb18: {
        _26 = &((*_1).0: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>); // scope 4 at cita-chain/src/forward.rs:77:17: 77:45
        _27 = move _21;                  // scope 4 at cita-chain/src/forward.rs:77:40: 77:44
        _25 = pubsub::crossbeam_channel::Sender::<libproto::ExecutedResult>::send(move _26, move _27) -> [return: bb19, unwind: bb56]; // scope 4 at cita-chain/src/forward.rs:77:17: 77:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:77:35: 77:39
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>, libproto::ExecutedResult) -> Result<(), pubsub::crossbeam_channel::SendError<libproto::ExecutedResult>> {pubsub::crossbeam_channel::Sender::<libproto::ExecutedResult>::send}, val: Value(<ZST>) }
    }

    bb19: {
        _24 = Result::<(), pubsub::crossbeam_channel::SendError<libproto::ExecutedResult>>::unwrap(move _25) -> [return: bb64, unwind: bb56]; // scope 4 at cita-chain/src/forward.rs:77:17: 77:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:77:46: 77:52
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<libproto::ExecutedResult>>) {Result::<(), pubsub::crossbeam_channel::SendError<libproto::ExecutedResult>>::unwrap}, val: Value(<ZST>) }
    }

    bb20: {
        _29 = &mut _4;                   // scope 5 at cita-chain/src/forward.rs:81:45: 81:68
        _28 = libproto::Message::take_state_signal(move _29) -> [return: bb21, unwind: bb56]; // scope 5 at cita-chain/src/forward.rs:81:45: 81:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:81:49: 81:66
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::StateSignal> {libproto::Message::take_state_signal}, val: Value(<ZST>) }
    }

    bb21: {
        _85 = const true;                // scope 5 at cita-chain/src/forward.rs:81:67: 81:68
        _30 = discriminant(_28);         // scope 5 at cita-chain/src/forward.rs:81:24: 81:42
        switchInt(move _30) -> [1: bb22, otherwise: bb61]; // scope 5 at cita-chain/src/forward.rs:81:24: 81:42
    }

    bb22: {
        _85 = const false;               // scope 5 at cita-chain/src/forward.rs:81:29: 81:41
        _31 = move ((_28 as Some).0: libproto::StateSignal); // scope 5 at cita-chain/src/forward.rs:81:29: 81:41
        _33 = &_31;                      // scope 5 at cita-chain/src/forward.rs:82:44: 82:69
        _32 = libproto::StateSignal::get_height(move _33) -> [return: bb23, unwind: bb55]; // scope 5 at cita-chain/src/forward.rs:82:44: 82:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:82:57: 82:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::StateSignal) -> u64 {libproto::StateSignal::get_height}, val: Value(<ZST>) }
    }

    bb23: {
        _37 = _32;                       // scope 6 at cita-chain/src/forward.rs:84:26: 84:42
        _38 = CheckedAdd(_37, const 1_u64); // scope 6 at cita-chain/src/forward.rs:84:26: 84:46
        assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _37, const 1_u64) -> [success: bb24, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:84:26: 84:46
    }

    bb24: {
        _36 = move (_38.0: u64);         // scope 6 at cita-chain/src/forward.rs:84:26: 84:46
        _42 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 6 at cita-chain/src/forward.rs:84:49: 84:80
        _41 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _42) -> [return: bb25, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:84:49: 84:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:84:49: 84:80
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb25: {
        _40 = _41;                       // scope 6 at cita-chain/src/forward.rs:84:49: 84:80
        _39 = core::libchain::chain::Chain::get_current_height(move _40) -> [return: bb26, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:84:49: 84:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:84:60: 84:78
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb26: {
        _35 = RangeInclusive::<u64>::new(move _36, move _39) -> [return: bb27, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:84:25: 84:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:84:26: 84:80
                                         // + literal: Const { ty: fn(u64, u64) -> RangeInclusive<u64> {RangeInclusive::<u64>::new}, val: Value(<ZST>) }
    }

    bb27: {
        _34 = <RangeInclusive<u64> as Iterator>::collect::<Vec<u64>>(move _35) -> [return: bb28, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:84:25: 84:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:84:82: 84:89
                                         // + literal: Const { ty: fn(RangeInclusive<u64>) -> Vec<u64> {<RangeInclusive<u64> as Iterator>::collect::<Vec<u64>>}, val: Value(<ZST>) }
    }

    bb28: {
        _44 = move _34;                  // scope 7 at cita-chain/src/forward.rs:85:46: 85:60
        _43 = Forward::reply_local_syn_req(_1, move _44) -> [return: bb29, unwind: bb55]; // scope 7 at cita-chain/src/forward.rs:85:21: 85:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:85:26: 85:45
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, Vec<u64>) {Forward::reply_local_syn_req}, val: Value(<ZST>) }
    }

    bb29: {
        drop(_31) -> [return: bb61, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:86:17: 86:18
    }

    bb30: {
        _47 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:90:33: 90:60
        _46 = libproto::Message::take_block_with_proof(move _47) -> [return: bb31, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:90:33: 90:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:90:37: 90:58
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::BlockWithProof> {libproto::Message::take_block_with_proof}, val: Value(<ZST>) }
    }

    bb31: {
        _45 = Option::<libproto::BlockWithProof>::unwrap(move _46) -> [return: bb32, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:90:33: 90:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:90:61: 90:67
                                         // + literal: Const { ty: fn(Option<libproto::BlockWithProof>) -> libproto::BlockWithProof {Option::<libproto::BlockWithProof>::unwrap}, val: Value(<ZST>) }
    }

    bb32: {
        _49 = move _45;                  // scope 8 at cita-chain/src/forward.rs:91:46: 91:55
        _48 = Forward::consensus_block_enqueue(_1, move _49) -> [return: bb65, unwind: bb56]; // scope 8 at cita-chain/src/forward.rs:91:17: 91:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:91:22: 91:45
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, libproto::BlockWithProof) {Forward::consensus_block_enqueue}, val: Value(<ZST>) }
    }

    bb33: {
        _52 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:95:32: 95:55
        _51 = libproto::Message::take_sync_request(move _52) -> [return: bb34, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:95:32: 95:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:95:36: 95:53
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::SyncRequest> {libproto::Message::take_sync_request}, val: Value(<ZST>) }
    }

    bb34: {
        _50 = Option::<libproto::SyncRequest>::unwrap(move _51) -> [return: bb35, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:95:32: 95:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:95:56: 95:62
                                         // + literal: Const { ty: fn(Option<libproto::SyncRequest>) -> libproto::SyncRequest {Option::<libproto::SyncRequest>::unwrap}, val: Value(<ZST>) }
    }

    bb35: {
        _54 = move _50;                  // scope 9 at cita-chain/src/forward.rs:96:36: 96:44
        _55 = _6;                        // scope 9 at cita-chain/src/forward.rs:96:46: 96:52
        _53 = Forward::reply_syn_req(_1, move _54, move _55) -> [return: bb66, unwind: bb56]; // scope 9 at cita-chain/src/forward.rs:96:17: 96:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:96:22: 96:35
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, libproto::SyncRequest, u32) {Forward::reply_syn_req}, val: Value(<ZST>) }
    }

    bb36: {
        _58 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:100:32: 100:56
        _57 = libproto::Message::take_sync_response(move _58) -> [return: bb37, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:100:32: 100:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:100:36: 100:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::SyncResponse> {libproto::Message::take_sync_response}, val: Value(<ZST>) }
    }

    bb37: {
        _56 = Option::<libproto::SyncResponse>::unwrap(move _57) -> [return: bb38, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:100:32: 100:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:100:57: 100:63
                                         // + literal: Const { ty: fn(Option<libproto::SyncResponse>) -> libproto::SyncResponse {Option::<libproto::SyncResponse>::unwrap}, val: Value(<ZST>) }
    }

    bb38: {
        _60 = move _56;                  // scope 10 at cita-chain/src/forward.rs:101:39: 101:47
        _59 = Forward::deal_sync_blocks(_1, move _60) -> [return: bb67, unwind: bb56]; // scope 10 at cita-chain/src/forward.rs:101:17: 101:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:101:22: 101:38
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, libproto::SyncResponse) {Forward::deal_sync_blocks}, val: Value(<ZST>) }
    }

    bb39: {
        _63 = &mut _4;                   // scope 2 at cita-chain/src/forward.rs:105:43: 105:73
        _62 = libproto::Message::take_block_tx_hashes_req(move _63) -> [return: bb40, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:105:43: 105:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:105:47: 105:71
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> Option<libproto::BlockTxHashesReq> {libproto::Message::take_block_tx_hashes_req}, val: Value(<ZST>) }
    }

    bb40: {
        _61 = Option::<libproto::BlockTxHashesReq>::unwrap(move _62) -> [return: bb41, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:105:43: 105:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:105:74: 105:80
                                         // + literal: Const { ty: fn(Option<libproto::BlockTxHashesReq>) -> libproto::BlockTxHashesReq {Option::<libproto::BlockTxHashesReq>::unwrap}, val: Value(<ZST>) }
    }

    bb41: {
        _65 = &_61;                      // scope 11 at cita-chain/src/forward.rs:106:40: 106:60
        _64 = Forward::deal_block_tx_req(_1, _65) -> [return: bb42, unwind: bb54]; // scope 11 at cita-chain/src/forward.rs:106:17: 106:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:106:22: 106:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Forward, &'b libproto::BlockTxHashesReq) {Forward::deal_block_tx_req}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_61) -> [return: bb52, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:107:13: 107:14
    }

    bb43: {
        _67 = const false;               // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        _71 = &_66;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _73 = log::max_level() -> [return: bb47, unwind: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb45: {
        switchInt(move _67) -> [0: bb52, otherwise: bb49]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb46: {
        switchInt(move _68) -> [0: bb43, otherwise: bb44]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _72 = &_73;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _70 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _71, move _72) -> [return: bb48, unwind: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb48: {
        _67 = move _70;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb49: {
        _83 = const _;                   // scope 12 at cita-chain/src/forward.rs:110:24: 110:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:110:24: 110:69
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::dispatch_msg, [], Some(promoted[1])) }
        _76 = _83 as &[&str] (Pointer(Unsize)); // scope 12 at cita-chain/src/forward.rs:110:24: 110:69
        _81 = &_2;                       // scope 12 at cita-chain/src/forward.rs:110:71: 110:74
        _80 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_81) -> [return: bb50, unwind: bb56]; // scope 12 at cita-chain/src/forward.rs:110:71: 110:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:110:71: 110:74
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb50: {
        _79 = [move _80];                // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _78 = &_79;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _77 = _78 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _75 = Arguments::<'_>::new_v1(move _76, move _77) -> [return: bb51, unwind: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb51: {
        _82 = const _;                   // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::dispatch_msg, [], Some(promoted[0])) }
        _74 = log::__private_api_log(move _75, _66, _82) -> [return: bb68, unwind: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb52: {
        drop(_4) -> bb53;                // scope 0 at cita-chain/src/forward.rs:113:5: 113:6
    }

    bb53: {
        return;                          // scope 0 at cita-chain/src/forward.rs:113:6: 113:6
    }

    bb54 (cleanup): {
        drop(_61) -> bb56;               // scope 2 at cita-chain/src/forward.rs:107:13: 107:14
    }

    bb55 (cleanup): {
        drop(_31) -> bb56;               // scope 2 at cita-chain/src/forward.rs:86:17: 86:18
    }

    bb56 (cleanup): {
        drop(_4) -> bb57;                // scope 0 at cita-chain/src/forward.rs:113:5: 113:6
    }

    bb57 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:65:5: 113:6
    }

    bb58: {
        _85 = const false;               // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
        goto -> bb52;                    // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
    }

    bb59: {
        switchInt(_85) -> [0: bb58, otherwise: bb60]; // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
    }

    bb60: {
        drop(((_28 as Some).0: libproto::StateSignal)) -> [return: bb58, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
    }

    bb61: {
        _87 = discriminant(_28);         // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
        switchInt(move _87) -> [1: bb59, otherwise: bb58]; // scope 2 at cita-chain/src/forward.rs:87:13: 87:14
    }

    bb62 (cleanup): {
        drop(_19) -> bb56;               // scope 3 at cita-chain/src/forward.rs:71:59: 71:60
    }

    bb63 (cleanup): {
        switchInt(_86) -> [0: bb56, otherwise: bb62]; // scope 3 at cita-chain/src/forward.rs:71:59: 71:60
    }

    bb64: {
        goto -> bb52;                    // scope 4 at cita-chain/src/forward.rs:77:17: 77:54
    }

    bb65: {
        goto -> bb52;                    // scope 8 at cita-chain/src/forward.rs:91:17: 91:56
    }

    bb66: {
        goto -> bb52;                    // scope 9 at cita-chain/src/forward.rs:96:17: 96:53
    }

    bb67: {
        goto -> bb52;                    // scope 10 at cita-chain/src/forward.rs:101:17: 101:48
    }

    bb68: {
        goto -> bb52;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::dispatch_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:110:17: 110:75
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:110:17: 110:75

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:110:17: 110:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:110:17: 110:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:110:17: 110:75
        _1 = (move _2, move _4, move _6, const 110_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::dispatch_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:110:24: 110:69
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:110:24: 110:69

    bb0: {
        _1 = [const "forward dispatch msg found error key ", const "!!!!"]; // scope 0 at cita-chain/src/forward.rs:110:24: 110:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:110:24: 110:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:110:24: 110:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:110:24: 110:69
        return;                          // scope 0 at cita-chain/src/forward.rs:110:24: 110:69
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::dispatch_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request(_1: &Forward, _2: libproto::Request, _3: Vec<u8>) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:115:22: 115:27
    debug req => _2;                     // in scope 0 at cita-chain/src/forward.rs:115:29: 115:36
    debug imsg => _3;                    // in scope 0 at cita-chain/src/forward.rs:115:56: 115:60
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:115:71: 115:71
    let mut _4: libproto::Response;      // in scope 0 at cita-chain/src/forward.rs:116:13: 116:25
    let _5: ();                          // in scope 0 at cita-chain/src/forward.rs:117:9: 117:55
    let mut _6: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:117:9: 117:55
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-chain/src/forward.rs:117:33: 117:54
    let mut _8: &mut libproto::Request;  // in scope 0 at cita-chain/src/forward.rs:117:33: 117:54
    let mut _9: libproto::Request_oneof_req; // in scope 0 at cita-chain/src/forward.rs:118:15: 118:31
    let mut _10: std::option::Option<libproto::Request_oneof_req>; // in scope 0 at cita-chain/src/forward.rs:118:15: 118:22
    let mut _11: isize;                  // in scope 0 at cita-chain/src/forward.rs:120:13: 120:37
    let _12: ();                         // in scope 0 at cita-chain/src/forward.rs:121:17: 121:75
    let mut _13: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:121:17: 121:75
    let mut _14: u64;                    // in scope 0 at cita-chain/src/forward.rs:121:43: 121:74
    let mut _15: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:121:43: 121:74
    let _16: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:121:43: 121:74
    let mut _17: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:121:43: 121:74
    let _19: ();                         // in scope 0 at cita-chain/src/forward.rs:126:17: 151:18
    let mut _20: std::result::Result<jsonrpc_types::rpc_types::BlockParamsByHash, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:126:23: 126:70
    let mut _21: &str;                   // in scope 0 at cita-chain/src/forward.rs:126:65: 126:69
    let _22: &str;                       // in scope 0 at cita-chain/src/forward.rs:126:65: 126:69
    let _23: &std::string::String;       // in scope 0 at cita-chain/src/forward.rs:126:65: 126:69
    let mut _24: isize;                  // in scope 0 at cita-chain/src/forward.rs:127:21: 127:30
    let mut _28: std::option::Option<types::block::Block>; // in scope 0 at cita-chain/src/forward.rs:130:31: 130:84
    let mut _29: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:130:31: 130:84
    let _30: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:130:31: 130:84
    let mut _31: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:130:31: 130:84
    let mut _32: cita_types::H256;       // in scope 0 at cita-chain/src/forward.rs:130:56: 130:83
    let mut _33: &[u8];                  // in scope 0 at cita-chain/src/forward.rs:130:67: 130:82
    let mut _34: &std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:130:67: 130:82
    let mut _35: isize;                  // in scope 0 at cita-chain/src/forward.rs:131:29: 131:40
    let mut _38: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:133:37: 133:41
    let mut _39: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:135:37: 135:73
    let mut _40: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:135:37: 135:64
    let mut _41: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:135:37: 135:53
    let mut _42: &types::block::Block;   // in scope 0 at cita-chain/src/forward.rs:135:37: 135:53
    let mut _43: std::result::Result<(), ()>; // in scope 0 at cita-chain/src/forward.rs:137:41: 142:39
    let mut _44: std::result::Result<(), serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:137:41: 138:74
    let mut _45: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:137:41: 137:74
    let _46: &jsonrpc_types::rpc_types::RpcBlock; // in scope 0 at cita-chain/src/forward.rs:137:63: 137:73
    let mut _47: [closure@cita-chain/src/forward.rs:138:42: 138:48]; // in scope 0 at cita-chain/src/forward.rs:138:42: 138:73
    let mut _48: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:138:42: 138:73
    let mut _49: [closure@cita-chain/src/forward.rs:139:46: 139:51]; // in scope 0 at cita-chain/src/forward.rs:139:46: 142:38
    let mut _50: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:139:46: 142:38
    let mut _51: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:144:37: 144:60
    let _53: ();                         // in scope 0 at cita-chain/src/forward.rs:148:25: 148:65
    let mut _54: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:148:25: 148:65
    let mut _55: std::string::String;    // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:119:23: 122:6
    let mut _57: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _58: &[&str];                // in scope 0 at cita-chain/src/forward.rs:148:52: 148:58
    let mut _59: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _60: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _61: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _62: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:148:60: 148:63
    let _63: &serde_json::Error;         // in scope 0 at cita-chain/src/forward.rs:148:60: 148:63
    let _64: ();                         // in scope 0 at cita-chain/src/forward.rs:149:25: 149:68
    let mut _65: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:149:25: 149:68
    let mut _66: i64;                    // in scope 0 at cita-chain/src/forward.rs:149:43: 149:67
    let mut _69: std::result::Result<jsonrpc_types::rpc_types::BlockParamsByNumber, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:156:21: 156:56
    let mut _70: &str;                   // in scope 0 at cita-chain/src/forward.rs:156:42: 156:55
    let _71: &str;                       // in scope 0 at cita-chain/src/forward.rs:156:42: 156:55
    let _72: &std::string::String;       // in scope 0 at cita-chain/src/forward.rs:156:42: 156:55
    let _73: &str;                       // in scope 0 at cita-chain/src/forward.rs:156:64: 156:79
    let mut _75: std::option::Option<types::block::Block>; // in scope 0 at cita-chain/src/forward.rs:158:23: 158:69
    let mut _76: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:158:23: 158:69
    let _77: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:158:23: 158:69
    let mut _78: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:158:23: 158:69
    let mut _79: types::block_number::BlockTag; // in scope 0 at cita-chain/src/forward.rs:158:40: 158:68
    let mut _80: jsonrpc_types::rpc_types::BlockNumber; // in scope 0 at cita-chain/src/forward.rs:158:40: 158:61
    let mut _81: isize;                  // in scope 0 at cita-chain/src/forward.rs:159:21: 159:32
    let mut _84: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:161:29: 161:59
    let mut _85: &[u8];                  // in scope 0 at cita-chain/src/forward.rs:161:29: 161:59
    let _86: &[u8];                      // in scope 0 at cita-chain/src/forward.rs:161:29: 161:59
    let mut _87: &cita_types::H256;      // in scope 0 at cita-chain/src/forward.rs:161:29: 161:59
    let _88: cita_types::H256;           // in scope 0 at cita-chain/src/forward.rs:161:29: 161:50
    let mut _89: std::option::Option<cita_types::H256>; // in scope 0 at cita-chain/src/forward.rs:161:29: 161:41
    let mut _90: &types::header::Header; // in scope 0 at cita-chain/src/forward.rs:161:29: 161:41
    let _91: &types::header::Header;     // in scope 0 at cita-chain/src/forward.rs:161:29: 161:41
    let mut _92: &types::block::Block;   // in scope 0 at cita-chain/src/forward.rs:161:29: 161:41
    let mut _93: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:163:29: 163:65
    let mut _94: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:163:29: 163:56
    let mut _95: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:163:29: 163:45
    let mut _96: &types::block::Block;   // in scope 0 at cita-chain/src/forward.rs:163:29: 163:45
    let mut _97: std::result::Result<(), ()>; // in scope 0 at cita-chain/src/forward.rs:165:33: 170:31
    let mut _98: std::result::Result<(), serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:165:33: 166:66
    let mut _99: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:165:33: 165:66
    let _100: &jsonrpc_types::rpc_types::RpcBlock; // in scope 0 at cita-chain/src/forward.rs:165:55: 165:65
    let mut _101: [closure@cita-chain/src/forward.rs:166:34: 166:40]; // in scope 0 at cita-chain/src/forward.rs:166:34: 166:65
    let mut _102: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:166:34: 166:65
    let mut _103: [closure@cita-chain/src/forward.rs:167:38: 167:43]; // in scope 0 at cita-chain/src/forward.rs:167:38: 170:30
    let mut _104: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:167:38: 170:30
    let _105: ();                        // in scope 0 at cita-chain/src/forward.rs:173:25: 173:48
    let mut _106: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:173:25: 173:48
    let mut _108: std::option::Option<libproto::FullTransaction>; // in scope 0 at cita-chain/src/forward.rs:179:23: 179:75
    let mut _109: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:179:23: 179:75
    let _110: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:179:23: 179:75
    let mut _111: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:179:23: 179:75
    let mut _112: cita_types::H256;      // in scope 0 at cita-chain/src/forward.rs:179:51: 179:74
    let mut _113: &[u8];                 // in scope 0 at cita-chain/src/forward.rs:179:68: 179:73
    let _114: &[u8];                     // in scope 0 at cita-chain/src/forward.rs:179:68: 179:73
    let _115: &std::vec::Vec<u8>;        // in scope 0 at cita-chain/src/forward.rs:179:68: 179:73
    let mut _116: isize;                 // in scope 0 at cita-chain/src/forward.rs:180:21: 180:29
    let _118: ();                        // in scope 0 at cita-chain/src/forward.rs:181:25: 181:44
    let mut _119: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:181:25: 181:44
    let _120: ();                        // in scope 0 at cita-chain/src/forward.rs:184:25: 184:48
    let mut _121: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:184:25: 184:48
    let mut _123: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-chain/src/forward.rs:190:23: 190:80
    let mut _124: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:190:23: 190:80
    let _125: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:190:23: 190:80
    let mut _126: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:190:23: 190:80
    let mut _127: cita_types::H256;      // in scope 0 at cita-chain/src/forward.rs:190:56: 190:79
    let mut _128: &[u8];                 // in scope 0 at cita-chain/src/forward.rs:190:73: 190:78
    let _129: &[u8];                     // in scope 0 at cita-chain/src/forward.rs:190:73: 190:78
    let _130: &std::vec::Vec<u8>;        // in scope 0 at cita-chain/src/forward.rs:190:73: 190:78
    let mut _131: isize;                 // in scope 0 at cita-chain/src/forward.rs:191:21: 191:32
    let _133: ();                        // in scope 0 at cita-chain/src/forward.rs:192:25: 192:62
    let mut _134: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:192:25: 192:62
    let _135: ();                        // in scope 0 at cita-chain/src/forward.rs:195:25: 195:48
    let mut _136: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:195:25: 195:48
    let mut _139: &[u8];                 // in scope 0 at cita-chain/src/forward.rs:201:48: 201:53
    let _140: &[u8];                     // in scope 0 at cita-chain/src/forward.rs:201:48: 201:53
    let _141: &std::vec::Vec<u8>;        // in scope 0 at cita-chain/src/forward.rs:201:48: 201:53
    let mut _143: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:202:31: 202:67
    let _144: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:202:31: 202:67
    let mut _145: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:202:31: 202:67
    let mut _146: cita_types::H256;      // in scope 0 at cita-chain/src/forward.rs:202:59: 202:66
    let mut _147: isize;                 // in scope 0 at cita-chain/src/forward.rs:203:24: 203:37
    let mut _151: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:205:38: 205:73
    let _152: &jsonrpc_types::rpc_types::Receipt; // in scope 0 at cita-chain/src/forward.rs:205:60: 205:72
    let _153: ();                        // in scope 0 at cita-chain/src/forward.rs:206:21: 206:53
    let mut _154: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:206:21: 206:53
    let mut _155: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:206:42: 206:52
    let _156: ();                        // in scope 0 at cita-chain/src/forward.rs:208:21: 208:44
    let mut _157: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:208:21: 208:44
    let mut _160: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _161: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _162: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _163: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _164: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _165: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _166: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _167: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _168: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _169: &[&str];               // in scope 0 at cita-chain/src/forward.rs:213:24: 213:38
    let mut _170: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _171: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _172: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _173: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:213:40: 213:47
    let _174: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:213:40: 213:47
    let mut _175: std::result::Result<jsonrpc_types::rpc_types::Filter, ()>; // in scope 0 at cita-chain/src/forward.rs:214:41: 217:19
    let mut _176: std::result::Result<jsonrpc_types::rpc_types::Filter, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:214:41: 214:84
    let mut _177: &str;                  // in scope 0 at cita-chain/src/forward.rs:214:75: 214:83
    let _178: &str;                      // in scope 0 at cita-chain/src/forward.rs:214:75: 214:83
    let _179: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:214:75: 214:83
    let mut _180: [closure@cita-chain/src/forward.rs:214:93: 214:98]; // in scope 0 at cita-chain/src/forward.rs:214:93: 217:18
    let mut _181: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:214:93: 217:18
    let mut _182: isize;                 // in scope 0 at cita-chain/src/forward.rs:214:24: 214:38
    let mut _186: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:219:32: 219:60
    let _187: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:219:32: 219:60
    let mut _188: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:219:32: 219:60
    let _189: &types::filter::Filter;    // in scope 0 at cita-chain/src/forward.rs:219:52: 219:59
    let mut _191: std::iter::Map<std::vec::IntoIter<types::log::LocalizedLog>, fn(types::log::LocalizedLog) -> jsonrpc_types::rpc_types::Log {<types::log::LocalizedLog as std::convert::Into<jsonrpc_types::rpc_types::Log>>::into}>; // in scope 0 at cita-chain/src/forward.rs:220:49: 220:81
    let mut _192: std::vec::IntoIter<types::log::LocalizedLog>; // in scope 0 at cita-chain/src/forward.rs:220:49: 220:65
    let mut _193: std::vec::Vec<types::log::LocalizedLog>; // in scope 0 at cita-chain/src/forward.rs:220:49: 220:53
    let _194: ();                        // in scope 0 at cita-chain/src/forward.rs:221:21: 221:81
    let mut _195: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:221:21: 221:81
    let mut _196: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:221:39: 221:80
    let mut _197: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:221:39: 221:71
    let _198: &std::vec::Vec<jsonrpc_types::rpc_types::Log>; // in scope 0 at cita-chain/src/forward.rs:221:61: 221:70
    let mut _201: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _202: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _203: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _204: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _205: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _206: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _207: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _208: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _209: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _210: &[&str];               // in scope 0 at cita-chain/src/forward.rs:226:24: 226:43
    let mut _211: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _212: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _213: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _214: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:226:45: 226:49
    let _215: &libproto::Call;           // in scope 0 at cita-chain/src/forward.rs:226:45: 226:49
    let _216: ();                        // in scope 0 at cita-chain/src/forward.rs:227:17: 229:30
    let mut _217: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:227:17: 228:73
    let mut _218: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:227:17: 228:73
    let mut _219: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:228:27: 228:72
    let mut _220: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:228:28: 228:65
    let mut _221: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _222: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _223: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _224: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:228:67: 228:71
    let mut _227: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _228: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _229: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _230: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _231: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _232: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _233: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _234: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _235: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _236: &[&str];               // in scope 0 at cita-chain/src/forward.rs:234:24: 234:45
    let mut _237: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _238: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _239: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _240: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:234:47: 234:51
    let _241: &libproto::Call;           // in scope 0 at cita-chain/src/forward.rs:234:47: 234:51
    let _242: ();                        // in scope 0 at cita-chain/src/forward.rs:235:17: 237:30
    let mut _243: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:235:17: 236:73
    let mut _244: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:235:17: 236:73
    let mut _245: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:236:27: 236:72
    let mut _246: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:236:28: 236:65
    let mut _247: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _248: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _249: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _250: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:236:67: 236:71
    let mut _253: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _254: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _255: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _256: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _257: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _258: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _259: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _260: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _261: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _262: &[&str];               // in scope 0 at cita-chain/src/forward.rs:242:24: 242:69
    let mut _263: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _264: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _265: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _266: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:242:71: 242:79
    let _267: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:242:71: 242:79
    let _268: ();                        // in scope 0 at cita-chain/src/forward.rs:243:17: 245:30
    let mut _269: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:243:17: 244:73
    let mut _270: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:243:17: 244:73
    let mut _271: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:244:27: 244:72
    let mut _272: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:244:28: 244:65
    let mut _273: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _274: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _275: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _276: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:244:67: 244:71
    let mut _279: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _280: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _281: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _282: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _283: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _284: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _285: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _286: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _287: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _288: &[&str];               // in scope 0 at cita-chain/src/forward.rs:250:24: 250:60
    let mut _289: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _290: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _291: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _292: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:250:62: 250:68
    let _293: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:250:62: 250:68
    let _294: ();                        // in scope 0 at cita-chain/src/forward.rs:251:17: 253:30
    let mut _295: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:251:17: 252:73
    let mut _296: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:251:17: 252:73
    let mut _297: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:252:27: 252:72
    let mut _298: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:252:28: 252:65
    let mut _299: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _300: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _301: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _302: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:252:67: 252:71
    let mut _305: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _306: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _307: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _308: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _309: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _310: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _311: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _312: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _313: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _314: &[&str];               // in scope 0 at cita-chain/src/forward.rs:258:24: 258:57
    let mut _315: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _316: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _317: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _318: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:258:59: 258:71
    let _319: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:258:59: 258:71
    let _320: ();                        // in scope 0 at cita-chain/src/forward.rs:259:17: 261:30
    let mut _321: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:259:17: 260:73
    let mut _322: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:259:17: 260:73
    let mut _323: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:260:27: 260:72
    let mut _324: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:260:28: 260:65
    let mut _325: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _326: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _327: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _328: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:260:67: 260:71
    let mut _331: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _332: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _333: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _334: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _335: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _336: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _337: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _338: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _339: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _340: &[&str];               // in scope 0 at cita-chain/src/forward.rs:266:24: 266:56
    let mut _341: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _342: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _343: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _344: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:266:58: 266:69
    let _345: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:266:58: 266:69
    let _346: ();                        // in scope 0 at cita-chain/src/forward.rs:267:17: 269:30
    let mut _347: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:267:17: 268:73
    let mut _348: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:267:17: 268:73
    let mut _349: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:268:27: 268:72
    let mut _350: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:268:28: 268:65
    let mut _351: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _352: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _353: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _354: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:268:67: 268:71
    let mut _357: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _358: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _359: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _360: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _361: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _362: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _363: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _364: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _365: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _366: &[&str];               // in scope 0 at cita-chain/src/forward.rs:274:24: 274:60
    let mut _367: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _368: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _369: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _370: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:274:62: 274:77
    let _371: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:274:62: 274:77
    let _372: ();                        // in scope 0 at cita-chain/src/forward.rs:275:17: 277:30
    let mut _373: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:275:17: 276:73
    let mut _374: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:275:17: 276:73
    let mut _375: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:276:27: 276:72
    let mut _376: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:276:28: 276:65
    let mut _377: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _378: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _379: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _380: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:276:67: 276:71
    let mut _383: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _384: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _385: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _386: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _387: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _388: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _389: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _390: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _391: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _392: &[&str];               // in scope 0 at cita-chain/src/forward.rs:282:24: 282:41
    let mut _393: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _394: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _395: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _396: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:282:43: 282:53
    let _397: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:282:43: 282:53
    let mut _399: std::result::Result<jsonrpc_types::rpc_types::Filter, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:284:21: 284:54
    let mut _400: &str;                  // in scope 0 at cita-chain/src/forward.rs:284:42: 284:53
    let _401: &str;                      // in scope 0 at cita-chain/src/forward.rs:284:42: 284:53
    let _402: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:284:42: 284:53
    let _403: &str;                      // in scope 0 at cita-chain/src/forward.rs:284:62: 284:77
    let mut _405: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _406: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _407: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _408: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _409: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _410: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _411: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _412: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _413: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _414: &[&str];               // in scope 0 at cita-chain/src/forward.rs:285:24: 285:41
    let mut _415: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _416: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _417: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _418: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:285:43: 285:53
    let _419: &jsonrpc_types::rpc_types::Filter; // in scope 0 at cita-chain/src/forward.rs:285:43: 285:53
    let _420: ();                        // in scope 0 at cita-chain/src/forward.rs:286:17: 286:81
    let mut _421: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:286:17: 286:81
    let mut _422: u64;                   // in scope 0 at cita-chain/src/forward.rs:286:40: 286:80
    let mut _423: usize;                 // in scope 0 at cita-chain/src/forward.rs:286:40: 286:73
    let mut _424: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:286:40: 286:73
    let _425: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:286:40: 286:73
    let mut _426: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:286:40: 286:73
    let mut _427: jsonrpc_types::rpc_types::Filter; // in scope 0 at cita-chain/src/forward.rs:286:62: 286:72
    let mut _429: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:290:36: 290:65
    let _430: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:290:36: 290:65
    let mut _431: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:290:36: 290:65
    let _432: ();                        // in scope 0 at cita-chain/src/forward.rs:291:17: 291:60
    let mut _433: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:291:17: 291:60
    let mut _434: u64;                   // in scope 0 at cita-chain/src/forward.rs:291:40: 291:59
    let mut _435: usize;                 // in scope 0 at cita-chain/src/forward.rs:291:40: 291:52
    let mut _438: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _439: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _440: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _441: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _442: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _443: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _444: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _445: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _446: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _447: &[&str];               // in scope 0 at cita-chain/src/forward.rs:295:24: 295:55
    let mut _448: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _449: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _450: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _451: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:295:57: 295:66
    let _452: &u64;                      // in scope 0 at cita-chain/src/forward.rs:295:57: 295:66
    let mut _454: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:296:25: 296:72
    let _455: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:296:25: 296:72
    let mut _456: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:296:25: 296:72
    let mut _457: usize;                 // in scope 0 at cita-chain/src/forward.rs:296:53: 296:71
    let _458: ();                        // in scope 0 at cita-chain/src/forward.rs:297:17: 297:49
    let mut _459: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:297:17: 297:49
    let mut _460: bool;                  // in scope 0 at cita-chain/src/forward.rs:297:47: 297:48
    let mut _463: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _464: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _465: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _466: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _467: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _468: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _469: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _470: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _471: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _472: &[&str];               // in scope 0 at cita-chain/src/forward.rs:301:24: 301:53
    let mut _473: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _474: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _475: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _476: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:301:55: 301:64
    let _477: &u64;                      // in scope 0 at cita-chain/src/forward.rs:301:55: 301:64
    let mut _479: std::option::Option<jsonrpc_types::rpc_types::FilterChanges>; // in scope 0 at cita-chain/src/forward.rs:302:27: 302:76
    let mut _480: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:302:27: 302:76
    let _481: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:302:27: 302:76
    let mut _482: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:302:27: 302:76
    let mut _483: usize;                 // in scope 0 at cita-chain/src/forward.rs:302:57: 302:75
    let mut _485: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _486: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _487: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _488: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _489: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _490: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _491: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _492: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _493: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _494: &[&str];               // in scope 0 at cita-chain/src/forward.rs:303:24: 303:38
    let mut _495: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _496: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _497: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _498: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:303:40: 303:43
    let _499: &jsonrpc_types::rpc_types::FilterChanges; // in scope 0 at cita-chain/src/forward.rs:303:40: 303:43
    let _500: ();                        // in scope 0 at cita-chain/src/forward.rs:304:17: 304:82
    let mut _501: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:304:17: 304:82
    let mut _502: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:304:45: 304:81
    let mut _503: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:304:45: 304:72
    let _504: &jsonrpc_types::rpc_types::FilterChanges; // in scope 0 at cita-chain/src/forward.rs:304:67: 304:71
    let mut _507: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _508: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _509: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _510: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _511: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _512: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _513: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _514: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _515: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _516: &[&str];               // in scope 0 at cita-chain/src/forward.rs:308:24: 308:49
    let mut _517: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _518: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _519: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _520: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:308:51: 308:60
    let _521: &u64;                      // in scope 0 at cita-chain/src/forward.rs:308:51: 308:60
    let mut _523: std::option::Option<std::vec::Vec<jsonrpc_types::rpc_types::Log>>; // in scope 0 at cita-chain/src/forward.rs:309:27: 311:57
    let mut _524: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:309:27: 311:57
    let _525: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:309:27: 311:57
    let mut _526: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:309:27: 311:57
    let mut _527: usize;                 // in scope 0 at cita-chain/src/forward.rs:311:38: 311:56
    let mut _529: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _530: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _531: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _532: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _533: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _534: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _535: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _536: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _537: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _538: &[&str];               // in scope 0 at cita-chain/src/forward.rs:313:24: 313:38
    let mut _539: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _540: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _541: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _542: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:313:40: 313:43
    let _543: &std::vec::Vec<jsonrpc_types::rpc_types::Log>; // in scope 0 at cita-chain/src/forward.rs:313:40: 313:43
    let _544: ();                        // in scope 0 at cita-chain/src/forward.rs:314:17: 314:79
    let mut _545: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:314:17: 314:79
    let mut _546: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:314:42: 314:78
    let mut _547: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:314:42: 314:69
    let _548: &std::vec::Vec<jsonrpc_types::rpc_types::Log>; // in scope 0 at cita-chain/src/forward.rs:314:64: 314:68
    let mut _551: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _552: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _553: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _554: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _555: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _556: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _557: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _558: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _559: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _560: &[&str];               // in scope 0 at cita-chain/src/forward.rs:318:24: 318:50
    let mut _561: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _562: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _563: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _564: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:318:52: 318:62
    let _565: &libproto::StateProof;     // in scope 0 at cita-chain/src/forward.rs:318:52: 318:62
    let _566: ();                        // in scope 0 at cita-chain/src/forward.rs:319:17: 321:30
    let mut _567: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:319:17: 320:73
    let mut _568: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:319:17: 320:73
    let mut _569: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:320:27: 320:72
    let mut _570: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:320:28: 320:65
    let mut _571: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _572: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _573: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _574: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:320:67: 320:71
    let mut _577: std::result::Result<jsonrpc_types::rpc_types::BlockNumber, serde_json::Error>; // in scope 0 at cita-chain/src/forward.rs:327:21: 327:56
    let mut _578: &str;                  // in scope 0 at cita-chain/src/forward.rs:327:42: 327:55
    let _579: &str;                      // in scope 0 at cita-chain/src/forward.rs:327:42: 327:55
    let _580: &std::string::String;      // in scope 0 at cita-chain/src/forward.rs:327:42: 327:55
    let _581: &str;                      // in scope 0 at cita-chain/src/forward.rs:327:64: 327:79
    let mut _582: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-chain/src/forward.rs:328:23: 328:77
    let mut _583: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:328:23: 328:77
    let _584: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:328:23: 328:77
    let mut _585: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:328:23: 328:77
    let mut _586: types::block_number::BlockTag; // in scope 0 at cita-chain/src/forward.rs:328:57: 328:76
    let mut _587: jsonrpc_types::rpc_types::BlockNumber; // in scope 0 at cita-chain/src/forward.rs:328:57: 328:69
    let mut _588: isize;                 // in scope 0 at cita-chain/src/forward.rs:329:21: 329:45
    let _590: ();                        // in scope 0 at cita-chain/src/forward.rs:330:25: 330:70
    let mut _591: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:330:25: 330:70
    let _592: ();                        // in scope 0 at cita-chain/src/forward.rs:333:25: 333:48
    let mut _593: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:333:25: 333:48
    let mut _595: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _596: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _597: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _598: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _599: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _600: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _601: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _602: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _603: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _604: &[&str];               // in scope 0 at cita-chain/src/forward.rs:339:24: 339:80
    let mut _607: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _608: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _609: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _610: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _611: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _612: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _613: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _614: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _615: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _616: &[&str];               // in scope 0 at cita-chain/src/forward.rs:343:24: 343:50
    let mut _617: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _618: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _619: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _620: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:343:52: 343:56
    let _621: &libproto::StorageKey;     // in scope 0 at cita-chain/src/forward.rs:343:52: 343:56
    let _622: ();                        // in scope 0 at cita-chain/src/forward.rs:344:17: 346:30
    let mut _623: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:344:17: 345:73
    let mut _624: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:344:17: 345:73
    let mut _625: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:345:27: 345:72
    let mut _626: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:345:28: 345:65
    let mut _627: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _628: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _629: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _630: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:345:67: 345:71
    let mut _632: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _633: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _634: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _635: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _636: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _637: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _638: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _639: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _640: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _641: &[&str];               // in scope 0 at cita-chain/src/forward.rs:351:24: 351:81
    let mut _643: libproto::Response;    // in scope 0 at cita-chain/src/forward.rs:354:28: 354:36
    let _644: ();                        // in scope 0 at cita-chain/src/forward.rs:355:9: 360:22
    let mut _645: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:355:9: 359:15
    let mut _646: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:355:9: 359:15
    let mut _647: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:356:19: 359:14
    let mut _648: std::string::String;   // in scope 0 at cita-chain/src/forward.rs:357:17: 357:55
    let mut _649: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _650: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _651: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _652: std::vec::Vec<u8>;     // in scope 0 at cita-chain/src/forward.rs:358:17: 358:40
    let mut _653: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:358:17: 358:31
    let mut _654: libproto::Message;     // in scope 0 at cita-chain/src/forward.rs:358:17: 358:20
    let mut _713: bool;                  // in scope 0 at cita-chain/src/forward.rs:146:21: 146:22
    let mut _714: bool;                  // in scope 0 at cita-chain/src/forward.rs:210:13: 210:14
    let mut _715: bool;                  // in scope 0 at cita-chain/src/forward.rs:222:18: 222:19
    let mut _716: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _717: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _718: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _719: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _720: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _721: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _722: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _723: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _724: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _725: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _726: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _727: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _728: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _729: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _730: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _731: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _732: bool;                  // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _733: bool;                  // in scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    let mut _734: bool;                  // in scope 0 at cita-chain/src/forward.rs:287:13: 287:14
    let mut _735: bool;                  // in scope 0 at cita-chain/src/forward.rs:164:25: 164:26
    let mut _736: bool;                  // in scope 0 at cita-chain/src/forward.rs:136:33: 136:34
    let mut _737: bool;                  // in scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    let mut _738: bool;                  // in scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    let mut _739: bool;                  // in scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    let mut _740: isize;                 // in scope 0 at cita-chain/src/forward.rs:210:13: 210:14
    let mut _741: isize;                 // in scope 0 at cita-chain/src/forward.rs:222:18: 222:19
    let mut _742: isize;                 // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _743: isize;                 // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    let mut _744: isize;                 // in scope 0 at cita-chain/src/forward.rs:210:13: 210:14
    let mut _745: isize;                 // in scope 0 at cita-chain/src/forward.rs:353:10: 353:11
    scope 1 {
        debug response => _4;            // in scope 1 at cita-chain/src/forward.rs:116:13: 116:25
        let _18: std::string::String;    // in scope 1 at cita-chain/src/forward.rs:124:36: 124:39
        let _67: std::string::String;    // in scope 1 at cita-chain/src/forward.rs:154:38: 154:50
        let _107: std::vec::Vec<u8>;     // in scope 1 at cita-chain/src/forward.rs:178:34: 178:38
        let _122: std::vec::Vec<u8>;     // in scope 1 at cita-chain/src/forward.rs:189:40: 189:44
        let _137: std::vec::Vec<u8>;     // in scope 1 at cita-chain/src/forward.rs:200:42: 200:46
        let _158: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:212:29: 212:36
        let _199: libproto::Call;        // in scope 1 at cita-chain/src/forward.rs:225:27: 225:31
        let _225: libproto::Call;        // in scope 1 at cita-chain/src/forward.rs:233:37: 233:41
        let _251: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:241:40: 241:48
        let _277: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:249:32: 249:38
        let _303: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:257:27: 257:39
        let _329: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:265:26: 265:37
        let _355: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:273:30: 273:45
        let _381: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:281:33: 281:43
        let _428: usize;                 // in scope 1 at cita-chain/src/forward.rs:290:21: 290:33
        let _436: u64;                   // in scope 1 at cita-chain/src/forward.rs:294:39: 294:48
        let _461: u64;                   // in scope 1 at cita-chain/src/forward.rs:300:37: 300:46
        let _505: u64;                   // in scope 1 at cita-chain/src/forward.rs:307:34: 307:43
        let _549: libproto::StateProof;  // in scope 1 at cita-chain/src/forward.rs:317:34: 317:44
        let _575: std::string::String;   // in scope 1 at cita-chain/src/forward.rs:325:42: 325:54
        let _594: log::Level;            // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _605: libproto::StorageKey;  // in scope 1 at cita-chain/src/forward.rs:342:34: 342:38
        let _631: log::Level;            // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _642: libproto::Message;     // in scope 1 at cita-chain/src/forward.rs:354:13: 354:16
        scope 2 {
            debug rpc => _18;            // in scope 2 at cita-chain/src/forward.rs:124:36: 124:39
            let _25: jsonrpc_types::rpc_types::BlockParamsByHash; // in scope 2 at cita-chain/src/forward.rs:127:24: 127:29
            let _52: serde_json::Error;  // in scope 2 at cita-chain/src/forward.rs:147:25: 147:28
            scope 3 {
                debug param => _25;      // in scope 3 at cita-chain/src/forward.rs:127:24: 127:29
                let _26: std::vec::Vec<u8>; // in scope 3 at cita-chain/src/forward.rs:128:29: 128:33
                scope 4 {
                    debug hash => _26;   // in scope 4 at cita-chain/src/forward.rs:128:29: 128:33
                    let _27: bool;       // in scope 4 at cita-chain/src/forward.rs:129:29: 129:40
                    scope 5 {
                        debug include_txs => _27; // in scope 5 at cita-chain/src/forward.rs:129:29: 129:40
                        let _36: types::block::Block; // in scope 5 at cita-chain/src/forward.rs:131:34: 131:39
                        scope 6 {
                            debug block => _36; // in scope 6 at cita-chain/src/forward.rs:131:34: 131:39
                            let _37: jsonrpc_types::rpc_types::RpcBlock; // in scope 6 at cita-chain/src/forward.rs:132:37: 132:46
                            scope 7 {
                                debug rpc_block => _37; // in scope 7 at cita-chain/src/forward.rs:132:37: 132:46
                                scope 8 {
                                }
                            }
                        }
                    }
                }
            }
            scope 9 {
                debug err => _52;        // in scope 9 at cita-chain/src/forward.rs:147:25: 147:28
                let _56: std::string::String; // in scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                let mut _655: &[&str; 1]; // in scope 9 at cita-chain/src/forward.rs:148:52: 148:58
                scope 10 {
                    debug res => _56;    // in scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                }
            }
        }
        scope 11 {
            debug block_height => _67;   // in scope 11 at cita-chain/src/forward.rs:154:38: 154:50
            let _68: jsonrpc_types::rpc_types::BlockParamsByNumber; // in scope 11 at cita-chain/src/forward.rs:155:21: 155:33
            scope 12 {
                debug block_height => _68; // in scope 12 at cita-chain/src/forward.rs:155:21: 155:33
                let _74: bool;           // in scope 12 at cita-chain/src/forward.rs:157:21: 157:32
                scope 13 {
                    debug include_txs => _74; // in scope 13 at cita-chain/src/forward.rs:157:21: 157:32
                    let _82: types::block::Block; // in scope 13 at cita-chain/src/forward.rs:159:26: 159:31
                    scope 14 {
                        debug block => _82; // in scope 14 at cita-chain/src/forward.rs:159:26: 159:31
                        let _83: jsonrpc_types::rpc_types::RpcBlock; // in scope 14 at cita-chain/src/forward.rs:160:29: 160:38
                        scope 15 {
                            debug rpc_block => _83; // in scope 15 at cita-chain/src/forward.rs:160:29: 160:38
                            scope 16 {
                            }
                        }
                    }
                }
            }
        }
        scope 17 {
            debug hash => _107;          // in scope 17 at cita-chain/src/forward.rs:178:34: 178:38
            let _117: libproto::FullTransaction; // in scope 17 at cita-chain/src/forward.rs:180:26: 180:28
            scope 18 {
                debug ts => _117;        // in scope 18 at cita-chain/src/forward.rs:180:26: 180:28
            }
        }
        scope 19 {
            debug hash => _122;          // in scope 19 at cita-chain/src/forward.rs:189:40: 189:44
            let _132: std::vec::Vec<u8>; // in scope 19 at cita-chain/src/forward.rs:191:26: 191:31
            scope 20 {
                debug proof => _132;     // in scope 20 at cita-chain/src/forward.rs:191:26: 191:31
            }
        }
        scope 21 {
            debug hash => _137;          // in scope 21 at cita-chain/src/forward.rs:200:42: 200:46
            let _138: cita_types::H256;  // in scope 21 at cita-chain/src/forward.rs:201:21: 201:28
            scope 22 {
                debug tx_hash => _138;   // in scope 22 at cita-chain/src/forward.rs:201:21: 201:28
                let _142: std::option::Option<types::receipt::RichReceipt>; // in scope 22 at cita-chain/src/forward.rs:202:21: 202:28
                scope 23 {
                    debug receipt => _142; // in scope 23 at cita-chain/src/forward.rs:202:21: 202:28
                    scope 24 {
                        debug receipt => _148; // in scope 24 at cita-chain/src/forward.rs:203:29: 203:36
                        let _148: types::receipt::RichReceipt; // in scope 24 at cita-chain/src/forward.rs:203:29: 203:36
                        let _149: jsonrpc_types::rpc_types::Receipt; // in scope 24 at cita-chain/src/forward.rs:204:25: 204:36
                        scope 25 {
                            debug rpc_receipt => _149; // in scope 25 at cita-chain/src/forward.rs:204:25: 204:36
                            let _150: std::string::String; // in scope 25 at cita-chain/src/forward.rs:205:25: 205:35
                            scope 26 {
                                debug serialized => _150; // in scope 26 at cita-chain/src/forward.rs:205:25: 205:35
                            }
                        }
                    }
                }
            }
        }
        scope 27 {
            debug encoded => _158;       // in scope 27 at cita-chain/src/forward.rs:212:29: 212:36
            let _159: log::Level;        // in scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 28 {
                debug lvl => _159;       // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _656: &(&str, &str, &str, u32); // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _657: &[&str; 1]; // in scope 28 at cita-chain/src/forward.rs:213:24: 213:38
                let mut _658: &log::LevelFilter; // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 29 {
                debug rpc_filter => _183; // in scope 29 at cita-chain/src/forward.rs:214:27: 214:37
                let _183: jsonrpc_types::rpc_types::Filter; // in scope 29 at cita-chain/src/forward.rs:214:27: 214:37
                let _184: types::filter::Filter; // in scope 29 at cita-chain/src/forward.rs:218:25: 218:31
                scope 30 {
                    debug filter => _184; // in scope 30 at cita-chain/src/forward.rs:218:25: 218:31
                    let _185: std::vec::Vec<types::log::LocalizedLog>; // in scope 30 at cita-chain/src/forward.rs:219:25: 219:29
                    scope 31 {
                        debug logs => _185; // in scope 31 at cita-chain/src/forward.rs:219:25: 219:29
                        let _190: std::vec::Vec<jsonrpc_types::rpc_types::Log>; // in scope 31 at cita-chain/src/forward.rs:220:25: 220:33
                        scope 32 {
                            debug rpc_logs => _190; // in scope 32 at cita-chain/src/forward.rs:220:25: 220:33
                        }
                    }
                }
            }
        }
        scope 33 {
            debug call => _199;          // in scope 33 at cita-chain/src/forward.rs:225:27: 225:31
            let _200: log::Level;        // in scope 33 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 34 {
                debug lvl => _200;       // in scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _659: &(&str, &str, &str, u32); // in scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _660: &[&str; 1]; // in scope 34 at cita-chain/src/forward.rs:226:24: 226:43
                let mut _661: &log::LevelFilter; // in scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 35 {
            debug call => _225;          // in scope 35 at cita-chain/src/forward.rs:233:37: 233:41
            let _226: log::Level;        // in scope 35 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 36 {
                debug lvl => _226;       // in scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _662: &(&str, &str, &str, u32); // in scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _663: &[&str; 1]; // in scope 36 at cita-chain/src/forward.rs:234:24: 234:45
                let mut _664: &log::LevelFilter; // in scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 37 {
            debug tx_count => _251;      // in scope 37 at cita-chain/src/forward.rs:241:40: 241:48
            let _252: log::Level;        // in scope 37 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 38 {
                debug lvl => _252;       // in scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _665: &(&str, &str, &str, u32); // in scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _666: &[&str; 1]; // in scope 38 at cita-chain/src/forward.rs:242:24: 242:69
                let mut _667: &log::LevelFilter; // in scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 39 {
            debug number => _277;        // in scope 39 at cita-chain/src/forward.rs:249:32: 249:38
            let _278: log::Level;        // in scope 39 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 40 {
                debug lvl => _278;       // in scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _668: &(&str, &str, &str, u32); // in scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _669: &[&str; 1]; // in scope 40 at cita-chain/src/forward.rs:250:24: 250:60
                let mut _670: &log::LevelFilter; // in scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 41 {
            debug code_content => _303;  // in scope 41 at cita-chain/src/forward.rs:257:27: 257:39
            let _304: log::Level;        // in scope 41 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 42 {
                debug lvl => _304;       // in scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _671: &(&str, &str, &str, u32); // in scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _672: &[&str; 1]; // in scope 42 at cita-chain/src/forward.rs:258:24: 258:57
                let mut _673: &log::LevelFilter; // in scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 43 {
            debug abi_content => _329;   // in scope 43 at cita-chain/src/forward.rs:265:26: 265:37
            let _330: log::Level;        // in scope 43 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 44 {
                debug lvl => _330;       // in scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _674: &(&str, &str, &str, u32); // in scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _675: &[&str; 1]; // in scope 44 at cita-chain/src/forward.rs:266:24: 266:56
                let mut _676: &log::LevelFilter; // in scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 45 {
            debug balance_content => _355; // in scope 45 at cita-chain/src/forward.rs:273:30: 273:45
            let _356: log::Level;        // in scope 45 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 46 {
                debug lvl => _356;       // in scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _677: &(&str, &str, &str, u32); // in scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _678: &[&str; 1]; // in scope 46 at cita-chain/src/forward.rs:274:24: 274:60
                let mut _679: &log::LevelFilter; // in scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 47 {
            debug new_filter => _381;    // in scope 47 at cita-chain/src/forward.rs:281:33: 281:43
            let _382: log::Level;        // in scope 47 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _398: jsonrpc_types::rpc_types::Filter; // in scope 47 at cita-chain/src/forward.rs:283:21: 283:31
            scope 48 {
                debug lvl => _382;       // in scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _683: &(&str, &str, &str, u32); // in scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _684: &[&str; 1]; // in scope 48 at cita-chain/src/forward.rs:282:24: 282:41
                let mut _685: &log::LevelFilter; // in scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 49 {
                debug new_filter => _398; // in scope 49 at cita-chain/src/forward.rs:283:21: 283:31
                let _404: log::Level;    // in scope 49 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 50 {
                    debug lvl => _404;   // in scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _680: &(&str, &str, &str, u32); // in scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _681: &[&str; 1]; // in scope 50 at cita-chain/src/forward.rs:285:24: 285:41
                    let mut _682: &log::LevelFilter; // in scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
        scope 51 {
            debug block_filter => _428;  // in scope 51 at cita-chain/src/forward.rs:290:21: 290:33
        }
        scope 52 {
            debug filter_id => _436;     // in scope 52 at cita-chain/src/forward.rs:294:39: 294:48
            let _437: log::Level;        // in scope 52 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _453: bool;              // in scope 52 at cita-chain/src/forward.rs:296:21: 296:22
            scope 53 {
                debug lvl => _437;       // in scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _686: &(&str, &str, &str, u32); // in scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _687: &[&str; 1]; // in scope 53 at cita-chain/src/forward.rs:295:24: 295:55
                let mut _688: &log::LevelFilter; // in scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 54 {
                debug b => _453;         // in scope 54 at cita-chain/src/forward.rs:296:21: 296:22
            }
        }
        scope 55 {
            debug filter_id => _461;     // in scope 55 at cita-chain/src/forward.rs:300:37: 300:46
            let _462: log::Level;        // in scope 55 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _478: jsonrpc_types::rpc_types::FilterChanges; // in scope 55 at cita-chain/src/forward.rs:302:21: 302:24
            scope 56 {
                debug lvl => _462;       // in scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _692: &(&str, &str, &str, u32); // in scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _693: &[&str; 1]; // in scope 56 at cita-chain/src/forward.rs:301:24: 301:53
                let mut _694: &log::LevelFilter; // in scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 57 {
                debug log => _478;       // in scope 57 at cita-chain/src/forward.rs:302:21: 302:24
                let _484: log::Level;    // in scope 57 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 58 {
                    debug lvl => _484;   // in scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _689: &(&str, &str, &str, u32); // in scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _690: &[&str; 1]; // in scope 58 at cita-chain/src/forward.rs:303:24: 303:38
                    let mut _691: &log::LevelFilter; // in scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
        scope 59 {
            debug filter_id => _505;     // in scope 59 at cita-chain/src/forward.rs:307:34: 307:43
            let _506: log::Level;        // in scope 59 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _522: std::vec::Vec<jsonrpc_types::rpc_types::Log>; // in scope 59 at cita-chain/src/forward.rs:309:21: 309:24
            scope 60 {
                debug lvl => _506;       // in scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _698: &(&str, &str, &str, u32); // in scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _699: &[&str; 1]; // in scope 60 at cita-chain/src/forward.rs:308:24: 308:49
                let mut _700: &log::LevelFilter; // in scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 61 {
                debug log => _522;       // in scope 61 at cita-chain/src/forward.rs:309:21: 309:24
                let _528: log::Level;    // in scope 61 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 62 {
                    debug lvl => _528;   // in scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _695: &(&str, &str, &str, u32); // in scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _696: &[&str; 1]; // in scope 62 at cita-chain/src/forward.rs:313:24: 313:38
                    let mut _697: &log::LevelFilter; // in scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
        scope 63 {
            debug state_info => _549;    // in scope 63 at cita-chain/src/forward.rs:317:34: 317:44
            let _550: log::Level;        // in scope 63 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 64 {
                debug lvl => _550;       // in scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _701: &(&str, &str, &str, u32); // in scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _702: &[&str; 1]; // in scope 64 at cita-chain/src/forward.rs:318:24: 318:50
                let mut _703: &log::LevelFilter; // in scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 65 {
            debug block_height => _575;  // in scope 65 at cita-chain/src/forward.rs:325:42: 325:54
            let _576: jsonrpc_types::rpc_types::BlockNumber; // in scope 65 at cita-chain/src/forward.rs:326:21: 326:33
            scope 66 {
                debug block_height => _576; // in scope 66 at cita-chain/src/forward.rs:326:21: 326:33
                let _589: std::vec::Vec<u8>; // in scope 66 at cita-chain/src/forward.rs:329:26: 329:44
                scope 67 {
                    debug block_header_bytes => _589; // in scope 67 at cita-chain/src/forward.rs:329:26: 329:44
                }
            }
        }
        scope 68 {
            debug lvl => _594;           // in scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _704: &(&str, &str, &str, u32); // in scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _705: &[&str; 1];    // in scope 68 at cita-chain/src/forward.rs:339:24: 339:80
            let mut _706: &log::LevelFilter; // in scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 69 {
            debug skey => _605;          // in scope 69 at cita-chain/src/forward.rs:342:34: 342:38
            let _606: log::Level;        // in scope 69 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 70 {
                debug lvl => _606;       // in scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _707: &(&str, &str, &str, u32); // in scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _708: &[&str; 1]; // in scope 70 at cita-chain/src/forward.rs:343:24: 343:50
                let mut _709: &log::LevelFilter; // in scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 71 {
            debug lvl => _631;           // in scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _710: &(&str, &str, &str, u32); // in scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _711: &[&str; 1];    // in scope 71 at cita-chain/src/forward.rs:351:24: 351:81
            let mut _712: &log::LevelFilter; // in scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 72 {
            debug msg => _642;           // in scope 72 at cita-chain/src/forward.rs:354:13: 354:16
        }
    }

    bb0: {
        _717 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _720 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _723 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _726 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _736 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _714 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _713 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _729 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _731 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _732 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _735 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _737 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _733 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _716 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _718 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _721 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _724 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _715 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _728 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _734 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _739 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _719 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _722 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _725 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _727 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _730 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _738 = const false;              // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _739 = const true;               // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _738 = const true;               // scope 0 at cita-chain/src/forward.rs:116:13: 116:25
        _4 = libproto::Response::new() -> [return: bb1, unwind: bb513]; // scope 0 at cita-chain/src/forward.rs:116:28: 116:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:116:28: 116:51
                                         // + literal: Const { ty: fn() -> libproto::Response {libproto::Response::new}, val: Value(<ZST>) }
    }

    bb1: {
        _737 = const true;               // scope 1 at cita-chain/src/forward.rs:117:9: 117:55
        _6 = &mut _4;                    // scope 1 at cita-chain/src/forward.rs:117:9: 117:55
        _8 = &mut _2;                    // scope 1 at cita-chain/src/forward.rs:117:33: 117:54
        _7 = libproto::Request::take_request_id(move _8) -> [return: bb2, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:117:33: 117:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:117:37: 117:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Request) -> Vec<u8> {libproto::Request::take_request_id}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = libproto::Response::set_request_id(move _6, move _7) -> [return: bb3, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:117:9: 117:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:117:18: 117:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_request_id}, val: Value(<ZST>) }
    }

    bb3: {
        _739 = const false;              // scope 1 at cita-chain/src/forward.rs:118:15: 118:22
        _10 = move (_2.1: std::option::Option<libproto::Request_oneof_req>); // scope 1 at cita-chain/src/forward.rs:118:15: 118:22
        _9 = Option::<Request_oneof_req>::unwrap(move _10) -> [return: bb4, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:118:15: 118:31
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:118:23: 118:29
                                         // + literal: Const { ty: fn(Option<Request_oneof_req>) -> Request_oneof_req {Option::<Request_oneof_req>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _716 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _717 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _718 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _719 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _720 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _721 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _722 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _723 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _724 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _725 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _726 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _727 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _728 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _729 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _730 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _731 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _732 = const true;               // scope 1 at cita-chain/src/forward.rs:118:30: 118:31
        _11 = discriminant(_9);          // scope 1 at cita-chain/src/forward.rs:118:15: 118:31
        switchInt(move _11) -> [0: bb6, 1: bb9, 2: bb38, 3: bb62, 4: bb334, 6: bb114, 7: bb89, 8: bb78, 9: bb142, 10: bb170, 11: bb184, 12: bb212, 13: bb239, 14: bb242, 15: bb255, 16: bb282, 18: bb334, 19: bb70, 20: bb156, 21: bb198, 22: bb309, 23: bb323, 24: bb343, 27: bb128, otherwise: bb5]; // scope 1 at cita-chain/src/forward.rs:118:9: 118:31
    }

    bb5: {
        _631 = log::Level::Error;        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _634 = &_631;                    // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _712 = const _;                  // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[57])) }
        _633 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _634, _712) -> [return: bb360, unwind: bb509]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = &mut _4;                   // scope 1 at cita-chain/src/forward.rs:121:17: 121:75
        _17 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 1 at cita-chain/src/forward.rs:121:43: 121:74
        _16 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _17) -> [return: bb7, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:121:43: 121:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:121:43: 121:74
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = _16;                       // scope 1 at cita-chain/src/forward.rs:121:43: 121:74
        _14 = core::libchain::chain::Chain::get_current_height(move _15) -> [return: bb8, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:121:43: 121:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:121:54: 121:72
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb8: {
        _12 = libproto::Response::set_block_number(move _13, move _14) -> [return: bb517, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:121:17: 121:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:121:26: 121:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, u64) {libproto::Response::set_block_number}, val: Value(<ZST>) }
    }

    bb9: {
        _732 = const false;              // scope 1 at cita-chain/src/forward.rs:124:36: 124:39
        _18 = move ((_9 as block_by_hash).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:124:36: 124:39
        _23 = &_18;                      // scope 2 at cita-chain/src/forward.rs:126:65: 126:69
        _22 = <std::string::String as Deref>::deref(_23) -> [return: bb10, unwind: bb402]; // scope 2 at cita-chain/src/forward.rs:126:65: 126:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:126:65: 126:69
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb10: {
        _21 = _22;                       // scope 2 at cita-chain/src/forward.rs:126:65: 126:69
        _20 = serde_json::from_str::<'_, BlockParamsByHash>(move _21) -> [return: bb11, unwind: bb402]; // scope 2 at cita-chain/src/forward.rs:126:23: 126:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:126:23: 126:64
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> Result<BlockParamsByHash, serde_json::Error> {serde_json::from_str::<'_, BlockParamsByHash>}, val: Value(<ZST>) }
    }

    bb11: {
        _24 = discriminant(_20);         // scope 2 at cita-chain/src/forward.rs:126:23: 126:70
        switchInt(move _24) -> [0: bb14, 1: bb12, otherwise: bb13]; // scope 2 at cita-chain/src/forward.rs:126:17: 126:70
    }

    bb12: {
        _52 = move ((_20 as Err).0: serde_json::Error); // scope 2 at cita-chain/src/forward.rs:147:25: 147:28
        _54 = &mut _4;                   // scope 9 at cita-chain/src/forward.rs:148:25: 148:65
        _655 = const _;                  // scope 9 at cita-chain/src/forward.rs:148:52: 148:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:148:52: 148:58
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[0])) }
        _58 = _655 as &[&str] (Pointer(Unsize)); // scope 9 at cita-chain/src/forward.rs:148:52: 148:58
        _63 = &_52;                      // scope 9 at cita-chain/src/forward.rs:148:60: 148:63
        _62 = core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>(_63) -> [return: bb32, unwind: bb398]; // scope 9 at cita-chain/src/forward.rs:148:60: 148:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:148:60: 148:63
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b serde_json::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>}, val: Value(<ZST>) }
    }

    bb13: {
        unreachable;                     // scope 2 at cita-chain/src/forward.rs:126:23: 126:70
    }

    bb14: {
        _25 = move ((_20 as Ok).0: jsonrpc_types::rpc_types::BlockParamsByHash); // scope 2 at cita-chain/src/forward.rs:127:24: 127:29
        _713 = const true;               // scope 3 at cita-chain/src/forward.rs:128:36: 128:46
        _26 = move (_25.0: std::vec::Vec<u8>); // scope 3 at cita-chain/src/forward.rs:128:36: 128:46
        _27 = (_25.1: bool);             // scope 4 at cita-chain/src/forward.rs:129:43: 129:60
        _31 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
        _30 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _31) -> [return: bb15, unwind: bb401]; // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:130:31: 130:84
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = _30;                       // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
        _34 = &_26;                      // scope 5 at cita-chain/src/forward.rs:130:67: 130:82
        _33 = Vec::<u8>::as_slice(move _34) -> [return: bb16, unwind: bb401]; // scope 5 at cita-chain/src/forward.rs:130:67: 130:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:130:72: 130:80
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb16: {
        _32 = <H256 as From<&[u8]>>::from(move _33) -> [return: bb17, unwind: bb401]; // scope 5 at cita-chain/src/forward.rs:130:56: 130:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:130:56: 130:66
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[u8]) -> H256 {<H256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb17: {
        _28 = core::libchain::chain::Chain::block_by_hash(move _29, move _32) -> [return: bb18, unwind: bb401]; // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:130:42: 130:55
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, H256) -> Option<types::block::Block> {core::libchain::chain::Chain::block_by_hash}, val: Value(<ZST>) }
    }

    bb18: {
        _35 = discriminant(_28);         // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
        switchInt(move _35) -> [0: bb19, 1: bb21, otherwise: bb20]; // scope 5 at cita-chain/src/forward.rs:130:25: 130:84
    }

    bb19: {
        _51 = &mut _4;                   // scope 5 at cita-chain/src/forward.rs:144:37: 144:60
        _19 = libproto::Response::set_none(move _51, const true) -> [return: bb518, unwind: bb473]; // scope 5 at cita-chain/src/forward.rs:144:37: 144:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:144:46: 144:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb20: {
        unreachable;                     // scope 5 at cita-chain/src/forward.rs:130:31: 130:84
    }

    bb21: {
        _36 = move ((_28 as Some).0: types::block::Block); // scope 5 at cita-chain/src/forward.rs:131:34: 131:39
        _713 = const false;              // scope 6 at cita-chain/src/forward.rs:133:37: 133:41
        _736 = const true;               // scope 6 at cita-chain/src/forward.rs:133:37: 133:41
        _38 = move _26;                  // scope 6 at cita-chain/src/forward.rs:133:37: 133:41
        _42 = &_36;                      // scope 6 at cita-chain/src/forward.rs:135:37: 135:53
        _41 = types::block::Block::protobuf(move _42) -> [return: bb22, unwind: bb471]; // scope 6 at cita-chain/src/forward.rs:135:37: 135:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:135:43: 135:51
                                         // + literal: Const { ty: for<'a> fn(&'a types::block::Block) -> libproto::Block {types::block::Block::protobuf}, val: Value(<ZST>) }
    }

    bb22: {
        _40 = <libproto::Block as libproto::TryInto<Vec<u8>>>::try_into(move _41) -> [return: bb23, unwind: bb471]; // scope 6 at cita-chain/src/forward.rs:135:37: 135:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:135:54: 135:62
                                         // + literal: Const { ty: fn(libproto::Block) -> Result<Vec<u8>, <libproto::Block as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Block as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb23: {
        _39 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _40) -> [return: bb24, unwind: bb471]; // scope 6 at cita-chain/src/forward.rs:135:37: 135:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:135:65: 135:71
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb24: {
        _736 = const false;              // scope 6 at cita-chain/src/forward.rs:132:49: 136:34
        _37 = RpcBlock::new(move _38, _27, move _39) -> [return: bb25, unwind: bb471]; // scope 6 at cita-chain/src/forward.rs:132:49: 136:34
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:132:49: 132:62
                                         // + literal: Const { ty: fn(Vec<u8>, bool, Vec<u8>) -> RpcBlock {RpcBlock::new}, val: Value(<ZST>) }
    }

    bb25: {
        _736 = const false;              // scope 6 at cita-chain/src/forward.rs:136:33: 136:34
        _46 = &_37;                      // scope 7 at cita-chain/src/forward.rs:137:63: 137:73
        _45 = serde_json::to_string::<RpcBlock>(_46) -> [return: bb26, unwind: bb399]; // scope 7 at cita-chain/src/forward.rs:137:41: 137:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:137:41: 137:62
                                         // + literal: Const { ty: for<'a> fn(&'a RpcBlock) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<RpcBlock>}, val: Value(<ZST>) }
    }

    bb26: {
        _48 = &mut _4;                   // scope 7 at cita-chain/src/forward.rs:138:42: 138:73
        _47 = [closure@cita-chain/src/forward.rs:138:42: 138:48] { response: move _48 }; // scope 7 at cita-chain/src/forward.rs:138:42: 138:73
                                         // closure
                                         // + def_id: DefId(0:67 ~ cita_chain[3b40]::forward::{impl#0}::reply_request::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::string::String,)),
                                         //     (&mut libproto::Response,),
                                         // ]
        _44 = Result::<std::string::String, serde_json::Error>::map::<(), [closure@cita-chain/src/forward.rs:138:42: 138:48]>(move _45, move _47) -> [return: bb27, unwind: bb399]; // scope 7 at cita-chain/src/forward.rs:137:41: 138:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:138:38: 138:41
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>, [closure@cita-chain/src/forward.rs:138:42: 138:48]) -> Result<(), serde_json::Error> {Result::<std::string::String, serde_json::Error>::map::<(), [closure@cita-chain/src/forward.rs:138:42: 138:48]>}, val: Value(<ZST>) }
    }

    bb27: {
        _50 = &mut _4;                   // scope 7 at cita-chain/src/forward.rs:139:46: 142:38
        _49 = [closure@cita-chain/src/forward.rs:139:46: 139:51] { response: move _50 }; // scope 7 at cita-chain/src/forward.rs:139:46: 142:38
                                         // closure
                                         // + def_id: DefId(0:68 ~ cita_chain[3b40]::forward::{impl#0}::reply_request::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((serde_json::Error,)),
                                         //     (&mut libproto::Response,),
                                         // ]
        _43 = Result::<(), serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:139:46: 139:51]>(move _44, move _49) -> [return: bb28, unwind: bb399]; // scope 7 at cita-chain/src/forward.rs:137:41: 142:39
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:139:38: 139:45
                                         // + literal: Const { ty: fn(Result<(), serde_json::Error>, [closure@cita-chain/src/forward.rs:139:46: 139:51]) -> Result<(), ()> {Result::<(), serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:139:46: 139:51]>}, val: Value(<ZST>) }
    }

    bb28: {
        drop(_37) -> [return: bb29, unwind: bb400]; // scope 6 at cita-chain/src/forward.rs:143:29: 143:30
    }

    bb29: {
        drop(_36) -> [return: bb30, unwind: bb473]; // scope 5 at cita-chain/src/forward.rs:143:29: 143:30
    }

    bb30: {
        switchInt(_713) -> [0: bb31, otherwise: bb405]; // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
    }

    bb31: {
        _713 = const false;              // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
        goto -> bb406;                   // scope 2 at cita-chain/src/forward.rs:151:18: 151:19
    }

    bb32: {
        _61 = [move _62];                // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _60 = &_61;                      // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _59 = _60 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _57 = Arguments::<'_>::new_v1(move _58, move _59) -> [return: bb33, unwind: bb398]; // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb33: {
        _56 = format(move _57) -> [return: bb34, unwind: bb398]; // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb34: {
        _55 = move _56;                  // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _53 = libproto::Response::set_block(move _54, move _55) -> [return: bb35, unwind: bb398]; // scope 9 at cita-chain/src/forward.rs:148:25: 148:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:148:34: 148:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_block}, val: Value(<ZST>) }
    }

    bb35: {
        _65 = &mut _4;                   // scope 9 at cita-chain/src/forward.rs:149:25: 149:68
        _66 = error::ErrorCode::query_error() -> [return: bb36, unwind: bb398]; // scope 9 at cita-chain/src/forward.rs:149:43: 149:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:149:43: 149:65
                                         // + literal: Const { ty: fn() -> i64 {error::ErrorCode::query_error}, val: Value(<ZST>) }
    }

    bb36: {
        _64 = libproto::Response::set_code(move _65, move _66) -> [return: bb37, unwind: bb398]; // scope 9 at cita-chain/src/forward.rs:149:25: 149:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:149:34: 149:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb37: {
        drop(_52) -> [return: bb406, unwind: bb402]; // scope 2 at cita-chain/src/forward.rs:150:21: 150:22
    }

    bb38: {
        _731 = const false;              // scope 1 at cita-chain/src/forward.rs:154:38: 154:50
        _67 = move ((_9 as block_by_height).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:154:38: 154:50
        _72 = &_67;                      // scope 11 at cita-chain/src/forward.rs:156:42: 156:55
        _71 = <std::string::String as Deref>::deref(_72) -> [return: bb39, unwind: bb397]; // scope 11 at cita-chain/src/forward.rs:156:42: 156:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:156:42: 156:55
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb39: {
        _70 = _71;                       // scope 11 at cita-chain/src/forward.rs:156:42: 156:55
        _69 = serde_json::from_str::<'_, BlockParamsByNumber>(move _70) -> [return: bb40, unwind: bb397]; // scope 11 at cita-chain/src/forward.rs:156:21: 156:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:156:21: 156:41
                                         // + literal: Const { ty: fn(&str) -> Result<BlockParamsByNumber, serde_json::Error> {serde_json::from_str::<'_, BlockParamsByNumber>}, val: Value(<ZST>) }
    }

    bb40: {
        _73 = const "Invalid param";     // scope 11 at cita-chain/src/forward.rs:156:64: 156:79
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:156:64: 156:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _68 = Result::<BlockParamsByNumber, serde_json::Error>::expect(move _69, _73) -> [return: bb41, unwind: bb397]; // scope 11 at cita-chain/src/forward.rs:156:21: 156:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:156:57: 156:63
                                         // + literal: Const { ty: for<'a> fn(Result<BlockParamsByNumber, serde_json::Error>, &'a str) -> BlockParamsByNumber {Result::<BlockParamsByNumber, serde_json::Error>::expect}, val: Value(<ZST>) }
    }

    bb41: {
        _74 = (_68.1: bool);             // scope 12 at cita-chain/src/forward.rs:157:35: 157:59
        _78 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
        _77 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _78) -> [return: bb42, unwind: bb397]; // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:158:23: 158:69
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb42: {
        _76 = _77;                       // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
        _80 = move (_68.0: jsonrpc_types::rpc_types::BlockNumber); // scope 13 at cita-chain/src/forward.rs:158:40: 158:61
        _79 = <jsonrpc_types::rpc_types::BlockNumber as Into<types::block_number::BlockTag>>::into(move _80) -> [return: bb43, unwind: bb397]; // scope 13 at cita-chain/src/forward.rs:158:40: 158:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:158:62: 158:66
                                         // + literal: Const { ty: fn(jsonrpc_types::rpc_types::BlockNumber) -> types::block_number::BlockTag {<jsonrpc_types::rpc_types::BlockNumber as Into<types::block_number::BlockTag>>::into}, val: Value(<ZST>) }
    }

    bb43: {
        _75 = core::libchain::chain::Chain::block(move _76, move _79) -> [return: bb44, unwind: bb397]; // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:158:34: 158:39
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, types::block_number::BlockTag) -> Option<types::block::Block> {core::libchain::chain::Chain::block}, val: Value(<ZST>) }
    }

    bb44: {
        _81 = discriminant(_75);         // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
        switchInt(move _81) -> [0: bb45, 1: bb47, otherwise: bb46]; // scope 13 at cita-chain/src/forward.rs:158:17: 158:69
    }

    bb45: {
        _106 = &mut _4;                  // scope 13 at cita-chain/src/forward.rs:173:25: 173:48
        _105 = libproto::Response::set_none(move _106, const true) -> [return: bb519, unwind: bb397]; // scope 13 at cita-chain/src/forward.rs:173:25: 173:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:173:34: 173:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb46: {
        unreachable;                     // scope 13 at cita-chain/src/forward.rs:158:23: 158:69
    }

    bb47: {
        _82 = move ((_75 as Some).0: types::block::Block); // scope 13 at cita-chain/src/forward.rs:159:26: 159:31
        _92 = &_82;                      // scope 14 at cita-chain/src/forward.rs:161:29: 161:41
        _91 = <types::block::Block as Deref>::deref(move _92) -> [return: bb48, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:161:29: 161:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:161:29: 161:41
                                         // + literal: Const { ty: for<'a> fn(&'a types::block::Block) -> &'a <types::block::Block as Deref>::Target {<types::block::Block as Deref>::deref}, val: Value(<ZST>) }
    }

    bb48: {
        _90 = _91;                       // scope 14 at cita-chain/src/forward.rs:161:29: 161:41
        _89 = Header::hash(move _90) -> [return: bb49, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:161:29: 161:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:161:35: 161:39
                                         // + literal: Const { ty: for<'a> fn(&'a Header) -> Option<H256> {Header::hash}, val: Value(<ZST>) }
    }

    bb49: {
        _88 = Option::<H256>::unwrap(move _89) -> [return: bb50, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:161:29: 161:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:161:42: 161:48
                                         // + literal: Const { ty: fn(Option<H256>) -> H256 {Option::<H256>::unwrap}, val: Value(<ZST>) }
    }

    bb50: {
        _87 = &_88;                      // scope 14 at cita-chain/src/forward.rs:161:29: 161:59
        _86 = <H256 as Deref>::deref(move _87) -> [return: bb51, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:161:29: 161:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:161:29: 161:59
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb51: {
        _85 = _86;                       // scope 14 at cita-chain/src/forward.rs:161:29: 161:59
        _84 = slice::<impl [u8]>::to_vec(move _85) -> [return: bb52, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:161:29: 161:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:161:51: 161:57
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb52: {
        _735 = const true;               // scope 14 at cita-chain/src/forward.rs:161:58: 161:59
        _96 = &_82;                      // scope 14 at cita-chain/src/forward.rs:163:29: 163:45
        _95 = types::block::Block::protobuf(move _96) -> [return: bb53, unwind: bb469]; // scope 14 at cita-chain/src/forward.rs:163:29: 163:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:163:35: 163:43
                                         // + literal: Const { ty: for<'a> fn(&'a types::block::Block) -> libproto::Block {types::block::Block::protobuf}, val: Value(<ZST>) }
    }

    bb53: {
        _94 = <libproto::Block as libproto::TryInto<Vec<u8>>>::try_into(move _95) -> [return: bb54, unwind: bb469]; // scope 14 at cita-chain/src/forward.rs:163:29: 163:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:163:46: 163:54
                                         // + literal: Const { ty: fn(libproto::Block) -> Result<Vec<u8>, <libproto::Block as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Block as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb54: {
        _93 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _94) -> [return: bb55, unwind: bb469]; // scope 14 at cita-chain/src/forward.rs:163:29: 163:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:163:57: 163:63
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb55: {
        _735 = const false;              // scope 14 at cita-chain/src/forward.rs:160:41: 164:26
        _83 = RpcBlock::new(move _84, _74, move _93) -> [return: bb56, unwind: bb469]; // scope 14 at cita-chain/src/forward.rs:160:41: 164:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:160:41: 160:54
                                         // + literal: Const { ty: fn(Vec<u8>, bool, Vec<u8>) -> RpcBlock {RpcBlock::new}, val: Value(<ZST>) }
    }

    bb56: {
        _735 = const false;              // scope 14 at cita-chain/src/forward.rs:164:25: 164:26
        _100 = &_83;                     // scope 15 at cita-chain/src/forward.rs:165:55: 165:65
        _99 = serde_json::to_string::<RpcBlock>(_100) -> [return: bb57, unwind: bb395]; // scope 15 at cita-chain/src/forward.rs:165:33: 165:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:165:33: 165:54
                                         // + literal: Const { ty: for<'a> fn(&'a RpcBlock) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<RpcBlock>}, val: Value(<ZST>) }
    }

    bb57: {
        _102 = &mut _4;                  // scope 15 at cita-chain/src/forward.rs:166:34: 166:65
        _101 = [closure@cita-chain/src/forward.rs:166:34: 166:40] { response: move _102 }; // scope 15 at cita-chain/src/forward.rs:166:34: 166:65
                                         // closure
                                         // + def_id: DefId(0:69 ~ cita_chain[3b40]::forward::{impl#0}::reply_request::{closure#2})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::string::String,)),
                                         //     (&mut libproto::Response,),
                                         // ]
        _98 = Result::<std::string::String, serde_json::Error>::map::<(), [closure@cita-chain/src/forward.rs:166:34: 166:40]>(move _99, move _101) -> [return: bb58, unwind: bb395]; // scope 15 at cita-chain/src/forward.rs:165:33: 166:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:166:30: 166:33
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>, [closure@cita-chain/src/forward.rs:166:34: 166:40]) -> Result<(), serde_json::Error> {Result::<std::string::String, serde_json::Error>::map::<(), [closure@cita-chain/src/forward.rs:166:34: 166:40]>}, val: Value(<ZST>) }
    }

    bb58: {
        _104 = &mut _4;                  // scope 15 at cita-chain/src/forward.rs:167:38: 170:30
        _103 = [closure@cita-chain/src/forward.rs:167:38: 167:43] { response: move _104 }; // scope 15 at cita-chain/src/forward.rs:167:38: 170:30
                                         // closure
                                         // + def_id: DefId(0:70 ~ cita_chain[3b40]::forward::{impl#0}::reply_request::{closure#3})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((serde_json::Error,)),
                                         //     (&mut libproto::Response,),
                                         // ]
        _97 = Result::<(), serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:167:38: 167:43]>(move _98, move _103) -> [return: bb59, unwind: bb395]; // scope 15 at cita-chain/src/forward.rs:165:33: 170:31
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:167:30: 167:37
                                         // + literal: Const { ty: fn(Result<(), serde_json::Error>, [closure@cita-chain/src/forward.rs:167:38: 167:43]) -> Result<(), ()> {Result::<(), serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:167:38: 167:43]>}, val: Value(<ZST>) }
    }

    bb59: {
        drop(_83) -> [return: bb60, unwind: bb396]; // scope 14 at cita-chain/src/forward.rs:171:21: 171:22
    }

    bb60: {
        drop(_82) -> [return: bb61, unwind: bb397]; // scope 13 at cita-chain/src/forward.rs:171:21: 171:22
    }

    bb61: {
        drop(_67) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:176:13: 176:14
    }

    bb62: {
        _730 = const false;              // scope 1 at cita-chain/src/forward.rs:178:34: 178:38
        _107 = move ((_9 as transaction).0: std::vec::Vec<u8>); // scope 1 at cita-chain/src/forward.rs:178:34: 178:38
        _111 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
        _110 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _111) -> [return: bb63, unwind: bb394]; // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:179:23: 179:75
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb63: {
        _109 = _110;                     // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
        _115 = &_107;                    // scope 17 at cita-chain/src/forward.rs:179:68: 179:73
        _114 = <Vec<u8> as Deref>::deref(_115) -> [return: bb64, unwind: bb394]; // scope 17 at cita-chain/src/forward.rs:179:68: 179:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:179:68: 179:73
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb64: {
        _113 = _114;                     // scope 17 at cita-chain/src/forward.rs:179:68: 179:73
        _112 = H256::from_slice(move _113) -> [return: bb65, unwind: bb394]; // scope 17 at cita-chain/src/forward.rs:179:51: 179:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:179:51: 179:67
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb65: {
        _108 = core::libchain::chain::Chain::full_transaction(move _109, move _112) -> [return: bb66, unwind: bb394]; // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:179:34: 179:50
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, H256) -> Option<libproto::FullTransaction> {core::libchain::chain::Chain::full_transaction}, val: Value(<ZST>) }
    }

    bb66: {
        _116 = discriminant(_108);       // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
        switchInt(move _116) -> [0: bb67, 1: bb69, otherwise: bb68]; // scope 17 at cita-chain/src/forward.rs:179:17: 179:75
    }

    bb67: {
        _121 = &mut _4;                  // scope 17 at cita-chain/src/forward.rs:184:25: 184:48
        _120 = libproto::Response::set_none(move _121, const true) -> [return: bb520, unwind: bb394]; // scope 17 at cita-chain/src/forward.rs:184:25: 184:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:184:34: 184:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb68: {
        unreachable;                     // scope 17 at cita-chain/src/forward.rs:179:23: 179:75
    }

    bb69: {
        _117 = move ((_108 as Some).0: libproto::FullTransaction); // scope 17 at cita-chain/src/forward.rs:180:26: 180:28
        _119 = &mut _4;                  // scope 18 at cita-chain/src/forward.rs:181:25: 181:44
        _118 = libproto::Response::set_ts(move _119, move _117) -> [return: bb521, unwind: bb394]; // scope 18 at cita-chain/src/forward.rs:181:25: 181:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:181:34: 181:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, libproto::FullTransaction) {libproto::Response::set_ts}, val: Value(<ZST>) }
    }

    bb70: {
        _729 = const false;              // scope 1 at cita-chain/src/forward.rs:189:40: 189:44
        _122 = move ((_9 as transaction_proof).0: std::vec::Vec<u8>); // scope 1 at cita-chain/src/forward.rs:189:40: 189:44
        _126 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
        _125 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _126) -> [return: bb71, unwind: bb393]; // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:190:23: 190:80
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb71: {
        _124 = _125;                     // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
        _130 = &_122;                    // scope 19 at cita-chain/src/forward.rs:190:73: 190:78
        _129 = <Vec<u8> as Deref>::deref(_130) -> [return: bb72, unwind: bb393]; // scope 19 at cita-chain/src/forward.rs:190:73: 190:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:190:73: 190:78
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb72: {
        _128 = _129;                     // scope 19 at cita-chain/src/forward.rs:190:73: 190:78
        _127 = H256::from_slice(move _128) -> [return: bb73, unwind: bb393]; // scope 19 at cita-chain/src/forward.rs:190:56: 190:79
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:190:56: 190:72
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb73: {
        _123 = core::libchain::chain::Chain::get_transaction_proof(move _124, move _127) -> [return: bb74, unwind: bb393]; // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:190:34: 190:55
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, H256) -> Option<Vec<u8>> {core::libchain::chain::Chain::get_transaction_proof}, val: Value(<ZST>) }
    }

    bb74: {
        _131 = discriminant(_123);       // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
        switchInt(move _131) -> [0: bb75, 1: bb77, otherwise: bb76]; // scope 19 at cita-chain/src/forward.rs:190:17: 190:80
    }

    bb75: {
        _136 = &mut _4;                  // scope 19 at cita-chain/src/forward.rs:195:25: 195:48
        _135 = libproto::Response::set_none(move _136, const true) -> [return: bb522, unwind: bb393]; // scope 19 at cita-chain/src/forward.rs:195:25: 195:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:195:34: 195:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb76: {
        unreachable;                     // scope 19 at cita-chain/src/forward.rs:190:23: 190:80
    }

    bb77: {
        _132 = move ((_123 as Some).0: std::vec::Vec<u8>); // scope 19 at cita-chain/src/forward.rs:191:26: 191:31
        _134 = &mut _4;                  // scope 20 at cita-chain/src/forward.rs:192:25: 192:62
        _133 = libproto::Response::set_transaction_proof(move _134, move _132) -> [return: bb523, unwind: bb393]; // scope 20 at cita-chain/src/forward.rs:192:25: 192:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:192:34: 192:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_transaction_proof}, val: Value(<ZST>) }
    }

    bb78: {
        _728 = const false;              // scope 1 at cita-chain/src/forward.rs:200:42: 200:46
        _137 = move ((_9 as transaction_receipt).0: std::vec::Vec<u8>); // scope 1 at cita-chain/src/forward.rs:200:42: 200:46
        _141 = &_137;                    // scope 21 at cita-chain/src/forward.rs:201:48: 201:53
        _140 = <Vec<u8> as Deref>::deref(_141) -> [return: bb79, unwind: bb392]; // scope 21 at cita-chain/src/forward.rs:201:48: 201:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:201:48: 201:53
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb79: {
        _139 = _140;                     // scope 21 at cita-chain/src/forward.rs:201:48: 201:53
        _138 = H256::from_slice(move _139) -> [return: bb80, unwind: bb392]; // scope 21 at cita-chain/src/forward.rs:201:31: 201:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:201:31: 201:47
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb80: {
        _145 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 22 at cita-chain/src/forward.rs:202:31: 202:67
        _144 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _145) -> [return: bb81, unwind: bb392]; // scope 22 at cita-chain/src/forward.rs:202:31: 202:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:202:31: 202:67
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb81: {
        _143 = _144;                     // scope 22 at cita-chain/src/forward.rs:202:31: 202:67
        _146 = _138;                     // scope 22 at cita-chain/src/forward.rs:202:59: 202:66
        _142 = core::libchain::chain::Chain::get_rich_receipt(move _143, move _146) -> [return: bb82, unwind: bb392]; // scope 22 at cita-chain/src/forward.rs:202:31: 202:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:202:42: 202:58
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, H256) -> Option<RichReceipt> {core::libchain::chain::Chain::get_rich_receipt}, val: Value(<ZST>) }
    }

    bb82: {
        _714 = const true;               // scope 22 at cita-chain/src/forward.rs:202:66: 202:67
        _147 = discriminant(_142);       // scope 24 at cita-chain/src/forward.rs:203:24: 203:37
        switchInt(move _147) -> [1: bb83, otherwise: bb88]; // scope 24 at cita-chain/src/forward.rs:203:24: 203:37
    }

    bb83: {
        _714 = const false;              // scope 24 at cita-chain/src/forward.rs:203:29: 203:36
        _148 = move ((_142 as Some).0: types::receipt::RichReceipt); // scope 24 at cita-chain/src/forward.rs:203:29: 203:36
        _149 = <RichReceipt as Into<jsonrpc_types::rpc_types::Receipt>>::into(move _148) -> [return: bb84, unwind: bb467]; // scope 24 at cita-chain/src/forward.rs:204:51: 204:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:204:59: 204:63
                                         // + literal: Const { ty: fn(RichReceipt) -> jsonrpc_types::rpc_types::Receipt {<RichReceipt as Into<jsonrpc_types::rpc_types::Receipt>>::into}, val: Value(<ZST>) }
    }

    bb84: {
        _152 = &_149;                    // scope 25 at cita-chain/src/forward.rs:205:60: 205:72
        _151 = serde_json::to_string::<jsonrpc_types::rpc_types::Receipt>(_152) -> [return: bb85, unwind: bb391]; // scope 25 at cita-chain/src/forward.rs:205:38: 205:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:205:38: 205:59
                                         // + literal: Const { ty: for<'a> fn(&'a jsonrpc_types::rpc_types::Receipt) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<jsonrpc_types::rpc_types::Receipt>}, val: Value(<ZST>) }
    }

    bb85: {
        _150 = Result::<std::string::String, serde_json::Error>::unwrap(move _151) -> [return: bb86, unwind: bb391]; // scope 25 at cita-chain/src/forward.rs:205:38: 205:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:205:74: 205:80
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>) -> std::string::String {Result::<std::string::String, serde_json::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb86: {
        _154 = &mut _4;                  // scope 26 at cita-chain/src/forward.rs:206:21: 206:53
        _155 = move _150;                // scope 26 at cita-chain/src/forward.rs:206:42: 206:52
        _153 = libproto::Response::set_receipt(move _154, move _155) -> [return: bb87, unwind: bb391]; // scope 26 at cita-chain/src/forward.rs:206:21: 206:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:206:30: 206:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_receipt}, val: Value(<ZST>) }
    }

    bb87: {
        drop(_149) -> [return: bb412, unwind: bb467]; // scope 24 at cita-chain/src/forward.rs:207:17: 207:18
    }

    bb88: {
        _157 = &mut _4;                  // scope 23 at cita-chain/src/forward.rs:208:21: 208:44
        _156 = libproto::Response::set_none(move _157, const true) -> [return: bb524, unwind: bb467]; // scope 23 at cita-chain/src/forward.rs:208:21: 208:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:208:30: 208:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb89: {
        _727 = const false;              // scope 1 at cita-chain/src/forward.rs:212:29: 212:36
        _158 = move ((_9 as filter).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:212:29: 212:36
        _159 = log::Level::Trace;        // scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _162 = &_159;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _658 = const _;                  // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[3])) }
        _161 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _162, _658) -> [return: bb93, unwind: bb390]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb90: {
        _160 = const false;              // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb92;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb91: {
        _164 = &_159;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _166 = log::max_level() -> [return: bb94, unwind: bb390]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb92: {
        switchInt(move _160) -> [0: bb99, otherwise: bb96]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb93: {
        switchInt(move _161) -> [0: bb90, otherwise: bb91]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb94: {
        _165 = &_166;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _163 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _164, move _165) -> [return: bb95, unwind: bb390]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb95: {
        _160 = move _163;                // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb92;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb96: {
        _657 = const _;                  // scope 28 at cita-chain/src/forward.rs:213:24: 213:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:213:24: 213:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[2])) }
        _169 = _657 as &[&str] (Pointer(Unsize)); // scope 28 at cita-chain/src/forward.rs:213:24: 213:38
        _174 = &_158;                    // scope 28 at cita-chain/src/forward.rs:213:40: 213:47
        _173 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_174) -> [return: bb97, unwind: bb390]; // scope 28 at cita-chain/src/forward.rs:213:40: 213:47
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:213:40: 213:47
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb97: {
        _172 = [move _173];              // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _171 = &_172;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _170 = _171 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _168 = Arguments::<'_>::new_v1(move _169, move _170) -> [return: bb98, unwind: bb390]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb98: {
        _656 = const _;                  // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[1])) }
        _167 = log::__private_api_log(move _168, _159, _656) -> [return: bb525, unwind: bb390]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb99: {
        _179 = &_158;                    // scope 29 at cita-chain/src/forward.rs:214:75: 214:83
        _178 = <std::string::String as Deref>::deref(_179) -> [return: bb100, unwind: bb390]; // scope 29 at cita-chain/src/forward.rs:214:75: 214:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:214:75: 214:83
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb100: {
        _177 = _178;                     // scope 29 at cita-chain/src/forward.rs:214:75: 214:83
        _176 = serde_json::from_str::<'_, jsonrpc_types::rpc_types::Filter>(move _177) -> [return: bb101, unwind: bb390]; // scope 29 at cita-chain/src/forward.rs:214:41: 214:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:214:41: 214:74
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&str) -> Result<jsonrpc_types::rpc_types::Filter, serde_json::Error> {serde_json::from_str::<'_, jsonrpc_types::rpc_types::Filter>}, val: Value(<ZST>) }
    }

    bb101: {
        _181 = &mut _4;                  // scope 29 at cita-chain/src/forward.rs:214:93: 217:18
        _180 = [closure@cita-chain/src/forward.rs:214:93: 214:98] { response: move _181 }; // scope 29 at cita-chain/src/forward.rs:214:93: 217:18
                                         // closure
                                         // + def_id: DefId(0:71 ~ cita_chain[3b40]::forward::{impl#0}::reply_request::{closure#4})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((serde_json::Error,)),
                                         //     (&mut libproto::Response,),
                                         // ]
        _175 = Result::<jsonrpc_types::rpc_types::Filter, serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:214:93: 214:98]>(move _176, move _180) -> [return: bb102, unwind: bb390]; // scope 29 at cita-chain/src/forward.rs:214:41: 217:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:214:85: 214:92
                                         // + literal: Const { ty: fn(Result<jsonrpc_types::rpc_types::Filter, serde_json::Error>, [closure@cita-chain/src/forward.rs:214:93: 214:98]) -> Result<jsonrpc_types::rpc_types::Filter, ()> {Result::<jsonrpc_types::rpc_types::Filter, serde_json::Error>::map_err::<(), [closure@cita-chain/src/forward.rs:214:93: 214:98]>}, val: Value(<ZST>) }
    }

    bb102: {
        _715 = const true;               // scope 29 at cita-chain/src/forward.rs:217:18: 217:19
        _182 = discriminant(_175);       // scope 29 at cita-chain/src/forward.rs:214:24: 214:38
        switchInt(move _182) -> [0: bb103, otherwise: bb416]; // scope 29 at cita-chain/src/forward.rs:214:24: 214:38
    }

    bb103: {
        _715 = const false;              // scope 29 at cita-chain/src/forward.rs:214:27: 214:37
        _183 = move ((_175 as Ok).0: jsonrpc_types::rpc_types::Filter); // scope 29 at cita-chain/src/forward.rs:214:27: 214:37
        _184 = <jsonrpc_types::rpc_types::Filter as Into<types::filter::Filter>>::into(move _183) -> [return: bb104, unwind: bb390]; // scope 29 at cita-chain/src/forward.rs:218:42: 218:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:218:53: 218:57
                                         // + literal: Const { ty: fn(jsonrpc_types::rpc_types::Filter) -> types::filter::Filter {<jsonrpc_types::rpc_types::Filter as Into<types::filter::Filter>>::into}, val: Value(<ZST>) }
    }

    bb104: {
        _188 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 30 at cita-chain/src/forward.rs:219:32: 219:60
        _187 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _188) -> [return: bb105, unwind: bb389]; // scope 30 at cita-chain/src/forward.rs:219:32: 219:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:219:32: 219:60
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb105: {
        _186 = _187;                     // scope 30 at cita-chain/src/forward.rs:219:32: 219:60
        _189 = &_184;                    // scope 30 at cita-chain/src/forward.rs:219:52: 219:59
        _185 = core::libchain::chain::Chain::get_logs(move _186, _189) -> [return: bb106, unwind: bb389]; // scope 30 at cita-chain/src/forward.rs:219:32: 219:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:219:43: 219:51
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, &'b types::filter::Filter) -> Vec<LocalizedLog> {core::libchain::chain::Chain::get_logs}, val: Value(<ZST>) }
    }

    bb106: {
        _193 = move _185;                // scope 31 at cita-chain/src/forward.rs:220:49: 220:53
        _192 = <Vec<LocalizedLog> as IntoIterator>::into_iter(move _193) -> [return: bb107, unwind: bb389]; // scope 31 at cita-chain/src/forward.rs:220:49: 220:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:220:54: 220:63
                                         // + literal: Const { ty: fn(Vec<LocalizedLog>) -> <Vec<LocalizedLog> as IntoIterator>::IntoIter {<Vec<LocalizedLog> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb107: {
        _191 = <std::vec::IntoIter<LocalizedLog> as Iterator>::map::<jsonrpc_types::rpc_types::Log, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}>(move _192, <LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into) -> [return: bb108, unwind: bb389]; // scope 31 at cita-chain/src/forward.rs:220:49: 220:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:220:66: 220:69
                                         // + literal: Const { ty: fn(std::vec::IntoIter<LocalizedLog>, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}) -> std::iter::Map<std::vec::IntoIter<LocalizedLog>, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}> {<std::vec::IntoIter<LocalizedLog> as Iterator>::map::<jsonrpc_types::rpc_types::Log, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:220:70: 220:80
                                         // + literal: Const { ty: fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}, val: Value(<ZST>) }
    }

    bb108: {
        _190 = <std::iter::Map<std::vec::IntoIter<LocalizedLog>, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}> as Iterator>::collect::<Vec<jsonrpc_types::rpc_types::Log>>(move _191) -> [return: bb109, unwind: bb389]; // scope 31 at cita-chain/src/forward.rs:220:49: 220:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:220:82: 220:89
                                         // + literal: Const { ty: fn(std::iter::Map<std::vec::IntoIter<LocalizedLog>, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}>) -> Vec<jsonrpc_types::rpc_types::Log> {<std::iter::Map<std::vec::IntoIter<LocalizedLog>, fn(LocalizedLog) -> jsonrpc_types::rpc_types::Log {<LocalizedLog as Into<jsonrpc_types::rpc_types::Log>>::into}> as Iterator>::collect::<Vec<jsonrpc_types::rpc_types::Log>>}, val: Value(<ZST>) }
    }

    bb109: {
        _195 = &mut _4;                  // scope 32 at cita-chain/src/forward.rs:221:21: 221:81
        _198 = &_190;                    // scope 32 at cita-chain/src/forward.rs:221:61: 221:70
        _197 = serde_json::to_string::<Vec<jsonrpc_types::rpc_types::Log>>(_198) -> [return: bb110, unwind: bb388]; // scope 32 at cita-chain/src/forward.rs:221:39: 221:71
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:221:39: 221:60
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<jsonrpc_types::rpc_types::Log>) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<Vec<jsonrpc_types::rpc_types::Log>>}, val: Value(<ZST>) }
    }

    bb110: {
        _196 = Result::<std::string::String, serde_json::Error>::unwrap(move _197) -> [return: bb111, unwind: bb388]; // scope 32 at cita-chain/src/forward.rs:221:39: 221:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:221:72: 221:78
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>) -> std::string::String {Result::<std::string::String, serde_json::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb111: {
        _194 = libproto::Response::set_logs(move _195, move _196) -> [return: bb112, unwind: bb388]; // scope 32 at cita-chain/src/forward.rs:221:21: 221:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:221:30: 221:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_logs}, val: Value(<ZST>) }
    }

    bb112: {
        drop(_190) -> [return: bb113, unwind: bb389]; // scope 31 at cita-chain/src/forward.rs:222:17: 222:18
    }

    bb113: {
        drop(_184) -> [return: bb416, unwind: bb390]; // scope 29 at cita-chain/src/forward.rs:222:17: 222:18
    }

    bb114: {
        _726 = const false;              // scope 1 at cita-chain/src/forward.rs:225:27: 225:31
        _199 = move ((_9 as call).0: libproto::Call); // scope 1 at cita-chain/src/forward.rs:225:27: 225:31
        _200 = log::Level::Trace;        // scope 33 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _203 = &_200;                    // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _661 = const _;                  // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[6])) }
        _202 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _203, _661) -> [return: bb118, unwind: bb387]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb115: {
        _201 = const false;              // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb117;                   // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb116: {
        _205 = &_200;                    // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _207 = log::max_level() -> [return: bb119, unwind: bb387]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb117: {
        switchInt(move _201) -> [0: bb124, otherwise: bb121]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb118: {
        switchInt(move _202) -> [0: bb115, otherwise: bb116]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb119: {
        _206 = &_207;                    // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _204 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _205, move _206) -> [return: bb120, unwind: bb387]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb120: {
        _201 = move _204;                // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb117;                   // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb121: {
        _660 = const _;                  // scope 34 at cita-chain/src/forward.rs:226:24: 226:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:226:24: 226:43
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[5])) }
        _210 = _660 as &[&str] (Pointer(Unsize)); // scope 34 at cita-chain/src/forward.rs:226:24: 226:43
        _215 = &_199;                    // scope 34 at cita-chain/src/forward.rs:226:45: 226:49
        _214 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Call>(_215) -> [return: bb122, unwind: bb387]; // scope 34 at cita-chain/src/forward.rs:226:45: 226:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:226:45: 226:49
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Call) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Call>}, val: Value(<ZST>) }
    }

    bb122: {
        _213 = [move _214];              // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _212 = &_213;                    // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _211 = _212 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _209 = Arguments::<'_>::new_v1(move _210, move _211) -> [return: bb123, unwind: bb387]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb123: {
        _659 = const _;                  // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[4])) }
        _208 = log::__private_api_log(move _209, _200, _659) -> [return: bb526, unwind: bb387]; // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb124: {
        _218 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 33 at cita-chain/src/forward.rs:227:17: 228:73
        _222 = const libproto::router::SubModules::Chain; // scope 33 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _223 = const libproto::router::MsgType::Request; // scope 33 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _221 = RoutingKey(move _222, move _223); // scope 33 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _220 = <RoutingKey as Into<std::string::String>>::into(move _221) -> [return: bb125, unwind: bb387]; // scope 33 at cita-chain/src/forward.rs:228:28: 228:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:228:59: 228:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb125: {
        _738 = const false;              // scope 33 at cita-chain/src/forward.rs:228:67: 228:71
        _224 = move _3;                  // scope 33 at cita-chain/src/forward.rs:228:67: 228:71
        _219 = (move _220, move _224);   // scope 33 at cita-chain/src/forward.rs:228:27: 228:72
        _217 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _218, move _219) -> [return: bb126, unwind: bb387]; // scope 33 at cita-chain/src/forward.rs:227:17: 228:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:228:22: 228:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb126: {
        _216 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _217) -> [return: bb127, unwind: bb387]; // scope 33 at cita-chain/src/forward.rs:227:17: 229:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:229:22: 229:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb127: {
        drop(_199) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:231:13: 231:14
    }

    bb128: {
        _725 = const false;              // scope 1 at cita-chain/src/forward.rs:233:37: 233:41
        _225 = move ((_9 as estimate_quota).0: libproto::Call); // scope 1 at cita-chain/src/forward.rs:233:37: 233:41
        _226 = log::Level::Trace;        // scope 35 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _229 = &_226;                    // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _664 = const _;                  // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[9])) }
        _228 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _229, _664) -> [return: bb132, unwind: bb386]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb129: {
        _227 = const false;              // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb131;                   // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb130: {
        _231 = &_226;                    // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _233 = log::max_level() -> [return: bb133, unwind: bb386]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb131: {
        switchInt(move _227) -> [0: bb138, otherwise: bb135]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb132: {
        switchInt(move _228) -> [0: bb129, otherwise: bb130]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb133: {
        _232 = &_233;                    // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _230 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _231, move _232) -> [return: bb134, unwind: bb386]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb134: {
        _227 = move _230;                // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb131;                   // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb135: {
        _663 = const _;                  // scope 36 at cita-chain/src/forward.rs:234:24: 234:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:234:24: 234:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[8])) }
        _236 = _663 as &[&str] (Pointer(Unsize)); // scope 36 at cita-chain/src/forward.rs:234:24: 234:45
        _241 = &_225;                    // scope 36 at cita-chain/src/forward.rs:234:47: 234:51
        _240 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Call>(_241) -> [return: bb136, unwind: bb386]; // scope 36 at cita-chain/src/forward.rs:234:47: 234:51
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:234:47: 234:51
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Call) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Call>}, val: Value(<ZST>) }
    }

    bb136: {
        _239 = [move _240];              // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _238 = &_239;                    // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _237 = _238 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _235 = Arguments::<'_>::new_v1(move _236, move _237) -> [return: bb137, unwind: bb386]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb137: {
        _662 = const _;                  // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[7])) }
        _234 = log::__private_api_log(move _235, _226, _662) -> [return: bb527, unwind: bb386]; // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb138: {
        _244 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 35 at cita-chain/src/forward.rs:235:17: 236:73
        _248 = const libproto::router::SubModules::Chain; // scope 35 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _249 = const libproto::router::MsgType::Request; // scope 35 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _247 = RoutingKey(move _248, move _249); // scope 35 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _246 = <RoutingKey as Into<std::string::String>>::into(move _247) -> [return: bb139, unwind: bb386]; // scope 35 at cita-chain/src/forward.rs:236:28: 236:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:236:59: 236:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb139: {
        _738 = const false;              // scope 35 at cita-chain/src/forward.rs:236:67: 236:71
        _250 = move _3;                  // scope 35 at cita-chain/src/forward.rs:236:67: 236:71
        _245 = (move _246, move _250);   // scope 35 at cita-chain/src/forward.rs:236:27: 236:72
        _243 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _244, move _245) -> [return: bb140, unwind: bb386]; // scope 35 at cita-chain/src/forward.rs:235:17: 236:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:236:22: 236:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb140: {
        _242 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _243) -> [return: bb141, unwind: bb386]; // scope 35 at cita-chain/src/forward.rs:235:17: 237:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:237:22: 237:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb141: {
        drop(_225) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:239:13: 239:14
    }

    bb142: {
        _724 = const false;              // scope 1 at cita-chain/src/forward.rs:241:40: 241:48
        _251 = move ((_9 as transaction_count).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:241:40: 241:48
        _252 = log::Level::Trace;        // scope 37 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _255 = &_252;                    // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _667 = const _;                  // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[12])) }
        _254 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _255, _667) -> [return: bb146, unwind: bb385]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb143: {
        _253 = const false;              // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb145;                   // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb144: {
        _257 = &_252;                    // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _259 = log::max_level() -> [return: bb147, unwind: bb385]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb145: {
        switchInt(move _253) -> [0: bb152, otherwise: bb149]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb146: {
        switchInt(move _254) -> [0: bb143, otherwise: bb144]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb147: {
        _258 = &_259;                    // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _256 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _257, move _258) -> [return: bb148, unwind: bb385]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb148: {
        _253 = move _256;                // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb145;                   // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb149: {
        _666 = const _;                  // scope 38 at cita-chain/src/forward.rs:242:24: 242:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:242:24: 242:69
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[11])) }
        _262 = _666 as &[&str] (Pointer(Unsize)); // scope 38 at cita-chain/src/forward.rs:242:24: 242:69
        _267 = &_251;                    // scope 38 at cita-chain/src/forward.rs:242:71: 242:79
        _266 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_267) -> [return: bb150, unwind: bb385]; // scope 38 at cita-chain/src/forward.rs:242:71: 242:79
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:242:71: 242:79
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb150: {
        _265 = [move _266];              // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _264 = &_265;                    // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _263 = _264 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _261 = Arguments::<'_>::new_v1(move _262, move _263) -> [return: bb151, unwind: bb385]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb151: {
        _665 = const _;                  // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[10])) }
        _260 = log::__private_api_log(move _261, _252, _665) -> [return: bb528, unwind: bb385]; // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb152: {
        _270 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 37 at cita-chain/src/forward.rs:243:17: 244:73
        _274 = const libproto::router::SubModules::Chain; // scope 37 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _275 = const libproto::router::MsgType::Request; // scope 37 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _273 = RoutingKey(move _274, move _275); // scope 37 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _272 = <RoutingKey as Into<std::string::String>>::into(move _273) -> [return: bb153, unwind: bb385]; // scope 37 at cita-chain/src/forward.rs:244:28: 244:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:244:59: 244:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb153: {
        _738 = const false;              // scope 37 at cita-chain/src/forward.rs:244:67: 244:71
        _276 = move _3;                  // scope 37 at cita-chain/src/forward.rs:244:67: 244:71
        _271 = (move _272, move _276);   // scope 37 at cita-chain/src/forward.rs:244:27: 244:72
        _269 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _270, move _271) -> [return: bb154, unwind: bb385]; // scope 37 at cita-chain/src/forward.rs:243:17: 244:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:244:22: 244:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb154: {
        _268 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _269) -> [return: bb155, unwind: bb385]; // scope 37 at cita-chain/src/forward.rs:243:17: 245:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:245:22: 245:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb155: {
        drop(_251) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:247:13: 247:14
    }

    bb156: {
        _723 = const false;              // scope 1 at cita-chain/src/forward.rs:249:32: 249:38
        _277 = move ((_9 as meta_data).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:249:32: 249:38
        _278 = log::Level::Trace;        // scope 39 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _281 = &_278;                    // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _670 = const _;                  // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[15])) }
        _280 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _281, _670) -> [return: bb160, unwind: bb384]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb157: {
        _279 = const false;              // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb159;                   // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb158: {
        _283 = &_278;                    // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _285 = log::max_level() -> [return: bb161, unwind: bb384]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb159: {
        switchInt(move _279) -> [0: bb166, otherwise: bb163]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb160: {
        switchInt(move _280) -> [0: bb157, otherwise: bb158]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb161: {
        _284 = &_285;                    // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _282 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _283, move _284) -> [return: bb162, unwind: bb384]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb162: {
        _279 = move _282;                // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb159;                   // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb163: {
        _669 = const _;                  // scope 40 at cita-chain/src/forward.rs:250:24: 250:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:250:24: 250:60
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[14])) }
        _288 = _669 as &[&str] (Pointer(Unsize)); // scope 40 at cita-chain/src/forward.rs:250:24: 250:60
        _293 = &_277;                    // scope 40 at cita-chain/src/forward.rs:250:62: 250:68
        _292 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_293) -> [return: bb164, unwind: bb384]; // scope 40 at cita-chain/src/forward.rs:250:62: 250:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:250:62: 250:68
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb164: {
        _291 = [move _292];              // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _290 = &_291;                    // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _289 = _290 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _287 = Arguments::<'_>::new_v1(move _288, move _289) -> [return: bb165, unwind: bb384]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb165: {
        _668 = const _;                  // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[13])) }
        _286 = log::__private_api_log(move _287, _278, _668) -> [return: bb529, unwind: bb384]; // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb166: {
        _296 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 39 at cita-chain/src/forward.rs:251:17: 252:73
        _300 = const libproto::router::SubModules::Chain; // scope 39 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _301 = const libproto::router::MsgType::Request; // scope 39 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _299 = RoutingKey(move _300, move _301); // scope 39 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _298 = <RoutingKey as Into<std::string::String>>::into(move _299) -> [return: bb167, unwind: bb384]; // scope 39 at cita-chain/src/forward.rs:252:28: 252:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:252:59: 252:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb167: {
        _738 = const false;              // scope 39 at cita-chain/src/forward.rs:252:67: 252:71
        _302 = move _3;                  // scope 39 at cita-chain/src/forward.rs:252:67: 252:71
        _297 = (move _298, move _302);   // scope 39 at cita-chain/src/forward.rs:252:27: 252:72
        _295 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _296, move _297) -> [return: bb168, unwind: bb384]; // scope 39 at cita-chain/src/forward.rs:251:17: 252:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:252:22: 252:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb168: {
        _294 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _295) -> [return: bb169, unwind: bb384]; // scope 39 at cita-chain/src/forward.rs:251:17: 253:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:253:22: 253:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb169: {
        drop(_277) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:255:13: 255:14
    }

    bb170: {
        _722 = const false;              // scope 1 at cita-chain/src/forward.rs:257:27: 257:39
        _303 = move ((_9 as code).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:257:27: 257:39
        _304 = log::Level::Trace;        // scope 41 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _307 = &_304;                    // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _673 = const _;                  // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[18])) }
        _306 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _307, _673) -> [return: bb174, unwind: bb383]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb171: {
        _305 = const false;              // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb173;                   // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb172: {
        _309 = &_304;                    // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _311 = log::max_level() -> [return: bb175, unwind: bb383]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb173: {
        switchInt(move _305) -> [0: bb180, otherwise: bb177]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb174: {
        switchInt(move _306) -> [0: bb171, otherwise: bb172]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb175: {
        _310 = &_311;                    // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _308 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _309, move _310) -> [return: bb176, unwind: bb383]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb176: {
        _305 = move _308;                // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb173;                   // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb177: {
        _672 = const _;                  // scope 42 at cita-chain/src/forward.rs:258:24: 258:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:258:24: 258:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[17])) }
        _314 = _672 as &[&str] (Pointer(Unsize)); // scope 42 at cita-chain/src/forward.rs:258:24: 258:57
        _319 = &_303;                    // scope 42 at cita-chain/src/forward.rs:258:59: 258:71
        _318 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_319) -> [return: bb178, unwind: bb383]; // scope 42 at cita-chain/src/forward.rs:258:59: 258:71
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:258:59: 258:71
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb178: {
        _317 = [move _318];              // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _316 = &_317;                    // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _315 = _316 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _313 = Arguments::<'_>::new_v1(move _314, move _315) -> [return: bb179, unwind: bb383]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(23)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb179: {
        _671 = const _;                  // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[16])) }
        _312 = log::__private_api_log(move _313, _304, _671) -> [return: bb530, unwind: bb383]; // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb180: {
        _322 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 41 at cita-chain/src/forward.rs:259:17: 260:73
        _326 = const libproto::router::SubModules::Chain; // scope 41 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _327 = const libproto::router::MsgType::Request; // scope 41 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _325 = RoutingKey(move _326, move _327); // scope 41 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _324 = <RoutingKey as Into<std::string::String>>::into(move _325) -> [return: bb181, unwind: bb383]; // scope 41 at cita-chain/src/forward.rs:260:28: 260:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:260:59: 260:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb181: {
        _738 = const false;              // scope 41 at cita-chain/src/forward.rs:260:67: 260:71
        _328 = move _3;                  // scope 41 at cita-chain/src/forward.rs:260:67: 260:71
        _323 = (move _324, move _328);   // scope 41 at cita-chain/src/forward.rs:260:27: 260:72
        _321 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _322, move _323) -> [return: bb182, unwind: bb383]; // scope 41 at cita-chain/src/forward.rs:259:17: 260:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:260:22: 260:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb182: {
        _320 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _321) -> [return: bb183, unwind: bb383]; // scope 41 at cita-chain/src/forward.rs:259:17: 261:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:261:22: 261:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb183: {
        drop(_303) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:263:13: 263:14
    }

    bb184: {
        _721 = const false;              // scope 1 at cita-chain/src/forward.rs:265:26: 265:37
        _329 = move ((_9 as abi).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:265:26: 265:37
        _330 = log::Level::Trace;        // scope 43 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _333 = &_330;                    // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _676 = const _;                  // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[21])) }
        _332 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _333, _676) -> [return: bb188, unwind: bb382]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb185: {
        _331 = const false;              // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb187;                   // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb186: {
        _335 = &_330;                    // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _337 = log::max_level() -> [return: bb189, unwind: bb382]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb187: {
        switchInt(move _331) -> [0: bb194, otherwise: bb191]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb188: {
        switchInt(move _332) -> [0: bb185, otherwise: bb186]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb189: {
        _336 = &_337;                    // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _334 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _335, move _336) -> [return: bb190, unwind: bb382]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb190: {
        _331 = move _334;                // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb187;                   // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb191: {
        _675 = const _;                  // scope 44 at cita-chain/src/forward.rs:266:24: 266:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:266:24: 266:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[20])) }
        _340 = _675 as &[&str] (Pointer(Unsize)); // scope 44 at cita-chain/src/forward.rs:266:24: 266:56
        _345 = &_329;                    // scope 44 at cita-chain/src/forward.rs:266:58: 266:69
        _344 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_345) -> [return: bb192, unwind: bb382]; // scope 44 at cita-chain/src/forward.rs:266:58: 266:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:266:58: 266:69
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb192: {
        _343 = [move _344];              // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _342 = &_343;                    // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _341 = _342 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _339 = Arguments::<'_>::new_v1(move _340, move _341) -> [return: bb193, unwind: bb382]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb193: {
        _674 = const _;                  // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[19])) }
        _338 = log::__private_api_log(move _339, _330, _674) -> [return: bb531, unwind: bb382]; // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb194: {
        _348 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 43 at cita-chain/src/forward.rs:267:17: 268:73
        _352 = const libproto::router::SubModules::Chain; // scope 43 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _353 = const libproto::router::MsgType::Request; // scope 43 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _351 = RoutingKey(move _352, move _353); // scope 43 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _350 = <RoutingKey as Into<std::string::String>>::into(move _351) -> [return: bb195, unwind: bb382]; // scope 43 at cita-chain/src/forward.rs:268:28: 268:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:268:59: 268:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb195: {
        _738 = const false;              // scope 43 at cita-chain/src/forward.rs:268:67: 268:71
        _354 = move _3;                  // scope 43 at cita-chain/src/forward.rs:268:67: 268:71
        _349 = (move _350, move _354);   // scope 43 at cita-chain/src/forward.rs:268:27: 268:72
        _347 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _348, move _349) -> [return: bb196, unwind: bb382]; // scope 43 at cita-chain/src/forward.rs:267:17: 268:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:268:22: 268:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb196: {
        _346 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _347) -> [return: bb197, unwind: bb382]; // scope 43 at cita-chain/src/forward.rs:267:17: 269:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:269:22: 269:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb197: {
        drop(_329) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:271:13: 271:14
    }

    bb198: {
        _720 = const false;              // scope 1 at cita-chain/src/forward.rs:273:30: 273:45
        _355 = move ((_9 as balance).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:273:30: 273:45
        _356 = log::Level::Trace;        // scope 45 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _359 = &_356;                    // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _679 = const _;                  // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[24])) }
        _358 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _359, _679) -> [return: bb202, unwind: bb381]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb199: {
        _357 = const false;              // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb201;                   // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb200: {
        _361 = &_356;                    // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _363 = log::max_level() -> [return: bb203, unwind: bb381]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb201: {
        switchInt(move _357) -> [0: bb208, otherwise: bb205]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb202: {
        switchInt(move _358) -> [0: bb199, otherwise: bb200]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb203: {
        _362 = &_363;                    // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _360 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _361, move _362) -> [return: bb204, unwind: bb381]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb204: {
        _357 = move _360;                // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb201;                   // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb205: {
        _678 = const _;                  // scope 46 at cita-chain/src/forward.rs:274:24: 274:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:274:24: 274:60
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[23])) }
        _366 = _678 as &[&str] (Pointer(Unsize)); // scope 46 at cita-chain/src/forward.rs:274:24: 274:60
        _371 = &_355;                    // scope 46 at cita-chain/src/forward.rs:274:62: 274:77
        _370 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_371) -> [return: bb206, unwind: bb381]; // scope 46 at cita-chain/src/forward.rs:274:62: 274:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:274:62: 274:77
                                         // + user_ty: UserType(28)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb206: {
        _369 = [move _370];              // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _368 = &_369;                    // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _367 = _368 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _365 = Arguments::<'_>::new_v1(move _366, move _367) -> [return: bb207, unwind: bb381]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(27)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb207: {
        _677 = const _;                  // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[22])) }
        _364 = log::__private_api_log(move _365, _356, _677) -> [return: bb532, unwind: bb381]; // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb208: {
        _374 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 45 at cita-chain/src/forward.rs:275:17: 276:73
        _378 = const libproto::router::SubModules::Chain; // scope 45 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _379 = const libproto::router::MsgType::Request; // scope 45 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _377 = RoutingKey(move _378, move _379); // scope 45 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _376 = <RoutingKey as Into<std::string::String>>::into(move _377) -> [return: bb209, unwind: bb381]; // scope 45 at cita-chain/src/forward.rs:276:28: 276:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:276:59: 276:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb209: {
        _738 = const false;              // scope 45 at cita-chain/src/forward.rs:276:67: 276:71
        _380 = move _3;                  // scope 45 at cita-chain/src/forward.rs:276:67: 276:71
        _375 = (move _376, move _380);   // scope 45 at cita-chain/src/forward.rs:276:27: 276:72
        _373 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _374, move _375) -> [return: bb210, unwind: bb381]; // scope 45 at cita-chain/src/forward.rs:275:17: 276:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:276:22: 276:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb210: {
        _372 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _373) -> [return: bb211, unwind: bb381]; // scope 45 at cita-chain/src/forward.rs:275:17: 277:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:277:22: 277:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb211: {
        drop(_355) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:279:13: 279:14
    }

    bb212: {
        _719 = const false;              // scope 1 at cita-chain/src/forward.rs:281:33: 281:43
        _381 = move ((_9 as new_filter).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:281:33: 281:43
        _382 = log::Level::Trace;        // scope 47 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _385 = &_382;                    // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _685 = const _;                  // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[30])) }
        _384 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _385, _685) -> [return: bb216, unwind: bb380]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb213: {
        _383 = const false;              // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb215;                   // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb214: {
        _387 = &_382;                    // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _389 = log::max_level() -> [return: bb217, unwind: bb380]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb215: {
        switchInt(move _383) -> [0: bb222, otherwise: bb219]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb216: {
        switchInt(move _384) -> [0: bb213, otherwise: bb214]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb217: {
        _388 = &_389;                    // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _386 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _387, move _388) -> [return: bb218, unwind: bb380]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb218: {
        _383 = move _386;                // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb215;                   // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb219: {
        _684 = const _;                  // scope 48 at cita-chain/src/forward.rs:282:24: 282:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:282:24: 282:41
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[29])) }
        _392 = _684 as &[&str] (Pointer(Unsize)); // scope 48 at cita-chain/src/forward.rs:282:24: 282:41
        _397 = &_381;                    // scope 48 at cita-chain/src/forward.rs:282:43: 282:53
        _396 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_397) -> [return: bb220, unwind: bb380]; // scope 48 at cita-chain/src/forward.rs:282:43: 282:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:282:43: 282:53
                                         // + user_ty: UserType(30)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb220: {
        _395 = [move _396];              // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _394 = &_395;                    // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _393 = _394 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _391 = Arguments::<'_>::new_v1(move _392, move _393) -> [return: bb221, unwind: bb380]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(29)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb221: {
        _683 = const _;                  // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[28])) }
        _390 = log::__private_api_log(move _391, _382, _683) -> [return: bb533, unwind: bb380]; // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb222: {
        _402 = &_381;                    // scope 47 at cita-chain/src/forward.rs:284:42: 284:53
        _401 = <std::string::String as Deref>::deref(_402) -> [return: bb223, unwind: bb380]; // scope 47 at cita-chain/src/forward.rs:284:42: 284:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:284:42: 284:53
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb223: {
        _400 = _401;                     // scope 47 at cita-chain/src/forward.rs:284:42: 284:53
        _399 = serde_json::from_str::<'_, jsonrpc_types::rpc_types::Filter>(move _400) -> [return: bb224, unwind: bb380]; // scope 47 at cita-chain/src/forward.rs:284:21: 284:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:284:21: 284:41
                                         // + literal: Const { ty: fn(&str) -> Result<jsonrpc_types::rpc_types::Filter, serde_json::Error> {serde_json::from_str::<'_, jsonrpc_types::rpc_types::Filter>}, val: Value(<ZST>) }
    }

    bb224: {
        _403 = const "Invalid param";    // scope 47 at cita-chain/src/forward.rs:284:62: 284:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:284:62: 284:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _398 = Result::<jsonrpc_types::rpc_types::Filter, serde_json::Error>::expect(move _399, _403) -> [return: bb225, unwind: bb380]; // scope 47 at cita-chain/src/forward.rs:284:21: 284:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:284:55: 284:61
                                         // + literal: Const { ty: for<'a> fn(Result<jsonrpc_types::rpc_types::Filter, serde_json::Error>, &'a str) -> jsonrpc_types::rpc_types::Filter {Result::<jsonrpc_types::rpc_types::Filter, serde_json::Error>::expect}, val: Value(<ZST>) }
    }

    bb225: {
        _734 = const true;               // scope 47 at cita-chain/src/forward.rs:284:77: 284:78
        _404 = log::Level::Trace;        // scope 49 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _407 = &_404;                    // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _682 = const _;                  // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[27])) }
        _406 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _407, _682) -> [return: bb229, unwind: bb464]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb226: {
        _405 = const false;              // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb228;                   // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb227: {
        _409 = &_404;                    // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _411 = log::max_level() -> [return: bb230, unwind: bb464]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb228: {
        switchInt(move _405) -> [0: bb235, otherwise: bb232]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb229: {
        switchInt(move _406) -> [0: bb226, otherwise: bb227]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb230: {
        _410 = &_411;                    // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _408 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _409, move _410) -> [return: bb231, unwind: bb464]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb231: {
        _405 = move _408;                // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb228;                   // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb232: {
        _681 = const _;                  // scope 50 at cita-chain/src/forward.rs:285:24: 285:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:285:24: 285:41
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[26])) }
        _414 = _681 as &[&str] (Pointer(Unsize)); // scope 50 at cita-chain/src/forward.rs:285:24: 285:41
        _419 = &_398;                    // scope 50 at cita-chain/src/forward.rs:285:43: 285:53
        _418 = core::fmt::ArgumentV1::<'_>::new_debug::<jsonrpc_types::rpc_types::Filter>(_419) -> [return: bb233, unwind: bb464]; // scope 50 at cita-chain/src/forward.rs:285:43: 285:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:285:43: 285:53
                                         // + user_ty: UserType(34)
                                         // + literal: Const { ty: for<'b> fn(&'b jsonrpc_types::rpc_types::Filter) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<jsonrpc_types::rpc_types::Filter>}, val: Value(<ZST>) }
    }

    bb233: {
        _417 = [move _418];              // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _416 = &_417;                    // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _415 = _416 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _413 = Arguments::<'_>::new_v1(move _414, move _415) -> [return: bb234, unwind: bb464]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(33)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb234: {
        _680 = const _;                  // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[25])) }
        _412 = log::__private_api_log(move _413, _404, _680) -> [return: bb534, unwind: bb464]; // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb235: {
        _421 = &mut _4;                  // scope 49 at cita-chain/src/forward.rs:286:17: 286:81
        _426 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 49 at cita-chain/src/forward.rs:286:40: 286:73
        _425 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _426) -> [return: bb236, unwind: bb464]; // scope 49 at cita-chain/src/forward.rs:286:40: 286:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:286:40: 286:73
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb236: {
        _424 = _425;                     // scope 49 at cita-chain/src/forward.rs:286:40: 286:73
        _734 = const false;              // scope 49 at cita-chain/src/forward.rs:286:62: 286:72
        _427 = move _398;                // scope 49 at cita-chain/src/forward.rs:286:62: 286:72
        _423 = <core::libchain::chain::Chain as RpcFilter>::new_filter(move _424, move _427) -> [return: bb237, unwind: bb464]; // scope 49 at cita-chain/src/forward.rs:286:40: 286:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:286:51: 286:61
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, jsonrpc_types::rpc_types::Filter) -> usize {<core::libchain::chain::Chain as RpcFilter>::new_filter}, val: Value(<ZST>) }
    }

    bb237: {
        _422 = move _423 as u64 (IntToInt); // scope 49 at cita-chain/src/forward.rs:286:40: 286:80
        _420 = libproto::Response::set_filter_id(move _421, move _422) -> [return: bb238, unwind: bb464]; // scope 49 at cita-chain/src/forward.rs:286:17: 286:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:286:26: 286:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, u64) {libproto::Response::set_filter_id}, val: Value(<ZST>) }
    }

    bb238: {
        _734 = const false;              // scope 47 at cita-chain/src/forward.rs:287:13: 287:14
        drop(_381) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:287:13: 287:14
    }

    bb239: {
        _431 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 1 at cita-chain/src/forward.rs:290:36: 290:65
        _430 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _431) -> [return: bb240, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:290:36: 290:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:290:36: 290:65
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb240: {
        _429 = _430;                     // scope 1 at cita-chain/src/forward.rs:290:36: 290:65
        _428 = <core::libchain::chain::Chain as RpcFilter>::new_block_filter(move _429) -> [return: bb241, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:290:36: 290:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:290:47: 290:63
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> usize {<core::libchain::chain::Chain as RpcFilter>::new_block_filter}, val: Value(<ZST>) }
    }

    bb241: {
        _433 = &mut _4;                  // scope 51 at cita-chain/src/forward.rs:291:17: 291:60
        _435 = _428;                     // scope 51 at cita-chain/src/forward.rs:291:40: 291:52
        _434 = move _435 as u64 (IntToInt); // scope 51 at cita-chain/src/forward.rs:291:40: 291:59
        _432 = libproto::Response::set_filter_id(move _433, move _434) -> [return: bb535, unwind: bb509]; // scope 51 at cita-chain/src/forward.rs:291:17: 291:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:291:26: 291:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, u64) {libproto::Response::set_filter_id}, val: Value(<ZST>) }
    }

    bb242: {
        _436 = ((_9 as uninstall_filter).0: u64); // scope 1 at cita-chain/src/forward.rs:294:39: 294:48
        _437 = log::Level::Trace;        // scope 52 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _440 = &_437;                    // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _688 = const _;                  // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[33])) }
        _439 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _440, _688) -> [return: bb246, unwind: bb509]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb243: {
        _438 = const false;              // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb245;                   // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb244: {
        _442 = &_437;                    // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _444 = log::max_level() -> [return: bb247, unwind: bb509]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb245: {
        switchInt(move _438) -> [0: bb252, otherwise: bb249]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb246: {
        switchInt(move _439) -> [0: bb243, otherwise: bb244]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb247: {
        _443 = &_444;                    // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _441 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _442, move _443) -> [return: bb248, unwind: bb509]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb248: {
        _438 = move _441;                // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb245;                   // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb249: {
        _687 = const _;                  // scope 53 at cita-chain/src/forward.rs:295:24: 295:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:295:24: 295:55
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[32])) }
        _447 = _687 as &[&str] (Pointer(Unsize)); // scope 53 at cita-chain/src/forward.rs:295:24: 295:55
        _452 = &_436;                    // scope 53 at cita-chain/src/forward.rs:295:57: 295:66
        _451 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_452) -> [return: bb250, unwind: bb509]; // scope 53 at cita-chain/src/forward.rs:295:57: 295:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:295:57: 295:66
                                         // + user_ty: UserType(36)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb250: {
        _450 = [move _451];              // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _449 = &_450;                    // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _448 = _449 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _446 = Arguments::<'_>::new_v1(move _447, move _448) -> [return: bb251, unwind: bb509]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(35)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb251: {
        _686 = const _;                  // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[31])) }
        _445 = log::__private_api_log(move _446, _437, _686) -> [return: bb536, unwind: bb509]; // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb252: {
        _456 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 52 at cita-chain/src/forward.rs:296:25: 296:72
        _455 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _456) -> [return: bb253, unwind: bb509]; // scope 52 at cita-chain/src/forward.rs:296:25: 296:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:296:25: 296:72
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb253: {
        _454 = _455;                     // scope 52 at cita-chain/src/forward.rs:296:25: 296:72
        _457 = _436 as usize (IntToInt); // scope 52 at cita-chain/src/forward.rs:296:53: 296:71
        _453 = <core::libchain::chain::Chain as RpcFilter>::uninstall_filter(move _454, move _457) -> [return: bb254, unwind: bb509]; // scope 52 at cita-chain/src/forward.rs:296:25: 296:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:296:36: 296:52
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, usize) -> bool {<core::libchain::chain::Chain as RpcFilter>::uninstall_filter}, val: Value(<ZST>) }
    }

    bb254: {
        _459 = &mut _4;                  // scope 54 at cita-chain/src/forward.rs:297:17: 297:49
        _460 = _453;                     // scope 54 at cita-chain/src/forward.rs:297:47: 297:48
        _458 = libproto::Response::set_uninstall_filter(move _459, move _460) -> [return: bb537, unwind: bb509]; // scope 54 at cita-chain/src/forward.rs:297:17: 297:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:297:26: 297:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_uninstall_filter}, val: Value(<ZST>) }
    }

    bb255: {
        _461 = ((_9 as filter_changes).0: u64); // scope 1 at cita-chain/src/forward.rs:300:37: 300:46
        _462 = log::Level::Trace;        // scope 55 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _465 = &_462;                    // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _694 = const _;                  // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[39])) }
        _464 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _465, _694) -> [return: bb259, unwind: bb509]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb256: {
        _463 = const false;              // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb258;                   // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb257: {
        _467 = &_462;                    // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _469 = log::max_level() -> [return: bb260, unwind: bb509]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb258: {
        switchInt(move _463) -> [0: bb265, otherwise: bb262]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb259: {
        switchInt(move _464) -> [0: bb256, otherwise: bb257]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb260: {
        _468 = &_469;                    // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _466 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _467, move _468) -> [return: bb261, unwind: bb509]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb261: {
        _463 = move _466;                // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb258;                   // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb262: {
        _693 = const _;                  // scope 56 at cita-chain/src/forward.rs:301:24: 301:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:301:24: 301:53
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[38])) }
        _472 = _693 as &[&str] (Pointer(Unsize)); // scope 56 at cita-chain/src/forward.rs:301:24: 301:53
        _477 = &_461;                    // scope 56 at cita-chain/src/forward.rs:301:55: 301:64
        _476 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_477) -> [return: bb263, unwind: bb509]; // scope 56 at cita-chain/src/forward.rs:301:55: 301:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:301:55: 301:64
                                         // + user_ty: UserType(38)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb263: {
        _475 = [move _476];              // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _474 = &_475;                    // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _473 = _474 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _471 = Arguments::<'_>::new_v1(move _472, move _473) -> [return: bb264, unwind: bb509]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(37)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb264: {
        _692 = const _;                  // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[37])) }
        _470 = log::__private_api_log(move _471, _462, _692) -> [return: bb538, unwind: bb509]; // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb265: {
        _482 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 55 at cita-chain/src/forward.rs:302:27: 302:76
        _481 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _482) -> [return: bb266, unwind: bb509]; // scope 55 at cita-chain/src/forward.rs:302:27: 302:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:302:27: 302:76
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb266: {
        _480 = _481;                     // scope 55 at cita-chain/src/forward.rs:302:27: 302:76
        _483 = _461 as usize (IntToInt); // scope 55 at cita-chain/src/forward.rs:302:57: 302:75
        _479 = <core::libchain::chain::Chain as RpcFilter>::get_filter_changes(move _480, move _483) -> [return: bb267, unwind: bb509]; // scope 55 at cita-chain/src/forward.rs:302:27: 302:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:302:38: 302:56
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, usize) -> Option<FilterChanges> {<core::libchain::chain::Chain as RpcFilter>::get_filter_changes}, val: Value(<ZST>) }
    }

    bb267: {
        _478 = Option::<FilterChanges>::unwrap(move _479) -> [return: bb268, unwind: bb509]; // scope 55 at cita-chain/src/forward.rs:302:27: 302:85
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:302:77: 302:83
                                         // + literal: Const { ty: fn(Option<FilterChanges>) -> FilterChanges {Option::<FilterChanges>::unwrap}, val: Value(<ZST>) }
    }

    bb268: {
        _484 = log::Level::Trace;        // scope 57 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _487 = &_484;                    // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _691 = const _;                  // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[36])) }
        _486 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _487, _691) -> [return: bb272, unwind: bb379]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb269: {
        _485 = const false;              // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb271;                   // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb270: {
        _489 = &_484;                    // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _491 = log::max_level() -> [return: bb273, unwind: bb379]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb271: {
        switchInt(move _485) -> [0: bb278, otherwise: bb275]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb272: {
        switchInt(move _486) -> [0: bb269, otherwise: bb270]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb273: {
        _490 = &_491;                    // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _488 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _489, move _490) -> [return: bb274, unwind: bb379]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb274: {
        _485 = move _488;                // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb271;                   // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb275: {
        _690 = const _;                  // scope 58 at cita-chain/src/forward.rs:303:24: 303:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:303:24: 303:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[35])) }
        _494 = _690 as &[&str] (Pointer(Unsize)); // scope 58 at cita-chain/src/forward.rs:303:24: 303:38
        _499 = &_478;                    // scope 58 at cita-chain/src/forward.rs:303:40: 303:43
        _498 = core::fmt::ArgumentV1::<'_>::new_debug::<FilterChanges>(_499) -> [return: bb276, unwind: bb379]; // scope 58 at cita-chain/src/forward.rs:303:40: 303:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:303:40: 303:43
                                         // + user_ty: UserType(40)
                                         // + literal: Const { ty: for<'b> fn(&'b FilterChanges) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<FilterChanges>}, val: Value(<ZST>) }
    }

    bb276: {
        _497 = [move _498];              // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _496 = &_497;                    // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _495 = _496 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _493 = Arguments::<'_>::new_v1(move _494, move _495) -> [return: bb277, unwind: bb379]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(39)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb277: {
        _689 = const _;                  // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[34])) }
        _492 = log::__private_api_log(move _493, _484, _689) -> [return: bb539, unwind: bb379]; // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb278: {
        _501 = &mut _4;                  // scope 57 at cita-chain/src/forward.rs:304:17: 304:82
        _504 = &_478;                    // scope 57 at cita-chain/src/forward.rs:304:67: 304:71
        _503 = serde_json::to_string::<FilterChanges>(_504) -> [return: bb279, unwind: bb379]; // scope 57 at cita-chain/src/forward.rs:304:45: 304:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:304:45: 304:66
                                         // + literal: Const { ty: for<'a> fn(&'a FilterChanges) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<FilterChanges>}, val: Value(<ZST>) }
    }

    bb279: {
        _502 = Result::<std::string::String, serde_json::Error>::unwrap(move _503) -> [return: bb280, unwind: bb379]; // scope 57 at cita-chain/src/forward.rs:304:45: 304:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:304:73: 304:79
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>) -> std::string::String {Result::<std::string::String, serde_json::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb280: {
        _500 = libproto::Response::set_filter_changes(move _501, move _502) -> [return: bb281, unwind: bb379]; // scope 57 at cita-chain/src/forward.rs:304:17: 304:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:304:26: 304:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_filter_changes}, val: Value(<ZST>) }
    }

    bb281: {
        drop(_478) -> [return: bb453, unwind: bb509]; // scope 55 at cita-chain/src/forward.rs:305:13: 305:14
    }

    bb282: {
        _505 = ((_9 as filter_logs).0: u64); // scope 1 at cita-chain/src/forward.rs:307:34: 307:43
        _506 = log::Level::Trace;        // scope 59 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _509 = &_506;                    // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _700 = const _;                  // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[45])) }
        _508 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _509, _700) -> [return: bb286, unwind: bb509]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb283: {
        _507 = const false;              // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb285;                   // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb284: {
        _511 = &_506;                    // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _513 = log::max_level() -> [return: bb287, unwind: bb509]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb285: {
        switchInt(move _507) -> [0: bb292, otherwise: bb289]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb286: {
        switchInt(move _508) -> [0: bb283, otherwise: bb284]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb287: {
        _512 = &_513;                    // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _510 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _511, move _512) -> [return: bb288, unwind: bb509]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb288: {
        _507 = move _510;                // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb285;                   // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb289: {
        _699 = const _;                  // scope 60 at cita-chain/src/forward.rs:308:24: 308:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:308:24: 308:49
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[44])) }
        _516 = _699 as &[&str] (Pointer(Unsize)); // scope 60 at cita-chain/src/forward.rs:308:24: 308:49
        _521 = &_505;                    // scope 60 at cita-chain/src/forward.rs:308:51: 308:60
        _520 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_521) -> [return: bb290, unwind: bb509]; // scope 60 at cita-chain/src/forward.rs:308:51: 308:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:308:51: 308:60
                                         // + user_ty: UserType(42)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb290: {
        _519 = [move _520];              // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _518 = &_519;                    // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _517 = _518 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _515 = Arguments::<'_>::new_v1(move _516, move _517) -> [return: bb291, unwind: bb509]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(41)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb291: {
        _698 = const _;                  // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[43])) }
        _514 = log::__private_api_log(move _515, _506, _698) -> [return: bb540, unwind: bb509]; // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb292: {
        _526 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 59 at cita-chain/src/forward.rs:309:27: 311:57
        _525 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _526) -> [return: bb293, unwind: bb509]; // scope 59 at cita-chain/src/forward.rs:309:27: 311:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:309:27: 311:57
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb293: {
        _524 = _525;                     // scope 59 at cita-chain/src/forward.rs:309:27: 311:57
        _527 = _505 as usize (IntToInt); // scope 59 at cita-chain/src/forward.rs:311:38: 311:56
        _523 = <core::libchain::chain::Chain as RpcFilter>::get_filter_logs(move _524, move _527) -> [return: bb294, unwind: bb509]; // scope 59 at cita-chain/src/forward.rs:309:27: 311:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:311:22: 311:37
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, usize) -> Option<Vec<jsonrpc_types::rpc_types::Log>> {<core::libchain::chain::Chain as RpcFilter>::get_filter_logs}, val: Value(<ZST>) }
    }

    bb294: {
        _522 = Option::<Vec<jsonrpc_types::rpc_types::Log>>::unwrap_or_default(move _523) -> [return: bb295, unwind: bb509]; // scope 59 at cita-chain/src/forward.rs:309:27: 312:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:312:22: 312:39
                                         // + literal: Const { ty: fn(Option<Vec<jsonrpc_types::rpc_types::Log>>) -> Vec<jsonrpc_types::rpc_types::Log> {Option::<Vec<jsonrpc_types::rpc_types::Log>>::unwrap_or_default}, val: Value(<ZST>) }
    }

    bb295: {
        _528 = log::Level::Trace;        // scope 61 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _531 = &_528;                    // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _697 = const _;                  // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[42])) }
        _530 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _531, _697) -> [return: bb299, unwind: bb378]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb296: {
        _529 = const false;              // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb298;                   // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb297: {
        _533 = &_528;                    // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _535 = log::max_level() -> [return: bb300, unwind: bb378]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb298: {
        switchInt(move _529) -> [0: bb305, otherwise: bb302]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb299: {
        switchInt(move _530) -> [0: bb296, otherwise: bb297]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb300: {
        _534 = &_535;                    // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _532 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _533, move _534) -> [return: bb301, unwind: bb378]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb301: {
        _529 = move _532;                // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb298;                   // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb302: {
        _696 = const _;                  // scope 62 at cita-chain/src/forward.rs:313:24: 313:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:313:24: 313:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[41])) }
        _538 = _696 as &[&str] (Pointer(Unsize)); // scope 62 at cita-chain/src/forward.rs:313:24: 313:38
        _543 = &_522;                    // scope 62 at cita-chain/src/forward.rs:313:40: 313:43
        _542 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<jsonrpc_types::rpc_types::Log>>(_543) -> [return: bb303, unwind: bb378]; // scope 62 at cita-chain/src/forward.rs:313:40: 313:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:313:40: 313:43
                                         // + user_ty: UserType(44)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<jsonrpc_types::rpc_types::Log>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<jsonrpc_types::rpc_types::Log>>}, val: Value(<ZST>) }
    }

    bb303: {
        _541 = [move _542];              // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _540 = &_541;                    // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _539 = _540 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _537 = Arguments::<'_>::new_v1(move _538, move _539) -> [return: bb304, unwind: bb378]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(43)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb304: {
        _695 = const _;                  // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[40])) }
        _536 = log::__private_api_log(move _537, _528, _695) -> [return: bb541, unwind: bb378]; // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb305: {
        _545 = &mut _4;                  // scope 61 at cita-chain/src/forward.rs:314:17: 314:79
        _548 = &_522;                    // scope 61 at cita-chain/src/forward.rs:314:64: 314:68
        _547 = serde_json::to_string::<Vec<jsonrpc_types::rpc_types::Log>>(_548) -> [return: bb306, unwind: bb378]; // scope 61 at cita-chain/src/forward.rs:314:42: 314:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:314:42: 314:63
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<jsonrpc_types::rpc_types::Log>) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<Vec<jsonrpc_types::rpc_types::Log>>}, val: Value(<ZST>) }
    }

    bb306: {
        _546 = Result::<std::string::String, serde_json::Error>::unwrap(move _547) -> [return: bb307, unwind: bb378]; // scope 61 at cita-chain/src/forward.rs:314:42: 314:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:314:70: 314:76
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>) -> std::string::String {Result::<std::string::String, serde_json::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb307: {
        _544 = libproto::Response::set_filter_logs(move _545, move _546) -> [return: bb308, unwind: bb378]; // scope 61 at cita-chain/src/forward.rs:314:17: 314:79
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:314:26: 314:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_filter_logs}, val: Value(<ZST>) }
    }

    bb308: {
        drop(_522) -> [return: bb453, unwind: bb509]; // scope 59 at cita-chain/src/forward.rs:315:13: 315:14
    }

    bb309: {
        _718 = const false;              // scope 1 at cita-chain/src/forward.rs:317:34: 317:44
        _549 = move ((_9 as state_proof).0: libproto::StateProof); // scope 1 at cita-chain/src/forward.rs:317:34: 317:44
        _550 = log::Level::Trace;        // scope 63 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _553 = &_550;                    // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _703 = const _;                  // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[48])) }
        _552 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _553, _703) -> [return: bb313, unwind: bb377]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb310: {
        _551 = const false;              // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb312;                   // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb311: {
        _555 = &_550;                    // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _557 = log::max_level() -> [return: bb314, unwind: bb377]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb312: {
        switchInt(move _551) -> [0: bb319, otherwise: bb316]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb313: {
        switchInt(move _552) -> [0: bb310, otherwise: bb311]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb314: {
        _556 = &_557;                    // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _554 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _555, move _556) -> [return: bb315, unwind: bb377]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb315: {
        _551 = move _554;                // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb312;                   // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb316: {
        _702 = const _;                  // scope 64 at cita-chain/src/forward.rs:318:24: 318:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:318:24: 318:50
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[47])) }
        _560 = _702 as &[&str] (Pointer(Unsize)); // scope 64 at cita-chain/src/forward.rs:318:24: 318:50
        _565 = &_549;                    // scope 64 at cita-chain/src/forward.rs:318:52: 318:62
        _564 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::StateProof>(_565) -> [return: bb317, unwind: bb377]; // scope 64 at cita-chain/src/forward.rs:318:52: 318:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:318:52: 318:62
                                         // + user_ty: UserType(46)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::StateProof) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::StateProof>}, val: Value(<ZST>) }
    }

    bb317: {
        _563 = [move _564];              // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _562 = &_563;                    // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _561 = _562 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _559 = Arguments::<'_>::new_v1(move _560, move _561) -> [return: bb318, unwind: bb377]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(45)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb318: {
        _701 = const _;                  // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[46])) }
        _558 = log::__private_api_log(move _559, _550, _701) -> [return: bb542, unwind: bb377]; // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb319: {
        _568 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 63 at cita-chain/src/forward.rs:319:17: 320:73
        _572 = const libproto::router::SubModules::Chain; // scope 63 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _573 = const libproto::router::MsgType::Request; // scope 63 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _571 = RoutingKey(move _572, move _573); // scope 63 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _570 = <RoutingKey as Into<std::string::String>>::into(move _571) -> [return: bb320, unwind: bb377]; // scope 63 at cita-chain/src/forward.rs:320:28: 320:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:320:59: 320:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb320: {
        _738 = const false;              // scope 63 at cita-chain/src/forward.rs:320:67: 320:71
        _574 = move _3;                  // scope 63 at cita-chain/src/forward.rs:320:67: 320:71
        _569 = (move _570, move _574);   // scope 63 at cita-chain/src/forward.rs:320:27: 320:72
        _567 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _568, move _569) -> [return: bb321, unwind: bb377]; // scope 63 at cita-chain/src/forward.rs:319:17: 320:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:320:22: 320:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb321: {
        _566 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _567) -> [return: bb322, unwind: bb377]; // scope 63 at cita-chain/src/forward.rs:319:17: 321:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:321:22: 321:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb322: {
        drop(_549) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:323:13: 323:14
    }

    bb323: {
        _717 = const false;              // scope 1 at cita-chain/src/forward.rs:325:42: 325:54
        _575 = move ((_9 as block_header_height).0: std::string::String); // scope 1 at cita-chain/src/forward.rs:325:42: 325:54
        _580 = &_575;                    // scope 65 at cita-chain/src/forward.rs:327:42: 327:55
        _579 = <std::string::String as Deref>::deref(_580) -> [return: bb324, unwind: bb376]; // scope 65 at cita-chain/src/forward.rs:327:42: 327:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:327:42: 327:55
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb324: {
        _578 = _579;                     // scope 65 at cita-chain/src/forward.rs:327:42: 327:55
        _577 = serde_json::from_str::<'_, jsonrpc_types::rpc_types::BlockNumber>(move _578) -> [return: bb325, unwind: bb376]; // scope 65 at cita-chain/src/forward.rs:327:21: 327:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:327:21: 327:41
                                         // + literal: Const { ty: fn(&str) -> Result<jsonrpc_types::rpc_types::BlockNumber, serde_json::Error> {serde_json::from_str::<'_, jsonrpc_types::rpc_types::BlockNumber>}, val: Value(<ZST>) }
    }

    bb325: {
        _581 = const "Invalid param";    // scope 65 at cita-chain/src/forward.rs:327:64: 327:79
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:327:64: 327:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _576 = Result::<jsonrpc_types::rpc_types::BlockNumber, serde_json::Error>::expect(move _577, _581) -> [return: bb326, unwind: bb376]; // scope 65 at cita-chain/src/forward.rs:327:21: 327:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:327:57: 327:63
                                         // + literal: Const { ty: for<'a> fn(Result<jsonrpc_types::rpc_types::BlockNumber, serde_json::Error>, &'a str) -> jsonrpc_types::rpc_types::BlockNumber {Result::<jsonrpc_types::rpc_types::BlockNumber, serde_json::Error>::expect}, val: Value(<ZST>) }
    }

    bb326: {
        _585 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
        _584 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _585) -> [return: bb327, unwind: bb376]; // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:328:23: 328:77
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb327: {
        _583 = _584;                     // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
        _587 = move _576;                // scope 66 at cita-chain/src/forward.rs:328:57: 328:69
        _586 = <jsonrpc_types::rpc_types::BlockNumber as Into<types::block_number::BlockTag>>::into(move _587) -> [return: bb328, unwind: bb376]; // scope 66 at cita-chain/src/forward.rs:328:57: 328:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:328:70: 328:74
                                         // + literal: Const { ty: fn(jsonrpc_types::rpc_types::BlockNumber) -> types::block_number::BlockTag {<jsonrpc_types::rpc_types::BlockNumber as Into<types::block_number::BlockTag>>::into}, val: Value(<ZST>) }
    }

    bb328: {
        _582 = core::libchain::chain::Chain::get_block_header_bytes(move _583, move _586) -> [return: bb329, unwind: bb376]; // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:328:34: 328:56
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, types::block_number::BlockTag) -> Option<Vec<u8>> {core::libchain::chain::Chain::get_block_header_bytes}, val: Value(<ZST>) }
    }

    bb329: {
        _588 = discriminant(_582);       // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
        switchInt(move _588) -> [0: bb330, 1: bb332, otherwise: bb331]; // scope 66 at cita-chain/src/forward.rs:328:17: 328:77
    }

    bb330: {
        _593 = &mut _4;                  // scope 66 at cita-chain/src/forward.rs:333:25: 333:48
        _592 = libproto::Response::set_none(move _593, const true) -> [return: bb543, unwind: bb376]; // scope 66 at cita-chain/src/forward.rs:333:25: 333:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:333:34: 333:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, bool) {libproto::Response::set_none}, val: Value(<ZST>) }
    }

    bb331: {
        unreachable;                     // scope 66 at cita-chain/src/forward.rs:328:23: 328:77
    }

    bb332: {
        _589 = move ((_582 as Some).0: std::vec::Vec<u8>); // scope 66 at cita-chain/src/forward.rs:329:26: 329:44
        _591 = &mut _4;                  // scope 67 at cita-chain/src/forward.rs:330:25: 330:70
        _590 = libproto::Response::set_block_header(move _591, move _589) -> [return: bb544, unwind: bb376]; // scope 67 at cita-chain/src/forward.rs:330:25: 330:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:330:34: 330:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_block_header}, val: Value(<ZST>) }
    }

    bb333: {
        drop(_575) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:336:13: 336:14
    }

    bb334: {
        _594 = log::Level::Error;        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _597 = &_594;                    // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _706 = const _;                  // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[51])) }
        _596 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _597, _706) -> [return: bb338, unwind: bb509]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb335: {
        _595 = const false;              // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb337;                   // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb336: {
        _599 = &_594;                    // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _601 = log::max_level() -> [return: bb339, unwind: bb509]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb337: {
        switchInt(move _595) -> [0: bb453, otherwise: bb341]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb338: {
        switchInt(move _596) -> [0: bb335, otherwise: bb336]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb339: {
        _600 = &_601;                    // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _598 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _599, move _600) -> [return: bb340, unwind: bb509]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb340: {
        _595 = move _598;                // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb337;                   // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb341: {
        _705 = const _;                  // scope 68 at cita-chain/src/forward.rs:339:24: 339:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:339:24: 339:80
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[50])) }
        _604 = _705 as &[&str] (Pointer(Unsize)); // scope 68 at cita-chain/src/forward.rs:339:24: 339:80
        _603 = Arguments::<'_>::new_const(move _604) -> [return: bb342, unwind: bb509]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(49)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb342: {
        _704 = const _;                  // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[49])) }
        _602 = log::__private_api_log(move _603, _594, _704) -> [return: bb545, unwind: bb509]; // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb343: {
        _716 = const false;              // scope 1 at cita-chain/src/forward.rs:342:34: 342:38
        _605 = move ((_9 as storage_key).0: libproto::StorageKey); // scope 1 at cita-chain/src/forward.rs:342:34: 342:38
        _606 = log::Level::Trace;        // scope 69 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _609 = &_606;                    // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _709 = const _;                  // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_request, [], Some(promoted[54])) }
        _608 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _609, _709) -> [return: bb347, unwind: bb375]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb344: {
        _607 = const false;              // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb346;                   // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb345: {
        _611 = &_606;                    // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _613 = log::max_level() -> [return: bb348, unwind: bb375]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb346: {
        switchInt(move _607) -> [0: bb353, otherwise: bb350]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb347: {
        switchInt(move _608) -> [0: bb344, otherwise: bb345]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb348: {
        _612 = &_613;                    // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _610 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _611, move _612) -> [return: bb349, unwind: bb375]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb349: {
        _607 = move _610;                // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb346;                   // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb350: {
        _708 = const _;                  // scope 70 at cita-chain/src/forward.rs:343:24: 343:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:343:24: 343:50
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[53])) }
        _616 = _708 as &[&str] (Pointer(Unsize)); // scope 70 at cita-chain/src/forward.rs:343:24: 343:50
        _621 = &_605;                    // scope 70 at cita-chain/src/forward.rs:343:52: 343:56
        _620 = core::fmt::ArgumentV1::<'_>::new_debug::<StorageKey>(_621) -> [return: bb351, unwind: bb375]; // scope 70 at cita-chain/src/forward.rs:343:52: 343:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:343:52: 343:56
                                         // + user_ty: UserType(51)
                                         // + literal: Const { ty: for<'b> fn(&'b StorageKey) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<StorageKey>}, val: Value(<ZST>) }
    }

    bb351: {
        _619 = [move _620];              // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _618 = &_619;                    // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _617 = _618 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _615 = Arguments::<'_>::new_v1(move _616, move _617) -> [return: bb352, unwind: bb375]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(50)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb352: {
        _707 = const _;                  // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[52])) }
        _614 = log::__private_api_log(move _615, _606, _707) -> [return: bb546, unwind: bb375]; // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb353: {
        _624 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 69 at cita-chain/src/forward.rs:344:17: 345:73
        _628 = const libproto::router::SubModules::Chain; // scope 69 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _629 = const libproto::router::MsgType::Request; // scope 69 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _627 = RoutingKey(move _628, move _629); // scope 69 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _626 = <RoutingKey as Into<std::string::String>>::into(move _627) -> [return: bb354, unwind: bb375]; // scope 69 at cita-chain/src/forward.rs:345:28: 345:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:345:59: 345:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb354: {
        _738 = const false;              // scope 69 at cita-chain/src/forward.rs:345:67: 345:71
        _630 = move _3;                  // scope 69 at cita-chain/src/forward.rs:345:67: 345:71
        _625 = (move _626, move _630);   // scope 69 at cita-chain/src/forward.rs:345:27: 345:72
        _623 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _624, move _625) -> [return: bb355, unwind: bb375]; // scope 69 at cita-chain/src/forward.rs:344:17: 345:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:345:22: 345:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb355: {
        _622 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _623) -> [return: bb356, unwind: bb375]; // scope 69 at cita-chain/src/forward.rs:344:17: 346:30
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:346:22: 346:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb356: {
        drop(_605) -> [return: bb458, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:348:13: 348:14
    }

    bb357: {
        _632 = const false;              // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb359;                   // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb358: {
        _636 = &_631;                    // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _638 = log::max_level() -> [return: bb361, unwind: bb509]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb359: {
        switchInt(move _632) -> [0: bb453, otherwise: bb363]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb360: {
        switchInt(move _633) -> [0: bb357, otherwise: bb358]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb361: {
        _637 = &_638;                    // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _635 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _636, move _637) -> [return: bb362, unwind: bb509]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb362: {
        _632 = move _635;                // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb359;                   // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb363: {
        _711 = const _;                  // scope 71 at cita-chain/src/forward.rs:351:24: 351:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:351:24: 351:81
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request, [], Some(promoted[56])) }
        _641 = _711 as &[&str] (Pointer(Unsize)); // scope 71 at cita-chain/src/forward.rs:351:24: 351:81
        _640 = Arguments::<'_>::new_const(move _641) -> [return: bb364, unwind: bb509]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(52)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb364: {
        _710 = const _;                  // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_request, [], Some(promoted[55])) }
        _639 = log::__private_api_log(move _640, _631, _710) -> [return: bb547, unwind: bb509]; // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb365: {
        _733 = const true;               // scope 1 at cita-chain/src/forward.rs:354:42: 354:43
        _646 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 72 at cita-chain/src/forward.rs:355:9: 359:15
        _650 = const libproto::router::SubModules::Chain; // scope 72 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _651 = const libproto::router::MsgType::Response; // scope 72 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x02)) }
        _649 = RoutingKey(move _650, move _651); // scope 72 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _648 = <RoutingKey as Into<std::string::String>>::into(move _649) -> [return: bb366, unwind: bb462]; // scope 72 at cita-chain/src/forward.rs:357:17: 357:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:357:49: 357:53
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb366: {
        _733 = const false;              // scope 72 at cita-chain/src/forward.rs:358:17: 358:20
        _654 = move _642;                // scope 72 at cita-chain/src/forward.rs:358:17: 358:20
        _653 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _654) -> [return: bb367, unwind: bb374]; // scope 72 at cita-chain/src/forward.rs:358:17: 358:31
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:358:21: 358:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb367: {
        _652 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _653) -> [return: bb368, unwind: bb374]; // scope 72 at cita-chain/src/forward.rs:358:17: 358:40
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:358:32: 358:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb368: {
        _647 = (move _648, move _652);   // scope 72 at cita-chain/src/forward.rs:356:19: 359:14
        _645 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _646, move _647) -> [return: bb369, unwind: bb462]; // scope 72 at cita-chain/src/forward.rs:355:9: 359:15
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:356:14: 356:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb369: {
        _644 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _645) -> [return: bb370, unwind: bb462]; // scope 72 at cita-chain/src/forward.rs:355:9: 360:22
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:360:14: 360:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb370: {
        _733 = const false;              // scope 1 at cita-chain/src/forward.rs:361:5: 361:6
        _737 = const false;              // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
        drop(_3) -> [return: bb371, unwind: bb403]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb371: {
        drop((_2.0: std::vec::Vec<u8>)) -> [return: bb455, unwind: bb454]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb372: {
        _737 = const false;              // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
        drop((_2.0: std::vec::Vec<u8>)) -> [return: bb460, unwind: bb459]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb373: {
        return;                          // scope 0 at cita-chain/src/forward.rs:361:6: 361:6
    }

    bb374 (cleanup): {
        drop(_648) -> bb462;             // scope 72 at cita-chain/src/forward.rs:359:13: 359:14
    }

    bb375 (cleanup): {
        drop(_605) -> bb509;             // scope 1 at cita-chain/src/forward.rs:348:13: 348:14
    }

    bb376 (cleanup): {
        drop(_575) -> bb509;             // scope 1 at cita-chain/src/forward.rs:336:13: 336:14
    }

    bb377 (cleanup): {
        drop(_549) -> bb509;             // scope 1 at cita-chain/src/forward.rs:323:13: 323:14
    }

    bb378 (cleanup): {
        drop(_522) -> bb509;             // scope 59 at cita-chain/src/forward.rs:315:13: 315:14
    }

    bb379 (cleanup): {
        drop(_478) -> bb509;             // scope 55 at cita-chain/src/forward.rs:305:13: 305:14
    }

    bb380 (cleanup): {
        drop(_381) -> bb509;             // scope 1 at cita-chain/src/forward.rs:287:13: 287:14
    }

    bb381 (cleanup): {
        drop(_355) -> bb509;             // scope 1 at cita-chain/src/forward.rs:279:13: 279:14
    }

    bb382 (cleanup): {
        drop(_329) -> bb509;             // scope 1 at cita-chain/src/forward.rs:271:13: 271:14
    }

    bb383 (cleanup): {
        drop(_303) -> bb509;             // scope 1 at cita-chain/src/forward.rs:263:13: 263:14
    }

    bb384 (cleanup): {
        drop(_277) -> bb509;             // scope 1 at cita-chain/src/forward.rs:255:13: 255:14
    }

    bb385 (cleanup): {
        drop(_251) -> bb509;             // scope 1 at cita-chain/src/forward.rs:247:13: 247:14
    }

    bb386 (cleanup): {
        drop(_225) -> bb509;             // scope 1 at cita-chain/src/forward.rs:239:13: 239:14
    }

    bb387 (cleanup): {
        drop(_199) -> bb509;             // scope 1 at cita-chain/src/forward.rs:231:13: 231:14
    }

    bb388 (cleanup): {
        drop(_190) -> bb389;             // scope 31 at cita-chain/src/forward.rs:222:17: 222:18
    }

    bb389 (cleanup): {
        drop(_184) -> bb390;             // scope 29 at cita-chain/src/forward.rs:222:17: 222:18
    }

    bb390 (cleanup): {
        drop(_158) -> bb509;             // scope 1 at cita-chain/src/forward.rs:223:13: 223:14
    }

    bb391 (cleanup): {
        drop(_149) -> bb467;             // scope 24 at cita-chain/src/forward.rs:207:17: 207:18
    }

    bb392 (cleanup): {
        drop(_137) -> bb509;             // scope 1 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb393 (cleanup): {
        drop(_122) -> bb509;             // scope 1 at cita-chain/src/forward.rs:198:13: 198:14
    }

    bb394 (cleanup): {
        drop(_107) -> bb509;             // scope 1 at cita-chain/src/forward.rs:187:13: 187:14
    }

    bb395 (cleanup): {
        drop(_83) -> bb396;              // scope 14 at cita-chain/src/forward.rs:171:21: 171:22
    }

    bb396 (cleanup): {
        drop(_82) -> bb397;              // scope 13 at cita-chain/src/forward.rs:171:21: 171:22
    }

    bb397 (cleanup): {
        drop(_67) -> bb509;              // scope 1 at cita-chain/src/forward.rs:176:13: 176:14
    }

    bb398 (cleanup): {
        drop(_52) -> bb402;              // scope 2 at cita-chain/src/forward.rs:150:21: 150:22
    }

    bb399 (cleanup): {
        drop(_37) -> bb400;              // scope 6 at cita-chain/src/forward.rs:143:29: 143:30
    }

    bb400 (cleanup): {
        drop(_36) -> bb473;              // scope 5 at cita-chain/src/forward.rs:143:29: 143:30
    }

    bb401 (cleanup): {
        drop(_26) -> bb402;              // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
    }

    bb402 (cleanup): {
        drop(_18) -> bb509;              // scope 1 at cita-chain/src/forward.rs:152:13: 152:14
    }

    bb403 (cleanup): {
        drop((_2.0: std::vec::Vec<u8>)) -> bb515; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb404 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:115:5: 361:6
    }

    bb405: {
        drop(_26) -> [return: bb31, unwind: bb402]; // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
    }

    bb406: {
        drop(_18) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:152:13: 152:14
    }

    bb407: {
        drop(_107) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:187:13: 187:14
    }

    bb408: {
        drop(_122) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:198:13: 198:14
    }

    bb409: {
        _714 = const false;              // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
        drop(_137) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb410: {
        switchInt(_714) -> [0: bb409, otherwise: bb411]; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb411: {
        drop(((_142 as Some).0: types::receipt::RichReceipt)) -> [return: bb409, unwind: bb392]; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb412: {
        _740 = discriminant(_142);       // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
        switchInt(move _740) -> [1: bb410, otherwise: bb409]; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb413: {
        _715 = const false;              // scope 27 at cita-chain/src/forward.rs:222:18: 222:19
        drop(_158) -> [return: bb453, unwind: bb509]; // scope 1 at cita-chain/src/forward.rs:223:13: 223:14
    }

    bb414: {
        switchInt(_715) -> [0: bb413, otherwise: bb415]; // scope 27 at cita-chain/src/forward.rs:222:18: 222:19
    }

    bb415: {
        drop(((_175 as Ok).0: jsonrpc_types::rpc_types::Filter)) -> [return: bb413, unwind: bb390]; // scope 27 at cita-chain/src/forward.rs:222:18: 222:19
    }

    bb416: {
        _741 = discriminant(_175);       // scope 27 at cita-chain/src/forward.rs:222:18: 222:19
        switchInt(move _741) -> [0: bb414, otherwise: bb413]; // scope 27 at cita-chain/src/forward.rs:222:18: 222:19
    }

    bb417: {
        _716 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _717 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _718 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _719 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _720 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _721 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _722 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _723 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _724 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _725 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _726 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _727 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _728 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _729 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _730 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _731 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _732 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _737 = const false;              // scope 1 at cita-chain/src/forward.rs:354:28: 354:36
        _643 = move _4;                  // scope 1 at cita-chain/src/forward.rs:354:28: 354:36
        _642 = <libproto::Response as Into<libproto::Message>>::into(move _643) -> [return: bb365, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:354:28: 354:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:354:37: 354:41
                                         // + literal: Const { ty: fn(libproto::Response) -> libproto::Message {<libproto::Response as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb418: {
        switchInt(_732) -> [0: bb417, otherwise: bb419]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb419: {
        drop(((_9 as block_by_hash).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb420: {
        switchInt(_731) -> [0: bb417, otherwise: bb421]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb421: {
        drop(((_9 as block_by_height).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb422: {
        switchInt(_730) -> [0: bb417, otherwise: bb423]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb423: {
        drop(((_9 as transaction).0: std::vec::Vec<u8>)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb424: {
        switchInt(_726) -> [0: bb417, otherwise: bb425]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb425: {
        drop(((_9 as call).0: libproto::Call)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb426: {
        switchInt(_727) -> [0: bb417, otherwise: bb427]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb427: {
        drop(((_9 as filter).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb428: {
        switchInt(_728) -> [0: bb417, otherwise: bb429]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb429: {
        drop(((_9 as transaction_receipt).0: std::vec::Vec<u8>)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb430: {
        switchInt(_724) -> [0: bb417, otherwise: bb431]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb431: {
        drop(((_9 as transaction_count).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb432: {
        switchInt(_722) -> [0: bb417, otherwise: bb433]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb433: {
        drop(((_9 as code).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb434: {
        switchInt(_721) -> [0: bb417, otherwise: bb435]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb435: {
        drop(((_9 as abi).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb436: {
        switchInt(_719) -> [0: bb417, otherwise: bb437]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb437: {
        drop(((_9 as new_filter).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb438: {
        switchInt(_729) -> [0: bb417, otherwise: bb439]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb439: {
        drop(((_9 as transaction_proof).0: std::vec::Vec<u8>)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb440: {
        switchInt(_723) -> [0: bb417, otherwise: bb441]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb441: {
        drop(((_9 as meta_data).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb442: {
        switchInt(_720) -> [0: bb417, otherwise: bb443]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb443: {
        drop(((_9 as balance).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb444: {
        switchInt(_718) -> [0: bb417, otherwise: bb445]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb445: {
        drop(((_9 as state_proof).0: libproto::StateProof)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb446: {
        switchInt(_717) -> [0: bb417, otherwise: bb447]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb447: {
        drop(((_9 as block_header_height).0: std::string::String)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb448: {
        switchInt(_716) -> [0: bb417, otherwise: bb449]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb449: {
        drop(((_9 as storage_key).0: libproto::StorageKey)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb450: {
        switchInt(_725) -> [0: bb417, otherwise: bb451]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb451: {
        drop(((_9 as estimate_quota).0: libproto::Call)) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb452: {
        drop(_9) -> [return: bb417, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb453: {
        _742 = discriminant(_9);         // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        switchInt(move _742) -> [1: bb418, 2: bb420, 3: bb422, 6: bb424, 7: bb426, 8: bb428, 9: bb430, 10: bb432, 11: bb434, 12: bb436, 19: bb438, 20: bb440, 21: bb442, 22: bb444, 23: bb446, 24: bb448, 27: bb450, otherwise: bb452]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb454 (cleanup): {
        drop((_2.2: protobuf::unknown::UnknownFields)) -> bb404; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb455: {
        drop((_2.2: protobuf::unknown::UnknownFields)) -> bb373; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb456: {
        _716 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _717 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _718 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _719 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _720 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _721 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _722 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _723 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _724 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _725 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _726 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _727 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _728 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _729 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _730 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _731 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        _732 = const false;              // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        drop(_4) -> [return: bb372, unwind: bb513]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb457: {
        drop(_9) -> [return: bb456, unwind: bb511]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb458: {
        _743 = discriminant(_9);         // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        switchInt(move _743) -> [1: bb456, 2: bb456, 3: bb456, 6: bb456, 7: bb456, 8: bb456, 9: bb456, 10: bb456, 11: bb456, 12: bb456, 19: bb456, 20: bb456, 21: bb456, 22: bb456, 23: bb456, 24: bb456, 27: bb456, otherwise: bb457]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb459 (cleanup): {
        drop((_2.2: protobuf::unknown::UnknownFields)) -> bb404; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb460: {
        drop((_2.2: protobuf::unknown::UnknownFields)) -> bb373; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb461 (cleanup): {
        drop(_642) -> bb511;             // scope 1 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb462 (cleanup): {
        switchInt(_733) -> [0: bb511, otherwise: bb461]; // scope 1 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb463 (cleanup): {
        drop(_398) -> bb380;             // scope 47 at cita-chain/src/forward.rs:287:13: 287:14
    }

    bb464 (cleanup): {
        switchInt(_734) -> [0: bb380, otherwise: bb463]; // scope 47 at cita-chain/src/forward.rs:287:13: 287:14
    }

    bb465 (cleanup): {
        switchInt(_714) -> [0: bb392, otherwise: bb466]; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb466 (cleanup): {
        drop(((_142 as Some).0: types::receipt::RichReceipt)) -> bb392; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb467 (cleanup): {
        _744 = discriminant(_142);       // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
        switchInt(move _744) -> [1: bb465, otherwise: bb392]; // scope 22 at cita-chain/src/forward.rs:210:13: 210:14
    }

    bb468 (cleanup): {
        drop(_84) -> bb396;              // scope 14 at cita-chain/src/forward.rs:164:25: 164:26
    }

    bb469 (cleanup): {
        switchInt(_735) -> [0: bb396, otherwise: bb468]; // scope 14 at cita-chain/src/forward.rs:164:25: 164:26
    }

    bb470 (cleanup): {
        drop(_38) -> bb400;              // scope 6 at cita-chain/src/forward.rs:136:33: 136:34
    }

    bb471 (cleanup): {
        switchInt(_736) -> [0: bb400, otherwise: bb470]; // scope 6 at cita-chain/src/forward.rs:136:33: 136:34
    }

    bb472 (cleanup): {
        drop(_26) -> bb402;              // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
    }

    bb473 (cleanup): {
        switchInt(_713) -> [0: bb402, otherwise: bb472]; // scope 3 at cita-chain/src/forward.rs:146:21: 146:22
    }

    bb474 (cleanup): {
        switchInt(_732) -> [0: bb511, otherwise: bb475]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb475 (cleanup): {
        drop(((_9 as block_by_hash).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb476 (cleanup): {
        switchInt(_731) -> [0: bb511, otherwise: bb477]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb477 (cleanup): {
        drop(((_9 as block_by_height).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb478 (cleanup): {
        switchInt(_730) -> [0: bb511, otherwise: bb479]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb479 (cleanup): {
        drop(((_9 as transaction).0: std::vec::Vec<u8>)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb480 (cleanup): {
        switchInt(_726) -> [0: bb511, otherwise: bb481]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb481 (cleanup): {
        drop(((_9 as call).0: libproto::Call)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb482 (cleanup): {
        switchInt(_727) -> [0: bb511, otherwise: bb483]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb483 (cleanup): {
        drop(((_9 as filter).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb484 (cleanup): {
        switchInt(_728) -> [0: bb511, otherwise: bb485]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb485 (cleanup): {
        drop(((_9 as transaction_receipt).0: std::vec::Vec<u8>)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb486 (cleanup): {
        switchInt(_724) -> [0: bb511, otherwise: bb487]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb487 (cleanup): {
        drop(((_9 as transaction_count).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb488 (cleanup): {
        switchInt(_722) -> [0: bb511, otherwise: bb489]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb489 (cleanup): {
        drop(((_9 as code).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb490 (cleanup): {
        switchInt(_721) -> [0: bb511, otherwise: bb491]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb491 (cleanup): {
        drop(((_9 as abi).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb492 (cleanup): {
        switchInt(_719) -> [0: bb511, otherwise: bb493]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb493 (cleanup): {
        drop(((_9 as new_filter).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb494 (cleanup): {
        switchInt(_729) -> [0: bb511, otherwise: bb495]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb495 (cleanup): {
        drop(((_9 as transaction_proof).0: std::vec::Vec<u8>)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb496 (cleanup): {
        switchInt(_723) -> [0: bb511, otherwise: bb497]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb497 (cleanup): {
        drop(((_9 as meta_data).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb498 (cleanup): {
        switchInt(_720) -> [0: bb511, otherwise: bb499]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb499 (cleanup): {
        drop(((_9 as balance).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb500 (cleanup): {
        switchInt(_718) -> [0: bb511, otherwise: bb501]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb501 (cleanup): {
        drop(((_9 as state_proof).0: libproto::StateProof)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb502 (cleanup): {
        switchInt(_717) -> [0: bb511, otherwise: bb503]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb503 (cleanup): {
        drop(((_9 as block_header_height).0: std::string::String)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb504 (cleanup): {
        switchInt(_716) -> [0: bb511, otherwise: bb505]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb505 (cleanup): {
        drop(((_9 as storage_key).0: libproto::StorageKey)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb506 (cleanup): {
        switchInt(_725) -> [0: bb511, otherwise: bb507]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb507 (cleanup): {
        drop(((_9 as estimate_quota).0: libproto::Call)) -> bb511; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb508 (cleanup): {
        drop(_9) -> bb511;               // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb509 (cleanup): {
        _745 = discriminant(_9);         // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
        switchInt(move _745) -> [1: bb474, 2: bb476, 3: bb478, 6: bb480, 7: bb482, 8: bb484, 9: bb486, 10: bb488, 11: bb490, 12: bb492, 19: bb494, 20: bb496, 21: bb498, 22: bb500, 23: bb502, 24: bb504, 27: bb506, otherwise: bb508]; // scope 1 at cita-chain/src/forward.rs:353:10: 353:11
    }

    bb510 (cleanup): {
        drop(_4) -> bb513;               // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb511 (cleanup): {
        switchInt(_737) -> [0: bb513, otherwise: bb510]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb512 (cleanup): {
        drop(_3) -> bb403;               // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb513 (cleanup): {
        switchInt(_738) -> [0: bb403, otherwise: bb512]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb514 (cleanup): {
        drop((_2.2: protobuf::unknown::UnknownFields)) -> bb404; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb515 (cleanup): {
        switchInt(_739) -> [0: bb514, otherwise: bb516]; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb516 (cleanup): {
        drop((_2.1: std::option::Option<libproto::Request_oneof_req>)) -> bb514; // scope 0 at cita-chain/src/forward.rs:361:5: 361:6
    }

    bb517: {
        goto -> bb453;                   // scope 1 at cita-chain/src/forward.rs:121:17: 121:75
    }

    bb518: {
        goto -> bb30;                    // scope 5 at cita-chain/src/forward.rs:144:37: 144:60
    }

    bb519: {
        goto -> bb61;                    // scope 13 at cita-chain/src/forward.rs:173:25: 173:48
    }

    bb520: {
        goto -> bb407;                   // scope 17 at cita-chain/src/forward.rs:184:25: 184:48
    }

    bb521: {
        goto -> bb407;                   // scope 18 at cita-chain/src/forward.rs:181:25: 181:44
    }

    bb522: {
        goto -> bb408;                   // scope 19 at cita-chain/src/forward.rs:195:25: 195:48
    }

    bb523: {
        goto -> bb408;                   // scope 20 at cita-chain/src/forward.rs:192:25: 192:62
    }

    bb524: {
        goto -> bb412;                   // scope 23 at cita-chain/src/forward.rs:208:21: 208:44
    }

    bb525: {
        goto -> bb99;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb526: {
        goto -> bb124;                   // scope 34 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb527: {
        goto -> bb138;                   // scope 36 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb528: {
        goto -> bb152;                   // scope 38 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb529: {
        goto -> bb166;                   // scope 40 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb530: {
        goto -> bb180;                   // scope 42 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb531: {
        goto -> bb194;                   // scope 44 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb532: {
        goto -> bb208;                   // scope 46 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb533: {
        goto -> bb222;                   // scope 48 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb534: {
        goto -> bb235;                   // scope 50 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb535: {
        goto -> bb453;                   // scope 51 at cita-chain/src/forward.rs:291:17: 291:60
    }

    bb536: {
        goto -> bb252;                   // scope 53 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb537: {
        goto -> bb453;                   // scope 54 at cita-chain/src/forward.rs:297:17: 297:49
    }

    bb538: {
        goto -> bb265;                   // scope 56 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb539: {
        goto -> bb278;                   // scope 58 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb540: {
        goto -> bb292;                   // scope 60 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb541: {
        goto -> bb305;                   // scope 62 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb542: {
        goto -> bb319;                   // scope 64 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb543: {
        goto -> bb333;                   // scope 66 at cita-chain/src/forward.rs:333:25: 333:48
    }

    bb544: {
        goto -> bb333;                   // scope 67 at cita-chain/src/forward.rs:330:25: 330:70
    }

    bb545: {
        goto -> bb453;                   // scope 68 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb546: {
        goto -> bb353;                   // scope 70 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb547: {
        goto -> bb453;                   // scope 71 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:148:52: 148:58
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:148:52: 148:58

    bb0: {
        _1 = [const ""];                 // scope 0 at cita-chain/src/forward.rs:148:52: 148:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:148:52: 148:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:148:52: 148:58
        return;                          // scope 0 at cita-chain/src/forward.rs:148:52: 148:58
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:213:17: 213:48
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:213:17: 213:48

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:213:17: 213:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:213:17: 213:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:213:17: 213:48
        _1 = (move _2, move _4, move _6, const 213_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:213:24: 213:38
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:213:24: 213:38

    bb0: {
        _1 = [const "filter: "];         // scope 0 at cita-chain/src/forward.rs:213:24: 213:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:213:24: 213:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:213:24: 213:38
        return;                          // scope 0 at cita-chain/src/forward.rs:213:24: 213:38
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:226:17: 226:50
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:226:17: 226:50

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:226:17: 226:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:226:17: 226:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:226:17: 226:50
        _1 = (move _2, move _4, move _6, const 226_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:226:24: 226:43
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:226:24: 226:43

    bb0: {
        _1 = [const "Chainvm Call "];    // scope 0 at cita-chain/src/forward.rs:226:24: 226:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:226:24: 226:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:226:24: 226:43
        return;                          // scope 0 at cita-chain/src/forward.rs:226:24: 226:43
    }
}

promoted[6] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[7] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:234:17: 234:52
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:234:17: 234:52

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:234:17: 234:52
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:234:17: 234:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:234:17: 234:52
        _1 = (move _2, move _4, move _6, const 234_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[8] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:234:24: 234:45
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:234:24: 234:45

    bb0: {
        _1 = [const "Estimate quota "];  // scope 0 at cita-chain/src/forward.rs:234:24: 234:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:234:24: 234:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:234:24: 234:45
        return;                          // scope 0 at cita-chain/src/forward.rs:234:24: 234:45
    }
}

promoted[9] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[10] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:242:17: 242:80
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:242:17: 242:80

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:242:17: 242:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:242:17: 242:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:242:17: 242:80
        _1 = (move _2, move _4, move _6, const 242_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[11] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:242:24: 242:69
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:242:24: 242:69

    bb0: {
        _1 = [const "transaction count request from jsonrpc "]; // scope 0 at cita-chain/src/forward.rs:242:24: 242:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:242:24: 242:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:242:24: 242:69
        return;                          // scope 0 at cita-chain/src/forward.rs:242:24: 242:69
    }
}

promoted[12] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[13] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:250:17: 250:69
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:250:17: 250:69

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:250:17: 250:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:250:17: 250:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:250:17: 250:69
        _1 = (move _2, move _4, move _6, const 250_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[14] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:250:24: 250:60
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:250:24: 250:60

    bb0: {
        _1 = [const "metadata request from jsonrpc "]; // scope 0 at cita-chain/src/forward.rs:250:24: 250:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:250:24: 250:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:250:24: 250:60
        return;                          // scope 0 at cita-chain/src/forward.rs:250:24: 250:60
    }
}

promoted[15] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[16] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:258:17: 258:72
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:258:17: 258:72

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:258:17: 258:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:258:17: 258:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:258:17: 258:72
        _1 = (move _2, move _4, move _6, const 258_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[17] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:258:24: 258:57
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:258:24: 258:57

    bb0: {
        _1 = [const "code request from josnrpc  "]; // scope 0 at cita-chain/src/forward.rs:258:24: 258:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:258:24: 258:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:258:24: 258:57
        return;                          // scope 0 at cita-chain/src/forward.rs:258:24: 258:57
    }
}

promoted[18] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[19] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:266:17: 266:70
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:266:17: 266:70

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:266:17: 266:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:266:17: 266:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:266:17: 266:70
        _1 = (move _2, move _4, move _6, const 266_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[20] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:266:24: 266:56
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:266:24: 266:56

    bb0: {
        _1 = [const "abi request from josnrpc  "]; // scope 0 at cita-chain/src/forward.rs:266:24: 266:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:266:24: 266:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:266:24: 266:56
        return;                          // scope 0 at cita-chain/src/forward.rs:266:24: 266:56
    }
}

promoted[21] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[22] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:274:17: 274:78
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:274:17: 274:78

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:274:17: 274:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:274:17: 274:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:274:17: 274:78
        _1 = (move _2, move _4, move _6, const 274_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[23] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:274:24: 274:60
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:274:24: 274:60

    bb0: {
        _1 = [const "balance request from josnrpc  "]; // scope 0 at cita-chain/src/forward.rs:274:24: 274:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:274:24: 274:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:274:24: 274:60
        return;                          // scope 0 at cita-chain/src/forward.rs:274:24: 274:60
    }
}

promoted[24] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[25] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:285:17: 285:54
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:285:17: 285:54

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:285:17: 285:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:285:17: 285:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:285:17: 285:54
        _1 = (move _2, move _4, move _6, const 285_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[26] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:285:24: 285:41
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:285:24: 285:41

    bb0: {
        _1 = [const "new_filter "];      // scope 0 at cita-chain/src/forward.rs:285:24: 285:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:285:24: 285:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:285:24: 285:41
        return;                          // scope 0 at cita-chain/src/forward.rs:285:24: 285:41
    }
}

promoted[27] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[28] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:282:17: 282:54
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:282:17: 282:54

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:282:17: 282:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:282:17: 282:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:282:17: 282:54
        _1 = (move _2, move _4, move _6, const 282_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[29] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:282:24: 282:41
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:282:24: 282:41

    bb0: {
        _1 = [const "new_filter "];      // scope 0 at cita-chain/src/forward.rs:282:24: 282:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:282:24: 282:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:282:24: 282:41
        return;                          // scope 0 at cita-chain/src/forward.rs:282:24: 282:41
    }
}

promoted[30] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[31] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:295:17: 295:67
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:295:17: 295:67

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:295:17: 295:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:295:17: 295:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:295:17: 295:67
        _1 = (move _2, move _4, move _6, const 295_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[32] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:295:24: 295:55
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:295:24: 295:55

    bb0: {
        _1 = [const "uninstall_filter's id is "]; // scope 0 at cita-chain/src/forward.rs:295:24: 295:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:295:24: 295:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:295:24: 295:55
        return;                          // scope 0 at cita-chain/src/forward.rs:295:24: 295:55
    }
}

promoted[33] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[34] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:303:17: 303:44
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:303:17: 303:44

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:303:17: 303:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:303:17: 303:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:303:17: 303:44
        _1 = (move _2, move _4, move _6, const 303_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[35] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:303:24: 303:38
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:303:24: 303:38

    bb0: {
        _1 = [const "Log is: "];         // scope 0 at cita-chain/src/forward.rs:303:24: 303:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:303:24: 303:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:303:24: 303:38
        return;                          // scope 0 at cita-chain/src/forward.rs:303:24: 303:38
    }
}

promoted[36] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[37] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:301:17: 301:65
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:301:17: 301:65

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:301:17: 301:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:301:17: 301:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:301:17: 301:65
        _1 = (move _2, move _4, move _6, const 301_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[38] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:301:24: 301:53
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:301:24: 301:53

    bb0: {
        _1 = [const "filter_changes's id is "]; // scope 0 at cita-chain/src/forward.rs:301:24: 301:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:301:24: 301:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:301:24: 301:53
        return;                          // scope 0 at cita-chain/src/forward.rs:301:24: 301:53
    }
}

promoted[39] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[40] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:313:17: 313:44
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:313:17: 313:44

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:313:17: 313:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:313:17: 313:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:313:17: 313:44
        _1 = (move _2, move _4, move _6, const 313_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[41] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:313:24: 313:38
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:313:24: 313:38

    bb0: {
        _1 = [const "Log is: "];         // scope 0 at cita-chain/src/forward.rs:313:24: 313:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:313:24: 313:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:313:24: 313:38
        return;                          // scope 0 at cita-chain/src/forward.rs:313:24: 313:38
    }
}

promoted[42] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[43] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:308:17: 308:61
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:308:17: 308:61

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:308:17: 308:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:308:17: 308:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:308:17: 308:61
        _1 = (move _2, move _4, move _6, const 308_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[44] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:308:24: 308:49
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:308:24: 308:49

    bb0: {
        _1 = [const "filter_log's id is "]; // scope 0 at cita-chain/src/forward.rs:308:24: 308:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:308:24: 308:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:308:24: 308:49
        return;                          // scope 0 at cita-chain/src/forward.rs:308:24: 308:49
    }
}

promoted[45] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[46] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:318:17: 318:63
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:318:17: 318:63

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:318:17: 318:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:318:17: 318:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:318:17: 318:63
        _1 = (move _2, move _4, move _6, const 318_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[47] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:318:24: 318:50
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:318:24: 318:50

    bb0: {
        _1 = [const "state_proof info is "]; // scope 0 at cita-chain/src/forward.rs:318:24: 318:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:318:24: 318:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:318:24: 318:50
        return;                          // scope 0 at cita-chain/src/forward.rs:318:24: 318:50
    }
}

promoted[48] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[49] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:339:17: 339:81
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:339:17: 339:81

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:339:17: 339:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:339:17: 339:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:339:17: 339:81
        _1 = (move _2, move _4, move _6, const 339_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[50] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:339:24: 339:80
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:339:24: 339:80

    bb0: {
        _1 = [const "Get messages which should not handle by this function!"]; // scope 0 at cita-chain/src/forward.rs:339:24: 339:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:339:24: 339:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:339:24: 339:80
        return;                          // scope 0 at cita-chain/src/forward.rs:339:24: 339:80
    }
}

promoted[51] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[52] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:343:17: 343:57
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:343:17: 343:57

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:343:17: 343:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:343:17: 343:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:343:17: 343:57
        _1 = (move _2, move _4, move _6, const 343_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[53] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:343:24: 343:50
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:343:24: 343:50

    bb0: {
        _1 = [const "storage key info is "]; // scope 0 at cita-chain/src/forward.rs:343:24: 343:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:343:24: 343:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:343:24: 343:50
        return;                          // scope 0 at cita-chain/src/forward.rs:343:24: 343:50
    }
}

promoted[54] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[55] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:351:17: 351:82
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:351:17: 351:82

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:351:17: 351:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:351:17: 351:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:351:17: 351:82
        _1 = (move _2, move _4, move _6, const 351_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[56] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:351:24: 351:81
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:351:24: 351:81

    bb0: {
        _1 = [const "Get messages which should sent to other micro services!"]; // scope 0 at cita-chain/src/forward.rs:351:24: 351:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:351:24: 351:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:351:24: 351:81
        return;                          // scope 0 at cita-chain/src/forward.rs:351:24: 351:81
    }
}

promoted[57] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#0}(_1: [closure@cita-chain/src/forward.rs:138:42: 138:48], _2: std::string::String) -> () {
    debug data => _2;                    // in scope 0 at cita-chain/src/forward.rs:138:43: 138:47
    debug response => (*(_1.0: &mut libproto::Response)); // in scope 0 at cita-chain/src/forward.rs:116:17: 116:25
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:138:49: 138:49
    let mut _3: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:138:42: 138:73

    bb0: {
        _3 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:138:49: 138:73
        _0 = libproto::Response::set_block(_3, move _2) -> bb1; // scope 0 at cita-chain/src/forward.rs:138:49: 138:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:138:58: 138:67
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_block}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-chain/src/forward.rs:138:73: 138:73
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#1}(_1: [closure@cita-chain/src/forward.rs:139:46: 139:51], _2: serde_json::Error) -> () {
    debug err => _2;                     // in scope 0 at cita-chain/src/forward.rs:139:47: 139:50
    debug response => (*(_1.0: &mut libproto::Response)); // in scope 0 at cita-chain/src/forward.rs:116:17: 116:25
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:139:52: 139:52
    let _3: ();                          // in scope 0 at cita-chain/src/forward.rs:140:41: 140:84
    let mut _4: i64;                     // in scope 0 at cita-chain/src/forward.rs:140:59: 140:83
    let _5: ();                          // in scope 0 at cita-chain/src/forward.rs:141:41: 141:85
    let mut _6: std::string::String;     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:119:23: 122:6
    let _7: std::string::String;         // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    let mut _8: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _9: &[&str];                 // in scope 0 at cita-chain/src/forward.rs:141:72: 141:78
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:141:80: 141:83
    let _14: &serde_json::Error;         // in scope 0 at cita-chain/src/forward.rs:141:80: 141:83
    let mut _15: &[&str; 1];             // in scope 0 at cita-chain/src/forward.rs:141:72: 141:78
    let mut _16: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:139:46: 142:38
    let mut _17: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:139:46: 142:38
    scope 1 {
        debug res => _7;                 // in scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    }

    bb0: {
        _16 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:140:41: 140:84
        _4 = error::ErrorCode::query_error() -> [return: bb1, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:140:59: 140:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:140:59: 140:81
                                         // + literal: Const { ty: fn() -> i64 {error::ErrorCode::query_error}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = libproto::Response::set_code(_16, move _4) -> [return: bb2, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:140:41: 140:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:140:50: 140:58
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:141:41: 141:85
        _15 = const _;                   // scope 0 at cita-chain/src/forward.rs:141:72: 141:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:141:72: 141:78
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _9 = _15 as &[&str] (Pointer(Unsize)); // scope 0 at cita-chain/src/forward.rs:141:72: 141:78
        _14 = &_2;                       // scope 0 at cita-chain/src/forward.rs:141:80: 141:83
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>(_14) -> [return: bb3, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:141:80: 141:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:141:80: 141:83
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b serde_json::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = [move _13];                // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _11 = &_12;                      // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _10 = _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _8 = Arguments::<'_>::new_v1(move _9, move _10) -> [return: bb4, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = format(move _8) -> [return: bb5, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = move _7;                    // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _5 = libproto::Response::set_error_msg(_17, move _6) -> [return: bb6, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:141:41: 141:85
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:141:50: 141:63
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_error_msg}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_2) -> bb7;                 // scope 0 at cita-chain/src/forward.rs:142:37: 142:38
    }

    bb7: {
        return;                          // scope 0 at cita-chain/src/forward.rs:142:38: 142:38
    }

    bb8 (cleanup): {
        drop(_2) -> bb9;                 // scope 0 at cita-chain/src/forward.rs:142:37: 142:38
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:139:46: 142:38
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#1}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:141:72: 141:78
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:141:72: 141:78

    bb0: {
        _1 = [const ""];                 // scope 0 at cita-chain/src/forward.rs:141:72: 141:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:141:72: 141:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:141:72: 141:78
        return;                          // scope 0 at cita-chain/src/forward.rs:141:72: 141:78
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#2}(_1: [closure@cita-chain/src/forward.rs:166:34: 166:40], _2: std::string::String) -> () {
    debug data => _2;                    // in scope 0 at cita-chain/src/forward.rs:166:35: 166:39
    debug response => (*(_1.0: &mut libproto::Response)); // in scope 0 at cita-chain/src/forward.rs:116:17: 116:25
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:166:41: 166:41
    let mut _3: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:166:34: 166:65

    bb0: {
        _3 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:166:41: 166:65
        _0 = libproto::Response::set_block(_3, move _2) -> bb1; // scope 0 at cita-chain/src/forward.rs:166:41: 166:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:166:50: 166:59
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_block}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-chain/src/forward.rs:166:65: 166:65
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#3}(_1: [closure@cita-chain/src/forward.rs:167:38: 167:43], _2: serde_json::Error) -> () {
    debug err => _2;                     // in scope 0 at cita-chain/src/forward.rs:167:39: 167:42
    debug response => (*(_1.0: &mut libproto::Response)); // in scope 0 at cita-chain/src/forward.rs:116:17: 116:25
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:167:44: 167:44
    let _3: ();                          // in scope 0 at cita-chain/src/forward.rs:168:33: 168:76
    let mut _4: i64;                     // in scope 0 at cita-chain/src/forward.rs:168:51: 168:75
    let _5: ();                          // in scope 0 at cita-chain/src/forward.rs:169:33: 169:77
    let mut _6: std::string::String;     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:119:23: 122:6
    let _7: std::string::String;         // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    let mut _8: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _9: &[&str];                 // in scope 0 at cita-chain/src/forward.rs:169:64: 169:70
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:169:72: 169:75
    let _14: &serde_json::Error;         // in scope 0 at cita-chain/src/forward.rs:169:72: 169:75
    let mut _15: &[&str; 1];             // in scope 0 at cita-chain/src/forward.rs:169:64: 169:70
    let mut _16: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:167:38: 170:30
    let mut _17: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:167:38: 170:30
    scope 1 {
        debug res => _7;                 // in scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    }

    bb0: {
        _16 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:168:33: 168:76
        _4 = error::ErrorCode::query_error() -> [return: bb1, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:168:51: 168:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:168:51: 168:73
                                         // + literal: Const { ty: fn() -> i64 {error::ErrorCode::query_error}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = libproto::Response::set_code(_16, move _4) -> [return: bb2, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:168:33: 168:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:168:42: 168:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:169:33: 169:77
        _15 = const _;                   // scope 0 at cita-chain/src/forward.rs:169:64: 169:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:169:64: 169:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request::{closure#3}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _9 = _15 as &[&str] (Pointer(Unsize)); // scope 0 at cita-chain/src/forward.rs:169:64: 169:70
        _14 = &_2;                       // scope 0 at cita-chain/src/forward.rs:169:72: 169:75
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>(_14) -> [return: bb3, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:169:72: 169:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:169:72: 169:75
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b serde_json::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = [move _13];                // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _11 = &_12;                      // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _10 = _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _8 = Arguments::<'_>::new_v1(move _9, move _10) -> [return: bb4, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = format(move _8) -> [return: bb5, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = move _7;                    // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _5 = libproto::Response::set_error_msg(_17, move _6) -> [return: bb6, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:169:33: 169:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:169:42: 169:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_error_msg}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_2) -> bb7;                 // scope 0 at cita-chain/src/forward.rs:170:29: 170:30
    }

    bb7: {
        return;                          // scope 0 at cita-chain/src/forward.rs:170:30: 170:30
    }

    bb8 (cleanup): {
        drop(_2) -> bb9;                 // scope 0 at cita-chain/src/forward.rs:170:29: 170:30
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:167:38: 170:30
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#3}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:169:64: 169:70
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:169:64: 169:70

    bb0: {
        _1 = [const ""];                 // scope 0 at cita-chain/src/forward.rs:169:64: 169:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:169:64: 169:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:169:64: 169:70
        return;                          // scope 0 at cita-chain/src/forward.rs:169:64: 169:70
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#4}(_1: [closure@cita-chain/src/forward.rs:214:93: 214:98], _2: serde_json::Error) -> () {
    debug err => _2;                     // in scope 0 at cita-chain/src/forward.rs:214:94: 214:97
    debug response => (*(_1.0: &mut libproto::Response)); // in scope 0 at cita-chain/src/forward.rs:116:17: 116:25
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:214:99: 214:99
    let _3: ();                          // in scope 0 at cita-chain/src/forward.rs:215:21: 215:64
    let mut _4: i64;                     // in scope 0 at cita-chain/src/forward.rs:215:39: 215:63
    let _5: ();                          // in scope 0 at cita-chain/src/forward.rs:216:21: 216:65
    let mut _6: std::string::String;     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:119:23: 122:6
    let _7: std::string::String;         // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    let mut _8: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _9: &[&str];                 // in scope 0 at cita-chain/src/forward.rs:216:52: 216:58
    let mut _10: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:216:60: 216:63
    let _14: &serde_json::Error;         // in scope 0 at cita-chain/src/forward.rs:216:60: 216:63
    let mut _15: &[&str; 1];             // in scope 0 at cita-chain/src/forward.rs:216:52: 216:58
    let mut _16: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:214:93: 217:18
    let mut _17: &mut libproto::Response; // in scope 0 at cita-chain/src/forward.rs:214:93: 217:18
    scope 1 {
        debug res => _7;                 // in scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    }

    bb0: {
        _16 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:215:21: 215:64
        _4 = error::ErrorCode::query_error() -> [return: bb1, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:215:39: 215:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:215:39: 215:61
                                         // + literal: Const { ty: fn() -> i64 {error::ErrorCode::query_error}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = libproto::Response::set_code(_16, move _4) -> [return: bb2, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:215:21: 215:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:215:30: 215:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb2: {
        _17 = deref_copy (_1.0: &mut libproto::Response); // scope 0 at cita-chain/src/forward.rs:216:21: 216:65
        _15 = const _;                   // scope 0 at cita-chain/src/forward.rs:216:52: 216:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:216:52: 216:58
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_request::{closure#4}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _9 = _15 as &[&str] (Pointer(Unsize)); // scope 0 at cita-chain/src/forward.rs:216:52: 216:58
        _14 = &_2;                       // scope 0 at cita-chain/src/forward.rs:216:60: 216:63
        _13 = core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>(_14) -> [return: bb3, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:216:60: 216:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:216:60: 216:63
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b serde_json::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<serde_json::Error>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = [move _13];                // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _11 = &_12;                      // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _10 = _11 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _8 = Arguments::<'_>::new_v1(move _9, move _10) -> [return: bb4, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = format(move _8) -> [return: bb5, unwind: bb8]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = move _7;                    // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _5 = libproto::Response::set_error_msg(_17, move _6) -> [return: bb6, unwind: bb8]; // scope 0 at cita-chain/src/forward.rs:216:21: 216:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:216:30: 216:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_error_msg}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_2) -> bb7;                 // scope 0 at cita-chain/src/forward.rs:217:17: 217:18
    }

    bb7: {
        return;                          // scope 0 at cita-chain/src/forward.rs:217:18: 217:18
    }

    bb8 (cleanup): {
        drop(_2) -> bb9;                 // scope 0 at cita-chain/src/forward.rs:217:17: 217:18
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:214:93: 217:18
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_request::{closure#4}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:216:52: 216:58
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:216:52: 216:58

    bb0: {
        _1 = [const ""];                 // scope 0 at cita-chain/src/forward.rs:216:52: 216:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:216:52: 216:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:216:52: 216:58
        return;                          // scope 0 at cita-chain/src/forward.rs:216:52: 216:58
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue(_1: &Forward, _2: libproto::BlockWithProof) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:364:32: 364:37
    debug proof_blk => _2;               // in scope 0 at cita-chain/src/forward.rs:364:39: 364:48
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:364:66: 364:66
    let _3: usize;                       // in scope 0 at cita-chain/src/forward.rs:365:13: 365:27
    let mut _4: u64;                     // in scope 0 at cita-chain/src/forward.rs:365:30: 365:61
    let mut _5: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:365:30: 365:61
    let _6: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:365:30: 365:61
    let mut _7: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:365:30: 365:61
    let mut _10: &mut libproto::BlockWithProof; // in scope 0 at cita-chain/src/forward.rs:367:27: 367:47
    let mut _12: &mut libproto::BlockWithProof; // in scope 0 at cita-chain/src/forward.rs:368:21: 368:43
    let mut _14: u64;                    // in scope 0 at cita-chain/src/forward.rs:369:26: 369:63
    let mut _15: &libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:369:26: 369:63
    let _16: &libproto::BlockHeader;     // in scope 0 at cita-chain/src/forward.rs:369:26: 369:50
    let mut _17: &libproto::Block;       // in scope 0 at cita-chain/src/forward.rs:369:26: 369:50
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _21: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _24: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _25: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _26: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _27: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _28: &[&str];                // in scope 0 at cita-chain/src/forward.rs:372:13: 372:80
    let mut _29: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _30: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _31: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:373:13: 373:23
    let _33: &usize;                     // in scope 0 at cita-chain/src/forward.rs:373:13: 373:23
    let mut _34: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:374:13: 374:27
    let _35: &usize;                     // in scope 0 at cita-chain/src/forward.rs:374:13: 374:27
    let mut _37: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:377:37: 377:48
    let mut _39: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _40: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _41: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _42: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _43: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _44: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _45: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _46: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _47: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _48: &[&str];                // in scope 0 at cita-chain/src/forward.rs:379:13: 379:75
    let mut _49: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _50: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _51: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _52: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let _53: &u64;                       // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let _54: u64;                        // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let mut _55: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let _56: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let mut _57: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:380:13: 380:27
    let mut _58: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let _59: &&cita_types::H256;         // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let _60: &cita_types::H256;          // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let mut _61: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let _62: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let mut _63: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:381:13: 381:38
    let mut _64: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:382:13: 382:46
    let _65: &usize;                     // in scope 0 at cita-chain/src/forward.rs:382:13: 382:46
    let _66: usize;                      // in scope 0 at cita-chain/src/forward.rs:382:13: 382:46
    let mut _67: &[types::transaction::SignedTransaction]; // in scope 0 at cita-chain/src/forward.rs:382:13: 382:46
    let _68: &[types::transaction::SignedTransaction]; // in scope 0 at cita-chain/src/forward.rs:382:13: 382:40
    let mut _69: &types::block::BlockBody; // in scope 0 at cita-chain/src/forward.rs:382:13: 382:40
    let _70: &types::block::BlockBody;   // in scope 0 at cita-chain/src/forward.rs:382:13: 382:25
    let mut _71: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:382:13: 382:25
    let mut _72: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let _73: &u32;                       // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let _74: u32;                        // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let mut _75: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let _76: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let mut _77: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:383:13: 383:28
    let mut _78: bool;                   // in scope 0 at cita-chain/src/forward.rs:385:12: 385:46
    let mut _79: usize;                  // in scope 0 at cita-chain/src/forward.rs:385:26: 385:46
    let mut _80: (usize, bool);          // in scope 0 at cita-chain/src/forward.rs:385:26: 385:46
    let _81: std::option::Option<core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:387:17: 390:18
    let mut _82: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:387:17: 390:18
    let mut _83: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:387:17: 390:18
    let mut _84: &mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:387:17: 390:18
    let mut _85: lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:387:17: 387:45
    let mut _86: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:387:17: 387:45
    let _87: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:387:17: 387:37
    let mut _88: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:387:17: 387:27
    let mut _89: u64;                    // in scope 0 at cita-chain/src/forward.rs:388:21: 388:38
    let mut _90: core::libchain::chain::BlockInQueue; // in scope 0 at cita-chain/src/forward.rs:389:21: 389:79
    let mut _91: types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:389:50: 389:63
    let mut _92: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:389:50: 389:63
    let mut _93: libproto::Proof;        // in scope 0 at cita-chain/src/forward.rs:389:65: 389:78
    let mut _94: &libproto::Proof;       // in scope 0 at cita-chain/src/forward.rs:389:65: 389:78
    let _95: ();                         // in scope 0 at cita-chain/src/forward.rs:392:13: 392:72
    let mut _96: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:392:13: 392:72
    let _97: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:392:13: 392:72
    let mut _98: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:392:13: 392:72
    let mut _99: u64;                    // in scope 0 at cita-chain/src/forward.rs:392:46: 392:63
    let _100: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:392:65: 392:71
    let _101: ();                        // in scope 0 at cita-chain/src/forward.rs:393:13: 393:55
    let mut _102: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:393:13: 393:55
    let _103: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:393:13: 393:55
    let mut _104: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:393:13: 393:55
    let _105: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:393:48: 393:54
    let _106: ();                        // in scope 0 at cita-chain/src/forward.rs:394:13: 394:65
    let mut _107: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:394:13: 394:65
    let _108: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:394:13: 394:65
    let mut _109: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:394:13: 394:65
    let mut _110: u64;                   // in scope 0 at cita-chain/src/forward.rs:394:39: 394:56
    let _111: &types::block::OpenBlock;  // in scope 0 at cita-chain/src/forward.rs:394:58: 394:64
    let _112: ();                        // in scope 0 at cita-chain/src/forward.rs:395:13: 395:63
    let mut _113: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:395:13: 395:63
    let _114: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:395:13: 395:63
    let mut _115: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:395:13: 395:63
    let mut _116: u64;                   // in scope 0 at cita-chain/src/forward.rs:395:45: 395:62
    let mut _123: bool;                  // in scope 0 at cita-chain/src/forward.rs:397:5: 397:6
    let mut _124: bool;                  // in scope 0 at cita-chain/src/forward.rs:397:5: 397:6
    scope 1 {
        debug current_height => _3;      // in scope 1 at cita-chain/src/forward.rs:365:13: 365:27
        let mut _8: libproto::BlockWithProof; // in scope 1 at cita-chain/src/forward.rs:366:13: 366:26
        scope 2 {
            debug proof_blk => _8;       // in scope 2 at cita-chain/src/forward.rs:366:13: 366:26
            let _9: libproto::Block;     // in scope 2 at cita-chain/src/forward.rs:367:13: 367:24
            scope 3 {
                debug proto_block => _9; // in scope 3 at cita-chain/src/forward.rs:367:13: 367:24
                let _11: libproto::Proof; // in scope 3 at cita-chain/src/forward.rs:368:13: 368:18
                scope 4 {
                    debug proof => _11;  // in scope 4 at cita-chain/src/forward.rs:368:13: 368:18
                    let _13: usize;      // in scope 4 at cita-chain/src/forward.rs:369:13: 369:23
                    scope 5 {
                        debug blk_height => _13; // in scope 5 at cita-chain/src/forward.rs:369:13: 369:23
                        let _18: log::Level; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let _36: types::block::OpenBlock; // in scope 5 at cita-chain/src/forward.rs:377:13: 377:18
                        scope 6 {
                            debug lvl => _18; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _120: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _121: &[&str; 3]; // in scope 6 at cita-chain/src/forward.rs:372:13: 372:80
                            let mut _122: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 7 {
                            debug block => _36; // in scope 7 at cita-chain/src/forward.rs:377:13: 377:18
                            let _38: log::Level; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            scope 8 {
                                debug lvl => _38; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _117: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _118: &[&str; 4]; // in scope 8 at cita-chain/src/forward.rs:379:13: 379:75
                                let mut _119: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _123 = const false;              // scope 0 at cita-chain/src/forward.rs:365:13: 365:27
        _124 = const false;              // scope 0 at cita-chain/src/forward.rs:365:13: 365:27
        _124 = const true;               // scope 0 at cita-chain/src/forward.rs:365:13: 365:27
        _7 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/forward.rs:365:30: 365:61
        _6 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _7) -> [return: bb1, unwind: bb71]; // scope 0 at cita-chain/src/forward.rs:365:30: 365:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:365:30: 365:61
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-chain/src/forward.rs:365:30: 365:61
        _4 = core::libchain::chain::Chain::get_current_height(move _5) -> [return: bb2, unwind: bb71]; // scope 0 at cita-chain/src/forward.rs:365:30: 365:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:365:41: 365:59
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = move _4 as usize (IntToInt); // scope 0 at cita-chain/src/forward.rs:365:30: 365:70
        _124 = const false;              // scope 1 at cita-chain/src/forward.rs:366:29: 366:38
        _8 = move _2;                    // scope 1 at cita-chain/src/forward.rs:366:29: 366:38
        _10 = &mut _8;                   // scope 2 at cita-chain/src/forward.rs:367:27: 367:47
        _9 = libproto::BlockWithProof::take_blk(move _10) -> [return: bb3, unwind: bb66]; // scope 2 at cita-chain/src/forward.rs:367:27: 367:47
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:367:37: 367:45
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockWithProof) -> libproto::Block {libproto::BlockWithProof::take_blk}, val: Value(<ZST>) }
    }

    bb3: {
        _123 = const true;               // scope 2 at cita-chain/src/forward.rs:367:46: 367:47
        _12 = &mut _8;                   // scope 3 at cita-chain/src/forward.rs:368:21: 368:43
        _11 = libproto::BlockWithProof::take_proof(move _12) -> [return: bb4, unwind: bb69]; // scope 3 at cita-chain/src/forward.rs:368:21: 368:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:368:31: 368:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockWithProof) -> libproto::Proof {libproto::BlockWithProof::take_proof}, val: Value(<ZST>) }
    }

    bb4: {
        _17 = &_9;                       // scope 4 at cita-chain/src/forward.rs:369:26: 369:50
        _16 = libproto::Block::get_header(move _17) -> [return: bb5, unwind: bb65]; // scope 4 at cita-chain/src/forward.rs:369:26: 369:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:369:38: 369:48
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> &'a libproto::BlockHeader {libproto::Block::get_header}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _16;                       // scope 4 at cita-chain/src/forward.rs:369:26: 369:63
        _14 = libproto::BlockHeader::get_height(move _15) -> [return: bb6, unwind: bb65]; // scope 4 at cita-chain/src/forward.rs:369:26: 369:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:369:51: 369:61
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockHeader) -> u64 {libproto::BlockHeader::get_height}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = move _14 as usize (IntToInt); // scope 4 at cita-chain/src/forward.rs:369:26: 369:72
        _18 = log::Level::Trace;         // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _21 = &_18;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _122 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[5])) }
        _20 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _21, _122) -> [return: bb10, unwind: bb65]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _19 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _23 = &_18;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _25 = log::max_level() -> [return: bb11, unwind: bb65]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _19) -> [0: bb17, otherwise: bb13]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        switchInt(move _20) -> [0: bb7, otherwise: bb8]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _24 = &_25;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, move _24) -> [return: bb12, unwind: bb65]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _19 = move _22;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _121 = const _;                  // scope 6 at cita-chain/src/forward.rs:372:13: 372:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:372:13: 372:80
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[4])) }
        _28 = _121 as &[&str] (Pointer(Unsize)); // scope 6 at cita-chain/src/forward.rs:372:13: 372:80
        _33 = &_13;                      // scope 6 at cita-chain/src/forward.rs:373:13: 373:23
        _32 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(_33) -> [return: bb14, unwind: bb65]; // scope 6 at cita-chain/src/forward.rs:373:13: 373:23
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:373:13: 373:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb14: {
        _35 = &_3;                       // scope 6 at cita-chain/src/forward.rs:374:13: 374:27
        _34 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(_35) -> [return: bb15, unwind: bb65]; // scope 6 at cita-chain/src/forward.rs:374:13: 374:27
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:374:13: 374:27
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = [move _32, move _34];      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _30 = &_31;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _29 = _30 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _27 = Arguments::<'_>::new_v1(move _28, move _29) -> [return: bb16, unwind: bb65]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _120 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[3])) }
        _26 = log::__private_api_log(move _27, _18, _120) -> [return: bb72, unwind: bb65]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb17: {
        _123 = const false;              // scope 5 at cita-chain/src/forward.rs:377:37: 377:48
        _37 = move _9;                   // scope 5 at cita-chain/src/forward.rs:377:37: 377:48
        _36 = <OpenBlock as From<libproto::Block>>::from(move _37) -> [return: bb18, unwind: bb65]; // scope 5 at cita-chain/src/forward.rs:377:21: 377:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:377:21: 377:36
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(libproto::Block) -> OpenBlock {<OpenBlock as From<libproto::Block>>::from}, val: Value(<ZST>) }
    }

    bb18: {
        _38 = log::Level::Debug;         // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _41 = &_38;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _119 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[2])) }
        _40 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _41, _119) -> [return: bb22, unwind: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _39 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _43 = &_38;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _45 = log::max_level() -> [return: bb23, unwind: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _39) -> [0: bb40, otherwise: bb25]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        switchInt(move _40) -> [0: bb19, otherwise: bb20]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _44 = &_45;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _42 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _43, move _44) -> [return: bb24, unwind: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb24: {
        _39 = move _42;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _118 = const _;                  // scope 8 at cita-chain/src/forward.rs:379:13: 379:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:379:13: 379:75
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[1])) }
        _48 = _118 as &[&str] (Pointer(Unsize)); // scope 8 at cita-chain/src/forward.rs:379:13: 379:75
        _57 = &_36;                      // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
        _56 = <OpenBlock as Deref>::deref(move _57) -> [return: bb26, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:380:13: 380:27
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb26: {
        _55 = _56;                       // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
        _54 = OpenHeader::number(move _55) -> [return: bb27, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:380:19: 380:25
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u64 {OpenHeader::number}, val: Value(<ZST>) }
    }

    bb27: {
        _53 = &_54;                      // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
        _52 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_53) -> [return: bb28, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:380:13: 380:27
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:380:13: 380:27
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb28: {
        _63 = &_36;                      // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
        _62 = <OpenBlock as Deref>::deref(move _63) -> [return: bb29, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:381:13: 381:38
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb29: {
        _61 = _62;                       // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
        _60 = OpenHeader::transactions_root(move _61) -> [return: bb30, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:381:19: 381:36
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a H256 {OpenHeader::transactions_root}, val: Value(<ZST>) }
    }

    bb30: {
        _59 = &_60;                      // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
        _58 = core::fmt::ArgumentV1::<'_>::new_debug::<&H256>(_59) -> [return: bb31, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:381:13: 381:38
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:381:13: 381:38
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b &H256) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&H256>}, val: Value(<ZST>) }
    }

    bb31: {
        _71 = &_36;                      // scope 8 at cita-chain/src/forward.rs:382:13: 382:25
        _70 = OpenBlock::body(move _71) -> [return: bb32, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:382:13: 382:25
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:382:19: 382:23
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a types::block::BlockBody {OpenBlock::body}, val: Value(<ZST>) }
    }

    bb32: {
        _69 = _70;                       // scope 8 at cita-chain/src/forward.rs:382:13: 382:40
        _68 = types::block::BlockBody::transactions(move _69) -> [return: bb33, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:382:13: 382:40
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:382:26: 382:38
                                         // + literal: Const { ty: for<'a> fn(&'a types::block::BlockBody) -> &'a [types::transaction::SignedTransaction] {types::block::BlockBody::transactions}, val: Value(<ZST>) }
    }

    bb33: {
        _67 = _68;                       // scope 8 at cita-chain/src/forward.rs:382:13: 382:46
        _66 = core::slice::<impl [types::transaction::SignedTransaction]>::len(move _67) -> [return: bb34, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:382:13: 382:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:382:41: 382:44
                                         // + literal: Const { ty: for<'a> fn(&'a [types::transaction::SignedTransaction]) -> usize {core::slice::<impl [types::transaction::SignedTransaction]>::len}, val: Value(<ZST>) }
    }

    bb34: {
        _65 = &_66;                      // scope 8 at cita-chain/src/forward.rs:382:13: 382:46
        _64 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_65) -> [return: bb35, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:382:13: 382:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:382:13: 382:46
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb35: {
        _77 = &_36;                      // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
        _76 = <OpenBlock as Deref>::deref(move _77) -> [return: bb36, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:383:13: 383:28
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb36: {
        _75 = _76;                       // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
        _74 = OpenHeader::version(move _75) -> [return: bb37, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:383:19: 383:26
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u32 {OpenHeader::version}, val: Value(<ZST>) }
    }

    bb37: {
        _73 = &_74;                      // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
        _72 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_73) -> [return: bb38, unwind: bb64]; // scope 8 at cita-chain/src/forward.rs:383:13: 383:28
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:383:13: 383:28
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb38: {
        _51 = [move _52, move _58, move _64, move _72]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _50 = &_51;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _49 = _50 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _47 = Arguments::<'_>::new_v1(move _48, move _49) -> [return: bb39, unwind: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb39: {
        _117 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::consensus_block_enqueue, [], Some(promoted[0])) }
        _46 = log::__private_api_log(move _47, _38, _117) -> [return: bb73, unwind: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb40: {
        _80 = CheckedAdd(_3, const 1_usize); // scope 7 at cita-chain/src/forward.rs:385:26: 385:46
        assert(!move (_80.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, const 1_usize) -> [success: bb41, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:385:26: 385:46
    }

    bb41: {
        _79 = move (_80.0: usize);       // scope 7 at cita-chain/src/forward.rs:385:26: 385:46
        _78 = Eq(_13, move _79);         // scope 7 at cita-chain/src/forward.rs:385:12: 385:46
        switchInt(move _78) -> [0: bb58, otherwise: bb42]; // scope 7 at cita-chain/src/forward.rs:385:12: 385:46
    }

    bb42: {
        _88 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 7 at cita-chain/src/forward.rs:387:17: 387:27
        _87 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _88) -> [return: bb43, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:387:17: 387:37
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:387:17: 387:37
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb43: {
        _86 = &((*_87).4: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>); // scope 7 at cita-chain/src/forward.rs:387:17: 387:45
        _85 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write(move _86) -> [return: bb44, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:387:17: 387:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:387:38: 387:43
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> lock_api::rwlock::RwLockWriteGuard<'a, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write}, val: Value(<ZST>) }
    }

    bb44: {
        _84 = &mut _85;                  // scope 7 at cita-chain/src/forward.rs:387:17: 390:18
        _83 = <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut(move _84) -> [return: bb45, unwind: bb63]; // scope 7 at cita-chain/src/forward.rs:387:17: 390:18
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:387:17: 390:18
                                         // + literal: Const { ty: for<'a> fn(&'a mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> &'a mut <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as Deref>::Target {<lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb45: {
        _82 = _83;                       // scope 7 at cita-chain/src/forward.rs:387:17: 390:18
        _89 = _13 as u64 (IntToInt);     // scope 7 at cita-chain/src/forward.rs:388:21: 388:38
        _92 = &_36;                      // scope 7 at cita-chain/src/forward.rs:389:50: 389:63
        _91 = <OpenBlock as Clone>::clone(move _92) -> [return: bb46, unwind: bb63]; // scope 7 at cita-chain/src/forward.rs:389:50: 389:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:389:56: 389:61
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> OpenBlock {<OpenBlock as Clone>::clone}, val: Value(<ZST>) }
    }

    bb46: {
        _94 = &_11;                      // scope 7 at cita-chain/src/forward.rs:389:65: 389:78
        _93 = <libproto::Proof as Clone>::clone(move _94) -> [return: bb47, unwind: bb62]; // scope 7 at cita-chain/src/forward.rs:389:65: 389:78
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:389:71: 389:76
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Proof) -> libproto::Proof {<libproto::Proof as Clone>::clone}, val: Value(<ZST>) }
    }

    bb47: {
        _90 = ConsensusBlock(move _91, move _93); // scope 7 at cita-chain/src/forward.rs:389:21: 389:79
        _81 = BTreeMap::<u64, BlockInQueue>::insert(move _82, move _89, move _90) -> [return: bb48, unwind: bb63]; // scope 7 at cita-chain/src/forward.rs:387:17: 390:18
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:387:46: 387:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, BlockInQueue>, u64, BlockInQueue) -> Option<BlockInQueue> {BTreeMap::<u64, BlockInQueue>::insert}, val: Value(<ZST>) }
    }

    bb48: {
        drop(_81) -> [return: bb49, unwind: bb63]; // scope 7 at cita-chain/src/forward.rs:390:18: 390:19
    }

    bb49: {
        drop(_85) -> [return: bb50, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:390:18: 390:19
    }

    bb50: {
        _98 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 7 at cita-chain/src/forward.rs:392:13: 392:72
        _97 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _98) -> [return: bb51, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:392:13: 392:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:392:13: 392:72
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb51: {
        _96 = _97;                       // scope 7 at cita-chain/src/forward.rs:392:13: 392:72
        _99 = _13 as u64 (IntToInt);     // scope 7 at cita-chain/src/forward.rs:392:46: 392:63
        _100 = &_11;                     // scope 7 at cita-chain/src/forward.rs:392:65: 392:71
        _95 = core::libchain::chain::Chain::set_proof_with_height(move _96, move _99, _100) -> [return: bb52, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:392:13: 392:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:392:24: 392:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, u64, &'b libproto::Proof) {core::libchain::chain::Chain::set_proof_with_height}, val: Value(<ZST>) }
    }

    bb52: {
        _104 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 7 at cita-chain/src/forward.rs:393:13: 393:55
        _103 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _104) -> [return: bb53, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:393:13: 393:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:393:13: 393:55
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb53: {
        _102 = _103;                     // scope 7 at cita-chain/src/forward.rs:393:13: 393:55
        _105 = &_11;                     // scope 7 at cita-chain/src/forward.rs:393:48: 393:54
        _101 = core::libchain::chain::Chain::save_current_block_poof(move _102, _105) -> [return: bb54, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:393:13: 393:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:393:24: 393:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, &'b libproto::Proof) {core::libchain::chain::Chain::save_current_block_poof}, val: Value(<ZST>) }
    }

    bb54: {
        _109 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 7 at cita-chain/src/forward.rs:394:13: 394:65
        _108 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _109) -> [return: bb55, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:394:13: 394:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:394:13: 394:65
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb55: {
        _107 = _108;                     // scope 7 at cita-chain/src/forward.rs:394:13: 394:65
        _110 = _13 as u64 (IntToInt);    // scope 7 at cita-chain/src/forward.rs:394:39: 394:56
        _111 = &_36;                     // scope 7 at cita-chain/src/forward.rs:394:58: 394:64
        _106 = core::libchain::chain::Chain::set_block_body(move _107, move _110, _111) -> [return: bb56, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:394:13: 394:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:394:24: 394:38
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, u64, &'b OpenBlock) {core::libchain::chain::Chain::set_block_body}, val: Value(<ZST>) }
    }

    bb56: {
        _115 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 7 at cita-chain/src/forward.rs:395:13: 395:63
        _114 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _115) -> [return: bb57, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:395:13: 395:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:395:13: 395:63
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb57: {
        _113 = _114;                     // scope 7 at cita-chain/src/forward.rs:395:13: 395:63
        _116 = _13 as u64 (IntToInt);    // scope 7 at cita-chain/src/forward.rs:395:45: 395:62
        _112 = core::libchain::chain::Chain::set_max_store_height(move _113, move _116) -> [return: bb74, unwind: bb64]; // scope 7 at cita-chain/src/forward.rs:395:13: 395:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:395:24: 395:44
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, u64) {core::libchain::chain::Chain::set_max_store_height}, val: Value(<ZST>) }
    }

    bb58: {
        drop(_36) -> [return: bb59, unwind: bb65]; // scope 5 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb59: {
        drop(_11) -> [return: bb60, unwind: bb69]; // scope 3 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb60: {
        _123 = const false;              // scope 2 at cita-chain/src/forward.rs:397:5: 397:6
        drop(_8) -> [return: bb61, unwind: bb71]; // scope 1 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb61: {
        return;                          // scope 0 at cita-chain/src/forward.rs:397:6: 397:6
    }

    bb62 (cleanup): {
        drop(_91) -> bb63;               // scope 7 at cita-chain/src/forward.rs:389:78: 389:79
    }

    bb63 (cleanup): {
        drop(_85) -> bb64;               // scope 7 at cita-chain/src/forward.rs:390:18: 390:19
    }

    bb64 (cleanup): {
        drop(_36) -> bb65;               // scope 5 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb65 (cleanup): {
        drop(_11) -> bb69;               // scope 3 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb66 (cleanup): {
        drop(_8) -> bb71;                // scope 1 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb67 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:364:5: 397:6
    }

    bb68 (cleanup): {
        drop(_9) -> bb66;                // scope 2 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb69 (cleanup): {
        switchInt(_123) -> [0: bb66, otherwise: bb68]; // scope 2 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb70 (cleanup): {
        drop(_2) -> bb67;                // scope 0 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb71 (cleanup): {
        switchInt(_124) -> [0: bb67, otherwise: bb70]; // scope 0 at cita-chain/src/forward.rs:397:5: 397:6
    }

    bb72: {
        goto -> bb17;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb73: {
        goto -> bb40;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb74: {
        goto -> bb58;                    // scope 7 at cita-chain/src/forward.rs:395:13: 395:63
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:378:9: 384:10
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:378:9: 384:10

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:378:9: 384:10
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:378:9: 384:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:378:9: 384:10
        _1 = (move _2, move _4, move _6, const 378_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-chain/src/forward.rs:379:13: 379:75
    let mut _1: [&str; 4];               // in scope 0 at cita-chain/src/forward.rs:379:13: 379:75

    bb0: {
        _1 = [const "consensus block ", const " txs_root ", const " txs_len ", const " block_version "]; // scope 0 at cita-chain/src/forward.rs:379:13: 379:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:379:13: 379:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:379:13: 379:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:379:13: 379:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:379:13: 379:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:379:13: 379:75
        return;                          // scope 0 at cita-chain/src/forward.rs:379:13: 379:75
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:371:9: 375:10
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:371:9: 375:10

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:371:9: 375:10
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:371:9: 375:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:371:9: 375:10
        _1 = (move _2, move _4, move _6, const 371_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-chain/src/forward.rs:372:13: 372:80
    let mut _1: [&str; 3];               // in scope 0 at cita-chain/src/forward.rs:372:13: 372:80

    bb0: {
        _1 = [const "Received consensus block: block_number:", const " current_height: ", const " "]; // scope 0 at cita-chain/src/forward.rs:372:13: 372:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:372:13: 372:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:372:13: 372:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:372:13: 372:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:372:13: 372:80
        return;                          // scope 0 at cita-chain/src/forward.rs:372:13: 372:80
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::consensus_block_enqueue: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req(_1: &Forward, _2: libproto::SyncRequest, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:399:22: 399:27
    debug sync_req => _2;                // in scope 0 at cita-chain/src/forward.rs:399:29: 399:37
    debug origin => _3;                  // in scope 0 at cita-chain/src/forward.rs:399:52: 399:58
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:399:65: 399:65
    let mut _4: libproto::SyncRequest;   // in scope 0 at cita-chain/src/forward.rs:400:13: 400:25
    let mut _6: &mut libproto::SyncRequest; // in scope 0 at cita-chain/src/forward.rs:401:23: 401:46
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-chain/src/forward.rs:403:13: 403:69
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:404:13: 404:19
    let _22: &u32;                       // in scope 0 at cita-chain/src/forward.rs:404:13: 404:19
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:404:21: 404:28
    let _24: &std::vec::Vec<u64>;        // in scope 0 at cita-chain/src/forward.rs:404:21: 404:28
    let mut _26: std::vec::Vec<u64>;     // in scope 0 at cita-chain/src/forward.rs:407:42: 407:49
    let mut _28: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _29: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _30: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _31: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _32: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _33: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _34: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _35: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _37: &[&str];                // in scope 0 at cita-chain/src/forward.rs:410:13: 410:62
    let mut _38: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _39: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _40: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:411:13: 411:19
    let _42: &u32;                       // in scope 0 at cita-chain/src/forward.rs:411:13: 411:19
    let mut _43: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:412:13: 412:39
    let _44: &usize;                     // in scope 0 at cita-chain/src/forward.rs:412:13: 412:39
    let _45: usize;                      // in scope 0 at cita-chain/src/forward.rs:412:13: 412:39
    let mut _46: &[libproto::Block];     // in scope 0 at cita-chain/src/forward.rs:412:13: 412:39
    let _47: &[libproto::Block];         // in scope 0 at cita-chain/src/forward.rs:412:13: 412:33
    let mut _48: &libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:412:13: 412:33
    let mut _49: bool;                   // in scope 0 at cita-chain/src/forward.rs:414:12: 414:44
    let mut _50: bool;                   // in scope 0 at cita-chain/src/forward.rs:414:13: 414:44
    let mut _51: &[libproto::Block];     // in scope 0 at cita-chain/src/forward.rs:414:13: 414:44
    let _52: &[libproto::Block];         // in scope 0 at cita-chain/src/forward.rs:414:13: 414:33
    let mut _53: &libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:414:13: 414:33
    let mut _55: libproto::OperateType;  // in scope 0 at cita-chain/src/forward.rs:415:37: 415:56
    let mut _56: libproto::MsgClass;     // in scope 0 at cita-chain/src/forward.rs:415:66: 415:80
    let mut _57: libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:415:66: 415:73
    let mut _59: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _60: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _61: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _63: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _64: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _65: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _66: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _67: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _68: &[&str];                // in scope 0 at cita-chain/src/forward.rs:417:17: 417:65
    let mut _69: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _70: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _71: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:418:17: 418:23
    let _73: &u32;                       // in scope 0 at cita-chain/src/forward.rs:418:17: 418:23
    let mut _74: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:419:17: 419:36
    let _75: ();                         // in scope 0 at cita-chain/src/forward.rs:421:13: 426:26
    let mut _76: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:421:13: 425:19
    let mut _77: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:421:13: 425:19
    let mut _78: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:422:23: 425:18
    let mut _79: std::string::String;    // in scope 0 at cita-chain/src/forward.rs:423:21: 423:63
    let mut _80: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _81: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _82: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _83: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:424:21: 424:44
    let mut _84: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:424:21: 424:35
    let mut _85: libproto::Message;      // in scope 0 at cita-chain/src/forward.rs:424:21: 424:24
    let mut _96: bool;                   // in scope 0 at cita-chain/src/forward.rs:428:5: 428:6
    let mut _97: bool;                   // in scope 0 at cita-chain/src/forward.rs:427:9: 427:10
    let mut _98: bool;                   // in scope 0 at cita-chain/src/forward.rs:428:5: 428:6
    scope 1 {
        debug sync_req => _4;            // in scope 1 at cita-chain/src/forward.rs:400:13: 400:25
        let _5: std::vec::Vec<u64>;      // in scope 1 at cita-chain/src/forward.rs:401:13: 401:20
        scope 2 {
            debug heights => _5;         // in scope 2 at cita-chain/src/forward.rs:401:13: 401:20
            let _7: log::Level;          // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _25: libproto::SyncResponse; // in scope 2 at cita-chain/src/forward.rs:407:13: 407:20
            scope 3 {
                debug lvl => _7;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _93: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _94: &[&str; 2]; // in scope 3 at cita-chain/src/forward.rs:403:13: 403:69
                let mut _95: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug res_vec => _25;    // in scope 4 at cita-chain/src/forward.rs:407:13: 407:20
                let _27: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _54: libproto::Message; // in scope 4 at cita-chain/src/forward.rs:415:17: 415:20
                scope 5 {
                    debug lvl => _27;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _90: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _91: &[&str; 2]; // in scope 5 at cita-chain/src/forward.rs:410:13: 410:62
                    let mut _92: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 6 {
                    debug msg => _54;    // in scope 6 at cita-chain/src/forward.rs:415:17: 415:20
                    let _58: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    scope 7 {
                        debug lvl => _58; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let mut _86: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                        let mut _87: &libproto::OperateType; // in scope 7 at cita-chain/src/forward.rs:419:17: 419:36
                        let mut _88: &[&str; 2]; // in scope 7 at cita-chain/src/forward.rs:417:17: 417:65
                        let mut _89: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                    }
                }
            }
        }
    }

    bb0: {
        _96 = const false;               // scope 0 at cita-chain/src/forward.rs:400:13: 400:25
        _97 = const false;               // scope 0 at cita-chain/src/forward.rs:400:13: 400:25
        _98 = const false;               // scope 0 at cita-chain/src/forward.rs:400:13: 400:25
        _4 = move _2;                    // scope 0 at cita-chain/src/forward.rs:400:28: 400:36
        _6 = &mut _4;                    // scope 1 at cita-chain/src/forward.rs:401:23: 401:46
        _5 = libproto::SyncRequest::take_heights(move _6) -> [return: bb1, unwind: bb52]; // scope 1 at cita-chain/src/forward.rs:401:23: 401:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:401:32: 401:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncRequest) -> Vec<u64> {libproto::SyncRequest::take_heights}, val: Value(<ZST>) }
    }

    bb1: {
        _98 = const true;                // scope 1 at cita-chain/src/forward.rs:401:45: 401:46
        _7 = log::Level::Debug;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _10 = &_7;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _95 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[9])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _95) -> [return: bb5, unwind: bb60]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = const false;                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _12 = &_7;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> [return: bb6, unwind: bb60]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _8) -> [0: bb12, otherwise: bb8]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _9) -> [0: bb2, otherwise: bb3]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _13 = &_14;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> [return: bb7, unwind: bb60]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = move _11;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _94 = const _;                   // scope 3 at cita-chain/src/forward.rs:403:13: 403:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:403:13: 403:69
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[8])) }
        _17 = _94 as &[&str] (Pointer(Unsize)); // scope 3 at cita-chain/src/forward.rs:403:13: 403:69
        _22 = &_3;                       // scope 3 at cita-chain/src/forward.rs:404:13: 404:19
        _21 = core::fmt::ArgumentV1::<'_>::new_debug::<u32>(_22) -> [return: bb9, unwind: bb60]; // scope 3 at cita-chain/src/forward.rs:404:13: 404:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:404:13: 404:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u32>}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = &_5;                       // scope 3 at cita-chain/src/forward.rs:404:21: 404:28
        _23 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>(_24) -> [return: bb10, unwind: bb60]; // scope 3 at cita-chain/src/forward.rs:404:21: 404:28
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:404:21: 404:28
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<u64>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>}, val: Value(<ZST>) }
    }

    bb10: {
        _20 = [move _21, move _23];      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = Arguments::<'_>::new_v1(move _17, move _18) -> [return: bb11, unwind: bb60]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _93 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[7])) }
        _15 = log::__private_api_log(move _16, _7, _93) -> [return: bb61, unwind: bb60]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _98 = const false;               // scope 2 at cita-chain/src/forward.rs:407:42: 407:49
        _26 = move _5;                   // scope 2 at cita-chain/src/forward.rs:407:42: 407:49
        _25 = Forward::sync_response(_1, move _26) -> [return: bb13, unwind: bb60]; // scope 2 at cita-chain/src/forward.rs:407:23: 407:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:407:28: 407:41
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, Vec<u64>) -> libproto::SyncResponse {Forward::sync_response}, val: Value(<ZST>) }
    }

    bb13: {
        _96 = const true;                // scope 2 at cita-chain/src/forward.rs:407:49: 407:50
        _27 = log::Level::Debug;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _30 = &_27;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _92 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[6])) }
        _29 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _30, _92) -> [return: bb17, unwind: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb14: {
        _28 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _32 = &_27;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _34 = log::max_level() -> [return: bb18, unwind: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _28) -> [0: bb26, otherwise: bb20]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        switchInt(move _29) -> [0: bb14, otherwise: bb15]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        _33 = &_34;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _31 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _32, move _33) -> [return: bb19, unwind: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _28 = move _31;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _91 = const _;                   // scope 5 at cita-chain/src/forward.rs:410:13: 410:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:410:13: 410:62
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[5])) }
        _37 = _91 as &[&str] (Pointer(Unsize)); // scope 5 at cita-chain/src/forward.rs:410:13: 410:62
        _42 = &_3;                       // scope 5 at cita-chain/src/forward.rs:411:13: 411:19
        _41 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_42) -> [return: bb21, unwind: bb58]; // scope 5 at cita-chain/src/forward.rs:411:13: 411:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:411:13: 411:19
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb21: {
        _48 = &_25;                      // scope 5 at cita-chain/src/forward.rs:412:13: 412:33
        _47 = libproto::SyncResponse::get_blocks(move _48) -> [return: bb22, unwind: bb58]; // scope 5 at cita-chain/src/forward.rs:412:13: 412:33
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:412:21: 412:31
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::SyncResponse) -> &'a [libproto::Block] {libproto::SyncResponse::get_blocks}, val: Value(<ZST>) }
    }

    bb22: {
        _46 = _47;                       // scope 5 at cita-chain/src/forward.rs:412:13: 412:39
        _45 = core::slice::<impl [libproto::Block]>::len(move _46) -> [return: bb23, unwind: bb58]; // scope 5 at cita-chain/src/forward.rs:412:13: 412:39
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:412:34: 412:37
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Block]) -> usize {core::slice::<impl [libproto::Block]>::len}, val: Value(<ZST>) }
    }

    bb23: {
        _44 = &_45;                      // scope 5 at cita-chain/src/forward.rs:412:13: 412:39
        _43 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_44) -> [return: bb24, unwind: bb58]; // scope 5 at cita-chain/src/forward.rs:412:13: 412:39
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:412:13: 412:39
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb24: {
        _40 = [move _41, move _43];      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _39 = &_40;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _38 = _39 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _36 = Arguments::<'_>::new_v1(move _37, move _38) -> [return: bb25, unwind: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb25: {
        _90 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[4])) }
        _35 = log::__private_api_log(move _36, _27, _90) -> [return: bb62, unwind: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb26: {
        _53 = &_25;                      // scope 4 at cita-chain/src/forward.rs:414:13: 414:33
        _52 = libproto::SyncResponse::get_blocks(move _53) -> [return: bb27, unwind: bb58]; // scope 4 at cita-chain/src/forward.rs:414:13: 414:33
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:414:21: 414:31
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::SyncResponse) -> &'a [libproto::Block] {libproto::SyncResponse::get_blocks}, val: Value(<ZST>) }
    }

    bb27: {
        _51 = _52;                       // scope 4 at cita-chain/src/forward.rs:414:13: 414:44
        _50 = core::slice::<impl [libproto::Block]>::is_empty(move _51) -> [return: bb28, unwind: bb58]; // scope 4 at cita-chain/src/forward.rs:414:13: 414:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:414:34: 414:42
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Block]) -> bool {core::slice::<impl [libproto::Block]>::is_empty}, val: Value(<ZST>) }
    }

    bb28: {
        _49 = Not(move _50);             // scope 4 at cita-chain/src/forward.rs:414:12: 414:44
        switchInt(move _49) -> [0: bb48, otherwise: bb29]; // scope 4 at cita-chain/src/forward.rs:414:12: 414:44
    }

    bb29: {
        _55 = const libproto::OperateType::Single; // scope 4 at cita-chain/src/forward.rs:415:37: 415:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _96 = const false;               // scope 4 at cita-chain/src/forward.rs:415:66: 415:73
        _57 = move _25;                  // scope 4 at cita-chain/src/forward.rs:415:66: 415:73
        _56 = <libproto::SyncResponse as Into<InnerMessage_oneof_content>>::into(move _57) -> [return: bb30, unwind: bb58]; // scope 4 at cita-chain/src/forward.rs:415:66: 415:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:415:74: 415:78
                                         // + literal: Const { ty: fn(libproto::SyncResponse) -> InnerMessage_oneof_content {<libproto::SyncResponse as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb30: {
        _54 = libproto::Message::init(move _55, _3, move _56) -> [return: bb31, unwind: bb58]; // scope 4 at cita-chain/src/forward.rs:415:23: 415:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:415:23: 415:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb31: {
        _97 = const true;                // scope 4 at cita-chain/src/forward.rs:415:80: 415:81
        _58 = log::Level::Trace;         // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _61 = &_58;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _89 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[3])) }
        _60 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _61, _89) -> [return: bb35, unwind: bb56]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb32: {
        _59 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb34;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _63 = &_58;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _65 = log::max_level() -> [return: bb36, unwind: bb56]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb34: {
        switchInt(move _59) -> [0: bb42, otherwise: bb38]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        switchInt(move _60) -> [0: bb32, otherwise: bb33]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _64 = &_65;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _62 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _63, move _64) -> [return: bb37, unwind: bb56]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb37: {
        _59 = move _62;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb34;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _88 = const _;                   // scope 7 at cita-chain/src/forward.rs:417:17: 417:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:417:17: 417:65
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[2])) }
        _68 = _88 as &[&str] (Pointer(Unsize)); // scope 7 at cita-chain/src/forward.rs:417:17: 417:65
        _73 = &_3;                       // scope 7 at cita-chain/src/forward.rs:418:17: 418:23
        _72 = core::fmt::ArgumentV1::<'_>::new_debug::<u32>(_73) -> [return: bb39, unwind: bb56]; // scope 7 at cita-chain/src/forward.rs:418:17: 418:23
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:418:17: 418:23
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u32>}, val: Value(<ZST>) }
    }

    bb39: {
        _87 = const _;                   // scope 7 at cita-chain/src/forward.rs:419:17: 419:36
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:419:17: 419:36
                                         // + literal: Const { ty: &OperateType, val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[1])) }
        _74 = core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>(_87) -> [return: bb40, unwind: bb56]; // scope 7 at cita-chain/src/forward.rs:419:17: 419:36
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:419:17: 419:36
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b OperateType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>}, val: Value(<ZST>) }
    }

    bb40: {
        _71 = [move _72, move _74];      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _70 = &_71;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _69 = _70 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _67 = Arguments::<'_>::new_v1(move _68, move _69) -> [return: bb41, unwind: bb56]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb41: {
        _86 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_syn_req, [], Some(promoted[0])) }
        _66 = log::__private_api_log(move _67, _58, _86) -> [return: bb63, unwind: bb56]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb42: {
        _77 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 6 at cita-chain/src/forward.rs:421:13: 425:19
        _81 = const libproto::router::SubModules::Chain; // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _82 = const libproto::router::MsgType::SyncResponse; // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x04)) }
        _80 = RoutingKey(move _81, move _82); // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _79 = <RoutingKey as Into<std::string::String>>::into(move _80) -> [return: bb43, unwind: bb56]; // scope 6 at cita-chain/src/forward.rs:423:21: 423:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:423:57: 423:61
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb43: {
        _97 = const false;               // scope 6 at cita-chain/src/forward.rs:424:21: 424:24
        _85 = move _54;                  // scope 6 at cita-chain/src/forward.rs:424:21: 424:24
        _84 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _85) -> [return: bb44, unwind: bb51]; // scope 6 at cita-chain/src/forward.rs:424:21: 424:35
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:424:25: 424:33
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb44: {
        _83 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _84) -> [return: bb45, unwind: bb51]; // scope 6 at cita-chain/src/forward.rs:424:21: 424:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:424:36: 424:42
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb45: {
        _78 = (move _79, move _83);      // scope 6 at cita-chain/src/forward.rs:422:23: 425:18
        _76 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _77, move _78) -> [return: bb46, unwind: bb56]; // scope 6 at cita-chain/src/forward.rs:421:13: 425:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:422:18: 422:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb46: {
        _75 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _76) -> [return: bb47, unwind: bb56]; // scope 6 at cita-chain/src/forward.rs:421:13: 426:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:426:18: 426:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb47: {
        _97 = const false;               // scope 4 at cita-chain/src/forward.rs:427:9: 427:10
        goto -> bb48;                    // scope 4 at cita-chain/src/forward.rs:414:9: 427:10
    }

    bb48: {
        switchInt(_96) -> [0: bb49, otherwise: bb54]; // scope 2 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb49: {
        _96 = const false;               // scope 2 at cita-chain/src/forward.rs:428:5: 428:6
        _98 = const false;               // scope 1 at cita-chain/src/forward.rs:428:5: 428:6
        drop(_4) -> bb50;                // scope 0 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb50: {
        return;                          // scope 0 at cita-chain/src/forward.rs:428:6: 428:6
    }

    bb51 (cleanup): {
        drop(_79) -> bb56;               // scope 6 at cita-chain/src/forward.rs:425:17: 425:18
    }

    bb52 (cleanup): {
        drop(_4) -> bb53;                // scope 0 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb53 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:399:5: 428:6
    }

    bb54: {
        drop(_25) -> [return: bb49, unwind: bb60]; // scope 2 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb55 (cleanup): {
        drop(_54) -> bb58;               // scope 4 at cita-chain/src/forward.rs:427:9: 427:10
    }

    bb56 (cleanup): {
        switchInt(_97) -> [0: bb58, otherwise: bb55]; // scope 4 at cita-chain/src/forward.rs:427:9: 427:10
    }

    bb57 (cleanup): {
        drop(_25) -> bb60;               // scope 2 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb58 (cleanup): {
        switchInt(_96) -> [0: bb60, otherwise: bb57]; // scope 2 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb59 (cleanup): {
        drop(_5) -> bb52;                // scope 1 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb60 (cleanup): {
        switchInt(_98) -> [0: bb52, otherwise: bb59]; // scope 1 at cita-chain/src/forward.rs:428:5: 428:6
    }

    bb61: {
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb62: {
        goto -> bb26;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb63: {
        goto -> bb42;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:416:13: 420:14
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:416:13: 420:14

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:416:13: 420:14
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:416:13: 420:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:416:13: 420:14
        _1 = (move _2, move _4, move _6, const 416_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &OperateType = {
    let mut _0: &libproto::OperateType;  // return place in scope 0 at cita-chain/src/forward.rs:419:17: 419:36
    let mut _1: libproto::OperateType;   // in scope 0 at cita-chain/src/forward.rs:419:17: 419:36

    bb0: {
        _1 = libproto::OperateType::Single; // scope 0 at cita-chain/src/forward.rs:419:17: 419:36
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:419:17: 419:36
        return;                          // scope 0 at cita-chain/src/forward.rs:419:17: 419:36
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:417:17: 417:65
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:417:17: 417:65

    bb0: {
        _1 = [const "sync: origin ", const ", chain.blk: OperateType "]; // scope 0 at cita-chain/src/forward.rs:417:17: 417:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:417:17: 417:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:417:17: 417:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:417:17: 417:65
        return;                          // scope 0 at cita-chain/src/forward.rs:417:17: 417:65
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:409:9: 413:10
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:409:9: 413:10

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:409:9: 413:10
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:409:9: 413:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:409:9: 413:10
        _1 = (move _2, move _4, move _6, const 409_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:410:13: 410:62
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:410:13: 410:62

    bb0: {
        _1 = [const "sync: reply node = ", const ", response blocks len = "]; // scope 0 at cita-chain/src/forward.rs:410:13: 410:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:410:13: 410:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:410:13: 410:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:410:13: 410:62
        return;                          // scope 0 at cita-chain/src/forward.rs:410:13: 410:62
    }
}

promoted[6] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[7] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:402:9: 405:10
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:402:9: 405:10

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:402:9: 405:10
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:402:9: 405:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:402:9: 405:10
        _1 = (move _2, move _4, move _6, const 402_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[8] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:403:13: 403:69
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:403:13: 403:69

    bb0: {
        _1 = [const "sync: receive sync from node ", const ", height lists = "]; // scope 0 at cita-chain/src/forward.rs:403:13: 403:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:403:13: 403:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:403:13: 403:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:403:13: 403:69
        return;                          // scope 0 at cita-chain/src/forward.rs:403:13: 403:69
    }
}

promoted[9] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_syn_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_local_syn_req(_1: &Forward, _2: Vec<u64>) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:430:28: 430:33
    debug heights => _2;                 // in scope 0 at cita-chain/src/forward.rs:430:35: 430:42
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:430:54: 430:54
    let _3: libproto::SyncResponse;      // in scope 0 at cita-chain/src/forward.rs:431:13: 431:20
    let mut _4: bool;                    // in scope 0 at cita-chain/src/forward.rs:432:12: 432:44
    let mut _5: bool;                    // in scope 0 at cita-chain/src/forward.rs:432:13: 432:44
    let mut _6: &[libproto::Block];      // in scope 0 at cita-chain/src/forward.rs:432:13: 432:44
    let _7: &[libproto::Block];          // in scope 0 at cita-chain/src/forward.rs:432:13: 432:33
    let mut _8: &libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:432:13: 432:33
    let mut _10: libproto::OperateType;  // in scope 0 at cita-chain/src/forward.rs:433:37: 433:56
    let mut _11: libproto::MsgClass;     // in scope 0 at cita-chain/src/forward.rs:433:61: 433:75
    let mut _12: libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:433:61: 433:68
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _16: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _19: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _23: &[&str];                // in scope 0 at cita-chain/src/forward.rs:435:17: 435:58
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:436:17: 436:36
    let _28: ();                         // in scope 0 at cita-chain/src/forward.rs:438:13: 443:26
    let mut _29: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:438:13: 442:19
    let mut _30: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:438:13: 442:19
    let mut _31: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:439:23: 442:18
    let mut _32: std::string::String;    // in scope 0 at cita-chain/src/forward.rs:440:21: 440:60
    let mut _33: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _34: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _35: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _36: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:441:21: 441:44
    let mut _37: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:441:21: 441:35
    let mut _38: libproto::Message;      // in scope 0 at cita-chain/src/forward.rs:441:21: 441:24
    let mut _43: bool;                   // in scope 0 at cita-chain/src/forward.rs:445:5: 445:6
    let mut _44: bool;                   // in scope 0 at cita-chain/src/forward.rs:444:9: 444:10
    scope 1 {
        debug res_vec => _3;             // in scope 1 at cita-chain/src/forward.rs:431:13: 431:20
        let _9: libproto::Message;       // in scope 1 at cita-chain/src/forward.rs:433:17: 433:20
        scope 2 {
            debug msg => _9;             // in scope 2 at cita-chain/src/forward.rs:433:17: 433:20
            let _13: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _13;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _39: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _40: &libproto::OperateType; // in scope 3 at cita-chain/src/forward.rs:436:17: 436:36
                let mut _41: &[&str; 1]; // in scope 3 at cita-chain/src/forward.rs:435:17: 435:58
                let mut _42: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _44 = const false;               // scope 0 at cita-chain/src/forward.rs:431:13: 431:20
        _43 = const false;               // scope 0 at cita-chain/src/forward.rs:431:13: 431:20
        _3 = Forward::sync_response(_1, move _2) -> bb1; // scope 0 at cita-chain/src/forward.rs:431:23: 431:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:431:28: 431:41
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, Vec<u64>) -> libproto::SyncResponse {Forward::sync_response}, val: Value(<ZST>) }
    }

    bb1: {
        _43 = const true;                // scope 0 at cita-chain/src/forward.rs:431:49: 431:50
        _8 = &_3;                        // scope 1 at cita-chain/src/forward.rs:432:13: 432:33
        _7 = libproto::SyncResponse::get_blocks(move _8) -> [return: bb2, unwind: bb30]; // scope 1 at cita-chain/src/forward.rs:432:13: 432:33
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:432:21: 432:31
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::SyncResponse) -> &'a [libproto::Block] {libproto::SyncResponse::get_blocks}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = _7;                         // scope 1 at cita-chain/src/forward.rs:432:13: 432:44
        _5 = core::slice::<impl [libproto::Block]>::is_empty(move _6) -> [return: bb3, unwind: bb30]; // scope 1 at cita-chain/src/forward.rs:432:13: 432:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:432:34: 432:42
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Block]) -> bool {core::slice::<impl [libproto::Block]>::is_empty}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = Not(move _5);               // scope 1 at cita-chain/src/forward.rs:432:12: 432:44
        switchInt(move _4) -> [0: bb22, otherwise: bb4]; // scope 1 at cita-chain/src/forward.rs:432:12: 432:44
    }

    bb4: {
        _10 = const libproto::OperateType::Single; // scope 1 at cita-chain/src/forward.rs:433:37: 433:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _43 = const false;               // scope 1 at cita-chain/src/forward.rs:433:61: 433:68
        _12 = move _3;                   // scope 1 at cita-chain/src/forward.rs:433:61: 433:68
        _11 = <libproto::SyncResponse as Into<InnerMessage_oneof_content>>::into(move _12) -> [return: bb5, unwind: bb30]; // scope 1 at cita-chain/src/forward.rs:433:61: 433:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:433:69: 433:73
                                         // + literal: Const { ty: fn(libproto::SyncResponse) -> InnerMessage_oneof_content {<libproto::SyncResponse as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = libproto::Message::init(move _10, const 0_u32, move _11) -> [return: bb6, unwind: bb30]; // scope 1 at cita-chain/src/forward.rs:433:23: 433:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:433:23: 433:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb6: {
        _44 = const true;                // scope 1 at cita-chain/src/forward.rs:433:75: 433:76
        _13 = log::Level::Trace;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _16 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _42 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::reply_local_syn_req, [], Some(promoted[3])) }
        _15 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _16, _42) -> [return: bb10, unwind: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _14 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _18 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _20 = log::max_level() -> [return: bb11, unwind: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _14) -> [0: bb16, otherwise: bb13]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        switchInt(move _15) -> [0: bb7, otherwise: bb8]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _19 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, move _19) -> [return: bb12, unwind: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _14 = move _17;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _41 = const _;                   // scope 3 at cita-chain/src/forward.rs:435:17: 435:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:435:17: 435:58
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::reply_local_syn_req, [], Some(promoted[2])) }
        _23 = _41 as &[&str] (Pointer(Unsize)); // scope 3 at cita-chain/src/forward.rs:435:17: 435:58
        _40 = const _;                   // scope 3 at cita-chain/src/forward.rs:436:17: 436:36
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:436:17: 436:36
                                         // + literal: Const { ty: &OperateType, val: Unevaluated(Forward::reply_local_syn_req, [], Some(promoted[1])) }
        _27 = core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>(_40) -> [return: bb14, unwind: bb28]; // scope 3 at cita-chain/src/forward.rs:436:17: 436:36
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:436:17: 436:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b OperateType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>}, val: Value(<ZST>) }
    }

    bb14: {
        _26 = [move _27];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = &_26;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = Arguments::<'_>::new_v1(move _23, move _24) -> [return: bb15, unwind: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _39 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::reply_local_syn_req, [], Some(promoted[0])) }
        _21 = log::__private_api_log(move _22, _13, _39) -> [return: bb31, unwind: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 2 at cita-chain/src/forward.rs:438:13: 442:19
        _34 = const libproto::router::SubModules::Chain; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _35 = const LocalSync;           // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x1f)) }
        _33 = RoutingKey(move _34, move _35); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _32 = <RoutingKey as Into<std::string::String>>::into(move _33) -> [return: bb17, unwind: bb28]; // scope 2 at cita-chain/src/forward.rs:440:21: 440:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:440:54: 440:58
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb17: {
        _44 = const false;               // scope 2 at cita-chain/src/forward.rs:441:21: 441:24
        _38 = move _9;                   // scope 2 at cita-chain/src/forward.rs:441:21: 441:24
        _37 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _38) -> [return: bb18, unwind: bb24]; // scope 2 at cita-chain/src/forward.rs:441:21: 441:35
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:441:25: 441:33
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb18: {
        _36 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _37) -> [return: bb19, unwind: bb24]; // scope 2 at cita-chain/src/forward.rs:441:21: 441:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:441:36: 441:42
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb19: {
        _31 = (move _32, move _36);      // scope 2 at cita-chain/src/forward.rs:439:23: 442:18
        _29 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _30, move _31) -> [return: bb20, unwind: bb28]; // scope 2 at cita-chain/src/forward.rs:438:13: 442:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:439:18: 439:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb20: {
        _28 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _29) -> [return: bb21, unwind: bb28]; // scope 2 at cita-chain/src/forward.rs:438:13: 443:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:443:18: 443:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb21: {
        _44 = const false;               // scope 1 at cita-chain/src/forward.rs:444:9: 444:10
        goto -> bb22;                    // scope 1 at cita-chain/src/forward.rs:432:9: 444:10
    }

    bb22: {
        switchInt(_43) -> [0: bb23, otherwise: bb26]; // scope 0 at cita-chain/src/forward.rs:445:5: 445:6
    }

    bb23: {
        _43 = const false;               // scope 0 at cita-chain/src/forward.rs:445:5: 445:6
        return;                          // scope 0 at cita-chain/src/forward.rs:445:6: 445:6
    }

    bb24 (cleanup): {
        drop(_32) -> bb28;               // scope 2 at cita-chain/src/forward.rs:442:17: 442:18
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:430:5: 445:6
    }

    bb26: {
        drop(_3) -> bb23;                // scope 0 at cita-chain/src/forward.rs:445:5: 445:6
    }

    bb27 (cleanup): {
        drop(_9) -> bb30;                // scope 1 at cita-chain/src/forward.rs:444:9: 444:10
    }

    bb28 (cleanup): {
        switchInt(_44) -> [0: bb30, otherwise: bb27]; // scope 1 at cita-chain/src/forward.rs:444:9: 444:10
    }

    bb29 (cleanup): {
        drop(_3) -> bb25;                // scope 0 at cita-chain/src/forward.rs:445:5: 445:6
    }

    bb30 (cleanup): {
        switchInt(_43) -> [0: bb25, otherwise: bb29]; // scope 0 at cita-chain/src/forward.rs:445:5: 445:6
    }

    bb31: {
        goto -> bb16;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_local_syn_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:434:13: 437:14
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:434:13: 437:14

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:434:13: 437:14
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:434:13: 437:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:434:13: 437:14
        _1 = (move _2, move _4, move _6, const 434_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_local_syn_req: &OperateType = {
    let mut _0: &libproto::OperateType;  // return place in scope 0 at cita-chain/src/forward.rs:436:17: 436:36
    let mut _1: libproto::OperateType;   // in scope 0 at cita-chain/src/forward.rs:436:17: 436:36

    bb0: {
        _1 = libproto::OperateType::Single; // scope 0 at cita-chain/src/forward.rs:436:17: 436:36
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:436:17: 436:36
        return;                          // scope 0 at cita-chain/src/forward.rs:436:17: 436:36
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_local_syn_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:435:17: 435:58
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:435:17: 435:58

    bb0: {
        _1 = [const "local_sync: chain.blk: OperateType "]; // scope 0 at cita-chain/src/forward.rs:435:17: 435:58
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:435:17: 435:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:435:17: 435:58
        return;                          // scope 0 at cita-chain/src/forward.rs:435:17: 435:58
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::reply_local_syn_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response(_1: &Forward, _2: Vec<u64>) -> libproto::SyncResponse {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:448:22: 448:27
    debug heights => _2;                 // in scope 0 at cita-chain/src/forward.rs:448:29: 448:36
    let mut _0: libproto::SyncResponse;  // return place in scope 0 at cita-chain/src/forward.rs:449:13: 449:24
    let mut _3: std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>; // in scope 0 at cita-chain/src/forward.rs:450:23: 452:73
    let mut _4: std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>; // in scope 0 at cita-chain/src/forward.rs:450:23: 452:73
    let mut _5: std::vec::IntoIter<u64>; // in scope 0 at cita-chain/src/forward.rs:450:23: 451:25
    let mut _6: std::vec::Vec<u64>;      // in scope 0 at cita-chain/src/forward.rs:450:23: 450:30
    let mut _7: [closure@cita-chain/src/forward.rs:452:21: 452:29]; // in scope 0 at cita-chain/src/forward.rs:452:21: 452:72
    let mut _8: &&forward::Forward;      // in scope 0 at cita-chain/src/forward.rs:452:21: 452:72
    let mut _10: std::option::Option<u64>; // in scope 0 at cita-chain/src/forward.rs:450:23: 452:73
    let mut _11: &mut std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>; // in scope 0 at cita-chain/src/forward.rs:450:23: 452:73
    let mut _12: isize;                  // in scope 0 at cita-chain/src/forward.rs:450:9: 471:10
    let mut _14: std::option::Option<types::block::Block>; // in scope 0 at cita-chain/src/forward.rs:454:34: 454:76
    let mut _15: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:454:34: 454:76
    let _16: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:454:34: 454:76
    let mut _17: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:454:34: 454:76
    let mut _18: types::block_number::BlockTag; // in scope 0 at cita-chain/src/forward.rs:454:51: 454:75
    let mut _19: isize;                  // in scope 0 at cita-chain/src/forward.rs:454:20: 454:31
    let _21: ();                         // in scope 0 at cita-chain/src/forward.rs:455:17: 455:60
    let mut _22: &mut protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:455:17: 455:60
    let mut _23: &mut protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:455:17: 455:37
    let mut _24: &mut libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:455:17: 455:37
    let mut _25: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:455:43: 455:59
    let mut _26: &types::block::Block;   // in scope 0 at cita-chain/src/forward.rs:455:43: 455:59
    let mut _27: bool;                   // in scope 0 at cita-chain/src/forward.rs:457:20: 457:61
    let mut _28: u64;                    // in scope 0 at cita-chain/src/forward.rs:457:30: 457:61
    let mut _29: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:457:30: 457:61
    let _30: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:457:30: 457:61
    let mut _31: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:457:30: 457:61
    let mut _32: std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:458:43: 458:83
    let mut _33: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:458:43: 458:83
    let _34: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:458:43: 458:83
    let mut _35: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:458:43: 458:83
    let mut _36: isize;                  // in scope 0 at cita-chain/src/forward.rs:458:28: 458:40
    let _39: ();                         // in scope 0 at cita-chain/src/forward.rs:460:25: 460:67
    let mut _40: &mut libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:460:25: 460:67
    let mut _41: &mut libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:460:25: 460:49
    let mut _42: &mut libproto::Block;   // in scope 0 at cita-chain/src/forward.rs:460:25: 460:49
    let mut _43: libproto::Proof;        // in scope 0 at cita-chain/src/forward.rs:460:60: 460:66
    let _44: ();                         // in scope 0 at cita-chain/src/forward.rs:461:25: 461:77
    let mut _45: &mut libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:461:25: 461:77
    let mut _46: &mut libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:461:25: 461:49
    let mut _47: &mut libproto::Block;   // in scope 0 at cita-chain/src/forward.rs:461:25: 461:49
    let _48: ();                         // in scope 0 at cita-chain/src/forward.rs:462:25: 462:63
    let mut _49: &mut protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:462:25: 462:63
    let mut _50: &mut protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:462:25: 462:45
    let mut _51: &mut libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:462:25: 462:45
    let mut _52: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:462:51: 462:62
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _55: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _56: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _57: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _58: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _59: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _60: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _61: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _62: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _63: &[&str];                // in scope 0 at cita-chain/src/forward.rs:464:29: 464:81
    let mut _64: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _65: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _66: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _67: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:465:29: 465:35
    let _68: &u64;                       // in scope 0 at cita-chain/src/forward.rs:465:29: 465:35
    let mut _69: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:466:29: 466:48
    let mut _74: bool;                   // in scope 0 at cita-chain/src/forward.rs:469:17: 469:18
    let mut _75: bool;                   // in scope 0 at cita-chain/src/forward.rs:471:9: 471:10
    let mut _76: bool;                   // in scope 0 at cita-chain/src/forward.rs:468:21: 468:22
    let mut _77: bool;                   // in scope 0 at cita-chain/src/forward.rs:468:21: 468:22
    let mut _78: bool;                   // in scope 0 at cita-chain/src/forward.rs:473:5: 473:6
    let mut _79: isize;                  // in scope 0 at cita-chain/src/forward.rs:469:17: 469:18
    let mut _80: isize;                  // in scope 0 at cita-chain/src/forward.rs:471:9: 471:10
    scope 1 {
        debug res_vec => _0;             // in scope 1 at cita-chain/src/forward.rs:449:13: 449:24
        let mut _9: std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>; // in scope 1 at cita-chain/src/forward.rs:450:23: 452:73
        scope 2 {
            debug iter => _9;            // in scope 2 at cita-chain/src/forward.rs:450:23: 452:73
            let _13: u64;                // in scope 2 at cita-chain/src/forward.rs:450:13: 450:19
            scope 3 {
                debug height => _13;     // in scope 3 at cita-chain/src/forward.rs:450:13: 450:19
                scope 4 {
                    debug block => _20;  // in scope 4 at cita-chain/src/forward.rs:454:25: 454:30
                    let _20: types::block::Block; // in scope 4 at cita-chain/src/forward.rs:454:25: 454:30
                    scope 5 {
                        debug pproof => _37; // in scope 5 at cita-chain/src/forward.rs:458:33: 458:39
                        let _37: libproto::Proof; // in scope 5 at cita-chain/src/forward.rs:458:33: 458:39
                        let mut _38: libproto::Block; // in scope 5 at cita-chain/src/forward.rs:459:29: 459:44
                        scope 6 {
                            debug proof_block => _38; // in scope 6 at cita-chain/src/forward.rs:459:29: 459:44
                            let _53: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            scope 7 {
                                debug lvl => _53; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _70: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _71: &libproto::OperateType; // in scope 7 at cita-chain/src/forward.rs:466:29: 466:48
                                let mut _72: &[&str; 2]; // in scope 7 at cita-chain/src/forward.rs:464:29: 464:81
                                let mut _73: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _78 = const false;               // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _76 = const false;               // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _75 = const false;               // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _77 = const false;               // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _74 = const false;               // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _78 = const true;                // scope 0 at cita-chain/src/forward.rs:449:13: 449:24
        _0 = libproto::SyncResponse::new() -> [return: bb1, unwind: bb59]; // scope 0 at cita-chain/src/forward.rs:449:27: 449:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:449:27: 449:44
                                         // + literal: Const { ty: fn() -> libproto::SyncResponse {libproto::SyncResponse::new}, val: Value(<ZST>) }
    }

    bb1: {
        _78 = const false;               // scope 1 at cita-chain/src/forward.rs:450:23: 450:30
        _6 = move _2;                    // scope 1 at cita-chain/src/forward.rs:450:23: 450:30
        _5 = <Vec<u64> as IntoIterator>::into_iter(move _6) -> [return: bb2, unwind: bb44]; // scope 1 at cita-chain/src/forward.rs:450:23: 451:25
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:451:14: 451:23
                                         // + literal: Const { ty: fn(Vec<u64>) -> <Vec<u64> as IntoIterator>::IntoIter {<Vec<u64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &_1;                        // scope 1 at cita-chain/src/forward.rs:452:21: 452:72
        _7 = [closure@cita-chain/src/forward.rs:452:21: 452:29] { self: move _8 }; // scope 1 at cita-chain/src/forward.rs:452:21: 452:72
                                         // closure
                                         // + def_id: DefId(0:76 ~ cita_chain[3b40]::forward::{impl#0}::sync_response::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a u64,)) -> bool,
                                         //     (&&forward::Forward,),
                                         // ]
        _4 = <std::vec::IntoIter<u64> as Iterator>::filter::<[closure@cita-chain/src/forward.rs:452:21: 452:29]>(move _5, move _7) -> [return: bb3, unwind: bb44]; // scope 1 at cita-chain/src/forward.rs:450:23: 452:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:452:14: 452:20
                                         // + literal: Const { ty: fn(std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]) -> std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> {<std::vec::IntoIter<u64> as Iterator>::filter::<[closure@cita-chain/src/forward.rs:452:21: 452:29]>}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = <std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as IntoIterator>::into_iter(move _4) -> [return: bb4, unwind: bb44]; // scope 1 at cita-chain/src/forward.rs:450:23: 452:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:450:23: 452:73
                                         // + literal: Const { ty: fn(std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>) -> <std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as IntoIterator>::IntoIter {<std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = move _3;                    // scope 1 at cita-chain/src/forward.rs:450:23: 452:73
        goto -> bb5;                     // scope 2 at cita-chain/src/forward.rs:450:9: 471:10
    }

    bb5: {
        _11 = &mut _9;                   // scope 2 at cita-chain/src/forward.rs:450:23: 452:73
        _10 = <std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as Iterator>::next(_11) -> [return: bb6, unwind: bb43]; // scope 2 at cita-chain/src/forward.rs:450:23: 452:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:450:23: 452:73
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]>) -> Option<<std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as Iterator>::Item> {<std::iter::Filter<std::vec::IntoIter<u64>, [closure@cita-chain/src/forward.rs:452:21: 452:29]> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = discriminant(_10);         // scope 2 at cita-chain/src/forward.rs:450:23: 452:73
        switchInt(move _12) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at cita-chain/src/forward.rs:450:23: 452:73
    }

    bb7: {
        _13 = ((_10 as Some).0: u64);    // scope 2 at cita-chain/src/forward.rs:450:13: 450:19
        _17 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:454:34: 454:76
        _16 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _17) -> [return: bb10, unwind: bb43]; // scope 4 at cita-chain/src/forward.rs:454:34: 454:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:454:34: 454:76
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        unreachable;                     // scope 2 at cita-chain/src/forward.rs:450:23: 452:73
    }

    bb9: {
        drop(_9) -> [return: bb41, unwind: bb44]; // scope 1 at cita-chain/src/forward.rs:471:9: 471:10
    }

    bb10: {
        _15 = _16;                       // scope 4 at cita-chain/src/forward.rs:454:34: 454:76
        _18 = types::block_number::BlockTag::Height(_13); // scope 4 at cita-chain/src/forward.rs:454:51: 454:75
        _14 = core::libchain::chain::Chain::block(move _15, move _18) -> [return: bb11, unwind: bb43]; // scope 4 at cita-chain/src/forward.rs:454:34: 454:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:454:45: 454:50
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, types::block_number::BlockTag) -> Option<types::block::Block> {core::libchain::chain::Chain::block}, val: Value(<ZST>) }
    }

    bb11: {
        _75 = const true;                // scope 4 at cita-chain/src/forward.rs:454:75: 454:76
        _19 = discriminant(_14);         // scope 4 at cita-chain/src/forward.rs:454:20: 454:31
        switchInt(move _19) -> [1: bb12, otherwise: bb53]; // scope 4 at cita-chain/src/forward.rs:454:20: 454:31
    }

    bb12: {
        _75 = const false;               // scope 4 at cita-chain/src/forward.rs:454:25: 454:30
        _20 = move ((_14 as Some).0: types::block::Block); // scope 4 at cita-chain/src/forward.rs:454:25: 454:30
        _24 = &mut _0;                   // scope 4 at cita-chain/src/forward.rs:455:17: 455:37
        _23 = libproto::SyncResponse::mut_blocks(move _24) -> [return: bb13, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:455:17: 455:37
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:455:25: 455:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncResponse) -> &'a mut protobuf::repeated::RepeatedField<libproto::Block> {libproto::SyncResponse::mut_blocks}, val: Value(<ZST>) }
    }

    bb13: {
        _22 = _23;                       // scope 4 at cita-chain/src/forward.rs:455:17: 455:60
        _26 = &_20;                      // scope 4 at cita-chain/src/forward.rs:455:43: 455:59
        _25 = types::block::Block::protobuf(move _26) -> [return: bb14, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:455:43: 455:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:455:49: 455:57
                                         // + literal: Const { ty: for<'a> fn(&'a types::block::Block) -> libproto::Block {types::block::Block::protobuf}, val: Value(<ZST>) }
    }

    bb14: {
        _21 = protobuf::repeated::RepeatedField::<libproto::Block>::push(move _22, move _25) -> [return: bb15, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:455:17: 455:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:455:38: 455:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut protobuf::repeated::RepeatedField<libproto::Block>, libproto::Block) {protobuf::repeated::RepeatedField::<libproto::Block>::push}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:457:30: 457:61
        _30 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _31) -> [return: bb16, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:457:30: 457:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:457:30: 457:61
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb16: {
        _29 = _30;                       // scope 4 at cita-chain/src/forward.rs:457:30: 457:61
        _28 = core::libchain::chain::Chain::get_current_height(move _29) -> [return: bb17, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:457:30: 457:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:457:41: 457:59
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb17: {
        _27 = Eq(_13, move _28);         // scope 4 at cita-chain/src/forward.rs:457:20: 457:61
        switchInt(move _27) -> [0: bb40, otherwise: bb18]; // scope 4 at cita-chain/src/forward.rs:457:20: 457:61
    }

    bb18: {
        _35 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 5 at cita-chain/src/forward.rs:458:43: 458:83
        _34 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _35) -> [return: bb19, unwind: bb42]; // scope 5 at cita-chain/src/forward.rs:458:43: 458:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:458:43: 458:83
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb19: {
        _33 = _34;                       // scope 5 at cita-chain/src/forward.rs:458:43: 458:83
        _32 = core::libchain::chain::Chain::get_proof_with_height(move _33, _13) -> [return: bb20, unwind: bb42]; // scope 5 at cita-chain/src/forward.rs:458:43: 458:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:458:54: 458:75
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, u64) -> Option<libproto::Proof> {core::libchain::chain::Chain::get_proof_with_height}, val: Value(<ZST>) }
    }

    bb20: {
        _74 = const true;                // scope 5 at cita-chain/src/forward.rs:458:82: 458:83
        _36 = discriminant(_32);         // scope 5 at cita-chain/src/forward.rs:458:28: 458:40
        switchInt(move _36) -> [1: bb21, otherwise: bb49]; // scope 5 at cita-chain/src/forward.rs:458:28: 458:40
    }

    bb21: {
        _74 = const false;               // scope 5 at cita-chain/src/forward.rs:458:33: 458:39
        _77 = const true;                // scope 5 at cita-chain/src/forward.rs:458:33: 458:39
        _37 = move ((_32 as Some).0: libproto::Proof); // scope 5 at cita-chain/src/forward.rs:458:33: 458:39
        _38 = libproto::Block::new() -> [return: bb22, unwind: bb57]; // scope 5 at cita-chain/src/forward.rs:459:47: 459:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:459:47: 459:65
                                         // + literal: Const { ty: fn() -> libproto::Block {libproto::Block::new}, val: Value(<ZST>) }
    }

    bb22: {
        _76 = const true;                // scope 6 at cita-chain/src/forward.rs:460:25: 460:67
        _42 = &mut _38;                  // scope 6 at cita-chain/src/forward.rs:460:25: 460:49
        _41 = libproto::Block::mut_header(move _42) -> [return: bb23, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:460:25: 460:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:460:37: 460:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Block) -> &'a mut libproto::BlockHeader {libproto::Block::mut_header}, val: Value(<ZST>) }
    }

    bb23: {
        _40 = _41;                       // scope 6 at cita-chain/src/forward.rs:460:25: 460:67
        _77 = const false;               // scope 6 at cita-chain/src/forward.rs:460:60: 460:66
        _43 = move _37;                  // scope 6 at cita-chain/src/forward.rs:460:60: 460:66
        _39 = libproto::BlockHeader::set_proof(move _40, move _43) -> [return: bb24, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:460:25: 460:67
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:460:50: 460:59
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockHeader, libproto::Proof) {libproto::BlockHeader::set_proof}, val: Value(<ZST>) }
    }

    bb24: {
        _47 = &mut _38;                  // scope 6 at cita-chain/src/forward.rs:461:25: 461:49
        _46 = libproto::Block::mut_header(move _47) -> [return: bb25, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:461:25: 461:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:461:37: 461:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Block) -> &'a mut libproto::BlockHeader {libproto::Block::mut_header}, val: Value(<ZST>) }
    }

    bb25: {
        _45 = _46;                       // scope 6 at cita-chain/src/forward.rs:461:25: 461:77
        _44 = libproto::BlockHeader::set_height(move _45, const _) -> [return: bb26, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:461:25: 461:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:461:50: 461:60
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockHeader, u64) {libproto::BlockHeader::set_height}, val: Value(<ZST>) }
    }

    bb26: {
        _51 = &mut _0;                   // scope 6 at cita-chain/src/forward.rs:462:25: 462:45
        _50 = libproto::SyncResponse::mut_blocks(move _51) -> [return: bb27, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:462:25: 462:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:462:33: 462:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncResponse) -> &'a mut protobuf::repeated::RepeatedField<libproto::Block> {libproto::SyncResponse::mut_blocks}, val: Value(<ZST>) }
    }

    bb27: {
        _49 = _50;                       // scope 6 at cita-chain/src/forward.rs:462:25: 462:63
        _76 = const false;               // scope 6 at cita-chain/src/forward.rs:462:51: 462:62
        _52 = move _38;                  // scope 6 at cita-chain/src/forward.rs:462:51: 462:62
        _48 = protobuf::repeated::RepeatedField::<libproto::Block>::push(move _49, move _52) -> [return: bb28, unwind: bb55]; // scope 6 at cita-chain/src/forward.rs:462:25: 462:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:462:46: 462:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut protobuf::repeated::RepeatedField<libproto::Block>, libproto::Block) {protobuf::repeated::RepeatedField::<libproto::Block>::push}, val: Value(<ZST>) }
    }

    bb28: {
        _53 = log::Level::Trace;         // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _56 = &_53;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _73 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::sync_response, [], Some(promoted[3])) }
        _55 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _56, _73) -> [return: bb32, unwind: bb55]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _54 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _58 = &_53;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _60 = log::max_level() -> [return: bb33, unwind: bb55]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _54) -> [0: bb39, otherwise: bb35]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        switchInt(move _55) -> [0: bb29, otherwise: bb30]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _59 = &_60;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _57 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _58, move _59) -> [return: bb34, unwind: bb55]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _54 = move _57;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _72 = const _;                   // scope 7 at cita-chain/src/forward.rs:464:29: 464:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:464:29: 464:81
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::sync_response, [], Some(promoted[2])) }
        _63 = _72 as &[&str] (Pointer(Unsize)); // scope 7 at cita-chain/src/forward.rs:464:29: 464:81
        _68 = &_13;                      // scope 7 at cita-chain/src/forward.rs:465:29: 465:35
        _67 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_68) -> [return: bb36, unwind: bb55]; // scope 7 at cita-chain/src/forward.rs:465:29: 465:35
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:465:29: 465:35
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb36: {
        _71 = const _;                   // scope 7 at cita-chain/src/forward.rs:466:29: 466:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:466:29: 466:48
                                         // + literal: Const { ty: &OperateType, val: Unevaluated(Forward::sync_response, [], Some(promoted[1])) }
        _69 = core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>(_71) -> [return: bb37, unwind: bb55]; // scope 7 at cita-chain/src/forward.rs:466:29: 466:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:466:29: 466:48
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b OperateType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>}, val: Value(<ZST>) }
    }

    bb37: {
        _66 = [move _67, move _69];      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _65 = &_66;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _64 = _65 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _62 = Arguments::<'_>::new_v1(move _63, move _64) -> [return: bb38, unwind: bb55]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb38: {
        _70 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::sync_response, [], Some(promoted[0])) }
        _61 = log::__private_api_log(move _62, _53, _70) -> [return: bb60, unwind: bb55]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb39: {
        _76 = const false;               // scope 5 at cita-chain/src/forward.rs:468:21: 468:22
        _77 = const false;               // scope 4 at cita-chain/src/forward.rs:468:21: 468:22
        goto -> bb49;                    // scope 4 at cita-chain/src/forward.rs:458:21: 468:22
    }

    bb40: {
        drop(_20) -> [return: bb53, unwind: bb43]; // scope 3 at cita-chain/src/forward.rs:470:13: 470:14
    }

    bb41: {
        return;                          // scope 0 at cita-chain/src/forward.rs:473:6: 473:6
    }

    bb42 (cleanup): {
        drop(_20) -> bb43;               // scope 3 at cita-chain/src/forward.rs:470:13: 470:14
    }

    bb43 (cleanup): {
        drop(_9) -> bb44;                // scope 1 at cita-chain/src/forward.rs:471:9: 471:10
    }

    bb44 (cleanup): {
        drop(_0) -> bb59;                // scope 0 at cita-chain/src/forward.rs:473:5: 473:6
    }

    bb45 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:448:5: 473:6
    }

    bb46: {
        _74 = const false;               // scope 4 at cita-chain/src/forward.rs:469:17: 469:18
        goto -> bb40;                    // scope 4 at cita-chain/src/forward.rs:457:17: 469:18
    }

    bb47: {
        switchInt(_74) -> [0: bb46, otherwise: bb48]; // scope 4 at cita-chain/src/forward.rs:469:17: 469:18
    }

    bb48: {
        drop(((_32 as Some).0: libproto::Proof)) -> [return: bb46, unwind: bb42]; // scope 4 at cita-chain/src/forward.rs:469:17: 469:18
    }

    bb49: {
        _79 = discriminant(_32);         // scope 4 at cita-chain/src/forward.rs:469:17: 469:18
        switchInt(move _79) -> [1: bb47, otherwise: bb46]; // scope 4 at cita-chain/src/forward.rs:469:17: 469:18
    }

    bb50: {
        _75 = const false;               // scope 3 at cita-chain/src/forward.rs:471:9: 471:10
        goto -> bb5;                     // scope 2 at cita-chain/src/forward.rs:450:9: 471:10
    }

    bb51: {
        switchInt(_75) -> [0: bb50, otherwise: bb52]; // scope 3 at cita-chain/src/forward.rs:471:9: 471:10
    }

    bb52: {
        drop(((_14 as Some).0: types::block::Block)) -> [return: bb50, unwind: bb43]; // scope 3 at cita-chain/src/forward.rs:471:9: 471:10
    }

    bb53: {
        _80 = discriminant(_14);         // scope 3 at cita-chain/src/forward.rs:471:9: 471:10
        switchInt(move _80) -> [1: bb51, otherwise: bb50]; // scope 3 at cita-chain/src/forward.rs:471:9: 471:10
    }

    bb54 (cleanup): {
        drop(_38) -> bb57;               // scope 5 at cita-chain/src/forward.rs:468:21: 468:22
    }

    bb55 (cleanup): {
        switchInt(_76) -> [0: bb57, otherwise: bb54]; // scope 5 at cita-chain/src/forward.rs:468:21: 468:22
    }

    bb56 (cleanup): {
        drop(_37) -> bb42;               // scope 4 at cita-chain/src/forward.rs:468:21: 468:22
    }

    bb57 (cleanup): {
        switchInt(_77) -> [0: bb42, otherwise: bb56]; // scope 4 at cita-chain/src/forward.rs:468:21: 468:22
    }

    bb58 (cleanup): {
        drop(_2) -> bb45;                // scope 0 at cita-chain/src/forward.rs:473:5: 473:6
    }

    bb59 (cleanup): {
        switchInt(_78) -> [0: bb45, otherwise: bb58]; // scope 0 at cita-chain/src/forward.rs:473:5: 473:6
    }

    bb60: {
        goto -> bb39;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:463:25: 467:26
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:463:25: 467:26

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:463:25: 467:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:463:25: 467:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:463:25: 467:26
        _1 = (move _2, move _4, move _6, const 463_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response: &OperateType = {
    let mut _0: &libproto::OperateType;  // return place in scope 0 at cita-chain/src/forward.rs:466:29: 466:48
    let mut _1: libproto::OperateType;   // in scope 0 at cita-chain/src/forward.rs:466:29: 466:48

    bb0: {
        _1 = libproto::OperateType::Single; // scope 0 at cita-chain/src/forward.rs:466:29: 466:48
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:466:29: 466:48
        return;                          // scope 0 at cita-chain/src/forward.rs:466:29: 466:48
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:464:29: 464:81
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:464:29: 464:81

    bb0: {
        _1 = [const "sync: max height ", const ", chain.blk: OperateType "]; // scope 0 at cita-chain/src/forward.rs:464:29: 464:81
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:464:29: 464:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:464:29: 464:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:464:29: 464:81
        return;                          // scope 0 at cita-chain/src/forward.rs:464:29: 464:81
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::sync_response::{closure#0}(_1: &mut [closure@cita-chain/src/forward.rs:452:21: 452:29], _2: &u64) -> bool {
    debug height => _2;                  // in scope 0 at cita-chain/src/forward.rs:452:22: 452:28
    debug self => (*((*_1).0: &&forward::Forward)); // in scope 0 at cita-chain/src/forward.rs:448:23: 448:27
    let mut _0: bool;                    // return place in scope 0 at cita-chain/src/forward.rs:452:30: 452:30
    let mut _3: u64;                     // in scope 0 at cita-chain/src/forward.rs:452:30: 452:37
    let mut _4: u64;                     // in scope 0 at cita-chain/src/forward.rs:452:41: 452:72
    let mut _5: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:452:41: 452:72
    let _6: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:452:41: 452:72
    let mut _7: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:452:41: 452:72
    let mut _8: &&forward::Forward;      // in scope 0 at cita-chain/src/forward.rs:452:21: 452:72
    let mut _9: &forward::Forward;       // in scope 0 at cita-chain/src/forward.rs:452:21: 452:72

    bb0: {
        _3 = (*_2);                      // scope 0 at cita-chain/src/forward.rs:452:30: 452:37
        _8 = deref_copy ((*_1).0: &&forward::Forward); // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
        _9 = deref_copy (*_8);           // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
        _7 = &((*_9).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
        _6 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _7) -> bb1; // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:452:41: 452:72
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
        _4 = core::libchain::chain::Chain::get_current_height(move _5) -> bb2; // scope 0 at cita-chain/src/forward.rs:452:41: 452:72
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:452:52: 452:70
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = Le(move _3, move _4);       // scope 0 at cita-chain/src/forward.rs:452:30: 452:72
        return;                          // scope 0 at cita-chain/src/forward.rs:452:72: 452:72
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks(_1: &Forward, _2: libproto::SyncResponse) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:475:25: 475:30
    debug sync_res => _2;                // in scope 0 at cita-chain/src/forward.rs:475:32: 475:44
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:475:60: 475:60
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-chain/src/forward.rs:476:16: 476:43
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let _18: &u64;                       // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let _19: u64;                        // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let mut _20: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let _21: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let mut _22: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:476:45: 476:76
    let mut _23: std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:56
    let mut _24: std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:56
    let mut _25: protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:44
    let mut _26: &mut libproto::SyncResponse; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:44
    let mut _27: std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:56
    let mut _28: std::option::Option<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:56
    let mut _29: &mut std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-chain/src/forward.rs:477:22: 477:56
    let mut _30: isize;                  // in scope 0 at cita-chain/src/forward.rs:477:9: 495:10
    let mut _33: &libproto::BlockHeader; // in scope 0 at cita-chain/src/forward.rs:478:30: 478:61
    let _34: &libproto::BlockHeader;     // in scope 0 at cita-chain/src/forward.rs:478:30: 478:48
    let mut _35: &libproto::Block;       // in scope 0 at cita-chain/src/forward.rs:478:30: 478:48
    let mut _36: bool;                   // in scope 0 at cita-chain/src/forward.rs:481:16: 481:60
    let mut _37: u64;                    // in scope 0 at cita-chain/src/forward.rs:481:16: 481:26
    let mut _38: u64;                    // in scope 0 at cita-chain/src/forward.rs:481:29: 481:60
    let mut _39: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:481:29: 481:60
    let _40: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:481:29: 481:60
    let mut _41: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:481:29: 481:60
    let mut _42: bool;                   // in scope 0 at cita-chain/src/forward.rs:486:16: 486:68
    let mut _43: bool;                   // in scope 0 at cita-chain/src/forward.rs:486:16: 486:45
    let mut _44: u64;                    // in scope 0 at cita-chain/src/forward.rs:486:16: 486:26
    let mut _45: bool;                   // in scope 0 at cita-chain/src/forward.rs:486:49: 486:68
    let mut _46: bool;                   // in scope 0 at cita-chain/src/forward.rs:486:50: 486:68
    let mut _47: &libproto::Block;       // in scope 0 at cita-chain/src/forward.rs:486:50: 486:68
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _50: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _51: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _54: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _55: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _56: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _57: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _58: &[&str];                // in scope 0 at cita-chain/src/forward.rs:488:21: 488:74
    let mut _59: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _60: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _61: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _62: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:489:21: 489:31
    let _63: &u64;                       // in scope 0 at cita-chain/src/forward.rs:489:21: 489:31
    let _64: ();                         // in scope 0 at cita-chain/src/forward.rs:494:13: 494:56
    let mut _65: types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:494:33: 494:55
    let mut _66: libproto::Block;        // in scope 0 at cita-chain/src/forward.rs:494:49: 494:54
    let mut _73: bool;                   // in scope 0 at cita-chain/src/forward.rs:495:9: 495:10
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _70: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _71: &[&str; 1];         // in scope 1 at cita-chain/src/forward.rs:476:16: 476:43
        let mut _72: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug iter => _27;               // in scope 2 at cita-chain/src/forward.rs:477:22: 477:56
        let _31: libproto::Block;        // in scope 2 at cita-chain/src/forward.rs:477:13: 477:18
        scope 3 {
            debug block => _31;          // in scope 3 at cita-chain/src/forward.rs:477:13: 477:18
            let _32: u64;                // in scope 3 at cita-chain/src/forward.rs:478:17: 478:27
            scope 4 {
                debug blk_height => _32; // in scope 4 at cita-chain/src/forward.rs:478:17: 478:27
                let _48: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 5 {
                    debug lvl => _48;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _67: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _68: &[&str; 1]; // in scope 5 at cita-chain/src/forward.rs:488:21: 488:74
                    let mut _69: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _73 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _3 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _72 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[5])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _72) -> [return: bb4, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> [return: bb5, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb12, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> [return: bb6, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _71 = const _;                   // scope 1 at cita-chain/src/forward.rs:476:16: 476:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:16: 476:43
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[4])) }
        _13 = _71 as &[&str] (Pointer(Unsize)); // scope 1 at cita-chain/src/forward.rs:476:16: 476:43
        _22 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
        _21 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _22) -> [return: bb8, unwind: bb49]; // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:45: 476:76
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = _21;                       // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
        _19 = core::libchain::chain::Chain::get_current_height(move _20) -> [return: bb9, unwind: bb49]; // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:56: 476:74
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = &_19;                      // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_18) -> [return: bb10, unwind: bb49]; // scope 1 at cita-chain/src/forward.rs:476:45: 476:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:45: 476:76
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = [move _17];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb11, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _70 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[3])) }
        _11 = log::__private_api_log(move _12, _3, _70) -> [return: bb54, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = &mut _2;                   // scope 0 at cita-chain/src/forward.rs:477:22: 477:44
        _25 = libproto::SyncResponse::take_blocks(move _26) -> [return: bb13, unwind: bb49]; // scope 0 at cita-chain/src/forward.rs:477:22: 477:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:477:31: 477:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncResponse) -> protobuf::repeated::RepeatedField<libproto::Block> {libproto::SyncResponse::take_blocks}, val: Value(<ZST>) }
    }

    bb13: {
        _24 = protobuf::repeated::RepeatedField::<libproto::Block>::into_iter(move _25) -> [return: bb14, unwind: bb49]; // scope 0 at cita-chain/src/forward.rs:477:22: 477:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:477:45: 477:54
                                         // + literal: Const { ty: fn(protobuf::repeated::RepeatedField<libproto::Block>) -> std::vec::IntoIter<libproto::Block> {protobuf::repeated::RepeatedField::<libproto::Block>::into_iter}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = <std::vec::IntoIter<libproto::Block> as IntoIterator>::into_iter(move _24) -> [return: bb15, unwind: bb49]; // scope 0 at cita-chain/src/forward.rs:477:22: 477:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:477:22: 477:56
                                         // + literal: Const { ty: fn(std::vec::IntoIter<libproto::Block>) -> <std::vec::IntoIter<libproto::Block> as IntoIterator>::IntoIter {<std::vec::IntoIter<libproto::Block> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb15: {
        _27 = move _23;                  // scope 0 at cita-chain/src/forward.rs:477:22: 477:56
        goto -> bb16;                    // scope 2 at cita-chain/src/forward.rs:477:9: 495:10
    }

    bb16: {
        _29 = &mut _27;                  // scope 2 at cita-chain/src/forward.rs:477:22: 477:56
        _28 = <std::vec::IntoIter<libproto::Block> as Iterator>::next(_29) -> [return: bb17, unwind: bb48]; // scope 2 at cita-chain/src/forward.rs:477:22: 477:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:477:22: 477:56
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<libproto::Block>) -> Option<<std::vec::IntoIter<libproto::Block> as Iterator>::Item> {<std::vec::IntoIter<libproto::Block> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb17: {
        _30 = discriminant(_28);         // scope 2 at cita-chain/src/forward.rs:477:22: 477:56
        switchInt(move _30) -> [0: bb51, 1: bb18, otherwise: bb19]; // scope 2 at cita-chain/src/forward.rs:477:22: 477:56
    }

    bb18: {
        _73 = const true;                // scope 2 at cita-chain/src/forward.rs:477:13: 477:18
        _31 = move ((_28 as Some).0: libproto::Block); // scope 2 at cita-chain/src/forward.rs:477:13: 477:18
        _35 = &_31;                      // scope 3 at cita-chain/src/forward.rs:478:30: 478:48
        _34 = libproto::Block::get_header(move _35) -> [return: bb20, unwind: bb53]; // scope 3 at cita-chain/src/forward.rs:478:30: 478:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:478:36: 478:46
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> &'a libproto::BlockHeader {libproto::Block::get_header}, val: Value(<ZST>) }
    }

    bb19: {
        unreachable;                     // scope 2 at cita-chain/src/forward.rs:477:22: 477:56
    }

    bb20: {
        _33 = _34;                       // scope 3 at cita-chain/src/forward.rs:478:30: 478:61
        _32 = libproto::BlockHeader::get_height(move _33) -> [return: bb21, unwind: bb53]; // scope 3 at cita-chain/src/forward.rs:478:30: 478:61
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:478:49: 478:59
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockHeader) -> u64 {libproto::BlockHeader::get_height}, val: Value(<ZST>) }
    }

    bb21: {
        _37 = _32;                       // scope 4 at cita-chain/src/forward.rs:481:16: 481:26
        _41 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:481:29: 481:60
        _40 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _41) -> [return: bb22, unwind: bb53]; // scope 4 at cita-chain/src/forward.rs:481:29: 481:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:481:29: 481:60
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb22: {
        _39 = _40;                       // scope 4 at cita-chain/src/forward.rs:481:29: 481:60
        _38 = core::libchain::chain::Chain::get_current_height(move _39) -> [return: bb23, unwind: bb53]; // scope 4 at cita-chain/src/forward.rs:481:29: 481:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:481:40: 481:58
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb23: {
        _36 = Lt(move _37, move _38);    // scope 4 at cita-chain/src/forward.rs:481:16: 481:60
        switchInt(move _36) -> [0: bb24, otherwise: bb44]; // scope 4 at cita-chain/src/forward.rs:481:16: 481:60
    }

    bb24: {
        _44 = _32;                       // scope 4 at cita-chain/src/forward.rs:486:16: 486:26
        _43 = Ne(move _44, const _);     // scope 4 at cita-chain/src/forward.rs:486:16: 486:45
        switchInt(move _43) -> [0: bb25, otherwise: bb26]; // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
    }

    bb25: {
        _42 = const false;               // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
        goto -> bb27;                    // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
    }

    bb26: {
        _47 = &_31;                      // scope 4 at cita-chain/src/forward.rs:486:50: 486:68
        _46 = libproto::<impl libproto::Block>::check_hash(move _47) -> [return: bb28, unwind: bb53]; // scope 4 at cita-chain/src/forward.rs:486:50: 486:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:486:56: 486:66
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> bool {libproto::<impl libproto::Block>::check_hash}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _42) -> [0: bb40, otherwise: bb29]; // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
    }

    bb28: {
        _45 = Not(move _46);             // scope 4 at cita-chain/src/forward.rs:486:49: 486:68
        _42 = move _45;                  // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
        goto -> bb27;                    // scope 4 at cita-chain/src/forward.rs:486:16: 486:68
    }

    bb29: {
        _48 = log::Level::Warn;          // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _51 = &_48;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _69 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[2])) }
        _50 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _51, _69) -> [return: bb33, unwind: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb30: {
        _49 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb32;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _53 = &_48;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _55 = log::max_level() -> [return: bb34, unwind: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb32: {
        switchInt(move _49) -> [0: bb39, otherwise: bb36]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        switchInt(move _50) -> [0: bb30, otherwise: bb31]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _54 = &_55;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, move _54) -> [return: bb35, unwind: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb35: {
        _49 = move _52;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb32;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _68 = const _;                   // scope 5 at cita-chain/src/forward.rs:488:21: 488:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:488:21: 488:74
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[1])) }
        _58 = _68 as &[&str] (Pointer(Unsize)); // scope 5 at cita-chain/src/forward.rs:488:21: 488:74
        _63 = &_32;                      // scope 5 at cita-chain/src/forward.rs:489:21: 489:31
        _62 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_63) -> [return: bb37, unwind: bb53]; // scope 5 at cita-chain/src/forward.rs:489:21: 489:31
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:489:21: 489:31
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb37: {
        _61 = [move _62];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _60 = &_61;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _59 = _60 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _57 = Arguments::<'_>::new_v1(move _58, move _59) -> [return: bb38, unwind: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb38: {
        _67 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::deal_sync_blocks, [], Some(promoted[0])) }
        _56 = log::__private_api_log(move _57, _48, _67) -> [return: bb55, unwind: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_31) -> [return: bb43, unwind: bb48]; // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb40: {
        _73 = const false;               // scope 4 at cita-chain/src/forward.rs:494:49: 494:54
        _66 = move _31;                  // scope 4 at cita-chain/src/forward.rs:494:49: 494:54
        _65 = <OpenBlock as From<libproto::Block>>::from(move _66) -> [return: bb41, unwind: bb53]; // scope 4 at cita-chain/src/forward.rs:494:33: 494:55
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:494:33: 494:48
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(libproto::Block) -> OpenBlock {<OpenBlock as From<libproto::Block>>::from}, val: Value(<ZST>) }
    }

    bb41: {
        _64 = Forward::add_sync_block(_1, move _65) -> [return: bb42, unwind: bb53]; // scope 4 at cita-chain/src/forward.rs:494:13: 494:56
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:494:18: 494:32
                                         // + literal: Const { ty: for<'a> fn(&'a Forward, OpenBlock) {Forward::add_sync_block}, val: Value(<ZST>) }
    }

    bb42: {
        _73 = const false;               // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
        goto -> bb16;                    // scope 2 at cita-chain/src/forward.rs:477:9: 495:10
    }

    bb43: {
        _73 = const false;               // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
        goto -> bb51;                    // scope 2 at no-location
    }

    bb44: {
        drop(_31) -> [return: bb45, unwind: bb48]; // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb45: {
        _73 = const false;               // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
        goto -> bb16;                    // scope 2 at no-location
    }

    bb46: {
        drop(_2) -> bb47;                // scope 0 at cita-chain/src/forward.rs:496:5: 496:6
    }

    bb47: {
        return;                          // scope 0 at cita-chain/src/forward.rs:496:6: 496:6
    }

    bb48 (cleanup): {
        drop(_27) -> bb49;               // scope 0 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb49 (cleanup): {
        drop(_2) -> bb50;                // scope 0 at cita-chain/src/forward.rs:496:5: 496:6
    }

    bb50 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:475:5: 496:6
    }

    bb51: {
        drop(_27) -> [return: bb46, unwind: bb49]; // scope 0 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb52 (cleanup): {
        drop(_31) -> bb48;               // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb53 (cleanup): {
        switchInt(_73) -> [0: bb48, otherwise: bb52]; // scope 2 at cita-chain/src/forward.rs:495:9: 495:10
    }

    bb54: {
        goto -> bb12;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb55: {
        goto -> bb39;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:487:17: 490:18
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:487:17: 490:18

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:487:17: 490:18
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:487:17: 490:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:487:17: 490:18
        _1 = (move _2, move _4, move _6, const 487_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:488:21: 488:74
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:488:21: 488:74

    bb0: {
        _1 = [const "sync: transactions root isn't correct, height is "]; // scope 0 at cita-chain/src/forward.rs:488:21: 488:74
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:488:21: 488:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:488:21: 488:74
        return;                          // scope 0 at cita-chain/src/forward.rs:488:21: 488:74
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:476:9: 476:77
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:476:9: 476:77

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:476:9: 476:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:9: 476:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:476:9: 476:77
        _1 = (move _2, move _4, move _6, const 476_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:476:16: 476:43
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:476:16: 476:43

    bb0: {
        _1 = [const "sync: current height = "]; // scope 0 at cita-chain/src/forward.rs:476:16: 476:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:476:16: 476:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:476:16: 476:43
        return;                          // scope 0 at cita-chain/src/forward.rs:476:16: 476:43
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_sync_blocks: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block(_1: &Forward, _2: OpenBlock) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:499:23: 499:28
    debug block => _2;                   // in scope 0 at cita-chain/src/forward.rs:499:30: 499:35
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:499:48: 499:48
    let _3: std::option::Option<libproto::ProofType>; // in scope 0 at cita-chain/src/forward.rs:500:13: 500:29
    let mut _4: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:500:32: 500:50
    let _5: &types::header::OpenHeader;  // in scope 0 at cita-chain/src/forward.rs:500:32: 500:50
    let mut _6: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:500:32: 500:50
    let mut _8: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:501:32: 501:64
    let _9: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:501:32: 501:64
    let mut _10: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:501:32: 501:64
    let mut _12: u64;                    // in scope 0 at cita-chain/src/forward.rs:502:26: 502:40
    let mut _13: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:502:26: 502:40
    let _14: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:502:26: 502:40
    let mut _15: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:502:26: 502:40
    let mut _17: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:503:32: 503:63
    let _18: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:503:32: 503:63
    let mut _19: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:503:32: 503:63
    let mut _21: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:504:38: 504:71
    let _22: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:504:38: 504:71
    let mut _23: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:504:38: 504:71
    let mut _24: bool;                   // in scope 0 at cita-chain/src/forward.rs:506:12: 506:48
    let mut _25: &std::option::Option<libproto::ProofType>; // in scope 0 at cita-chain/src/forward.rs:506:12: 506:28
    let mut _26: &std::option::Option<libproto::ProofType>; // in scope 0 at cita-chain/src/forward.rs:506:32: 506:48
    let mut _28: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _29: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _30: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _31: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _32: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _33: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _34: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _35: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _37: &[&str];                // in scope 0 at cita-chain/src/forward.rs:508:17: 508:82
    let mut _38: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _39: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _40: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:509:17: 509:33
    let _42: &std::option::Option<libproto::ProofType>; // in scope 0 at cita-chain/src/forward.rs:509:17: 509:33
    let mut _43: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:509:35: 509:51
    let _44: &std::option::Option<libproto::ProofType>; // in scope 0 at cita-chain/src/forward.rs:509:35: 509:51
    let mut _45: isize;                  // in scope 0 at cita-chain/src/forward.rs:514:18: 514:32
    let mut _46: isize;                  // in scope 0 at cita-chain/src/forward.rs:514:13: 514:33
    let mut _48: libproto::Proof;        // in scope 0 at cita-chain/src/forward.rs:515:44: 515:65
    let mut _49: &libproto::Proof;       // in scope 0 at cita-chain/src/forward.rs:515:44: 515:65
    let _50: &libproto::Proof;           // in scope 0 at cita-chain/src/forward.rs:515:44: 515:57
    let mut _51: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:515:44: 515:57
    let _52: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:515:44: 515:57
    let mut _53: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:515:44: 515:57
    let mut _55: bool;                   // in scope 0 at cita-chain/src/forward.rs:516:39: 516:72
    let mut _56: usize;                  // in scope 0 at cita-chain/src/forward.rs:516:39: 516:51
    let mut _57: usize;                  // in scope 0 at cita-chain/src/forward.rs:519:21: 519:33
    let mut _59: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _60: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _61: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _63: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _64: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _65: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _66: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _67: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _68: &[&str];                // in scope 0 at cita-chain/src/forward.rs:523:21: 523:97
    let mut _69: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _70: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _71: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:524:21: 524:33
    let _73: &u64;                       // in scope 0 at cita-chain/src/forward.rs:524:21: 524:33
    let mut _74: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:524:35: 524:45
    let _75: &usize;                     // in scope 0 at cita-chain/src/forward.rs:524:35: 524:45
    let mut _76: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:524:47: 524:63
    let _77: &u64;                       // in scope 0 at cita-chain/src/forward.rs:524:47: 524:63
    let mut _79: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:527:30: 527:44
    let _80: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:527:30: 527:44
    let mut _81: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:527:30: 527:44
    let mut _82: bool;                   // in scope 0 at cita-chain/src/forward.rs:528:20: 528:51
    let mut _83: bool;                   // in scope 0 at cita-chain/src/forward.rs:529:24: 529:98
    let mut _84: bool;                   // in scope 0 at cita-chain/src/forward.rs:529:24: 529:56
    let mut _85: u64;                    // in scope 0 at cita-chain/src/forward.rs:529:24: 529:36
    let mut _86: u64;                    // in scope 0 at cita-chain/src/forward.rs:529:40: 529:56
    let mut _87: bool;                   // in scope 0 at cita-chain/src/forward.rs:529:60: 529:98
    let mut _88: u64;                    // in scope 0 at cita-chain/src/forward.rs:529:60: 529:72
    let mut _89: u64;                    // in scope 0 at cita-chain/src/forward.rs:529:76: 529:98
    let mut _90: std::option::Option<&mut core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:80
    let mut _91: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:80
    let mut _92: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:80
    let mut _93: &mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:80
    let mut _94: lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:57
    let mut _95: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:57
    let _96: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:49
    let mut _97: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:532:29: 532:39
    let _98: &u64;                       // in scope 0 at cita-chain/src/forward.rs:532:66: 532:79
    let mut _99: isize;                  // in scope 0 at cita-chain/src/forward.rs:531:32: 531:57
    let mut _101: isize;                 // in scope 0 at cita-chain/src/forward.rs:534:36: 534:74
    let mut _103: bool;                  // in scope 0 at cita-chain/src/forward.rs:535:36: 535:53
    let mut _104: &std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:535:36: 535:53
    let mut _106: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _107: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _108: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _109: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _110: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _111: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _112: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _113: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _114: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _115: &[&str];               // in scope 0 at cita-chain/src/forward.rs:536:44: 536:80
    let mut _116: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _117: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _118: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _119: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let _120: &u64;                      // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let _121: u64;                       // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let mut _122: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let _123: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let mut _124: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:536:82: 536:98
    let _125: ();                        // in scope 0 at cita-chain/src/forward.rs:537:37: 537:94
    let mut _126: &mut std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:537:47: 537:59
    let mut _127: &mut std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:537:61: 537:93
    let mut _128: std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:537:66: 537:93
    let mut _129: libproto::Proof;       // in scope 0 at cita-chain/src/forward.rs:537:71: 537:92
    let mut _130: &libproto::Proof;      // in scope 0 at cita-chain/src/forward.rs:537:71: 537:92
    let _131: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:537:71: 537:84
    let mut _132: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:537:71: 537:84
    let _133: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:537:71: 537:84
    let mut _134: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:537:71: 537:84
    let _135: ();                        // in scope 0 at cita-chain/src/forward.rs:541:25: 541:66
    let mut _136: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:541:25: 541:66
    let _137: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:541:25: 541:66
    let mut _138: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:541:25: 541:66
    let mut _139: u64;                   // in scope 0 at cita-chain/src/forward.rs:541:51: 541:57
    let _140: &types::block::OpenBlock;  // in scope 0 at cita-chain/src/forward.rs:541:59: 541:65
    let _141: ();                        // in scope 0 at cita-chain/src/forward.rs:542:25: 542:64
    let mut _142: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:542:25: 542:64
    let _143: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:542:25: 542:64
    let mut _144: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:542:25: 542:64
    let mut _145: u64;                   // in scope 0 at cita-chain/src/forward.rs:542:57: 542:63
    let mut _147: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:547:43: 547:83
    let _148: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:547:43: 547:83
    let mut _149: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:547:43: 547:83
    let mut _150: u64;                   // in scope 0 at cita-chain/src/forward.rs:547:76: 547:82
    let mut _152: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _153: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _154: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _155: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _156: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _157: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _158: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _159: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _160: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _161: &[&str];               // in scope 0 at cita-chain/src/forward.rs:549:29: 549:70
    let mut _162: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _163: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _164: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _165: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:550:29: 550:35
    let _166: &u64;                      // in scope 0 at cita-chain/src/forward.rs:550:29: 550:35
    let mut _167: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:550:37: 550:48
    let _168: &std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:550:37: 550:48
    let _169: std::option::Option<core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:552:25: 555:91
    let mut _170: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:552:25: 555:91
    let mut _171: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:552:25: 555:91
    let mut _172: &mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:552:25: 555:91
    let mut _173: lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:552:25: 554:37
    let mut _174: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:552:25: 554:37
    let _175: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:552:25: 553:39
    let mut _176: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:552:25: 552:35
    let mut _177: u64;                   // in scope 0 at cita-chain/src/forward.rs:555:37: 555:43
    let mut _178: core::libchain::chain::BlockInQueue; // in scope 0 at cita-chain/src/forward.rs:555:45: 555:90
    let mut _179: (types::block::OpenBlock, std::option::Option<libproto::Proof>); // in scope 0 at cita-chain/src/forward.rs:555:69: 555:89
    let mut _180: types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:555:70: 555:75
    let mut _181: std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:555:77: 555:88
    let mut _183: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _184: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _185: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _186: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _187: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _188: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _189: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _190: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _191: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _192: &[&str];               // in scope 0 at cita-chain/src/forward.rs:558:29: 558:86
    let mut _193: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _194: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _195: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _196: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let _197: &u64;                      // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let _198: u64;                       // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let mut _199: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let _200: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let mut _201: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:559:29: 559:43
    let mut _202: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:560:29: 560:41
    let _203: &u64;                      // in scope 0 at cita-chain/src/forward.rs:560:29: 560:41
    let mut _204: bool;                  // in scope 0 at cita-chain/src/forward.rs:563:27: 563:73
    let mut _205: u64;                   // in scope 0 at cita-chain/src/forward.rs:563:27: 563:39
    let mut _206: u64;                   // in scope 0 at cita-chain/src/forward.rs:563:42: 563:73
    let mut _207: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:563:42: 563:73
    let _208: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:563:42: 563:73
    let mut _209: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:563:42: 563:73
    let mut _210: std::option::Option<&mut core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:76
    let mut _211: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:76
    let mut _212: &mut std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:76
    let mut _213: &mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:76
    let mut _214: lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:53
    let mut _215: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:53
    let _216: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:45
    let mut _217: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:565:25: 565:35
    let _218: &u64;                      // in scope 0 at cita-chain/src/forward.rs:565:62: 565:75
    let mut _219: isize;                 // in scope 0 at cita-chain/src/forward.rs:564:28: 564:48
    let mut _221: isize;                 // in scope 0 at cita-chain/src/forward.rs:567:32: 567:70
    let mut _223: bool;                  // in scope 0 at cita-chain/src/forward.rs:568:32: 568:49
    let mut _224: &std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:568:32: 568:49
    let mut _226: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _227: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _228: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _229: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _230: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _231: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _232: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _233: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _234: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _235: &[&str];               // in scope 0 at cita-chain/src/forward.rs:569:40: 569:76
    let mut _236: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _237: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _238: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _239: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:569:78: 569:90
    let _240: &u64;                      // in scope 0 at cita-chain/src/forward.rs:569:78: 569:90
    let _241: ();                        // in scope 0 at cita-chain/src/forward.rs:570:33: 570:90
    let mut _242: &mut std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:570:43: 570:55
    let mut _243: &mut std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:570:57: 570:89
    let mut _244: std::option::Option<libproto::Proof>; // in scope 0 at cita-chain/src/forward.rs:570:62: 570:89
    let mut _245: libproto::Proof;       // in scope 0 at cita-chain/src/forward.rs:570:67: 570:88
    let mut _246: &libproto::Proof;      // in scope 0 at cita-chain/src/forward.rs:570:67: 570:88
    let _247: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:570:67: 570:80
    let mut _248: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:570:67: 570:80
    let _249: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:570:67: 570:80
    let mut _250: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:570:67: 570:80
    let _251: ();                        // in scope 0 at cita-chain/src/forward.rs:574:21: 575:76
    let mut _252: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:574:21: 575:76
    let _253: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:574:21: 575:76
    let mut _254: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:574:21: 575:76
    let mut _255: u64;                   // in scope 0 at cita-chain/src/forward.rs:575:48: 575:60
    let mut _256: &libproto::Proof;      // in scope 0 at cita-chain/src/forward.rs:575:62: 575:75
    let _257: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:575:62: 575:75
    let mut _258: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:575:62: 575:75
    let _259: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:575:62: 575:75
    let mut _260: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:575:62: 575:75
    let _261: ();                        // in scope 0 at cita-chain/src/forward.rs:576:21: 576:70
    let mut _262: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:576:21: 576:70
    let _263: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:576:21: 576:70
    let mut _264: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:576:21: 576:70
    let mut _265: &libproto::Proof;      // in scope 0 at cita-chain/src/forward.rs:576:56: 576:69
    let _266: &libproto::Proof;          // in scope 0 at cita-chain/src/forward.rs:576:56: 576:69
    let mut _267: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:576:56: 576:69
    let _268: &types::header::OpenHeader; // in scope 0 at cita-chain/src/forward.rs:576:56: 576:69
    let mut _269: &types::block::OpenBlock; // in scope 0 at cita-chain/src/forward.rs:576:56: 576:69
    let _270: !;                         // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52
    let mut _289: bool;                  // in scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    let mut _290: bool;                  // in scope 0 at cita-chain/src/forward.rs:556:21: 556:22
    scope 1 {
        debug block_proof_type => _3;    // in scope 1 at cita-chain/src/forward.rs:500:13: 500:29
        let _7: std::option::Option<libproto::ProofType>; // in scope 1 at cita-chain/src/forward.rs:501:13: 501:29
        scope 2 {
            debug chain_proof_type => _7; // in scope 2 at cita-chain/src/forward.rs:501:13: 501:29
            let _11: usize;              // in scope 2 at cita-chain/src/forward.rs:502:13: 502:23
            scope 3 {
                debug blk_height => _11; // in scope 3 at cita-chain/src/forward.rs:502:13: 502:23
                let _16: u64;            // in scope 3 at cita-chain/src/forward.rs:503:13: 503:29
                scope 4 {
                    debug chain_max_height => _16; // in scope 4 at cita-chain/src/forward.rs:503:13: 503:29
                    let _20: u64;        // in scope 4 at cita-chain/src/forward.rs:504:13: 504:35
                    scope 5 {
                        debug chain_max_store_height => _20; // in scope 5 at cita-chain/src/forward.rs:504:13: 504:35
                        let _27: log::Level; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let _47: proof::BftProof; // in scope 5 at cita-chain/src/forward.rs:515:21: 515:26
                        scope 6 {
                            debug lvl => _27; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _286: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _287: &[&str; 2]; // in scope 6 at cita-chain/src/forward.rs:508:17: 508:82
                            let mut _288: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 7 {
                            debug proof => _47; // in scope 7 at cita-chain/src/forward.rs:515:21: 515:26
                            let _54: u64; // in scope 7 at cita-chain/src/forward.rs:516:21: 516:33
                            scope 8 {
                                debug proof_height => _54; // in scope 8 at cita-chain/src/forward.rs:516:21: 516:33
                                let _58: log::Level; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let _78: u64; // in scope 8 at cita-chain/src/forward.rs:527:21: 527:27
                                scope 9 {
                                    debug lvl => _58; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let mut _283: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                    let mut _284: &[&str; 3]; // in scope 9 at cita-chain/src/forward.rs:523:21: 523:97
                                    let mut _285: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                }
                                scope 10 {
                                    debug height => _78; // in scope 10 at cita-chain/src/forward.rs:527:21: 527:27
                                    let _146: std::option::Option<libproto::Proof>; // in scope 10 at cita-chain/src/forward.rs:547:29: 547:40
                                    let _182: log::Level; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    scope 11 {
                                        debug prev_block_in_queue => _100; // in scope 11 at cita-chain/src/forward.rs:531:37: 531:56
                                        let _100: &mut core::libchain::chain::BlockInQueue; // in scope 11 at cita-chain/src/forward.rs:531:37: 531:56
                                        scope 12 {
                                            debug value => _102; // in scope 12 at cita-chain/src/forward.rs:534:60: 534:73
                                            let _102: &mut (types::block::OpenBlock, std::option::Option<libproto::Proof>); // in scope 12 at cita-chain/src/forward.rs:534:60: 534:73
                                            let _105: log::Level; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            scope 13 {
                                                debug lvl => _105; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                let mut _280: &(&str, &str, &str, u32); // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                let mut _281: &[&str; 1]; // in scope 13 at cita-chain/src/forward.rs:536:44: 536:80
                                                let mut _282: &log::LevelFilter; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                            }
                                        }
                                    }
                                    scope 14 {
                                        debug saved_proof => _146; // in scope 14 at cita-chain/src/forward.rs:547:29: 547:40
                                        let _151: log::Level; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                        scope 15 {
                                            debug lvl => _151; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            let mut _277: &(&str, &str, &str, u32); // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                            let mut _278: &[&str; 3]; // in scope 15 at cita-chain/src/forward.rs:549:29: 549:70
                                            let mut _279: &log::LevelFilter; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                        }
                                    }
                                    scope 16 {
                                        debug lvl => _182; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                        let mut _274: &(&str, &str, &str, u32); // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                        let mut _275: &[&str; 2]; // in scope 16 at cita-chain/src/forward.rs:558:29: 558:86
                                        let mut _276: &log::LevelFilter; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                    }
                                    scope 17 {
                                        debug block_in_queue => _220; // in scope 17 at cita-chain/src/forward.rs:564:33: 564:47
                                        let _220: &mut core::libchain::chain::BlockInQueue; // in scope 17 at cita-chain/src/forward.rs:564:33: 564:47
                                        scope 18 {
                                            debug value => _222; // in scope 18 at cita-chain/src/forward.rs:567:56: 567:69
                                            let _222: &mut (types::block::OpenBlock, std::option::Option<libproto::Proof>); // in scope 18 at cita-chain/src/forward.rs:567:56: 567:69
                                            let _225: log::Level; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            scope 19 {
                                                debug lvl => _225; // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                let mut _271: &(&str, &str, &str, u32); // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                let mut _272: &[&str; 2]; // in scope 19 at cita-chain/src/forward.rs:569:40: 569:76
                                                let mut _273: &log::LevelFilter; // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _289 = const false;              // scope 0 at cita-chain/src/forward.rs:500:13: 500:29
        _290 = const false;              // scope 0 at cita-chain/src/forward.rs:500:13: 500:29
        _289 = const true;               // scope 0 at cita-chain/src/forward.rs:500:13: 500:29
        _6 = &_2;                        // scope 0 at cita-chain/src/forward.rs:500:32: 500:50
        _5 = <OpenBlock as Deref>::deref(move _6) -> [return: bb1, unwind: bb165]; // scope 0 at cita-chain/src/forward.rs:500:32: 500:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:500:32: 500:50
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 0 at cita-chain/src/forward.rs:500:32: 500:50
        _3 = OpenHeader::proof_type(move _4) -> [return: bb2, unwind: bb165]; // scope 0 at cita-chain/src/forward.rs:500:32: 500:50
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:500:38: 500:48
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> Option<ProofType> {OpenHeader::proof_type}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 1 at cita-chain/src/forward.rs:501:32: 501:64
        _9 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _10) -> [return: bb3, unwind: bb165]; // scope 1 at cita-chain/src/forward.rs:501:32: 501:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:501:32: 501:64
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = _9;                         // scope 1 at cita-chain/src/forward.rs:501:32: 501:64
        _7 = core::libchain::chain::Chain::get_chain_prooftype(move _8) -> [return: bb4, unwind: bb165]; // scope 1 at cita-chain/src/forward.rs:501:32: 501:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:501:43: 501:62
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> Option<ProofType> {core::libchain::chain::Chain::get_chain_prooftype}, val: Value(<ZST>) }
    }

    bb4: {
        _15 = &_2;                       // scope 2 at cita-chain/src/forward.rs:502:26: 502:40
        _14 = <OpenBlock as Deref>::deref(move _15) -> [return: bb5, unwind: bb165]; // scope 2 at cita-chain/src/forward.rs:502:26: 502:40
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:502:26: 502:40
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = _14;                       // scope 2 at cita-chain/src/forward.rs:502:26: 502:40
        _12 = OpenHeader::number(move _13) -> [return: bb6, unwind: bb165]; // scope 2 at cita-chain/src/forward.rs:502:26: 502:40
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:502:32: 502:38
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u64 {OpenHeader::number}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = move _12 as usize (IntToInt); // scope 2 at cita-chain/src/forward.rs:502:26: 502:49
        _19 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 3 at cita-chain/src/forward.rs:503:32: 503:63
        _18 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _19) -> [return: bb7, unwind: bb165]; // scope 3 at cita-chain/src/forward.rs:503:32: 503:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:503:32: 503:63
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _17 = _18;                       // scope 3 at cita-chain/src/forward.rs:503:32: 503:63
        _16 = core::libchain::chain::Chain::get_current_height(move _17) -> [return: bb8, unwind: bb165]; // scope 3 at cita-chain/src/forward.rs:503:32: 503:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:503:43: 503:61
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb8: {
        _23 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:504:38: 504:71
        _22 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _23) -> [return: bb9, unwind: bb165]; // scope 4 at cita-chain/src/forward.rs:504:38: 504:71
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:504:38: 504:71
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb9: {
        _21 = _22;                       // scope 4 at cita-chain/src/forward.rs:504:38: 504:71
        _20 = core::libchain::chain::Chain::get_max_store_height(move _21) -> [return: bb10, unwind: bb165]; // scope 4 at cita-chain/src/forward.rs:504:38: 504:71
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:504:49: 504:69
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_max_store_height}, val: Value(<ZST>) }
    }

    bb10: {
        _25 = &_7;                       // scope 5 at cita-chain/src/forward.rs:506:12: 506:28
        _26 = &_3;                       // scope 5 at cita-chain/src/forward.rs:506:32: 506:48
        _24 = <Option<ProofType> as PartialEq>::ne(move _25, move _26) -> [return: bb11, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:506:12: 506:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:506:12: 506:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<ProofType>, &'b Option<ProofType>) -> bool {<Option<ProofType> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _24) -> [0: bb24, otherwise: bb12]; // scope 5 at cita-chain/src/forward.rs:506:12: 506:48
    }

    bb12: {
        _27 = log::Level::Error;         // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _30 = &_27;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _288 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[17])) }
        _29 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _30, _288) -> [return: bb16, unwind: bb165]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _28 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _32 = &_27;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _34 = log::max_level() -> [return: bb17, unwind: bb165]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _28) -> [0: bb23, otherwise: bb19]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        switchInt(move _29) -> [0: bb13, otherwise: bb14]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _33 = &_34;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _31 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _32, move _33) -> [return: bb18, unwind: bb165]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _28 = move _31;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _287 = const _;                  // scope 6 at cita-chain/src/forward.rs:508:17: 508:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:508:17: 508:82
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[16])) }
        _37 = _287 as &[&str] (Pointer(Unsize)); // scope 6 at cita-chain/src/forward.rs:508:17: 508:82
        _42 = &_3;                       // scope 6 at cita-chain/src/forward.rs:509:17: 509:33
        _41 = core::fmt::ArgumentV1::<'_>::new_debug::<Option<ProofType>>(_42) -> [return: bb20, unwind: bb165]; // scope 6 at cita-chain/src/forward.rs:509:17: 509:33
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:509:17: 509:33
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Option<ProofType>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Option<ProofType>>}, val: Value(<ZST>) }
    }

    bb20: {
        _44 = &_7;                       // scope 6 at cita-chain/src/forward.rs:509:35: 509:51
        _43 = core::fmt::ArgumentV1::<'_>::new_debug::<Option<ProofType>>(_44) -> [return: bb21, unwind: bb165]; // scope 6 at cita-chain/src/forward.rs:509:35: 509:51
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:509:35: 509:51
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Option<ProofType>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Option<ProofType>>}, val: Value(<ZST>) }
    }

    bb21: {
        _40 = [move _41, move _43];      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _39 = &_40;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _38 = _39 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _36 = Arguments::<'_>::new_v1(move _37, move _38) -> [return: bb22, unwind: bb165]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb22: {
        _286 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[15])) }
        _35 = log::__private_api_log(move _36, _27, _286) -> [return: bb166, unwind: bb165]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_2) -> bb153;               // scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    }

    bb24: {
        _46 = discriminant(_3);          // scope 5 at cita-chain/src/forward.rs:513:15: 513:31
        switchInt(move _46) -> [1: bb26, otherwise: bb25]; // scope 5 at cita-chain/src/forward.rs:513:9: 513:31
    }

    bb25: {
        _270 = core::panicking::panic(const "not implemented") -> bb165; // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb26: {
        _45 = discriminant(((_3 as Some).0: libproto::ProofType)); // scope 5 at cita-chain/src/forward.rs:513:15: 513:31
        switchInt(move _45) -> [2: bb27, otherwise: bb25]; // scope 5 at cita-chain/src/forward.rs:513:9: 513:31
    }

    bb27: {
        _53 = &_2;                       // scope 5 at cita-chain/src/forward.rs:515:44: 515:57
        _52 = <OpenBlock as Deref>::deref(move _53) -> [return: bb28, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:515:44: 515:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:515:44: 515:57
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb28: {
        _51 = _52;                       // scope 5 at cita-chain/src/forward.rs:515:44: 515:57
        _50 = OpenHeader::proof(move _51) -> [return: bb29, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:515:44: 515:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:515:50: 515:55
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a libproto::Proof {OpenHeader::proof}, val: Value(<ZST>) }
    }

    bb29: {
        _49 = _50;                       // scope 5 at cita-chain/src/forward.rs:515:44: 515:65
        _48 = <libproto::Proof as Clone>::clone(move _49) -> [return: bb30, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:515:44: 515:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:515:58: 515:63
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Proof) -> libproto::Proof {<libproto::Proof as Clone>::clone}, val: Value(<ZST>) }
    }

    bb30: {
        _47 = <proof::BftProof as From<libproto::Proof>>::from(move _48) -> [return: bb31, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:515:29: 515:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:515:29: 515:43
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(libproto::Proof) -> proof::BftProof {<proof::BftProof as From<libproto::Proof>>::from}, val: Value(<ZST>) }
    }

    bb31: {
        _56 = (_47.1: usize);            // scope 7 at cita-chain/src/forward.rs:516:39: 516:51
        _55 = Eq(move _56, const _);     // scope 7 at cita-chain/src/forward.rs:516:39: 516:72
        switchInt(move _55) -> [0: bb33, otherwise: bb32]; // scope 7 at cita-chain/src/forward.rs:516:39: 516:72
    }

    bb32: {
        _54 = const 0_u64;               // scope 7 at cita-chain/src/forward.rs:517:21: 517:22
        goto -> bb34;                    // scope 7 at cita-chain/src/forward.rs:516:36: 520:18
    }

    bb33: {
        _57 = (_47.1: usize);            // scope 7 at cita-chain/src/forward.rs:519:21: 519:33
        _54 = move _57 as u64 (IntToInt); // scope 7 at cita-chain/src/forward.rs:519:21: 519:40
        goto -> bb34;                    // scope 7 at cita-chain/src/forward.rs:516:36: 520:18
    }

    bb34: {
        _58 = log::Level::Debug;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _61 = &_58;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _285 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[14])) }
        _60 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _61, _285) -> [return: bb38, unwind: bb159]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb35: {
        _59 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb37;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _63 = &_58;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _65 = log::max_level() -> [return: bb39, unwind: bb159]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb37: {
        switchInt(move _59) -> [0: bb46, otherwise: bb41]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        switchInt(move _60) -> [0: bb35, otherwise: bb36]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _64 = &_65;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _62 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _63, move _64) -> [return: bb40, unwind: bb159]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb40: {
        _59 = move _62;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb37;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        _284 = const _;                  // scope 9 at cita-chain/src/forward.rs:523:21: 523:97
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:523:21: 523:97
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[13])) }
        _68 = _284 as &[&str] (Pointer(Unsize)); // scope 9 at cita-chain/src/forward.rs:523:21: 523:97
        _73 = &_54;                      // scope 9 at cita-chain/src/forward.rs:524:21: 524:33
        _72 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_73) -> [return: bb42, unwind: bb159]; // scope 9 at cita-chain/src/forward.rs:524:21: 524:33
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:524:21: 524:33
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb42: {
        _75 = &_11;                      // scope 9 at cita-chain/src/forward.rs:524:35: 524:45
        _74 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_75) -> [return: bb43, unwind: bb159]; // scope 9 at cita-chain/src/forward.rs:524:35: 524:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:524:35: 524:45
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb43: {
        _77 = &_16;                      // scope 9 at cita-chain/src/forward.rs:524:47: 524:63
        _76 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_77) -> [return: bb44, unwind: bb159]; // scope 9 at cita-chain/src/forward.rs:524:47: 524:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:524:47: 524:63
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb44: {
        _71 = [move _72, move _74, move _76]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _70 = &_71;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _69 = _70 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _67 = Arguments::<'_>::new_v1(move _68, move _69) -> [return: bb45, unwind: bb159]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb45: {
        _283 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[12])) }
        _66 = log::__private_api_log(move _67, _58, _283) -> [return: bb167, unwind: bb159]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb46: {
        _81 = &_2;                       // scope 8 at cita-chain/src/forward.rs:527:30: 527:44
        _80 = <OpenBlock as Deref>::deref(move _81) -> [return: bb47, unwind: bb159]; // scope 8 at cita-chain/src/forward.rs:527:30: 527:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:527:30: 527:44
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb47: {
        _79 = _80;                       // scope 8 at cita-chain/src/forward.rs:527:30: 527:44
        _78 = OpenHeader::number(move _79) -> [return: bb48, unwind: bb159]; // scope 8 at cita-chain/src/forward.rs:527:30: 527:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:527:36: 527:42
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u64 {OpenHeader::number}, val: Value(<ZST>) }
    }

    bb48: {
        _82 = Ne(_11, const _);          // scope 10 at cita-chain/src/forward.rs:528:20: 528:51
        switchInt(move _82) -> [0: bb116, otherwise: bb49]; // scope 10 at cita-chain/src/forward.rs:528:20: 528:51
    }

    bb49: {
        _85 = _54;                       // scope 10 at cita-chain/src/forward.rs:529:24: 529:36
        _86 = _16;                       // scope 10 at cita-chain/src/forward.rs:529:40: 529:56
        _84 = Eq(move _85, move _86);    // scope 10 at cita-chain/src/forward.rs:529:24: 529:56
        switchInt(move _84) -> [0: bb51, otherwise: bb50]; // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
    }

    bb50: {
        _83 = const true;                // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
        goto -> bb52;                    // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
    }

    bb51: {
        _88 = _54;                       // scope 10 at cita-chain/src/forward.rs:529:60: 529:72
        _89 = _20;                       // scope 10 at cita-chain/src/forward.rs:529:76: 529:98
        _87 = Eq(move _88, move _89);    // scope 10 at cita-chain/src/forward.rs:529:60: 529:98
        _83 = move _87;                  // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
        goto -> bb52;                    // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
    }

    bb52: {
        switchInt(move _83) -> [0: bb103, otherwise: bb53]; // scope 10 at cita-chain/src/forward.rs:529:24: 529:98
    }

    bb53: {
        _97 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 11 at cita-chain/src/forward.rs:532:29: 532:39
        _96 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _97) -> [return: bb54, unwind: bb159]; // scope 11 at cita-chain/src/forward.rs:532:29: 532:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:532:29: 532:49
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb54: {
        _95 = &((*_96).4: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>); // scope 11 at cita-chain/src/forward.rs:532:29: 532:57
        _94 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write(move _95) -> [return: bb55, unwind: bb159]; // scope 11 at cita-chain/src/forward.rs:532:29: 532:57
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:532:50: 532:55
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> lock_api::rwlock::RwLockWriteGuard<'a, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write}, val: Value(<ZST>) }
    }

    bb55: {
        _93 = &mut _94;                  // scope 11 at cita-chain/src/forward.rs:532:29: 532:80
        _92 = <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut(move _93) -> [return: bb56, unwind: bb158]; // scope 11 at cita-chain/src/forward.rs:532:29: 532:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:532:29: 532:80
                                         // + literal: Const { ty: for<'a> fn(&'a mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> &'a mut <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as Deref>::Target {<lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb56: {
        _91 = _92;                       // scope 11 at cita-chain/src/forward.rs:532:29: 532:80
        _98 = &_54;                      // scope 11 at cita-chain/src/forward.rs:532:66: 532:79
        _90 = BTreeMap::<u64, BlockInQueue>::get_mut::<u64>(move _91, _98) -> [return: bb57, unwind: bb158]; // scope 11 at cita-chain/src/forward.rs:532:29: 532:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:532:58: 532:65
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<u64, BlockInQueue>, &'b u64) -> Option<&'a mut BlockInQueue> {BTreeMap::<u64, BlockInQueue>::get_mut::<u64>}, val: Value(<ZST>) }
    }

    bb57: {
        _99 = discriminant(_90);         // scope 11 at cita-chain/src/forward.rs:531:32: 531:57
        switchInt(move _99) -> [1: bb58, otherwise: bb78]; // scope 11 at cita-chain/src/forward.rs:531:32: 531:57
    }

    bb58: {
        _100 = move ((_90 as Some).0: &mut core::libchain::chain::BlockInQueue); // scope 11 at cita-chain/src/forward.rs:531:37: 531:56
        _101 = discriminant((*_100));    // scope 12 at cita-chain/src/forward.rs:534:36: 534:74
        switchInt(move _101) -> [2: bb59, otherwise: bb78]; // scope 12 at cita-chain/src/forward.rs:534:36: 534:74
    }

    bb59: {
        _102 = &mut (((*_100) as SyncBlock).0: (types::block::OpenBlock, std::option::Option<libproto::Proof>)); // scope 12 at cita-chain/src/forward.rs:534:60: 534:73
        _104 = &((*_102).1: std::option::Option<libproto::Proof>); // scope 12 at cita-chain/src/forward.rs:535:36: 535:53
        _103 = Option::<libproto::Proof>::is_none(move _104) -> [return: bb60, unwind: bb158]; // scope 12 at cita-chain/src/forward.rs:535:36: 535:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:535:44: 535:51
                                         // + literal: Const { ty: for<'a> fn(&'a Option<libproto::Proof>) -> bool {Option::<libproto::Proof>::is_none}, val: Value(<ZST>) }
    }

    bb60: {
        switchInt(move _103) -> [0: bb78, otherwise: bb61]; // scope 12 at cita-chain/src/forward.rs:535:36: 535:53
    }

    bb61: {
        _105 = log::Level::Debug;        // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _108 = &_105;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _282 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[11])) }
        _107 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _108, _282) -> [return: bb65, unwind: bb158]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb62: {
        _106 = const false;              // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb64;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb63: {
        _110 = &_105;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _112 = log::max_level() -> [return: bb66, unwind: bb158]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb64: {
        switchInt(move _106) -> [0: bb73, otherwise: bb68]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        switchInt(move _107) -> [0: bb62, otherwise: bb63]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb66: {
        _111 = &_112;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _109 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _110, move _111) -> [return: bb67, unwind: bb158]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb67: {
        _106 = move _109;                // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb64;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb68: {
        _281 = const _;                  // scope 13 at cita-chain/src/forward.rs:536:44: 536:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:44: 536:80
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[10])) }
        _115 = _281 as &[&str] (Pointer(Unsize)); // scope 13 at cita-chain/src/forward.rs:536:44: 536:80
        _124 = &((*_102).0: types::block::OpenBlock); // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
        _123 = <OpenBlock as Deref>::deref(move _124) -> [return: bb69, unwind: bb158]; // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:82: 536:98
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb69: {
        _122 = _123;                     // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
        _121 = OpenHeader::number(move _122) -> [return: bb70, unwind: bb158]; // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:90: 536:96
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u64 {OpenHeader::number}, val: Value(<ZST>) }
    }

    bb70: {
        _120 = &_121;                    // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
        _119 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_120) -> [return: bb71, unwind: bb158]; // scope 13 at cita-chain/src/forward.rs:536:82: 536:98
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:82: 536:98
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb71: {
        _118 = [move _119];              // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _117 = &_118;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _116 = _117 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _114 = Arguments::<'_>::new_v1(move _115, move _116) -> [return: bb72, unwind: bb158]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb72: {
        _280 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[9])) }
        _113 = log::__private_api_log(move _114, _105, _280) -> [return: bb168, unwind: bb158]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb73: {
        _126 = &mut ((*_102).1: std::option::Option<libproto::Proof>); // scope 12 at cita-chain/src/forward.rs:537:47: 537:59
        _134 = &_2;                      // scope 12 at cita-chain/src/forward.rs:537:71: 537:84
        _133 = <OpenBlock as Deref>::deref(move _134) -> [return: bb74, unwind: bb158]; // scope 12 at cita-chain/src/forward.rs:537:71: 537:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:537:71: 537:84
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb74: {
        _132 = _133;                     // scope 12 at cita-chain/src/forward.rs:537:71: 537:84
        _131 = OpenHeader::proof(move _132) -> [return: bb75, unwind: bb158]; // scope 12 at cita-chain/src/forward.rs:537:71: 537:84
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:537:77: 537:82
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a libproto::Proof {OpenHeader::proof}, val: Value(<ZST>) }
    }

    bb75: {
        _130 = _131;                     // scope 12 at cita-chain/src/forward.rs:537:71: 537:92
        _129 = <libproto::Proof as Clone>::clone(move _130) -> [return: bb76, unwind: bb158]; // scope 12 at cita-chain/src/forward.rs:537:71: 537:92
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:537:85: 537:90
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Proof) -> libproto::Proof {<libproto::Proof as Clone>::clone}, val: Value(<ZST>) }
    }

    bb76: {
        _128 = Option::<libproto::Proof>::Some(move _129); // scope 12 at cita-chain/src/forward.rs:537:66: 537:93
        _127 = &mut _128;                // scope 12 at cita-chain/src/forward.rs:537:61: 537:93
        _125 = std::mem::swap::<Option<libproto::Proof>>(_126, _127) -> [return: bb77, unwind: bb157]; // scope 12 at cita-chain/src/forward.rs:537:37: 537:94
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:537:37: 537:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Option<libproto::Proof>, &'b mut Option<libproto::Proof>) {std::mem::swap::<Option<libproto::Proof>>}, val: Value(<ZST>) }
    }

    bb77: {
        drop(_128) -> [return: bb78, unwind: bb158]; // scope 12 at cita-chain/src/forward.rs:537:94: 537:95
    }

    bb78: {
        drop(_94) -> [return: bb79, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:540:25: 540:26
    }

    bb79: {
        _138 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:541:25: 541:66
        _137 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _138) -> [return: bb80, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:541:25: 541:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:541:25: 541:66
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb80: {
        _136 = _137;                     // scope 10 at cita-chain/src/forward.rs:541:25: 541:66
        _139 = _78;                      // scope 10 at cita-chain/src/forward.rs:541:51: 541:57
        _140 = &_2;                      // scope 10 at cita-chain/src/forward.rs:541:59: 541:65
        _135 = core::libchain::chain::Chain::set_block_body(move _136, move _139, _140) -> [return: bb81, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:541:25: 541:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:541:36: 541:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, u64, &'b OpenBlock) {core::libchain::chain::Chain::set_block_body}, val: Value(<ZST>) }
    }

    bb81: {
        _144 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:542:25: 542:64
        _143 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _144) -> [return: bb82, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:542:25: 542:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:542:25: 542:64
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb82: {
        _142 = _143;                     // scope 10 at cita-chain/src/forward.rs:542:25: 542:64
        _145 = _78;                      // scope 10 at cita-chain/src/forward.rs:542:57: 542:63
        _141 = core::libchain::chain::Chain::set_max_store_height(move _142, move _145) -> [return: bb83, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:542:25: 542:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:542:36: 542:56
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, u64) {core::libchain::chain::Chain::set_max_store_height}, val: Value(<ZST>) }
    }

    bb83: {
        _149 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:547:43: 547:83
        _148 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _149) -> [return: bb84, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:547:43: 547:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:547:43: 547:83
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb84: {
        _147 = _148;                     // scope 10 at cita-chain/src/forward.rs:547:43: 547:83
        _150 = _78;                      // scope 10 at cita-chain/src/forward.rs:547:76: 547:82
        _146 = core::libchain::chain::Chain::get_proof_with_height(move _147, move _150) -> [return: bb85, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:547:43: 547:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:547:54: 547:75
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, u64) -> Option<libproto::Proof> {core::libchain::chain::Chain::get_proof_with_height}, val: Value(<ZST>) }
    }

    bb85: {
        _290 = const true;               // scope 10 at cita-chain/src/forward.rs:547:82: 547:83
        _151 = log::Level::Debug;        // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _154 = &_151;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _279 = const _;                  // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[8])) }
        _153 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _154, _279) -> [return: bb89, unwind: bb163]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb86: {
        _152 = const false;              // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb88;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb87: {
        _156 = &_151;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _158 = log::max_level() -> [return: bb90, unwind: bb163]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb88: {
        switchInt(move _152) -> [0: bb96, otherwise: bb92]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb89: {
        switchInt(move _153) -> [0: bb86, otherwise: bb87]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb90: {
        _157 = &_158;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _155 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _156, move _157) -> [return: bb91, unwind: bb163]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb91: {
        _152 = move _155;                // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb88;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb92: {
        _278 = const _;                  // scope 15 at cita-chain/src/forward.rs:549:29: 549:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:549:29: 549:70
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[7])) }
        _161 = _278 as &[&str] (Pointer(Unsize)); // scope 15 at cita-chain/src/forward.rs:549:29: 549:70
        _166 = &_78;                     // scope 15 at cita-chain/src/forward.rs:550:29: 550:35
        _165 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_166) -> [return: bb93, unwind: bb163]; // scope 15 at cita-chain/src/forward.rs:550:29: 550:35
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:550:29: 550:35
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb93: {
        _168 = &_146;                    // scope 15 at cita-chain/src/forward.rs:550:37: 550:48
        _167 = core::fmt::ArgumentV1::<'_>::new_debug::<Option<libproto::Proof>>(_168) -> [return: bb94, unwind: bb163]; // scope 15 at cita-chain/src/forward.rs:550:37: 550:48
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:550:37: 550:48
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b Option<libproto::Proof>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Option<libproto::Proof>>}, val: Value(<ZST>) }
    }

    bb94: {
        _164 = [move _165, move _167];   // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _163 = &_164;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _162 = _163 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _160 = Arguments::<'_>::new_v1(move _161, move _162) -> [return: bb95, unwind: bb163]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb95: {
        _277 = const _;                  // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[6])) }
        _159 = log::__private_api_log(move _160, _151, _277) -> [return: bb169, unwind: bb163]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb96: {
        _176 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 14 at cita-chain/src/forward.rs:552:25: 552:35
        _175 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _176) -> [return: bb97, unwind: bb163]; // scope 14 at cita-chain/src/forward.rs:552:25: 553:39
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:552:25: 553:39
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb97: {
        _174 = &((*_175).4: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>); // scope 14 at cita-chain/src/forward.rs:552:25: 554:37
        _173 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write(move _174) -> [return: bb98, unwind: bb163]; // scope 14 at cita-chain/src/forward.rs:552:25: 554:37
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:554:30: 554:35
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> lock_api::rwlock::RwLockWriteGuard<'a, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write}, val: Value(<ZST>) }
    }

    bb98: {
        _172 = &mut _173;                // scope 14 at cita-chain/src/forward.rs:552:25: 555:91
        _171 = <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut(move _172) -> [return: bb99, unwind: bb156]; // scope 14 at cita-chain/src/forward.rs:552:25: 555:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:552:25: 555:91
                                         // + literal: Const { ty: for<'a> fn(&'a mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> &'a mut <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as Deref>::Target {<lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb99: {
        _170 = _171;                     // scope 14 at cita-chain/src/forward.rs:552:25: 555:91
        _177 = _78;                      // scope 14 at cita-chain/src/forward.rs:555:37: 555:43
        _289 = const false;              // scope 14 at cita-chain/src/forward.rs:555:70: 555:75
        _180 = move _2;                  // scope 14 at cita-chain/src/forward.rs:555:70: 555:75
        _290 = const false;              // scope 14 at cita-chain/src/forward.rs:555:77: 555:88
        _181 = move _146;                // scope 14 at cita-chain/src/forward.rs:555:77: 555:88
        _179 = (move _180, move _181);   // scope 14 at cita-chain/src/forward.rs:555:69: 555:89
        _178 = SyncBlock(move _179);     // scope 14 at cita-chain/src/forward.rs:555:45: 555:90
        _169 = BTreeMap::<u64, BlockInQueue>::insert(move _170, move _177, move _178) -> [return: bb100, unwind: bb156]; // scope 14 at cita-chain/src/forward.rs:552:25: 555:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:555:30: 555:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, BlockInQueue>, u64, BlockInQueue) -> Option<BlockInQueue> {BTreeMap::<u64, BlockInQueue>::insert}, val: Value(<ZST>) }
    }

    bb100: {
        drop(_169) -> [return: bb101, unwind: bb156]; // scope 14 at cita-chain/src/forward.rs:555:91: 555:92
    }

    bb101: {
        drop(_173) -> [return: bb102, unwind: bb163]; // scope 14 at cita-chain/src/forward.rs:555:91: 555:92
    }

    bb102: {
        _290 = const false;              // scope 10 at cita-chain/src/forward.rs:556:21: 556:22
        goto -> bb151;                   // scope 10 at cita-chain/src/forward.rs:529:21: 562:22
    }

    bb103: {
        _182 = log::Level::Warn;         // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _185 = &_182;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _276 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[5])) }
        _184 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _185, _276) -> [return: bb107, unwind: bb159]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb104: {
        _183 = const false;              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb106;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb105: {
        _187 = &_182;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _189 = log::max_level() -> [return: bb108, unwind: bb159]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb106: {
        switchInt(move _183) -> [0: bb151, otherwise: bb110]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb107: {
        switchInt(move _184) -> [0: bb104, otherwise: bb105]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb108: {
        _188 = &_189;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _186 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _187, move _188) -> [return: bb109, unwind: bb159]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb109: {
        _183 = move _186;                // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb106;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb110: {
        _275 = const _;                  // scope 16 at cita-chain/src/forward.rs:558:29: 558:86
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:558:29: 558:86
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[4])) }
        _192 = _275 as &[&str] (Pointer(Unsize)); // scope 16 at cita-chain/src/forward.rs:558:29: 558:86
        _201 = &_2;                      // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
        _200 = <OpenBlock as Deref>::deref(move _201) -> [return: bb111, unwind: bb159]; // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:559:29: 559:43
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb111: {
        _199 = _200;                     // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
        _198 = OpenHeader::number(move _199) -> [return: bb112, unwind: bb159]; // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:559:35: 559:41
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> u64 {OpenHeader::number}, val: Value(<ZST>) }
    }

    bb112: {
        _197 = &_198;                    // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
        _196 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_197) -> [return: bb113, unwind: bb159]; // scope 16 at cita-chain/src/forward.rs:559:29: 559:43
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:559:29: 559:43
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb113: {
        _203 = &_54;                     // scope 16 at cita-chain/src/forward.rs:560:29: 560:41
        _202 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_203) -> [return: bb114, unwind: bb159]; // scope 16 at cita-chain/src/forward.rs:560:29: 560:41
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:560:29: 560:41
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb114: {
        _195 = [move _196, move _202];   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _194 = &_195;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _193 = _194 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _191 = Arguments::<'_>::new_v1(move _192, move _193) -> [return: bb115, unwind: bb159]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb115: {
        _274 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[3])) }
        _190 = log::__private_api_log(move _191, _182, _274) -> [return: bb170, unwind: bb159]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb116: {
        _205 = _54;                      // scope 10 at cita-chain/src/forward.rs:563:27: 563:39
        _209 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:563:42: 563:73
        _208 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _209) -> [return: bb117, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:563:42: 563:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:563:42: 563:73
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb117: {
        _207 = _208;                     // scope 10 at cita-chain/src/forward.rs:563:42: 563:73
        _206 = core::libchain::chain::Chain::get_current_height(move _207) -> [return: bb118, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:563:42: 563:73
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:563:53: 563:71
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain) -> u64 {core::libchain::chain::Chain::get_current_height}, val: Value(<ZST>) }
    }

    bb118: {
        _204 = Gt(move _205, move _206); // scope 10 at cita-chain/src/forward.rs:563:27: 563:73
        switchInt(move _204) -> [0: bb151, otherwise: bb119]; // scope 10 at cita-chain/src/forward.rs:563:27: 563:73
    }

    bb119: {
        _217 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 17 at cita-chain/src/forward.rs:565:25: 565:35
        _216 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _217) -> [return: bb120, unwind: bb159]; // scope 17 at cita-chain/src/forward.rs:565:25: 565:45
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:565:25: 565:45
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb120: {
        _215 = &((*_216).4: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, std::collections::BTreeMap<u64, core::libchain::chain::BlockInQueue>>); // scope 17 at cita-chain/src/forward.rs:565:25: 565:53
        _214 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write(move _215) -> [return: bb121, unwind: bb159]; // scope 17 at cita-chain/src/forward.rs:565:25: 565:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:565:46: 565:51
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> lock_api::rwlock::RwLockWriteGuard<'a, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>::write}, val: Value(<ZST>) }
    }

    bb121: {
        _213 = &mut _214;                // scope 17 at cita-chain/src/forward.rs:565:25: 565:76
        _212 = <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut(move _213) -> [return: bb122, unwind: bb155]; // scope 17 at cita-chain/src/forward.rs:565:25: 565:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:565:25: 565:76
                                         // + literal: Const { ty: for<'a> fn(&'a mut lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>>) -> &'a mut <lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as Deref>::Target {<lock_api::rwlock::RwLockWriteGuard<'_, parking_lot::raw_rwlock::RawRwLock, BTreeMap<u64, BlockInQueue>> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb122: {
        _211 = _212;                     // scope 17 at cita-chain/src/forward.rs:565:25: 565:76
        _218 = &_54;                     // scope 17 at cita-chain/src/forward.rs:565:62: 565:75
        _210 = BTreeMap::<u64, BlockInQueue>::get_mut::<u64>(move _211, _218) -> [return: bb123, unwind: bb155]; // scope 17 at cita-chain/src/forward.rs:565:25: 565:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:565:54: 565:61
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<u64, BlockInQueue>, &'b u64) -> Option<&'a mut BlockInQueue> {BTreeMap::<u64, BlockInQueue>::get_mut::<u64>}, val: Value(<ZST>) }
    }

    bb123: {
        _219 = discriminant(_210);       // scope 17 at cita-chain/src/forward.rs:564:28: 564:48
        switchInt(move _219) -> [1: bb124, otherwise: bb142]; // scope 17 at cita-chain/src/forward.rs:564:28: 564:48
    }

    bb124: {
        _220 = move ((_210 as Some).0: &mut core::libchain::chain::BlockInQueue); // scope 17 at cita-chain/src/forward.rs:564:33: 564:47
        _221 = discriminant((*_220));    // scope 18 at cita-chain/src/forward.rs:567:32: 567:70
        switchInt(move _221) -> [2: bb125, otherwise: bb142]; // scope 18 at cita-chain/src/forward.rs:567:32: 567:70
    }

    bb125: {
        _222 = &mut (((*_220) as SyncBlock).0: (types::block::OpenBlock, std::option::Option<libproto::Proof>)); // scope 18 at cita-chain/src/forward.rs:567:56: 567:69
        _224 = &((*_222).1: std::option::Option<libproto::Proof>); // scope 18 at cita-chain/src/forward.rs:568:32: 568:49
        _223 = Option::<libproto::Proof>::is_none(move _224) -> [return: bb126, unwind: bb155]; // scope 18 at cita-chain/src/forward.rs:568:32: 568:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:568:40: 568:47
                                         // + literal: Const { ty: for<'a> fn(&'a Option<libproto::Proof>) -> bool {Option::<libproto::Proof>::is_none}, val: Value(<ZST>) }
    }

    bb126: {
        switchInt(move _223) -> [0: bb142, otherwise: bb127]; // scope 18 at cita-chain/src/forward.rs:568:32: 568:49
    }

    bb127: {
        _225 = log::Level::Debug;        // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _228 = &_225;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _273 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::add_sync_block, [], Some(promoted[2])) }
        _227 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _228, _273) -> [return: bb131, unwind: bb155]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb128: {
        _226 = const false;              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb129: {
        _230 = &_225;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _232 = log::max_level() -> [return: bb132, unwind: bb155]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb130: {
        switchInt(move _226) -> [0: bb137, otherwise: bb134]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb131: {
        switchInt(move _227) -> [0: bb128, otherwise: bb129]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb132: {
        _231 = &_232;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _229 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _230, move _231) -> [return: bb133, unwind: bb155]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb133: {
        _226 = move _229;                // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb134: {
        _272 = const _;                  // scope 19 at cita-chain/src/forward.rs:569:40: 569:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:569:40: 569:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::add_sync_block, [], Some(promoted[1])) }
        _235 = _272 as &[&str] (Pointer(Unsize)); // scope 19 at cita-chain/src/forward.rs:569:40: 569:76
        _240 = &_54;                     // scope 19 at cita-chain/src/forward.rs:569:78: 569:90
        _239 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_240) -> [return: bb135, unwind: bb155]; // scope 19 at cita-chain/src/forward.rs:569:78: 569:90
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:569:78: 569:90
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb135: {
        _238 = [move _239];              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _237 = &_238;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _236 = _237 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _234 = Arguments::<'_>::new_v1(move _235, move _236) -> [return: bb136, unwind: bb155]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb136: {
        _271 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::add_sync_block, [], Some(promoted[0])) }
        _233 = log::__private_api_log(move _234, _225, _271) -> [return: bb171, unwind: bb155]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb137: {
        _242 = &mut ((*_222).1: std::option::Option<libproto::Proof>); // scope 18 at cita-chain/src/forward.rs:570:43: 570:55
        _250 = &_2;                      // scope 18 at cita-chain/src/forward.rs:570:67: 570:80
        _249 = <OpenBlock as Deref>::deref(move _250) -> [return: bb138, unwind: bb155]; // scope 18 at cita-chain/src/forward.rs:570:67: 570:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:570:67: 570:80
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb138: {
        _248 = _249;                     // scope 18 at cita-chain/src/forward.rs:570:67: 570:80
        _247 = OpenHeader::proof(move _248) -> [return: bb139, unwind: bb155]; // scope 18 at cita-chain/src/forward.rs:570:67: 570:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:570:73: 570:78
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a libproto::Proof {OpenHeader::proof}, val: Value(<ZST>) }
    }

    bb139: {
        _246 = _247;                     // scope 18 at cita-chain/src/forward.rs:570:67: 570:88
        _245 = <libproto::Proof as Clone>::clone(move _246) -> [return: bb140, unwind: bb155]; // scope 18 at cita-chain/src/forward.rs:570:67: 570:88
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:570:81: 570:86
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Proof) -> libproto::Proof {<libproto::Proof as Clone>::clone}, val: Value(<ZST>) }
    }

    bb140: {
        _244 = Option::<libproto::Proof>::Some(move _245); // scope 18 at cita-chain/src/forward.rs:570:62: 570:89
        _243 = &mut _244;                // scope 18 at cita-chain/src/forward.rs:570:57: 570:89
        _241 = std::mem::swap::<Option<libproto::Proof>>(_242, _243) -> [return: bb141, unwind: bb154]; // scope 18 at cita-chain/src/forward.rs:570:33: 570:90
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:570:33: 570:42
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Option<libproto::Proof>, &'b mut Option<libproto::Proof>) {std::mem::swap::<Option<libproto::Proof>>}, val: Value(<ZST>) }
    }

    bb141: {
        drop(_244) -> [return: bb142, unwind: bb155]; // scope 18 at cita-chain/src/forward.rs:570:90: 570:91
    }

    bb142: {
        drop(_214) -> [return: bb143, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:573:21: 573:22
    }

    bb143: {
        _254 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:574:21: 575:76
        _253 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _254) -> [return: bb144, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:574:21: 575:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:574:21: 575:76
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb144: {
        _252 = _253;                     // scope 10 at cita-chain/src/forward.rs:574:21: 575:76
        _255 = _54;                      // scope 10 at cita-chain/src/forward.rs:575:48: 575:60
        _260 = &_2;                      // scope 10 at cita-chain/src/forward.rs:575:62: 575:75
        _259 = <OpenBlock as Deref>::deref(move _260) -> [return: bb145, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:575:62: 575:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:575:62: 575:75
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb145: {
        _258 = _259;                     // scope 10 at cita-chain/src/forward.rs:575:62: 575:75
        _257 = OpenHeader::proof(move _258) -> [return: bb146, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:575:62: 575:75
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:575:68: 575:73
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a libproto::Proof {OpenHeader::proof}, val: Value(<ZST>) }
    }

    bb146: {
        _256 = _257;                     // scope 10 at cita-chain/src/forward.rs:575:62: 575:75
        _251 = core::libchain::chain::Chain::set_proof_with_height(move _252, move _255, move _256) -> [return: bb147, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:574:21: 575:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:575:26: 575:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, u64, &'b libproto::Proof) {core::libchain::chain::Chain::set_proof_with_height}, val: Value(<ZST>) }
    }

    bb147: {
        _264 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 10 at cita-chain/src/forward.rs:576:21: 576:70
        _263 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _264) -> [return: bb148, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:576:21: 576:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:576:21: 576:70
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb148: {
        _262 = _263;                     // scope 10 at cita-chain/src/forward.rs:576:21: 576:70
        _269 = &_2;                      // scope 10 at cita-chain/src/forward.rs:576:56: 576:69
        _268 = <OpenBlock as Deref>::deref(move _269) -> [return: bb149, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:576:56: 576:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:576:56: 576:69
                                         // + literal: Const { ty: for<'a> fn(&'a OpenBlock) -> &'a <OpenBlock as Deref>::Target {<OpenBlock as Deref>::deref}, val: Value(<ZST>) }
    }

    bb149: {
        _267 = _268;                     // scope 10 at cita-chain/src/forward.rs:576:56: 576:69
        _266 = OpenHeader::proof(move _267) -> [return: bb150, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:576:56: 576:69
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:576:62: 576:67
                                         // + literal: Const { ty: for<'a> fn(&'a OpenHeader) -> &'a libproto::Proof {OpenHeader::proof}, val: Value(<ZST>) }
    }

    bb150: {
        _265 = _266;                     // scope 10 at cita-chain/src/forward.rs:576:56: 576:69
        _261 = core::libchain::chain::Chain::save_current_block_poof(move _262, move _265) -> [return: bb172, unwind: bb159]; // scope 10 at cita-chain/src/forward.rs:576:21: 576:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:576:32: 576:55
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a core::libchain::chain::Chain, &'b libproto::Proof) {core::libchain::chain::Chain::save_current_block_poof}, val: Value(<ZST>) }
    }

    bb151: {
        drop(_47) -> [return: bb152, unwind: bb165]; // scope 5 at cita-chain/src/forward.rs:578:13: 578:14
    }

    bb152: {
        switchInt(_289) -> [0: bb153, otherwise: bb161]; // scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    }

    bb153: {
        return;                          // scope 0 at cita-chain/src/forward.rs:584:6: 584:6
    }

    bb154 (cleanup): {
        drop(_244) -> bb155;             // scope 18 at cita-chain/src/forward.rs:570:90: 570:91
    }

    bb155 (cleanup): {
        drop(_214) -> bb159;             // scope 10 at cita-chain/src/forward.rs:573:21: 573:22
    }

    bb156 (cleanup): {
        drop(_173) -> bb163;             // scope 14 at cita-chain/src/forward.rs:555:91: 555:92
    }

    bb157 (cleanup): {
        drop(_128) -> bb158;             // scope 12 at cita-chain/src/forward.rs:537:94: 537:95
    }

    bb158 (cleanup): {
        drop(_94) -> bb159;              // scope 10 at cita-chain/src/forward.rs:540:25: 540:26
    }

    bb159 (cleanup): {
        drop(_47) -> bb165;              // scope 5 at cita-chain/src/forward.rs:578:13: 578:14
    }

    bb160 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:499:5: 584:6
    }

    bb161: {
        drop(_2) -> bb153;               // scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    }

    bb162 (cleanup): {
        drop(_146) -> bb159;             // scope 10 at cita-chain/src/forward.rs:556:21: 556:22
    }

    bb163 (cleanup): {
        switchInt(_290) -> [0: bb159, otherwise: bb162]; // scope 10 at cita-chain/src/forward.rs:556:21: 556:22
    }

    bb164 (cleanup): {
        drop(_2) -> bb160;               // scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    }

    bb165 (cleanup): {
        switchInt(_289) -> [0: bb160, otherwise: bb164]; // scope 0 at cita-chain/src/forward.rs:584:5: 584:6
    }

    bb166: {
        goto -> bb23;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb167: {
        goto -> bb46;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb168: {
        goto -> bb73;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb169: {
        goto -> bb96;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb170: {
        goto -> bb151;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb171: {
        goto -> bb137;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb172: {
        goto -> bb151;                   // scope 10 at cita-chain/src/forward.rs:576:21: 576:70
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:569:33: 569:91
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:569:33: 569:91

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:569:33: 569:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:569:33: 569:91
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:569:33: 569:91
        _1 = (move _2, move _4, move _6, const 569_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:569:40: 569:76
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:569:40: 569:76

    bb0: {
        _1 = [const "sync: insert block proof ", const " in map"]; // scope 0 at cita-chain/src/forward.rs:569:40: 569:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:569:40: 569:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:569:40: 569:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:569:40: 569:76
        return;                          // scope 0 at cita-chain/src/forward.rs:569:40: 569:76
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:557:25: 561:26
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:557:25: 561:26

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:557:25: 561:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:557:25: 561:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:557:25: 561:26
        _1 = (move _2, move _4, move _6, const 557_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:558:29: 558:86
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:558:29: 558:86

    bb0: {
        _1 = [const "sync: insert block-", const " is not continious proof height "]; // scope 0 at cita-chain/src/forward.rs:558:29: 558:86
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:558:29: 558:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:558:29: 558:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:558:29: 558:86
        return;                          // scope 0 at cita-chain/src/forward.rs:558:29: 558:86
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:548:25: 551:26
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:548:25: 551:26

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:548:25: 551:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:548:25: 551:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:548:25: 551:26
        _1 = (move _2, move _4, move _6, const 548_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-chain/src/forward.rs:549:29: 549:70
    let mut _1: [&str; 3];               // in scope 0 at cita-chain/src/forward.rs:549:29: 549:70

    bb0: {
        _1 = [const "sync: insert block-", const " proof ", const " in map"]; // scope 0 at cita-chain/src/forward.rs:549:29: 549:70
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:549:29: 549:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:549:29: 549:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:549:29: 549:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:549:29: 549:70
        return;                          // scope 0 at cita-chain/src/forward.rs:549:29: 549:70
    }
}

promoted[8] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:536:37: 536:99
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:536:37: 536:99

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:536:37: 536:99
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:37: 536:99
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:536:37: 536:99
        _1 = (move _2, move _4, move _6, const 536_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:536:44: 536:80
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:536:44: 536:80

    bb0: {
        _1 = [const "sync: set prev sync block proof "]; // scope 0 at cita-chain/src/forward.rs:536:44: 536:80
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:536:44: 536:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:536:44: 536:80
        return;                          // scope 0 at cita-chain/src/forward.rs:536:44: 536:80
    }
}

promoted[11] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:522:17: 525:18
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:522:17: 525:18

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:522:17: 525:18
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:522:17: 525:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:522:17: 525:18
        _1 = (move _2, move _4, move _6, const 522_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-chain/src/forward.rs:523:21: 523:97
    let mut _1: [&str; 3];               // in scope 0 at cita-chain/src/forward.rs:523:21: 523:97

    bb0: {
        _1 = [const "sync: add_sync_block: proof_height = ", const ", block height = ", const " max_height = "]; // scope 0 at cita-chain/src/forward.rs:523:21: 523:97
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:523:21: 523:97
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:523:21: 523:97
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:523:21: 523:97
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:523:21: 523:97
        return;                          // scope 0 at cita-chain/src/forward.rs:523:21: 523:97
    }
}

promoted[14] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[15] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:507:13: 510:14
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:507:13: 510:14

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:507:13: 510:14
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:507:13: 510:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:507:13: 510:14
        _1 = (move _2, move _4, move _6, const 507_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[16] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:508:17: 508:82
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:508:17: 508:82

    bb0: {
        _1 = [const "sync: block_proof_type ", const " mismatch with chain_proof_type "]; // scope 0 at cita-chain/src/forward.rs:508:17: 508:82
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:508:17: 508:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:508:17: 508:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:508:17: 508:82
        return;                          // scope 0 at cita-chain/src/forward.rs:508:17: 508:82
    }
}

promoted[17] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::add_sync_block: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req(_1: &Forward, _2: &libproto::BlockTxHashesReq) -> () {
    debug self => _1;                    // in scope 0 at cita-chain/src/forward.rs:586:26: 586:31
    debug block_tx_hashes_req => _2;     // in scope 0 at cita-chain/src/forward.rs:586:33: 586:52
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/forward.rs:586:73: 586:73
    let _3: u64;                         // in scope 0 at cita-chain/src/forward.rs:587:13: 587:25
    let mut _4: std::option::Option<std::vec::Vec<cita_types::H256>>; // in scope 0 at cita-chain/src/forward.rs:589:34: 591:64
    let mut _5: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:589:34: 591:64
    let _6: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:589:34: 591:64
    let mut _7: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:589:34: 591:64
    let mut _8: types::block_number::BlockTag; // in scope 0 at cita-chain/src/forward.rs:591:33: 591:63
    let mut _9: u64;                     // in scope 0 at cita-chain/src/forward.rs:591:50: 591:62
    let mut _10: isize;                  // in scope 0 at cita-chain/src/forward.rs:589:16: 589:31
    let _13: ();                         // in scope 0 at cita-chain/src/forward.rs:595:13: 595:53
    let mut _14: &mut libproto::BlockTxHashes; // in scope 0 at cita-chain/src/forward.rs:595:13: 595:53
    let mut _15: u64;                    // in scope 0 at cita-chain/src/forward.rs:595:40: 595:52
    let mut _17: std::slice::Iter<'_, cita_types::H256>; // in scope 0 at cita-chain/src/forward.rs:597:36: 597:46
    let mut _18: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-chain/src/forward.rs:597:36: 597:46
    let mut _20: std::option::Option<&cita_types::H256>; // in scope 0 at cita-chain/src/forward.rs:597:36: 597:46
    let mut _21: &mut std::slice::Iter<'_, cita_types::H256>; // in scope 0 at cita-chain/src/forward.rs:597:36: 597:46
    let mut _22: isize;                  // in scope 0 at cita-chain/src/forward.rs:597:13: 599:14
    let _24: ();                         // in scope 0 at cita-chain/src/forward.rs:598:17: 598:63
    let mut _25: &mut std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-chain/src/forward.rs:598:17: 598:63
    let mut _26: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:598:38: 598:62
    let mut _27: &[u8];                  // in scope 0 at cita-chain/src/forward.rs:598:38: 598:62
    let _28: &[u8];                      // in scope 0 at cita-chain/src/forward.rs:598:38: 598:62
    let _29: ();                         // in scope 0 at cita-chain/src/forward.rs:600:13: 600:66
    let mut _30: &mut libproto::BlockTxHashes; // in scope 0 at cita-chain/src/forward.rs:600:13: 600:66
    let mut _31: protobuf::repeated::RepeatedField<std::vec::Vec<u8>>; // in scope 0 at cita-chain/src/forward.rs:600:43: 600:65
    let mut _32: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-chain/src/forward.rs:600:43: 600:58
    let _33: ();                         // in scope 0 at cita-chain/src/forward.rs:601:13: 602:99
    let mut _34: &mut libproto::BlockTxHashes; // in scope 0 at cita-chain/src/forward.rs:601:13: 602:99
    let mut _35: u64;                    // in scope 0 at cita-chain/src/forward.rs:602:40: 602:98
    let mut _36: usize;                  // in scope 0 at cita-chain/src/forward.rs:602:40: 602:91
    let mut _37: &std::sync::atomic::AtomicUsize; // in scope 0 at cita-chain/src/forward.rs:602:40: 602:91
    let _38: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:602:40: 602:68
    let mut _39: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:602:40: 602:50
    let mut _40: std::sync::atomic::Ordering; // in scope 0 at cita-chain/src/forward.rs:602:74: 602:90
    let _41: ();                         // in scope 0 at cita-chain/src/forward.rs:603:13: 603:99
    let mut _42: &mut libproto::BlockTxHashes; // in scope 0 at cita-chain/src/forward.rs:603:13: 603:99
    let mut _43: libproto::AccountGasLimit; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:98
    let mut _44: &libproto::AccountGasLimit; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:98
    let _45: &libproto::AccountGasLimit; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:98
    let mut _46: &lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, libproto::AccountGasLimit>; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:98
    let _47: lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, libproto::AccountGasLimit>; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:90
    let mut _48: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, libproto::AccountGasLimit>; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:90
    let _49: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:83
    let mut _50: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/forward.rs:603:53: 603:63
    let mut _52: libproto::BlockTxHashes; // in scope 0 at cita-chain/src/forward.rs:604:32: 604:47
    let _53: ();                         // in scope 0 at cita-chain/src/forward.rs:605:13: 610:26
    let mut _54: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-chain/src/forward.rs:605:13: 609:19
    let mut _55: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/forward.rs:605:13: 609:19
    let mut _56: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-chain/src/forward.rs:606:23: 609:18
    let mut _57: std::string::String;    // in scope 0 at cita-chain/src/forward.rs:607:21: 607:64
    let mut _58: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _59: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _60: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _61: std::vec::Vec<u8>;      // in scope 0 at cita-chain/src/forward.rs:608:21: 608:44
    let mut _62: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-chain/src/forward.rs:608:21: 608:35
    let mut _63: libproto::Message;      // in scope 0 at cita-chain/src/forward.rs:608:21: 608:24
    let mut _65: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _66: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _67: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _68: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _69: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _70: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _71: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _72: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _73: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _74: &[&str];                // in scope 0 at cita-chain/src/forward.rs:612:20: 612:62
    let mut _75: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _76: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _77: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _78: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:612:64: 612:76
    let _79: &u64;                       // in scope 0 at cita-chain/src/forward.rs:612:64: 612:76
    let mut _81: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _82: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _83: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _84: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _85: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _86: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _87: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _88: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _89: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _90: &[&str];                // in scope 0 at cita-chain/src/forward.rs:614:19: 614:62
    let mut _91: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _92: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _93: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _94: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/forward.rs:614:64: 614:76
    let _95: &u64;                       // in scope 0 at cita-chain/src/forward.rs:614:64: 614:76
    let mut _102: bool;                  // in scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    let mut _103: bool;                  // in scope 0 at cita-chain/src/forward.rs:613:9: 613:10
    let mut _104: bool;                  // in scope 0 at cita-chain/src/forward.rs:613:9: 613:10
    let mut _105: bool;                  // in scope 0 at cita-chain/src/forward.rs:613:9: 613:10
    let mut _106: isize;                 // in scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    let mut _107: isize;                 // in scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    scope 1 {
        debug block_height => _3;        // in scope 1 at cita-chain/src/forward.rs:587:13: 587:25
        let _80: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug tx_hashes => _11;      // in scope 2 at cita-chain/src/forward.rs:589:21: 589:30
            let _11: std::vec::Vec<cita_types::H256>; // in scope 2 at cita-chain/src/forward.rs:589:21: 589:30
            let mut _12: libproto::BlockTxHashes; // in scope 2 at cita-chain/src/forward.rs:594:17: 594:36
            scope 3 {
                debug block_tx_hashes => _12; // in scope 3 at cita-chain/src/forward.rs:594:17: 594:36
                let mut _16: std::vec::Vec<std::vec::Vec<u8>>; // in scope 3 at cita-chain/src/forward.rs:596:17: 596:36
                scope 4 {
                    debug tx_hashes_in_u8 => _16; // in scope 4 at cita-chain/src/forward.rs:596:17: 596:36
                    let mut _19: std::slice::Iter<'_, cita_types::H256>; // in scope 4 at cita-chain/src/forward.rs:597:36: 597:46
                    let _51: libproto::Message; // in scope 4 at cita-chain/src/forward.rs:604:17: 604:20
                    scope 5 {
                        debug iter => _19; // in scope 5 at cita-chain/src/forward.rs:597:36: 597:46
                        let _23: &cita_types::H256; // in scope 5 at cita-chain/src/forward.rs:597:17: 597:32
                        scope 6 {
                            debug tx_hash_in_h256 => _23; // in scope 6 at cita-chain/src/forward.rs:597:17: 597:32
                        }
                    }
                    scope 7 {
                        debug msg => _51; // in scope 7 at cita-chain/src/forward.rs:604:17: 604:20
                        let _64: log::Level; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        scope 8 {
                            debug lvl => _64; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _96: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _97: &[&str; 1]; // in scope 8 at cita-chain/src/forward.rs:612:20: 612:62
                            let mut _98: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                    }
                }
            }
        }
        scope 9 {
            debug lvl => _80;            // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _99: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _100: &[&str; 2];    // in scope 9 at cita-chain/src/forward.rs:614:19: 614:62
            let mut _101: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _105 = const false;              // scope 0 at cita-chain/src/forward.rs:587:13: 587:25
        _102 = const false;              // scope 0 at cita-chain/src/forward.rs:587:13: 587:25
        _103 = const false;              // scope 0 at cita-chain/src/forward.rs:587:13: 587:25
        _104 = const false;              // scope 0 at cita-chain/src/forward.rs:587:13: 587:25
        _3 = libproto::BlockTxHashesReq::get_height(_2) -> bb1; // scope 0 at cita-chain/src/forward.rs:587:28: 587:60
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:587:48: 587:58
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashesReq) -> u64 {libproto::BlockTxHashesReq::get_height}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 2 at cita-chain/src/forward.rs:589:34: 591:64
        _6 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _7) -> bb2; // scope 2 at cita-chain/src/forward.rs:589:34: 591:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:589:34: 591:64
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = _6;                         // scope 2 at cita-chain/src/forward.rs:589:34: 591:64
        _9 = _3;                         // scope 2 at cita-chain/src/forward.rs:591:50: 591:62
        _8 = types::block_number::BlockTag::Height(move _9); // scope 2 at cita-chain/src/forward.rs:591:33: 591:63
        _102 = const true;               // scope 2 at cita-chain/src/forward.rs:589:34: 591:64
        _4 = core::libchain::chain::Chain::transaction_hashes(move _5, move _8) -> bb3; // scope 2 at cita-chain/src/forward.rs:589:34: 591:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:591:14: 591:32
                                         // + literal: Const { ty: for<'a> fn(&'a core::libchain::chain::Chain, types::block_number::BlockTag) -> Option<Vec<H256>> {core::libchain::chain::Chain::transaction_hashes}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = discriminant(_4);          // scope 2 at cita-chain/src/forward.rs:589:16: 589:31
        switchInt(move _10) -> [1: bb4, otherwise: bb43]; // scope 2 at cita-chain/src/forward.rs:589:16: 589:31
    }

    bb4: {
        _102 = const false;              // scope 2 at cita-chain/src/forward.rs:589:21: 589:30
        _11 = move ((_4 as Some).0: std::vec::Vec<cita_types::H256>); // scope 2 at cita-chain/src/forward.rs:589:21: 589:30
        _12 = libproto::BlockTxHashes::new() -> [return: bb5, unwind: bb56]; // scope 2 at cita-chain/src/forward.rs:594:39: 594:59
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:594:39: 594:57
                                         // + literal: Const { ty: fn() -> libproto::BlockTxHashes {libproto::BlockTxHashes::new}, val: Value(<ZST>) }
    }

    bb5: {
        _105 = const true;               // scope 3 at cita-chain/src/forward.rs:595:13: 595:53
        _14 = &mut _12;                  // scope 3 at cita-chain/src/forward.rs:595:13: 595:53
        _15 = _3;                        // scope 3 at cita-chain/src/forward.rs:595:40: 595:52
        _13 = libproto::BlockTxHashes::set_height(move _14, move _15) -> [return: bb6, unwind: bb66]; // scope 3 at cita-chain/src/forward.rs:595:13: 595:53
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:595:29: 595:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxHashes, u64) {libproto::BlockTxHashes::set_height}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = Vec::<Vec<u8>>::new() -> [return: bb7, unwind: bb66]; // scope 3 at cita-chain/src/forward.rs:596:39: 596:49
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:596:39: 596:47
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<Vec<u8>> {Vec::<Vec<u8>>::new}, val: Value(<ZST>) }
    }

    bb7: {
        _104 = const true;               // scope 4 at cita-chain/src/forward.rs:597:13: 599:14
        _18 = &_11;                      // scope 4 at cita-chain/src/forward.rs:597:36: 597:46
        _17 = <&Vec<H256> as IntoIterator>::into_iter(move _18) -> [return: bb8, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:597:36: 597:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:597:36: 597:46
                                         // + literal: Const { ty: fn(&Vec<H256>) -> <&Vec<H256> as IntoIterator>::IntoIter {<&Vec<H256> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = move _17;                  // scope 4 at cita-chain/src/forward.rs:597:36: 597:46
        goto -> bb9;                     // scope 5 at cita-chain/src/forward.rs:597:13: 599:14
    }

    bb9: {
        _21 = &mut _19;                  // scope 5 at cita-chain/src/forward.rs:597:36: 597:46
        _20 = <std::slice::Iter<'_, H256> as Iterator>::next(_21) -> [return: bb10, unwind: bb64]; // scope 5 at cita-chain/src/forward.rs:597:36: 597:46
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:597:36: 597:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, H256>) -> Option<<std::slice::Iter<'_, H256> as Iterator>::Item> {<std::slice::Iter<'_, H256> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = discriminant(_20);         // scope 5 at cita-chain/src/forward.rs:597:36: 597:46
        switchInt(move _22) -> [0: bb13, 1: bb11, otherwise: bb12]; // scope 5 at cita-chain/src/forward.rs:597:36: 597:46
    }

    bb11: {
        _23 = ((_20 as Some).0: &cita_types::H256); // scope 5 at cita-chain/src/forward.rs:597:17: 597:32
        _25 = &mut _16;                  // scope 6 at cita-chain/src/forward.rs:598:17: 598:63
        _28 = <H256 as Deref>::deref(_23) -> [return: bb14, unwind: bb64]; // scope 6 at cita-chain/src/forward.rs:598:38: 598:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:598:38: 598:62
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb12: {
        unreachable;                     // scope 5 at cita-chain/src/forward.rs:597:36: 597:46
    }

    bb13: {
        _30 = &mut _12;                  // scope 4 at cita-chain/src/forward.rs:600:13: 600:66
        _104 = const false;              // scope 4 at cita-chain/src/forward.rs:600:43: 600:58
        _32 = move _16;                  // scope 4 at cita-chain/src/forward.rs:600:43: 600:58
        _31 = <Vec<Vec<u8>> as Into<protobuf::repeated::RepeatedField<Vec<u8>>>>::into(move _32) -> [return: bb16, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:600:43: 600:65
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:600:59: 600:63
                                         // + literal: Const { ty: fn(Vec<Vec<u8>>) -> protobuf::repeated::RepeatedField<Vec<u8>> {<Vec<Vec<u8>> as Into<protobuf::repeated::RepeatedField<Vec<u8>>>>::into}, val: Value(<ZST>) }
    }

    bb14: {
        _27 = _28;                       // scope 6 at cita-chain/src/forward.rs:598:38: 598:62
        _26 = slice::<impl [u8]>::to_vec(move _27) -> [return: bb15, unwind: bb64]; // scope 6 at cita-chain/src/forward.rs:598:38: 598:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:598:54: 598:60
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb15: {
        _24 = Vec::<Vec<u8>>::push(move _25, move _26) -> [return: bb70, unwind: bb64]; // scope 6 at cita-chain/src/forward.rs:598:17: 598:63
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:598:33: 598:37
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<Vec<u8>>, Vec<u8>) {Vec::<Vec<u8>>::push}, val: Value(<ZST>) }
    }

    bb16: {
        _29 = libproto::BlockTxHashes::set_tx_hashes(move _30, move _31) -> [return: bb17, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:600:13: 600:66
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:600:29: 600:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxHashes, protobuf::repeated::RepeatedField<Vec<u8>>) {libproto::BlockTxHashes::set_tx_hashes}, val: Value(<ZST>) }
    }

    bb17: {
        _34 = &mut _12;                  // scope 4 at cita-chain/src/forward.rs:601:13: 602:99
        _39 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:602:40: 602:50
        _38 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _39) -> [return: bb18, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:602:40: 602:68
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:602:40: 602:68
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb18: {
        _37 = &((*_38).10: std::sync::atomic::AtomicUsize); // scope 4 at cita-chain/src/forward.rs:602:40: 602:91
        _40 = const SeqCst;              // scope 4 at cita-chain/src/forward.rs:602:74: 602:90
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _36 = AtomicUsize::load(move _37, move _40) -> [return: bb19, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:602:40: 602:91
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:602:69: 602:73
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicUsize, std::sync::atomic::Ordering) -> usize {AtomicUsize::load}, val: Value(<ZST>) }
    }

    bb19: {
        _35 = move _36 as u64 (IntToInt); // scope 4 at cita-chain/src/forward.rs:602:40: 602:98
        _33 = libproto::BlockTxHashes::set_block_quota_limit(move _34, move _35) -> [return: bb20, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:601:13: 602:99
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:602:18: 602:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxHashes, u64) {libproto::BlockTxHashes::set_block_quota_limit}, val: Value(<ZST>) }
    }

    bb20: {
        _42 = &mut _12;                  // scope 4 at cita-chain/src/forward.rs:603:13: 603:99
        _50 = &((*_1).1: std::sync::Arc<core::libchain::chain::Chain>); // scope 4 at cita-chain/src/forward.rs:603:53: 603:63
        _49 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _50) -> [return: bb21, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:603:53: 603:83
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:603:53: 603:83
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb21: {
        _48 = &((*_49).11: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, libproto::AccountGasLimit>); // scope 4 at cita-chain/src/forward.rs:603:53: 603:90
        _47 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, AccountGasLimit>::read(move _48) -> [return: bb22, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:603:53: 603:90
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:603:84: 603:88
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, AccountGasLimit>) -> lock_api::rwlock::RwLockReadGuard<'a, parking_lot::raw_rwlock::RawRwLock, AccountGasLimit> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, AccountGasLimit>::read}, val: Value(<ZST>) }
    }

    bb22: {
        _46 = &_47;                      // scope 4 at cita-chain/src/forward.rs:603:53: 603:98
        _45 = <lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, AccountGasLimit> as Deref>::deref(move _46) -> [return: bb23, unwind: bb55]; // scope 4 at cita-chain/src/forward.rs:603:53: 603:98
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:603:53: 603:98
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, AccountGasLimit>) -> &'a <lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, AccountGasLimit> as Deref>::Target {<lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, AccountGasLimit> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb23: {
        _44 = _45;                       // scope 4 at cita-chain/src/forward.rs:603:53: 603:98
        _43 = <AccountGasLimit as Clone>::clone(move _44) -> [return: bb24, unwind: bb55]; // scope 4 at cita-chain/src/forward.rs:603:53: 603:98
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:603:91: 603:96
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> AccountGasLimit {<AccountGasLimit as Clone>::clone}, val: Value(<ZST>) }
    }

    bb24: {
        _41 = libproto::BlockTxHashes::set_account_quota_limit(move _42, move _43) -> [return: bb25, unwind: bb55]; // scope 4 at cita-chain/src/forward.rs:603:13: 603:99
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:603:29: 603:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxHashes, AccountGasLimit) {libproto::BlockTxHashes::set_account_quota_limit}, val: Value(<ZST>) }
    }

    bb25: {
        drop(_47) -> [return: bb26, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:603:99: 603:100
    }

    bb26: {
        _105 = const false;              // scope 4 at cita-chain/src/forward.rs:604:32: 604:47
        _52 = move _12;                  // scope 4 at cita-chain/src/forward.rs:604:32: 604:47
        _51 = <libproto::BlockTxHashes as Into<libproto::Message>>::into(move _52) -> [return: bb27, unwind: bb64]; // scope 4 at cita-chain/src/forward.rs:604:32: 604:54
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:604:48: 604:52
                                         // + literal: Const { ty: fn(libproto::BlockTxHashes) -> libproto::Message {<libproto::BlockTxHashes as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb27: {
        _103 = const true;               // scope 4 at cita-chain/src/forward.rs:604:53: 604:54
        _55 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 7 at cita-chain/src/forward.rs:605:13: 609:19
        _59 = const libproto::router::SubModules::Chain; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _60 = const libproto::router::MsgType::BlockTxHashes; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0c)) }
        _58 = RoutingKey(move _59, move _60); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _57 = <RoutingKey as Into<std::string::String>>::into(move _58) -> [return: bb28, unwind: bb62]; // scope 7 at cita-chain/src/forward.rs:607:21: 607:64
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:607:58: 607:62
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb28: {
        _103 = const false;              // scope 7 at cita-chain/src/forward.rs:608:21: 608:24
        _63 = move _51;                  // scope 7 at cita-chain/src/forward.rs:608:21: 608:24
        _62 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _63) -> [return: bb29, unwind: bb54]; // scope 7 at cita-chain/src/forward.rs:608:21: 608:35
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:608:25: 608:33
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb29: {
        _61 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _62) -> [return: bb30, unwind: bb54]; // scope 7 at cita-chain/src/forward.rs:608:21: 608:44
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:608:36: 608:42
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb30: {
        _56 = (move _57, move _61);      // scope 7 at cita-chain/src/forward.rs:606:23: 609:18
        _54 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _55, move _56) -> [return: bb31, unwind: bb62]; // scope 7 at cita-chain/src/forward.rs:605:13: 609:19
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:606:18: 606:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb31: {
        _53 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _54) -> [return: bb32, unwind: bb62]; // scope 7 at cita-chain/src/forward.rs:605:13: 610:26
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:610:18: 610:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb32: {
        _64 = log::Level::Trace;         // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _67 = &_64;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _98 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[2])) }
        _66 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _67, _98) -> [return: bb36, unwind: bb62]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _65 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _69 = &_64;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _71 = log::max_level() -> [return: bb37, unwind: bb62]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _65) -> [0: bb42, otherwise: bb39]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        switchInt(move _66) -> [0: bb33, otherwise: bb34]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        _70 = &_71;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _68 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _69, move _70) -> [return: bb38, unwind: bb62]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb38: {
        _65 = move _68;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _97 = const _;                   // scope 8 at cita-chain/src/forward.rs:612:20: 612:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:612:20: 612:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[1])) }
        _74 = _97 as &[&str] (Pointer(Unsize)); // scope 8 at cita-chain/src/forward.rs:612:20: 612:62
        _79 = &_3;                       // scope 8 at cita-chain/src/forward.rs:612:64: 612:76
        _78 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_79) -> [return: bb40, unwind: bb62]; // scope 8 at cita-chain/src/forward.rs:612:64: 612:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:612:64: 612:76
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb40: {
        _77 = [move _78];                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _76 = &_77;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _75 = _76 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = Arguments::<'_>::new_v1(move _74, move _75) -> [return: bb41, unwind: bb62]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb41: {
        _96 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[0])) }
        _72 = log::__private_api_log(move _73, _64, _96) -> [return: bb71, unwind: bb62]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb42: {
        _103 = const false;              // scope 4 at cita-chain/src/forward.rs:613:9: 613:10
        _104 = const false;              // scope 3 at cita-chain/src/forward.rs:613:9: 613:10
        _105 = const false;              // scope 2 at cita-chain/src/forward.rs:613:9: 613:10
        drop(_11) -> [return: bb53, unwind: bb69]; // scope 1 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb43: {
        _80 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _83 = &_80;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _101 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[5])) }
        _82 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _83, _101) -> [return: bb47, unwind: bb69]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb44: {
        _81 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb46;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb45: {
        _85 = &_80;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _87 = log::max_level() -> [return: bb48, unwind: bb69]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _81) -> [0: bb53, otherwise: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        switchInt(move _82) -> [0: bb44, otherwise: bb45]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        _86 = &_87;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _84 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _85, move _86) -> [return: bb49, unwind: bb69]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb49: {
        _81 = move _84;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb46;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        _100 = const _;                  // scope 9 at cita-chain/src/forward.rs:614:19: 614:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:614:19: 614:62
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[4])) }
        _90 = _100 as &[&str] (Pointer(Unsize)); // scope 9 at cita-chain/src/forward.rs:614:19: 614:62
        _95 = &_3;                       // scope 9 at cita-chain/src/forward.rs:614:64: 614:76
        _94 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_95) -> [return: bb51, unwind: bb69]; // scope 9 at cita-chain/src/forward.rs:614:64: 614:76
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:614:64: 614:76
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb51: {
        _93 = [move _94];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _92 = &_93;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _91 = _92 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _89 = Arguments::<'_>::new_v1(move _90, move _91) -> [return: bb52, unwind: bb69]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb52: {
        _99 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Forward::deal_block_tx_req, [], Some(promoted[3])) }
        _88 = log::__private_api_log(move _89, _80, _99) -> [return: bb72, unwind: bb69]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb53: {
        _106 = discriminant(_4);         // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
        switchInt(move _106) -> [1: bb59, otherwise: bb58]; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb54 (cleanup): {
        drop(_57) -> bb62;               // scope 7 at cita-chain/src/forward.rs:609:17: 609:18
    }

    bb55 (cleanup): {
        drop(_47) -> bb64;               // scope 4 at cita-chain/src/forward.rs:603:99: 603:100
    }

    bb56 (cleanup): {
        drop(_11) -> bb69;               // scope 1 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb57 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/forward.rs:586:5: 616:6
    }

    bb58: {
        _102 = const false;              // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
        return;                          // scope 0 at cita-chain/src/forward.rs:616:6: 616:6
    }

    bb59: {
        switchInt(_102) -> [0: bb58, otherwise: bb60]; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb60: {
        drop(((_4 as Some).0: std::vec::Vec<cita_types::H256>)) -> bb58; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb61 (cleanup): {
        drop(_51) -> bb64;               // scope 4 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb62 (cleanup): {
        switchInt(_103) -> [0: bb64, otherwise: bb61]; // scope 4 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb63 (cleanup): {
        drop(_16) -> bb66;               // scope 3 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb64 (cleanup): {
        switchInt(_104) -> [0: bb66, otherwise: bb63]; // scope 3 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb65 (cleanup): {
        drop(_12) -> bb56;               // scope 2 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb66 (cleanup): {
        switchInt(_105) -> [0: bb56, otherwise: bb65]; // scope 2 at cita-chain/src/forward.rs:613:9: 613:10
    }

    bb67 (cleanup): {
        switchInt(_102) -> [0: bb57, otherwise: bb68]; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb68 (cleanup): {
        drop(((_4 as Some).0: std::vec::Vec<cita_types::H256>)) -> bb57; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb69 (cleanup): {
        _107 = discriminant(_4);         // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
        switchInt(move _107) -> [1: bb67, otherwise: bb57]; // scope 0 at cita-chain/src/forward.rs:616:5: 616:6
    }

    bb70: {
        goto -> bb9;                     // scope 6 at cita-chain/src/forward.rs:598:17: 598:63
    }

    bb71: {
        goto -> bb42;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb72: {
        goto -> bb53;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:612:13: 612:77
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:612:13: 612:77

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:612:13: 612:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:612:13: 612:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:612:13: 612:77
        _1 = (move _2, move _4, move _6, const 612_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/forward.rs:612:20: 612:62
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/forward.rs:612:20: 612:62

    bb0: {
        _1 = [const "response block's tx hashes for height:"]; // scope 0 at cita-chain/src/forward.rs:612:20: 612:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:612:20: 612:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:612:20: 612:62
        return;                          // scope 0 at cita-chain/src/forward.rs:612:20: 612:62
    }
}

promoted[2] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/forward.rs:614:13: 614:77
    let mut _7: &str;                    // in scope 0 at cita-chain/src/forward.rs:614:13: 614:77

    bb0: {
        _3 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain::forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/forward.rs"; // scope 0 at cita-chain/src/forward.rs:614:13: 614:77
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:614:13: 614:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/forward.rs:614:13: 614:77
        _1 = (move _2, move _4, move _6, const 614_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-chain/src/forward.rs:614:19: 614:62
    let mut _1: [&str; 2];               // in scope 0 at cita-chain/src/forward.rs:614:19: 614:62

    bb0: {
        _1 = [const "get block's tx hashes for height:", const " error"]; // scope 0 at cita-chain/src/forward.rs:614:19: 614:62
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:614:19: 614:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-chain/src/forward.rs:614:19: 614:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/forward.rs:614:19: 614:62
        return;                          // scope 0 at cita-chain/src/forward.rs:614:19: 614:62
    }
}

promoted[5] in forward::<impl at cita-chain/src/forward.rs:51:1: 51:13>::deal_block_tx_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn get_build_info_str(_1: bool) -> &str {
    debug short => _1;                   // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:4:35: 4:40
    let mut _0: &str;                    // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:4:51: 4:63

    bb0: {
        switchInt(_1) -> [0: bb2, otherwise: bb1]; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:15: 5:20
    }

    bb1: {
        _0 = const "20.2.0-unknown";     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:23: 5:39
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:23: 5:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:12: 5:2490
    }

    bb2: {
        _0 = const "20.2.0-unknown\n(rustc 1.70.0-nightly-2023-03-18)\n\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n"; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:49: 5:2488
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:49: 5:2488
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:5:12: 5:2490
    }

    bb3: {
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:6:10: 6:10
    }
}

fn get_build_info() -> (&str, Option<&str>, Option<&str>, Option<&str>, Option<&str>, (u64, u64, u64), Option<&str>, Option<&str>) {
    let mut _0: (&str, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, (u64, u64, u64), std::option::Option<&str>, std::option::Option<&str>); // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:10:36: 19:10
    let mut _1: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2403: 20:2407
    let mut _2: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2409: 20:2413
    let mut _3: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2415: 20:2419
    let mut _4: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2421: 20:2425
    let mut _5: (u64, u64, u64);         // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2427: 20:2437
    let mut _6: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2439: 20:2454
    let _7: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2444: 20:2453
    let mut _8: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2456: 20:2474
    let _9: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2461: 20:2473

    bb0: {
        _1 = Option::<&str>::None;       // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2403: 20:2407
        _2 = Option::<&str>::None;       // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2409: 20:2413
        _3 = Option::<&str>::None;       // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2415: 20:2419
        _4 = Option::<&str>::None;       // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2421: 20:2425
        _5 = (const 1_u64, const 70_u64, const 0_u64); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2427: 20:2437
        _7 = const "nightly";            // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2444: 20:2453
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2444: 20:2453
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = Option::<&str>::Some(_7);   // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2439: 20:2454
        _9 = const "2023-03-18";         // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2461: 20:2473
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2461: 20:2473
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = Option::<&str>::Some(_9);   // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:2456: 20:2474
        _0 = (const "\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n", move _1, move _2, move _3, move _4, move _5, move _6, move _8); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:12: 20:2475
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:20:13: 20:2401
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-chain-2343a50c261a23ff/out/build_info.rs:21:10: 21:10
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/main.rs:94:11: 94:11
    let _1: clap::ArgMatches<'_>;        // in scope 0 at cita-chain/src/main.rs:95:9: 95:16
    let mut _2: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 103:10
    let mut _3: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 99:56
    let mut _4: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 98:28
    let mut _5: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 97:49
    let mut _6: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 96:43
    let mut _7: clap::App<'_, '_>;       // in scope 0 at cita-chain/src/main.rs:95:19: 95:36
    let mut _8: &str;                    // in scope 0 at cita-chain/src/main.rs:96:18: 96:42
    let mut _9: &str;                    // in scope 0 at cita-chain/src/main.rs:97:23: 97:48
    let _10: &str;                       // in scope 0 at cita-chain/src/main.rs:101:13: 102:57
    let mut _12: &clap::ArgMatches<'_>;  // in scope 0 at cita-chain/src/main.rs:106:18: 106:46
    let _13: std::option::Option<std::path::PathBuf>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
    let mut _14: std::result::Result<std::path::PathBuf, dotenv::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
    let _16: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
    let mut _17: bool;                   // in scope 0 at cita-chain/src/main.rs:107:53: 107:59
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    let _19: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _24: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _25: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _26: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _27: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _28: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _29: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _30: &[&str];                // in scope 0 at cita-chain/src/main.rs:107:39: 107:51
    let mut _32: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _34: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _36: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _37: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _38: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: &[&str];                // in scope 0 at cita-chain/src/main.rs:108:11: 108:24
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/main.rs:108:26: 108:50
    let _46: &&str;                      // in scope 0 at cita-chain/src/main.rs:108:26: 108:50
    let _47: &str;                       // in scope 0 at cita-chain/src/main.rs:108:26: 108:50
    let mut _49: std::option::Option<&str>; // in scope 0 at cita-chain/src/main.rs:110:23: 110:49
    let mut _50: &clap::ArgMatches<'_>;  // in scope 0 at cita-chain/src/main.rs:110:23: 110:49
    let _51: &str;                       // in scope 0 at cita-chain/src/main.rs:110:60: 110:72
    let mut _54: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-chain/src/main.rs:112:20: 112:40
    let mut _57: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-chain/src/main.rs:113:30: 113:50
    let _58: ();                         // in scope 0 at cita-chain/src/main.rs:114:5: 128:6
    let _59: &str;                       // in scope 0 at cita-chain/src/main.rs:115:9: 115:16
    let mut _60: std::vec::Vec<libproto::router::RoutingKey>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:20:39: 22:6
    let mut _61: std::boxed::Box<[libproto::router::RoutingKey]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _62: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _63: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _64: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _65: std::boxed::Box<[libproto::router::RoutingKey; 8]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _66: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _67: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _68: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _69: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _70: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _71: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _72: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _73: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _74: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _75: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _76: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _77: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _78: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _79: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _80: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _81: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _82: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _83: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _84: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _85: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _86: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _87: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _88: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _89: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _90: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:126:9: 126:11
    let mut _91: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:127:9: 127:16
    let mut _94: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _95: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _96: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _97: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _98: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _99: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _100: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _101: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _102: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _103: &[&str];               // in scope 0 at cita-chain/src/main.rs:131:12: 131:32
    let mut _104: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _105: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _106: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _107: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-chain/src/main.rs:131:34: 131:44
    let _108: &std::string::String;      // in scope 0 at cita-chain/src/main.rs:131:34: 131:44
    let mut _111: std::result::Result<cita_database::RocksDB, cita_database::DatabaseError>; // in scope 0 at cita-chain/src/main.rs:133:14: 133:52
    let mut _112: &str;                  // in scope 0 at cita-chain/src/main.rs:133:28: 133:39
    let _113: &str;                      // in scope 0 at cita-chain/src/main.rs:133:28: 133:39
    let _114: &std::string::String;      // in scope 0 at cita-chain/src/main.rs:133:28: 133:39
    let _115: &cita_database::Config;    // in scope 0 at cita-chain/src/main.rs:133:41: 133:51
    let _116: &str;                      // in scope 0 at cita-chain/src/main.rs:133:60: 133:88
    let mut _118: &str;                  // in scope 0 at cita-chain/src/main.rs:135:53: 135:64
    let mut _120: core::libchain::chain::Chain; // in scope 0 at cita-chain/src/main.rs:136:26: 139:6
    let mut _121: std::sync::Arc<cita_database::RocksDB>; // in scope 0 at cita-chain/src/main.rs:137:9: 137:21
    let mut _122: cita_database::RocksDB; // in scope 0 at cita-chain/src/main.rs:137:18: 137:20
    let mut _123: core::libchain::chain::Config; // in scope 0 at cita-chain/src/main.rs:138:9: 138:21
    let mut _126: (pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>, pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>); // in scope 0 at cita-chain/src/main.rs:141:42: 141:62
    let mut _128: std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/main.rs:142:32: 142:50
    let _129: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/main.rs:142:43: 142:49
    let mut _130: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:142:52: 142:67
    let mut _131: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:142:52: 142:67
    let mut _132: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/main.rs:142:69: 142:81
    let mut _134: std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/main.rs:144:47: 144:65
    let _135: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/main.rs:144:58: 144:64
    let mut _136: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:144:67: 144:74
    let _137: std::thread::JoinHandle<()>; // in scope 0 at cita-chain/src/main.rs:148:5: 152:7
    let mut _138: [closure@cita-chain/src/main.rs:148:19: 148:26]; // in scope 0 at cita-chain/src/main.rs:148:19: 152:6
    let mut _140: std::result::Result<libproto::ExecutedResult, pubsub::crossbeam_channel::RecvTimeoutError>; // in scope 0 at cita-chain/src/main.rs:157:28: 158:88
    let mut _141: &pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>; // in scope 0 at cita-chain/src/main.rs:157:28: 158:88
    let mut _142: std::time::Duration;   // in scope 0 at cita-chain/src/main.rs:158:27: 158:87
    let mut _143: u64;                   // in scope 0 at cita-chain/src/main.rs:158:41: 158:83
    let mut _144: u64;                   // in scope 0 at cita-chain/src/main.rs:158:46: 158:83
    let mut _145: u32;                   // in scope 0 at cita-chain/src/main.rs:158:56: 158:81
    let mut _146: u8;                    // in scope 0 at cita-chain/src/main.rs:158:66: 158:80
    let mut _147: (u64, bool);           // in scope 0 at cita-chain/src/main.rs:158:41: 158:83
    let mut _148: isize;                 // in scope 0 at cita-chain/src/main.rs:157:16: 157:25
    let _150: ();                        // in scope 0 at cita-chain/src/main.rs:160:13: 160:56
    let mut _151: &block_processor::BlockProcessor; // in scope 0 at cita-chain/src/main.rs:160:13: 160:56
    let _152: &libproto::ExecutedResult; // in scope 0 at cita-chain/src/main.rs:160:49: 160:55
    let mut _153: bool;                  // in scope 0 at cita-chain/src/main.rs:162:19: 162:61
    let mut _154: bool;                  // in scope 0 at cita-chain/src/main.rs:162:20: 162:61
    let mut _155: &bool;                 // in scope 0 at cita-chain/src/main.rs:162:20: 162:61
    let mut _156: &lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool>; // in scope 0 at cita-chain/src/main.rs:162:21: 162:61
    let _157: lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool>; // in scope 0 at cita-chain/src/main.rs:162:21: 162:61
    let mut _158: &lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, bool>; // in scope 0 at cita-chain/src/main.rs:162:21: 162:61
    let _159: &core::libchain::chain::Chain; // in scope 0 at cita-chain/src/main.rs:162:21: 162:54
    let mut _160: &std::sync::Arc<core::libchain::chain::Chain>; // in scope 0 at cita-chain/src/main.rs:162:21: 162:42
    let mut _162: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _163: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _164: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _165: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _166: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _167: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _168: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _169: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _170: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _171: &[&str];               // in scope 0 at cita-chain/src/main.rs:172:19: 172:66
    let _172: ();                        // in scope 0 at cita-chain/src/main.rs:173:13: 173:53
    let mut _173: &block_processor::BlockProcessor; // in scope 0 at cita-chain/src/main.rs:173:13: 173:53
    let _174: ();                        // in scope 0 at cita-chain/src/main.rs:174:13: 174:49
    let mut _175: &block_processor::BlockProcessor; // in scope 0 at cita-chain/src/main.rs:174:13: 174:49
    let _176: ();                        // in scope 0 at cita-chain/src/main.rs:175:13: 175:55
    let mut _177: &block_processor::BlockProcessor; // in scope 0 at cita-chain/src/main.rs:175:13: 175:55
    let mut _178: bool;                  // in scope 0 at cita-chain/src/main.rs:176:16: 176:34
    let mut _179: u8;                    // in scope 0 at cita-chain/src/main.rs:176:16: 176:30
    let mut _180: (u8, bool);            // in scope 0 at cita-chain/src/main.rs:177:17: 177:36
    let mut _195: bool;                  // in scope 0 at cita-chain/src/main.rs:180:5: 180:6
    let mut _196: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _197: bool;                  // in scope 0 at cita-chain/src/main.rs:142:81: 142:82
    let mut _198: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _199: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _200: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _201: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _202: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _203: bool;                  // in scope 0 at cita-chain/src/main.rs:181:1: 181:2
    let mut _204: bool;                  // in scope 0 at cita-chain/src/main.rs:97:48: 97:49
    let mut _205: bool;                  // in scope 0 at cita-chain/src/main.rs:96:42: 96:43
    let mut _206: isize;                 // in scope 0 at cita-chain/src/main.rs:180:5: 180:6
    let mut _207: isize;                 // in scope 0 at cita-chain/src/main.rs:180:5: 180:6
    let mut _208: *const [libproto::router::RoutingKey; 8]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    scope 1 {
        debug matches => _1;             // in scope 1 at cita-chain/src/main.rs:95:9: 95:16
        let _11: bool;                   // in scope 1 at cita-chain/src/main.rs:106:9: 106:15
        scope 2 {
            debug stdout => _11;         // in scope 2 at cita-chain/src/main.rs:106:9: 106:15
            let _20: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _31: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _48: &str;               // in scope 2 at cita-chain/src/main.rs:110:9: 110:20
            let mut _193: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
            let mut _194: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
            scope 3 {
                debug lvl => _20;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _190: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _191: &[&str; 1]; // in scope 3 at cita-chain/src/main.rs:107:39: 107:51
                let mut _192: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug lvl => _31;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _187: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _188: &[&str; 1]; // in scope 4 at cita-chain/src/main.rs:108:11: 108:24
                let mut _189: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug config_path => _48; // in scope 5 at cita-chain/src/main.rs:110:9: 110:20
                let _52: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 5 at cita-chain/src/main.rs:112:10: 112:12
                let _53: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 5 at cita-chain/src/main.rs:112:14: 112:16
                scope 6 {
                    debug tx => _52;     // in scope 6 at cita-chain/src/main.rs:112:10: 112:12
                    debug rx => _53;     // in scope 6 at cita-chain/src/main.rs:112:14: 112:16
                    let _55: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 6 at cita-chain/src/main.rs:113:10: 113:17
                    let _56: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 6 at cita-chain/src/main.rs:113:19: 113:26
                    scope 7 {
                        debug ctx_pub => _55; // in scope 7 at cita-chain/src/main.rs:113:10: 113:17
                        debug crx_pub => _56; // in scope 7 at cita-chain/src/main.rs:113:19: 113:26
                        let _92: std::string::String; // in scope 7 at cita-chain/src/main.rs:130:9: 130:19
                        scope 8 {
                        }
                        scope 9 {
                            debug nosql_path => _92; // in scope 9 at cita-chain/src/main.rs:130:9: 130:19
                            let _93: log::Level; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let _109: cita_database::Config; // in scope 9 at cita-chain/src/main.rs:132:9: 132:18
                            scope 10 {
                                debug lvl => _93; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _184: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _185: &[&str; 1]; // in scope 10 at cita-chain/src/main.rs:131:12: 131:32
                                let mut _186: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                            scope 11 {
                                debug db_config => _109; // in scope 11 at cita-chain/src/main.rs:132:9: 132:18
                                let _110: cita_database::RocksDB; // in scope 11 at cita-chain/src/main.rs:133:9: 133:11
                                scope 12 {
                                    debug db => _110; // in scope 12 at cita-chain/src/main.rs:133:9: 133:11
                                    let _117: core::libchain::chain::Config; // in scope 12 at cita-chain/src/main.rs:135:9: 135:21
                                    scope 13 {
                                        debug chain_config => _117; // in scope 13 at cita-chain/src/main.rs:135:9: 135:21
                                        let _119: std::sync::Arc<core::libchain::chain::Chain>; // in scope 13 at cita-chain/src/main.rs:136:9: 136:14
                                        scope 14 {
                                            debug chain => _119; // in scope 14 at cita-chain/src/main.rs:136:9: 136:14
                                            let _124: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>; // in scope 14 at cita-chain/src/main.rs:141:10: 141:22
                                            let _125: pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>; // in scope 14 at cita-chain/src/main.rs:141:24: 141:38
                                            scope 15 {
                                                debug write_sender => _124; // in scope 15 at cita-chain/src/main.rs:141:10: 141:22
                                                debug write_receiver => _125; // in scope 15 at cita-chain/src/main.rs:141:24: 141:38
                                                let _127: forward::Forward; // in scope 15 at cita-chain/src/main.rs:142:9: 142:16
                                                scope 16 {
                                                    debug forward => _127; // in scope 16 at cita-chain/src/main.rs:142:9: 142:16
                                                    let _133: block_processor::BlockProcessor; // in scope 16 at cita-chain/src/main.rs:144:9: 144:24
                                                    scope 17 {
                                                        debug block_processor => _133; // in scope 17 at cita-chain/src/main.rs:144:9: 144:24
                                                        let mut _139: u8; // in scope 17 at cita-chain/src/main.rs:155:9: 155:27
                                                        scope 18 {
                                                            debug timeout_factor => _139; // in scope 18 at cita-chain/src/main.rs:155:9: 155:27
                                                            let _161: log::Level; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                            scope 19 {
                                                                debug einfo => _149; // in scope 19 at cita-chain/src/main.rs:157:19: 157:24
                                                                let _149: libproto::ExecutedResult; // in scope 19 at cita-chain/src/main.rs:157:19: 157:24
                                                            }
                                                            scope 20 {
                                                                debug lvl => _161; // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                                let mut _181: &(&str, &str, &str, u32); // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                                let mut _182: &[&str; 1]; // in scope 20 at cita-chain/src/main.rs:172:19: 172:66
                                                                let mut _183: &log::LevelFilter; // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _203 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _204 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _200 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _202 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _199 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _205 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _195 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _196 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _198 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _197 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _201 = const false;              // scope 0 at cita-chain/src/main.rs:95:9: 95:16
        _205 = const true;               // scope 0 at cita-chain/src/main.rs:95:19: 95:36
        _7 = App::<'_, '_>::new::<&str>(const "chain") -> bb1; // scope 0 at cita-chain/src/main.rs:95:19: 95:36
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:95:19: 95:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> App<'_, '_> {App::<'_, '_>::new::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:95:28: 95:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        _8 = get_build_info_str(const true) -> [return: bb2, unwind: bb135]; // scope 0 at cita-chain/src/main.rs:96:18: 96:42
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:96:18: 96:36
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb2: {
        _205 = const false;              // scope 0 at cita-chain/src/main.rs:95:19: 96:43
        _6 = App::<'_, '_>::version::<&str>(move _7, move _8) -> [return: bb3, unwind: bb135]; // scope 0 at cita-chain/src/main.rs:95:19: 96:43
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:96:10: 96:17
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::version::<&str>}, val: Value(<ZST>) }
    }

    bb3: {
        _204 = const true;               // scope 0 at cita-chain/src/main.rs:96:42: 96:43
        _205 = const false;              // scope 0 at cita-chain/src/main.rs:96:42: 96:43
        _9 = get_build_info_str(const false) -> [return: bb4, unwind: bb133]; // scope 0 at cita-chain/src/main.rs:97:23: 97:48
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:97:23: 97:41
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb4: {
        _204 = const false;              // scope 0 at cita-chain/src/main.rs:95:19: 97:49
        _5 = App::<'_, '_>::long_version::<&str>(move _6, move _9) -> [return: bb5, unwind: bb133]; // scope 0 at cita-chain/src/main.rs:95:19: 97:49
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:97:10: 97:22
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::long_version::<&str>}, val: Value(<ZST>) }
    }

    bb5: {
        _204 = const false;              // scope 0 at cita-chain/src/main.rs:97:48: 97:49
        _4 = App::<'_, '_>::author::<&str>(move _5, const "Rivtower") -> bb6; // scope 0 at cita-chain/src/main.rs:95:19: 98:28
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:98:10: 98:16
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::author::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:98:17: 98:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _3 = App::<'_, '_>::about::<&str>(move _4, const "CITA Block Chain Node powered by Rust") -> bb7; // scope 0 at cita-chain/src/main.rs:95:19: 99:56
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:99:10: 99:15
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::about::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:99:16: 99:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _10 = const "-c, --config=[FILE] 'Sets a chain config file'\n                          -s, --stdout 'Log to console'"; // scope 0 at cita-chain/src/main.rs:101:13: 102:57
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:101:13: 102:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = App::<'_, '_>::args_from_usage(move _3, _10) -> bb8; // scope 0 at cita-chain/src/main.rs:95:19: 103:10
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:100:10: 100:25
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::args_from_usage}, val: Value(<ZST>) }
    }

    bb8: {
        _1 = App::<'_, '_>::get_matches(move _2) -> bb9; // scope 0 at cita-chain/src/main.rs:95:19: 104:23
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:104:10: 104:21
                                         // + literal: Const { ty: fn(App<'_, '_>) -> ArgMatches<'_> {App::<'_, '_>::get_matches}, val: Value(<ZST>) }
    }

    bb9: {
        _12 = &_1;                       // scope 1 at cita-chain/src/main.rs:106:18: 106:46
        _11 = ArgMatches::<'_>::is_present::<&str>(move _12, const "stdout") -> [return: bb10, unwind: bb110]; // scope 1 at cita-chain/src/main.rs:106:18: 106:46
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:106:26: 106:36
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> bool {ArgMatches::<'_>::is_present::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:106:37: 106:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb10: {
        _14 = dotenv() -> [return: bb11, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:23
                                         // + literal: Const { ty: fn() -> Result<PathBuf, dotenv::Error> {dotenv}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = Result::<PathBuf, dotenv::Error>::ok(move _14) -> [return: bb12, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:26: 21:28
                                         // + literal: Const { ty: fn(Result<PathBuf, dotenv::Error>) -> Option<PathBuf> {Result::<PathBuf, dotenv::Error>::ok}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_13) -> [return: bb13, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:30: 21:31
    }

    bb13: {
        _15 = set_var::<&str, &str>(const "RUST_BACKTRACE", const "full") -> [return: bb14, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:28
                                         // + literal: Const { ty: fn(&str, &str) {set_var::<&str, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:29: 23:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:47: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb14: {
        _16 = set_panic_handler() -> [return: bb15, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:26
                                         // + literal: Const { ty: fn() {set_panic_handler}, val: Value(<ZST>) }
    }

    bb15: {
        _17 = _11;                       // scope 2 at cita-chain/src/main.rs:107:53: 107:59
        switchInt(move _17) -> [0: bb17, otherwise: bb16]; // scope 2 at cita-chain/src/main.rs:107:53: 107:59
    }

    bb16: {
        _194 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[13])) }
        _18 = init_config(_194) -> [return: bb136, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb17: {
        _193 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[12])) }
        _19 = init_config(_193) -> [return: bb137, unwind: bb110]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb18: {
        _20 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _23 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _192 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[11])) }
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, _192) -> [return: bb22, unwind: bb110]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _21 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _25 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _27 = log::max_level() -> [return: bb23, unwind: bb110]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _21) -> [0: bb27, otherwise: bb25]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        switchInt(move _22) -> [0: bb19, otherwise: bb20]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _26 = &_27;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _24 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _25, move _26) -> [return: bb24, unwind: bb110]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb24: {
        _21 = move _24;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _191 = const _;                  // scope 3 at cita-chain/src/main.rs:107:39: 107:51
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:107:39: 107:51
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[10])) }
        _30 = _191 as &[&str] (Pointer(Unsize)); // scope 3 at cita-chain/src/main.rs:107:39: 107:51
        _29 = Arguments::<'_>::new_const(move _30) -> [return: bb26, unwind: bb110]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb26: {
        _190 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[9])) }
        _28 = log::__private_api_log(move _29, _20, _190) -> [return: bb138, unwind: bb110]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        _31 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _34 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _189 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[8])) }
        _33 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _34, _189) -> [return: bb31, unwind: bb110]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb28: {
        _32 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _36 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _38 = log::max_level() -> [return: bb32, unwind: bb110]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _32) -> [0: bb38, otherwise: bb34]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        switchInt(move _33) -> [0: bb28, otherwise: bb29]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _37 = &_38;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _35 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _36, move _37) -> [return: bb33, unwind: bb110]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _32 = move _35;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _188 = const _;                  // scope 4 at cita-chain/src/main.rs:108:11: 108:24
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:108:11: 108:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[7])) }
        _41 = _188 as &[&str] (Pointer(Unsize)); // scope 4 at cita-chain/src/main.rs:108:11: 108:24
        _47 = get_build_info_str(const true) -> [return: bb35, unwind: bb110]; // scope 4 at cita-chain/src/main.rs:108:26: 108:50
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:108:26: 108:44
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb35: {
        _46 = &_47;                      // scope 4 at cita-chain/src/main.rs:108:26: 108:50
        _45 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_46) -> [return: bb36, unwind: bb110]; // scope 4 at cita-chain/src/main.rs:108:26: 108:50
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:108:26: 108:50
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb36: {
        _44 = [move _45];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = &_44;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _42 = _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _40 = Arguments::<'_>::new_v1(move _41, move _42) -> [return: bb37, unwind: bb110]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb37: {
        _187 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[6])) }
        _39 = log::__private_api_log(move _40, _31, _187) -> [return: bb139, unwind: bb110]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb38: {
        _50 = &_1;                       // scope 2 at cita-chain/src/main.rs:110:23: 110:49
        _49 = ArgMatches::<'_>::value_of::<&str>(move _50, const "config") -> [return: bb39, unwind: bb110]; // scope 2 at cita-chain/src/main.rs:110:23: 110:49
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:110:31: 110:39
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> Option<&'a str> {ArgMatches::<'_>::value_of::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:110:40: 110:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _51 = const "chain.toml";        // scope 2 at cita-chain/src/main.rs:110:60: 110:72
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:110:60: 110:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _48 = Option::<&str>::unwrap_or(move _49, _51) -> [return: bb40, unwind: bb110]; // scope 2 at cita-chain/src/main.rs:110:23: 110:73
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:110:50: 110:59
                                         // + literal: Const { ty: fn(Option<&str>, &str) -> &str {Option::<&str>::unwrap_or}, val: Value(<ZST>) }
    }

    bb40: {
        _54 = unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb41, unwind: bb110]; // scope 5 at cita-chain/src/main.rs:112:20: 112:40
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:112:20: 112:38
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb41: {
        _203 = const true;               // scope 5 at cita-chain/src/main.rs:112:10: 112:12
        _52 = move (_54.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-chain/src/main.rs:112:10: 112:12
        _202 = const true;               // scope 5 at cita-chain/src/main.rs:112:14: 112:16
        _53 = move (_54.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-chain/src/main.rs:112:14: 112:16
        _57 = unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb42, unwind: bb108]; // scope 6 at cita-chain/src/main.rs:113:30: 113:50
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:113:30: 113:48
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb42: {
        _201 = const true;               // scope 6 at cita-chain/src/main.rs:113:10: 113:17
        _55 = move (_57.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 6 at cita-chain/src/main.rs:113:10: 113:17
        _200 = const true;               // scope 6 at cita-chain/src/main.rs:113:19: 113:26
        _56 = move (_57.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 6 at cita-chain/src/main.rs:113:19: 113:26
        _59 = const "chain";             // scope 7 at cita-chain/src/main.rs:115:9: 115:16
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:115:9: 115:16
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _62 = const 16_usize;            // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _63 = const 1_usize;             // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _64 = alloc::alloc::exchange_malloc(move _62, move _63) -> [return: bb43, unwind: bb128]; // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb43: {
        _65 = ShallowInitBox(move _64, [libproto::router::RoutingKey; 8]); // scope 7 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _67 = const Net;                 // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _68 = const libproto::router::MsgType::SyncResponse; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x04)) }
        _66 = RoutingKey(move _67, move _68); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _70 = const Net;                 // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _71 = const libproto::router::MsgType::SyncRequest; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x03)) }
        _69 = RoutingKey(move _70, move _71); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _73 = const Consensus;           // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x03)) }
        _74 = const libproto::router::MsgType::BlockWithProof; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x09)) }
        _72 = RoutingKey(move _73, move _74); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _76 = const Jsonrpc;             // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x00)) }
        _77 = const libproto::router::MsgType::Request; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _75 = RoutingKey(move _76, move _77); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _79 = const Auth;                // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _80 = const libproto::router::MsgType::BlockTxHashesReq; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0d)) }
        _78 = RoutingKey(move _79, move _80); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _82 = const Executor;            // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x05)) }
        _83 = const libproto::router::MsgType::ExecutedResult; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x10)) }
        _81 = RoutingKey(move _82, move _83); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _85 = const Executor;            // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x05)) }
        _86 = const libproto::router::MsgType::StateSignal; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x16)) }
        _84 = RoutingKey(move _85, move _86); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _88 = const libproto::router::SubModules::Snapshot; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x07)) }
        _89 = const libproto::router::MsgType::SnapshotReq; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x11)) }
        _87 = RoutingKey(move _88, move _89); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _208 = (((_65.0: std::ptr::Unique<[libproto::router::RoutingKey; 8]>).0: std::ptr::NonNull<[libproto::router::RoutingKey; 8]>).0: *const [libproto::router::RoutingKey; 8]); // scope 7 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_208) = [move _66, move _69, move _72, move _75, move _78, move _81, move _84, move _87]; // scope 7 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _61 = move _65 as std::boxed::Box<[libproto::router::RoutingKey]> (Pointer(Unsize)); // scope 7 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _60 = slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>(move _61) -> [return: bb44, unwind: bb128]; // scope 7 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(Box<[RoutingKey]>) -> Vec<RoutingKey> {slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb44: {
        _203 = const false;              // scope 7 at cita-chain/src/main.rs:126:9: 126:11
        _90 = move _52;                  // scope 7 at cita-chain/src/main.rs:126:9: 126:11
        _200 = const false;              // scope 7 at cita-chain/src/main.rs:127:9: 127:16
        _91 = move _56;                  // scope 7 at cita-chain/src/main.rs:127:9: 127:16
        _58 = start_pubsub::<RoutingKey>(_59, move _60, move _90, move _91) -> [return: bb45, unwind: bb128]; // scope 7 at cita-chain/src/main.rs:114:5: 128:6
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:114:5: 114:17
                                         // + literal: Const { ty: for<'a> fn(&'a str, Vec<RoutingKey>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {start_pubsub::<RoutingKey>}, val: Value(<ZST>) }
    }

    bb45: {
        _92 = DataPath::nosql_path() -> [return: bb46, unwind: bb128]; // scope 7 at cita-chain/src/main.rs:130:22: 130:44
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:130:22: 130:42
                                         // + literal: Const { ty: fn() -> std::string::String {DataPath::nosql_path}, val: Value(<ZST>) }
    }

    bb46: {
        _93 = log::Level::Trace;         // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _96 = &_93;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _186 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[5])) }
        _95 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _96, _186) -> [return: bb50, unwind: bb106]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb47: {
        _94 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        _98 = &_93;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _100 = log::max_level() -> [return: bb51, unwind: bb106]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(move _94) -> [0: bb56, otherwise: bb53]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        switchInt(move _95) -> [0: bb47, otherwise: bb48]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _99 = &_100;                     // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _97 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _98, move _99) -> [return: bb52, unwind: bb106]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb52: {
        _94 = move _97;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        _185 = const _;                  // scope 10 at cita-chain/src/main.rs:131:12: 131:32
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:131:12: 131:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[4])) }
        _103 = _185 as &[&str] (Pointer(Unsize)); // scope 10 at cita-chain/src/main.rs:131:12: 131:32
        _108 = &_92;                     // scope 10 at cita-chain/src/main.rs:131:34: 131:44
        _107 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_108) -> [return: bb54, unwind: bb106]; // scope 10 at cita-chain/src/main.rs:131:34: 131:44
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:131:34: 131:44
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb54: {
        _106 = [move _107];              // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _105 = &_106;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _104 = _105 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _102 = Arguments::<'_>::new_v1(move _103, move _104) -> [return: bb55, unwind: bb106]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb55: {
        _184 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[3])) }
        _101 = log::__private_api_log(move _102, _93, _184) -> [return: bb140, unwind: bb106]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb56: {
        _109 = cita_database::Config::with_category_num(const _) -> [return: bb57, unwind: bb106]; // scope 9 at cita-chain/src/main.rs:132:21: 132:67
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:132:21: 132:54
                                         // + literal: Const { ty: fn(Option<u32>) -> cita_database::Config {cita_database::Config::with_category_num}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:132:55: 132:66
                                         // + literal: Const { ty: Option<u32>, val: Unevaluated(NUM_COLUMNS, [], None) }
    }

    bb57: {
        _114 = &_92;                     // scope 11 at cita-chain/src/main.rs:133:28: 133:39
        _113 = <std::string::String as Deref>::deref(_114) -> [return: bb58, unwind: bb106]; // scope 11 at cita-chain/src/main.rs:133:28: 133:39
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:133:28: 133:39
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb58: {
        _112 = _113;                     // scope 11 at cita-chain/src/main.rs:133:28: 133:39
        _115 = &_109;                    // scope 11 at cita-chain/src/main.rs:133:41: 133:51
        _111 = RocksDB::open(move _112, _115) -> [return: bb59, unwind: bb106]; // scope 11 at cita-chain/src/main.rs:133:14: 133:52
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:133:14: 133:27
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b cita_database::Config) -> Result<RocksDB, DatabaseError> {RocksDB::open}, val: Value(<ZST>) }
    }

    bb59: {
        _116 = const "Open DB failed unexpected."; // scope 11 at cita-chain/src/main.rs:133:60: 133:88
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:133:60: 133:88
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _110 = Result::<RocksDB, DatabaseError>::expect(move _111, _116) -> [return: bb60, unwind: bb106]; // scope 11 at cita-chain/src/main.rs:133:14: 133:89
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:133:53: 133:59
                                         // + literal: Const { ty: for<'a> fn(Result<RocksDB, DatabaseError>, &'a str) -> RocksDB {Result::<RocksDB, DatabaseError>::expect}, val: Value(<ZST>) }
    }

    bb60: {
        _199 = const true;               // scope 11 at cita-chain/src/main.rs:133:88: 133:89
        _118 = _48;                      // scope 12 at cita-chain/src/main.rs:135:53: 135:64
        _117 = core::libchain::chain::Config::new(move _118) -> [return: bb61, unwind: bb126]; // scope 12 at cita-chain/src/main.rs:135:24: 135:65
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:135:24: 135:52
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> core::libchain::chain::Config {core::libchain::chain::Config::new}, val: Value(<ZST>) }
    }

    bb61: {
        _199 = const false;              // scope 13 at cita-chain/src/main.rs:137:18: 137:20
        _122 = move _110;                // scope 13 at cita-chain/src/main.rs:137:18: 137:20
        _121 = Arc::<RocksDB>::new(move _122) -> [return: bb62, unwind: bb126]; // scope 13 at cita-chain/src/main.rs:137:9: 137:21
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:137:9: 137:17
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(RocksDB) -> Arc<RocksDB> {Arc::<RocksDB>::new}, val: Value(<ZST>) }
    }

    bb62: {
        _123 = _117;                     // scope 13 at cita-chain/src/main.rs:138:9: 138:21
        _120 = core::libchain::chain::Chain::init_chain(move _121, move _123) -> [return: bb63, unwind: bb126]; // scope 13 at cita-chain/src/main.rs:136:26: 139:6
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:136:26: 136:60
                                         // + literal: Const { ty: fn(Arc<RocksDB>, core::libchain::chain::Config) -> core::libchain::chain::Chain {core::libchain::chain::Chain::init_chain}, val: Value(<ZST>) }
    }

    bb63: {
        _119 = Arc::<core::libchain::chain::Chain>::new(move _120) -> [return: bb64, unwind: bb126]; // scope 13 at cita-chain/src/main.rs:136:17: 139:7
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:136:17: 136:25
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(core::libchain::chain::Chain) -> Arc<core::libchain::chain::Chain> {Arc::<core::libchain::chain::Chain>::new}, val: Value(<ZST>) }
    }

    bb64: {
        _126 = unbounded::<libproto::ExecutedResult>() -> [return: bb65, unwind: bb105]; // scope 14 at cita-chain/src/main.rs:141:42: 141:62
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:141:42: 141:60
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>, pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>) {unbounded::<libproto::ExecutedResult>}, val: Value(<ZST>) }
    }

    bb65: {
        _198 = const true;               // scope 14 at cita-chain/src/main.rs:141:10: 141:22
        _124 = move (_126.0: pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>); // scope 14 at cita-chain/src/main.rs:141:10: 141:22
        _125 = move (_126.1: pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>); // scope 14 at cita-chain/src/main.rs:141:24: 141:38
        _129 = &_119;                    // scope 15 at cita-chain/src/main.rs:142:43: 142:49
        _128 = <Arc<core::libchain::chain::Chain> as Clone>::clone(_129) -> [return: bb66, unwind: bb104]; // scope 15 at cita-chain/src/main.rs:142:32: 142:50
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:142:32: 142:42
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> Arc<core::libchain::chain::Chain> {<Arc<core::libchain::chain::Chain> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb66: {
        _197 = const true;               // scope 15 at cita-chain/src/main.rs:142:49: 142:50
        _131 = &_55;                     // scope 15 at cita-chain/src/main.rs:142:52: 142:67
        _130 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(move _131) -> [return: bb67, unwind: bb122]; // scope 15 at cita-chain/src/main.rs:142:52: 142:67
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:142:60: 142:65
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb67: {
        _198 = const false;              // scope 15 at cita-chain/src/main.rs:142:69: 142:81
        _132 = move _124;                // scope 15 at cita-chain/src/main.rs:142:69: 142:81
        _197 = const false;              // scope 15 at cita-chain/src/main.rs:142:19: 142:82
        _127 = Forward::new(move _128, move _130, move _132) -> [return: bb68, unwind: bb122]; // scope 15 at cita-chain/src/main.rs:142:19: 142:82
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:142:19: 142:31
                                         // + literal: Const { ty: fn(Arc<core::libchain::chain::Chain>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Sender<libproto::ExecutedResult>) -> Forward {Forward::new}, val: Value(<ZST>) }
    }

    bb68: {
        _196 = const true;               // scope 15 at cita-chain/src/main.rs:142:81: 142:82
        _197 = const false;              // scope 15 at cita-chain/src/main.rs:142:81: 142:82
        _135 = &_119;                    // scope 16 at cita-chain/src/main.rs:144:58: 144:64
        _134 = <Arc<core::libchain::chain::Chain> as Clone>::clone(_135) -> [return: bb69, unwind: bb120]; // scope 16 at cita-chain/src/main.rs:144:47: 144:65
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:144:47: 144:57
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> Arc<core::libchain::chain::Chain> {<Arc<core::libchain::chain::Chain> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb69: {
        _201 = const false;              // scope 16 at cita-chain/src/main.rs:144:67: 144:74
        _136 = move _55;                 // scope 16 at cita-chain/src/main.rs:144:67: 144:74
        _133 = BlockProcessor::new(move _134, move _136) -> [return: bb70, unwind: bb120]; // scope 16 at cita-chain/src/main.rs:144:27: 144:75
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:144:27: 144:46
                                         // + literal: Const { ty: fn(Arc<core::libchain::chain::Chain>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> BlockProcessor {BlockProcessor::new}, val: Value(<ZST>) }
    }

    bb70: {
        _202 = const false;              // scope 17 at cita-chain/src/main.rs:148:19: 152:6
        _196 = const false;              // scope 17 at cita-chain/src/main.rs:148:19: 152:6
        _138 = [closure@cita-chain/src/main.rs:148:19: 148:26] { rx: move _53, forward: move _127 }; // scope 17 at cita-chain/src/main.rs:148:19: 152:6
                                         // closure
                                         // + def_id: DefId(0:101 ~ cita_chain[3b40]::main::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>, forward::Forward),
                                         // ]
        _137 = spawn::<[closure@cita-chain/src/main.rs:148:19: 148:26], ()>(move _138) -> [return: bb71, unwind: bb103]; // scope 17 at cita-chain/src/main.rs:148:5: 152:7
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:148:5: 148:18
                                         // + literal: Const { ty: fn([closure@cita-chain/src/main.rs:148:19: 148:26]) -> JoinHandle<()> {spawn::<[closure@cita-chain/src/main.rs:148:19: 148:26], ()>}, val: Value(<ZST>) }
    }

    bb71: {
        drop(_137) -> [return: bb72, unwind: bb103]; // scope 17 at cita-chain/src/main.rs:152:7: 152:8
    }

    bb72: {
        _139 = const 0_u8;               // scope 17 at cita-chain/src/main.rs:155:30: 155:33
        goto -> bb73;                    // scope 18 at cita-chain/src/main.rs:156:5: 180:6
    }

    bb73: {
        _141 = &_125;                    // scope 19 at cita-chain/src/main.rs:157:28: 158:88
        _146 = _139;                     // scope 19 at cita-chain/src/main.rs:158:66: 158:80
        _145 = <u32 as From<u8>>::from(move _146) -> [return: bb74, unwind: bb103]; // scope 19 at cita-chain/src/main.rs:158:56: 158:81
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:158:56: 158:65
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(u8) -> u32 {<u32 as From<u8>>::from}, val: Value(<ZST>) }
    }

    bb74: {
        _144 = core::num::<impl u64>::pow(const 2_u64, move _145) -> [return: bb75, unwind: bb103]; // scope 19 at cita-chain/src/main.rs:158:46: 158:83
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:158:52: 158:55
                                         // + literal: Const { ty: fn(u64, u32) -> u64 {core::num::<impl u64>::pow}, val: Value(<ZST>) }
    }

    bb75: {
        _147 = CheckedMul(const 18_u64, _144); // scope 19 at cita-chain/src/main.rs:158:41: 158:83
        assert(!move (_147.1: bool), "attempt to compute `{} * {}`, which would overflow", const 18_u64, move _144) -> [success: bb76, unwind: bb103]; // scope 19 at cita-chain/src/main.rs:158:41: 158:83
    }

    bb76: {
        _143 = move (_147.0: u64);       // scope 19 at cita-chain/src/main.rs:158:41: 158:83
        _142 = Duration::new(move _143, const 0_u32) -> [return: bb77, unwind: bb103]; // scope 19 at cita-chain/src/main.rs:158:27: 158:87
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:158:27: 158:40
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb77: {
        _140 = pubsub::crossbeam_channel::Receiver::<libproto::ExecutedResult>::recv_timeout(move _141, move _142) -> [return: bb78, unwind: bb103]; // scope 19 at cita-chain/src/main.rs:157:28: 158:88
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:158:14: 158:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<libproto::ExecutedResult>, Duration) -> Result<libproto::ExecutedResult, pubsub::crossbeam_channel::RecvTimeoutError> {pubsub::crossbeam_channel::Receiver::<libproto::ExecutedResult>::recv_timeout}, val: Value(<ZST>) }
    }

    bb78: {
        _195 = const true;               // scope 19 at cita-chain/src/main.rs:158:87: 158:88
        _148 = discriminant(_140);       // scope 19 at cita-chain/src/main.rs:157:16: 157:25
        switchInt(move _148) -> [0: bb79, otherwise: bb81]; // scope 19 at cita-chain/src/main.rs:157:16: 157:25
    }

    bb79: {
        _195 = const false;              // scope 19 at cita-chain/src/main.rs:157:19: 157:24
        _149 = move ((_140 as Ok).0: libproto::ExecutedResult); // scope 19 at cita-chain/src/main.rs:157:19: 157:24
        _151 = &_133;                    // scope 19 at cita-chain/src/main.rs:160:13: 160:56
        _152 = &_149;                    // scope 19 at cita-chain/src/main.rs:160:49: 160:55
        _150 = BlockProcessor::set_executed_result(move _151, _152) -> [return: bb80, unwind: bb102]; // scope 19 at cita-chain/src/main.rs:160:13: 160:56
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:160:29: 160:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BlockProcessor, &'b libproto::ExecutedResult) {BlockProcessor::set_executed_result}, val: Value(<ZST>) }
    }

    bb80: {
        _139 = const 0_u8;               // scope 19 at cita-chain/src/main.rs:161:13: 161:31
        drop(_149) -> [return: bb115, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:162:9: 162:10
    }

    bb81: {
        _160 = &(_133.0: std::sync::Arc<core::libchain::chain::Chain>); // scope 18 at cita-chain/src/main.rs:162:21: 162:42
        _159 = <Arc<core::libchain::chain::Chain> as Deref>::deref(move _160) -> [return: bb82, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:162:21: 162:54
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:162:21: 162:54
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<core::libchain::chain::Chain>) -> &'a <Arc<core::libchain::chain::Chain> as Deref>::Target {<Arc<core::libchain::chain::Chain> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb82: {
        _158 = &((*_159).15: lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, bool>); // scope 18 at cita-chain/src/main.rs:162:21: 162:61
        _157 = lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, bool>::read(move _158) -> [return: bb83, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:162:21: 162:61
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:162:55: 162:59
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLock<parking_lot::raw_rwlock::RawRwLock, bool>) -> lock_api::rwlock::RwLockReadGuard<'a, parking_lot::raw_rwlock::RawRwLock, bool> {lock_api::rwlock::RwLock::<parking_lot::raw_rwlock::RawRwLock, bool>::read}, val: Value(<ZST>) }
    }

    bb83: {
        _156 = &_157;                    // scope 18 at cita-chain/src/main.rs:162:21: 162:61
        _155 = <lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool> as Deref>::deref(move _156) -> [return: bb84, unwind: bb101]; // scope 18 at cita-chain/src/main.rs:162:20: 162:61
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:162:20: 162:61
                                         // + literal: Const { ty: for<'a> fn(&'a lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool>) -> &'a <lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool> as Deref>::Target {<lock_api::rwlock::RwLockReadGuard<'_, parking_lot::raw_rwlock::RawRwLock, bool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb84: {
        _154 = (*_155);                  // scope 18 at cita-chain/src/main.rs:162:20: 162:61
        _153 = Not(move _154);           // scope 18 at cita-chain/src/main.rs:162:19: 162:61
        drop(_157) -> [return: bb85, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:162:60: 162:61
    }

    bb85: {
        switchInt(move _153) -> [0: bb115, otherwise: bb86]; // scope 18 at cita-chain/src/main.rs:162:19: 162:61
    }

    bb86: {
        _161 = log::Level::Info;         // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _164 = &_161;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _183 = const _;                  // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[2])) }
        _163 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _164, _183) -> [return: bb90, unwind: bb118]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb87: {
        _162 = const false;              // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb89;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb88: {
        _166 = &_161;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _168 = log::max_level() -> [return: bb91, unwind: bb118]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb89: {
        switchInt(move _162) -> [0: bb95, otherwise: bb93]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb90: {
        switchInt(move _163) -> [0: bb87, otherwise: bb88]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb91: {
        _167 = &_168;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _165 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _166, move _167) -> [return: bb92, unwind: bb118]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb92: {
        _162 = move _165;                // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb89;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb93: {
        _182 = const _;                  // scope 20 at cita-chain/src/main.rs:172:19: 172:66
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:172:19: 172:66
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _171 = _182 as &[&str] (Pointer(Unsize)); // scope 20 at cita-chain/src/main.rs:172:19: 172:66
        _170 = Arguments::<'_>::new_const(move _171) -> [return: bb94, unwind: bb118]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb94: {
        _181 = const _;                  // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[0])) }
        _169 = log::__private_api_log(move _170, _161, _181) -> [return: bb141, unwind: bb118]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb95: {
        _173 = &_133;                    // scope 18 at cita-chain/src/main.rs:173:13: 173:53
        _172 = BlockProcessor::reset_max_store_height(move _173) -> [return: bb96, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:173:13: 173:53
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:173:29: 173:51
                                         // + literal: Const { ty: for<'a> fn(&'a BlockProcessor) {BlockProcessor::reset_max_store_height}, val: Value(<ZST>) }
    }

    bb96: {
        _175 = &_133;                    // scope 18 at cita-chain/src/main.rs:174:13: 174:49
        _174 = BlockProcessor::signal_to_executor(move _175) -> [return: bb97, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:174:13: 174:49
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:174:29: 174:47
                                         // + literal: Const { ty: for<'a> fn(&'a BlockProcessor) {BlockProcessor::signal_to_executor}, val: Value(<ZST>) }
    }

    bb97: {
        _177 = &_133;                    // scope 18 at cita-chain/src/main.rs:175:13: 175:55
        _176 = BlockProcessor::broadcast_current_status(move _177) -> [return: bb98, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:175:13: 175:55
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:175:29: 175:53
                                         // + literal: Const { ty: for<'a> fn(&'a BlockProcessor) {BlockProcessor::broadcast_current_status}, val: Value(<ZST>) }
    }

    bb98: {
        _179 = _139;                     // scope 18 at cita-chain/src/main.rs:176:16: 176:30
        _178 = Lt(move _179, const 6_u8); // scope 18 at cita-chain/src/main.rs:176:16: 176:34
        switchInt(move _178) -> [0: bb115, otherwise: bb99]; // scope 18 at cita-chain/src/main.rs:176:16: 176:34
    }

    bb99: {
        _180 = CheckedAdd(_139, const 1_u8); // scope 18 at cita-chain/src/main.rs:177:17: 177:36
        assert(!move (_180.1: bool), "attempt to compute `{} + {}`, which would overflow", _139, const 1_u8) -> [success: bb100, unwind: bb118]; // scope 18 at cita-chain/src/main.rs:177:17: 177:36
    }

    bb100: {
        _139 = move (_180.0: u8);        // scope 18 at cita-chain/src/main.rs:177:17: 177:36
        goto -> bb115;                   // scope 18 at cita-chain/src/main.rs:176:13: 178:14
    }

    bb101 (cleanup): {
        drop(_157) -> bb118;             // scope 18 at cita-chain/src/main.rs:162:60: 162:61
    }

    bb102 (cleanup): {
        drop(_149) -> bb118;             // scope 18 at cita-chain/src/main.rs:162:9: 162:10
    }

    bb103 (cleanup): {
        drop(_133) -> bb120;             // scope 16 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb104 (cleanup): {
        drop(_125) -> bb124;             // scope 14 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb105 (cleanup): {
        drop(_119) -> bb126;             // scope 13 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb106 (cleanup): {
        drop(_92) -> bb128;              // scope 7 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb107 (cleanup): {
        switchInt(_201) -> [0: bb108, otherwise: bb129]; // scope 6 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb108 (cleanup): {
        switchInt(_202) -> [0: bb109, otherwise: bb130]; // scope 5 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb109 (cleanup): {
        switchInt(_203) -> [0: bb110, otherwise: bb131]; // scope 5 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb110 (cleanup): {
        drop(_1) -> bb111;               // scope 0 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb111 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/main.rs:94:1: 181:2
    }

    bb112: {
        _195 = const false;              // scope 18 at cita-chain/src/main.rs:180:5: 180:6
        goto -> bb73;                    // scope 18 at cita-chain/src/main.rs:156:5: 180:6
    }

    bb113: {
        switchInt(_195) -> [0: bb112, otherwise: bb114]; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb114: {
        drop(((_140 as Ok).0: libproto::ExecutedResult)) -> [return: bb112, unwind: bb103]; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb115: {
        _206 = discriminant(_140);       // scope 18 at cita-chain/src/main.rs:180:5: 180:6
        switchInt(move _206) -> [0: bb113, otherwise: bb112]; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb116 (cleanup): {
        switchInt(_195) -> [0: bb103, otherwise: bb117]; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb117 (cleanup): {
        drop(((_140 as Ok).0: libproto::ExecutedResult)) -> bb103; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb118 (cleanup): {
        _207 = discriminant(_140);       // scope 18 at cita-chain/src/main.rs:180:5: 180:6
        switchInt(move _207) -> [0: bb116, otherwise: bb103]; // scope 18 at cita-chain/src/main.rs:180:5: 180:6
    }

    bb119 (cleanup): {
        drop(_127) -> bb104;             // scope 15 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb120 (cleanup): {
        switchInt(_196) -> [0: bb104, otherwise: bb119]; // scope 15 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb121 (cleanup): {
        drop(_128) -> bb104;             // scope 15 at cita-chain/src/main.rs:142:81: 142:82
    }

    bb122 (cleanup): {
        switchInt(_197) -> [0: bb104, otherwise: bb121]; // scope 15 at cita-chain/src/main.rs:142:81: 142:82
    }

    bb123 (cleanup): {
        drop(_124) -> bb105;             // scope 14 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb124 (cleanup): {
        switchInt(_198) -> [0: bb105, otherwise: bb123]; // scope 14 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb125 (cleanup): {
        drop(_110) -> bb106;             // scope 11 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb126 (cleanup): {
        switchInt(_199) -> [0: bb106, otherwise: bb125]; // scope 11 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb127 (cleanup): {
        drop(_56) -> bb107;              // scope 6 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb128 (cleanup): {
        switchInt(_200) -> [0: bb107, otherwise: bb127]; // scope 6 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb129 (cleanup): {
        drop(_55) -> bb108;              // scope 6 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb130 (cleanup): {
        drop(_53) -> bb109;              // scope 5 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb131 (cleanup): {
        drop(_52) -> bb110;              // scope 5 at cita-chain/src/main.rs:181:1: 181:2
    }

    bb132 (cleanup): {
        drop(_6) -> bb111;               // scope 0 at cita-chain/src/main.rs:97:48: 97:49
    }

    bb133 (cleanup): {
        switchInt(_204) -> [0: bb111, otherwise: bb132]; // scope 0 at cita-chain/src/main.rs:97:48: 97:49
    }

    bb134 (cleanup): {
        drop(_7) -> bb111;               // scope 0 at cita-chain/src/main.rs:96:42: 96:43
    }

    bb135 (cleanup): {
        switchInt(_205) -> [0: bb111, otherwise: bb134]; // scope 0 at cita-chain/src/main.rs:96:42: 96:43
    }

    bb136: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    }

    bb137: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    }

    bb138: {
        goto -> bb27;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb139: {
        goto -> bb38;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb140: {
        goto -> bb56;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb141: {
        goto -> bb95;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/main.rs:172:13: 172:67
    let mut _7: &str;                    // in scope 0 at cita-chain/src/main.rs:172:13: 172:67

    bb0: {
        _3 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/main.rs"; // scope 0 at cita-chain/src/main.rs:172:13: 172:67
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:172:13: 172:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/main.rs:172:13: 172:67
        _1 = (move _2, move _4, move _6, const 172_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/main.rs:172:19: 172:66
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/main.rs:172:19: 172:66

    bb0: {
        _1 = [const "Chain enters the timeout retransmission phase"]; // scope 0 at cita-chain/src/main.rs:172:19: 172:66
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:172:19: 172:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/main.rs:172:19: 172:66
        return;                          // scope 0 at cita-chain/src/main.rs:172:19: 172:66
    }
}

promoted[2] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/main.rs:131:5: 131:45
    let mut _7: &str;                    // in scope 0 at cita-chain/src/main.rs:131:5: 131:45

    bb0: {
        _3 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/main.rs"; // scope 0 at cita-chain/src/main.rs:131:5: 131:45
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:131:5: 131:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/main.rs:131:5: 131:45
        _1 = (move _2, move _4, move _6, const 131_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/main.rs:131:12: 131:32
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/main.rs:131:12: 131:32

    bb0: {
        _1 = [const "nosql_path is "];   // scope 0 at cita-chain/src/main.rs:131:12: 131:32
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:131:12: 131:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/main.rs:131:12: 131:32
        return;                          // scope 0 at cita-chain/src/main.rs:131:12: 131:32
    }
}

promoted[5] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/main.rs:108:5: 108:51
    let mut _7: &str;                    // in scope 0 at cita-chain/src/main.rs:108:5: 108:51

    bb0: {
        _3 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/main.rs"; // scope 0 at cita-chain/src/main.rs:108:5: 108:51
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:108:5: 108:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/main.rs:108:5: 108:51
        _1 = (move _2, move _4, move _6, const 108_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/main.rs:108:11: 108:24
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/main.rs:108:11: 108:24

    bb0: {
        _1 = [const "Version: "];        // scope 0 at cita-chain/src/main.rs:108:11: 108:24
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:108:11: 108:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/main.rs:108:11: 108:24
        return;                          // scope 0 at cita-chain/src/main.rs:108:11: 108:24
    }
}

promoted[8] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-chain/src/main.rs:107:5: 107:60
    let mut _7: &str;                    // in scope 0 at cita-chain/src/main.rs:107:5: 107:60

    bb0: {
        _3 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_chain";         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-chain/src/main.rs"; // scope 0 at cita-chain/src/main.rs:107:5: 107:60
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:107:5: 107:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-chain/src/main.rs:107:5: 107:60
        _1 = (move _2, move _4, move _6, const 107_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-chain/src/main.rs:107:39: 107:51
    let mut _1: [&str; 1];               // in scope 0 at cita-chain/src/main.rs:107:39: 107:51

    bb0: {
        _1 = [const "CITA:chain"];       // scope 0 at cita-chain/src/main.rs:107:39: 107:51
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:107:39: 107:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-chain/src/main.rs:107:39: 107:51
        return;                          // scope 0 at cita-chain/src/main.rs:107:39: 107:51
    }
}

promoted[11] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
    let mut _2: &str;                    // in scope 0 at cita-chain/src/main.rs:107:25: 107:37
    let mut _3: &str;                    // in scope 0 at cita-chain/src/main.rs:107:25: 107:37

    bb0: {
        _3 = const "cita-chain";         // scope 0 at cita-chain/src/main.rs:107:25: 107:37
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:107:25: 107:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-chain/src/main.rs:107:25: 107:37
        _1 = LogFavour::<'_>::File(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    }
}

promoted[13] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
    let mut _2: &str;                    // in scope 0 at cita-chain/src/main.rs:107:25: 107:37
    let mut _3: &str;                    // in scope 0 at cita-chain/src/main.rs:107:25: 107:37

    bb0: {
        _3 = const "cita-chain";         // scope 0 at cita-chain/src/main.rs:107:25: 107:37
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:107:25: 107:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-chain/src/main.rs:107:25: 107:37
        _1 = LogFavour::<'_>::Stdout(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    }
}

fn main::{closure#0}(_1: [closure@cita-chain/src/main.rs:148:19: 148:26]) -> () {
    debug rx => (_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-chain/src/main.rs:112:14: 112:16
    debug forward => (_1.1: forward::Forward); // in scope 0 at cita-chain/src/main.rs:142:9: 142:16
    let mut _0: ();                      // return place in scope 0 at cita-chain/src/main.rs:148:27: 148:27
    let mut _2: std::result::Result<(std::string::String, std::vec::Vec<u8>), pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-chain/src/main.rs:149:33: 149:42
    let mut _3: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-chain/src/main.rs:149:33: 149:42
    let mut _4: isize;                   // in scope 0 at cita-chain/src/main.rs:149:16: 149:30
    let _7: ();                          // in scope 0 at cita-chain/src/main.rs:150:13: 150:45
    let mut _8: &forward::Forward;       // in scope 0 at cita-chain/src/main.rs:150:13: 150:45
    let mut _9: &str;                    // in scope 0 at cita-chain/src/main.rs:150:34: 150:38
    let _10: &str;                       // in scope 0 at cita-chain/src/main.rs:150:34: 150:38
    let _11: &std::string::String;       // in scope 0 at cita-chain/src/main.rs:150:34: 150:38
    let mut _12: &[u8];                  // in scope 0 at cita-chain/src/main.rs:150:40: 150:44
    let _13: &[u8];                      // in scope 0 at cita-chain/src/main.rs:150:40: 150:44
    let _14: &std::vec::Vec<u8>;         // in scope 0 at cita-chain/src/main.rs:150:40: 150:44
    let mut _15: bool;                   // in scope 0 at cita-chain/src/main.rs:152:5: 152:6
    let mut _16: bool;                   // in scope 0 at cita-chain/src/main.rs:152:5: 152:6
    let mut _17: isize;                  // in scope 0 at cita-chain/src/main.rs:152:5: 152:6
    scope 1 {
        debug key => _5;                 // in scope 1 at cita-chain/src/main.rs:149:20: 149:23
        debug msg => _6;                 // in scope 1 at cita-chain/src/main.rs:149:25: 149:28
        let _5: std::string::String;     // in scope 1 at cita-chain/src/main.rs:149:20: 149:23
        let _6: std::vec::Vec<u8>;       // in scope 1 at cita-chain/src/main.rs:149:25: 149:28
    }

    bb0: {
        _16 = const false;               // scope 0 at cita-chain/src/main.rs:148:27: 152:6
        _15 = const false;               // scope 0 at cita-chain/src/main.rs:148:27: 152:6
        goto -> bb1;                     // scope 0 at cita-chain/src/main.rs:148:27: 152:6
    }

    bb1: {
        _3 = &(_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-chain/src/main.rs:149:33: 149:42
        _2 = pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv(move _3) -> [return: bb2, unwind: bb10]; // scope 1 at cita-chain/src/main.rs:149:33: 149:42
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:149:36: 149:40
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _15 = const true;                // scope 1 at cita-chain/src/main.rs:149:41: 149:42
        _16 = const true;                // scope 1 at cita-chain/src/main.rs:149:41: 149:42
        _4 = discriminant(_2);           // scope 1 at cita-chain/src/main.rs:149:16: 149:30
        switchInt(move _4) -> [0: bb3, otherwise: bb19]; // scope 1 at cita-chain/src/main.rs:149:16: 149:30
    }

    bb3: {
        _16 = const false;               // scope 1 at cita-chain/src/main.rs:149:20: 149:23
        _5 = move (((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).0: std::string::String); // scope 1 at cita-chain/src/main.rs:149:20: 149:23
        _15 = const false;               // scope 1 at cita-chain/src/main.rs:149:25: 149:28
        _6 = move (((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>); // scope 1 at cita-chain/src/main.rs:149:25: 149:28
        _8 = &(_1.1: forward::Forward);  // scope 1 at cita-chain/src/main.rs:150:13: 150:45
        _11 = &_5;                       // scope 1 at cita-chain/src/main.rs:150:34: 150:38
        _10 = <std::string::String as Deref>::deref(_11) -> [return: bb4, unwind: bb8]; // scope 1 at cita-chain/src/main.rs:150:34: 150:38
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:150:34: 150:38
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = _10;                        // scope 1 at cita-chain/src/main.rs:150:34: 150:38
        _14 = &_6;                       // scope 1 at cita-chain/src/main.rs:150:40: 150:44
        _13 = <Vec<u8> as Deref>::deref(_14) -> [return: bb5, unwind: bb8]; // scope 1 at cita-chain/src/main.rs:150:40: 150:44
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:150:40: 150:44
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = _13;                       // scope 1 at cita-chain/src/main.rs:150:40: 150:44
        _7 = Forward::dispatch_msg(move _8, move _9, move _12) -> [return: bb6, unwind: bb8]; // scope 1 at cita-chain/src/main.rs:150:13: 150:45
                                         // mir::Constant
                                         // + span: cita-chain/src/main.rs:150:21: 150:33
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a Forward, &'b str, &'c [u8]) {Forward::dispatch_msg}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_6) -> [return: bb7, unwind: bb9]; // scope 0 at cita-chain/src/main.rs:151:9: 151:10
    }

    bb7: {
        drop(_5) -> [return: bb19, unwind: bb10]; // scope 0 at cita-chain/src/main.rs:151:9: 151:10
    }

    bb8 (cleanup): {
        drop(_6) -> bb9;                 // scope 0 at cita-chain/src/main.rs:151:9: 151:10
    }

    bb9 (cleanup): {
        drop(_5) -> bb10;                // scope 0 at cita-chain/src/main.rs:151:9: 151:10
    }

    bb10 (cleanup): {
        drop(_1) -> bb11;                // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at cita-chain/src/main.rs:148:19: 152:6
    }

    bb12: {
        _15 = const false;               // scope 0 at cita-chain/src/main.rs:152:5: 152:6
        _16 = const false;               // scope 0 at cita-chain/src/main.rs:152:5: 152:6
        goto -> bb1;                     // scope 0 at cita-chain/src/main.rs:148:27: 152:6
    }

    bb13: {
        switchInt(_16) -> [0: bb16, otherwise: bb18]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb14 (cleanup): {
        switchInt(_15) -> [0: bb10, otherwise: bb15]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb15 (cleanup): {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>)) -> bb10; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb16: {
        switchInt(_15) -> [0: bb12, otherwise: bb17]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb17: {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>)) -> [return: bb12, unwind: bb10]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb18: {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).0: std::string::String)) -> [return: bb16, unwind: bb14]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }

    bb19: {
        _17 = discriminant(_2);          // scope 0 at cita-chain/src/main.rs:152:5: 152:6
        switchInt(move _17) -> [0: bb13, otherwise: bb12]; // scope 0 at cita-chain/src/main.rs:152:5: 152:6
    }
}
