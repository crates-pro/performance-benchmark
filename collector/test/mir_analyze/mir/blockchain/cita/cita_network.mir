// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const NETMSG_START: u64 = {
    let mut _0: u64;                     // return place in scope 0 at cita-network/src/cita_protocol.rs:49:21: 49:24

    bb0: {
        _0 = const 16045690981097406464_u64; // scope 0 at cita-network/src/cita_protocol.rs:49:27: 49:48
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:49:1: 49:49
    }
}

const CITA_FRAME_HEADER_LEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/cita_protocol.rs:55:34: 55:39
    let mut _1: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
    let mut _2: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
    let mut _3: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
    let mut _4: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
    let mut _5: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
    let mut _6: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
    let mut _7: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
    let mut _8: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
    let mut _9: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
    let mut _10: (usize, bool);          // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
    let mut _11: (usize, bool);          // in scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:68

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
        StorageLive(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
        StorageLive(_3);                 // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
        StorageLive(_4);                 // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
        StorageLive(_5);                 // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
        _6 = CheckedAdd(const 4_usize, const 4_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", const 4_usize, const 4_usize) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
    }

    bb1: {
        _5 = move (_6.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:47
        _7 = CheckedAdd(_5, const 8_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, const 8_usize) -> bb2; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
    }

    bb2: {
        _4 = move (_7.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:51
        StorageDead(_5);                 // scope 0 at cita-network/src/cita_protocol.rs:55:50: 55:51
        _8 = CheckedAdd(_4, const 20_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, const 20_usize) -> bb3; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
    }

    bb3: {
        _3 = move (_8.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:56
        StorageDead(_4);                 // scope 0 at cita-network/src/cita_protocol.rs:55:55: 55:56
        _9 = CheckedAdd(_3, const 1_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
        assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, const 1_usize) -> bb4; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
    }

    bb4: {
        _2 = move (_9.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:60
        StorageDead(_3);                 // scope 0 at cita-network/src/cita_protocol.rs:55:59: 55:60
        _10 = CheckedAdd(_2, const 1_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
        assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 1_usize) -> bb5; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
    }

    bb5: {
        _1 = move (_10.0: usize);        // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:64
        StorageDead(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:55:63: 55:64
        _11 = CheckedAdd(_1, const 2_usize); // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:68
        assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 2_usize) -> bb6; // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:68
    }

    bb6: {
        _0 = move (_11.0: usize);        // scope 0 at cita-network/src/cita_protocol.rs:55:42: 55:68
        StorageDead(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:55:67: 55:68
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:55:1: 55:69
    }
}

const HEAD_VERSION_OFFSET: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/cita_protocol.rs:56:32: 56:37
    let mut _1: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:56:40: 56:45

    bb0: {
        _1 = CheckedAdd(const 4_usize, const 4_usize); // scope 0 at cita-network/src/cita_protocol.rs:56:40: 56:45
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const 4_usize, const 4_usize) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:56:40: 56:45
    }

    bb1: {
        _0 = move (_1.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:56:40: 56:45
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:56:1: 56:46
    }
}

const HEAD_ADDRESS_OFFSET: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/cita_protocol.rs:57:32: 57:37
    let mut _1: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
    let mut _2: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
    let mut _3: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:49

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
        _2 = CheckedAdd(const 4_usize, const 4_usize); // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", const 4_usize, const 4_usize) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
    }

    bb1: {
        _1 = move (_2.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:45
        _3 = CheckedAdd(_1, const 8_usize); // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:49
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 8_usize) -> bb2; // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:49
    }

    bb2: {
        _0 = move (_3.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:57:40: 57:49
        StorageDead(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:57:48: 57:49
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:57:1: 57:50
    }
}

const HEAD_KEY_LEN_OFFSET: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/cita_protocol.rs:58:32: 58:37
    let mut _1: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
    let mut _2: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
    let mut _3: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
    let mut _4: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
    let mut _5: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:54

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
        StorageLive(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
        _3 = CheckedAdd(const 4_usize, const 4_usize); // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", const 4_usize, const 4_usize) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
    }

    bb1: {
        _2 = move (_3.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:45
        _4 = CheckedAdd(_2, const 8_usize); // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
        assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 8_usize) -> bb2; // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
    }

    bb2: {
        _1 = move (_4.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:49
        StorageDead(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:58:48: 58:49
        _5 = CheckedAdd(_1, const 20_usize); // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:54
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 20_usize) -> bb3; // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:54
    }

    bb3: {
        _0 = move (_5.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:58:40: 58:54
        StorageDead(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:58:53: 58:54
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:58:1: 58:55
    }
}

const HEAD_TTL_OFFSET: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/cita_protocol.rs:59:28: 59:33
    let mut _1: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
    let mut _2: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
    let mut _3: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
    let mut _4: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
    let mut _5: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
    let mut _6: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
    let mut _7: (usize, bool);           // in scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:54

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
        StorageLive(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
        StorageLive(_3);                 // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
        _4 = CheckedAdd(const 4_usize, const 4_usize); // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
        assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", const 4_usize, const 4_usize) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
    }

    bb1: {
        _3 = move (_4.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:41
        _5 = CheckedAdd(_3, const 8_usize); // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, const 8_usize) -> bb2; // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
    }

    bb2: {
        _2 = move (_5.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:45
        StorageDead(_3);                 // scope 0 at cita-network/src/cita_protocol.rs:59:44: 59:45
        _6 = CheckedAdd(_2, const 20_usize); // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 20_usize) -> bb3; // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
    }

    bb3: {
        _1 = move (_6.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:50
        StorageDead(_2);                 // scope 0 at cita-network/src/cita_protocol.rs:59:49: 59:50
        _7 = CheckedAdd(_1, const 1_usize); // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:54
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb4; // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:54
    }

    bb4: {
        _0 = move (_7.0: usize);         // scope 0 at cita-network/src/cita_protocol.rs:59:36: 59:54
        StorageDead(_1);                 // scope 0 at cita-network/src/cita_protocol.rs:59:53: 59:54
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:59:1: 59:55
    }
}

const DEFAULT_TTL_NUM: u8 = {
    let mut _0: u8;                      // return place in scope 0 at cita-network/src/cita_protocol.rs:61:28: 61:30

    bb0: {
        _0 = const 0_u8;                 // scope 0 at cita-network/src/cita_protocol.rs:61:33: 61:34
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:61:1: 61:35
    }
}

const CONSENSUS_TTL_NUM: u8 = {
    let mut _0: u8;                      // return place in scope 0 at cita-network/src/cita_protocol.rs:62:30: 62:32

    bb0: {
        _0 = const 9_u8;                 // scope 0 at cita-network/src/cita_protocol.rs:62:35: 62:36
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:62:1: 62:37
    }
}

const CONSENSUS_STR: &str = {
    let mut _0: &str;                    // return place in scope 0 at cita-network/src/cita_protocol.rs:63:26: 63:30

    bb0: {
        _0 = const "consensus";          // scope 0 at cita-network/src/cita_protocol.rs:63:33: 63:44
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:63:33: 63:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:63:1: 63:45
    }
}

fn cita_protocol::<impl at cita-network/src/cita_protocol.rs:65:10: 65:15>::fmt(_1: &NetMessageUnit, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
    debug f => _2;                       // in scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
    let _3: &str;                        // in scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
    let _4: &str;                        // in scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
    let _6: &std::string::String;        // in scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
    let _7: &str;                        // in scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
    let _9: &std::vec::Vec<u8>;          // in scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
    let _10: &str;                       // in scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
    let mut _11: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
    let _12: &cita_types::H160;          // in scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
    let _13: &str;                       // in scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
    let _15: &u64;                       // in scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
    let _16: &str;                       // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
    let mut _17: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
    let _18: &&u8;                       // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
    let _19: &u8;                        // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16

    bb0: {
        _3 = const "NetMessageUnit";     // scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:65:10: 65:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "key";                // scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:67:5: 67:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::string::String); // scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
        _7 = const "data";               // scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:68:5: 68:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = &((*_1).1: std::vec::Vec<u8>); // scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
        _10 = const "addr";              // scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:69:5: 69:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &((*_1).2: cita_types::H160); // scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
        _11 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
        _13 = const "version";           // scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:70:5: 70:21
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = &((*_1).3: u64);           // scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
        _14 = _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
        _16 = const "ttl";               // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:71:5: 71:16
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _19 = &((*_1).4: u8);            // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
        _18 = &_19;                      // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
        _17 = _18 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
        _0 = std::fmt::Formatter::<'_>::debug_struct_field5_finish(_2, _3, _4, move _5, _7, move _8, _10, move _11, _13, move _14, _16, move _17) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:65:10: 65:15
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:65:10: 65:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f), &'g str, &'h (dyn Debug + 'h), &'i str, &'j (dyn Debug + 'j), &'k str, &'l (dyn Debug + 'l)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field5_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:65:15: 65:15
    }
}

fn cita_protocol::<impl at cita-network/src/cita_protocol.rs:65:17: 65:22>::clone(_1: &NetMessageUnit) -> NetMessageUnit {
    debug self => _1;                    // in scope 0 at cita-network/src/cita_protocol.rs:65:17: 65:22
    let mut _0: cita_protocol::NetMessageUnit; // return place in scope 0 at cita-network/src/cita_protocol.rs:65:17: 65:22
    let mut _2: std::string::String;     // in scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
    let _3: &std::string::String;        // in scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
    let mut _4: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
    let _5: &std::vec::Vec<u8>;          // in scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
    let mut _6: cita_types::H160;        // in scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
    let _7: &cita_types::H160;           // in scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
    let mut _8: u64;                     // in scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
    let _9: &u64;                        // in scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
    let mut _10: u8;                     // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
    let _11: &u8;                        // in scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16

    bb0: {
        _3 = &((*_1).0: std::string::String); // scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
        _2 = <std::string::String as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:67:5: 67:20
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:67:5: 67:20
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: std::vec::Vec<u8>); // scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
        _4 = <Vec<u8> as Clone>::clone(_5) -> [return: bb2, unwind: bb5]; // scope 0 at cita-network/src/cita_protocol.rs:68:5: 68:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:68:5: 68:22
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> Vec<u8> {<Vec<u8> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &((*_1).2: cita_types::H160); // scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
        _6 = <H160 as Clone>::clone(_7) -> [return: bb3, unwind: bb4]; // scope 0 at cita-network/src/cita_protocol.rs:69:5: 69:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:69:5: 69:22
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> H160 {<H160 as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = &((*_1).3: u64);            // scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
        _8 = (*_9);                      // scope 0 at cita-network/src/cita_protocol.rs:70:5: 70:21
        _11 = &((*_1).4: u8);            // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
        _10 = (*_11);                    // scope 0 at cita-network/src/cita_protocol.rs:71:5: 71:16
        _0 = NetMessageUnit { key: move _2, data: move _4, addr: move _6, version: move _8, ttl: move _10 }; // scope 0 at cita-network/src/cita_protocol.rs:65:17: 65:22
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:65:22: 65:22
    }

    bb4 (cleanup): {
        drop(_4) -> bb5;                 // scope 0 at cita-network/src/cita_protocol.rs:65:21: 65:22
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at cita-network/src/cita_protocol.rs:65:21: 65:22
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-network/src/cita_protocol.rs:65:17: 65:22
    }
}

fn cita_protocol::<impl at cita-network/src/cita_protocol.rs:74:1: 74:20>::new(_1: std::string::String, _2: Vec<u8>, _3: H160, _4: u64, _5: u8) -> NetMessageUnit {
    debug key => _1;                     // in scope 0 at cita-network/src/cita_protocol.rs:75:16: 75:19
    debug data => _2;                    // in scope 0 at cita-network/src/cita_protocol.rs:75:29: 75:33
    debug addr => _3;                    // in scope 0 at cita-network/src/cita_protocol.rs:75:44: 75:48
    debug version => _4;                 // in scope 0 at cita-network/src/cita_protocol.rs:75:59: 75:66
    debug ttl => _5;                     // in scope 0 at cita-network/src/cita_protocol.rs:75:73: 75:76
    let mut _0: cita_protocol::NetMessageUnit; // return place in scope 0 at cita-network/src/cita_protocol.rs:75:85: 75:89

    bb0: {
        _0 = NetMessageUnit { key: move _1, data: move _2, addr: _3, version: _4, ttl: _5 }; // scope 0 at cita-network/src/cita_protocol.rs:76:9: 82:10
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:83:6: 83:6
    }
}

fn cita_protocol::<impl at cita-network/src/cita_protocol.rs:86:1: 86:32>::default() -> NetMessageUnit {
    let mut _0: cita_protocol::NetMessageUnit; // return place in scope 0 at cita-network/src/cita_protocol.rs:87:21: 87:25
    let mut _1: std::string::String;     // in scope 0 at cita-network/src/cita_protocol.rs:89:18: 89:35
    let mut _2: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/cita_protocol.rs:90:19: 90:29
    let mut _3: cita_types::H160;        // in scope 0 at cita-network/src/cita_protocol.rs:91:19: 91:34

    bb0: {
        _1 = <std::string::String as Default>::default() -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:89:18: 89:35
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:89:18: 89:33
                                         // + literal: Const { ty: fn() -> std::string::String {<std::string::String as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Vec::<u8>::new() -> [return: bb2, unwind: bb5]; // scope 0 at cita-network/src/cita_protocol.rs:90:19: 90:29
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:90:19: 90:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<u8> {Vec::<u8>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = H160::zero() -> [return: bb3, unwind: bb4]; // scope 0 at cita-network/src/cita_protocol.rs:91:19: 91:34
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:91:19: 91:32
                                         // + literal: Const { ty: fn() -> H160 {H160::zero}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = NetMessageUnit { key: move _1, data: move _2, addr: move _3, version: const 0_u64, ttl: const _ }; // scope 0 at cita-network/src/cita_protocol.rs:88:9: 94:10
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:95:6: 95:6
    }

    bb4 (cleanup): {
        drop(_2) -> bb5;                 // scope 0 at cita-network/src/cita_protocol.rs:94:9: 94:10
    }

    bb5 (cleanup): {
        drop(_1) -> bb6;                 // scope 0 at cita-network/src/cita_protocol.rs:94:9: 94:10
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-network/src/cita_protocol.rs:87:5: 95:6
    }
}

fn pubsub_message_to_network_message(_1: &NetMessageUnit) -> std::option::Option<bytes::Bytes> {
    debug info => _1;                    // in scope 0 at cita-network/src/cita_protocol.rs:98:42: 98:46
    let mut _0: std::option::Option<bytes::Bytes>; // return place in scope 0 at cita-network/src/cita_protocol.rs:98:68: 98:81
    let _2: usize;                       // in scope 0 at cita-network/src/cita_protocol.rs:99:9: 99:19
    let mut _3: &std::string::String;    // in scope 0 at cita-network/src/cita_protocol.rs:99:22: 99:36
    let mut _4: bool;                    // in scope 0 at cita-network/src/cita_protocol.rs:101:8: 101:64
    let mut _5: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:101:8: 101:18
    let mut _6: bool;                    // in scope 0 at cita-network/src/cita_protocol.rs:101:27: 101:64
    let mut _7: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:101:27: 101:37
    let mut _8: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:101:40: 101:64
    let mut _9: u8;                      // in scope 0 at cita-network/src/cita_protocol.rs:101:40: 101:55
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:104:13: 104:21
    let _25: &std::string::String;       // in scope 0 at cita-network/src/cita_protocol.rs:104:13: 104:21
    let mut _27: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:108:23: 108:33
    let mut _28: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:108:36: 108:51
    let mut _29: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/cita_protocol.rs:108:36: 108:51
    let mut _30: (usize, bool);          // in scope 0 at cita-network/src/cita_protocol.rs:108:23: 108:51
    let mut _31: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:110:8: 110:47
    let mut _32: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:110:22: 110:47
    let mut _33: u32;                    // in scope 0 at cita-network/src/cita_protocol.rs:110:22: 110:38
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _38: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _39: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _40: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _41: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _42: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _43: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _44: &[&str];                // in scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72
    let mut _45: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _46: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _47: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:113:13: 113:21
    let _49: &std::string::String;       // in scope 0 at cita-network/src/cita_protocol.rs:113:13: 113:21
    let mut _50: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:114:13: 114:28
    let _51: &usize;                     // in scope 0 at cita-network/src/cita_protocol.rs:114:13: 114:28
    let _52: usize;                      // in scope 0 at cita-network/src/cita_protocol.rs:114:13: 114:28
    let mut _53: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/cita_protocol.rs:114:13: 114:28
    let mut _55: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:119:43: 119:78
    let mut _56: (usize, bool);          // in scope 0 at cita-network/src/cita_protocol.rs:119:43: 119:78
    let mut _58: u64;                    // in scope 0 at cita-network/src/cita_protocol.rs:120:37: 120:55
    let mut _59: (u64, bool);            // in scope 0 at cita-network/src/cita_protocol.rs:120:22: 120:55
    let _60: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:121:5: 121:31
    let mut _61: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:121:5: 121:31
    let _62: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:122:5: 122:33
    let mut _63: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:122:5: 122:33
    let mut _64: u64;                    // in scope 0 at cita-network/src/cita_protocol.rs:122:20: 122:32
    let _65: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:123:5: 123:32
    let mut _66: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:123:5: 123:32
    let mut _67: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/cita_protocol.rs:123:13: 123:31
    let mut _68: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:123:13: 123:31
    let _69: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:123:13: 123:31
    let mut _70: &cita_types::H160;      // in scope 0 at cita-network/src/cita_protocol.rs:123:13: 123:31
    let _71: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:124:5: 124:33
    let mut _72: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:124:5: 124:33
    let mut _73: u8;                     // in scope 0 at cita-network/src/cita_protocol.rs:124:16: 124:32
    let mut _74: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:124:16: 124:26
    let _75: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:125:5: 125:25
    let mut _76: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:125:5: 125:25
    let mut _77: u8;                     // in scope 0 at cita-network/src/cita_protocol.rs:125:16: 125:24
    let _78: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:126:5: 126:22
    let mut _79: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:126:5: 126:22
    let _80: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:128:5: 128:33
    let mut _81: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:128:5: 128:33
    let mut _82: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:128:13: 128:32
    let mut _83: &std::string::String;   // in scope 0 at cita-network/src/cita_protocol.rs:128:13: 128:32
    let _84: ();                         // in scope 0 at cita-network/src/cita_protocol.rs:129:5: 129:30
    let mut _85: &mut bytes::BytesMut;   // in scope 0 at cita-network/src/cita_protocol.rs:129:5: 129:30
    let mut _86: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:129:19: 129:29
    let _87: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:129:19: 129:29
    let _88: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/cita_protocol.rs:129:19: 129:29
    let mut _89: bytes::Bytes;           // in scope 0 at cita-network/src/cita_protocol.rs:131:10: 131:20
    let mut _90: bytes::BytesMut;        // in scope 0 at cita-network/src/cita_protocol.rs:131:10: 131:13
    let mut _97: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:132:1: 132:2
    scope 1 {
        debug length_key => _2;          // in scope 1 at cita-network/src/cita_protocol.rs:99:9: 99:19
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _26: usize;                  // in scope 1 at cita-network/src/cita_protocol.rs:108:9: 108:20
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _94: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _95: &[&str; 2];     // in scope 2 at cita-network/src/cita_protocol.rs:103:13: 103:73
            let mut _96: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug length_full => _26;    // in scope 3 at cita-network/src/cita_protocol.rs:108:9: 108:20
            let _34: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _54: bytes::BytesMut; // in scope 3 at cita-network/src/cita_protocol.rs:119:9: 119:16
            scope 4 {
                debug lvl => _34;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _91: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _92: &[&str; 3]; // in scope 4 at cita-network/src/cita_protocol.rs:112:13: 112:72
                let mut _93: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug buf => _54;        // in scope 5 at cita-network/src/cita_protocol.rs:119:9: 119:16
                let _57: u64;            // in scope 5 at cita-network/src/cita_protocol.rs:120:9: 120:19
                scope 6 {
                    debug request_id => _57; // in scope 6 at cita-network/src/cita_protocol.rs:120:9: 120:19
                }
            }
        }
    }

    bb0: {
        _97 = const false;               // scope 0 at cita-network/src/cita_protocol.rs:99:9: 99:19
        _3 = &((*_1).0: std::string::String); // scope 0 at cita-network/src/cita_protocol.rs:99:22: 99:36
        _2 = std::string::String::len(move _3) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:99:22: 99:36
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:99:31: 99:34
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> usize {std::string::String::len}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _2;                         // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:18
        switchInt(move _5) -> [0: bb2, otherwise: bb3]; // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
    }

    bb2: {
        _4 = const true;                 // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
        goto -> bb4;                     // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
    }

    bb3: {
        _7 = _2;                         // scope 1 at cita-network/src/cita_protocol.rs:101:27: 101:37
        _9 = core::num::<impl u8>::max_value() -> bb5; // scope 1 at cita-network/src/cita_protocol.rs:101:40: 101:55
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:101:40: 101:53
                                         // + literal: Const { ty: fn() -> u8 {core::num::<impl u8>::max_value}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _4) -> [0: bb17, otherwise: bb6]; // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
    }

    bb5: {
        _8 = move _9 as usize (IntToInt); // scope 1 at cita-network/src/cita_protocol.rs:101:40: 101:64
        _6 = Gt(move _7, move _8);       // scope 1 at cita-network/src/cita_protocol.rs:101:27: 101:64
        _4 = move _6;                    // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
        goto -> bb4;                     // scope 1 at cita-network/src/cita_protocol.rs:101:8: 101:64
    }

    bb6: {
        _10 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _96 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[5])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _96) -> bb10; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> bb11;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _11) -> [0: bb16, otherwise: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        switchInt(move _12) -> [0: bb7, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> bb12; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _95 = const _;                   // scope 2 at cita-network/src/cita_protocol.rs:103:13: 103:73
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:103:13: 103:73
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[4])) }
        _20 = _95 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/cita_protocol.rs:103:13: 103:73
        _25 = &((*_1).0: std::string::String); // scope 2 at cita-network/src/cita_protocol.rs:104:13: 104:21
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_25) -> bb14; // scope 2 at cita-network/src/cita_protocol.rs:104:13: 104:21
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:104:13: 104:21
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> bb15; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _94 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[3])) }
        _18 = log::__private_api_log(move _19, _10, _94) -> bb16; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = std::option::Option::<bytes::Bytes>::None; // scope 1 at cita-network/src/cita_protocol.rs:106:16: 106:20
        goto -> bb51;                    // scope 1 at no-location
    }

    bb17: {
        _27 = _2;                        // scope 1 at cita-network/src/cita_protocol.rs:108:23: 108:33
        _29 = &((*_1).1: std::vec::Vec<u8>); // scope 1 at cita-network/src/cita_protocol.rs:108:36: 108:51
        _28 = Vec::<u8>::len(move _29) -> bb18; // scope 1 at cita-network/src/cita_protocol.rs:108:36: 108:51
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:108:46: 108:49
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> usize {Vec::<u8>::len}, val: Value(<ZST>) }
    }

    bb18: {
        _30 = CheckedAdd(_27, _28);      // scope 1 at cita-network/src/cita_protocol.rs:108:23: 108:51
        assert(!move (_30.1: bool), "attempt to compute `{} + {}`, which would overflow", move _27, move _28) -> bb19; // scope 1 at cita-network/src/cita_protocol.rs:108:23: 108:51
    }

    bb19: {
        _26 = move (_30.0: usize);       // scope 1 at cita-network/src/cita_protocol.rs:108:23: 108:51
        _33 = core::num::<impl u32>::max_value() -> bb20; // scope 3 at cita-network/src/cita_protocol.rs:110:22: 110:38
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:110:22: 110:36
                                         // + literal: Const { ty: fn() -> u32 {core::num::<impl u32>::max_value}, val: Value(<ZST>) }
    }

    bb20: {
        _32 = move _33 as usize (IntToInt); // scope 3 at cita-network/src/cita_protocol.rs:110:22: 110:47
        _31 = Gt(_26, move _32);         // scope 3 at cita-network/src/cita_protocol.rs:110:8: 110:47
        switchInt(move _31) -> [0: bb34, otherwise: bb21]; // scope 3 at cita-network/src/cita_protocol.rs:110:8: 110:47
    }

    bb21: {
        _34 = log::Level::Error;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _37 = &_34;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _93 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[2])) }
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, _93) -> bb25; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        _35 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _39 = &_34;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _41 = log::max_level() -> bb26;  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _35) -> [0: bb33, otherwise: bb28]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        switchInt(move _36) -> [0: bb22, otherwise: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _40 = &_41;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _38 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _39, move _40) -> bb27; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb27: {
        _35 = move _38;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _92 = const _;                   // scope 4 at cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[1])) }
        _44 = _92 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/cita_protocol.rs:112:13: 112:72
        _49 = &((*_1).0: std::string::String); // scope 4 at cita-network/src/cita_protocol.rs:113:13: 113:21
        _48 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_49) -> bb29; // scope 4 at cita-network/src/cita_protocol.rs:113:13: 113:21
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:113:13: 113:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb29: {
        _53 = &((*_1).1: std::vec::Vec<u8>); // scope 4 at cita-network/src/cita_protocol.rs:114:13: 114:28
        _52 = Vec::<u8>::len(move _53) -> bb30; // scope 4 at cita-network/src/cita_protocol.rs:114:13: 114:28
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:114:23: 114:26
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> usize {Vec::<u8>::len}, val: Value(<ZST>) }
    }

    bb30: {
        _51 = &_52;                      // scope 4 at cita-network/src/cita_protocol.rs:114:13: 114:28
        _50 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_51) -> bb31; // scope 4 at cita-network/src/cita_protocol.rs:114:13: 114:28
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:114:13: 114:28
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb31: {
        _47 = [move _48, move _50];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _46 = &_47;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _45 = _46 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = Arguments::<'_>::new_v1(move _44, move _45) -> bb32; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb32: {
        _91 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(pubsub_message_to_network_message, [], Some(promoted[0])) }
        _42 = log::__private_api_log(move _43, _34, _91) -> bb33; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb33: {
        _0 = std::option::Option::<bytes::Bytes>::None; // scope 3 at cita-network/src/cita_protocol.rs:116:16: 116:20
        goto -> bb51;                    // scope 1 at no-location
    }

    bb34: {
        _56 = CheckedAdd(_26, const _);  // scope 3 at cita-network/src/cita_protocol.rs:119:43: 119:78
        assert(!move (_56.1: bool), "attempt to compute `{} + {}`, which would overflow", _26, const _) -> bb35; // scope 3 at cita-network/src/cita_protocol.rs:119:43: 119:78
    }

    bb35: {
        _55 = move (_56.0: usize);       // scope 3 at cita-network/src/cita_protocol.rs:119:43: 119:78
        _97 = const true;                // scope 3 at cita-network/src/cita_protocol.rs:119:19: 119:79
        _54 = BytesMut::with_capacity(move _55) -> bb36; // scope 3 at cita-network/src/cita_protocol.rs:119:19: 119:79
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:119:19: 119:42
                                         // + literal: Const { ty: fn(usize) -> BytesMut {BytesMut::with_capacity}, val: Value(<ZST>) }
    }

    bb36: {
        _58 = _26 as u64 (IntToInt);     // scope 5 at cita-network/src/cita_protocol.rs:120:37: 120:55
        _59 = CheckedAdd(const _, _58);  // scope 5 at cita-network/src/cita_protocol.rs:120:22: 120:55
        assert(!move (_59.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, move _58) -> [success: bb37, unwind: bb54]; // scope 5 at cita-network/src/cita_protocol.rs:120:22: 120:55
    }

    bb37: {
        _57 = move (_59.0: u64);         // scope 5 at cita-network/src/cita_protocol.rs:120:22: 120:55
        _61 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:121:5: 121:31
        _60 = <BytesMut as BufMut>::put_u64_be(move _61, _57) -> [return: bb38, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:121:5: 121:31
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:121:9: 121:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, u64) {<BytesMut as BufMut>::put_u64_be}, val: Value(<ZST>) }
    }

    bb38: {
        _63 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:122:5: 122:33
        _64 = ((*_1).3: u64);            // scope 6 at cita-network/src/cita_protocol.rs:122:20: 122:32
        _62 = <BytesMut as BufMut>::put_u64_be(move _63, move _64) -> [return: bb39, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:122:5: 122:33
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:122:9: 122:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, u64) {<BytesMut as BufMut>::put_u64_be}, val: Value(<ZST>) }
    }

    bb39: {
        _66 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:123:5: 123:32
        _70 = &((*_1).2: cita_types::H160); // scope 6 at cita-network/src/cita_protocol.rs:123:13: 123:31
        _69 = <H160 as Deref>::deref(move _70) -> [return: bb40, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:123:13: 123:31
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:123:13: 123:31
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> &'a <H160 as Deref>::Target {<H160 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb40: {
        _68 = _69;                       // scope 6 at cita-network/src/cita_protocol.rs:123:13: 123:31
        _67 = slice::<impl [u8]>::to_vec(move _68) -> [return: bb41, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:123:13: 123:31
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:123:23: 123:29
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb41: {
        _65 = <BytesMut as BufMut>::put::<Vec<u8>>(move _66, move _67) -> [return: bb42, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:123:5: 123:32
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:123:9: 123:12
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, Vec<u8>) {<BytesMut as BufMut>::put::<Vec<u8>>}, val: Value(<ZST>) }
    }

    bb42: {
        _72 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:124:5: 124:33
        _74 = _2;                        // scope 6 at cita-network/src/cita_protocol.rs:124:16: 124:26
        _73 = move _74 as u8 (IntToInt); // scope 6 at cita-network/src/cita_protocol.rs:124:16: 124:32
        _71 = <BytesMut as BufMut>::put_u8(move _72, move _73) -> [return: bb43, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:124:5: 124:33
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:124:9: 124:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, u8) {<BytesMut as BufMut>::put_u8}, val: Value(<ZST>) }
    }

    bb43: {
        _76 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:125:5: 125:25
        _77 = ((*_1).4: u8);             // scope 6 at cita-network/src/cita_protocol.rs:125:16: 125:24
        _75 = <BytesMut as BufMut>::put_u8(move _76, move _77) -> [return: bb44, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:125:5: 125:25
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:125:9: 125:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, u8) {<BytesMut as BufMut>::put_u8}, val: Value(<ZST>) }
    }

    bb44: {
        _79 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:126:5: 126:22
        _78 = <BytesMut as BufMut>::put_u16_be(move _79, const 0_u16) -> [return: bb45, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:126:5: 126:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:126:9: 126:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, u16) {<BytesMut as BufMut>::put_u16_be}, val: Value(<ZST>) }
    }

    bb45: {
        _81 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:128:5: 128:33
        _83 = &((*_1).0: std::string::String); // scope 6 at cita-network/src/cita_protocol.rs:128:13: 128:32
        _82 = std::string::String::as_bytes(move _83) -> [return: bb46, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:128:13: 128:32
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:128:22: 128:30
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a [u8] {std::string::String::as_bytes}, val: Value(<ZST>) }
    }

    bb46: {
        _80 = <BytesMut as BufMut>::put::<&[u8]>(move _81, move _82) -> [return: bb47, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:128:5: 128:33
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:128:9: 128:12
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, &[u8]) {<BytesMut as BufMut>::put::<&[u8]>}, val: Value(<ZST>) }
    }

    bb47: {
        _85 = &mut _54;                  // scope 6 at cita-network/src/cita_protocol.rs:129:5: 129:30
        _88 = &((*_1).1: std::vec::Vec<u8>); // scope 6 at cita-network/src/cita_protocol.rs:129:19: 129:29
        _87 = <Vec<u8> as Deref>::deref(_88) -> [return: bb48, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:129:19: 129:29
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:129:19: 129:29
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb48: {
        _86 = _87;                       // scope 6 at cita-network/src/cita_protocol.rs:129:19: 129:29
        _84 = <BytesMut as BufMut>::put_slice(move _85, move _86) -> [return: bb49, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:129:5: 129:30
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:129:9: 129:18
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BytesMut, &'b [u8]) {<BytesMut as BufMut>::put_slice}, val: Value(<ZST>) }
    }

    bb49: {
        _97 = const false;               // scope 6 at cita-network/src/cita_protocol.rs:131:10: 131:13
        _90 = move _54;                  // scope 6 at cita-network/src/cita_protocol.rs:131:10: 131:13
        _89 = <BytesMut as Into<bytes::Bytes>>::into(move _90) -> [return: bb50, unwind: bb54]; // scope 6 at cita-network/src/cita_protocol.rs:131:10: 131:20
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:131:14: 131:18
                                         // + literal: Const { ty: fn(BytesMut) -> bytes::Bytes {<BytesMut as Into<bytes::Bytes>>::into}, val: Value(<ZST>) }
    }

    bb50: {
        _0 = std::option::Option::<bytes::Bytes>::Some(move _89); // scope 6 at cita-network/src/cita_protocol.rs:131:5: 131:21
        _97 = const false;               // scope 3 at cita-network/src/cita_protocol.rs:132:1: 132:2
        goto -> bb51;                    // scope 0 at cita-network/src/cita_protocol.rs:132:2: 132:2
    }

    bb51: {
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:132:2: 132:2
    }

    bb52 (cleanup): {
        resume;                          // scope 0 at cita-network/src/cita_protocol.rs:98:1: 132:2
    }

    bb53 (cleanup): {
        drop(_54) -> bb52;               // scope 3 at cita-network/src/cita_protocol.rs:132:1: 132:2
    }

    bb54 (cleanup): {
        switchInt(_97) -> [0: bb52, otherwise: bb53]; // scope 3 at cita-network/src/cita_protocol.rs:132:1: 132:2
    }
}

promoted[0] in pubsub_message_to_network_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:111:9: 115:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:111:9: 115:10

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:111:9: 115:10
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:111:9: 115:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:111:9: 115:10
        _1 = (move _2, move _4, move _6, const 111_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in pubsub_message_to_network_message: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72

    bb0: {
        _1 = [const "[CitaProtocol] The MQ message with key ", const " is too long ", const "."]; // scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:112:13: 112:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:112:13: 112:72
    }
}

promoted[2] in pubsub_message_to_network_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in pubsub_message_to_network_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:102:9: 105:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:102:9: 105:10

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:102:9: 105:10
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:102:9: 105:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:102:9: 105:10
        _1 = (move _2, move _4, move _6, const 102_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in pubsub_message_to_network_message: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73

    bb0: {
        _1 = [const "[CitaProtocol] The MQ message key is too long or empty ", const "."]; // scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:103:13: 103:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:103:13: 103:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:103:13: 103:73
    }
}

promoted[5] in pubsub_message_to_network_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network_message_to_pubsub_message(_1: &mut BytesMut) -> std::option::Option<NetMessageUnit> {
    debug buf => _1;                     // in scope 0 at cita-network/src/cita_protocol.rs:134:42: 134:45
    let mut _0: std::option::Option<cita_protocol::NetMessageUnit>; // return place in scope 0 at cita-network/src/cita_protocol.rs:134:65: 134:87
    let mut _2: bool;                    // in scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:41
    let mut _3: usize;                   // in scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:17
    let mut _4: &bytes::BytesMut;        // in scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:17
    let _5: bytes::BytesMut;             // in scope 0 at cita-network/src/cita_protocol.rs:139:9: 139:17
    let mut _7: &[u8];                   // in scope 0 at cita-network/src/cita_protocol.rs:141:46: 141:55
    let _8: &[u8];                       // in scope 0 at cita-network/src/cita_protocol.rs:141:46: 141:55
    let _9: &bytes::BytesMut;            // in scope 0 at cita-network/src/cita_protocol.rs:141:46: 141:55
    let mut _11: u64;                    // in scope 0 at cita-network/src/cita_protocol.rs:142:24: 142:34
    let mut _13: u64;                    // in scope 0 at cita-network/src/cita_protocol.rs:143:23: 143:59
    let mut _14: u64;                    // in scope 0 at cita-network/src/cita_protocol.rs:143:24: 143:34
    let mut _15: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:144:8: 144:36
    let mut _16: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:147:8: 147:51
    let mut _17: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:147:8: 147:31
    let mut _18: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:147:22: 147:31
    let mut _19: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:147:22: 147:31
    let mut _20: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:147:35: 147:51
    let _22: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:151:36: 151:68
    let _23: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:151:37: 151:68
    let mut _24: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:151:37: 151:45
    let _25: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:151:37: 151:45
    let mut _26: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:151:37: 151:45
    let mut _27: std::ops::RangeFrom<usize>; // in scope 0 at cita-network/src/cita_protocol.rs:151:46: 151:67
    let _29: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:152:43: 152:75
    let _30: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:152:44: 152:75
    let mut _31: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:152:44: 152:52
    let _32: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:152:44: 152:52
    let mut _33: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:152:44: 152:52
    let mut _34: std::ops::RangeFrom<usize>; // in scope 0 at cita-network/src/cita_protocol.rs:152:53: 152:74
    let mut _36: u8;                     // in scope 0 at cita-network/src/cita_protocol.rs:154:22: 154:51
    let mut _37: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:154:22: 154:30
    let mut _38: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:154:22: 154:30
    let _39: usize;                      // in scope 0 at cita-network/src/cita_protocol.rs:154:31: 154:50
    let mut _40: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:154:22: 154:51
    let mut _41: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:154:22: 154:51
    let mut _43: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:155:15: 155:23
    let mut _44: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:155:15: 155:23
    let _45: usize;                      // in scope 0 at cita-network/src/cita_protocol.rs:155:24: 155:39
    let mut _46: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:155:15: 155:40
    let mut _47: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:155:15: 155:40
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _50: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _51: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _54: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _55: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _56: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _57: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _58: &[&str];                // in scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62
    let mut _59: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:160:8: 160:30
    let mut _60: usize;                  // in scope 0 at cita-network/src/cita_protocol.rs:160:21: 160:30
    let mut _61: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:160:21: 160:30
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _64: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _65: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _66: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _67: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _68: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _69: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _70: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: &[&str];                // in scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _74: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _75: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:163:13: 163:23
    let _77: &usize;                     // in scope 0 at cita-network/src/cita_protocol.rs:163:13: 163:23
    let mut _78: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:164:13: 164:22
    let _79: &usize;                     // in scope 0 at cita-network/src/cita_protocol.rs:164:13: 164:22
    let _80: usize;                      // in scope 0 at cita-network/src/cita_protocol.rs:164:13: 164:22
    let mut _81: &bytes::BytesMut;       // in scope 0 at cita-network/src/cita_protocol.rs:164:13: 164:22
    let mut _84: &[u8];                  // in scope 0 at cita-network/src/cita_protocol.rs:169:41: 169:49
    let _85: &[u8];                      // in scope 0 at cita-network/src/cita_protocol.rs:169:41: 169:49
    let _86: &bytes::BytesMut;           // in scope 0 at cita-network/src/cita_protocol.rs:169:41: 169:49
    let mut _87: bool;                   // in scope 0 at cita-network/src/cita_protocol.rs:170:8: 170:31
    let mut _88: &std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at cita-network/src/cita_protocol.rs:170:8: 170:31
    let mut _90: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _91: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _92: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _93: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _94: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _95: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _96: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _97: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _98: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _99: &[&str];                // in scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67
    let mut _100: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _101: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _102: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _103: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/cita_protocol.rs:173:13: 173:20
    let _104: &bytes::BytesMut;          // in scope 0 at cita-network/src/cita_protocol.rs:173:13: 173:20
    let mut _106: &str;                  // in scope 0 at cita-network/src/cita_protocol.rs:177:15: 177:50
    let _107: &str;                      // in scope 0 at cita-network/src/cita_protocol.rs:177:15: 177:38
    let mut _108: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at cita-network/src/cita_protocol.rs:177:15: 177:29
    let mut _109: bool;                  // in scope 0 at cita-network/src/cita_protocol.rs:178:8: 178:33
    let mut _111: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _112: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _113: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _114: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _115: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _116: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _117: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _118: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _119: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _120: &[&str];               // in scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57
    let mut _121: cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/cita_protocol.rs:181:10: 187:6
    let mut _122: std::string::String;   // in scope 0 at cita-network/src/cita_protocol.rs:182:9: 182:12
    let mut _123: std::vec::Vec<u8>;     // in scope 0 at cita-network/src/cita_protocol.rs:183:15: 183:27
    let mut _124: &[u8];                 // in scope 0 at cita-network/src/cita_protocol.rs:183:15: 183:27
    let _125: &[u8];                     // in scope 0 at cita-network/src/cita_protocol.rs:183:15: 183:27
    let mut _126: &bytes::BytesMut;      // in scope 0 at cita-network/src/cita_protocol.rs:183:15: 183:27
    let mut _127: cita_types::H160;      // in scope 0 at cita-network/src/cita_protocol.rs:184:9: 184:13
    let mut _128: u64;                   // in scope 0 at cita-network/src/cita_protocol.rs:185:9: 185:16
    let mut _141: bool;                  // in scope 0 at cita-network/src/cita_protocol.rs:188:1: 188:2
    scope 1 {
        debug head_buf => _5;            // in scope 1 at cita-network/src/cita_protocol.rs:139:9: 139:17
        let _6: u64;                     // in scope 1 at cita-network/src/cita_protocol.rs:141:9: 141:19
        scope 2 {
            debug request_id => _6;      // in scope 2 at cita-network/src/cita_protocol.rs:141:9: 141:19
            let _10: u64;                // in scope 2 at cita-network/src/cita_protocol.rs:142:9: 142:21
            scope 3 {
                debug netmsg_start => _10; // in scope 3 at cita-network/src/cita_protocol.rs:142:9: 142:21
                let _12: usize;          // in scope 3 at cita-network/src/cita_protocol.rs:143:9: 143:20
                scope 4 {
                    debug length_full => _12; // in scope 4 at cita-network/src/cita_protocol.rs:143:9: 143:20
                    let _21: cita_types::H160; // in scope 4 at cita-network/src/cita_protocol.rs:151:9: 151:13
                    scope 5 {
                        debug addr => _21; // in scope 5 at cita-network/src/cita_protocol.rs:151:9: 151:13
                        let _28: u64;    // in scope 5 at cita-network/src/cita_protocol.rs:152:9: 152:16
                        scope 6 {
                            debug version => _28; // in scope 6 at cita-network/src/cita_protocol.rs:152:9: 152:16
                            let _35: usize; // in scope 6 at cita-network/src/cita_protocol.rs:154:9: 154:19
                            scope 7 {
                                debug length_key => _35; // in scope 7 at cita-network/src/cita_protocol.rs:154:9: 154:19
                                let _42: u8; // in scope 7 at cita-network/src/cita_protocol.rs:155:9: 155:12
                                scope 8 {
                                    debug ttl => _42; // in scope 8 at cita-network/src/cita_protocol.rs:155:9: 155:12
                                    let _48: log::Level; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let _62: log::Level; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let _82: bytes::BytesMut; // in scope 8 at cita-network/src/cita_protocol.rs:168:9: 168:16
                                    scope 9 {
                                        debug lvl => _48; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                        let mut _138: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                        let mut _139: &[&str; 1]; // in scope 9 at cita-network/src/cita_protocol.rs:157:16: 157:62
                                        let mut _140: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                    }
                                    scope 10 {
                                        debug lvl => _62; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                        let mut _135: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                        let mut _136: &[&str; 3]; // in scope 10 at cita-network/src/cita_protocol.rs:162:13: 162:67
                                        let mut _137: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                    }
                                    scope 11 {
                                        debug key_buf => _82; // in scope 11 at cita-network/src/cita_protocol.rs:168:9: 168:16
                                        let _83: std::result::Result<&str, std::str::Utf8Error>; // in scope 11 at cita-network/src/cita_protocol.rs:169:9: 169:23
                                        scope 12 {
                                            debug key_str_result => _83; // in scope 12 at cita-network/src/cita_protocol.rs:169:9: 169:23
                                            let _89: log::Level; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            let _105: std::string::String; // in scope 12 at cita-network/src/cita_protocol.rs:177:9: 177:12
                                            scope 13 {
                                                debug lvl => _89; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                let mut _132: &(&str, &str, &str, u32); // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                let mut _133: &[&str; 2]; // in scope 13 at cita-network/src/cita_protocol.rs:172:13: 172:67
                                                let mut _134: &log::LevelFilter; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                            }
                                            scope 14 {
                                                debug key => _105; // in scope 14 at cita-network/src/cita_protocol.rs:177:9: 177:12
                                                let _110: log::Level; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                scope 15 {
                                                    debug lvl => _110; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                    let mut _129: &(&str, &str, &str, u32); // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                    let mut _130: &[&str; 1]; // in scope 15 at cita-network/src/cita_protocol.rs:179:15: 179:57
                                                    let mut _131: &log::LevelFilter; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _141 = const false;              // scope 0 at cita-network/src/cita_protocol.rs:135:5: 137:6
        _4 = &(*_1);                     // scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:17
        _3 = BytesMut::len(move _4) -> bb1; // scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:17
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:135:12: 135:15
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> usize {BytesMut::len}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = Lt(move _3, const _);       // scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:41
        switchInt(move _2) -> [0: bb3, otherwise: bb2]; // scope 0 at cita-network/src/cita_protocol.rs:135:8: 135:41
    }

    bb2: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 0 at cita-network/src/cita_protocol.rs:136:16: 136:20
        goto -> bb83;                    // scope 0 at no-location
    }

    bb3: {
        _5 = BytesMut::split_to(_1, const _) -> bb4; // scope 0 at cita-network/src/cita_protocol.rs:139:20: 139:55
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:139:24: 139:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, usize) -> BytesMut {BytesMut::split_to}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = &_5;                        // scope 1 at cita-network/src/cita_protocol.rs:141:46: 141:55
        _8 = <BytesMut as Deref>::deref(_9) -> [return: bb5, unwind: bb86]; // scope 1 at cita-network/src/cita_protocol.rs:141:46: 141:55
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:141:46: 141:55
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = _8;                         // scope 1 at cita-network/src/cita_protocol.rs:141:46: 141:55
        _6 = <BigEndian as ByteOrder>::read_u64(move _7) -> [return: bb6, unwind: bb86]; // scope 1 at cita-network/src/cita_protocol.rs:141:22: 141:56
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:141:22: 141:45
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> u64 {<BigEndian as ByteOrder>::read_u64}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = _6;                        // scope 2 at cita-network/src/cita_protocol.rs:142:24: 142:34
        _10 = BitAnd(move _11, const 18446744069414584320_u64); // scope 2 at cita-network/src/cita_protocol.rs:142:24: 142:58
        _14 = _6;                        // scope 3 at cita-network/src/cita_protocol.rs:143:24: 143:34
        _13 = BitAnd(move _14, const 4294967295_u64); // scope 3 at cita-network/src/cita_protocol.rs:143:23: 143:59
        _12 = move _13 as usize (IntToInt); // scope 3 at cita-network/src/cita_protocol.rs:143:23: 143:68
        _15 = Ne(_10, const _);          // scope 4 at cita-network/src/cita_protocol.rs:144:8: 144:36
        switchInt(move _15) -> [0: bb8, otherwise: bb7]; // scope 4 at cita-network/src/cita_protocol.rs:144:8: 144:36
    }

    bb7: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 4 at cita-network/src/cita_protocol.rs:145:16: 145:20
        goto -> bb82;                    // scope 4 at no-location
    }

    bb8: {
        _19 = &(*_1);                    // scope 4 at cita-network/src/cita_protocol.rs:147:22: 147:31
        _18 = BytesMut::len(move _19) -> [return: bb12, unwind: bb86]; // scope 4 at cita-network/src/cita_protocol.rs:147:22: 147:31
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:147:26: 147:29
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> usize {BytesMut::len}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = const true;                // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
        goto -> bb11;                    // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
    }

    bb10: {
        _20 = Eq(_12, const 0_usize);    // scope 4 at cita-network/src/cita_protocol.rs:147:35: 147:51
        _16 = move _20;                  // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
        goto -> bb11;                    // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
    }

    bb11: {
        switchInt(move _16) -> [0: bb14, otherwise: bb13]; // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
    }

    bb12: {
        _17 = Gt(_12, move _18);         // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:31
        switchInt(move _17) -> [0: bb10, otherwise: bb9]; // scope 4 at cita-network/src/cita_protocol.rs:147:8: 147:51
    }

    bb13: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 4 at cita-network/src/cita_protocol.rs:148:16: 148:20
        goto -> bb82;                    // scope 4 at no-location
    }

    bb14: {
        _26 = &_5;                       // scope 4 at cita-network/src/cita_protocol.rs:151:37: 151:45
        _25 = <BytesMut as Deref>::deref(move _26) -> [return: bb15, unwind: bb86]; // scope 4 at cita-network/src/cita_protocol.rs:151:37: 151:45
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:151:37: 151:45
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb15: {
        _24 = _25;                       // scope 4 at cita-network/src/cita_protocol.rs:151:37: 151:45
        _27 = const RangeFrom::<usize> {{ start: 16_usize }}; // scope 4 at cita-network/src/cita_protocol.rs:151:46: 151:67
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFrom<usize>, val: Value(Scalar(0x0000000000000010)) }
        _23 = <[u8] as std::ops::Index<RangeFrom<usize>>>::index(move _24, move _27) -> [return: bb16, unwind: bb86]; // scope 4 at cita-network/src/cita_protocol.rs:151:37: 151:68
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:151:37: 151:68
                                         // + literal: Const { ty: for<'a> fn(&'a [u8], RangeFrom<usize>) -> &'a <[u8] as std::ops::Index<RangeFrom<usize>>>::Output {<[u8] as std::ops::Index<RangeFrom<usize>>>::index}, val: Value(<ZST>) }
    }

    bb16: {
        _22 = _23;                       // scope 4 at cita-network/src/cita_protocol.rs:151:36: 151:68
        _21 = H160::from_slice(_22) -> [return: bb17, unwind: bb86]; // scope 4 at cita-network/src/cita_protocol.rs:151:16: 151:69
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:151:16: 151:35
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H160 {H160::from_slice}, val: Value(<ZST>) }
    }

    bb17: {
        _33 = &_5;                       // scope 5 at cita-network/src/cita_protocol.rs:152:44: 152:52
        _32 = <BytesMut as Deref>::deref(move _33) -> [return: bb18, unwind: bb86]; // scope 5 at cita-network/src/cita_protocol.rs:152:44: 152:52
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:152:44: 152:52
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = _32;                       // scope 5 at cita-network/src/cita_protocol.rs:152:44: 152:52
        _34 = const RangeFrom::<usize> {{ start: 8_usize }}; // scope 5 at cita-network/src/cita_protocol.rs:152:53: 152:74
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFrom<usize>, val: Value(Scalar(0x0000000000000008)) }
        _30 = <[u8] as std::ops::Index<RangeFrom<usize>>>::index(move _31, move _34) -> [return: bb19, unwind: bb86]; // scope 5 at cita-network/src/cita_protocol.rs:152:44: 152:75
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:152:44: 152:75
                                         // + literal: Const { ty: for<'a> fn(&'a [u8], RangeFrom<usize>) -> &'a <[u8] as std::ops::Index<RangeFrom<usize>>>::Output {<[u8] as std::ops::Index<RangeFrom<usize>>>::index}, val: Value(<ZST>) }
    }

    bb19: {
        _29 = _30;                       // scope 5 at cita-network/src/cita_protocol.rs:152:43: 152:75
        _28 = <BigEndian as ByteOrder>::read_u64(_29) -> [return: bb20, unwind: bb86]; // scope 5 at cita-network/src/cita_protocol.rs:152:19: 152:76
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:152:19: 152:42
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> u64 {<BigEndian as ByteOrder>::read_u64}, val: Value(<ZST>) }
    }

    bb20: {
        _38 = &_5;                       // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:30
        _37 = <BytesMut as Deref>::deref(move _38) -> [return: bb21, unwind: bb86]; // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:30
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:154:22: 154:30
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb21: {
        _39 = const _;                   // scope 6 at cita-network/src/cita_protocol.rs:154:31: 154:50
        _40 = Len((*_37));               // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:51
        _41 = Lt(_39, _40);              // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:51
        assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb22, unwind: bb86]; // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:51
    }

    bb22: {
        _36 = (*_37)[_39];               // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:51
        _35 = move _36 as usize (IntToInt); // scope 6 at cita-network/src/cita_protocol.rs:154:22: 154:60
        _44 = &_5;                       // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:23
        _43 = <BytesMut as Deref>::deref(move _44) -> [return: bb23, unwind: bb86]; // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:23
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:155:15: 155:23
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb23: {
        _45 = const _;                   // scope 7 at cita-network/src/cita_protocol.rs:155:24: 155:39
        _46 = Len((*_43));               // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:40
        _47 = Lt(_45, _46);              // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:40
        assert(move _47, "index out of bounds: the length is {} but the index is {}", move _46, _45) -> [success: bb24, unwind: bb86]; // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:40
    }

    bb24: {
        _42 = (*_43)[_45];               // scope 7 at cita-network/src/cita_protocol.rs:155:15: 155:40
        switchInt(move _35) -> [0: bb25, otherwise: bb35]; // scope 8 at cita-network/src/cita_protocol.rs:156:8: 156:23
    }

    bb25: {
        _48 = log::Level::Error;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _51 = &_48;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _140 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[11])) }
        _50 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _51, _140) -> [return: bb29, unwind: bb86]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _49 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb28;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _53 = &_48;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _55 = log::max_level() -> [return: bb30, unwind: bb86]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb28: {
        switchInt(move _49) -> [0: bb34, otherwise: bb32]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        switchInt(move _50) -> [0: bb26, otherwise: bb27]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _54 = &_55;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, move _54) -> [return: bb31, unwind: bb86]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb31: {
        _49 = move _52;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb28;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _139 = const _;                  // scope 9 at cita-network/src/cita_protocol.rs:157:16: 157:62
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:157:16: 157:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[10])) }
        _58 = _139 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/cita_protocol.rs:157:16: 157:62
        _57 = Arguments::<'_>::new_const(move _58) -> [return: bb33, unwind: bb86]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb33: {
        _138 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[9])) }
        _56 = log::__private_api_log(move _57, _48, _138) -> [return: bb90, unwind: bb86]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb34: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 8 at cita-network/src/cita_protocol.rs:158:16: 158:20
        goto -> bb82;                    // scope 8 at no-location
    }

    bb35: {
        _61 = &(*_1);                    // scope 8 at cita-network/src/cita_protocol.rs:160:21: 160:30
        _60 = BytesMut::len(move _61) -> [return: bb36, unwind: bb86]; // scope 8 at cita-network/src/cita_protocol.rs:160:21: 160:30
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:160:25: 160:28
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> usize {BytesMut::len}, val: Value(<ZST>) }
    }

    bb36: {
        _59 = Gt(_35, move _60);         // scope 8 at cita-network/src/cita_protocol.rs:160:8: 160:30
        switchInt(move _59) -> [0: bb50, otherwise: bb37]; // scope 8 at cita-network/src/cita_protocol.rs:160:8: 160:30
    }

    bb37: {
        _62 = log::Level::Error;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _65 = &_62;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _137 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[8])) }
        _64 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _65, _137) -> [return: bb41, unwind: bb86]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb38: {
        _63 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb40;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _67 = &_62;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _69 = log::max_level() -> [return: bb42, unwind: bb86]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb40: {
        switchInt(move _63) -> [0: bb49, otherwise: bb44]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        switchInt(move _64) -> [0: bb38, otherwise: bb39]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb42: {
        _68 = &_69;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _66 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _67, move _68) -> [return: bb43, unwind: bb86]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb43: {
        _63 = move _66;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb40;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        _136 = const _;                  // scope 10 at cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[7])) }
        _72 = _136 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/cita_protocol.rs:162:13: 162:67
        _77 = &_35;                      // scope 10 at cita-network/src/cita_protocol.rs:163:13: 163:23
        _76 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_77) -> [return: bb45, unwind: bb86]; // scope 10 at cita-network/src/cita_protocol.rs:163:13: 163:23
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:163:13: 163:23
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb45: {
        _81 = &(*_1);                    // scope 10 at cita-network/src/cita_protocol.rs:164:13: 164:22
        _80 = BytesMut::len(move _81) -> [return: bb46, unwind: bb86]; // scope 10 at cita-network/src/cita_protocol.rs:164:13: 164:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:164:17: 164:20
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> usize {BytesMut::len}, val: Value(<ZST>) }
    }

    bb46: {
        _79 = &_80;                      // scope 10 at cita-network/src/cita_protocol.rs:164:13: 164:22
        _78 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_79) -> [return: bb47, unwind: bb86]; // scope 10 at cita-network/src/cita_protocol.rs:164:13: 164:22
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:164:13: 164:22
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb47: {
        _75 = [move _76, move _78];      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _74 = &_75;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _71 = Arguments::<'_>::new_v1(move _72, move _73) -> [return: bb48, unwind: bb86]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb48: {
        _135 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[6])) }
        _70 = log::__private_api_log(move _71, _62, _135) -> [return: bb91, unwind: bb86]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb49: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 8 at cita-network/src/cita_protocol.rs:166:16: 166:20
        goto -> bb82;                    // scope 8 at no-location
    }

    bb50: {
        _82 = BytesMut::split_to(_1, _35) -> [return: bb51, unwind: bb86]; // scope 8 at cita-network/src/cita_protocol.rs:168:19: 168:43
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:168:23: 168:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut, usize) -> BytesMut {BytesMut::split_to}, val: Value(<ZST>) }
    }

    bb51: {
        _86 = &_82;                      // scope 11 at cita-network/src/cita_protocol.rs:169:41: 169:49
        _85 = <BytesMut as Deref>::deref(_86) -> [return: bb52, unwind: bb85]; // scope 11 at cita-network/src/cita_protocol.rs:169:41: 169:49
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:169:41: 169:49
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb52: {
        _84 = _85;                       // scope 11 at cita-network/src/cita_protocol.rs:169:41: 169:49
        _83 = from_utf8(move _84) -> [return: bb53, unwind: bb85]; // scope 11 at cita-network/src/cita_protocol.rs:169:26: 169:50
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:169:26: 169:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Result<&'a str, Utf8Error> {from_utf8}, val: Value(<ZST>) }
    }

    bb53: {
        _88 = &_83;                      // scope 12 at cita-network/src/cita_protocol.rs:170:8: 170:31
        _87 = Result::<&str, Utf8Error>::is_err(move _88) -> [return: bb54, unwind: bb85]; // scope 12 at cita-network/src/cita_protocol.rs:170:8: 170:31
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:170:23: 170:29
                                         // + literal: Const { ty: for<'a> fn(&'a Result<&str, Utf8Error>) -> bool {Result::<&str, Utf8Error>::is_err}, val: Value(<ZST>) }
    }

    bb54: {
        switchInt(move _87) -> [0: bb66, otherwise: bb55]; // scope 12 at cita-network/src/cita_protocol.rs:170:8: 170:31
    }

    bb55: {
        _89 = log::Level::Error;         // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _92 = &_89;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _134 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[5])) }
        _91 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _92, _134) -> [return: bb59, unwind: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb56: {
        _90 = const false;               // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb58;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb57: {
        _94 = &_89;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _96 = log::max_level() -> [return: bb60, unwind: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb58: {
        switchInt(move _90) -> [0: bb65, otherwise: bb62]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        switchInt(move _91) -> [0: bb56, otherwise: bb57]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb60: {
        _95 = &_96;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _93 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _94, move _95) -> [return: bb61, unwind: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb61: {
        _90 = move _93;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb58;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _133 = const _;                  // scope 13 at cita-network/src/cita_protocol.rs:172:13: 172:67
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:172:13: 172:67
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[4])) }
        _99 = _133 as &[&str] (Pointer(Unsize)); // scope 13 at cita-network/src/cita_protocol.rs:172:13: 172:67
        _104 = &_82;                     // scope 13 at cita-network/src/cita_protocol.rs:173:13: 173:20
        _103 = core::fmt::ArgumentV1::<'_>::new_debug::<BytesMut>(_104) -> [return: bb63, unwind: bb85]; // scope 13 at cita-network/src/cita_protocol.rs:173:13: 173:20
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:173:13: 173:20
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b BytesMut) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BytesMut>}, val: Value(<ZST>) }
    }

    bb63: {
        _102 = [move _103];              // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _101 = &_102;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _100 = _101 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _98 = Arguments::<'_>::new_v1(move _99, move _100) -> [return: bb64, unwind: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb64: {
        _132 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[3])) }
        _97 = log::__private_api_log(move _98, _89, _132) -> [return: bb92, unwind: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb65: {
        _0 = std::option::Option::<NetMessageUnit>::None; // scope 12 at cita-network/src/cita_protocol.rs:175:16: 175:20
        drop(_82) -> [return: bb82, unwind: bb86]; // scope 8 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb66: {
        _108 = _83;                      // scope 12 at cita-network/src/cita_protocol.rs:177:15: 177:29
        _107 = Result::<&str, Utf8Error>::unwrap(move _108) -> [return: bb67, unwind: bb85]; // scope 12 at cita-network/src/cita_protocol.rs:177:15: 177:38
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:177:30: 177:36
                                         // + literal: Const { ty: fn(Result<&str, Utf8Error>) -> &str {Result::<&str, Utf8Error>::unwrap}, val: Value(<ZST>) }
    }

    bb67: {
        _106 = _107;                     // scope 12 at cita-network/src/cita_protocol.rs:177:15: 177:50
        _105 = <str as ToString>::to_string(move _106) -> [return: bb68, unwind: bb85]; // scope 12 at cita-network/src/cita_protocol.rs:177:15: 177:50
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:177:39: 177:48
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::string::String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb68: {
        _141 = const true;               // scope 12 at cita-network/src/cita_protocol.rs:177:49: 177:50
        _109 = Eq(_12, _35);             // scope 14 at cita-network/src/cita_protocol.rs:178:8: 178:33
        switchInt(move _109) -> [0: bb78, otherwise: bb69]; // scope 14 at cita-network/src/cita_protocol.rs:178:8: 178:33
    }

    bb69: {
        _110 = log::Level::Warn;         // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _113 = &_110;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _131 = const _;                  // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[2])) }
        _112 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _113, _131) -> [return: bb73, unwind: bb89]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb70: {
        _111 = const false;              // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb72;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb71: {
        _115 = &_110;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _117 = log::max_level() -> [return: bb74, unwind: bb89]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb72: {
        switchInt(move _111) -> [0: bb78, otherwise: bb76]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb73: {
        switchInt(move _112) -> [0: bb70, otherwise: bb71]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb74: {
        _116 = &_117;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _114 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _115, move _116) -> [return: bb75, unwind: bb89]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb75: {
        _111 = move _114;                // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb72;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb76: {
        _130 = const _;                  // scope 15 at cita-network/src/cita_protocol.rs:179:15: 179:57
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:179:15: 179:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[1])) }
        _120 = _130 as &[&str] (Pointer(Unsize)); // scope 15 at cita-network/src/cita_protocol.rs:179:15: 179:57
        _119 = Arguments::<'_>::new_const(move _120) -> [return: bb77, unwind: bb89]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb77: {
        _129 = const _;                  // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(network_message_to_pubsub_message, [], Some(promoted[0])) }
        _118 = log::__private_api_log(move _119, _110, _129) -> [return: bb93, unwind: bb89]; // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb78: {
        _141 = const false;              // scope 14 at cita-network/src/cita_protocol.rs:182:9: 182:12
        _122 = move _105;                // scope 14 at cita-network/src/cita_protocol.rs:182:9: 182:12
        _126 = &(*_1);                   // scope 14 at cita-network/src/cita_protocol.rs:183:15: 183:27
        _125 = <BytesMut as Deref>::deref(move _126) -> [return: bb79, unwind: bb84]; // scope 14 at cita-network/src/cita_protocol.rs:183:15: 183:27
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:183:15: 183:27
                                         // + literal: Const { ty: for<'a> fn(&'a BytesMut) -> &'a <BytesMut as Deref>::Target {<BytesMut as Deref>::deref}, val: Value(<ZST>) }
    }

    bb79: {
        _124 = _125;                     // scope 14 at cita-network/src/cita_protocol.rs:183:15: 183:27
        _123 = slice::<impl [u8]>::to_vec(move _124) -> [return: bb80, unwind: bb84]; // scope 14 at cita-network/src/cita_protocol.rs:183:15: 183:27
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:183:19: 183:25
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb80: {
        _127 = _21;                      // scope 14 at cita-network/src/cita_protocol.rs:184:9: 184:13
        _128 = _28;                      // scope 14 at cita-network/src/cita_protocol.rs:185:9: 185:16
        _121 = NetMessageUnit { key: move _122, data: move _123, addr: move _127, version: move _128, ttl: _42 }; // scope 14 at cita-network/src/cita_protocol.rs:181:10: 187:6
        _0 = std::option::Option::<NetMessageUnit>::Some(move _121); // scope 14 at cita-network/src/cita_protocol.rs:181:5: 187:7
        _141 = const false;              // scope 12 at cita-network/src/cita_protocol.rs:188:1: 188:2
        drop(_82) -> [return: bb81, unwind: bb86]; // scope 8 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb81: {
        drop(_5) -> bb83;                // scope 0 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb82: {
        drop(_5) -> bb83;                // scope 0 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb83: {
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:188:2: 188:2
    }

    bb84 (cleanup): {
        drop(_122) -> bb89;              // scope 14 at cita-network/src/cita_protocol.rs:187:5: 187:6
    }

    bb85 (cleanup): {
        drop(_82) -> bb86;               // scope 8 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb86 (cleanup): {
        drop(_5) -> bb87;                // scope 0 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb87 (cleanup): {
        resume;                          // scope 0 at cita-network/src/cita_protocol.rs:134:1: 188:2
    }

    bb88 (cleanup): {
        drop(_105) -> bb85;              // scope 12 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb89 (cleanup): {
        switchInt(_141) -> [0: bb85, otherwise: bb88]; // scope 12 at cita-network/src/cita_protocol.rs:188:1: 188:2
    }

    bb90: {
        goto -> bb34;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb91: {
        goto -> bb49;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb92: {
        goto -> bb65;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb93: {
        goto -> bb78;                    // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network_message_to_pubsub_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:179:9: 179:58
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:179:9: 179:58

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:179:9: 179:58
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:179:9: 179:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:179:9: 179:58
        _1 = (move _2, move _4, move _6, const 179_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network_message_to_pubsub_message: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57

    bb0: {
        _1 = [const "[CitaProtocol] Network message is empty."]; // scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:179:15: 179:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:179:15: 179:57
    }
}

promoted[2] in network_message_to_pubsub_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in network_message_to_pubsub_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:171:9: 174:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:171:9: 174:10

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:171:9: 174:10
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:171:9: 174:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:171:9: 174:10
        _1 = (move _2, move _4, move _6, const 171_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in network_message_to_pubsub_message: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67

    bb0: {
        _1 = [const "[CitaProtocol] Network message parse key error ", const "."]; // scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:172:13: 172:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:172:13: 172:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:172:13: 172:67
    }
}

promoted[5] in network_message_to_pubsub_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in network_message_to_pubsub_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:161:9: 165:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:161:9: 165:10

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:161:9: 165:10
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:161:9: 165:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:161:9: 165:10
        _1 = (move _2, move _4, move _6, const 161_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in network_message_to_pubsub_message: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67

    bb0: {
        _1 = [const "[CitaProtocol] Buffer is not enough for key ", const " > ", const "."]; // scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:162:13: 162:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:162:13: 162:67
    }
}

promoted[8] in network_message_to_pubsub_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in network_message_to_pubsub_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:157:9: 157:63
    let mut _7: &str;                    // in scope 0 at cita-network/src/cita_protocol.rs:157:9: 157:63

    bb0: {
        _3 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::cita_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/cita_protocol.rs"; // scope 0 at cita-network/src/cita_protocol.rs:157:9: 157:63
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:157:9: 157:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/cita_protocol.rs:157:9: 157:63
        _1 = (move _2, move _4, move _6, const 157_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in network_message_to_pubsub_message: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62

    bb0: {
        _1 = [const "[CitaProtocol] Network message key is empty."]; // scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62
                                         // mir::Constant
                                         // + span: cita-network/src/cita_protocol.rs:157:16: 157:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62
        return;                          // scope 0 at cita-network/src/cita_protocol.rs:157:16: 157:62
    }
}

promoted[11] in network_message_to_pubsub_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn config::<impl at cita-network/src/config.rs:22:10: 22:15>::fmt(_1: &NetConfig, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:22:10: 22:15
    debug f => _2;                       // in scope 0 at cita-network/src/config.rs:22:10: 22:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:22:10: 22:15
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:22:10: 22:15
    let _4: &str;                        // in scope 0 at cita-network/src/config.rs:24:5: 24:28
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/config.rs:24:5: 24:28
    let _6: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:24:5: 24:28
    let _7: &str;                        // in scope 0 at cita-network/src/config.rs:25:5: 25:39
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/config.rs:25:5: 25:39
    let _9: &std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 0 at cita-network/src/config.rs:25:5: 25:39
    let _10: &str;                       // in scope 0 at cita-network/src/config.rs:26:5: 26:36
    let mut _11: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/config.rs:26:5: 26:36
    let _12: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:26:5: 26:36
    let _13: &str;                       // in scope 0 at cita-network/src/config.rs:27:5: 27:33
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/config.rs:27:5: 27:33
    let _15: &std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:27:5: 27:33
    let _16: &str;                       // in scope 0 at cita-network/src/config.rs:28:5: 28:39
    let mut _17: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/config.rs:28:5: 28:39
    let _18: &&std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:28:5: 28:39
    let _19: &std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:28:5: 28:39

    bb0: {
        _3 = const "NetConfig";          // scope 0 at cita-network/src/config.rs:22:10: 22:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:10: 22:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "port";               // scope 0 at cita-network/src/config.rs:24:5: 24:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:24:5: 24:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:24:5: 24:28
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:24:5: 24:28
        _7 = const "peers";              // scope 0 at cita-network/src/config.rs:25:5: 25:39
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:25:5: 25:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = &((*_1).1: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 0 at cita-network/src/config.rs:25:5: 25:39
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:25:5: 25:39
        _10 = const "max_connects";      // scope 0 at cita-network/src/config.rs:26:5: 26:36
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:26:5: 26:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &((*_1).2: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:26:5: 26:36
        _11 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:26:5: 26:36
        _13 = const "enable_tls";        // scope 0 at cita-network/src/config.rs:27:5: 27:33
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:27:5: 27:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = &((*_1).3: std::option::Option<bool>); // scope 0 at cita-network/src/config.rs:27:5: 27:33
        _14 = _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:27:5: 27:33
        _16 = const "enable_discovery";  // scope 0 at cita-network/src/config.rs:28:5: 28:39
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:28:5: 28:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _19 = &((*_1).4: std::option::Option<bool>); // scope 0 at cita-network/src/config.rs:28:5: 28:39
        _18 = &_19;                      // scope 0 at cita-network/src/config.rs:28:5: 28:39
        _17 = _18 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:28:5: 28:39
        _0 = std::fmt::Formatter::<'_>::debug_struct_field5_finish(_2, _3, _4, move _5, _7, move _8, _10, move _11, _13, move _14, _16, move _17) -> bb1; // scope 0 at cita-network/src/config.rs:22:10: 22:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:10: 22:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f), &'g str, &'h (dyn Debug + 'h), &'i str, &'j (dyn Debug + 'j), &'k str, &'l (dyn Debug + 'l)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field5_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:22:15: 22:15
    }
}

const _IMPL_DESERIALIZE_FOR_NetConfig: () = {
    let mut _0: ();                      // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _0 = const ();                   // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize(_1: __D) -> Result<NetConfig, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::NetConfig, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>>(move _1, const "NetConfig", const _, const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<NetConfig>, lifetime: PhantomData::<&()> }}) -> bb1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: fn(__D, &'static str, &'static [&'static str], _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>) -> Result<<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_> as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &[&str], val: Unevaluated(_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::FIELDS, [], None) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _3 = const "field identifier";   // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_u64(_1: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor, _2: u64) -> Result<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _3: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _4: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _5: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _6: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _7: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _8: __E;                     // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _9: config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Unexpected<'_>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _10: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _11: &&str;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        switchInt(_2) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb1: {
        _9 = Unexpected::<'_>::Unsigned(_2); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _11 = const _;                   // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor as Visitor<'de>>::visit_u64, [ReErased, __E], Some(promoted[0])) }
        _10 = _11 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _8 = <__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value(move _9, move _10) -> bb7; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(Unexpected<'a>, &'b (dyn Expected + 'b)) -> __E {<__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _3); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb3: {
        _4 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _4); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb4: {
        _5 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field2; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x02)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _5); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb5: {
        _6 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field3; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x03)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _6); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb6: {
        _7 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field4; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x04)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _7); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb7: {
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Err(move _8); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb8;                     // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb8: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_u64: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "field index 0 <= i < 5"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_str(_1: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor, _2: &str) -> Result<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _3: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _4: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _5: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _6: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _7: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _8: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _9: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _10: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _11: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _12: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _13: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "port") -> bb1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb2, otherwise: bb11]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb2: {
        _4 = <str as PartialEq>::eq(_2, const "peers") -> bb3; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb4, otherwise: bb12]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb4: {
        _5 = <str as PartialEq>::eq(_2, const "max_connects") -> bb5; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb5: {
        switchInt(move _5) -> [0: bb6, otherwise: bb13]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb6: {
        _6 = <str as PartialEq>::eq(_2, const "enable_tls") -> bb7; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        switchInt(move _6) -> [0: bb8, otherwise: bb14]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb8: {
        _7 = <str as PartialEq>::eq(_2, const "enable_discovery") -> bb9; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        switchInt(move _7) -> [0: bb10, otherwise: bb15]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb10: {
        _13 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x05)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _13); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb11: {
        _8 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _8); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb12: {
        _9 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _9); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb13: {
        _10 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field2; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x02)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _10); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb14: {
        _11 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field3; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x03)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _11); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb15: {
        _12 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field4; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x04)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _12); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb16;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb16: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor, _2: &[u8]) -> Result<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _3: usize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _4: usize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _5: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _6: usize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _7: usize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _8: bool;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _9: usize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _10: usize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _11: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _12: usize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _13: usize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _14: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _15: usize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _16: usize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _17: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _18: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _19: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _20: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _21: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _22: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _23: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _15 = Len((*_2));                // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _16 = const 4_usize;             // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _17 = Eq(move _15, move _16);    // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _17) -> [0: bb6, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb1: {
        switchInt((*_2)[0 of 4]) -> [112: bb2, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb2: {
        switchInt((*_2)[1 of 4]) -> [111: bb3, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb3: {
        switchInt((*_2)[2 of 4]) -> [114: bb4, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb4: {
        switchInt((*_2)[3 of 4]) -> [116: bb53, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb5: {
        _23 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x05)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _23); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb6: {
        _12 = Len((*_2));                // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _13 = const 5_usize;             // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _14 = Eq(move _12, move _13);    // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _14) -> [0: bb12, otherwise: bb7]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb7: {
        switchInt((*_2)[0 of 5]) -> [112: bb8, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb8: {
        switchInt((*_2)[1 of 5]) -> [101: bb9, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb9: {
        switchInt((*_2)[2 of 5]) -> [101: bb10, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb10: {
        switchInt((*_2)[3 of 5]) -> [114: bb11, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb11: {
        switchInt((*_2)[4 of 5]) -> [115: bb54, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb12: {
        _9 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _10 = const 12_usize;            // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _11 = Eq(move _9, move _10);     // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _11) -> [0: bb25, otherwise: bb13]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb13: {
        switchInt((*_2)[0 of 12]) -> [109: bb14, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb14: {
        switchInt((*_2)[1 of 12]) -> [97: bb15, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb15: {
        switchInt((*_2)[2 of 12]) -> [120: bb16, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb16: {
        switchInt((*_2)[3 of 12]) -> [95: bb17, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb17: {
        switchInt((*_2)[4 of 12]) -> [99: bb18, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb18: {
        switchInt((*_2)[5 of 12]) -> [111: bb19, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb19: {
        switchInt((*_2)[6 of 12]) -> [110: bb20, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb20: {
        switchInt((*_2)[7 of 12]) -> [110: bb21, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb21: {
        switchInt((*_2)[8 of 12]) -> [101: bb22, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb22: {
        switchInt((*_2)[9 of 12]) -> [99: bb23, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb23: {
        switchInt((*_2)[10 of 12]) -> [116: bb24, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb24: {
        switchInt((*_2)[11 of 12]) -> [115: bb55, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb25: {
        _6 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _7 = const 10_usize;             // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _8 = Eq(move _6, move _7);       // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _8) -> [0: bb36, otherwise: bb26]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb26: {
        switchInt((*_2)[0 of 10]) -> [101: bb27, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb27: {
        switchInt((*_2)[1 of 10]) -> [110: bb28, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb28: {
        switchInt((*_2)[2 of 10]) -> [97: bb29, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb29: {
        switchInt((*_2)[3 of 10]) -> [98: bb30, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb30: {
        switchInt((*_2)[4 of 10]) -> [108: bb31, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb31: {
        switchInt((*_2)[5 of 10]) -> [101: bb32, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb32: {
        switchInt((*_2)[6 of 10]) -> [95: bb33, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb33: {
        switchInt((*_2)[7 of 10]) -> [116: bb34, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb34: {
        switchInt((*_2)[8 of 10]) -> [108: bb35, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb35: {
        switchInt((*_2)[9 of 10]) -> [115: bb56, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb36: {
        _3 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _4 = const 16_usize;             // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _5 = Eq(move _3, move _4);       // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _5) -> [0: bb5, otherwise: bb37]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb37: {
        switchInt((*_2)[0 of 16]) -> [101: bb38, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb38: {
        switchInt((*_2)[1 of 16]) -> [110: bb39, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb39: {
        switchInt((*_2)[2 of 16]) -> [97: bb40, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb40: {
        switchInt((*_2)[3 of 16]) -> [98: bb41, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb41: {
        switchInt((*_2)[4 of 16]) -> [108: bb42, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb42: {
        switchInt((*_2)[5 of 16]) -> [101: bb43, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb43: {
        switchInt((*_2)[6 of 16]) -> [95: bb44, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb44: {
        switchInt((*_2)[7 of 16]) -> [100: bb45, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb45: {
        switchInt((*_2)[8 of 16]) -> [105: bb46, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb46: {
        switchInt((*_2)[9 of 16]) -> [115: bb47, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb47: {
        switchInt((*_2)[10 of 16]) -> [99: bb48, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb48: {
        switchInt((*_2)[11 of 16]) -> [111: bb49, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb49: {
        switchInt((*_2)[12 of 16]) -> [118: bb50, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb50: {
        switchInt((*_2)[13 of 16]) -> [101: bb51, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb51: {
        switchInt((*_2)[14 of 16]) -> [114: bb52, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb52: {
        switchInt((*_2)[15 of 16]) -> [121: bb57, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb53: {
        _18 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _18); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb54: {
        _19 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _19); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb55: {
        _20 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field2; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x02)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _20); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb56: {
        _21 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field3; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x03)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _21); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb57: {
        _22 = const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field::__field4; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, val: Value(Scalar(0x04)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, __E>::Ok(move _22); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb58;                    // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb58: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize(_1: __D) -> Result<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor>(move _1, const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor) -> bb1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor) -> Result<<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__FieldVisitor, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _3 = const "struct NetConfig";   // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq(_1: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<NetConfig, <__A as SeqAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<NetConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __seq => _2;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::NetConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _3: std::result::Result<std::option::Option<std::option::Option<usize>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _4: &mut __A;                // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _5: isize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _6: std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _7: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _8: isize;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _9: std::option::Option<usize>;  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _10: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _11: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _13: std::result::Result<std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _14: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _15: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _18: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _20: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _21: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _22: std::result::Result<std::option::Option<std::option::Option<usize>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _23: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _24: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _27: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _29: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _30: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _31: std::result::Result<std::option::Option<std::option::Option<bool>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _32: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _33: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _36: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _38: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _39: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _40: std::result::Result<std::option::Option<std::option::Option<bool>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _41: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _42: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _45: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _47: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _48: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _49: config::NetConfig;      // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _50: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _51: &&str;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    scope 1 {
        debug __field0 => _9;            // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let _12: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let _16: std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>; // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let _17: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let _19: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let mut _52: &&str;              // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        scope 5 {
            debug __field1 => _12;       // in scope 5 at cita-network/src/config.rs:22:17: 22:28
            let _25: std::option::Option<std::option::Option<usize>>; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
            let _26: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
            let _28: std::option::Option<usize>; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
            let mut _53: &&str;          // in scope 5 at cita-network/src/config.rs:22:17: 22:28
            scope 9 {
                debug __field2 => _28;   // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                let _34: std::option::Option<std::option::Option<bool>>; // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                let _35: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                let _37: std::option::Option<bool>; // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                let mut _54: &&str;      // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                scope 13 {
                    debug __field3 => _37; // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                    let _43: std::option::Option<std::option::Option<bool>>; // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                    let _44: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                    let _46: std::option::Option<bool>; // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                    let mut _55: &&str;  // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                    scope 17 {
                        debug __field4 => _46; // in scope 17 at cita-network/src/config.rs:22:17: 22:28
                    }
                    scope 18 {
                        debug __val => _43; // in scope 18 at cita-network/src/config.rs:22:17: 22:28
                    }
                    scope 19 {
                        debug __err => _44; // in scope 19 at cita-network/src/config.rs:22:17: 22:28
                    }
                    scope 20 {
                        debug __value => _46; // in scope 20 at cita-network/src/config.rs:22:17: 22:28
                    }
                }
                scope 14 {
                    debug __val => _34;  // in scope 14 at cita-network/src/config.rs:22:17: 22:28
                }
                scope 15 {
                    debug __err => _35;  // in scope 15 at cita-network/src/config.rs:22:17: 22:28
                }
                scope 16 {
                    debug __value => _37; // in scope 16 at cita-network/src/config.rs:22:17: 22:28
                }
            }
            scope 10 {
                debug __val => _25;      // in scope 10 at cita-network/src/config.rs:22:17: 22:28
            }
            scope 11 {
                debug __err => _26;      // in scope 11 at cita-network/src/config.rs:22:17: 22:28
            }
            scope 12 {
                debug __value => _28;    // in scope 12 at cita-network/src/config.rs:22:17: 22:28
            }
        }
        scope 6 {
            debug __val => _16;          // in scope 6 at cita-network/src/config.rs:22:17: 22:28
        }
        scope 7 {
            debug __err => _17;          // in scope 7 at cita-network/src/config.rs:22:17: 22:28
        }
        scope 8 {
            debug __value => _19;        // in scope 8 at cita-network/src/config.rs:22:17: 22:28
        }
    }
    scope 2 {
        debug __val => _6;               // in scope 2 at cita-network/src/config.rs:22:17: 22:28
    }
    scope 3 {
        debug __err => _7;               // in scope 3 at cita-network/src/config.rs:22:17: 22:28
    }
    scope 4 {
        debug __value => _9;             // in scope 4 at cita-network/src/config.rs:22:17: 22:28
    }

    bb0: {
        _4 = &mut _2;                    // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _3 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>(_4) -> [return: bb1, unwind: bb45]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:24:5: 24:8
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<usize>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = discriminant(_3);           // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _5) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb2: {
        _7 = move ((_3 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _7); // scope 3 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb42;                    // scope 0 at no-location
    }

    bb3: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb4: {
        _6 = ((_3 as Ok).0: std::option::Option<std::option::Option<usize>>); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _8 = discriminant(_6);           // scope 0 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _8) -> [0: bb5, 1: bb7, otherwise: bb6]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb5: {
        _51 = const _;                   // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[0])) }
        _11 = _51 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _10 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 0_usize, move _11) -> [return: bb8, unwind: bb45]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb7: {
        _9 = ((_6 as Some).0: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _14 = &mut _2;                   // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _13 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<Vec<PeerConfig>>>(_14) -> [return: bb9, unwind: bb45]; // scope 1 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:25:5: 25:8
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<Vec<PeerConfig>>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<Vec<PeerConfig>>>}, val: Value(<ZST>) }
    }

    bb8: {
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _10); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb42;                    // scope 0 at no-location
    }

    bb9: {
        _15 = discriminant(_13);         // scope 1 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _15) -> [0: bb12, 1: bb10, otherwise: bb11]; // scope 1 at cita-network/src/config.rs:22:17: 22:28
    }

    bb10: {
        _17 = move ((_13 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _17); // scope 7 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb42;                    // scope 1 at no-location
    }

    bb11: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:22:17: 22:28
    }

    bb12: {
        _16 = move ((_13 as Ok).0: std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>); // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _18 = discriminant(_16);         // scope 1 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _18) -> [0: bb13, 1: bb15, otherwise: bb14]; // scope 1 at cita-network/src/config.rs:22:17: 22:28
    }

    bb13: {
        _52 = const _;                   // scope 1 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[1])) }
        _21 = _52 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _20 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 1_usize, move _21) -> [return: bb16, unwind: bb45]; // scope 1 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb14: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:22:17: 22:28
    }

    bb15: {
        _19 = move ((_16 as Some).0: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _12 = move _19;                  // scope 8 at cita-network/src/config.rs:22:17: 22:28
        _23 = &mut _2;                   // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _22 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>(_23) -> [return: bb17, unwind: bb44]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:26:5: 26:8
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<usize>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _20); // scope 1 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb42;                    // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb17: {
        _24 = discriminant(_22);         // scope 5 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _24) -> [0: bb20, 1: bb18, otherwise: bb19]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb18: {
        _26 = move ((_22 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _26); // scope 11 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 5 at no-location
    }

    bb19: {
        unreachable;                     // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb20: {
        _25 = ((_22 as Ok).0: std::option::Option<std::option::Option<usize>>); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _27 = discriminant(_25);         // scope 5 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _27) -> [0: bb21, 1: bb23, otherwise: bb22]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb21: {
        _53 = const _;                   // scope 5 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[2])) }
        _30 = _53 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _29 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 2_usize, move _30) -> [return: bb24, unwind: bb44]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb22: {
        unreachable;                     // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb23: {
        _28 = ((_25 as Some).0: std::option::Option<usize>); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _32 = &mut _2;                   // scope 9 at cita-network/src/config.rs:22:17: 22:28
        _31 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<bool>>(_32) -> [return: bb25, unwind: bb44]; // scope 9 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:27:5: 27:8
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<bool>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<bool>>}, val: Value(<ZST>) }
    }

    bb24: {
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _29); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 5 at no-location
    }

    bb25: {
        _33 = discriminant(_31);         // scope 9 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _33) -> [0: bb28, 1: bb26, otherwise: bb27]; // scope 9 at cita-network/src/config.rs:22:17: 22:28
    }

    bb26: {
        _35 = move ((_31 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 9 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _35); // scope 15 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 9 at no-location
    }

    bb27: {
        unreachable;                     // scope 9 at cita-network/src/config.rs:22:17: 22:28
    }

    bb28: {
        _34 = ((_31 as Ok).0: std::option::Option<std::option::Option<bool>>); // scope 9 at cita-network/src/config.rs:22:17: 22:28
        _36 = discriminant(_34);         // scope 9 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _36) -> [0: bb29, 1: bb31, otherwise: bb30]; // scope 9 at cita-network/src/config.rs:22:17: 22:28
    }

    bb29: {
        _54 = const _;                   // scope 9 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[3])) }
        _39 = _54 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 9 at cita-network/src/config.rs:22:17: 22:28
        _38 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 3_usize, move _39) -> [return: bb32, unwind: bb44]; // scope 9 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb30: {
        unreachable;                     // scope 9 at cita-network/src/config.rs:22:17: 22:28
    }

    bb31: {
        _37 = ((_34 as Some).0: std::option::Option<bool>); // scope 9 at cita-network/src/config.rs:22:17: 22:28
        _41 = &mut _2;                   // scope 13 at cita-network/src/config.rs:22:17: 22:28
        _40 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<bool>>(_41) -> [return: bb33, unwind: bb44]; // scope 13 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:28:5: 28:8
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<bool>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<bool>>}, val: Value(<ZST>) }
    }

    bb32: {
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _38); // scope 9 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 9 at no-location
    }

    bb33: {
        _42 = discriminant(_40);         // scope 13 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _42) -> [0: bb36, 1: bb34, otherwise: bb35]; // scope 13 at cita-network/src/config.rs:22:17: 22:28
    }

    bb34: {
        _44 = move ((_40 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 13 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _44); // scope 19 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 13 at no-location
    }

    bb35: {
        unreachable;                     // scope 13 at cita-network/src/config.rs:22:17: 22:28
    }

    bb36: {
        _43 = ((_40 as Ok).0: std::option::Option<std::option::Option<bool>>); // scope 13 at cita-network/src/config.rs:22:17: 22:28
        _45 = discriminant(_43);         // scope 13 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _45) -> [0: bb37, 1: bb39, otherwise: bb38]; // scope 13 at cita-network/src/config.rs:22:17: 22:28
    }

    bb37: {
        _55 = const _;                   // scope 13 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[4])) }
        _48 = _55 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 13 at cita-network/src/config.rs:22:17: 22:28
        _47 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 4_usize, move _48) -> [return: bb40, unwind: bb44]; // scope 13 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb38: {
        unreachable;                     // scope 13 at cita-network/src/config.rs:22:17: 22:28
    }

    bb39: {
        _46 = ((_43 as Some).0: std::option::Option<bool>); // scope 13 at cita-network/src/config.rs:22:17: 22:28
        _50 = move _12;                  // scope 17 at cita-network/src/config.rs:22:17: 22:28
        _49 = NetConfig { port: _9, peers: move _50, max_connects: _28, enable_tls: _37, enable_discovery: _46 }; // scope 17 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Ok(move _49); // scope 17 at cita-network/src/config.rs:22:17: 22:28
        drop(_2) -> bb43;                // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb40: {
        _0 = Result::<NetConfig, <__A as SeqAccess<'_>>::Error>::Err(move _47); // scope 13 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb41;                    // scope 13 at no-location
    }

    bb41: {
        drop(_12) -> [return: bb42, unwind: bb45]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb42: {
        drop(_2) -> bb43;                // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb43: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }

    bb44 (cleanup): {
        drop(_12) -> bb45;               // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb45 (cleanup): {
        drop(_2) -> bb46;                // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb46 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "struct NetConfig with 5 elements"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[1] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "struct NetConfig with 5 elements"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[2] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "struct NetConfig with 5 elements"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[3] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "struct NetConfig with 5 elements"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[4] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = const "struct NetConfig with 5 elements"; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

fn _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::<impl at cita-network/src/config.rs:22:17: 22:28>::visit_map(_1: _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<NetConfig, <__A as MapAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<NetConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    debug __map => _2;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _0: std::result::Result<config::NetConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _3: std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _8: std::result::Result<std::option::Option<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _9: &mut __A;                // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _10: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _13: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _15: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _16: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _17: &std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _18: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _19: std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _20: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _21: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _22: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _25: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _26: &std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _27: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _28: std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _29: std::result::Result<std::option::Option<std::vec::Vec<config::PeerConfig>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _30: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _31: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _34: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _35: &std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _36: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _37: std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _38: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _39: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _40: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _43: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _44: &std::option::Option<std::option::Option<bool>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _45: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _46: std::option::Option<std::option::Option<bool>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _47: std::result::Result<std::option::Option<bool>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _48: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _49: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _52: bool;                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _53: &std::option::Option<std::option::Option<bool>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _54: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _55: std::option::Option<std::option::Option<bool>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _56: std::result::Result<std::option::Option<bool>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _57: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _58: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _61: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::IgnoredAny, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _62: &mut __A;               // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _63: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _66: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _68: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _69: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _73: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _75: std::result::Result<std::option::Option<std::vec::Vec<config::PeerConfig>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _76: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _80: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _82: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _83: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _87: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _89: std::result::Result<std::option::Option<bool>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _90: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _94: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _96: std::result::Result<std::option::Option<bool>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _97: isize;                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _100: config::NetConfig;     // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _101: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _102: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _103: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _104: std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _105: std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _106: bool;                  // in scope 0 at cita-network/src/config.rs:22:27: 22:28
    let mut _107: isize;                 // in scope 0 at cita-network/src/config.rs:22:27: 22:28
    let mut _108: isize;                 // in scope 0 at cita-network/src/config.rs:22:27: 22:28
    scope 1 {
        debug __field0 => _3;            // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        let mut _4: std::option::Option<std::option::Option<std::vec::Vec<config::PeerConfig>>>; // in scope 1 at cita-network/src/config.rs:22:17: 22:28
        scope 2 {
            debug __field1 => _4;        // in scope 2 at cita-network/src/config.rs:22:17: 22:28
            let mut _5: std::option::Option<std::option::Option<usize>>; // in scope 2 at cita-network/src/config.rs:22:17: 22:28
            scope 3 {
                debug __field2 => _5;    // in scope 3 at cita-network/src/config.rs:22:17: 22:28
                let mut _6: std::option::Option<std::option::Option<bool>>; // in scope 3 at cita-network/src/config.rs:22:17: 22:28
                scope 4 {
                    debug __field3 => _6; // in scope 4 at cita-network/src/config.rs:22:17: 22:28
                    let mut _7: std::option::Option<std::option::Option<bool>>; // in scope 4 at cita-network/src/config.rs:22:17: 22:28
                    scope 5 {
                        debug __field4 => _7; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
                        let _65: std::option::Option<usize>; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
                        let _67: std::option::Option<usize>; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
                        let _70: std::option::Option<usize>; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
                        let _71: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 5 at cita-network/src/config.rs:22:17: 22:28
                        scope 6 {
                            debug __key => _14; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _11: std::option::Option<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _12: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _14: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _23: std::option::Option<usize>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _24: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _32: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _33: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _41: std::option::Option<usize>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _42: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _50: std::option::Option<bool>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _51: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _59: std::option::Option<bool>; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _60: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            let _64: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 6 at cita-network/src/config.rs:22:17: 22:28
                            scope 7 {
                                debug __val => _11; // in scope 7 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 8 {
                                debug __err => _12; // in scope 8 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 9 {
                                debug __val => _23; // in scope 9 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 10 {
                                debug __err => _24; // in scope 10 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 11 {
                                debug __val => _32; // in scope 11 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 12 {
                                debug __err => _33; // in scope 12 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 13 {
                                debug __val => _41; // in scope 13 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 14 {
                                debug __err => _42; // in scope 14 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 15 {
                                debug __val => _50; // in scope 15 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 16 {
                                debug __err => _51; // in scope 16 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 17 {
                                debug __val => _59; // in scope 17 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 18 {
                                debug __err => _60; // in scope 18 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 19 {
                            }
                            scope 20 {
                                debug __val => const IgnoredAny; // in scope 20 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 21 {
                                debug __err => _64; // in scope 21 at cita-network/src/config.rs:22:17: 22:28
                            }
                        }
                        scope 22 {
                            debug __field0 => _65; // in scope 22 at cita-network/src/config.rs:22:17: 22:28
                            let _72: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 22 at cita-network/src/config.rs:22:17: 22:28
                            let _74: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 22 at cita-network/src/config.rs:22:17: 22:28
                            let _77: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 22 at cita-network/src/config.rs:22:17: 22:28
                            let _78: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 22 at cita-network/src/config.rs:22:17: 22:28
                            scope 26 {
                                debug __field1 => _72; // in scope 26 at cita-network/src/config.rs:22:17: 22:28
                                let _79: std::option::Option<usize>; // in scope 26 at cita-network/src/config.rs:22:17: 22:28
                                let _81: std::option::Option<usize>; // in scope 26 at cita-network/src/config.rs:22:17: 22:28
                                let _84: std::option::Option<usize>; // in scope 26 at cita-network/src/config.rs:22:17: 22:28
                                let _85: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 26 at cita-network/src/config.rs:22:17: 22:28
                                scope 30 {
                                    debug __field2 => _79; // in scope 30 at cita-network/src/config.rs:22:17: 22:28
                                    let _86: std::option::Option<bool>; // in scope 30 at cita-network/src/config.rs:22:17: 22:28
                                    let _88: std::option::Option<bool>; // in scope 30 at cita-network/src/config.rs:22:17: 22:28
                                    let _91: std::option::Option<bool>; // in scope 30 at cita-network/src/config.rs:22:17: 22:28
                                    let _92: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 30 at cita-network/src/config.rs:22:17: 22:28
                                    scope 34 {
                                        debug __field3 => _86; // in scope 34 at cita-network/src/config.rs:22:17: 22:28
                                        let _93: std::option::Option<bool>; // in scope 34 at cita-network/src/config.rs:22:17: 22:28
                                        let _95: std::option::Option<bool>; // in scope 34 at cita-network/src/config.rs:22:17: 22:28
                                        let _98: std::option::Option<bool>; // in scope 34 at cita-network/src/config.rs:22:17: 22:28
                                        let _99: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 34 at cita-network/src/config.rs:22:17: 22:28
                                        scope 38 {
                                            debug __field4 => _93; // in scope 38 at cita-network/src/config.rs:22:17: 22:28
                                        }
                                        scope 39 {
                                            debug __field4 => _95; // in scope 39 at cita-network/src/config.rs:22:17: 22:28
                                        }
                                        scope 40 {
                                            debug __val => _98; // in scope 40 at cita-network/src/config.rs:22:17: 22:28
                                        }
                                        scope 41 {
                                            debug __err => _99; // in scope 41 at cita-network/src/config.rs:22:17: 22:28
                                        }
                                    }
                                    scope 35 {
                                        debug __field3 => _88; // in scope 35 at cita-network/src/config.rs:22:17: 22:28
                                    }
                                    scope 36 {
                                        debug __val => _91; // in scope 36 at cita-network/src/config.rs:22:17: 22:28
                                    }
                                    scope 37 {
                                        debug __err => _92; // in scope 37 at cita-network/src/config.rs:22:17: 22:28
                                    }
                                }
                                scope 31 {
                                    debug __field2 => _81; // in scope 31 at cita-network/src/config.rs:22:17: 22:28
                                }
                                scope 32 {
                                    debug __val => _84; // in scope 32 at cita-network/src/config.rs:22:17: 22:28
                                }
                                scope 33 {
                                    debug __err => _85; // in scope 33 at cita-network/src/config.rs:22:17: 22:28
                                }
                            }
                            scope 27 {
                                debug __field1 => _74; // in scope 27 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 28 {
                                debug __val => _77; // in scope 28 at cita-network/src/config.rs:22:17: 22:28
                            }
                            scope 29 {
                                debug __err => _78; // in scope 29 at cita-network/src/config.rs:22:17: 22:28
                            }
                        }
                        scope 23 {
                            debug __field0 => _67; // in scope 23 at cita-network/src/config.rs:22:17: 22:28
                        }
                        scope 24 {
                            debug __val => _70; // in scope 24 at cita-network/src/config.rs:22:17: 22:28
                        }
                        scope 25 {
                            debug __err => _71; // in scope 25 at cita-network/src/config.rs:22:17: 22:28
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _106 = const false;              // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _3 = std::option::Option::<std::option::Option<usize>>::None; // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _106 = const true;               // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _4 = std::option::Option::<std::option::Option<Vec<PeerConfig>>>::None; // scope 1 at cita-network/src/config.rs:22:17: 22:28
        _5 = std::option::Option::<std::option::Option<usize>>::None; // scope 2 at cita-network/src/config.rs:22:17: 22:28
        _6 = std::option::Option::<std::option::Option<bool>>::None; // scope 3 at cita-network/src/config.rs:22:17: 22:28
        _7 = std::option::Option::<std::option::Option<bool>>::None; // scope 4 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb1: {
        _9 = &mut _2;                    // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _8 = <__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field>(_9) -> [return: bb2, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::__Field>}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = discriminant(_8);          // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _10) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb3: {
        _12 = move ((_8 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _12); // scope 8 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb4: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb5: {
        _11 = move ((_8 as Ok).0: std::option::Option<config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _13 = discriminant(_11);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _13) -> [1: bb7, otherwise: bb6]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb6: {
        _66 = discriminant(_3);          // scope 5 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _66) -> [0: bb59, 1: bb61, otherwise: bb60]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb7: {
        _14 = move ((_11 as Some).0: config::_IMPL_DESERIALIZE_FOR_NetConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::NetConfig>::deserialize::__Field); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _15 = discriminant(_14);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _15) -> [0: bb9, 1: bb18, 2: bb29, 3: bb38, 4: bb47, otherwise: bb8]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb8: {
        _62 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _61 = <__A as MapAccess<'_>>::next_value::<IgnoredAny>(_62) -> [return: bb56, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<IgnoredAny, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<IgnoredAny>}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = &_3;                       // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _16 = std::option::Option::<std::option::Option<usize>>::is_some(_17) -> [return: bb10, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<usize>>) -> bool {std::option::Option::<std::option::Option<usize>>::is_some}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _16) -> [0: bb13, otherwise: bb11]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb11: {
        _18 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "port") -> [return: bb12, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _18); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb13: {
        _21 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _20 = <__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>(_21) -> [return: bb14, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:24:5: 24:8
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb14: {
        _22 = discriminant(_20);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _22) -> [0: bb17, 1: bb15, otherwise: bb16]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb15: {
        _24 = move ((_20 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _24); // scope 10 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb16: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb17: {
        _23 = ((_20 as Ok).0: std::option::Option<usize>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _19 = std::option::Option::<std::option::Option<usize>>::Some(_23); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _3 = move _19;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb18: {
        _26 = &_4;                       // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _25 = std::option::Option::<std::option::Option<Vec<PeerConfig>>>::is_some(_26) -> [return: bb19, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<Vec<PeerConfig>>>) -> bool {std::option::Option::<std::option::Option<Vec<PeerConfig>>>::is_some}, val: Value(<ZST>) }
    }

    bb19: {
        switchInt(move _25) -> [0: bb22, otherwise: bb20]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb20: {
        _27 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "peers") -> [return: bb21, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb21: {
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _27); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb22: {
        _30 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _29 = <__A as MapAccess<'_>>::next_value::<std::option::Option<Vec<PeerConfig>>>(_30) -> [return: bb23, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:25:5: 25:8
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<Vec<PeerConfig>>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<Vec<PeerConfig>>>}, val: Value(<ZST>) }
    }

    bb23: {
        _31 = discriminant(_29);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _31) -> [0: bb26, 1: bb24, otherwise: bb25]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb24: {
        _33 = move ((_29 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _33); // scope 12 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb25: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb26: {
        _32 = move ((_29 as Ok).0: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _28 = std::option::Option::<std::option::Option<Vec<PeerConfig>>>::Some(move _32); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        drop(_4) -> [return: bb27, unwind: bb28]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb27: {
        _106 = const true;               // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _4 = move _28;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb28 (cleanup): {
        _106 = const true;               // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _4 = move _28;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb110;                   // scope 6 at cita-network/src/config.rs:22:27: 22:28
    }

    bb29: {
        _35 = &_5;                       // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _34 = std::option::Option::<std::option::Option<usize>>::is_some(_35) -> [return: bb30, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<usize>>) -> bool {std::option::Option::<std::option::Option<usize>>::is_some}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _34) -> [0: bb33, otherwise: bb31]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb31: {
        _36 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "max_connects") -> [return: bb32, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb32: {
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _36); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb33: {
        _39 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _38 = <__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>(_39) -> [return: bb34, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:26:5: 26:8
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb34: {
        _40 = discriminant(_38);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _40) -> [0: bb37, 1: bb35, otherwise: bb36]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb35: {
        _42 = move ((_38 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _42); // scope 14 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb36: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb37: {
        _41 = ((_38 as Ok).0: std::option::Option<usize>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _37 = std::option::Option::<std::option::Option<usize>>::Some(_41); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _5 = move _37;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb38: {
        _44 = &_6;                       // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _43 = std::option::Option::<std::option::Option<bool>>::is_some(_44) -> [return: bb39, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<bool>>) -> bool {std::option::Option::<std::option::Option<bool>>::is_some}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _43) -> [0: bb42, otherwise: bb40]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb40: {
        _45 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "enable_tls") -> [return: bb41, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb41: {
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _45); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb42: {
        _48 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _47 = <__A as MapAccess<'_>>::next_value::<std::option::Option<bool>>(_48) -> [return: bb43, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:27:5: 27:8
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<bool>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<bool>>}, val: Value(<ZST>) }
    }

    bb43: {
        _49 = discriminant(_47);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _49) -> [0: bb46, 1: bb44, otherwise: bb45]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb44: {
        _51 = move ((_47 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _51); // scope 16 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb45: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb46: {
        _50 = ((_47 as Ok).0: std::option::Option<bool>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _46 = std::option::Option::<std::option::Option<bool>>::Some(_50); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _6 = move _46;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb47: {
        _53 = &_7;                       // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _52 = std::option::Option::<std::option::Option<bool>>::is_some(_53) -> [return: bb48, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(23)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<bool>>) -> bool {std::option::Option::<std::option::Option<bool>>::is_some}, val: Value(<ZST>) }
    }

    bb48: {
        switchInt(move _52) -> [0: bb51, otherwise: bb49]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb49: {
        _54 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "enable_discovery") -> [return: bb50, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb50: {
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _54); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb51: {
        _57 = &mut _2;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _56 = <__A as MapAccess<'_>>::next_value::<std::option::Option<bool>>(_57) -> [return: bb52, unwind: bb110]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:28:5: 28:8
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<bool>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<bool>>}, val: Value(<ZST>) }
    }

    bb52: {
        _58 = discriminant(_56);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _58) -> [0: bb55, 1: bb53, otherwise: bb54]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb53: {
        _60 = move ((_56 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _60); // scope 18 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb54: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb55: {
        _59 = ((_56 as Ok).0: std::option::Option<bool>); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _55 = std::option::Option::<std::option::Option<bool>>::Some(_59); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _7 = move _55;                   // scope 6 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb1;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb56: {
        _63 = discriminant(_61);         // scope 6 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _63) -> [0: bb1, 1: bb57, otherwise: bb58]; // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb57: {
        _64 = move ((_61 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 6 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _64); // scope 21 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 6 at no-location
    }

    bb58: {
        unreachable;                     // scope 6 at cita-network/src/config.rs:22:17: 22:28
    }

    bb59: {
        _68 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>(const "port") -> [return: bb62, unwind: bb110]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:24:5: 24:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb60: {
        unreachable;                     // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb61: {
        _67 = ((_3 as Some).0: std::option::Option<usize>); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _65 = _67;                       // scope 23 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb66;                    // scope 5 at cita-network/src/config.rs:22:27: 22:28
    }

    bb62: {
        _69 = discriminant(_68);         // scope 5 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _69) -> [0: bb65, 1: bb63, otherwise: bb64]; // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb63: {
        _71 = move ((_68 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _71); // scope 25 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 5 at no-location
    }

    bb64: {
        unreachable;                     // scope 5 at cita-network/src/config.rs:22:17: 22:28
    }

    bb65: {
        _70 = ((_68 as Ok).0: std::option::Option<usize>); // scope 5 at cita-network/src/config.rs:22:17: 22:28
        _65 = _70;                       // scope 24 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb66;                    // scope 5 at cita-network/src/config.rs:22:27: 22:28
    }

    bb66: {
        _73 = discriminant(_4);          // scope 22 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _73) -> [0: bb67, 1: bb69, otherwise: bb68]; // scope 22 at cita-network/src/config.rs:22:17: 22:28
    }

    bb67: {
        _75 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<Vec<PeerConfig>>, <__A as MapAccess<'_>>::Error>(const "peers") -> [return: bb70, unwind: bb110]; // scope 22 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:25:5: 25:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<Vec<PeerConfig>>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<Vec<PeerConfig>>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb68: {
        unreachable;                     // scope 22 at cita-network/src/config.rs:22:17: 22:28
    }

    bb69: {
        _106 = const false;              // scope 22 at cita-network/src/config.rs:22:17: 22:28
        _74 = move ((_4 as Some).0: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 22 at cita-network/src/config.rs:22:17: 22:28
        _72 = move _74;                  // scope 27 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb74;                    // scope 22 at cita-network/src/config.rs:22:27: 22:28
    }

    bb70: {
        _76 = discriminant(_75);         // scope 22 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _76) -> [0: bb73, 1: bb71, otherwise: bb72]; // scope 22 at cita-network/src/config.rs:22:17: 22:28
    }

    bb71: {
        _78 = move ((_75 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 22 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _78); // scope 29 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb100;                   // scope 22 at no-location
    }

    bb72: {
        unreachable;                     // scope 22 at cita-network/src/config.rs:22:17: 22:28
    }

    bb73: {
        _77 = move ((_75 as Ok).0: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 22 at cita-network/src/config.rs:22:17: 22:28
        _72 = move _77;                  // scope 28 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb74;                    // scope 22 at cita-network/src/config.rs:22:27: 22:28
    }

    bb74: {
        _80 = discriminant(_5);          // scope 26 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _80) -> [0: bb75, 1: bb77, otherwise: bb76]; // scope 26 at cita-network/src/config.rs:22:17: 22:28
    }

    bb75: {
        _82 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>(const "max_connects") -> [return: bb78, unwind: bb102]; // scope 26 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:26:5: 26:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb76: {
        unreachable;                     // scope 26 at cita-network/src/config.rs:22:17: 22:28
    }

    bb77: {
        _81 = ((_5 as Some).0: std::option::Option<usize>); // scope 26 at cita-network/src/config.rs:22:17: 22:28
        _79 = _81;                       // scope 31 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb82;                    // scope 26 at cita-network/src/config.rs:22:27: 22:28
    }

    bb78: {
        _83 = discriminant(_82);         // scope 26 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _83) -> [0: bb81, 1: bb79, otherwise: bb80]; // scope 26 at cita-network/src/config.rs:22:17: 22:28
    }

    bb79: {
        _85 = move ((_82 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 26 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _85); // scope 33 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb99;                    // scope 26 at no-location
    }

    bb80: {
        unreachable;                     // scope 26 at cita-network/src/config.rs:22:17: 22:28
    }

    bb81: {
        _84 = ((_82 as Ok).0: std::option::Option<usize>); // scope 26 at cita-network/src/config.rs:22:17: 22:28
        _79 = _84;                       // scope 32 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb82;                    // scope 26 at cita-network/src/config.rs:22:27: 22:28
    }

    bb82: {
        _87 = discriminant(_6);          // scope 30 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _87) -> [0: bb83, 1: bb85, otherwise: bb84]; // scope 30 at cita-network/src/config.rs:22:17: 22:28
    }

    bb83: {
        _89 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<bool>, <__A as MapAccess<'_>>::Error>(const "enable_tls") -> [return: bb86, unwind: bb102]; // scope 30 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:27:5: 27:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<bool>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<bool>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb84: {
        unreachable;                     // scope 30 at cita-network/src/config.rs:22:17: 22:28
    }

    bb85: {
        _88 = ((_6 as Some).0: std::option::Option<bool>); // scope 30 at cita-network/src/config.rs:22:17: 22:28
        _86 = _88;                       // scope 35 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb90;                    // scope 30 at cita-network/src/config.rs:22:27: 22:28
    }

    bb86: {
        _90 = discriminant(_89);         // scope 30 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _90) -> [0: bb89, 1: bb87, otherwise: bb88]; // scope 30 at cita-network/src/config.rs:22:17: 22:28
    }

    bb87: {
        _92 = move ((_89 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 30 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _92); // scope 37 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb99;                    // scope 30 at no-location
    }

    bb88: {
        unreachable;                     // scope 30 at cita-network/src/config.rs:22:17: 22:28
    }

    bb89: {
        _91 = ((_89 as Ok).0: std::option::Option<bool>); // scope 30 at cita-network/src/config.rs:22:17: 22:28
        _86 = _91;                       // scope 36 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb90;                    // scope 30 at cita-network/src/config.rs:22:27: 22:28
    }

    bb90: {
        _94 = discriminant(_7);          // scope 34 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _94) -> [0: bb91, 1: bb93, otherwise: bb92]; // scope 34 at cita-network/src/config.rs:22:17: 22:28
    }

    bb91: {
        _96 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<bool>, <__A as MapAccess<'_>>::Error>(const "enable_discovery") -> [return: bb94, unwind: bb102]; // scope 34 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:28:5: 28:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<bool>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<bool>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb92: {
        unreachable;                     // scope 34 at cita-network/src/config.rs:22:17: 22:28
    }

    bb93: {
        _95 = ((_7 as Some).0: std::option::Option<bool>); // scope 34 at cita-network/src/config.rs:22:17: 22:28
        _93 = _95;                       // scope 39 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb98;                    // scope 34 at cita-network/src/config.rs:22:27: 22:28
    }

    bb94: {
        _97 = discriminant(_96);         // scope 34 at cita-network/src/config.rs:22:17: 22:28
        switchInt(move _97) -> [0: bb97, 1: bb95, otherwise: bb96]; // scope 34 at cita-network/src/config.rs:22:17: 22:28
    }

    bb95: {
        _99 = move ((_96 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 34 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Err(move _99); // scope 41 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb99;                    // scope 34 at no-location
    }

    bb96: {
        unreachable;                     // scope 34 at cita-network/src/config.rs:22:17: 22:28
    }

    bb97: {
        _98 = ((_96 as Ok).0: std::option::Option<bool>); // scope 34 at cita-network/src/config.rs:22:17: 22:28
        _93 = _98;                       // scope 40 at cita-network/src/config.rs:22:17: 22:28
        goto -> bb98;                    // scope 34 at cita-network/src/config.rs:22:27: 22:28
    }

    bb98: {
        _101 = _65;                      // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _102 = move _72;                 // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _103 = _79;                      // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _104 = _86;                      // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _105 = _93;                      // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _100 = NetConfig { port: move _101, peers: move _102, max_connects: move _103, enable_tls: move _104, enable_discovery: move _105 }; // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _0 = Result::<NetConfig, <__A as MapAccess<'_>>::Error>::Ok(move _100); // scope 38 at cita-network/src/config.rs:22:17: 22:28
        _106 = const false;              // scope 1 at cita-network/src/config.rs:22:27: 22:28
        drop(_2) -> bb101;               // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb99: {
        drop(_72) -> [return: bb100, unwind: bb110]; // scope 22 at cita-network/src/config.rs:22:27: 22:28
    }

    bb100: {
        _107 = discriminant(_4);         // scope 1 at cita-network/src/config.rs:22:27: 22:28
        switchInt(move _107) -> [1: bb106, otherwise: bb105]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb101: {
        return;                          // scope 0 at cita-network/src/config.rs:22:28: 22:28
    }

    bb102 (cleanup): {
        drop(_72) -> bb110;              // scope 22 at cita-network/src/config.rs:22:27: 22:28
    }

    bb103 (cleanup): {
        drop(_2) -> bb104;               // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb104 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }

    bb105: {
        _106 = const false;              // scope 1 at cita-network/src/config.rs:22:27: 22:28
        drop(_2) -> bb101;               // scope 0 at cita-network/src/config.rs:22:27: 22:28
    }

    bb106: {
        switchInt(_106) -> [0: bb105, otherwise: bb107]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb107: {
        drop(((_4 as Some).0: std::option::Option<std::vec::Vec<config::PeerConfig>>)) -> [return: bb105, unwind: bb103]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb108 (cleanup): {
        switchInt(_106) -> [0: bb103, otherwise: bb109]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb109 (cleanup): {
        drop(((_4 as Some).0: std::option::Option<std::vec::Vec<config::PeerConfig>>)) -> bb103; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }

    bb110 (cleanup): {
        _108 = discriminant(_4);         // scope 1 at cita-network/src/config.rs:22:27: 22:28
        switchInt(move _108) -> [1: bb108, otherwise: bb103]; // scope 1 at cita-network/src/config.rs:22:27: 22:28
    }
}

const _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: &[&str; 5];              // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _2: &[&str; 5];                  // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let _3: [&str; 5];                   // in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _4: &[&str; 5];              // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/config.rs:22:17: 22:28
        StorageLive(_2);                 // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _4 = const _;                    // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &[&str; 5], val: Unevaluated(_IMPL_DESERIALIZE_FOR_NetConfig::<impl Deserialize<'de> for NetConfig>::deserialize::FIELDS, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _1 = &(*_2);                     // scope 0 at cita-network/src/config.rs:22:17: 22:28
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:22:17: 22:28
        StorageDead(_2);                 // scope 0 at cita-network/src/config.rs:22:27: 22:28
        StorageDead(_1);                 // scope 0 at cita-network/src/config.rs:22:27: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_NetConfig::<impl at cita-network/src/config.rs:22:17: 22:28>::deserialize::FIELDS: &[&str; 5] = {
    let mut _0: &[&str; 5];              // return place in scope 0 at cita-network/src/config.rs:22:17: 22:28
    let mut _1: [&str; 5];               // in scope 0 at cita-network/src/config.rs:22:17: 22:28

    bb0: {
        _1 = [const "port", const "peers", const "max_connects", const "enable_tls", const "enable_discovery"]; // scope 0 at cita-network/src/config.rs:22:17: 22:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:22:17: 22:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:22:17: 22:28
        return;                          // scope 0 at cita-network/src/config.rs:22:17: 22:28
    }
}

fn config::<impl at cita-network/src/config.rs:22:30: 22:35>::clone(_1: &NetConfig) -> NetConfig {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:22:30: 22:35
    let mut _0: config::NetConfig;       // return place in scope 0 at cita-network/src/config.rs:22:30: 22:35
    let mut _2: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:24:5: 24:28
    let _3: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:24:5: 24:28
    let mut _4: std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 0 at cita-network/src/config.rs:25:5: 25:39
    let _5: &std::option::Option<std::vec::Vec<config::PeerConfig>>; // in scope 0 at cita-network/src/config.rs:25:5: 25:39
    let mut _6: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:26:5: 26:36
    let _7: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:26:5: 26:36
    let mut _8: std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:27:5: 27:33
    let _9: &std::option::Option<bool>;  // in scope 0 at cita-network/src/config.rs:27:5: 27:33
    let mut _10: std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:28:5: 28:39
    let _11: &std::option::Option<bool>; // in scope 0 at cita-network/src/config.rs:28:5: 28:39

    bb0: {
        _3 = &((*_1).0: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:24:5: 24:28
        _2 = <std::option::Option<usize> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/config.rs:24:5: 24:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:24:5: 24:28
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> std::option::Option<usize> {<std::option::Option<usize> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: std::option::Option<std::vec::Vec<config::PeerConfig>>); // scope 0 at cita-network/src/config.rs:25:5: 25:39
        _4 = <std::option::Option<Vec<PeerConfig>> as Clone>::clone(_5) -> bb2; // scope 0 at cita-network/src/config.rs:25:5: 25:39
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:25:5: 25:39
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<Vec<PeerConfig>>) -> std::option::Option<Vec<PeerConfig>> {<std::option::Option<Vec<PeerConfig>> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &((*_1).2: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:26:5: 26:36
        _6 = <std::option::Option<usize> as Clone>::clone(_7) -> [return: bb3, unwind: bb6]; // scope 0 at cita-network/src/config.rs:26:5: 26:36
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:26:5: 26:36
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> std::option::Option<usize> {<std::option::Option<usize> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = &((*_1).3: std::option::Option<bool>); // scope 0 at cita-network/src/config.rs:27:5: 27:33
        _8 = <std::option::Option<bool> as Clone>::clone(_9) -> [return: bb4, unwind: bb6]; // scope 0 at cita-network/src/config.rs:27:5: 27:33
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:27:5: 27:33
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<bool>) -> std::option::Option<bool> {<std::option::Option<bool> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = &((*_1).4: std::option::Option<bool>); // scope 0 at cita-network/src/config.rs:28:5: 28:39
        _10 = <std::option::Option<bool> as Clone>::clone(_11) -> [return: bb5, unwind: bb6]; // scope 0 at cita-network/src/config.rs:28:5: 28:39
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:28:5: 28:39
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<bool>) -> std::option::Option<bool> {<std::option::Option<bool> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb5: {
        _0 = NetConfig { port: move _2, peers: move _4, max_connects: move _6, enable_tls: move _8, enable_discovery: move _10 }; // scope 0 at cita-network/src/config.rs:22:30: 22:35
        return;                          // scope 0 at cita-network/src/config.rs:22:35: 22:35
    }

    bb6 (cleanup): {
        drop(_4) -> bb7;                 // scope 0 at cita-network/src/config.rs:22:34: 22:35
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:22:30: 22:35
    }
}

fn config::<impl at cita-network/src/config.rs:31:10: 31:15>::fmt(_1: &PeerConfig, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:31:10: 31:15
    debug f => _2;                       // in scope 0 at cita-network/src/config.rs:31:10: 31:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:31:10: 31:15
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:31:10: 31:15
    let _4: &str;                        // in scope 0 at cita-network/src/config.rs:33:5: 33:27
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/config.rs:33:5: 33:27
    let _6: &std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:33:5: 33:27
    let _7: &str;                        // in scope 0 at cita-network/src/config.rs:34:5: 34:28
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/config.rs:34:5: 34:28
    let _9: &&std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:34:5: 34:28
    let _10: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:34:5: 34:28

    bb0: {
        _3 = const "PeerConfig";         // scope 0 at cita-network/src/config.rs:31:10: 31:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:10: 31:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "ip";                 // scope 0 at cita-network/src/config.rs:33:5: 33:27
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:33:5: 33:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::option::Option<std::string::String>); // scope 0 at cita-network/src/config.rs:33:5: 33:27
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:33:5: 33:27
        _7 = const "port";               // scope 0 at cita-network/src/config.rs:34:5: 34:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:34:5: 34:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &((*_1).1: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:34:5: 34:28
        _9 = &_10;                       // scope 0 at cita-network/src/config.rs:34:5: 34:28
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:34:5: 34:28
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _3, _4, move _5, _7, move _8) -> bb1; // scope 0 at cita-network/src/config.rs:31:10: 31:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:10: 31:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:31:15: 31:15
    }
}

const _IMPL_DESERIALIZE_FOR_PeerConfig: () = {
    let mut _0: ();                      // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _0 = const ();                   // scope 0 at cita-network/src/config.rs:31:17: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize(_1: __D) -> Result<PeerConfig, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::PeerConfig, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>>(move _1, const "PeerConfig", const _, const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<PeerConfig>, lifetime: PhantomData::<&()> }}) -> bb1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: fn(__D, &'static str, &'static [&'static str], _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>) -> Result<<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_> as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &[&str], val: Unevaluated(_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::FIELDS, [], None) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _3 = const "field identifier";   // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_u64(_1: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor, _2: u64) -> Result<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _3: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _4: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _5: __E;                     // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _6: config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Unexpected<'_>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _7: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _8: &&str;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        switchInt(_2) -> [0: bb2, 1: bb3, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb1: {
        _6 = Unexpected::<'_>::Unsigned(_2); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _8 = const _;                    // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor as Visitor<'de>>::visit_u64, [ReErased, __E], Some(promoted[0])) }
        _7 = _8 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _5 = <__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value(move _6, move _7) -> bb4; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: for<'a, 'b> fn(Unexpected<'a>, &'b (dyn Expected + 'b)) -> __E {<__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _3); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb5;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb3: {
        _4 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _4); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb5;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb4: {
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Err(move _5); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb5;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb5: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_u64: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _1 = const "field index 0 <= i < 2"; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:31:17: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_str(_1: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor, _2: &str) -> Result<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _3: bool;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _4: bool;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _5: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _6: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _7: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "ip") -> bb1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb2, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb2: {
        _4 = <str as PartialEq>::eq(_2, const "port") -> bb3; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb4, otherwise: bb6]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb4: {
        _7 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x02)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _7); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb7;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb5: {
        _5 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _5); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb7;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb6: {
        _6 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _6); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb7;                     // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb7: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor, _2: &[u8]) -> Result<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _3: usize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _4: usize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _5: bool;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _6: usize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _7: usize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _8: bool;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _9: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _10: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _11: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _6 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _7 = const 2_usize;              // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _8 = Eq(move _6, move _7);       // scope 0 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _8) -> [0: bb4, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb1: {
        switchInt((*_2)[0 of 2]) -> [105: bb2, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb2: {
        switchInt((*_2)[1 of 2]) -> [112: bb9, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb3: {
        _11 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x02)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _11); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb11;                    // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb4: {
        _3 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _4 = const 4_usize;              // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _5 = Eq(move _3, move _4);       // scope 0 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _5) -> [0: bb3, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb5: {
        switchInt((*_2)[0 of 4]) -> [112: bb6, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb6: {
        switchInt((*_2)[1 of 4]) -> [111: bb7, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb7: {
        switchInt((*_2)[2 of 4]) -> [114: bb8, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb8: {
        switchInt((*_2)[3 of 4]) -> [116: bb10, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb9: {
        _9 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _9); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb11;                    // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb10: {
        _10 = const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field::__field1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, __E>::Ok(move _10); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb11;                    // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb11: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize(_1: __D) -> Result<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor>(move _1, const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor) -> bb1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor) -> Result<<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__FieldVisitor, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _3 = const "struct PeerConfig";  // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_seq(_1: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<PeerConfig, <__A as SeqAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<PeerConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __seq => _2;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::PeerConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _3: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _4: std::result::Result<std::option::Option<std::option::Option<std::string::String>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _5: &mut __A;                // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _6: isize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _7: std::option::Option<std::option::Option<std::string::String>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _8: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _9: isize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _10: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _11: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _12: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _13: std::result::Result<std::option::Option<std::option::Option<usize>>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _14: &mut __A;               // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _15: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _18: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _20: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _21: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _22: config::PeerConfig;     // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _23: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _24: &&str;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    scope 1 {
        debug __field0 => _3;            // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        let _16: std::option::Option<std::option::Option<usize>>; // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        let _17: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        let _19: std::option::Option<usize>; // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        let mut _25: &&str;              // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        scope 5 {
            debug __field1 => _19;       // in scope 5 at cita-network/src/config.rs:31:17: 31:28
        }
        scope 6 {
            debug __val => _16;          // in scope 6 at cita-network/src/config.rs:31:17: 31:28
        }
        scope 7 {
            debug __err => _17;          // in scope 7 at cita-network/src/config.rs:31:17: 31:28
        }
        scope 8 {
            debug __value => _19;        // in scope 8 at cita-network/src/config.rs:31:17: 31:28
        }
    }
    scope 2 {
        debug __val => _7;               // in scope 2 at cita-network/src/config.rs:31:17: 31:28
    }
    scope 3 {
        debug __err => _8;               // in scope 3 at cita-network/src/config.rs:31:17: 31:28
    }
    scope 4 {
        debug __value => _10;            // in scope 4 at cita-network/src/config.rs:31:17: 31:28
    }

    bb0: {
        _5 = &mut _2;                    // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _4 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<std::string::String>>(_5) -> [return: bb1, unwind: bb21]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:33:5: 33:8
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<std::string::String>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<std::string::String>>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_4);           // scope 0 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _6) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb2: {
        _8 = move ((_4 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as SeqAccess<'_>>::Error>::Err(move _8); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb18;                    // scope 0 at no-location
    }

    bb3: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb4: {
        _7 = move ((_4 as Ok).0: std::option::Option<std::option::Option<std::string::String>>); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _9 = discriminant(_7);           // scope 0 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _9) -> [0: bb5, 1: bb7, otherwise: bb6]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb5: {
        _24 = const _;                   // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[0])) }
        _12 = _24 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _11 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 0_usize, move _12) -> [return: bb8, unwind: bb21]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb7: {
        _10 = move ((_7 as Some).0: std::option::Option<std::string::String>); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _3 = move _10;                   // scope 4 at cita-network/src/config.rs:31:17: 31:28
        _14 = &mut _2;                   // scope 1 at cita-network/src/config.rs:31:17: 31:28
        _13 = <__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>(_14) -> [return: bb9, unwind: bb20]; // scope 1 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:34:5: 34:8
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::option::Option<usize>>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb8: {
        _0 = Result::<PeerConfig, <__A as SeqAccess<'_>>::Error>::Err(move _11); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb18;                    // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb9: {
        _15 = discriminant(_13);         // scope 1 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _15) -> [0: bb12, 1: bb10, otherwise: bb11]; // scope 1 at cita-network/src/config.rs:31:17: 31:28
    }

    bb10: {
        _17 = move ((_13 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 1 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as SeqAccess<'_>>::Error>::Err(move _17); // scope 7 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb17;                    // scope 1 at no-location
    }

    bb11: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:31:17: 31:28
    }

    bb12: {
        _16 = ((_13 as Ok).0: std::option::Option<std::option::Option<usize>>); // scope 1 at cita-network/src/config.rs:31:17: 31:28
        _18 = discriminant(_16);         // scope 1 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _18) -> [0: bb13, 1: bb15, otherwise: bb14]; // scope 1 at cita-network/src/config.rs:31:17: 31:28
    }

    bb13: {
        _25 = const _;                   // scope 1 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[1])) }
        _21 = _25 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 1 at cita-network/src/config.rs:31:17: 31:28
        _20 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 1_usize, move _21) -> [return: bb16, unwind: bb20]; // scope 1 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb14: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:31:17: 31:28
    }

    bb15: {
        _19 = ((_16 as Some).0: std::option::Option<usize>); // scope 1 at cita-network/src/config.rs:31:17: 31:28
        _23 = move _3;                   // scope 5 at cita-network/src/config.rs:31:17: 31:28
        _22 = PeerConfig { ip: move _23, port: _19 }; // scope 5 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as SeqAccess<'_>>::Error>::Ok(move _22); // scope 5 at cita-network/src/config.rs:31:17: 31:28
        drop(_2) -> bb19;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb16: {
        _0 = Result::<PeerConfig, <__A as SeqAccess<'_>>::Error>::Err(move _20); // scope 1 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb17;                    // scope 1 at no-location
    }

    bb17: {
        drop(_3) -> [return: bb18, unwind: bb21]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb18: {
        drop(_2) -> bb19;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb19: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }

    bb20 (cleanup): {
        drop(_3) -> bb21;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb21 (cleanup): {
        drop(_2) -> bb22;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb22 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _1 = const "struct PeerConfig with 2 elements"; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:31:17: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

promoted[1] in _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _1 = const "struct PeerConfig with 2 elements"; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:31:17: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

fn _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::<impl at cita-network/src/config.rs:31:17: 31:28>::visit_map(_1: _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<PeerConfig, <__A as MapAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<PeerConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    debug __map => _2;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _0: std::result::Result<config::PeerConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _3: std::option::Option<std::option::Option<std::string::String>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _5: std::result::Result<std::option::Option<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _6: &mut __A;                // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _7: isize;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _10: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _12: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _13: bool;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _14: &std::option::Option<std::option::Option<std::string::String>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _15: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _16: std::option::Option<std::option::Option<std::string::String>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _17: std::result::Result<std::option::Option<std::string::String>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _18: &mut __A;               // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _19: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _22: bool;                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _23: &std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _24: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _25: std::option::Option<std::option::Option<usize>>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _26: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _27: &mut __A;               // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _28: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _31: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::IgnoredAny, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _32: &mut __A;               // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _33: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _36: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _38: std::result::Result<std::option::Option<std::string::String>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _39: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _43: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _45: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _46: isize;                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _49: config::PeerConfig;     // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _50: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _51: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _52: bool;                   // in scope 0 at cita-network/src/config.rs:31:27: 31:28
    let mut _53: isize;                  // in scope 0 at cita-network/src/config.rs:31:27: 31:28
    let mut _54: isize;                  // in scope 0 at cita-network/src/config.rs:31:27: 31:28
    scope 1 {
        debug __field0 => _3;            // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        let mut _4: std::option::Option<std::option::Option<usize>>; // in scope 1 at cita-network/src/config.rs:31:17: 31:28
        scope 2 {
            debug __field1 => _4;        // in scope 2 at cita-network/src/config.rs:31:17: 31:28
            let _35: std::option::Option<std::string::String>; // in scope 2 at cita-network/src/config.rs:31:17: 31:28
            let _37: std::option::Option<std::string::String>; // in scope 2 at cita-network/src/config.rs:31:17: 31:28
            let _40: std::option::Option<std::string::String>; // in scope 2 at cita-network/src/config.rs:31:17: 31:28
            let _41: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 2 at cita-network/src/config.rs:31:17: 31:28
            scope 3 {
                debug __key => _11;      // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _8: std::option::Option<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field>; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _9: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _11: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _20: std::option::Option<std::string::String>; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _21: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _29: std::option::Option<usize>; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _30: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                let _34: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 3 at cita-network/src/config.rs:31:17: 31:28
                scope 4 {
                    debug __val => _8;   // in scope 4 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 5 {
                    debug __err => _9;   // in scope 5 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 6 {
                    debug __val => _20;  // in scope 6 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 7 {
                    debug __err => _21;  // in scope 7 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 8 {
                    debug __val => _29;  // in scope 8 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 9 {
                    debug __err => _30;  // in scope 9 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 10 {
                }
                scope 11 {
                    debug __val => const IgnoredAny; // in scope 11 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 12 {
                    debug __err => _34;  // in scope 12 at cita-network/src/config.rs:31:17: 31:28
                }
            }
            scope 13 {
                debug __field0 => _35;   // in scope 13 at cita-network/src/config.rs:31:17: 31:28
                let _42: std::option::Option<usize>; // in scope 13 at cita-network/src/config.rs:31:17: 31:28
                let _44: std::option::Option<usize>; // in scope 13 at cita-network/src/config.rs:31:17: 31:28
                let _47: std::option::Option<usize>; // in scope 13 at cita-network/src/config.rs:31:17: 31:28
                let _48: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 13 at cita-network/src/config.rs:31:17: 31:28
                scope 17 {
                    debug __field1 => _42; // in scope 17 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 18 {
                    debug __field1 => _44; // in scope 18 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 19 {
                    debug __val => _47;  // in scope 19 at cita-network/src/config.rs:31:17: 31:28
                }
                scope 20 {
                    debug __err => _48;  // in scope 20 at cita-network/src/config.rs:31:17: 31:28
                }
            }
            scope 14 {
                debug __field0 => _37;   // in scope 14 at cita-network/src/config.rs:31:17: 31:28
            }
            scope 15 {
                debug __val => _40;      // in scope 15 at cita-network/src/config.rs:31:17: 31:28
            }
            scope 16 {
                debug __err => _41;      // in scope 16 at cita-network/src/config.rs:31:17: 31:28
            }
        }
    }

    bb0: {
        _52 = const false;               // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _52 = const true;                // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _3 = std::option::Option::<std::option::Option<std::string::String>>::None; // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _4 = std::option::Option::<std::option::Option<usize>>::None; // scope 1 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb1;                     // scope 2 at cita-network/src/config.rs:31:17: 31:28
    }

    bb1: {
        _6 = &mut _2;                    // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _5 = <__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field>(_6) -> [return: bb2, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::__Field>}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = discriminant(_5);           // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _7) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb3: {
        _9 = move ((_5 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _9); // scope 5 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb4: {
        unreachable;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb5: {
        _8 = move ((_5 as Ok).0: std::option::Option<config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field>); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _10 = discriminant(_8);          // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _10) -> [1: bb7, otherwise: bb6]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb6: {
        _36 = discriminant(_3);          // scope 2 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _36) -> [0: bb32, 1: bb34, otherwise: bb33]; // scope 2 at cita-network/src/config.rs:31:17: 31:28
    }

    bb7: {
        _11 = move ((_8 as Some).0: config::_IMPL_DESERIALIZE_FOR_PeerConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::PeerConfig>::deserialize::__Field); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _12 = discriminant(_11);         // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _12) -> [0: bb9, 1: bb20, otherwise: bb8]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb8: {
        _32 = &mut _2;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _31 = <__A as MapAccess<'_>>::next_value::<IgnoredAny>(_32) -> [return: bb29, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<IgnoredAny, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<IgnoredAny>}, val: Value(<ZST>) }
    }

    bb9: {
        _14 = &_3;                       // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _13 = std::option::Option::<std::option::Option<std::string::String>>::is_some(_14) -> [return: bb10, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<std::string::String>>) -> bool {std::option::Option::<std::option::Option<std::string::String>>::is_some}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _13) -> [0: bb13, otherwise: bb11]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb11: {
        _15 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "ip") -> [return: bb12, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _15); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb13: {
        _18 = &mut _2;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _17 = <__A as MapAccess<'_>>::next_value::<std::option::Option<std::string::String>>(_18) -> [return: bb14, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:33:5: 33:8
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<std::string::String>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<std::string::String>>}, val: Value(<ZST>) }
    }

    bb14: {
        _19 = discriminant(_17);         // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _19) -> [0: bb17, 1: bb15, otherwise: bb16]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb15: {
        _21 = move ((_17 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _21); // scope 7 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb16: {
        unreachable;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb17: {
        _20 = move ((_17 as Ok).0: std::option::Option<std::string::String>); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _16 = std::option::Option::<std::option::Option<std::string::String>>::Some(move _20); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        drop(_3) -> [return: bb18, unwind: bb19]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb18: {
        _52 = const true;                // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _3 = move _16;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb1;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb19 (cleanup): {
        _52 = const true;                // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _3 = move _16;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb58;                    // scope 3 at cita-network/src/config.rs:31:27: 31:28
    }

    bb20: {
        _23 = &_4;                       // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _22 = std::option::Option::<std::option::Option<usize>>::is_some(_23) -> [return: bb21, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::option::Option<usize>>) -> bool {std::option::Option::<std::option::Option<usize>>::is_some}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _22) -> [0: bb24, otherwise: bb22]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb22: {
        _24 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "port") -> [return: bb23, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb23: {
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _24); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb24: {
        _27 = &mut _2;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _26 = <__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>(_27) -> [return: bb25, unwind: bb58]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:34:5: 34:8
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb25: {
        _28 = discriminant(_26);         // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _28) -> [0: bb28, 1: bb26, otherwise: bb27]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb26: {
        _30 = move ((_26 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _30); // scope 9 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb27: {
        unreachable;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb28: {
        _29 = ((_26 as Ok).0: std::option::Option<usize>); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _25 = std::option::Option::<std::option::Option<usize>>::Some(_29); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _4 = move _25;                   // scope 3 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb1;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb29: {
        _33 = discriminant(_31);         // scope 3 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _33) -> [0: bb1, 1: bb30, otherwise: bb31]; // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb30: {
        _34 = move ((_31 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 3 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _34); // scope 12 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 3 at no-location
    }

    bb31: {
        unreachable;                     // scope 3 at cita-network/src/config.rs:31:17: 31:28
    }

    bb32: {
        _38 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<std::string::String>, <__A as MapAccess<'_>>::Error>(const "ip") -> [return: bb35, unwind: bb58]; // scope 2 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:33:5: 33:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<std::string::String>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<std::string::String>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb33: {
        unreachable;                     // scope 2 at cita-network/src/config.rs:31:17: 31:28
    }

    bb34: {
        _52 = const false;               // scope 2 at cita-network/src/config.rs:31:17: 31:28
        _37 = move ((_3 as Some).0: std::option::Option<std::string::String>); // scope 2 at cita-network/src/config.rs:31:17: 31:28
        _35 = move _37;                  // scope 14 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb39;                    // scope 2 at cita-network/src/config.rs:31:27: 31:28
    }

    bb35: {
        _39 = discriminant(_38);         // scope 2 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _39) -> [0: bb38, 1: bb36, otherwise: bb37]; // scope 2 at cita-network/src/config.rs:31:17: 31:28
    }

    bb36: {
        _41 = move ((_38 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 2 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _41); // scope 16 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb48;                    // scope 2 at no-location
    }

    bb37: {
        unreachable;                     // scope 2 at cita-network/src/config.rs:31:17: 31:28
    }

    bb38: {
        _40 = move ((_38 as Ok).0: std::option::Option<std::string::String>); // scope 2 at cita-network/src/config.rs:31:17: 31:28
        _35 = move _40;                  // scope 15 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb39;                    // scope 2 at cita-network/src/config.rs:31:27: 31:28
    }

    bb39: {
        _43 = discriminant(_4);          // scope 13 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _43) -> [0: bb40, 1: bb42, otherwise: bb41]; // scope 13 at cita-network/src/config.rs:31:17: 31:28
    }

    bb40: {
        _45 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>(const "port") -> [return: bb43, unwind: bb50]; // scope 13 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:34:5: 34:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<std::option::Option<usize>, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, std::option::Option<usize>, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb41: {
        unreachable;                     // scope 13 at cita-network/src/config.rs:31:17: 31:28
    }

    bb42: {
        _44 = ((_4 as Some).0: std::option::Option<usize>); // scope 13 at cita-network/src/config.rs:31:17: 31:28
        _42 = _44;                       // scope 18 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb47;                    // scope 13 at cita-network/src/config.rs:31:27: 31:28
    }

    bb43: {
        _46 = discriminant(_45);         // scope 13 at cita-network/src/config.rs:31:17: 31:28
        switchInt(move _46) -> [0: bb46, 1: bb44, otherwise: bb45]; // scope 13 at cita-network/src/config.rs:31:17: 31:28
    }

    bb44: {
        _48 = move ((_45 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 13 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Err(move _48); // scope 20 at cita-network/src/config.rs:31:17: 31:28
        drop(_35) -> [return: bb48, unwind: bb58]; // scope 2 at cita-network/src/config.rs:31:27: 31:28
    }

    bb45: {
        unreachable;                     // scope 13 at cita-network/src/config.rs:31:17: 31:28
    }

    bb46: {
        _47 = ((_45 as Ok).0: std::option::Option<usize>); // scope 13 at cita-network/src/config.rs:31:17: 31:28
        _42 = _47;                       // scope 19 at cita-network/src/config.rs:31:17: 31:28
        goto -> bb47;                    // scope 13 at cita-network/src/config.rs:31:27: 31:28
    }

    bb47: {
        _50 = move _35;                  // scope 17 at cita-network/src/config.rs:31:17: 31:28
        _51 = _42;                       // scope 17 at cita-network/src/config.rs:31:17: 31:28
        _49 = PeerConfig { ip: move _50, port: move _51 }; // scope 17 at cita-network/src/config.rs:31:17: 31:28
        _0 = Result::<PeerConfig, <__A as MapAccess<'_>>::Error>::Ok(move _49); // scope 17 at cita-network/src/config.rs:31:17: 31:28
        _52 = const false;               // scope 0 at cita-network/src/config.rs:31:27: 31:28
        drop(_2) -> bb49;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb48: {
        _53 = discriminant(_3);          // scope 0 at cita-network/src/config.rs:31:27: 31:28
        switchInt(move _53) -> [1: bb54, otherwise: bb53]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb49: {
        return;                          // scope 0 at cita-network/src/config.rs:31:28: 31:28
    }

    bb50 (cleanup): {
        drop(_35) -> bb58;               // scope 2 at cita-network/src/config.rs:31:27: 31:28
    }

    bb51 (cleanup): {
        drop(_2) -> bb52;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb52 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }

    bb53: {
        _52 = const false;               // scope 0 at cita-network/src/config.rs:31:27: 31:28
        drop(_2) -> bb49;                // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb54: {
        switchInt(_52) -> [0: bb53, otherwise: bb55]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb55: {
        drop(((_3 as Some).0: std::option::Option<std::string::String>)) -> [return: bb53, unwind: bb51]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb56 (cleanup): {
        switchInt(_52) -> [0: bb51, otherwise: bb57]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb57 (cleanup): {
        drop(((_3 as Some).0: std::option::Option<std::string::String>)) -> bb51; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }

    bb58 (cleanup): {
        _54 = discriminant(_3);          // scope 0 at cita-network/src/config.rs:31:27: 31:28
        switchInt(move _54) -> [1: bb56, otherwise: bb51]; // scope 0 at cita-network/src/config.rs:31:27: 31:28
    }
}

const _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _1: &[&str; 2];              // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _2: &[&str; 2];                  // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let _3: [&str; 2];                   // in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _4: &[&str; 2];              // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/config.rs:31:17: 31:28
        StorageLive(_2);                 // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _4 = const _;                    // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(_IMPL_DESERIALIZE_FOR_PeerConfig::<impl Deserialize<'de> for PeerConfig>::deserialize::FIELDS, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _1 = &(*_2);                     // scope 0 at cita-network/src/config.rs:31:17: 31:28
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:31:17: 31:28
        StorageDead(_2);                 // scope 0 at cita-network/src/config.rs:31:27: 31:28
        StorageDead(_1);                 // scope 0 at cita-network/src/config.rs:31:27: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_PeerConfig::<impl at cita-network/src/config.rs:31:17: 31:28>::deserialize::FIELDS: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/config.rs:31:17: 31:28
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/config.rs:31:17: 31:28

    bb0: {
        _1 = [const "ip", const "port"]; // scope 0 at cita-network/src/config.rs:31:17: 31:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:31:17: 31:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:31:17: 31:28
        return;                          // scope 0 at cita-network/src/config.rs:31:17: 31:28
    }
}

fn config::<impl at cita-network/src/config.rs:31:30: 31:35>::clone(_1: &PeerConfig) -> PeerConfig {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:31:30: 31:35
    let mut _0: config::PeerConfig;      // return place in scope 0 at cita-network/src/config.rs:31:30: 31:35
    let mut _2: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:33:5: 33:27
    let _3: &std::option::Option<std::string::String>; // in scope 0 at cita-network/src/config.rs:33:5: 33:27
    let mut _4: std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:34:5: 34:28
    let _5: &std::option::Option<usize>; // in scope 0 at cita-network/src/config.rs:34:5: 34:28

    bb0: {
        _3 = &((*_1).0: std::option::Option<std::string::String>); // scope 0 at cita-network/src/config.rs:33:5: 33:27
        _2 = <std::option::Option<std::string::String> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/config.rs:33:5: 33:27
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:33:5: 33:27
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::string::String>) -> std::option::Option<std::string::String> {<std::option::Option<std::string::String> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: std::option::Option<usize>); // scope 0 at cita-network/src/config.rs:34:5: 34:28
        _4 = <std::option::Option<usize> as Clone>::clone(_5) -> [return: bb2, unwind: bb3]; // scope 0 at cita-network/src/config.rs:34:5: 34:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:34:5: 34:28
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> std::option::Option<usize> {<std::option::Option<usize> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = PeerConfig { ip: move _2, port: move _4 }; // scope 0 at cita-network/src/config.rs:31:30: 31:35
        return;                          // scope 0 at cita-network/src/config.rs:31:35: 31:35
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at cita-network/src/config.rs:31:34: 31:35
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:31:30: 31:35
    }
}

fn config::<impl at cita-network/src/config.rs:37:1: 37:15>::new(_1: &str) -> NetConfig {
    debug path => _1;                    // in scope 0 at cita-network/src/config.rs:38:16: 38:20
    let mut _0: config::NetConfig;       // return place in scope 0 at cita-network/src/config.rs:38:31: 38:35
    let mut _2: std::string::String;     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:13: 52:23
    let _3: usize;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 55:83
    let mut _4: std::result::Result<usize, std::io::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 54:61
    let mut _5: std::result::Result<std::fs::File, std::io::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:26
    let mut _6: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    let mut _7: &mut std::string::String; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    let mut _8: std::result::Result<config::NetConfig, toml::de::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:51
    let mut _9: &str;                    // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    let _10: &str;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    let _11: &std::string::String;       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    scope 1 {
        debug buffer => _2;              // in scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:13: 52:23
    }

    bb0: {
        _2 = std::string::String::new() -> bb1; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:26: 52:39
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:26: 52:37
                                         // + literal: Const { ty: fn() -> std::string::String {std::string::String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = std::fs::File::open::<&str>(_1) -> [return: bb2, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:26
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> Result<std::fs::File, std::io::Error> {std::fs::File::open::<&str>}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _2;                    // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
        _6 = [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30] { buffer: move _7 }; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
                                         // closure
                                         // + def_id: DefId(0:801 ~ cita_network[da60]::config::{impl#0}::new::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::fs::File,)) -> std::result::Result<usize, std::io::Error>,
                                         //     (&mut std::string::String,),
                                         // ]
        _4 = Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]>(move _5, move _6) -> [return: bb3, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 54:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:14: 54:22
                                         // + literal: Const { ty: fn(Result<std::fs::File, std::io::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]) -> Result<usize, std::io::Error> {Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]>}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = Result::<usize, std::io::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]>(move _4, const ZeroSized: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]) -> [return: bb4, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 55:83
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:14: 55:28
                                         // + literal: Const { ty: fn(Result<usize, std::io::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]) -> usize {Result::<usize, std::io::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34], val: Value(<ZST>) }
    }

    bb4: {
        _11 = &_2;                       // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
        _10 = <std::string::String as Deref>::deref(_11) -> [return: bb5, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = _10;                        // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
        _8 = parse_config_from_buffer::<'_, NetConfig>(move _9) -> [return: bb6, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:51
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&str) -> Result<NetConfig, toml::de::Error> {parse_config_from_buffer::<'_, NetConfig>}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = Result::<NetConfig, toml::de::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]>(move _8, const ZeroSized: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]) -> [return: bb7, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 57:83
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:14: 57:28
                                         // + literal: Const { ty: fn(Result<NetConfig, toml::de::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]) -> NetConfig {Result::<NetConfig, toml::de::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34], val: Value(<ZST>) }
    }

    bb7: {
        drop(_2) -> bb8;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:58:5: 58:6
    }

    bb8: {
        return;                          // scope 0 at cita-network/src/config.rs:40:6: 40:6
    }

    bb9 (cleanup): {
        drop(_2) -> bb10;                // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:58:5: 58:6
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:38:5: 40:6
    }
}

fn config::<impl at cita-network/src/config.rs:37:1: 37:15>::new::{closure#0}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30], _2: std::fs::File) -> Result<usize, std::io::Error> {
    debug f => _2;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:24: 54:29
    debug buffer => (*(_1.0: &mut std::string::String)); // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:17: 52:23
    let mut _0: std::result::Result<usize, std::io::Error>; // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:31
    let mut _3: &mut std::fs::File;      // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
    let mut _4: &mut std::string::String; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60

    bb0: {
        _3 = &mut _2;                    // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
        _4 = deref_copy (_1.0: &mut std::string::String); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:48: 54:59
        _0 = <std::fs::File as std::io::Read>::read_to_string(move _3, _4) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:33: 54:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fs::File, &'b mut std::string::String) -> Result<usize, std::io::Error> {<std::fs::File as std::io::Read>::read_to_string}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:59: 54:60
    }

    bb2: {
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:60: 54:60
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:59: 54:60
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    }
}

fn config::<impl at cita-network/src/config.rs:37:1: 37:15>::new::{closure#1}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34], _2: std::io::Error) -> usize {
    debug err => _2;                     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:30: 55:33
    let mut _0: usize;                   // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:35: 55:35
    let mut _3: !;                       // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _5: &[&str];                 // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _8: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
    let _10: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
    let mut _11: &[&str; 2];             // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76

    bb0: {
        _11 = const _;                   // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NetConfig::new::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _5 = _11 as &[&str] (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
        _10 = &_2;                       // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
        _9 = core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>(_10) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::io::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = [move _9];                  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _7 = &_8;                        // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _6 = _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> [return: bb2, unwind: bb3]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = panic_fmt(move _4) -> bb3;  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:30:5: 30:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:82
    }
}

promoted[0] in config::<impl at cita-network/src/config.rs:37:1: 37:15>::new::{closure#1}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    let mut _1: [&str; 2];               // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76

    bb0: {
        _1 = [const "Error while loading config: [", const "]"]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    }
}

fn config::<impl at cita-network/src/config.rs:37:1: 37:15>::new::{closure#2}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34], _2: toml::de::Error) -> NetConfig {
    debug err => _2;                     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:30: 57:33
    let mut _0: config::NetConfig;       // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:35: 57:35
    let mut _3: !;                       // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _5: &[&str];                 // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _8: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
    let _10: &toml::de::Error;           // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
    let mut _11: &[&str; 2];             // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76

    bb0: {
        _11 = const _;                   // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NetConfig::new::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _5 = _11 as &[&str] (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
        _10 = &_2;                       // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
        _9 = core::fmt::ArgumentV1::<'_>::new_display::<toml::de::Error>(_10) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b toml::de::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<toml::de::Error>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = [move _9];                  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _7 = &_8;                        // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _6 = _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> [return: bb2, unwind: bb3]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = panic_fmt(move _4) -> bb3;  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:30:5: 30:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:82
    }
}

promoted[0] in config::<impl at cita-network/src/config.rs:37:1: 37:15>::new::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    let mut _1: [&str; 2];               // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76

    bb0: {
        _1 = [const "Error while parsing config: [", const "]"]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    }
}

fn config::<impl at cita-network/src/config.rs:43:10: 43:15>::fmt(_1: &AddressConfig, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:43:10: 43:15
    debug f => _2;                       // in scope 0 at cita-network/src/config.rs:43:10: 43:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:43:10: 43:15
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:43:10: 43:15
    let _4: &str;                        // in scope 0 at cita-network/src/config.rs:45:5: 45:22
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/config.rs:45:5: 45:22
    let _6: &&cita_types::H160;          // in scope 0 at cita-network/src/config.rs:45:5: 45:22
    let _7: &cita_types::H160;           // in scope 0 at cita-network/src/config.rs:45:5: 45:22

    bb0: {
        _3 = const "AddressConfig";      // scope 0 at cita-network/src/config.rs:43:10: 43:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:10: 43:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "addr";               // scope 0 at cita-network/src/config.rs:45:5: 45:22
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:45:5: 45:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &((*_1).0: cita_types::H160); // scope 0 at cita-network/src/config.rs:45:5: 45:22
        _6 = &_7;                        // scope 0 at cita-network/src/config.rs:45:5: 45:22
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:45:5: 45:22
        _0 = std::fmt::Formatter::<'_>::debug_struct_field1_finish(_2, _3, _4, move _5) -> bb1; // scope 0 at cita-network/src/config.rs:43:10: 43:15
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:10: 43:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:43:15: 43:15
    }
}

const _IMPL_DESERIALIZE_FOR_AddressConfig: () = {
    let mut _0: ();                      // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _0 = const ();                   // scope 0 at cita-network/src/config.rs:43:17: 43:28
        return;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize(_1: __D) -> Result<AddressConfig, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::AddressConfig, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>>(move _1, const "AddressConfig", const _, const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<AddressConfig>, lifetime: PhantomData::<&()> }}) -> bb1; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: fn(__D, &'static str, &'static [&'static str], _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>) -> Result<<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_> as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_struct::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &[&str], val: Unevaluated(_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::FIELDS, [], None) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _3 = const "field identifier";   // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_u64(_1: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor, _2: u64) -> Result<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _3: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: __E;                     // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _5: config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Unexpected<'_>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _6: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _7: &&str;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        switchInt(_2) -> [0: bb2, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb1: {
        _5 = Unexpected::<'_>::Unsigned(_2); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _7 = const _;                    // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor as Visitor<'de>>::visit_u64, [ReErased, __E], Some(promoted[0])) }
        _6 = _7 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _4 = <__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value(move _5, move _6) -> bb3; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: for<'a, 'b> fn(Unexpected<'a>, &'b (dyn Expected + 'b)) -> __E {<__E as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_value}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Ok(move _3); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb4;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb3: {
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Err(move _4); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb4;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb4: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_u64: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _1 = const "field index 0 <= i < 1"; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:43:17: 43:28
        return;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_str(_1: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor, _2: &str) -> Result<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _3: bool;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _5: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "addr") -> bb1; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb2, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb2: {
        _5 = const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Ok(move _5); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb4;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb3: {
        _4 = const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Ok(move _4); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb4;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb4: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor, _2: &[u8]) -> Result<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E> {
    debug self => const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __value => _2;                 // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field, __E>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _3: usize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: usize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _5: bool;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _6: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _7: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _3 = Len((*_2));                 // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _4 = const 4_usize;              // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _5 = Eq(move _3, move _4);       // scope 0 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _5) -> [0: bb5, otherwise: bb1]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb1: {
        switchInt((*_2)[0 of 4]) -> [97: bb2, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb2: {
        switchInt((*_2)[1 of 4]) -> [100: bb3, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb3: {
        switchInt((*_2)[2 of 4]) -> [100: bb4, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb4: {
        switchInt((*_2)[3 of 4]) -> [114: bb6, otherwise: bb5]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb5: {
        _7 = const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field::__ignore; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, val: Value(Scalar(0x01)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Ok(move _7); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb7;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb6: {
        _6 = const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field::__field0; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, val: Value(Scalar(0x00)) }
        _0 = Result::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, __E>::Ok(move _6); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb7;                     // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb7: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize(_1: __D) -> Result<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field, <__D as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _0 = <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor>(move _1, const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor) -> bb1; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor) -> Result<<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor as Visitor<'_>>::Value, <__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::Error> {<__D as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserializer<'_>>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__FieldVisitor, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::expecting(_1: &_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __formatter => _2;             // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _3: &str;                        // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _3 = const "struct AddressConfig"; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_seq(_1: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<AddressConfig, <__A as SeqAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<AddressConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __seq => _2;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::AddressConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _3: std::result::Result<std::option::Option<cita_types::H160>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: &mut __A;                // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _5: isize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _6: std::option::Option<cita_types::H160>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _7: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _8: isize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _9: cita_types::H160;            // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _10: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _11: &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _12: config::AddressConfig;  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _13: &&str;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    scope 1 {
        debug __field0 => _9;            // in scope 1 at cita-network/src/config.rs:43:17: 43:28
    }
    scope 2 {
        debug __val => _6;               // in scope 2 at cita-network/src/config.rs:43:17: 43:28
    }
    scope 3 {
        debug __err => _7;               // in scope 3 at cita-network/src/config.rs:43:17: 43:28
    }
    scope 4 {
        debug __value => _9;             // in scope 4 at cita-network/src/config.rs:43:17: 43:28
    }

    bb0: {
        _4 = &mut _2;                    // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _3 = <__A as SeqAccess<'_>>::next_element::<H160>(_4) -> [return: bb1, unwind: bb11]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:45:5: 45:8
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<H160>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<H160>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = discriminant(_3);           // scope 0 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _5) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb2: {
        _7 = move ((_3 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::SeqAccess<'_>>::Error); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as SeqAccess<'_>>::Error>::Err(move _7); // scope 3 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb9;                     // scope 0 at no-location
    }

    bb3: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb4: {
        _6 = ((_3 as Ok).0: std::option::Option<cita_types::H160>); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _8 = discriminant(_6);           // scope 0 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _8) -> [0: bb5, 1: bb7, otherwise: bb6]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb5: {
        _13 = const _;                   // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &&str, val: Unevaluated(<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[0])) }
        _11 = _13 as &dyn config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _10 = <<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length(const 0_usize, move _11) -> [return: bb8, unwind: bb11]; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }

    bb7: {
        _9 = ((_6 as Some).0: cita_types::H160); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _12 = AddressConfig { addr: _9 }; // scope 1 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as SeqAccess<'_>>::Error>::Ok(move _12); // scope 1 at cita-network/src/config.rs:43:17: 43:28
        drop(_2) -> bb10;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb8: {
        _0 = Result::<AddressConfig, <__A as SeqAccess<'_>>::Error>::Err(move _10); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb9;                     // scope 0 at no-location
    }

    bb9: {
        drop(_2) -> bb10;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb10: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }

    bb11 (cleanup): {
        drop(_2) -> bb12;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _1: &str;                    // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _1 = const "struct AddressConfig with 1 element"; // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:43:17: 43:28
        return;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

fn _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::<impl at cita-network/src/config.rs:43:17: 43:28>::visit_map(_1: _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor<'_>, _2: __A) -> Result<AddressConfig, <__A as MapAccess<'_>>::Error> {
    debug self => const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Visitor::<'_> {{ marker: PhantomData::<AddressConfig>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    debug __map => _2;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _0: std::result::Result<config::AddressConfig, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _3: std::option::Option<cita_types::H160>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: std::result::Result<std::option::Option<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field>, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _5: &mut __A;                // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _6: isize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _9: isize;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _11: isize;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _12: bool;                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _13: &std::option::Option<cita_types::H160>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _14: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _15: std::option::Option<cita_types::H160>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _16: std::result::Result<cita_types::H160, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _17: &mut __A;               // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _18: isize;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _21: std::result::Result<config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::IgnoredAny, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _22: &mut __A;               // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _23: isize;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _26: isize;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _28: std::result::Result<cita_types::H160, <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _29: isize;                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _32: config::AddressConfig;  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _33: cita_types::H160;       // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    scope 1 {
        debug __field0 => _3;            // in scope 1 at cita-network/src/config.rs:43:17: 43:28
        let _25: cita_types::H160;       // in scope 1 at cita-network/src/config.rs:43:17: 43:28
        let _27: cita_types::H160;       // in scope 1 at cita-network/src/config.rs:43:17: 43:28
        let _30: cita_types::H160;       // in scope 1 at cita-network/src/config.rs:43:17: 43:28
        let _31: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 1 at cita-network/src/config.rs:43:17: 43:28
        scope 2 {
            debug __key => _10;          // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _7: std::option::Option<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field>; // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _8: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _10: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field; // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _19: cita_types::H160;   // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _20: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            let _24: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error; // in scope 2 at cita-network/src/config.rs:43:17: 43:28
            scope 3 {
                debug __val => _7;       // in scope 3 at cita-network/src/config.rs:43:17: 43:28
            }
            scope 4 {
                debug __err => _8;       // in scope 4 at cita-network/src/config.rs:43:17: 43:28
            }
            scope 5 {
                debug __val => _19;      // in scope 5 at cita-network/src/config.rs:43:17: 43:28
            }
            scope 6 {
                debug __err => _20;      // in scope 6 at cita-network/src/config.rs:43:17: 43:28
            }
            scope 7 {
            }
            scope 8 {
                debug __val => const IgnoredAny; // in scope 8 at cita-network/src/config.rs:43:17: 43:28
            }
            scope 9 {
                debug __err => _24;      // in scope 9 at cita-network/src/config.rs:43:17: 43:28
            }
        }
        scope 10 {
            debug __field0 => _25;       // in scope 10 at cita-network/src/config.rs:43:17: 43:28
        }
        scope 11 {
            debug __field0 => _27;       // in scope 11 at cita-network/src/config.rs:43:17: 43:28
        }
        scope 12 {
            debug __val => _30;          // in scope 12 at cita-network/src/config.rs:43:17: 43:28
        }
        scope 13 {
            debug __err => _31;          // in scope 13 at cita-network/src/config.rs:43:17: 43:28
        }
    }

    bb0: {
        _3 = std::option::Option::<H160>::None; // scope 0 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb1;                     // scope 1 at cita-network/src/config.rs:43:17: 43:28
    }

    bb1: {
        _5 = &mut _2;                    // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _4 = <__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field>(_5) -> [return: bb2, unwind: bb31]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_key::<_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::__Field>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = discriminant(_4);           // scope 2 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _6) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb3: {
        _8 = move ((_4 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Err(move _8); // scope 4 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb29;                    // scope 2 at no-location
    }

    bb4: {
        unreachable;                     // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb5: {
        _7 = move ((_4 as Ok).0: std::option::Option<config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field>); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _9 = discriminant(_7);           // scope 2 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _9) -> [1: bb7, otherwise: bb6]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb6: {
        _26 = discriminant(_3);          // scope 1 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _26) -> [0: bb21, 1: bb23, otherwise: bb22]; // scope 1 at cita-network/src/config.rs:43:17: 43:28
    }

    bb7: {
        _10 = move ((_7 as Some).0: config::_IMPL_DESERIALIZE_FOR_AddressConfig::<impl config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::Deserialize<'de> for config::AddressConfig>::deserialize::__Field); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _11 = discriminant(_10);         // scope 2 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _11) -> [0: bb9, otherwise: bb8]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb8: {
        _22 = &mut _2;                   // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _21 = <__A as MapAccess<'_>>::next_value::<IgnoredAny>(_22) -> [return: bb18, unwind: bb31]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<IgnoredAny, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<IgnoredAny>}, val: Value(<ZST>) }
    }

    bb9: {
        _13 = &_3;                       // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _12 = std::option::Option::<H160>::is_some(_13) -> [return: bb10, unwind: bb31]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<H160>) -> bool {std::option::Option::<H160>::is_some}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _12) -> [0: bb13, otherwise: bb11]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb11: {
        _14 = <<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field(const "addr") -> [return: bb12, unwind: bb31]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Err(move _14); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb29;                    // scope 2 at no-location
    }

    bb13: {
        _17 = &mut _2;                   // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _16 = <__A as MapAccess<'_>>::next_value::<H160>(_17) -> [return: bb14, unwind: bb31]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:45:5: 45:8
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<H160, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<H160>}, val: Value(<ZST>) }
    }

    bb14: {
        _18 = discriminant(_16);         // scope 2 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _18) -> [0: bb17, 1: bb15, otherwise: bb16]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb15: {
        _20 = move ((_16 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Err(move _20); // scope 6 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb29;                    // scope 2 at no-location
    }

    bb16: {
        unreachable;                     // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb17: {
        _19 = ((_16 as Ok).0: cita_types::H160); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _15 = std::option::Option::<H160>::Some(_19); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _3 = move _15;                   // scope 2 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb1;                     // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb18: {
        _23 = discriminant(_21);         // scope 2 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _23) -> [0: bb1, 1: bb19, otherwise: bb20]; // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb19: {
        _24 = move ((_21 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 2 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Err(move _24); // scope 9 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb29;                    // scope 2 at no-location
    }

    bb20: {
        unreachable;                     // scope 2 at cita-network/src/config.rs:43:17: 43:28
    }

    bb21: {
        _28 = _IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, H160, <__A as MapAccess<'_>>::Error>(const "addr") -> [return: bb24, unwind: bb31]; // scope 1 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:45:5: 45:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<H160, <__A as MapAccess<'_>>::Error> {_IMPL_DESERIALIZE_FOR_NetConfig::_serde::private::de::missing_field::<'_, H160, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb22: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:43:17: 43:28
    }

    bb23: {
        _27 = ((_3 as Some).0: cita_types::H160); // scope 1 at cita-network/src/config.rs:43:17: 43:28
        _25 = _27;                       // scope 11 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb28;                    // scope 1 at cita-network/src/config.rs:43:27: 43:28
    }

    bb24: {
        _29 = discriminant(_28);         // scope 1 at cita-network/src/config.rs:43:17: 43:28
        switchInt(move _29) -> [0: bb27, 1: bb25, otherwise: bb26]; // scope 1 at cita-network/src/config.rs:43:17: 43:28
    }

    bb25: {
        _31 = move ((_28 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_NetConfig::_serde::de::MapAccess<'_>>::Error); // scope 1 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Err(move _31); // scope 13 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb29;                    // scope 1 at no-location
    }

    bb26: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:43:17: 43:28
    }

    bb27: {
        _30 = ((_28 as Ok).0: cita_types::H160); // scope 1 at cita-network/src/config.rs:43:17: 43:28
        _25 = _30;                       // scope 12 at cita-network/src/config.rs:43:17: 43:28
        goto -> bb28;                    // scope 1 at cita-network/src/config.rs:43:27: 43:28
    }

    bb28: {
        _33 = _25;                       // scope 10 at cita-network/src/config.rs:43:17: 43:28
        _32 = AddressConfig { addr: move _33 }; // scope 10 at cita-network/src/config.rs:43:17: 43:28
        _0 = Result::<AddressConfig, <__A as MapAccess<'_>>::Error>::Ok(move _32); // scope 10 at cita-network/src/config.rs:43:17: 43:28
        drop(_2) -> bb30;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb29: {
        drop(_2) -> bb30;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb30: {
        return;                          // scope 0 at cita-network/src/config.rs:43:28: 43:28
    }

    bb31 (cleanup): {
        drop(_2) -> bb32;                // scope 0 at cita-network/src/config.rs:43:27: 43:28
    }

    bb32 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

const _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _1: &[&str; 1];              // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _2: &[&str; 1];                  // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let _3: [&str; 1];                   // in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _4: &[&str; 1];              // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/config.rs:43:17: 43:28
        StorageLive(_2);                 // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _4 = const _;                    // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(_IMPL_DESERIALIZE_FOR_AddressConfig::<impl Deserialize<'de> for AddressConfig>::deserialize::FIELDS, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _1 = &(*_2);                     // scope 0 at cita-network/src/config.rs:43:17: 43:28
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at cita-network/src/config.rs:43:17: 43:28
        StorageDead(_2);                 // scope 0 at cita-network/src/config.rs:43:27: 43:28
        StorageDead(_1);                 // scope 0 at cita-network/src/config.rs:43:27: 43:28
        return;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_AddressConfig::<impl at cita-network/src/config.rs:43:17: 43:28>::deserialize::FIELDS: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/config.rs:43:17: 43:28
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/config.rs:43:17: 43:28

    bb0: {
        _1 = [const "addr"];             // scope 0 at cita-network/src/config.rs:43:17: 43:28
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:43:17: 43:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:43:17: 43:28
        return;                          // scope 0 at cita-network/src/config.rs:43:17: 43:28
    }
}

fn config::<impl at cita-network/src/config.rs:43:30: 43:35>::clone(_1: &AddressConfig) -> AddressConfig {
    debug self => _1;                    // in scope 0 at cita-network/src/config.rs:43:30: 43:35
    let mut _0: config::AddressConfig;   // return place in scope 0 at cita-network/src/config.rs:43:30: 43:35
    let mut _2: cita_types::H160;        // in scope 0 at cita-network/src/config.rs:45:5: 45:22
    let _3: &cita_types::H160;           // in scope 0 at cita-network/src/config.rs:45:5: 45:22

    bb0: {
        _3 = &((*_1).0: cita_types::H160); // scope 0 at cita-network/src/config.rs:45:5: 45:22
        _2 = <H160 as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/config.rs:45:5: 45:22
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:45:5: 45:22
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> H160 {<H160 as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = AddressConfig { addr: move _2 }; // scope 0 at cita-network/src/config.rs:43:30: 43:35
        return;                          // scope 0 at cita-network/src/config.rs:43:35: 43:35
    }
}

fn config::<impl at cita-network/src/config.rs:48:1: 48:19>::new(_1: &str) -> AddressConfig {
    debug path => _1;                    // in scope 0 at cita-network/src/config.rs:49:16: 49:20
    let mut _0: config::AddressConfig;   // return place in scope 0 at cita-network/src/config.rs:49:31: 49:35
    let mut _2: std::string::String;     // in scope 0 at cita-network/src/config.rs:50:13: 50:23
    let mut _4: std::result::Result<usize, std::io::Error>; // in scope 0 at cita-network/src/config.rs:51:26: 51:90
    let mut _5: std::result::Result<std::fs::File, std::io::Error>; // in scope 0 at cita-network/src/config.rs:51:26: 51:42
    let mut _6: [closure@cita-network/src/config.rs:51:52: 51:59]; // in scope 0 at cita-network/src/config.rs:51:52: 51:89
    let mut _7: &mut std::string::String; // in scope 0 at cita-network/src/config.rs:51:52: 51:89
    let mut _8: isize;                   // in scope 0 at cita-network/src/config.rs:52:13: 52:18
    let mut _9: std::result::Result<cita_types::H160, rustc_hex::FromHexError>; // in scope 0 at cita-network/src/config.rs:52:22: 52:58
    let mut _10: &str;                   // in scope 0 at cita-network/src/config.rs:52:40: 52:57
    let _11: &str;                       // in scope 0 at cita-network/src/config.rs:52:40: 52:57
    let mut _12: &str;                   // in scope 0 at cita-network/src/config.rs:52:49: 52:56
    let _13: &str;                       // in scope 0 at cita-network/src/config.rs:52:49: 52:56
    let _14: &std::string::String;       // in scope 0 at cita-network/src/config.rs:52:49: 52:56
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _20: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _21: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _22: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _23: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _25: &[&str];                // in scope 0 at cita-network/src/config.rs:54:23: 54:91
    let mut _26: cita_types::H160;       // in scope 0 at cita-network/src/config.rs:59:25: 59:29
    scope 1 {
        debug buffer => _2;              // in scope 1 at cita-network/src/config.rs:50:13: 50:23
        let _3: cita_types::H160;        // in scope 1 at cita-network/src/config.rs:51:13: 51:17
        let _15: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug addr => _3;            // in scope 2 at cita-network/src/config.rs:51:13: 51:17
        }
        scope 3 {
            debug lvl => _15;            // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _27: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _28: &[&str; 1];     // in scope 3 at cita-network/src/config.rs:54:23: 54:91
            let mut _29: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _2 = std::string::String::new() -> bb1; // scope 0 at cita-network/src/config.rs:50:26: 50:39
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:50:26: 50:37
                                         // + literal: Const { ty: fn() -> std::string::String {std::string::String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = std::fs::File::open::<&str>(_1) -> [return: bb2, unwind: bb23]; // scope 1 at cita-network/src/config.rs:51:26: 51:42
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:51:26: 51:36
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> Result<std::fs::File, std::io::Error> {std::fs::File::open::<&str>}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _2;                    // scope 1 at cita-network/src/config.rs:51:52: 51:89
        _6 = [closure@cita-network/src/config.rs:51:52: 51:59] { buffer: move _7 }; // scope 1 at cita-network/src/config.rs:51:52: 51:89
                                         // closure
                                         // + def_id: DefId(0:46 ~ cita_network[da60]::config::{impl#1}::new::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::fs::File,)) -> std::result::Result<usize, std::io::Error>,
                                         //     (&mut std::string::String,),
                                         // ]
        _4 = Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@cita-network/src/config.rs:51:52: 51:59]>(move _5, move _6) -> [return: bb3, unwind: bb23]; // scope 1 at cita-network/src/config.rs:51:26: 51:90
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:51:43: 51:51
                                         // + literal: Const { ty: fn(Result<std::fs::File, std::io::Error>, [closure@cita-network/src/config.rs:51:52: 51:59]) -> Result<usize, std::io::Error> {Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@cita-network/src/config.rs:51:52: 51:59]>}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = discriminant(_4);           // scope 1 at cita-network/src/config.rs:51:26: 51:90
        switchInt(move _8) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 1 at cita-network/src/config.rs:51:20: 51:90
    }

    bb4: {
        _15 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _18 = &_15;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _29 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddressConfig::new, [], Some(promoted[2])) }
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, _29) -> [return: bb13, unwind: bb22]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        unreachable;                     // scope 1 at cita-network/src/config.rs:51:26: 51:90
    }

    bb6: {
        _14 = &_2;                       // scope 1 at cita-network/src/config.rs:52:49: 52:56
        _13 = <std::string::String as Deref>::deref(_14) -> [return: bb7, unwind: bb22]; // scope 1 at cita-network/src/config.rs:52:49: 52:56
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:52:49: 52:56
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _12 = _13;                       // scope 1 at cita-network/src/config.rs:52:49: 52:56
        _11 = clean_0x(move _12) -> [return: bb8, unwind: bb22]; // scope 1 at cita-network/src/config.rs:52:40: 52:57
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:52:40: 52:48
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a str {clean_0x}, val: Value(<ZST>) }
    }

    bb8: {
        _10 = _11;                       // scope 1 at cita-network/src/config.rs:52:40: 52:57
        _9 = <H160 as FromStr>::from_str(move _10) -> [return: bb9, unwind: bb22]; // scope 1 at cita-network/src/config.rs:52:22: 52:58
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:52:22: 52:39
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Result<H160, <H160 as FromStr>::Err> {<H160 as FromStr>::from_str}, val: Value(<ZST>) }
    }

    bb9: {
        _3 = Result::<H160, rustc_hex::FromHexError>::unwrap(move _9) -> [return: bb25, unwind: bb22]; // scope 1 at cita-network/src/config.rs:52:22: 52:67
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:52:59: 52:65
                                         // + literal: Const { ty: fn(Result<H160, rustc_hex::FromHexError>) -> H160 {Result::<H160, rustc_hex::FromHexError>::unwrap}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _20 = &_15;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _22 = log::max_level() -> [return: bb14, unwind: bb22]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _16) -> [0: bb18, otherwise: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        switchInt(move _17) -> [0: bb10, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _21 = &_22;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _19 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _20, move _21) -> [return: bb15, unwind: bb22]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _16 = move _19;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _28 = const _;                   // scope 3 at cita-network/src/config.rs:54:23: 54:91
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:54:23: 54:91
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddressConfig::new, [], Some(promoted[1])) }
        _25 = _28 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/config.rs:54:23: 54:91
        _24 = Arguments::<'_>::new_const(move _25) -> [return: bb17, unwind: bb22]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb17: {
        _27 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddressConfig::new, [], Some(promoted[0])) }
        _23 = log::__private_api_log(move _24, _15, _27) -> [return: bb26, unwind: bb22]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _3 = H160::random() -> [return: bb27, unwind: bb22]; // scope 1 at cita-network/src/config.rs:55:17: 55:34
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:55:17: 55:32
                                         // + literal: Const { ty: fn() -> H160 {H160::random}, val: Value(<ZST>) }
    }

    bb19: {
        drop(_4) -> [return: bb20, unwind: bb23]; // scope 1 at cita-network/src/config.rs:57:10: 57:11
    }

    bb20: {
        _26 = _3;                        // scope 2 at cita-network/src/config.rs:59:25: 59:29
        _0 = AddressConfig { addr: move _26 }; // scope 2 at cita-network/src/config.rs:59:9: 59:31
        drop(_2) -> bb21;                // scope 0 at cita-network/src/config.rs:60:5: 60:6
    }

    bb21: {
        return;                          // scope 0 at cita-network/src/config.rs:60:6: 60:6
    }

    bb22 (cleanup): {
        drop(_4) -> bb23;                // scope 1 at cita-network/src/config.rs:57:10: 57:11
    }

    bb23 (cleanup): {
        drop(_2) -> bb24;                // scope 0 at cita-network/src/config.rs:60:5: 60:6
    }

    bb24 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:49:5: 60:6
    }

    bb25: {
        goto -> bb19;                    // scope 1 at cita-network/src/config.rs:52:22: 52:67
    }

    bb26: {
        goto -> bb18;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb27: {
        goto -> bb19;                    // scope 1 at cita-network/src/config.rs:55:17: 55:34
    }
}

promoted[0] in config::<impl at cita-network/src/config.rs:48:1: 48:19>::new: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/config.rs:54:17: 54:92
    let mut _7: &str;                    // in scope 0 at cita-network/src/config.rs:54:17: 54:92

    bb0: {
        _3 = const "cita_network::config"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::config"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/config.rs"; // scope 0 at cita-network/src/config.rs:54:17: 54:92
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:54:17: 54:92
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/config.rs:54:17: 54:92
        _1 = (move _2, move _4, move _6, const 54_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in config::<impl at cita-network/src/config.rs:48:1: 48:19>::new: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/config.rs:54:23: 54:91
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/config.rs:54:23: 54:91

    bb0: {
        _1 = [const "[Config] Cannot find address file, using a random Address instead."]; // scope 0 at cita-network/src/config.rs:54:23: 54:91
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:54:23: 54:91
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/config.rs:54:23: 54:91
        return;                          // scope 0 at cita-network/src/config.rs:54:23: 54:91
    }
}

promoted[2] in config::<impl at cita-network/src/config.rs:48:1: 48:19>::new: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn config::<impl at cita-network/src/config.rs:48:1: 48:19>::new::{closure#0}(_1: [closure@cita-network/src/config.rs:51:52: 51:59], _2: std::fs::File) -> Result<usize, std::io::Error> {
    debug f => _2;                       // in scope 0 at cita-network/src/config.rs:51:53: 51:58
    debug buffer => (*(_1.0: &mut std::string::String)); // in scope 0 at cita-network/src/config.rs:50:17: 50:23
    let mut _0: std::result::Result<usize, std::io::Error>; // return place in scope 0 at cita-network/src/config.rs:51:60: 51:60
    let mut _3: &mut std::fs::File;      // in scope 0 at cita-network/src/config.rs:51:60: 51:89
    let mut _4: &mut std::string::String; // in scope 0 at cita-network/src/config.rs:51:52: 51:89

    bb0: {
        _3 = &mut _2;                    // scope 0 at cita-network/src/config.rs:51:60: 51:89
        _4 = deref_copy (_1.0: &mut std::string::String); // scope 0 at cita-network/src/config.rs:51:77: 51:88
        _0 = <std::fs::File as std::io::Read>::read_to_string(move _3, _4) -> [return: bb1, unwind: bb3]; // scope 0 at cita-network/src/config.rs:51:60: 51:89
                                         // mir::Constant
                                         // + span: cita-network/src/config.rs:51:62: 51:76
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fs::File, &'b mut std::string::String) -> Result<usize, std::io::Error> {<std::fs::File as std::io::Read>::read_to_string}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at cita-network/src/config.rs:51:88: 51:89
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/config.rs:51:89: 51:89
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at cita-network/src/config.rs:51:88: 51:89
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/config.rs:51:52: 51:89
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::new() -> MqAgent {
    let mut _0: mq_agent::MqAgent;       // return place in scope 0 at cita-network/src/mq_agent.rs:36:21: 36:25
    let _1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:40:14: 40:26
    let _2: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:40:28: 40:40
    let mut _3: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
    let mut _6: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:41:44: 41:55
    let _7: ();                          // in scope 0 at cita-network/src/mq_agent.rs:42:9: 47:10
    let _8: &str;                        // in scope 0 at cita-network/src/mq_agent.rs:43:13: 43:27
    let mut _9: std::vec::Vec<libproto::router::RoutingKey>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:23:37: 25:6
    let mut _10: std::boxed::Box<[libproto::router::RoutingKey]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _11: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _12: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _13: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _14: std::boxed::Box<[libproto::router::RoutingKey; 3]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _15: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _16: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _17: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _18: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _19: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _20: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _21: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _22: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _23: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _24: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:45:13: 45:25
    let mut _25: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:46:13: 46:25
    let mut _28: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:50:54: 50:65
    let mut _31: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:51:54: 51:65
    let _32: ();                         // in scope 0 at cita-network/src/mq_agent.rs:52:9: 57:10
    let _33: &str;                       // in scope 0 at cita-network/src/mq_agent.rs:53:13: 53:32
    let mut _34: std::vec::Vec<libproto::router::RoutingKey>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:23:37: 25:6
    let mut _35: std::boxed::Box<[libproto::router::RoutingKey]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _36: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _37: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _38: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _39: std::boxed::Box<[libproto::router::RoutingKey; 2]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _40: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _41: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _42: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _43: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _44: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _45: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _46: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:55:13: 55:30
    let mut _47: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:56:13: 56:30
    let mut _50: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:60:62: 60:73
    let mut _53: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:61:62: 61:73
    let _54: ();                         // in scope 0 at cita-network/src/mq_agent.rs:62:9: 74:10
    let _55: &str;                       // in scope 0 at cita-network/src/mq_agent.rs:63:13: 63:22
    let mut _56: std::vec::Vec<libproto::router::RoutingKey>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:23:37: 25:6
    let mut _57: std::boxed::Box<[libproto::router::RoutingKey]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _58: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _59: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _60: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _61: std::boxed::Box<[libproto::router::RoutingKey; 6]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _62: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _63: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _64: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _65: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _66: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _67: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _68: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _69: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _70: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _71: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _72: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _73: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _74: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _75: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _76: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _77: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _78: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _79: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _80: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:72:13: 72:34
    let mut _81: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:73:13: 73:34
    let mut _83: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:75:41: 75:53
    let mut _84: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:75:55: 75:72
    let mut _85: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:75:74: 75:95
    let mut _86: mq_agent::MqAgentClient; // in scope 0 at cita-network/src/mq_agent.rs:78:13: 78:19
    let mut _87: std::option::Option<node_manager::NodesManagerClient>; // in scope 0 at cita-network/src/mq_agent.rs:79:35: 79:39
    let mut _88: std::option::Option<network::NetworkClient>; // in scope 0 at cita-network/src/mq_agent.rs:80:29: 80:33
    let mut _89: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:81:23: 81:35
    let mut _90: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:82:28: 82:45
    let mut _91: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:83:32: 83:53
    let mut _92: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _93: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _94: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _95: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _96: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _97: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _98: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _99: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _100: bool;                  // in scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    let mut _101: *const [libproto::router::RoutingKey; 3]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _102: *const [libproto::router::RoutingKey; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _103: *const [libproto::router::RoutingKey; 6]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    scope 1 {
        debug ctx_sub_auth => _1;        // in scope 1 at cita-network/src/mq_agent.rs:40:14: 40:26
        debug crx_sub_auth => _2;        // in scope 1 at cita-network/src/mq_agent.rs:40:28: 40:40
        let _4: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:41:14: 41:26
        let _5: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:41:28: 41:40
        scope 2 {
            debug ctx_pub_auth => _4;    // in scope 2 at cita-network/src/mq_agent.rs:41:14: 41:26
            debug crx_pub_auth => _5;    // in scope 2 at cita-network/src/mq_agent.rs:41:28: 41:40
            let _26: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 2 at cita-network/src/mq_agent.rs:50:14: 50:31
            let _27: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 2 at cita-network/src/mq_agent.rs:50:33: 50:50
            scope 3 {
            }
            scope 4 {
                debug ctx_sub_consensus => _26; // in scope 4 at cita-network/src/mq_agent.rs:50:14: 50:31
                debug crx_sub_consensus => _27; // in scope 4 at cita-network/src/mq_agent.rs:50:33: 50:50
                let _29: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 4 at cita-network/src/mq_agent.rs:51:14: 51:31
                let _30: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 4 at cita-network/src/mq_agent.rs:51:33: 51:50
                scope 5 {
                    debug ctx_pub_consensus => _29; // in scope 5 at cita-network/src/mq_agent.rs:51:14: 51:31
                    debug crx_pub_consensus => _30; // in scope 5 at cita-network/src/mq_agent.rs:51:33: 51:50
                    let _48: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 5 at cita-network/src/mq_agent.rs:60:14: 60:35
                    let _49: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 5 at cita-network/src/mq_agent.rs:60:37: 60:58
                    scope 6 {
                    }
                    scope 7 {
                        debug ctx_sub_other_modules => _48; // in scope 7 at cita-network/src/mq_agent.rs:60:14: 60:35
                        debug crx_sub_other_modules => _49; // in scope 7 at cita-network/src/mq_agent.rs:60:37: 60:58
                        let _51: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 7 at cita-network/src/mq_agent.rs:61:14: 61:35
                        let _52: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 7 at cita-network/src/mq_agent.rs:61:37: 61:58
                        scope 8 {
                            debug ctx_pub_other_modules => _51; // in scope 8 at cita-network/src/mq_agent.rs:61:14: 61:35
                            debug crx_pub_other_modules => _52; // in scope 8 at cita-network/src/mq_agent.rs:61:37: 61:58
                            let _82: mq_agent::MqAgentClient; // in scope 8 at cita-network/src/mq_agent.rs:75:13: 75:19
                            scope 9 {
                            }
                            scope 10 {
                                debug client => _82; // in scope 10 at cita-network/src/mq_agent.rs:75:13: 75:19
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _95 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _93 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _94 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _99 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _100 = const false;              // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _92 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _98 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _96 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _97 = const false;               // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
        _3 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> bb1; // scope 0 at cita-network/src/mq_agent.rs:40:44: 40:55
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:40:44: 40:53
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb1: {
        _100 = const true;               // scope 0 at cita-network/src/mq_agent.rs:40:14: 40:26
        _1 = move (_3.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:40:14: 40:26
        _2 = move (_3.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:40:28: 40:40
        _6 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb2, unwind: bb22]; // scope 1 at cita-network/src/mq_agent.rs:41:44: 41:55
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:41:44: 41:53
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb2: {
        _99 = const true;                // scope 1 at cita-network/src/mq_agent.rs:41:14: 41:26
        _4 = move (_6.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:41:14: 41:26
        _98 = const true;                // scope 1 at cita-network/src/mq_agent.rs:41:28: 41:40
        _5 = move (_6.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:41:28: 41:40
        _8 = const "network_auth";       // scope 2 at cita-network/src/mq_agent.rs:43:13: 43:27
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:43:13: 43:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = const 6_usize;             // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _12 = const 1_usize;             // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _13 = alloc::alloc::exchange_malloc(move _11, move _12) -> [return: bb3, unwind: bb35]; // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = ShallowInitBox(move _13, [libproto::router::RoutingKey; 3]); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _16 = const Auth;                // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _17 = const libproto::router::MsgType::Request; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _15 = RoutingKey(move _16, move _17); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _19 = const Auth;                // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _20 = const libproto::router::MsgType::GetBlockTxn; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x17)) }
        _18 = RoutingKey(move _19, move _20); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _22 = const Auth;                // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _23 = const libproto::router::MsgType::BlockTxn; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x18)) }
        _21 = RoutingKey(move _22, move _23); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _101 = (((_14.0: std::ptr::Unique<[libproto::router::RoutingKey; 3]>).0: std::ptr::NonNull<[libproto::router::RoutingKey; 3]>).0: *const [libproto::router::RoutingKey; 3]); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_101) = [move _15, move _18, move _21]; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _10 = move _14 as std::boxed::Box<[libproto::router::RoutingKey]> (Pointer(Unsize)); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _9 = slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>(move _10) -> [return: bb4, unwind: bb35]; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[RoutingKey]>) -> Vec<RoutingKey> {slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb4: {
        _100 = const false;              // scope 2 at cita-network/src/mq_agent.rs:45:13: 45:25
        _24 = move _1;                   // scope 2 at cita-network/src/mq_agent.rs:45:13: 45:25
        _98 = const false;               // scope 2 at cita-network/src/mq_agent.rs:46:13: 46:25
        _25 = move _5;                   // scope 2 at cita-network/src/mq_agent.rs:46:13: 46:25
        _7 = start_pubsub::<RoutingKey>(_8, move _9, move _24, move _25) -> [return: bb5, unwind: bb35]; // scope 2 at cita-network/src/mq_agent.rs:42:9: 47:10
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:42:9: 42:21
                                         // + literal: Const { ty: for<'a> fn(&'a str, Vec<RoutingKey>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {start_pubsub::<RoutingKey>}, val: Value(<ZST>) }
    }

    bb5: {
        _28 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb6, unwind: bb35]; // scope 2 at cita-network/src/mq_agent.rs:50:54: 50:65
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:50:54: 50:63
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb6: {
        _97 = const true;                // scope 2 at cita-network/src/mq_agent.rs:50:14: 50:31
        _26 = move (_28.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 2 at cita-network/src/mq_agent.rs:50:14: 50:31
        _27 = move (_28.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 2 at cita-network/src/mq_agent.rs:50:33: 50:50
        _31 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb7, unwind: bb20]; // scope 4 at cita-network/src/mq_agent.rs:51:54: 51:65
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:51:54: 51:63
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb7: {
        _96 = const true;                // scope 4 at cita-network/src/mq_agent.rs:51:14: 51:31
        _29 = move (_31.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-network/src/mq_agent.rs:51:14: 51:31
        _95 = const true;                // scope 4 at cita-network/src/mq_agent.rs:51:33: 51:50
        _30 = move (_31.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-network/src/mq_agent.rs:51:33: 51:50
        _33 = const "network_consensus"; // scope 5 at cita-network/src/mq_agent.rs:53:13: 53:32
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:53:13: 53:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _36 = const 4_usize;             // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _37 = const 1_usize;             // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _38 = alloc::alloc::exchange_malloc(move _36, move _37) -> [return: bb8, unwind: bb30]; // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb8: {
        _39 = ShallowInitBox(move _38, [libproto::router::RoutingKey; 2]); // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _41 = const Consensus;           // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x03)) }
        _42 = const libproto::router::MsgType::CompactSignedProposal; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x19)) }
        _40 = RoutingKey(move _41, move _42); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _44 = const Consensus;           // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x03)) }
        _45 = const libproto::router::MsgType::RawBytes; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x00)) }
        _43 = RoutingKey(move _44, move _45); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _102 = (((_39.0: std::ptr::Unique<[libproto::router::RoutingKey; 2]>).0: std::ptr::NonNull<[libproto::router::RoutingKey; 2]>).0: *const [libproto::router::RoutingKey; 2]); // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_102) = [move _40, move _43];  // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _35 = move _39 as std::boxed::Box<[libproto::router::RoutingKey]> (Pointer(Unsize)); // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _34 = slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>(move _35) -> [return: bb9, unwind: bb30]; // scope 5 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Box<[RoutingKey]>) -> Vec<RoutingKey> {slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb9: {
        _97 = const false;               // scope 5 at cita-network/src/mq_agent.rs:55:13: 55:30
        _46 = move _26;                  // scope 5 at cita-network/src/mq_agent.rs:55:13: 55:30
        _95 = const false;               // scope 5 at cita-network/src/mq_agent.rs:56:13: 56:30
        _47 = move _30;                  // scope 5 at cita-network/src/mq_agent.rs:56:13: 56:30
        _32 = start_pubsub::<RoutingKey>(_33, move _34, move _46, move _47) -> [return: bb10, unwind: bb30]; // scope 5 at cita-network/src/mq_agent.rs:52:9: 57:10
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:52:9: 52:21
                                         // + literal: Const { ty: for<'a> fn(&'a str, Vec<RoutingKey>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {start_pubsub::<RoutingKey>}, val: Value(<ZST>) }
    }

    bb10: {
        _50 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb11, unwind: bb30]; // scope 5 at cita-network/src/mq_agent.rs:60:62: 60:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:60:62: 60:71
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb11: {
        _94 = const true;                // scope 5 at cita-network/src/mq_agent.rs:60:14: 60:35
        _48 = move (_50.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-network/src/mq_agent.rs:60:14: 60:35
        _49 = move (_50.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-network/src/mq_agent.rs:60:37: 60:58
        _53 = pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb12, unwind: bb18]; // scope 7 at cita-network/src/mq_agent.rs:61:62: 61:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:61:62: 61:71
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {pubsub::crossbeam_channel::unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb12: {
        _93 = const true;                // scope 7 at cita-network/src/mq_agent.rs:61:14: 61:35
        _51 = move (_53.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 7 at cita-network/src/mq_agent.rs:61:14: 61:35
        _92 = const true;                // scope 7 at cita-network/src/mq_agent.rs:61:37: 61:58
        _52 = move (_53.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 7 at cita-network/src/mq_agent.rs:61:37: 61:58
        _55 = const "network";           // scope 8 at cita-network/src/mq_agent.rs:63:13: 63:22
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:63:13: 63:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _58 = const 12_usize;            // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _59 = const 1_usize;             // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _60 = alloc::alloc::exchange_malloc(move _58, move _59) -> [return: bb13, unwind: bb25]; // scope 9 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb13: {
        _61 = ShallowInitBox(move _60, [libproto::router::RoutingKey; 6]); // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _63 = const libproto::router::SubModules::Chain; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _64 = const libproto::router::MsgType::Status; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x05)) }
        _62 = RoutingKey(move _63, move _64); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _66 = const libproto::router::SubModules::Chain; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _67 = const libproto::router::MsgType::RichStatus; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x06)) }
        _65 = RoutingKey(move _66, move _67); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _69 = const libproto::router::SubModules::Chain; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _70 = const libproto::router::MsgType::SyncResponse; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x04)) }
        _68 = RoutingKey(move _69, move _70); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _72 = const Jsonrpc;             // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x00)) }
        _73 = const RequestNet;          // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x1e)) }
        _71 = RoutingKey(move _72, move _73); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _75 = const Jsonrpc;             // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x00)) }
        _76 = const RequestPeersInfo;    // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x21)) }
        _74 = RoutingKey(move _75, move _76); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _78 = const libproto::router::SubModules::Snapshot; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x07)) }
        _79 = const libproto::router::MsgType::SnapshotReq; // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x11)) }
        _77 = RoutingKey(move _78, move _79); // scope 8 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _103 = (((_61.0: std::ptr::Unique<[libproto::router::RoutingKey; 6]>).0: std::ptr::NonNull<[libproto::router::RoutingKey; 6]>).0: *const [libproto::router::RoutingKey; 6]); // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_103) = [move _62, move _65, move _68, move _71, move _74, move _77]; // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _57 = move _61 as std::boxed::Box<[libproto::router::RoutingKey]> (Pointer(Unsize)); // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _56 = slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>(move _57) -> [return: bb14, unwind: bb25]; // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(Box<[RoutingKey]>) -> Vec<RoutingKey> {slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb14: {
        _94 = const false;               // scope 8 at cita-network/src/mq_agent.rs:72:13: 72:34
        _80 = move _48;                  // scope 8 at cita-network/src/mq_agent.rs:72:13: 72:34
        _92 = const false;               // scope 8 at cita-network/src/mq_agent.rs:73:13: 73:34
        _81 = move _52;                  // scope 8 at cita-network/src/mq_agent.rs:73:13: 73:34
        _54 = start_pubsub::<RoutingKey>(_55, move _56, move _80, move _81) -> [return: bb15, unwind: bb25]; // scope 8 at cita-network/src/mq_agent.rs:62:9: 74:10
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:62:9: 62:21
                                         // + literal: Const { ty: for<'a> fn(&'a str, Vec<RoutingKey>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {start_pubsub::<RoutingKey>}, val: Value(<ZST>) }
    }

    bb15: {
        _99 = const false;               // scope 8 at cita-network/src/mq_agent.rs:75:41: 75:53
        _83 = move _4;                   // scope 8 at cita-network/src/mq_agent.rs:75:41: 75:53
        _96 = const false;               // scope 8 at cita-network/src/mq_agent.rs:75:55: 75:72
        _84 = move _29;                  // scope 8 at cita-network/src/mq_agent.rs:75:55: 75:72
        _93 = const false;               // scope 8 at cita-network/src/mq_agent.rs:75:74: 75:95
        _85 = move _51;                  // scope 8 at cita-network/src/mq_agent.rs:75:74: 75:95
        _82 = MqAgentClient::new(move _83, move _84, move _85) -> [return: bb16, unwind: bb25]; // scope 8 at cita-network/src/mq_agent.rs:75:22: 75:96
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:75:22: 75:40
                                         // + literal: Const { ty: fn(pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> MqAgentClient {MqAgentClient::new}, val: Value(<ZST>) }
    }

    bb16: {
        _86 = move _82;                  // scope 10 at cita-network/src/mq_agent.rs:78:13: 78:19
        _87 = std::option::Option::<NodesManagerClient>::None; // scope 10 at cita-network/src/mq_agent.rs:79:35: 79:39
        _88 = std::option::Option::<NetworkClient>::None; // scope 10 at cita-network/src/mq_agent.rs:80:29: 80:33
        _89 = move _2;                   // scope 10 at cita-network/src/mq_agent.rs:81:23: 81:35
        _90 = move _27;                  // scope 10 at cita-network/src/mq_agent.rs:82:28: 82:45
        _91 = move _49;                  // scope 10 at cita-network/src/mq_agent.rs:83:32: 83:53
        _0 = MqAgent { client: move _86, nodes_manager_client: move _87, network_client: move _88, sub_auth: move _89, sub_consensus: move _90, sub_other_modules: move _91 }; // scope 10 at cita-network/src/mq_agent.rs:77:9: 84:10
        _92 = const false;               // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
        _93 = const false;               // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
        _94 = const false;               // scope 5 at cita-network/src/mq_agent.rs:85:5: 85:6
        _95 = const false;               // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
        _96 = const false;               // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
        _97 = const false;               // scope 2 at cita-network/src/mq_agent.rs:85:5: 85:6
        _98 = const false;               // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
        _99 = const false;               // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
        _100 = const false;              // scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:85:6: 85:6
    }

    bb17 (cleanup): {
        switchInt(_93) -> [0: bb18, otherwise: bb26]; // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb18 (cleanup): {
        drop(_49) -> bb28;               // scope 5 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb19 (cleanup): {
        switchInt(_96) -> [0: bb20, otherwise: bb31]; // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb20 (cleanup): {
        drop(_27) -> bb33;               // scope 2 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb21 (cleanup): {
        switchInt(_99) -> [0: bb22, otherwise: bb36]; // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb22 (cleanup): {
        drop(_2) -> bb38;                // scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb23 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:36:5: 85:6
    }

    bb24 (cleanup): {
        drop(_52) -> bb17;               // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb25 (cleanup): {
        switchInt(_92) -> [0: bb17, otherwise: bb24]; // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb26 (cleanup): {
        drop(_51) -> bb18;               // scope 7 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb27 (cleanup): {
        drop(_48) -> bb30;               // scope 5 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb28 (cleanup): {
        switchInt(_94) -> [0: bb30, otherwise: bb27]; // scope 5 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb29 (cleanup): {
        drop(_30) -> bb19;               // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb30 (cleanup): {
        switchInt(_95) -> [0: bb19, otherwise: bb29]; // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb31 (cleanup): {
        drop(_29) -> bb20;               // scope 4 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb32 (cleanup): {
        drop(_26) -> bb35;               // scope 2 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb33 (cleanup): {
        switchInt(_97) -> [0: bb35, otherwise: bb32]; // scope 2 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb34 (cleanup): {
        drop(_5) -> bb21;                // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb35 (cleanup): {
        switchInt(_98) -> [0: bb21, otherwise: bb34]; // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb36 (cleanup): {
        drop(_4) -> bb22;                // scope 1 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb37 (cleanup): {
        drop(_1) -> bb23;                // scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    }

    bb38 (cleanup): {
        switchInt(_100) -> [0: bb23, otherwise: bb37]; // scope 0 at cita-network/src/mq_agent.rs:85:5: 85:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::set_nodes_mgr_client(_1: &mut MqAgent, _2: NodesManagerClient) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:87:33: 87:42
    debug client => _2;                  // in scope 0 at cita-network/src/mq_agent.rs:87:44: 87:50
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:87:72: 87:72
    let mut _3: std::option::Option<node_manager::NodesManagerClient>; // in scope 0 at cita-network/src/mq_agent.rs:88:37: 88:49

    bb0: {
        _3 = std::option::Option::<NodesManagerClient>::Some(move _2); // scope 0 at cita-network/src/mq_agent.rs:88:37: 88:49
        drop(((*_1).1: std::option::Option<node_manager::NodesManagerClient>)) -> [return: bb1, unwind: bb2]; // scope 0 at cita-network/src/mq_agent.rs:88:9: 88:34
    }

    bb1: {
        ((*_1).1: std::option::Option<node_manager::NodesManagerClient>) = move _3; // scope 0 at cita-network/src/mq_agent.rs:88:9: 88:34
        return;                          // scope 0 at cita-network/src/mq_agent.rs:89:6: 89:6
    }

    bb2 (cleanup): {
        ((*_1).1: std::option::Option<node_manager::NodesManagerClient>) = move _3; // scope 0 at cita-network/src/mq_agent.rs:88:9: 88:34
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:87:5: 89:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::set_network_client(_1: &mut MqAgent, _2: NetworkClient) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:91:31: 91:40
    debug client => _2;                  // in scope 0 at cita-network/src/mq_agent.rs:91:42: 91:48
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:91:65: 91:65
    let mut _3: std::option::Option<network::NetworkClient>; // in scope 0 at cita-network/src/mq_agent.rs:92:31: 92:43

    bb0: {
        _3 = std::option::Option::<NetworkClient>::Some(move _2); // scope 0 at cita-network/src/mq_agent.rs:92:31: 92:43
        drop(((*_1).2: std::option::Option<network::NetworkClient>)) -> [return: bb1, unwind: bb2]; // scope 0 at cita-network/src/mq_agent.rs:92:9: 92:28
    }

    bb1: {
        ((*_1).2: std::option::Option<network::NetworkClient>) = move _3; // scope 0 at cita-network/src/mq_agent.rs:92:9: 92:28
        return;                          // scope 0 at cita-network/src/mq_agent.rs:93:6: 93:6
    }

    bb2 (cleanup): {
        ((*_1).2: std::option::Option<network::NetworkClient>) = move _3; // scope 0 at cita-network/src/mq_agent.rs:92:9: 92:28
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:91:5: 93:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::client(_1: &MqAgent) -> MqAgentClient {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:95:19: 95:24
    let mut _0: mq_agent::MqAgentClient; // return place in scope 0 at cita-network/src/mq_agent.rs:95:29: 95:42
    let mut _2: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/mq_agent.rs:96:9: 96:28

    bb0: {
        _2 = &((*_1).0: mq_agent::MqAgentClient); // scope 0 at cita-network/src/mq_agent.rs:96:9: 96:28
        _0 = <MqAgentClient as Clone>::clone(move _2) -> bb1; // scope 0 at cita-network/src/mq_agent.rs:96:9: 96:28
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:96:21: 96:26
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient) -> MqAgentClient {<MqAgentClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/mq_agent.rs:97:6: 97:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run(_1: &MqAgent) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:99:16: 99:21
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:99:23: 99:23
    let mut _2: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:100:16: 100:32
    let mut _6: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:103:28: 103:49
    let _7: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/mq_agent.rs:104:13: 109:15
    let mut _8: [closure@cita-network/src/mq_agent.rs:104:27: 104:34]; // in scope 0 at cita-network/src/mq_agent.rs:104:27: 109:14
    let mut _11: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:113:33: 113:59
    let _12: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/mq_agent.rs:114:13: 119:15
    let mut _13: [closure@cita-network/src/mq_agent.rs:114:27: 114:34]; // in scope 0 at cita-network/src/mq_agent.rs:114:27: 119:14
    let mut _14: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:122:16: 122:32
    let mut _18: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:124:37: 124:67
    let _19: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/mq_agent.rs:125:13: 131:15
    let mut _20: [closure@cita-network/src/mq_agent.rs:125:27: 125:34]; // in scope 0 at cita-network/src/mq_agent.rs:125:27: 131:14
    let mut _21: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:132:9: 132:10
    let mut _22: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:120:9: 120:10
    let mut _23: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:120:9: 120:10
    scope 1 {
        debug client => _3;              // in scope 1 at cita-network/src/mq_agent.rs:100:21: 100:31
        let _3: &node_manager::NodesManagerClient; // in scope 1 at cita-network/src/mq_agent.rs:100:21: 100:31
        let _4: node_manager::NodesManagerClient; // in scope 1 at cita-network/src/mq_agent.rs:102:17: 102:33
        scope 2 {
            debug nodes_mgr_client => _4; // in scope 2 at cita-network/src/mq_agent.rs:102:17: 102:33
            let _5: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 2 at cita-network/src/mq_agent.rs:103:17: 103:25
            scope 3 {
                debug sub_auth => _5;    // in scope 3 at cita-network/src/mq_agent.rs:103:17: 103:25
                let _9: node_manager::NodesManagerClient; // in scope 3 at cita-network/src/mq_agent.rs:112:17: 112:33
                scope 4 {
                    debug nodes_mgr_client => _9; // in scope 4 at cita-network/src/mq_agent.rs:112:17: 112:33
                    let _10: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 4 at cita-network/src/mq_agent.rs:113:17: 113:30
                    scope 5 {
                        debug sub_consensus => _10; // in scope 5 at cita-network/src/mq_agent.rs:113:17: 113:30
                    }
                }
            }
        }
    }
    scope 6 {
        debug client => _15;             // in scope 6 at cita-network/src/mq_agent.rs:122:21: 122:31
        let _15: &network::NetworkClient; // in scope 6 at cita-network/src/mq_agent.rs:122:21: 122:31
        let _16: network::NetworkClient; // in scope 6 at cita-network/src/mq_agent.rs:123:17: 123:31
        scope 7 {
            debug network_client => _16; // in scope 7 at cita-network/src/mq_agent.rs:123:17: 123:31
            let _17: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 7 at cita-network/src/mq_agent.rs:124:17: 124:34
            scope 8 {
                debug sub_other_modules => _17; // in scope 8 at cita-network/src/mq_agent.rs:124:17: 124:34
            }
        }
    }

    bb0: {
        _22 = const false;               // scope 0 at cita-network/src/mq_agent.rs:100:9: 120:10
        _23 = const false;               // scope 0 at cita-network/src/mq_agent.rs:100:9: 120:10
        _21 = const false;               // scope 0 at cita-network/src/mq_agent.rs:100:9: 120:10
        _2 = discriminant(((*_1).1: std::option::Option<node_manager::NodesManagerClient>)); // scope 1 at cita-network/src/mq_agent.rs:100:16: 100:32
        switchInt(move _2) -> [1: bb1, otherwise: bb10]; // scope 1 at cita-network/src/mq_agent.rs:100:16: 100:32
    }

    bb1: {
        _3 = &((((*_1).1: std::option::Option<node_manager::NodesManagerClient>) as Some).0: node_manager::NodesManagerClient); // scope 1 at cita-network/src/mq_agent.rs:100:21: 100:31
        _23 = const true;                // scope 1 at cita-network/src/mq_agent.rs:102:36: 102:50
        _4 = <NodesManagerClient as Clone>::clone(_3) -> bb2; // scope 1 at cita-network/src/mq_agent.rs:102:36: 102:50
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:102:43: 102:48
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient) -> NodesManagerClient {<NodesManagerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &((*_1).3: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 2 at cita-network/src/mq_agent.rs:103:28: 103:49
        _5 = <pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone(move _6) -> [return: bb3, unwind: bb23]; // scope 2 at cita-network/src/mq_agent.rs:103:28: 103:49
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:103:42: 103:47
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _23 = const false;               // scope 3 at cita-network/src/mq_agent.rs:104:27: 109:14
        _8 = [closure@cita-network/src/mq_agent.rs:104:27: 104:34] { sub_auth: move _5, nodes_mgr_client: move _4 }; // scope 3 at cita-network/src/mq_agent.rs:104:27: 109:14
                                         // closure
                                         // + def_id: DefId(0:80 ~ cita_network[da60]::mq_agent::{impl#0}::run::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>, node_manager::NodesManagerClient),
                                         // ]
        _7 = std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:104:27: 104:34], ()>(move _8) -> [return: bb4, unwind: bb23]; // scope 3 at cita-network/src/mq_agent.rs:104:13: 109:15
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:104:13: 104:26
                                         // + literal: Const { ty: fn([closure@cita-network/src/mq_agent.rs:104:27: 104:34]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:104:27: 104:34], ()>}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_7) -> [return: bb5, unwind: bb23]; // scope 3 at cita-network/src/mq_agent.rs:109:15: 109:16
    }

    bb5: {
        _9 = <NodesManagerClient as Clone>::clone(_3) -> [return: bb6, unwind: bb23]; // scope 3 at cita-network/src/mq_agent.rs:112:36: 112:50
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:112:43: 112:48
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient) -> NodesManagerClient {<NodesManagerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb6: {
        _22 = const true;                // scope 3 at cita-network/src/mq_agent.rs:112:49: 112:50
        _11 = &((*_1).4: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-network/src/mq_agent.rs:113:33: 113:59
        _10 = <pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone(move _11) -> [return: bb7, unwind: bb21]; // scope 4 at cita-network/src/mq_agent.rs:113:33: 113:59
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:113:52: 113:57
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb7: {
        _22 = const false;               // scope 5 at cita-network/src/mq_agent.rs:114:27: 119:14
        _13 = [closure@cita-network/src/mq_agent.rs:114:27: 114:34] { sub_consensus: move _10, nodes_mgr_client: move _9 }; // scope 5 at cita-network/src/mq_agent.rs:114:27: 119:14
                                         // closure
                                         // + def_id: DefId(0:81 ~ cita_network[da60]::mq_agent::{impl#0}::run::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>, node_manager::NodesManagerClient),
                                         // ]
        _12 = std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:114:27: 114:34], ()>(move _13) -> [return: bb8, unwind: bb21]; // scope 5 at cita-network/src/mq_agent.rs:114:13: 119:15
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:114:13: 114:26
                                         // + literal: Const { ty: fn([closure@cita-network/src/mq_agent.rs:114:27: 114:34]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:114:27: 114:34], ()>}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_12) -> [return: bb9, unwind: bb21]; // scope 5 at cita-network/src/mq_agent.rs:119:15: 119:16
    }

    bb9: {
        _22 = const false;               // scope 3 at cita-network/src/mq_agent.rs:120:9: 120:10
        _23 = const false;               // scope 1 at cita-network/src/mq_agent.rs:120:9: 120:10
        goto -> bb10;                    // scope 0 at cita-network/src/mq_agent.rs:100:9: 120:10
    }

    bb10: {
        _14 = discriminant(((*_1).2: std::option::Option<network::NetworkClient>)); // scope 6 at cita-network/src/mq_agent.rs:122:16: 122:32
        switchInt(move _14) -> [1: bb11, otherwise: bb16]; // scope 6 at cita-network/src/mq_agent.rs:122:16: 122:32
    }

    bb11: {
        _15 = &((((*_1).2: std::option::Option<network::NetworkClient>) as Some).0: network::NetworkClient); // scope 6 at cita-network/src/mq_agent.rs:122:21: 122:31
        _21 = const true;                // scope 6 at cita-network/src/mq_agent.rs:123:34: 123:48
        _16 = <NetworkClient as Clone>::clone(_15) -> bb12; // scope 6 at cita-network/src/mq_agent.rs:123:34: 123:48
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:123:41: 123:46
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient) -> NetworkClient {<NetworkClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb12: {
        _18 = &((*_1).5: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 7 at cita-network/src/mq_agent.rs:124:37: 124:67
        _17 = <pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone(move _18) -> [return: bb13, unwind: bb19]; // scope 7 at cita-network/src/mq_agent.rs:124:37: 124:67
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:124:60: 124:65
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = const false;               // scope 8 at cita-network/src/mq_agent.rs:125:27: 131:14
        _20 = [closure@cita-network/src/mq_agent.rs:125:27: 125:34] { sub_other_modules: move _17, network_client: move _16 }; // scope 8 at cita-network/src/mq_agent.rs:125:27: 131:14
                                         // closure
                                         // + def_id: DefId(0:82 ~ cita_network[da60]::mq_agent::{impl#0}::run::{closure#2})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>, network::NetworkClient),
                                         // ]
        _19 = std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:125:27: 125:34], ()>(move _20) -> [return: bb14, unwind: bb19]; // scope 8 at cita-network/src/mq_agent.rs:125:13: 131:15
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:125:13: 125:26
                                         // + literal: Const { ty: fn([closure@cita-network/src/mq_agent.rs:125:27: 125:34]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/mq_agent.rs:125:27: 125:34], ()>}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_19) -> [return: bb15, unwind: bb19]; // scope 8 at cita-network/src/mq_agent.rs:131:15: 131:16
    }

    bb15: {
        _21 = const false;               // scope 6 at cita-network/src/mq_agent.rs:132:9: 132:10
        goto -> bb16;                    // scope 0 at cita-network/src/mq_agent.rs:122:9: 132:10
    }

    bb16: {
        return;                          // scope 0 at cita-network/src/mq_agent.rs:133:6: 133:6
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:99:5: 133:6
    }

    bb18 (cleanup): {
        drop(_16) -> bb17;               // scope 6 at cita-network/src/mq_agent.rs:132:9: 132:10
    }

    bb19 (cleanup): {
        switchInt(_21) -> [0: bb17, otherwise: bb18]; // scope 6 at cita-network/src/mq_agent.rs:132:9: 132:10
    }

    bb20 (cleanup): {
        drop(_9) -> bb23;                // scope 3 at cita-network/src/mq_agent.rs:120:9: 120:10
    }

    bb21 (cleanup): {
        switchInt(_22) -> [0: bb23, otherwise: bb20]; // scope 3 at cita-network/src/mq_agent.rs:120:9: 120:10
    }

    bb22 (cleanup): {
        drop(_4) -> bb17;                // scope 1 at cita-network/src/mq_agent.rs:120:9: 120:10
    }

    bb23 (cleanup): {
        switchInt(_23) -> [0: bb17, otherwise: bb22]; // scope 1 at cita-network/src/mq_agent.rs:120:9: 120:10
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#0}(_1: [closure@cita-network/src/mq_agent.rs:104:27: 104:34]) -> () {
    debug sub_auth => (_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:103:17: 103:25
    debug nodes_mgr_client => (_1.1: node_manager::NodesManagerClient); // in scope 0 at cita-network/src/mq_agent.rs:102:17: 102:33
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:104:35: 104:35
    let _2: std::string::String;         // in scope 0 at cita-network/src/mq_agent.rs:105:22: 105:25
    let _3: std::vec::Vec<u8>;           // in scope 0 at cita-network/src/mq_agent.rs:105:27: 105:31
    let mut _4: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:105:35: 105:59
    let mut _5: std::result::Result<(std::string::String, std::vec::Vec<u8>), pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/mq_agent.rs:105:35: 105:50
    let mut _6: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:105:35: 105:50
    let mut _8: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/mq_agent.rs:106:27: 106:51
    let mut _9: &std::vec::Vec<u8>;      // in scope 0 at cita-network/src/mq_agent.rs:106:45: 106:50
    let _10: ();                         // in scope 0 at cita-network/src/mq_agent.rs:108:17: 108:58
    let _11: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/mq_agent.rs:108:30: 108:47
    let mut _12: std::string::String;    // in scope 0 at cita-network/src/mq_agent.rs:108:49: 108:52
    let mut _13: libproto::Message;      // in scope 0 at cita-network/src/mq_agent.rs:108:54: 108:57
    let mut _14: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    scope 1 {
        debug key => _2;                 // in scope 1 at cita-network/src/mq_agent.rs:105:22: 105:25
        debug body => _3;                // in scope 1 at cita-network/src/mq_agent.rs:105:27: 105:31
        let _7: libproto::Message;       // in scope 1 at cita-network/src/mq_agent.rs:106:21: 106:24
        scope 2 {
            debug msg => _7;             // in scope 2 at cita-network/src/mq_agent.rs:106:21: 106:24
        }
    }

    bb0: {
        _14 = const false;               // scope 0 at cita-network/src/mq_agent.rs:104:35: 109:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:104:35: 109:14
    }

    bb1: {
        _6 = &(_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:105:35: 105:50
        _5 = pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv(move _6) -> [return: bb2, unwind: bb9]; // scope 0 at cita-network/src/mq_agent.rs:105:35: 105:50
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:105:44: 105:48
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap(move _5) -> [return: bb3, unwind: bb9]; // scope 0 at cita-network/src/mq_agent.rs:105:35: 105:59
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:105:51: 105:57
                                         // + literal: Const { ty: fn(Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>) -> (std::string::String, Vec<u8>) {Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = const true;                // scope 0 at cita-network/src/mq_agent.rs:105:22: 105:25
        _2 = move (_4.0: std::string::String); // scope 0 at cita-network/src/mq_agent.rs:105:22: 105:25
        _3 = move (_4.1: std::vec::Vec<u8>); // scope 0 at cita-network/src/mq_agent.rs:105:27: 105:31
        _9 = &_3;                        // scope 1 at cita-network/src/mq_agent.rs:106:45: 106:50
        _8 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _9) -> [return: bb4, unwind: bb8]; // scope 1 at cita-network/src/mq_agent.rs:106:27: 106:51
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:106:27: 106:44
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _8) -> [return: bb5, unwind: bb8]; // scope 1 at cita-network/src/mq_agent.rs:106:27: 106:60
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:106:52: 106:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = &(_1.1: node_manager::NodesManagerClient); // scope 2 at cita-network/src/mq_agent.rs:108:30: 108:47
        _14 = const false;               // scope 2 at cita-network/src/mq_agent.rs:108:49: 108:52
        _12 = move _2;                   // scope 2 at cita-network/src/mq_agent.rs:108:49: 108:52
        _13 = move _7;                   // scope 2 at cita-network/src/mq_agent.rs:108:54: 108:57
        _10 = send_message(_11, move _12, move _13) -> [return: bb6, unwind: bb8]; // scope 2 at cita-network/src/mq_agent.rs:108:17: 108:58
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:108:17: 108:29
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, std::string::String, libproto::Message) {send_message}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_3) -> [return: bb7, unwind: bb12]; // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    }

    bb7: {
        _14 = const false;               // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:104:35: 109:14
    }

    bb8 (cleanup): {
        drop(_3) -> bb12;                // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    }

    bb9 (cleanup): {
        drop(_1) -> bb10;                // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:104:27: 109:14
    }

    bb11 (cleanup): {
        drop(_2) -> bb9;                 // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    }

    bb12 (cleanup): {
        switchInt(_14) -> [0: bb9, otherwise: bb11]; // scope 0 at cita-network/src/mq_agent.rs:109:13: 109:14
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#1}(_1: [closure@cita-network/src/mq_agent.rs:114:27: 114:34]) -> () {
    debug sub_consensus => (_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:113:17: 113:30
    debug nodes_mgr_client => (_1.1: node_manager::NodesManagerClient); // in scope 0 at cita-network/src/mq_agent.rs:112:17: 112:33
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:114:35: 114:35
    let _2: std::string::String;         // in scope 0 at cita-network/src/mq_agent.rs:115:22: 115:25
    let _3: std::vec::Vec<u8>;           // in scope 0 at cita-network/src/mq_agent.rs:115:27: 115:31
    let mut _4: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:115:35: 115:64
    let mut _5: std::result::Result<(std::string::String, std::vec::Vec<u8>), pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/mq_agent.rs:115:35: 115:55
    let mut _6: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:115:35: 115:55
    let mut _8: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/mq_agent.rs:116:27: 116:51
    let mut _9: &std::vec::Vec<u8>;      // in scope 0 at cita-network/src/mq_agent.rs:116:45: 116:50
    let _10: ();                         // in scope 0 at cita-network/src/mq_agent.rs:118:17: 118:58
    let _11: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/mq_agent.rs:118:30: 118:47
    let mut _12: std::string::String;    // in scope 0 at cita-network/src/mq_agent.rs:118:49: 118:52
    let mut _13: libproto::Message;      // in scope 0 at cita-network/src/mq_agent.rs:118:54: 118:57
    let mut _14: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    scope 1 {
        debug key => _2;                 // in scope 1 at cita-network/src/mq_agent.rs:115:22: 115:25
        debug body => _3;                // in scope 1 at cita-network/src/mq_agent.rs:115:27: 115:31
        let _7: libproto::Message;       // in scope 1 at cita-network/src/mq_agent.rs:116:21: 116:24
        scope 2 {
            debug msg => _7;             // in scope 2 at cita-network/src/mq_agent.rs:116:21: 116:24
        }
    }

    bb0: {
        _14 = const false;               // scope 0 at cita-network/src/mq_agent.rs:114:35: 119:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:114:35: 119:14
    }

    bb1: {
        _6 = &(_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:115:35: 115:55
        _5 = pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv(move _6) -> [return: bb2, unwind: bb9]; // scope 0 at cita-network/src/mq_agent.rs:115:35: 115:55
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:115:49: 115:53
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap(move _5) -> [return: bb3, unwind: bb9]; // scope 0 at cita-network/src/mq_agent.rs:115:35: 115:64
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:115:56: 115:62
                                         // + literal: Const { ty: fn(Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>) -> (std::string::String, Vec<u8>) {Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = const true;                // scope 0 at cita-network/src/mq_agent.rs:115:22: 115:25
        _2 = move (_4.0: std::string::String); // scope 0 at cita-network/src/mq_agent.rs:115:22: 115:25
        _3 = move (_4.1: std::vec::Vec<u8>); // scope 0 at cita-network/src/mq_agent.rs:115:27: 115:31
        _9 = &_3;                        // scope 1 at cita-network/src/mq_agent.rs:116:45: 116:50
        _8 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _9) -> [return: bb4, unwind: bb8]; // scope 1 at cita-network/src/mq_agent.rs:116:27: 116:51
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:116:27: 116:44
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _8) -> [return: bb5, unwind: bb8]; // scope 1 at cita-network/src/mq_agent.rs:116:27: 116:60
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:116:52: 116:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = &(_1.1: node_manager::NodesManagerClient); // scope 2 at cita-network/src/mq_agent.rs:118:30: 118:47
        _14 = const false;               // scope 2 at cita-network/src/mq_agent.rs:118:49: 118:52
        _12 = move _2;                   // scope 2 at cita-network/src/mq_agent.rs:118:49: 118:52
        _13 = move _7;                   // scope 2 at cita-network/src/mq_agent.rs:118:54: 118:57
        _10 = send_message(_11, move _12, move _13) -> [return: bb6, unwind: bb8]; // scope 2 at cita-network/src/mq_agent.rs:118:17: 118:58
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:118:17: 118:29
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, std::string::String, libproto::Message) {send_message}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_3) -> [return: bb7, unwind: bb12]; // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    }

    bb7: {
        _14 = const false;               // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:114:35: 119:14
    }

    bb8 (cleanup): {
        drop(_3) -> bb12;                // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    }

    bb9 (cleanup): {
        drop(_1) -> bb10;                // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:114:27: 119:14
    }

    bb11 (cleanup): {
        drop(_2) -> bb9;                 // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    }

    bb12 (cleanup): {
        switchInt(_14) -> [0: bb9, otherwise: bb11]; // scope 0 at cita-network/src/mq_agent.rs:119:13: 119:14
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#2}(_1: [closure@cita-network/src/mq_agent.rs:125:27: 125:34]) -> () {
    debug sub_other_modules => (_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-network/src/mq_agent.rs:124:17: 124:34
    debug network_client => (_1.1: network::NetworkClient); // in scope 0 at cita-network/src/mq_agent.rs:123:17: 123:31
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:125:35: 125:35
    let _2: std::string::String;         // in scope 0 at cita-network/src/mq_agent.rs:126:22: 126:25
    let _3: std::vec::Vec<u8>;           // in scope 0 at cita-network/src/mq_agent.rs:126:27: 126:31
    let mut _4: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:126:35: 126:68
    let mut _5: std::result::Result<(std::string::String, std::vec::Vec<u8>), pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/mq_agent.rs:126:35: 126:59
    let mut _6: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:126:35: 126:59
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:127:74: 127:77
    let _22: &std::string::String;       // in scope 0 at cita-network/src/mq_agent.rs:127:74: 127:77
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:127:79: 127:83
    let _24: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/mq_agent.rs:127:79: 127:83
    let mut _26: std::string::String;    // in scope 0 at cita-network/src/mq_agent.rs:129:45: 129:48
    let mut _27: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/mq_agent.rs:129:50: 129:54
    let _28: ();                         // in scope 0 at cita-network/src/mq_agent.rs:130:17: 130:57
    let mut _29: &network::NetworkClient; // in scope 0 at cita-network/src/mq_agent.rs:130:17: 130:57
    let mut _30: network::LocalMessage;  // in scope 0 at cita-network/src/mq_agent.rs:130:53: 130:56
    let mut _34: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    let mut _35: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    scope 1 {
        debug key => _2;                 // in scope 1 at cita-network/src/mq_agent.rs:126:22: 126:25
        debug body => _3;                // in scope 1 at cita-network/src/mq_agent.rs:126:27: 126:31
        let _7: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _25: network::LocalMessage;  // in scope 1 at cita-network/src/mq_agent.rs:129:21: 129:24
        scope 2 {
            debug lvl => _7;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _31: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _32: &[&str; 2];     // in scope 2 at cita-network/src/mq_agent.rs:127:24: 127:72
            let mut _33: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug msg => _25;            // in scope 3 at cita-network/src/mq_agent.rs:129:21: 129:24
        }
    }

    bb0: {
        _35 = const false;               // scope 0 at cita-network/src/mq_agent.rs:125:35: 131:14
        _34 = const false;               // scope 0 at cita-network/src/mq_agent.rs:125:35: 131:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:125:35: 131:14
    }

    bb1: {
        _6 = &(_1.0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:126:35: 126:59
        _5 = pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv(move _6) -> [return: bb2, unwind: bb18]; // scope 0 at cita-network/src/mq_agent.rs:126:35: 126:59
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:126:53: 126:57
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) -> Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap(move _5) -> [return: bb3, unwind: bb18]; // scope 0 at cita-network/src/mq_agent.rs:126:35: 126:68
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:126:60: 126:66
                                         // + literal: Const { ty: fn(Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>) -> (std::string::String, Vec<u8>) {Result::<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _35 = const true;                // scope 0 at cita-network/src/mq_agent.rs:126:22: 126:25
        _2 = move (_4.0: std::string::String); // scope 0 at cita-network/src/mq_agent.rs:126:22: 126:25
        _34 = const true;                // scope 0 at cita-network/src/mq_agent.rs:126:27: 126:31
        _3 = move (_4.1: std::vec::Vec<u8>); // scope 0 at cita-network/src/mq_agent.rs:126:27: 126:31
        _7 = log::Level::Trace;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _10 = &_7;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _33 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgent::run::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _33) -> [return: bb7, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _12 = &_7;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> [return: bb8, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _8) -> [0: bb14, otherwise: bb10]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        switchInt(move _9) -> [0: bb4, otherwise: bb5]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _13 = &_14;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> [return: bb9, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _8 = move _11;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _32 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:127:24: 127:72
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:24: 127:72
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MqAgent::run::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _17 = _32 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:127:24: 127:72
        _22 = &_2;                       // scope 2 at cita-network/src/mq_agent.rs:127:74: 127:77
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_22) -> [return: bb11, unwind: bb21]; // scope 2 at cita-network/src/mq_agent.rs:127:74: 127:77
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:74: 127:77
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb11: {
        _24 = &_3;                       // scope 2 at cita-network/src/mq_agent.rs:127:79: 127:83
        _23 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u8>>(_24) -> [return: bb12, unwind: bb21]; // scope 2 at cita-network/src/mq_agent.rs:127:79: 127:83
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:79: 127:83
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<u8>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u8>>}, val: Value(<ZST>) }
    }

    bb12: {
        _20 = [move _21, move _23];      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = &_20;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = Arguments::<'_>::new_v1(move _17, move _18) -> [return: bb13, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgent::run::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _15 = log::__private_api_log(move _16, _7, _31) -> [return: bb23, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _35 = const false;               // scope 1 at cita-network/src/mq_agent.rs:129:45: 129:48
        _26 = move _2;                   // scope 1 at cita-network/src/mq_agent.rs:129:45: 129:48
        _34 = const false;               // scope 1 at cita-network/src/mq_agent.rs:129:50: 129:54
        _27 = move _3;                   // scope 1 at cita-network/src/mq_agent.rs:129:50: 129:54
        _25 = LocalMessage::new(move _26, move _27) -> [return: bb15, unwind: bb21]; // scope 1 at cita-network/src/mq_agent.rs:129:27: 129:55
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:129:27: 129:44
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> LocalMessage {LocalMessage::new}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = &(_1.1: network::NetworkClient); // scope 3 at cita-network/src/mq_agent.rs:130:17: 130:57
        _30 = move _25;                  // scope 3 at cita-network/src/mq_agent.rs:130:53: 130:56
        _28 = NetworkClient::handle_local_message(move _29, move _30) -> [return: bb16, unwind: bb21]; // scope 3 at cita-network/src/mq_agent.rs:130:17: 130:57
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:130:32: 130:52
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient, LocalMessage) {NetworkClient::handle_local_message}, val: Value(<ZST>) }
    }

    bb16: {
        _34 = const false;               // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
        _35 = const false;               // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
        goto -> bb1;                     // scope 0 at cita-network/src/mq_agent.rs:125:35: 131:14
    }

    bb17 (cleanup): {
        switchInt(_35) -> [0: bb18, otherwise: bb22]; // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    }

    bb18 (cleanup): {
        drop(_1) -> bb19;                // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:125:27: 131:14
    }

    bb20 (cleanup): {
        drop(_3) -> bb17;                // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    }

    bb21 (cleanup): {
        switchInt(_34) -> [0: bb17, otherwise: bb20]; // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    }

    bb22 (cleanup): {
        drop(_2) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:131:13: 131:14
    }

    bb23: {
        goto -> bb14;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#2}: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:127:17: 127:84
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:127:17: 127:84

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:127:17: 127:84
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:17: 127:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:127:17: 127:84
        _1 = (move _2, move _4, move _6, const 127_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72

    bb0: {
        _1 = [const "[MqAgent] Handle delivery from ", const " payload "]; // scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:24: 127:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:127:24: 127:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72
        return;                          // scope 0 at cita-network/src/mq_agent.rs:127:24: 127:72
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:35:1: 35:13>::run::{closure#2}: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:136:1: 136:25>::default() -> MqAgent {
    let mut _0: mq_agent::MqAgent;       // return place in scope 0 at cita-network/src/mq_agent.rs:137:21: 137:25

    bb0: {
        _0 = MqAgent::new() -> bb1;      // scope 0 at cita-network/src/mq_agent.rs:138:9: 138:20
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:138:9: 138:18
                                         // + literal: Const { ty: fn() -> MqAgent {MqAgent::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/mq_agent.rs:139:6: 139:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:142:10: 142:15>::clone(_1: &MqAgentClient) -> MqAgentClient {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:142:10: 142:15
    let mut _0: mq_agent::MqAgentClient; // return place in scope 0 at cita-network/src/mq_agent.rs:142:10: 142:15
    let mut _2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:144:5: 144:40
    let _3: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:144:5: 144:40
    let mut _4: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:145:5: 145:45
    let _5: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:145:5: 145:45
    let mut _6: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:146:5: 146:49
    let _7: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:146:5: 146:49

    bb0: {
        _3 = &((*_1).0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:144:5: 144:40
        _2 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/mq_agent.rs:144:5: 144:40
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:144:5: 144:40
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:145:5: 145:45
        _4 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(_5) -> [return: bb2, unwind: bb5]; // scope 0 at cita-network/src/mq_agent.rs:145:5: 145:45
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:145:5: 145:45
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-network/src/mq_agent.rs:146:5: 146:49
        _6 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(_7) -> [return: bb3, unwind: bb4]; // scope 0 at cita-network/src/mq_agent.rs:146:5: 146:49
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:146:5: 146:49
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = MqAgentClient { pub_auth: move _2, pub_consensus: move _4, pub_other_modules: move _6 }; // scope 0 at cita-network/src/mq_agent.rs:142:10: 142:15
        return;                          // scope 0 at cita-network/src/mq_agent.rs:142:15: 142:15
    }

    bb4 (cleanup): {
        drop(_4) -> bb5;                 // scope 0 at cita-network/src/mq_agent.rs:142:14: 142:15
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at cita-network/src/mq_agent.rs:142:14: 142:15
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:142:10: 142:15
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::new(_1: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _2: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _3: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> MqAgentClient {
    debug pub_auth => _1;                // in scope 0 at cita-network/src/mq_agent.rs:151:9: 151:17
    debug pub_consensus => _2;           // in scope 0 at cita-network/src/mq_agent.rs:152:9: 152:22
    debug pub_other_modules => _3;       // in scope 0 at cita-network/src/mq_agent.rs:153:9: 153:26
    let mut _0: mq_agent::MqAgentClient; // return place in scope 0 at cita-network/src/mq_agent.rs:154:10: 154:14

    bb0: {
        _0 = MqAgentClient { pub_auth: move _1, pub_consensus: move _2, pub_other_modules: move _3 }; // scope 0 at cita-network/src/mq_agent.rs:155:9: 159:10
        return;                          // scope 0 at cita-network/src/mq_agent.rs:160:6: 160:6
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_auth(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:162:32: 162:37
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:162:39: 162:42
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:162:56: 162:56
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:163:25: 163:64
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:163:25: 163:64
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:163:44: 163:63
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:163:45: 163:52
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:163:54: 163:62
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:163:16: 163:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:164:69: 164:70
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:164:69: 164:70
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:163:20: 163:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:163:20: 163:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:164:19: 164:67
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:163:25: 163:64
        _4 = &((*_1).0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:163:25: 163:64
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:163:45: 163:52
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:163:54: 163:62
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:163:44: 163:63
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:163:25: 163:64
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:163:39: 163:43
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:163:63: 163:64
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:163:16: 163:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:163:16: 163:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:163:20: 163:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:163:20: 163:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::forward_msg_to_auth, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:164:19: 164:67
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:164:19: 164:67
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::forward_msg_to_auth, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:164:19: 164:67
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:164:69: 164:70
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:164:69: 164:70
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:164:69: 164:70
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::forward_msg_to_auth, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:165:9: 165:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:165:9: 165:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:162:5: 166:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:166:6: 166:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:166:5: 166:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_auth: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:164:13: 164:71
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:164:13: 164:71

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:164:13: 164:71
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:164:13: 164:71
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:164:13: 164:71
        _1 = (move _2, move _4, move _6, const 164_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_auth: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67

    bb0: {
        _1 = [const "[MqAgent] Forward message to auth failed: "]; // scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:164:19: 164:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67
        return;                          // scope 0 at cita-network/src/mq_agent.rs:164:19: 164:67
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_auth: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_consensus(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:168:37: 168:42
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:168:44: 168:47
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:168:61: 168:61
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:169:25: 169:69
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:169:25: 169:69
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:169:49: 169:68
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:169:50: 169:57
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:169:59: 169:67
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:169:16: 169:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:170:74: 170:75
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:170:74: 170:75
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:169:20: 169:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:169:20: 169:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:170:19: 170:72
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:169:25: 169:69
        _4 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:169:25: 169:69
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:169:50: 169:57
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:169:59: 169:67
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:169:49: 169:68
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:169:25: 169:69
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:169:44: 169:48
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:169:68: 169:69
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:169:16: 169:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:169:16: 169:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:169:20: 169:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:169:20: 169:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::forward_msg_to_consensus, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:170:19: 170:72
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:170:19: 170:72
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::forward_msg_to_consensus, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:170:19: 170:72
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:170:74: 170:75
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:170:74: 170:75
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:170:74: 170:75
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::forward_msg_to_consensus, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:171:9: 171:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:171:9: 171:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:168:5: 172:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:172:6: 172:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:172:5: 172:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_consensus: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:170:13: 170:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:170:13: 170:76

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:170:13: 170:76
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:170:13: 170:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:170:13: 170:76
        _1 = (move _2, move _4, move _6, const 170_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_consensus: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72

    bb0: {
        _1 = [const "[MqAgent] Forward message to consensus failed: "]; // scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:170:19: 170:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72
        return;                          // scope 0 at cita-network/src/mq_agent.rs:170:19: 170:72
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::forward_msg_to_consensus: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_peer_count(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:174:28: 174:33
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:174:35: 174:38
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:174:52: 174:52
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:175:25: 175:73
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:175:25: 175:73
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:175:53: 175:72
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:175:54: 175:61
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:175:63: 175:71
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:175:16: 175:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:176:61: 176:62
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:176:61: 176:62
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:175:20: 175:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:175:20: 175:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:176:19: 176:59
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:175:25: 175:73
        _4 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:175:25: 175:73
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:175:54: 175:61
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:175:63: 175:71
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:175:53: 175:72
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:175:25: 175:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:175:48: 175:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:175:72: 175:73
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:175:16: 175:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:175:16: 175:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:175:20: 175:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:175:20: 175:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::send_peer_count, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:176:19: 176:59
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:176:19: 176:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::send_peer_count, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:176:19: 176:59
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:176:61: 176:62
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:176:61: 176:62
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:176:61: 176:62
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::send_peer_count, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:177:9: 177:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:177:9: 177:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:174:5: 178:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:178:6: 178:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:178:5: 178:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_peer_count: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:176:13: 176:63
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:176:13: 176:63

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:176:13: 176:63
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:176:13: 176:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:176:13: 176:63
        _1 = (move _2, move _4, move _6, const 176_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_peer_count: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59

    bb0: {
        _1 = [const "[MqAgent] Send peer count failed: "]; // scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:176:19: 176:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59
        return;                          // scope 0 at cita-network/src/mq_agent.rs:176:19: 176:59
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_peer_count: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_snapshot_resp(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:180:31: 180:36
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:180:38: 180:41
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:180:55: 180:55
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:181:25: 181:73
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:181:25: 181:73
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:181:53: 181:72
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:181:54: 181:61
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:181:63: 181:71
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:181:16: 181:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:182:68: 182:69
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:182:68: 182:69
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:181:20: 181:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:181:20: 181:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:182:19: 182:66
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:181:25: 181:73
        _4 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:181:25: 181:73
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:181:54: 181:61
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:181:63: 181:71
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:181:53: 181:72
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:181:25: 181:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:181:48: 181:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:181:72: 181:73
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:181:16: 181:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:181:16: 181:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:181:20: 181:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:181:20: 181:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::send_snapshot_resp, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:182:19: 182:66
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:182:19: 182:66
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::send_snapshot_resp, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:182:19: 182:66
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:182:68: 182:69
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:182:68: 182:69
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:182:68: 182:69
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::send_snapshot_resp, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:183:9: 183:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:183:9: 183:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:180:5: 184:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:184:6: 184:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:184:5: 184:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_snapshot_resp: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:182:13: 182:70
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:182:13: 182:70

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:182:13: 182:70
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:182:13: 182:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:182:13: 182:70
        _1 = (move _2, move _4, move _6, const 182_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_snapshot_resp: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66

    bb0: {
        _1 = [const "[MqAgent] Send snapshot response failed: "]; // scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:182:19: 182:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66
        return;                          // scope 0 at cita-network/src/mq_agent.rs:182:19: 182:66
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::send_snapshot_resp: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_request(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:187:29: 187:34
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:187:36: 187:39
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:187:53: 187:53
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:188:25: 188:73
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:188:25: 188:73
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:188:53: 188:72
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:188:54: 188:61
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:188:63: 188:71
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:188:16: 188:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:189:73: 189:74
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:189:73: 189:74
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:188:20: 188:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:188:20: 188:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:189:19: 189:71
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:188:25: 188:73
        _4 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:188:25: 188:73
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:188:54: 188:61
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:188:63: 188:71
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:188:53: 188:72
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:188:25: 188:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:188:48: 188:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:188:72: 188:73
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:188:16: 188:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:188:16: 188:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:188:20: 188:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:188:20: 188:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::pub_sync_request, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:189:19: 189:71
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:189:19: 189:71
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::pub_sync_request, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:189:19: 189:71
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:189:73: 189:74
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:189:73: 189:74
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:189:73: 189:74
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::pub_sync_request, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:190:9: 190:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:190:9: 190:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:187:5: 191:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:191:6: 191:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:191:5: 191:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:189:13: 189:75
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:189:13: 189:75

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:189:13: 189:75
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:189:13: 189:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:189:13: 189:75
        _1 = (move _2, move _4, move _6, const 189_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71

    bb0: {
        _1 = [const "[MqAgent] Publish synchronize request failed: "]; // scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:189:19: 189:71
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71
        return;                          // scope 0 at cita-network/src/mq_agent.rs:189:19: 189:71
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_blocks(_1: &MqAgentClient, _2: PubMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/mq_agent.rs:193:28: 193:33
    debug msg => _2;                     // in scope 0 at cita-network/src/mq_agent.rs:193:35: 193:38
    let mut _0: ();                      // return place in scope 0 at cita-network/src/mq_agent.rs:193:52: 193:52
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-network/src/mq_agent.rs:194:25: 194:73
    let mut _4: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:194:25: 194:73
    let mut _5: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-network/src/mq_agent.rs:194:53: 194:72
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/mq_agent.rs:194:54: 194:61
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/mq_agent.rs:194:63: 194:71
    let mut _8: isize;                   // in scope 0 at cita-network/src/mq_agent.rs:194:16: 194:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/mq_agent.rs:195:72: 195:73
    let _25: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-network/src/mq_agent.rs:195:72: 195:73
    let mut _29: bool;                   // in scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
    let mut _30: isize;                  // in scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
    scope 1 {
        debug e => _9;                   // in scope 1 at cita-network/src/mq_agent.rs:194:20: 194:21
        let _9: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 1 at cita-network/src/mq_agent.rs:194:20: 194:21
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-network/src/mq_agent.rs:195:19: 195:70
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:194:25: 194:73
        _4 = &((*_1).2: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:194:25: 194:73
        _6 = move (_2.0: std::string::String); // scope 1 at cita-network/src/mq_agent.rs:194:54: 194:61
        _7 = move (_2.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/mq_agent.rs:194:63: 194:71
        _5 = (move _6, move _7);         // scope 1 at cita-network/src/mq_agent.rs:194:53: 194:72
        _3 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _4, move _5) -> bb1; // scope 1 at cita-network/src/mq_agent.rs:194:25: 194:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:194:48: 194:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb1: {
        _29 = const true;                // scope 1 at cita-network/src/mq_agent.rs:194:72: 194:73
        _8 = discriminant(_3);           // scope 1 at cita-network/src/mq_agent.rs:194:16: 194:22
        switchInt(move _8) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/mq_agent.rs:194:16: 194:22
    }

    bb2: {
        _29 = const false;               // scope 1 at cita-network/src/mq_agent.rs:194:20: 194:21
        _9 = move ((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-network/src/mq_agent.rs:194:20: 194:21
        _10 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MqAgentClient::pub_sync_blocks, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _11) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _12) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _27 = const _;                   // scope 2 at cita-network/src/mq_agent.rs:195:19: 195:70
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:195:19: 195:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MqAgentClient::pub_sync_blocks, [], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/mq_agent.rs:195:19: 195:70
        _25 = &_9;                       // scope 2 at cita-network/src/mq_agent.rs:195:72: 195:73
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_25) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/mq_agent.rs:195:72: 195:73
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:195:72: 195:73
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb10: {
        _23 = [move _24];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MqAgentClient::pub_sync_blocks, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_9) -> bb18;                // scope 0 at cita-network/src/mq_agent.rs:196:9: 196:10
    }

    bb13 (cleanup): {
        drop(_9) -> bb14;                // scope 0 at cita-network/src/mq_agent.rs:196:9: 196:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/mq_agent.rs:193:5: 197:6
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
        return;                          // scope 0 at cita-network/src/mq_agent.rs:197:6: 197:6
    }

    bb16: {
        switchInt(_29) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> bb15; // scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
    }

    bb18: {
        _30 = discriminant(_3);          // scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
        switchInt(move _30) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/mq_agent.rs:197:5: 197:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_blocks: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:195:13: 195:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/mq_agent.rs:195:13: 195:74

    bb0: {
        _3 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::mq_agent"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/mq_agent.rs"; // scope 0 at cita-network/src/mq_agent.rs:195:13: 195:74
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:195:13: 195:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/mq_agent.rs:195:13: 195:74
        _1 = (move _2, move _4, move _6, const 195_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_blocks: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70

    bb0: {
        _1 = [const "[MqAgent] Publish synchronize blocks failed: "]; // scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70
                                         // mir::Constant
                                         // + span: cita-network/src/mq_agent.rs:195:19: 195:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70
        return;                          // scope 0 at cita-network/src/mq_agent.rs:195:19: 195:70
    }
}

promoted[2] in mq_agent::<impl at cita-network/src/mq_agent.rs:149:1: 149:19>::pub_sync_blocks: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn mq_agent::<impl at cita-network/src/mq_agent.rs:205:1: 205:16>::new(_1: std::string::String, _2: Vec<u8>) -> PubMessage {
    debug key => _1;                     // in scope 0 at cita-network/src/mq_agent.rs:206:16: 206:19
    debug data => _2;                    // in scope 0 at cita-network/src/mq_agent.rs:206:29: 206:33
    let mut _0: mq_agent::PubMessage;    // return place in scope 0 at cita-network/src/mq_agent.rs:206:47: 206:51

    bb0: {
        _0 = PubMessage { key: move _1, data: move _2 }; // scope 0 at cita-network/src/mq_agent.rs:207:9: 207:33
        return;                          // scope 0 at cita-network/src/mq_agent.rs:208:6: 208:6
    }
}

fn network::<impl at cita-network/src/network.rs:43:1: 43:13>::new(_1: MqAgentClient, _2: NodesManagerClient, _3: SynchronizerClient) -> Network {
    debug mq_client => _1;               // in scope 0 at cita-network/src/network.rs:45:9: 45:18
    debug nodes_mgr_client => _2;        // in scope 0 at cita-network/src/network.rs:46:9: 46:25
    debug sync_client => _3;             // in scope 0 at cita-network/src/network.rs:47:9: 47:20
    let mut _0: network::Network;        // return place in scope 0 at cita-network/src/network.rs:48:10: 48:14
    let _4: pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:49:14: 49:16
    let _5: pubsub::crossbeam_channel::Receiver<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:49:18: 49:20
    let mut _6: (pubsub::crossbeam_channel::Sender<network::NetworkMessage>, pubsub::crossbeam_channel::Receiver<network::NetworkMessage>); // in scope 0 at cita-network/src/network.rs:49:24: 49:35
    let mut _8: pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:50:46: 50:48
    let mut _9: std::sync::Arc<std::sync::atomic::AtomicBool>; // in scope 0 at cita-network/src/network.rs:52:23: 52:55
    let mut _10: std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:52:32: 52:54
    let mut _11: mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:53:13: 53:22
    let mut _12: network::NetworkClient; // in scope 0 at cita-network/src/network.rs:54:29: 54:35
    let mut _13: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/network.rs:55:13: 55:29
    let mut _14: synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/network.rs:56:13: 56:24
    let mut _15: pubsub::crossbeam_channel::Receiver<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:57:27: 57:29
    let mut _16: bool;                   // in scope 0 at cita-network/src/network.rs:59:5: 59:6
    scope 1 {
        debug tx => _4;                  // in scope 1 at cita-network/src/network.rs:49:14: 49:16
        debug rx => _5;                  // in scope 1 at cita-network/src/network.rs:49:18: 49:20
        let _7: network::NetworkClient;  // in scope 1 at cita-network/src/network.rs:50:13: 50:19
        scope 2 {
            debug client => _7;          // in scope 2 at cita-network/src/network.rs:50:13: 50:19
        }
    }

    bb0: {
        _16 = const false;               // scope 0 at cita-network/src/network.rs:49:24: 49:35
        _6 = pubsub::crossbeam_channel::unbounded::<NetworkMessage>() -> [return: bb1, unwind: bb6]; // scope 0 at cita-network/src/network.rs:49:24: 49:35
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:49:24: 49:33
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<NetworkMessage>, pubsub::crossbeam_channel::Receiver<NetworkMessage>) {pubsub::crossbeam_channel::unbounded::<NetworkMessage>}, val: Value(<ZST>) }
    }

    bb1: {
        _16 = const true;                // scope 0 at cita-network/src/network.rs:49:14: 49:16
        _4 = move (_6.0: pubsub::crossbeam_channel::Sender<network::NetworkMessage>); // scope 0 at cita-network/src/network.rs:49:14: 49:16
        _5 = move (_6.1: pubsub::crossbeam_channel::Receiver<network::NetworkMessage>); // scope 0 at cita-network/src/network.rs:49:18: 49:20
        _16 = const false;               // scope 1 at cita-network/src/network.rs:50:46: 50:48
        _8 = move _4;                    // scope 1 at cita-network/src/network.rs:50:46: 50:48
        _7 = NetworkClient { sender: move _8 }; // scope 1 at cita-network/src/network.rs:50:22: 50:50
        _10 = AtomicBool::new(const false) -> [return: bb2, unwind: bb4]; // scope 2 at cita-network/src/network.rs:52:32: 52:54
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:52:32: 52:47
                                         // + literal: Const { ty: fn(bool) -> AtomicBool {AtomicBool::new}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = Arc::<AtomicBool>::new(move _10) -> [return: bb3, unwind: bb4]; // scope 2 at cita-network/src/network.rs:52:23: 52:55
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:52:23: 52:31
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(AtomicBool) -> Arc<AtomicBool> {Arc::<AtomicBool>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = move _1;                   // scope 2 at cita-network/src/network.rs:53:13: 53:22
        _12 = move _7;                   // scope 2 at cita-network/src/network.rs:54:29: 54:35
        _13 = move _2;                   // scope 2 at cita-network/src/network.rs:55:13: 55:29
        _14 = move _3;                   // scope 2 at cita-network/src/network.rs:56:13: 56:24
        _15 = move _5;                   // scope 2 at cita-network/src/network.rs:57:27: 57:29
        _0 = Network { is_pause: move _9, mq_client: move _11, network_client: move _12, nodes_mgr_client: move _13, sync_client: move _14, msg_receiver: move _15 }; // scope 2 at cita-network/src/network.rs:51:9: 58:10
        _16 = const false;               // scope 0 at cita-network/src/network.rs:59:5: 59:6
        return;                          // scope 0 at cita-network/src/network.rs:59:6: 59:6
    }

    bb4 (cleanup): {
        drop(_7) -> bb5;                 // scope 1 at cita-network/src/network.rs:59:5: 59:6
    }

    bb5 (cleanup): {
        drop(_5) -> bb11;                // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }

    bb6 (cleanup): {
        drop(_3) -> bb7;                 // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }

    bb7 (cleanup): {
        drop(_2) -> bb8;                 // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }

    bb8 (cleanup): {
        drop(_1) -> bb9;                 // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:44:5: 59:6
    }

    bb10 (cleanup): {
        drop(_4) -> bb6;                 // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }

    bb11 (cleanup): {
        switchInt(_16) -> [0: bb6, otherwise: bb10]; // scope 0 at cita-network/src/network.rs:59:5: 59:6
    }
}

fn network::<impl at cita-network/src/network.rs:43:1: 43:13>::client(_1: &Network) -> NetworkClient {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:61:19: 61:24
    let mut _0: network::NetworkClient;  // return place in scope 0 at cita-network/src/network.rs:61:29: 61:42
    let mut _2: &network::NetworkClient; // in scope 0 at cita-network/src/network.rs:62:9: 62:36

    bb0: {
        _2 = &((*_1).2: network::NetworkClient); // scope 0 at cita-network/src/network.rs:62:9: 62:36
        _0 = <NetworkClient as Clone>::clone(move _2) -> bb1; // scope 0 at cita-network/src/network.rs:62:9: 62:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:62:29: 62:34
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient) -> NetworkClient {<NetworkClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/network.rs:63:6: 63:6
    }
}

fn network::<impl at cita-network/src/network.rs:43:1: 43:13>::run(_1: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:65:16: 65:25
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:65:27: 65:27
    let mut _2: std::result::Result<network::NetworkMessage, pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/network.rs:67:30: 67:54
    let mut _3: &pubsub::crossbeam_channel::Receiver<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:67:30: 67:54
    let mut _4: isize;                   // in scope 0 at cita-network/src/network.rs:67:20: 67:27
    let _6: ();                          // in scope 0 at cita-network/src/network.rs:68:17: 68:33
    let mut _7: bool;                    // in scope 0 at cita-network/src/network.rs:70:9: 70:10
    let mut _8: isize;                   // in scope 0 at cita-network/src/network.rs:70:9: 70:10
    scope 1 {
        debug msg => _5;                 // in scope 1 at cita-network/src/network.rs:67:23: 67:26
        let _5: network::NetworkMessage; // in scope 1 at cita-network/src/network.rs:67:23: 67:26
    }

    bb0: {
        _7 = const false;                // scope 0 at cita-network/src/network.rs:66:9: 70:10
        goto -> bb1;                     // scope 0 at cita-network/src/network.rs:66:9: 70:10
    }

    bb1: {
        _3 = &((*_1).5: pubsub::crossbeam_channel::Receiver<network::NetworkMessage>); // scope 1 at cita-network/src/network.rs:67:30: 67:54
        _7 = const true;                 // scope 1 at cita-network/src/network.rs:67:30: 67:54
        _2 = pubsub::crossbeam_channel::Receiver::<NetworkMessage>::recv(move _3) -> bb2; // scope 1 at cita-network/src/network.rs:67:30: 67:54
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:67:48: 67:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<NetworkMessage>) -> Result<NetworkMessage, pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<NetworkMessage>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = discriminant(_2);           // scope 1 at cita-network/src/network.rs:67:20: 67:27
        switchInt(move _4) -> [0: bb3, otherwise: bb7]; // scope 1 at cita-network/src/network.rs:67:20: 67:27
    }

    bb3: {
        _7 = const false;                // scope 1 at cita-network/src/network.rs:67:23: 67:26
        _5 = move ((_2 as Ok).0: network::NetworkMessage); // scope 1 at cita-network/src/network.rs:67:23: 67:26
        _6 = NetworkMessage::handle(move _5, _1) -> bb7; // scope 1 at cita-network/src/network.rs:68:17: 68:33
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:68:21: 68:27
                                         // + literal: Const { ty: for<'a> fn(NetworkMessage, &'a mut Network) {NetworkMessage::handle}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = const false;                // scope 0 at cita-network/src/network.rs:70:9: 70:10
        goto -> bb1;                     // scope 0 at cita-network/src/network.rs:66:9: 70:10
    }

    bb5: {
        switchInt(_7) -> [0: bb4, otherwise: bb6]; // scope 0 at cita-network/src/network.rs:70:9: 70:10
    }

    bb6: {
        drop(((_2 as Ok).0: network::NetworkMessage)) -> bb4; // scope 0 at cita-network/src/network.rs:70:9: 70:10
    }

    bb7: {
        _8 = discriminant(_2);           // scope 0 at cita-network/src/network.rs:70:9: 70:10
        switchInt(move _8) -> [0: bb5, otherwise: bb4]; // scope 0 at cita-network/src/network.rs:70:9: 70:10
    }
}

fn network::<impl at cita-network/src/network.rs:74:10: 74:15>::clone(_1: &NetworkClient) -> NetworkClient {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:74:10: 74:15
    let mut _0: network::NetworkClient;  // return place in scope 0 at cita-network/src/network.rs:74:10: 74:15
    let mut _2: pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:76:5: 76:35
    let _3: &pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:76:5: 76:35

    bb0: {
        _3 = &((*_1).0: pubsub::crossbeam_channel::Sender<network::NetworkMessage>); // scope 0 at cita-network/src/network.rs:76:5: 76:35
        _2 = <pubsub::crossbeam_channel::Sender<NetworkMessage> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/network.rs:76:5: 76:35
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:76:5: 76:35
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<NetworkMessage>) -> pubsub::crossbeam_channel::Sender<NetworkMessage> {<pubsub::crossbeam_channel::Sender<NetworkMessage> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = NetworkClient { sender: move _2 }; // scope 0 at cita-network/src/network.rs:74:10: 74:15
        return;                          // scope 0 at cita-network/src/network.rs:74:15: 74:15
    }
}

fn network::<impl at cita-network/src/network.rs:74:17: 74:22>::fmt(_1: &NetworkClient, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:74:17: 74:22
    debug f => _2;                       // in scope 0 at cita-network/src/network.rs:74:17: 74:22
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/network.rs:74:17: 74:22
    let _3: &str;                        // in scope 0 at cita-network/src/network.rs:74:17: 74:22
    let _4: &str;                        // in scope 0 at cita-network/src/network.rs:76:5: 76:35
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/network.rs:76:5: 76:35
    let _6: &&pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:76:5: 76:35
    let _7: &pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:76:5: 76:35

    bb0: {
        _3 = const "NetworkClient";      // scope 0 at cita-network/src/network.rs:74:17: 74:22
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:74:17: 74:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "sender";             // scope 0 at cita-network/src/network.rs:76:5: 76:35
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:76:5: 76:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &((*_1).0: pubsub::crossbeam_channel::Sender<network::NetworkMessage>); // scope 0 at cita-network/src/network.rs:76:5: 76:35
        _6 = &_7;                        // scope 0 at cita-network/src/network.rs:76:5: 76:35
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/network.rs:76:5: 76:35
        _0 = std::fmt::Formatter::<'_>::debug_struct_field1_finish(_2, _3, _4, move _5) -> bb1; // scope 0 at cita-network/src/network.rs:74:17: 74:22
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:74:17: 74:22
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/network.rs:74:22: 74:22
    }
}

fn network::<impl at cita-network/src/network.rs:79:1: 79:19>::new(_1: pubsub::crossbeam_channel::Sender<NetworkMessage>) -> NetworkClient {
    debug sender => _1;                  // in scope 0 at cita-network/src/network.rs:80:16: 80:22
    let mut _0: network::NetworkClient;  // return place in scope 0 at cita-network/src/network.rs:80:51: 80:55

    bb0: {
        _0 = NetworkClient { sender: move _1 }; // scope 0 at cita-network/src/network.rs:81:9: 81:33
        return;                          // scope 0 at cita-network/src/network.rs:82:6: 82:6
    }
}

fn network::<impl at cita-network/src/network.rs:79:1: 79:19>::handle_local_message(_1: &NetworkClient, _2: LocalMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:84:33: 84:38
    debug msg => _2;                     // in scope 0 at cita-network/src/network.rs:84:40: 84:43
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:84:59: 84:59
    let _3: ();                          // in scope 0 at cita-network/src/network.rs:85:9: 85:61
    let mut _4: network::NetworkMessage; // in scope 0 at cita-network/src/network.rs:85:27: 85:60

    bb0: {
        _4 = NetworkMessage::LocalMessage(move _2); // scope 0 at cita-network/src/network.rs:85:27: 85:60
        _3 = NetworkClient::send_message(_1, move _4) -> bb1; // scope 0 at cita-network/src/network.rs:85:9: 85:61
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:85:14: 85:26
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient, NetworkMessage) {NetworkClient::send_message}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/network.rs:86:6: 86:6
    }
}

fn network::<impl at cita-network/src/network.rs:79:1: 79:19>::handle_remote_message(_1: &NetworkClient, _2: RemoteMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:88:34: 88:39
    debug msg => _2;                     // in scope 0 at cita-network/src/network.rs:88:41: 88:44
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:88:61: 88:61
    let _3: ();                          // in scope 0 at cita-network/src/network.rs:89:9: 89:62
    let mut _4: network::NetworkMessage; // in scope 0 at cita-network/src/network.rs:89:27: 89:61

    bb0: {
        _4 = NetworkMessage::RemoteMessage(move _2); // scope 0 at cita-network/src/network.rs:89:27: 89:61
        _3 = NetworkClient::send_message(_1, move _4) -> bb1; // scope 0 at cita-network/src/network.rs:89:9: 89:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:89:14: 89:26
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient, NetworkMessage) {NetworkClient::send_message}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/network.rs:90:6: 90:6
    }
}

fn network::<impl at cita-network/src/network.rs:79:1: 79:19>::send_message(_1: &NetworkClient, _2: NetworkMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:92:21: 92:26
    debug msg => _2;                     // in scope 0 at cita-network/src/network.rs:92:28: 92:31
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:92:49: 92:49
    let _3: ();                          // in scope 0 at cita-network/src/network.rs:93:9: 95:11
    let mut _4: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<network::NetworkMessage>>; // in scope 0 at cita-network/src/network.rs:93:9: 93:34
    let mut _5: &pubsub::crossbeam_channel::Sender<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:93:9: 93:34

    bb0: {
        _5 = &((*_1).0: pubsub::crossbeam_channel::Sender<network::NetworkMessage>); // scope 0 at cita-network/src/network.rs:93:9: 93:34
        _4 = pubsub::crossbeam_channel::Sender::<NetworkMessage>::try_send(move _5, move _2) -> bb1; // scope 0 at cita-network/src/network.rs:93:9: 93:34
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:93:21: 93:29
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<NetworkMessage>, NetworkMessage) -> Result<(), pubsub::crossbeam_channel::TrySendError<NetworkMessage>> {pubsub::crossbeam_channel::Sender::<NetworkMessage>::try_send}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Result::<(), pubsub::crossbeam_channel::TrySendError<NetworkMessage>>::unwrap_or_else::<[closure@cita-network/src/network.rs:93:50: 93:55]>(move _4, const ZeroSized: [closure@cita-network/src/network.rs:93:50: 93:55]) -> bb2; // scope 0 at cita-network/src/network.rs:93:9: 95:11
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:93:35: 93:49
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::TrySendError<NetworkMessage>>, [closure@cita-network/src/network.rs:93:50: 93:55]) {Result::<(), pubsub::crossbeam_channel::TrySendError<NetworkMessage>>::unwrap_or_else::<[closure@cita-network/src/network.rs:93:50: 93:55]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/network.rs:93:50: 93:55], val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/network.rs:96:6: 96:6
    }
}

fn network::<impl at cita-network/src/network.rs:79:1: 79:19>::send_message::{closure#0}(_1: [closure@cita-network/src/network.rs:93:50: 93:55], _2: pubsub::crossbeam_channel::TrySendError<NetworkMessage>) -> () {
    debug err => _2;                     // in scope 0 at cita-network/src/network.rs:93:51: 93:54
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:93:56: 93:56
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/network.rs:94:19: 94:68
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:94:70: 94:73
    let _18: &pubsub::crossbeam_channel::TrySendError<network::NetworkMessage>; // in scope 0 at cita-network/src/network.rs:94:70: 94:73
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _19: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _20: &[&str; 1];         // in scope 1 at cita-network/src/network.rs:94:19: 94:68
        let mut _21: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _3 = log::Level::Warn;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _21 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NetworkClient::send_message::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _21) -> [return: bb4, unwind: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> [return: bb5, unwind: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb10, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> [return: bb6, unwind: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _20 = const _;                   // scope 1 at cita-network/src/network.rs:94:19: 94:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:94:19: 94:68
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NetworkClient::send_message::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _13 = _20 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/network.rs:94:19: 94:68
        _18 = &_2;                       // scope 1 at cita-network/src/network.rs:94:70: 94:73
        _17 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<NetworkMessage>>(_18) -> [return: bb8, unwind: bb12]; // scope 1 at cita-network/src/network.rs:94:70: 94:73
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:94:70: 94:73
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<NetworkMessage>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<NetworkMessage>>}, val: Value(<ZST>) }
    }

    bb8: {
        _16 = [move _17];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb9, unwind: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NetworkClient::send_message::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _11 = log::__private_api_log(move _12, _3, _19) -> [return: bb14, unwind: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb10: {
        drop(_2) -> bb11;                // scope 0 at cita-network/src/network.rs:95:9: 95:10
    }

    bb11: {
        return;                          // scope 0 at cita-network/src/network.rs:95:10: 95:10
    }

    bb12 (cleanup): {
        drop(_2) -> bb13;                // scope 0 at cita-network/src/network.rs:95:9: 95:10
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:93:50: 95:10
    }

    bb14: {
        goto -> bb10;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:79:1: 79:19>::send_message::{closure#0}: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:94:13: 94:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:94:13: 94:74

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:94:13: 94:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:94:13: 94:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:94:13: 94:74
        _1 = (move _2, move _4, move _6, const 94_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:79:1: 79:19>::send_message::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:94:19: 94:68
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:94:19: 94:68

    bb0: {
        _1 = [const "[Network] Send message to network failed : "]; // scope 0 at cita-network/src/network.rs:94:19: 94:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:94:19: 94:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:94:19: 94:68
        return;                          // scope 0 at cita-network/src/network.rs:94:19: 94:68
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:79:1: 79:19>::send_message::{closure#0}: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network::<impl at cita-network/src/network.rs:104:1: 104:20>::handle(_1: NetworkMessage, _2: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:105:19: 105:23
    debug service => _2;                 // in scope 0 at cita-network/src/network.rs:105:25: 105:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:105:48: 105:48
    let mut _3: isize;                   // in scope 0 at cita-network/src/network.rs:107:13: 107:46
    let _4: network::LocalMessage;       // in scope 0 at cita-network/src/network.rs:107:42: 107:45
    let _5: network::RemoteMessage;      // in scope 0 at cita-network/src/network.rs:108:43: 108:46
    scope 1 {
        debug msg => _4;                 // in scope 1 at cita-network/src/network.rs:107:42: 107:45
    }
    scope 2 {
        debug msg => _5;                 // in scope 2 at cita-network/src/network.rs:108:43: 108:46
    }

    bb0: {
        _3 = discriminant(_1);           // scope 0 at cita-network/src/network.rs:106:15: 106:19
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at cita-network/src/network.rs:106:9: 106:19
    }

    bb1: {
        _5 = move ((_1 as RemoteMessage).0: network::RemoteMessage); // scope 0 at cita-network/src/network.rs:108:43: 108:46
        _0 = RemoteMessage::handle(move _5, _2) -> bb4; // scope 2 at cita-network/src/network.rs:108:51: 108:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:108:55: 108:61
                                         // + literal: Const { ty: for<'a> fn(RemoteMessage, &'a mut Network) {RemoteMessage::handle}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-network/src/network.rs:106:15: 106:19
    }

    bb3: {
        _4 = move ((_1 as LocalMessage).0: network::LocalMessage); // scope 0 at cita-network/src/network.rs:107:42: 107:45
        _0 = LocalMessage::handle(move _4, _2) -> bb4; // scope 1 at cita-network/src/network.rs:107:50: 107:69
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:107:54: 107:60
                                         // + literal: Const { ty: for<'a> fn(LocalMessage, &'a mut Network) {LocalMessage::handle}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-network/src/network.rs:110:6: 110:6
    }
}

fn network::<impl at cita-network/src/network.rs:117:1: 117:18>::new(_1: std::string::String, _2: Vec<u8>) -> LocalMessage {
    debug key => _1;                     // in scope 0 at cita-network/src/network.rs:118:16: 118:19
    debug data => _2;                    // in scope 0 at cita-network/src/network.rs:118:29: 118:33
    let mut _0: network::LocalMessage;   // return place in scope 0 at cita-network/src/network.rs:118:47: 118:51

    bb0: {
        _0 = LocalMessage { key: move _1, data: move _2 }; // scope 0 at cita-network/src/network.rs:119:9: 119:35
        return;                          // scope 0 at cita-network/src/network.rs:120:6: 120:6
    }
}

fn network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle(_1: LocalMessage, _2: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:122:19: 122:23
    debug service => _2;                 // in scope 0 at cita-network/src/network.rs:122:25: 122:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:122:48: 122:48
    let _3: libproto::router::RoutingKey; // in scope 0 at cita-network/src/network.rs:123:13: 123:19
    let mut _4: &std::string::String;    // in scope 0 at cita-network/src/network.rs:123:39: 123:48
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-network/src/network.rs:124:16: 124:57
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:124:59: 124:67
    let _20: &std::string::String;       // in scope 0 at cita-network/src/network.rs:124:59: 124:67
    let mut _21: bool;                   // in scope 0 at cita-network/src/network.rs:126:12: 127:63
    let mut _22: bool;                   // in scope 0 at cita-network/src/network.rs:126:12: 126:51
    let mut _23: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:126:12: 126:51
    let _24: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:126:12: 126:51
    let mut _25: &std::sync::Arc<std::sync::atomic::AtomicBool>; // in scope 0 at cita-network/src/network.rs:126:12: 126:51
    let mut _26: std::sync::atomic::Ordering; // in scope 0 at cita-network/src/network.rs:126:34: 126:50
    let mut _27: bool;                   // in scope 0 at cita-network/src/network.rs:127:16: 127:63
    let mut _28: &libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:127:16: 127:39
    let _29: libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:127:16: 127:39
    let mut _30: libproto::router::RoutingKey; // in scope 0 at cita-network/src/network.rs:127:16: 127:22
    let mut _31: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _32: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _33: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _34: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let _35: ();                         // in scope 0 at cita-network/src/network.rs:134:17: 136:88
    let mut _36: &synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/network.rs:134:17: 136:88
    let mut _37: synchronizer::SynchronizerMessage; // in scope 0 at cita-network/src/network.rs:136:42: 136:87
    let mut _38: std::string::String;    // in scope 0 at cita-network/src/network.rs:136:67: 136:75
    let mut _39: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:136:77: 136:86
    let mut _41: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/network.rs:139:27: 139:61
    let mut _42: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/network.rs:139:50: 139:60
    let mut _44: libproto::Message;      // in scope 0 at cita-network/src/network.rs:140:50: 140:53
    let _45: ();                         // in scope 0 at cita-network/src/network.rs:141:17: 141:63
    let mut _46: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/network.rs:141:17: 141:63
    let mut _47: node_manager::DealRichStatusReq; // in scope 0 at cita-network/src/network.rs:141:59: 141:62
    let mut _49: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/network.rs:144:27: 144:61
    let mut _50: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/network.rs:144:50: 144:60
    let _51: ();                         // in scope 0 at cita-network/src/network.rs:145:17: 149:18
    let _52: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/network.rs:146:21: 146:46
    let mut _53: std::string::String;    // in scope 0 at cita-network/src/network.rs:147:21: 147:70
    let mut _54: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _55: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _56: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _57: libproto::Message;      // in scope 0 at cita-network/src/network.rs:148:21: 148:24
    let _58: ();                         // in scope 0 at cita-network/src/network.rs:152:17: 152:52
    let mut _59: &network::LocalMessage; // in scope 0 at cita-network/src/network.rs:152:17: 152:52
    let mut _60: &[u8];                  // in scope 0 at cita-network/src/network.rs:152:32: 152:42
    let _61: &[u8];                      // in scope 0 at cita-network/src/network.rs:152:32: 152:42
    let _62: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/network.rs:152:32: 152:42
    let _63: ();                         // in scope 0 at cita-network/src/network.rs:155:17: 155:59
    let mut _64: &network::LocalMessage; // in scope 0 at cita-network/src/network.rs:155:17: 155:59
    let mut _65: &[u8];                  // in scope 0 at cita-network/src/network.rs:155:39: 155:49
    let _66: &[u8];                      // in scope 0 at cita-network/src/network.rs:155:39: 155:49
    let _67: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/network.rs:155:39: 155:49
    let mut _69: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _70: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _71: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _72: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _73: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _74: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _75: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _76: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _77: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _78: &[&str];                // in scope 0 at cita-network/src/network.rs:158:23: 158:62
    let _79: ();                         // in scope 0 at cita-network/src/network.rs:159:17: 159:55
    let mut _80: &network::LocalMessage; // in scope 0 at cita-network/src/network.rs:159:17: 159:55
    let mut _81: &[u8];                  // in scope 0 at cita-network/src/network.rs:159:35: 159:45
    let _82: &[u8];                      // in scope 0 at cita-network/src/network.rs:159:35: 159:45
    let _83: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/network.rs:159:35: 159:45
    let mut _85: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _86: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _87: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _88: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _89: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _90: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _91: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _92: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _93: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _94: &[&str];                // in scope 0 at cita-network/src/network.rs:162:24: 162:64
    let mut _95: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _96: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _97: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _98: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:162:66: 162:74
    let _99: &std::string::String;       // in scope 0 at cita-network/src/network.rs:162:66: 162:74
    let mut _110: bool;                  // in scope 0 at cita-network/src/network.rs:165:5: 165:6
    let mut _111: bool;                  // in scope 0 at cita-network/src/network.rs:165:5: 165:6
    let mut _112: bool;                  // in scope 0 at cita-network/src/network.rs:150:13: 150:14
    scope 1 {
        debug rt_key => _3;              // in scope 1 at cita-network/src/network.rs:123:13: 123:19
        let _5: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _40: libproto::Message;      // in scope 1 at cita-network/src/network.rs:139:21: 139:24
        let _48: libproto::Message;      // in scope 1 at cita-network/src/network.rs:144:21: 144:24
        let _68: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _84: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _106: &libproto::router::SubModules; // in scope 1 at cita-network/src/network.rs:127:43: 127:63
        scope 2 {
            debug lvl => _5;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _107: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _108: &[&str; 1];    // in scope 2 at cita-network/src/network.rs:124:16: 124:57
            let mut _109: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug msg => _40;            // in scope 3 at cita-network/src/network.rs:139:21: 139:24
            let _43: node_manager::DealRichStatusReq; // in scope 3 at cita-network/src/network.rs:140:21: 140:24
            scope 4 {
                debug req => _43;        // in scope 4 at cita-network/src/network.rs:140:21: 140:24
            }
        }
        scope 5 {
            debug msg => _48;            // in scope 5 at cita-network/src/network.rs:144:21: 144:24
        }
        scope 6 {
            debug lvl => _68;            // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _100: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _101: &[&str; 1];    // in scope 6 at cita-network/src/network.rs:158:23: 158:62
            let mut _102: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 7 {
            debug lvl => _84;            // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _103: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _104: &[&str; 2];    // in scope 7 at cita-network/src/network.rs:162:24: 162:64
            let mut _105: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _111 = const false;              // scope 0 at cita-network/src/network.rs:123:13: 123:19
        _110 = const false;              // scope 0 at cita-network/src/network.rs:123:13: 123:19
        _112 = const false;              // scope 0 at cita-network/src/network.rs:123:13: 123:19
        _110 = const true;               // scope 0 at cita-network/src/network.rs:123:13: 123:19
        _111 = const true;               // scope 0 at cita-network/src/network.rs:123:13: 123:19
        _4 = &(_1.0: std::string::String); // scope 0 at cita-network/src/network.rs:123:39: 123:48
        _3 = <RoutingKey as From<&std::string::String>>::from(move _4) -> [return: bb1, unwind: bb73]; // scope 0 at cita-network/src/network.rs:123:22: 123:49
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:123:22: 123:38
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&std::string::String) -> RoutingKey {<RoutingKey as From<&std::string::String>>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = log::Level::Trace;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _8 = &_5;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _109 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::handle, [], Some(promoted[9])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _109) -> [return: bb5, unwind: bb73]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _10 = &_5;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> [return: bb6, unwind: bb73]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _6) -> [0: bb11, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _7) -> [0: bb2, otherwise: bb3]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> [return: bb7, unwind: bb73]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = move _9;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _108 = const _;                  // scope 2 at cita-network/src/network.rs:124:16: 124:57
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:124:16: 124:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::handle, [], Some(promoted[8])) }
        _15 = _108 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/network.rs:124:16: 124:57
        _20 = &(_1.0: std::string::String); // scope 2 at cita-network/src/network.rs:124:59: 124:67
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_20) -> [return: bb9, unwind: bb73]; // scope 2 at cita-network/src/network.rs:124:59: 124:67
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:124:59: 124:67
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = [move _19];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> [return: bb10, unwind: bb73]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _107 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::handle, [], Some(promoted[7])) }
        _13 = log::__private_api_log(move _14, _5, _107) -> [return: bb74, unwind: bb73]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = &((*_2).0: std::sync::Arc<std::sync::atomic::AtomicBool>); // scope 1 at cita-network/src/network.rs:126:12: 126:51
        _24 = <Arc<AtomicBool> as Deref>::deref(move _25) -> [return: bb15, unwind: bb73]; // scope 1 at cita-network/src/network.rs:126:12: 126:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:126:12: 126:51
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<AtomicBool>) -> &'a <Arc<AtomicBool> as Deref>::Target {<Arc<AtomicBool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb12: {
        _21 = const false;               // scope 1 at cita-network/src/network.rs:126:12: 127:63
        goto -> bb14;                    // scope 1 at cita-network/src/network.rs:126:12: 127:63
    }

    bb13: {
        _30 = _3;                        // scope 1 at cita-network/src/network.rs:127:16: 127:22
        _29 = RoutingKey::get_sub_module(move _30) -> [return: bb17, unwind: bb73]; // scope 1 at cita-network/src/network.rs:127:16: 127:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:127:23: 127:37
                                         // + literal: Const { ty: fn(RoutingKey) -> SubModules {RoutingKey::get_sub_module}, val: Value(<ZST>) }
    }

    bb14: {
        switchInt(move _21) -> [0: bb20, otherwise: bb19]; // scope 1 at cita-network/src/network.rs:126:12: 127:63
    }

    bb15: {
        _23 = _24;                       // scope 1 at cita-network/src/network.rs:126:12: 126:51
        _26 = const SeqCst;              // scope 1 at cita-network/src/network.rs:126:34: 126:50
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _22 = AtomicBool::load(move _23, move _26) -> [return: bb16, unwind: bb73]; // scope 1 at cita-network/src/network.rs:126:12: 126:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:126:29: 126:33
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicBool, std::sync::atomic::Ordering) -> bool {AtomicBool::load}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _22) -> [0: bb12, otherwise: bb13]; // scope 1 at cita-network/src/network.rs:126:12: 127:63
    }

    bb17: {
        _28 = &_29;                      // scope 1 at cita-network/src/network.rs:127:16: 127:39
        _106 = const _;                  // scope 1 at cita-network/src/network.rs:127:43: 127:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:127:43: 127:63
                                         // + literal: Const { ty: &SubModules, val: Unevaluated(LocalMessage::handle, [], Some(promoted[6])) }
        _27 = <SubModules as PartialEq>::ne(move _28, _106) -> [return: bb18, unwind: bb73]; // scope 1 at cita-network/src/network.rs:127:16: 127:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:127:16: 127:63
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a SubModules, &'b SubModules) -> bool {<SubModules as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb18: {
        _21 = move _27;                  // scope 1 at cita-network/src/network.rs:126:12: 127:63
        goto -> bb14;                    // scope 1 at cita-network/src/network.rs:126:12: 127:63
    }

    bb19: {
        drop(_1) -> bb61;                // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb20: {
        _34 = discriminant((_3.0: libproto::router::SubModules)); // scope 1 at cita-network/src/network.rs:132:15: 132:21
        switchInt(move _34) -> [0: bb21, 2: bb23, 7: bb24, otherwise: bb22]; // scope 1 at cita-network/src/network.rs:132:9: 132:21
    }

    bb21: {
        _31 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:132:15: 132:21
        switchInt(move _31) -> [30: bb36, 33: bb38, otherwise: bb22]; // scope 1 at cita-network/src/network.rs:132:9: 132:21
    }

    bb22: {
        _84 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _87 = &_84;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _105 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::handle, [], Some(promoted[5])) }
        _86 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _87, _105) -> [return: bb54, unwind: bb73]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _32 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:132:15: 132:21
        switchInt(move _32) -> [4: bb31, 5: bb25, 6: bb27, otherwise: bb22]; // scope 1 at cita-network/src/network.rs:132:9: 132:21
    }

    bb24: {
        _33 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:132:15: 132:21
        switchInt(move _33) -> [17: bb40, otherwise: bb22]; // scope 1 at cita-network/src/network.rs:132:9: 132:21
    }

    bb25: {
        _36 = &((*_2).4: synchronizer::SynchronizerClient); // scope 1 at cita-network/src/network.rs:134:17: 136:88
        _111 = const false;              // scope 1 at cita-network/src/network.rs:136:67: 136:75
        _38 = move (_1.0: std::string::String); // scope 1 at cita-network/src/network.rs:136:67: 136:75
        _110 = const false;              // scope 1 at cita-network/src/network.rs:136:77: 136:86
        _39 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:136:77: 136:86
        _37 = SynchronizerMessage::new(move _38, move _39) -> [return: bb26, unwind: bb73]; // scope 1 at cita-network/src/network.rs:136:42: 136:87
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:136:42: 136:66
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> SynchronizerMessage {SynchronizerMessage::new}, val: Value(<ZST>) }
    }

    bb26: {
        _35 = SynchronizerClient::handle_local_status(move _36, move _37) -> [return: bb75, unwind: bb73]; // scope 1 at cita-network/src/network.rs:134:17: 136:88
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:136:22: 136:41
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::handle_local_status}, val: Value(<ZST>) }
    }

    bb27: {
        _42 = &(_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:139:50: 139:60
        _41 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _42) -> [return: bb28, unwind: bb73]; // scope 1 at cita-network/src/network.rs:139:27: 139:61
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:139:27: 139:49
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb28: {
        _40 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _41) -> [return: bb29, unwind: bb73]; // scope 1 at cita-network/src/network.rs:139:27: 139:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:139:62: 139:68
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb29: {
        _44 = move _40;                  // scope 3 at cita-network/src/network.rs:140:50: 140:53
        _43 = DealRichStatusReq::new(move _44) -> [return: bb30, unwind: bb73]; // scope 3 at cita-network/src/network.rs:140:27: 140:54
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:140:27: 140:49
                                         // + literal: Const { ty: fn(libproto::Message) -> DealRichStatusReq {DealRichStatusReq::new}, val: Value(<ZST>) }
    }

    bb30: {
        _46 = &((*_2).3: node_manager::NodesManagerClient); // scope 4 at cita-network/src/network.rs:141:17: 141:63
        _47 = move _43;                  // scope 4 at cita-network/src/network.rs:141:59: 141:62
        _45 = NodesManagerClient::deal_rich_status(move _46, move _47) -> [return: bb76, unwind: bb73]; // scope 4 at cita-network/src/network.rs:141:17: 141:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:141:42: 141:58
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, DealRichStatusReq) {NodesManagerClient::deal_rich_status}, val: Value(<ZST>) }
    }

    bb31: {
        _50 = &(_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:144:50: 144:60
        _49 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _50) -> [return: bb32, unwind: bb73]; // scope 1 at cita-network/src/network.rs:144:27: 144:61
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:144:27: 144:49
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb32: {
        _48 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _49) -> [return: bb33, unwind: bb73]; // scope 1 at cita-network/src/network.rs:144:27: 144:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:144:62: 144:68
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb33: {
        _112 = const true;               // scope 1 at cita-network/src/network.rs:144:69: 144:70
        _52 = &((*_2).3: node_manager::NodesManagerClient); // scope 5 at cita-network/src/network.rs:146:21: 146:46
        _55 = const libproto::router::SubModules::Synchronizer; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x06)) }
        _56 = const libproto::router::MsgType::SyncResponse; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x04)) }
        _54 = RoutingKey(move _55, move _56); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _53 = <RoutingKey as Into<std::string::String>>::into(move _54) -> [return: bb34, unwind: bb69]; // scope 5 at cita-network/src/network.rs:147:21: 147:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:147:64: 147:68
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb34: {
        _112 = const false;              // scope 5 at cita-network/src/network.rs:148:21: 148:24
        _57 = move _48;                  // scope 5 at cita-network/src/network.rs:148:21: 148:24
        _51 = send_message(_52, move _53, move _57) -> [return: bb35, unwind: bb69]; // scope 5 at cita-network/src/network.rs:145:17: 149:18
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:145:17: 145:29
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, std::string::String, libproto::Message) {send_message}, val: Value(<ZST>) }
    }

    bb35: {
        _112 = const false;              // scope 1 at cita-network/src/network.rs:150:13: 150:14
        goto -> bb60;                    // scope 1 at cita-network/src/network.rs:150:13: 150:14
    }

    bb36: {
        _59 = &_1;                       // scope 1 at cita-network/src/network.rs:152:17: 152:52
        _62 = &(_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:152:32: 152:42
        _61 = <Vec<u8> as Deref>::deref(_62) -> [return: bb37, unwind: bb73]; // scope 1 at cita-network/src/network.rs:152:32: 152:42
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:152:32: 152:42
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb37: {
        _60 = _61;                       // scope 1 at cita-network/src/network.rs:152:32: 152:42
        _58 = LocalMessage::reply_rpc(move _59, move _60, _2) -> [return: bb77, unwind: bb73]; // scope 1 at cita-network/src/network.rs:152:17: 152:52
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:152:22: 152:31
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a LocalMessage, &'b [u8], &'c mut Network) {LocalMessage::reply_rpc}, val: Value(<ZST>) }
    }

    bb38: {
        _64 = &_1;                       // scope 1 at cita-network/src/network.rs:155:17: 155:59
        _67 = &(_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:155:39: 155:49
        _66 = <Vec<u8> as Deref>::deref(_67) -> [return: bb39, unwind: bb73]; // scope 1 at cita-network/src/network.rs:155:39: 155:49
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:155:39: 155:49
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb39: {
        _65 = _66;                       // scope 1 at cita-network/src/network.rs:155:39: 155:49
        _63 = LocalMessage::reply_peers_info(move _64, move _65, _2) -> [return: bb78, unwind: bb73]; // scope 1 at cita-network/src/network.rs:155:17: 155:59
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:155:22: 155:38
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a LocalMessage, &'b [u8], &'c mut Network) {LocalMessage::reply_peers_info}, val: Value(<ZST>) }
    }

    bb40: {
        _68 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _71 = &_68;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _102 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::handle, [], Some(promoted[2])) }
        _70 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _71, _102) -> [return: bb44, unwind: bb73]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb41: {
        _69 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb43;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb42: {
        _73 = &_68;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _75 = log::max_level() -> [return: bb45, unwind: bb73]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb43: {
        switchInt(move _69) -> [0: bb49, otherwise: bb47]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        switchInt(move _70) -> [0: bb41, otherwise: bb42]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb45: {
        _74 = &_75;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _72 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _73, move _74) -> [return: bb46, unwind: bb73]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb46: {
        _69 = move _72;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb43;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _101 = const _;                  // scope 6 at cita-network/src/network.rs:158:23: 158:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:158:23: 158:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::handle, [], Some(promoted[1])) }
        _78 = _101 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/network.rs:158:23: 158:62
        _77 = Arguments::<'_>::new_const(move _78) -> [return: bb48, unwind: bb73]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb48: {
        _100 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::handle, [], Some(promoted[0])) }
        _76 = log::__private_api_log(move _77, _68, _100) -> [return: bb79, unwind: bb73]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb49: {
        _80 = &_1;                       // scope 1 at cita-network/src/network.rs:159:17: 159:55
        _83 = &(_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:159:35: 159:45
        _82 = <Vec<u8> as Deref>::deref(_83) -> [return: bb50, unwind: bb73]; // scope 1 at cita-network/src/network.rs:159:35: 159:45
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:159:35: 159:45
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb50: {
        _81 = _82;                       // scope 1 at cita-network/src/network.rs:159:35: 159:45
        _79 = LocalMessage::snapshot_req(move _80, move _81, _2) -> [return: bb80, unwind: bb73]; // scope 1 at cita-network/src/network.rs:159:17: 159:55
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:159:22: 159:34
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a LocalMessage, &'b [u8], &'c mut Network) {LocalMessage::snapshot_req}, val: Value(<ZST>) }
    }

    bb51: {
        _85 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb53;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb52: {
        _89 = &_84;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _91 = log::max_level() -> [return: bb55, unwind: bb73]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb53: {
        switchInt(move _85) -> [0: bb60, otherwise: bb57]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb54: {
        switchInt(move _86) -> [0: bb51, otherwise: bb52]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb55: {
        _90 = &_91;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _88 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _89, move _90) -> [return: bb56, unwind: bb73]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb56: {
        _85 = move _88;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb53;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb57: {
        _104 = const _;                  // scope 7 at cita-network/src/network.rs:162:24: 162:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:162:24: 162:64
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(LocalMessage::handle, [], Some(promoted[4])) }
        _94 = _104 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/network.rs:162:24: 162:64
        _99 = &(_1.0: std::string::String); // scope 7 at cita-network/src/network.rs:162:66: 162:74
        _98 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_99) -> [return: bb58, unwind: bb73]; // scope 7 at cita-network/src/network.rs:162:66: 162:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:162:66: 162:74
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb58: {
        _97 = [move _98];                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _96 = &_97;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _95 = _96 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _93 = Arguments::<'_>::new_v1(move _94, move _95) -> [return: bb59, unwind: bb73]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb59: {
        _103 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::handle, [], Some(promoted[3])) }
        _92 = log::__private_api_log(move _93, _84, _103) -> [return: bb81, unwind: bb73]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb60: {
        switchInt(_111) -> [0: bb65, otherwise: bb67]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb61: {
        return;                          // scope 0 at cita-network/src/network.rs:165:6: 165:6
    }

    bb62 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:122:5: 165:6
    }

    bb63 (cleanup): {
        switchInt(_110) -> [0: bb62, otherwise: bb64]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb64 (cleanup): {
        drop((_1.1: std::vec::Vec<u8>)) -> bb62; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb65: {
        switchInt(_110) -> [0: bb61, otherwise: bb66]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb66: {
        drop((_1.1: std::vec::Vec<u8>)) -> bb61; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb67: {
        drop((_1.0: std::string::String)) -> [return: bb65, unwind: bb63]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb68 (cleanup): {
        drop(_48) -> bb73;               // scope 1 at cita-network/src/network.rs:150:13: 150:14
    }

    bb69 (cleanup): {
        switchInt(_112) -> [0: bb73, otherwise: bb68]; // scope 1 at cita-network/src/network.rs:150:13: 150:14
    }

    bb70 (cleanup): {
        switchInt(_110) -> [0: bb62, otherwise: bb71]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb71 (cleanup): {
        drop((_1.1: std::vec::Vec<u8>)) -> bb62; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb72 (cleanup): {
        drop((_1.0: std::string::String)) -> bb70; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb73 (cleanup): {
        switchInt(_111) -> [0: bb70, otherwise: bb72]; // scope 0 at cita-network/src/network.rs:165:5: 165:6
    }

    bb74: {
        goto -> bb11;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb75: {
        goto -> bb60;                    // scope 1 at cita-network/src/network.rs:134:17: 136:88
    }

    bb76: {
        goto -> bb60;                    // scope 4 at cita-network/src/network.rs:141:17: 141:63
    }

    bb77: {
        goto -> bb60;                    // scope 1 at cita-network/src/network.rs:152:17: 152:52
    }

    bb78: {
        goto -> bb60;                    // scope 1 at cita-network/src/network.rs:155:17: 155:59
    }

    bb79: {
        goto -> bb49;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb80: {
        goto -> bb60;                    // scope 1 at cita-network/src/network.rs:159:17: 159:55
    }

    bb81: {
        goto -> bb60;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:158:17: 158:63
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:158:17: 158:63

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:158:17: 158:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:158:17: 158:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:158:17: 158:63
        _1 = (move _2, move _4, move _6, const 158_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:158:23: 158:62
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:158:23: 158:62

    bb0: {
        _1 = [const "[Network] Set disconnect and response"]; // scope 0 at cita-network/src/network.rs:158:23: 158:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:158:23: 158:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:158:23: 158:62
        return;                          // scope 0 at cita-network/src/network.rs:158:23: 158:62
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:162:17: 162:75
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:162:17: 162:75

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:162:17: 162:75
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:162:17: 162:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:162:17: 162:75
        _1 = (move _2, move _4, move _6, const 162_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/network.rs:162:24: 162:64
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/network.rs:162:24: 162:64

    bb0: {
        _1 = [const "[Network] Unexpected key ", const " from Local"]; // scope 0 at cita-network/src/network.rs:162:24: 162:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:162:24: 162:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:162:24: 162:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:162:24: 162:64
        return;                          // scope 0 at cita-network/src/network.rs:162:24: 162:64
    }
}

promoted[5] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &SubModules = {
    let mut _0: &libproto::router::SubModules; // return place in scope 0 at cita-network/src/network.rs:127:43: 127:63
    let mut _1: libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:127:43: 127:63

    bb0: {
        _1 = libproto::router::SubModules::Snapshot; // scope 0 at cita-network/src/network.rs:127:43: 127:63
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:127:43: 127:63
        return;                          // scope 0 at cita-network/src/network.rs:127:43: 127:63
    }
}

promoted[7] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:124:9: 124:68
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:124:9: 124:68

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:124:9: 124:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:124:9: 124:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:124:9: 124:68
        _1 = (move _2, move _4, move _6, const 124_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[8] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:124:16: 124:57
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:124:16: 124:57

    bb0: {
        _1 = [const "[Network] Receive Message from Local/"]; // scope 0 at cita-network/src/network.rs:124:16: 124:57
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:124:16: 124:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:124:16: 124:57
        return;                          // scope 0 at cita-network/src/network.rs:124:16: 124:57
    }
}

promoted[9] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_rpc(_1: &LocalMessage, _2: &[u8], _3: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:167:18: 167:23
    debug data => _2;                    // in scope 0 at cita-network/src/network.rs:167:25: 167:29
    debug service => _3;                 // in scope 0 at cita-network/src/network.rs:167:38: 167:45
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:167:61: 167:61
    let mut _4: libproto::Message;       // in scope 0 at cita-network/src/network.rs:168:13: 168:20
    let mut _5: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/network.rs:168:23: 168:51
    let mut _7: &mut libproto::Message;  // in scope 0 at cita-network/src/network.rs:170:23: 170:41
    let mut _8: isize;                   // in scope 0 at cita-network/src/network.rs:172:20: 172:33
    let mut _10: bool;                   // in scope 0 at cita-network/src/network.rs:174:20: 174:39
    let mut _11: &libproto::Request;     // in scope 0 at cita-network/src/network.rs:174:20: 174:39
    let _13: ();                         // in scope 0 at cita-network/src/network.rs:176:21: 176:67
    let mut _14: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:176:21: 176:67
    let mut _15: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:176:45: 176:66
    let mut _16: &mut libproto::Request; // in scope 0 at cita-network/src/network.rs:176:45: 176:66
    let mut _19: (pubsub::crossbeam_channel::Sender<usize>, pubsub::crossbeam_channel::Receiver<usize>); // in scope 0 at cita-network/src/network.rs:178:36: 178:47
    let _20: ();                         // in scope 0 at cita-network/src/network.rs:179:21: 181:66
    let mut _21: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/network.rs:179:21: 181:66
    let mut _22: node_manager::GetPeerCountReq; // in scope 0 at cita-network/src/network.rs:181:41: 181:65
    let mut _23: pubsub::crossbeam_channel::Sender<usize>; // in scope 0 at cita-network/src/network.rs:181:62: 181:64
    let mut _25: std::result::Result<usize, pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/network.rs:185:38: 185:47
    let mut _26: &pubsub::crossbeam_channel::Receiver<usize>; // in scope 0 at cita-network/src/network.rs:185:38: 185:47
    let _27: ();                         // in scope 0 at cita-network/src/network.rs:186:21: 186:62
    let mut _28: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:186:21: 186:62
    let mut _29: u32;                    // in scope 0 at cita-network/src/network.rs:186:44: 186:61
    let mut _30: usize;                  // in scope 0 at cita-network/src/network.rs:186:44: 186:54
    let mut _32: libproto::Response;     // in scope 0 at cita-network/src/network.rs:187:45: 187:53
    let _33: ();                         // in scope 0 at cita-network/src/network.rs:188:21: 191:23
    let mut _34: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:188:21: 191:23
    let mut _35: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:188:55: 191:22
    let mut _36: std::string::String;    // in scope 0 at cita-network/src/network.rs:189:25: 189:61
    let mut _37: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _38: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _39: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _40: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:190:25: 190:48
    let mut _41: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/network.rs:190:25: 190:39
    let mut _42: libproto::Message;      // in scope 0 at cita-network/src/network.rs:190:25: 190:28
    let mut _44: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _45: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _46: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _48: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _49: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _50: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _51: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _52: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _53: &[&str];                // in scope 0 at cita-network/src/network.rs:194:23: 194:62
    let mut _57: bool;                   // in scope 0 at cita-network/src/network.rs:197:5: 197:6
    let mut _58: bool;                   // in scope 0 at cita-network/src/network.rs:191:21: 191:22
    let mut _59: bool;                   // in scope 0 at cita-network/src/network.rs:192:17: 192:18
    let mut _60: bool;                   // in scope 0 at cita-network/src/network.rs:192:17: 192:18
    let mut _61: bool;                   // in scope 0 at cita-network/src/network.rs:192:17: 192:18
    let mut _62: isize;                  // in scope 0 at cita-network/src/network.rs:197:5: 197:6
    let mut _63: isize;                  // in scope 0 at cita-network/src/network.rs:197:5: 197:6
    scope 1 {
        debug msg => _4;                 // in scope 1 at cita-network/src/network.rs:168:13: 168:20
        let _6: std::option::Option<libproto::Request>; // in scope 1 at cita-network/src/network.rs:170:13: 170:20
        scope 2 {
            debug req_opt => _6;         // in scope 2 at cita-network/src/network.rs:170:13: 170:20
            let _43: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug req => _9;         // in scope 3 at cita-network/src/network.rs:172:25: 172:32
                let mut _9: libproto::Request; // in scope 3 at cita-network/src/network.rs:172:25: 172:32
                let mut _12: libproto::Response; // in scope 3 at cita-network/src/network.rs:175:25: 175:37
                scope 4 {
                    debug response => _12; // in scope 4 at cita-network/src/network.rs:175:25: 175:37
                    let _17: pubsub::crossbeam_channel::Sender<usize>; // in scope 4 at cita-network/src/network.rs:178:26: 178:28
                    let _18: pubsub::crossbeam_channel::Receiver<usize>; // in scope 4 at cita-network/src/network.rs:178:30: 178:32
                    scope 5 {
                        debug tx => _17; // in scope 5 at cita-network/src/network.rs:178:26: 178:28
                        debug rx => _18; // in scope 5 at cita-network/src/network.rs:178:30: 178:32
                        let _24: usize;  // in scope 5 at cita-network/src/network.rs:185:25: 185:35
                        scope 6 {
                            debug peer_count => _24; // in scope 6 at cita-network/src/network.rs:185:25: 185:35
                            let _31: libproto::Message; // in scope 6 at cita-network/src/network.rs:187:25: 187:28
                            scope 7 {
                                debug msg => _31; // in scope 7 at cita-network/src/network.rs:187:25: 187:28
                            }
                        }
                    }
                }
            }
            scope 8 {
                debug lvl => _43;        // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _54: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _55: &[&str; 1]; // in scope 8 at cita-network/src/network.rs:194:23: 194:62
                let mut _56: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _59 = const false;               // scope 0 at cita-network/src/network.rs:168:13: 168:20
        _58 = const false;               // scope 0 at cita-network/src/network.rs:168:13: 168:20
        _60 = const false;               // scope 0 at cita-network/src/network.rs:168:13: 168:20
        _61 = const false;               // scope 0 at cita-network/src/network.rs:168:13: 168:20
        _57 = const false;               // scope 0 at cita-network/src/network.rs:168:13: 168:20
        _5 = <libproto::Message as libproto::TryFrom<&[u8]>>::try_from(_2) -> bb1; // scope 0 at cita-network/src/network.rs:168:23: 168:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:168:23: 168:45
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&[u8]>>::Error> {<libproto::Message as libproto::TryFrom<&[u8]>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _5) -> bb2; // scope 0 at cita-network/src/network.rs:168:23: 168:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:168:52: 168:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _4;                    // scope 1 at cita-network/src/network.rs:170:23: 170:41
        _6 = libproto::Message::take_request(move _7) -> [return: bb3, unwind: bb36]; // scope 1 at cita-network/src/network.rs:170:23: 170:41
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:170:27: 170:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Request> {libproto::Message::take_request}, val: Value(<ZST>) }
    }

    bb3: {
        _57 = const true;                // scope 1 at cita-network/src/network.rs:170:40: 170:41
        _8 = discriminant(_6);           // scope 3 at cita-network/src/network.rs:172:20: 172:33
        switchInt(move _8) -> [1: bb4, otherwise: bb24]; // scope 3 at cita-network/src/network.rs:172:20: 172:33
    }

    bb4: {
        _57 = const false;               // scope 3 at cita-network/src/network.rs:172:25: 172:32
        _9 = move ((_6 as Some).0: libproto::Request); // scope 3 at cita-network/src/network.rs:172:25: 172:32
        _11 = &_9;                       // scope 3 at cita-network/src/network.rs:174:20: 174:39
        _10 = libproto::Request::has_peercount(move _11) -> [return: bb5, unwind: bb35]; // scope 3 at cita-network/src/network.rs:174:20: 174:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:174:24: 174:37
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> bool {libproto::Request::has_peercount}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _10) -> [0: bb23, otherwise: bb6]; // scope 3 at cita-network/src/network.rs:174:20: 174:39
    }

    bb6: {
        _12 = libproto::Response::new() -> [return: bb7, unwind: bb35]; // scope 3 at cita-network/src/network.rs:175:40: 175:55
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:175:40: 175:53
                                         // + literal: Const { ty: fn() -> libproto::Response {libproto::Response::new}, val: Value(<ZST>) }
    }

    bb7: {
        _61 = const true;                // scope 4 at cita-network/src/network.rs:176:21: 176:67
        _14 = &mut _12;                  // scope 4 at cita-network/src/network.rs:176:21: 176:67
        _16 = &mut _9;                   // scope 4 at cita-network/src/network.rs:176:45: 176:66
        _15 = libproto::Request::take_request_id(move _16) -> [return: bb8, unwind: bb49]; // scope 4 at cita-network/src/network.rs:176:45: 176:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:176:49: 176:64
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Request) -> Vec<u8> {libproto::Request::take_request_id}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = libproto::Response::set_request_id(move _14, move _15) -> [return: bb9, unwind: bb49]; // scope 4 at cita-network/src/network.rs:176:21: 176:67
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:176:30: 176:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_request_id}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = pubsub::crossbeam_channel::unbounded::<usize>() -> [return: bb10, unwind: bb49]; // scope 4 at cita-network/src/network.rs:178:36: 178:47
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:178:36: 178:45
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<usize>, pubsub::crossbeam_channel::Receiver<usize>) {pubsub::crossbeam_channel::unbounded::<usize>}, val: Value(<ZST>) }
    }

    bb10: {
        _60 = const true;                // scope 4 at cita-network/src/network.rs:178:26: 178:28
        _17 = move (_19.0: pubsub::crossbeam_channel::Sender<usize>); // scope 4 at cita-network/src/network.rs:178:26: 178:28
        _18 = move (_19.1: pubsub::crossbeam_channel::Receiver<usize>); // scope 4 at cita-network/src/network.rs:178:30: 178:32
        _21 = &((*_3).3: node_manager::NodesManagerClient); // scope 5 at cita-network/src/network.rs:179:21: 181:66
        _60 = const false;               // scope 5 at cita-network/src/network.rs:181:62: 181:64
        _23 = move _17;                  // scope 5 at cita-network/src/network.rs:181:62: 181:64
        _22 = GetPeerCountReq::new(move _23) -> [return: bb11, unwind: bb34]; // scope 5 at cita-network/src/network.rs:181:41: 181:65
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:181:41: 181:61
                                         // + literal: Const { ty: fn(pubsub::crossbeam_channel::Sender<usize>) -> GetPeerCountReq {GetPeerCountReq::new}, val: Value(<ZST>) }
    }

    bb11: {
        _20 = NodesManagerClient::get_peer_count(move _21, move _22) -> [return: bb12, unwind: bb34]; // scope 5 at cita-network/src/network.rs:179:21: 181:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:181:26: 181:40
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, GetPeerCountReq) {NodesManagerClient::get_peer_count}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = &_18;                      // scope 5 at cita-network/src/network.rs:185:38: 185:47
        _25 = pubsub::crossbeam_channel::Receiver::<usize>::recv(move _26) -> [return: bb13, unwind: bb34]; // scope 5 at cita-network/src/network.rs:185:38: 185:47
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:185:41: 185:45
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<usize>) -> Result<usize, pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<usize>::recv}, val: Value(<ZST>) }
    }

    bb13: {
        _24 = Result::<usize, pubsub::crossbeam_channel::RecvError>::unwrap(move _25) -> [return: bb14, unwind: bb34]; // scope 5 at cita-network/src/network.rs:185:38: 185:56
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:185:48: 185:54
                                         // + literal: Const { ty: fn(Result<usize, pubsub::crossbeam_channel::RecvError>) -> usize {Result::<usize, pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb14: {
        _28 = &mut _12;                  // scope 6 at cita-network/src/network.rs:186:21: 186:62
        _30 = _24;                       // scope 6 at cita-network/src/network.rs:186:44: 186:54
        _29 = move _30 as u32 (IntToInt); // scope 6 at cita-network/src/network.rs:186:44: 186:61
        _27 = libproto::Response::set_peercount(move _28, move _29) -> [return: bb15, unwind: bb34]; // scope 6 at cita-network/src/network.rs:186:21: 186:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:186:30: 186:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, u32) {libproto::Response::set_peercount}, val: Value(<ZST>) }
    }

    bb15: {
        _61 = const false;               // scope 6 at cita-network/src/network.rs:187:45: 187:53
        _32 = move _12;                  // scope 6 at cita-network/src/network.rs:187:45: 187:53
        _31 = <libproto::Response as Into<libproto::Message>>::into(move _32) -> [return: bb16, unwind: bb34]; // scope 6 at cita-network/src/network.rs:187:45: 187:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:187:54: 187:58
                                         // + literal: Const { ty: fn(libproto::Response) -> libproto::Message {<libproto::Response as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb16: {
        _59 = const true;                // scope 6 at cita-network/src/network.rs:187:59: 187:60
        _34 = &((*_3).1: mq_agent::MqAgentClient); // scope 7 at cita-network/src/network.rs:188:21: 191:23
        _38 = const Net;                 // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _39 = const libproto::router::MsgType::Response; // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x02)) }
        _37 = RoutingKey(move _38, move _39); // scope 7 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _36 = <RoutingKey as Into<std::string::String>>::into(move _37) -> [return: bb17, unwind: bb45]; // scope 7 at cita-network/src/network.rs:189:25: 189:61
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:189:55: 189:59
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb17: {
        _58 = const true;                // scope 7 at cita-network/src/network.rs:189:60: 189:61
        _59 = const false;               // scope 7 at cita-network/src/network.rs:190:25: 190:28
        _42 = move _31;                  // scope 7 at cita-network/src/network.rs:190:25: 190:28
        _41 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _42) -> [return: bb18, unwind: bb43]; // scope 7 at cita-network/src/network.rs:190:25: 190:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:190:29: 190:37
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb18: {
        _40 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _41) -> [return: bb19, unwind: bb43]; // scope 7 at cita-network/src/network.rs:190:25: 190:48
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:190:40: 190:46
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb19: {
        _58 = const false;               // scope 7 at cita-network/src/network.rs:188:55: 191:22
        _35 = PubMessage::new(move _36, move _40) -> [return: bb20, unwind: bb43]; // scope 7 at cita-network/src/network.rs:188:55: 191:22
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:188:55: 188:70
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb20: {
        _58 = const false;               // scope 7 at cita-network/src/network.rs:191:21: 191:22
        _33 = MqAgentClient::send_peer_count(move _34, move _35) -> [return: bb21, unwind: bb45]; // scope 7 at cita-network/src/network.rs:188:21: 191:23
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:188:39: 188:54
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::send_peer_count}, val: Value(<ZST>) }
    }

    bb21: {
        _59 = const false;               // scope 6 at cita-network/src/network.rs:192:17: 192:18
        drop(_18) -> [return: bb22, unwind: bb47]; // scope 4 at cita-network/src/network.rs:192:17: 192:18
    }

    bb22: {
        _60 = const false;               // scope 4 at cita-network/src/network.rs:192:17: 192:18
        _61 = const false;               // scope 3 at cita-network/src/network.rs:192:17: 192:18
        goto -> bb23;                    // scope 3 at cita-network/src/network.rs:174:17: 192:18
    }

    bb23: {
        drop(_9) -> [return: bb41, unwind: bb52]; // scope 2 at cita-network/src/network.rs:193:13: 193:14
    }

    bb24: {
        _43 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _46 = &_43;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _56 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::reply_rpc, [], Some(promoted[2])) }
        _45 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _46, _56) -> [return: bb28, unwind: bb52]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb25: {
        _44 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb27;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _48 = &_43;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _50 = log::max_level() -> [return: bb29, unwind: bb52]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _44) -> [0: bb41, otherwise: bb31]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        switchInt(move _45) -> [0: bb25, otherwise: bb26]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _49 = &_50;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _47 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _48, move _49) -> [return: bb30, unwind: bb52]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb30: {
        _44 = move _47;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb27;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _55 = const _;                   // scope 8 at cita-network/src/network.rs:194:23: 194:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:194:23: 194:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::reply_rpc, [], Some(promoted[1])) }
        _53 = _55 as &[&str] (Pointer(Unsize)); // scope 8 at cita-network/src/network.rs:194:23: 194:62
        _52 = Arguments::<'_>::new_const(move _53) -> [return: bb32, unwind: bb52]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb32: {
        _54 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::reply_rpc, [], Some(promoted[0])) }
        _51 = log::__private_api_log(move _52, _43, _54) -> [return: bb53, unwind: bb52]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb33: {
        return;                          // scope 0 at cita-network/src/network.rs:197:6: 197:6
    }

    bb34 (cleanup): {
        drop(_18) -> bb47;               // scope 4 at cita-network/src/network.rs:192:17: 192:18
    }

    bb35 (cleanup): {
        drop(_9) -> bb52;                // scope 2 at cita-network/src/network.rs:193:13: 193:14
    }

    bb36 (cleanup): {
        drop(_4) -> bb37;                // scope 0 at cita-network/src/network.rs:197:5: 197:6
    }

    bb37 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:167:5: 197:6
    }

    bb38: {
        _57 = const false;               // scope 1 at cita-network/src/network.rs:197:5: 197:6
        drop(_4) -> bb33;                // scope 0 at cita-network/src/network.rs:197:5: 197:6
    }

    bb39: {
        switchInt(_57) -> [0: bb38, otherwise: bb40]; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb40: {
        drop(((_6 as Some).0: libproto::Request)) -> [return: bb38, unwind: bb36]; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb41: {
        _62 = discriminant(_6);          // scope 1 at cita-network/src/network.rs:197:5: 197:6
        switchInt(move _62) -> [1: bb39, otherwise: bb38]; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb42 (cleanup): {
        drop(_36) -> bb45;               // scope 7 at cita-network/src/network.rs:191:21: 191:22
    }

    bb43 (cleanup): {
        switchInt(_58) -> [0: bb45, otherwise: bb42]; // scope 7 at cita-network/src/network.rs:191:21: 191:22
    }

    bb44 (cleanup): {
        drop(_31) -> bb34;               // scope 6 at cita-network/src/network.rs:192:17: 192:18
    }

    bb45 (cleanup): {
        switchInt(_59) -> [0: bb34, otherwise: bb44]; // scope 6 at cita-network/src/network.rs:192:17: 192:18
    }

    bb46 (cleanup): {
        drop(_17) -> bb49;               // scope 4 at cita-network/src/network.rs:192:17: 192:18
    }

    bb47 (cleanup): {
        switchInt(_60) -> [0: bb49, otherwise: bb46]; // scope 4 at cita-network/src/network.rs:192:17: 192:18
    }

    bb48 (cleanup): {
        drop(_12) -> bb35;               // scope 3 at cita-network/src/network.rs:192:17: 192:18
    }

    bb49 (cleanup): {
        switchInt(_61) -> [0: bb35, otherwise: bb48]; // scope 3 at cita-network/src/network.rs:192:17: 192:18
    }

    bb50 (cleanup): {
        switchInt(_57) -> [0: bb36, otherwise: bb51]; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb51 (cleanup): {
        drop(((_6 as Some).0: libproto::Request)) -> bb36; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb52 (cleanup): {
        _63 = discriminant(_6);          // scope 1 at cita-network/src/network.rs:197:5: 197:6
        switchInt(move _63) -> [1: bb50, otherwise: bb36]; // scope 1 at cita-network/src/network.rs:197:5: 197:6
    }

    bb53: {
        goto -> bb41;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_rpc: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:194:17: 194:63
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:194:17: 194:63

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:194:17: 194:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:194:17: 194:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:194:17: 194:63
        _1 = (move _2, move _4, move _6, const 194_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_rpc: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:194:23: 194:62
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:194:23: 194:62

    bb0: {
        _1 = [const "[Network] Receive unexpected rpc data"]; // scope 0 at cita-network/src/network.rs:194:23: 194:62
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:194:23: 194:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:194:23: 194:62
        return;                          // scope 0 at cita-network/src/network.rs:194:23: 194:62
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_rpc: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info(_1: &LocalMessage, _2: &[u8], _3: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:199:25: 199:30
    debug data => _2;                    // in scope 0 at cita-network/src/network.rs:199:32: 199:36
    debug service => _3;                 // in scope 0 at cita-network/src/network.rs:199:45: 199:52
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:199:68: 199:68
    let mut _4: libproto::Message;       // in scope 0 at cita-network/src/network.rs:200:13: 200:20
    let mut _5: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/network.rs:200:23: 200:51
    let mut _7: &mut libproto::Message;  // in scope 0 at cita-network/src/network.rs:202:23: 202:41
    let mut _8: isize;                   // in scope 0 at cita-network/src/network.rs:204:20: 204:33
    let mut _10: bool;                   // in scope 0 at cita-network/src/network.rs:206:20: 206:40
    let mut _11: &libproto::Request;     // in scope 0 at cita-network/src/network.rs:206:20: 206:40
    let _13: ();                         // in scope 0 at cita-network/src/network.rs:208:21: 208:67
    let mut _14: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:208:21: 208:67
    let mut _15: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:208:45: 208:66
    let mut _16: &mut libproto::Request; // in scope 0 at cita-network/src/network.rs:208:45: 208:66
    let mut _19: (pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>, pubsub::crossbeam_channel::Receiver<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>); // in scope 0 at cita-network/src/network.rs:210:36: 210:47
    let _20: ();                         // in scope 0 at cita-network/src/network.rs:211:21: 213:66
    let mut _21: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/network.rs:211:21: 213:66
    let mut _22: node_manager::GetPeersInfoReq; // in scope 0 at cita-network/src/network.rs:213:41: 213:65
    let mut _23: pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 0 at cita-network/src/network.rs:213:62: 213:64
    let mut _25: std::result::Result<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>, pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/network.rs:217:33: 217:42
    let mut _26: &pubsub::crossbeam_channel::Receiver<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 0 at cita-network/src/network.rs:217:33: 217:42
    let mut _28: u32;                    // in scope 0 at cita-network/src/network.rs:220:33: 220:51
    let mut _29: usize;                  // in scope 0 at cita-network/src/network.rs:220:33: 220:44
    let mut _30: &std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/network.rs:220:33: 220:44
    let mut _31: std::option::Option<std::collections::HashMap<cita_types::H160, std::string::String>>; // in scope 0 at cita-network/src/network.rs:221:32: 221:81
    let mut _32: std::collections::HashMap<cita_types::H160, std::string::String>; // in scope 0 at cita-network/src/network.rs:221:37: 221:80
    let mut _33: std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/network.rs:221:74: 221:79
    let mut _34: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/network.rs:222:40: 222:44
    let mut _35: std::result::Result<serde_json::Value, serde_json::Error>; // in scope 0 at cita-network/src/network.rs:225:50: 225:82
    let mut _36: isize;                  // in scope 0 at cita-network/src/network.rs:225:28: 225:47
    let _38: ();                         // in scope 0 at cita-network/src/network.rs:226:25: 226:77
    let mut _39: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:226:25: 226:77
    let mut _40: std::string::String;    // in scope 0 at cita-network/src/network.rs:226:49: 226:76
    let mut _41: &serde_json::Value;     // in scope 0 at cita-network/src/network.rs:226:49: 226:76
    let _42: ();                         // in scope 0 at cita-network/src/network.rs:228:25: 228:75
    let mut _43: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:228:25: 228:75
    let mut _44: i64;                    // in scope 0 at cita-network/src/network.rs:228:43: 228:74
    let _45: ();                         // in scope 0 at cita-network/src/network.rs:229:25: 229:87
    let mut _46: &mut libproto::Response; // in scope 0 at cita-network/src/network.rs:229:25: 229:87
    let mut _47: std::string::String;    // in scope 0 at cita-network/src/network.rs:229:48: 229:86
    let mut _49: libproto::Response;     // in scope 0 at cita-network/src/network.rs:232:45: 232:53
    let _50: ();                         // in scope 0 at cita-network/src/network.rs:233:21: 236:23
    let mut _51: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:233:21: 236:23
    let mut _52: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:233:55: 236:22
    let mut _53: std::string::String;    // in scope 0 at cita-network/src/network.rs:234:25: 234:61
    let mut _54: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _55: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _56: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _57: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:235:25: 235:48
    let mut _58: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/network.rs:235:25: 235:39
    let mut _59: libproto::Message;      // in scope 0 at cita-network/src/network.rs:235:25: 235:28
    let mut _61: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _63: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _64: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _65: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _66: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _67: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _68: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _69: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _70: &[&str];                // in scope 0 at cita-network/src/network.rs:239:23: 239:73
    let mut _76: bool;                   // in scope 0 at cita-network/src/network.rs:230:21: 230:22
    let mut _77: bool;                   // in scope 0 at cita-network/src/network.rs:242:5: 242:6
    let mut _78: bool;                   // in scope 0 at cita-network/src/network.rs:236:21: 236:22
    let mut _79: bool;                   // in scope 0 at cita-network/src/network.rs:237:17: 237:18
    let mut _80: bool;                   // in scope 0 at cita-network/src/network.rs:237:17: 237:18
    let mut _81: bool;                   // in scope 0 at cita-network/src/network.rs:237:17: 237:18
    let mut _82: bool;                   // in scope 0 at cita-network/src/network.rs:237:17: 237:18
    let mut _83: isize;                  // in scope 0 at cita-network/src/network.rs:230:21: 230:22
    let mut _84: isize;                  // in scope 0 at cita-network/src/network.rs:242:5: 242:6
    let mut _85: isize;                  // in scope 0 at cita-network/src/network.rs:230:21: 230:22
    let mut _86: isize;                  // in scope 0 at cita-network/src/network.rs:242:5: 242:6
    scope 1 {
        debug msg => _4;                 // in scope 1 at cita-network/src/network.rs:200:13: 200:20
        let _6: std::option::Option<libproto::Request>; // in scope 1 at cita-network/src/network.rs:202:13: 202:20
        scope 2 {
            debug req_opt => _6;         // in scope 2 at cita-network/src/network.rs:202:13: 202:20
            let _60: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug req => _9;         // in scope 3 at cita-network/src/network.rs:204:25: 204:32
                let mut _9: libproto::Request; // in scope 3 at cita-network/src/network.rs:204:25: 204:32
                let mut _12: libproto::Response; // in scope 3 at cita-network/src/network.rs:207:25: 207:37
                scope 4 {
                    debug response => _12; // in scope 4 at cita-network/src/network.rs:207:25: 207:37
                    let _17: pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 4 at cita-network/src/network.rs:210:26: 210:28
                    let _18: pubsub::crossbeam_channel::Receiver<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 4 at cita-network/src/network.rs:210:30: 210:32
                    scope 5 {
                        debug tx => _17; // in scope 5 at cita-network/src/network.rs:210:26: 210:28
                        debug rx => _18; // in scope 5 at cita-network/src/network.rs:210:30: 210:32
                        let _24: std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 5 at cita-network/src/network.rs:217:25: 217:30
                        scope 6 {
                            debug peers => _24; // in scope 6 at cita-network/src/network.rs:217:25: 217:30
                            let _27: jsonrpc_types::rpc_types::PeersInfo; // in scope 6 at cita-network/src/network.rs:219:25: 219:35
                            scope 7 {
                                debug peers_info => _27; // in scope 7 at cita-network/src/network.rs:219:25: 219:35
                                let _48: libproto::Message; // in scope 7 at cita-network/src/network.rs:232:25: 232:28
                                let mut _71: &jsonrpc_types::ErrorCode; // in scope 7 at cita-network/src/network.rs:229:48: 229:86
                                let mut _72: &jsonrpc_types::ErrorCode; // in scope 7 at cita-network/src/network.rs:228:43: 228:74
                                scope 8 {
                                    debug json_peers_info => _37; // in scope 8 at cita-network/src/network.rs:225:31: 225:46
                                    let _37: serde_json::Value; // in scope 8 at cita-network/src/network.rs:225:31: 225:46
                                }
                                scope 9 {
                                    debug msg => _48; // in scope 9 at cita-network/src/network.rs:232:25: 232:28
                                }
                            }
                        }
                    }
                }
            }
            scope 10 {
                debug lvl => _60;        // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _73: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _74: &[&str; 1]; // in scope 10 at cita-network/src/network.rs:239:23: 239:73
                let mut _75: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _76 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _82 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _81 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _79 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _77 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _78 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _80 = const false;               // scope 0 at cita-network/src/network.rs:200:13: 200:20
        _5 = <libproto::Message as libproto::TryFrom<&[u8]>>::try_from(_2) -> bb1; // scope 0 at cita-network/src/network.rs:200:23: 200:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:200:23: 200:45
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&[u8]>>::Error> {<libproto::Message as libproto::TryFrom<&[u8]>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _5) -> bb2; // scope 0 at cita-network/src/network.rs:200:23: 200:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:200:52: 200:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _4;                    // scope 1 at cita-network/src/network.rs:202:23: 202:41
        _6 = libproto::Message::take_request(move _7) -> [return: bb3, unwind: bb46]; // scope 1 at cita-network/src/network.rs:202:23: 202:41
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:202:27: 202:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Request> {libproto::Message::take_request}, val: Value(<ZST>) }
    }

    bb3: {
        _77 = const true;                // scope 1 at cita-network/src/network.rs:202:40: 202:41
        _8 = discriminant(_6);           // scope 3 at cita-network/src/network.rs:204:20: 204:33
        switchInt(move _8) -> [1: bb4, otherwise: bb33]; // scope 3 at cita-network/src/network.rs:204:20: 204:33
    }

    bb4: {
        _77 = const false;               // scope 3 at cita-network/src/network.rs:204:25: 204:32
        _9 = move ((_6 as Some).0: libproto::Request); // scope 3 at cita-network/src/network.rs:204:25: 204:32
        _11 = &_9;                       // scope 3 at cita-network/src/network.rs:206:20: 206:40
        _10 = libproto::Request::has_peers_info(move _11) -> [return: bb5, unwind: bb45]; // scope 3 at cita-network/src/network.rs:206:20: 206:40
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:206:24: 206:38
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> bool {libproto::Request::has_peers_info}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _10) -> [0: bb32, otherwise: bb6]; // scope 3 at cita-network/src/network.rs:206:20: 206:40
    }

    bb6: {
        _12 = libproto::Response::new() -> [return: bb7, unwind: bb45]; // scope 3 at cita-network/src/network.rs:207:40: 207:55
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:207:40: 207:53
                                         // + literal: Const { ty: fn() -> libproto::Response {libproto::Response::new}, val: Value(<ZST>) }
    }

    bb7: {
        _82 = const true;                // scope 4 at cita-network/src/network.rs:208:21: 208:67
        _14 = &mut _12;                  // scope 4 at cita-network/src/network.rs:208:21: 208:67
        _16 = &mut _9;                   // scope 4 at cita-network/src/network.rs:208:45: 208:66
        _15 = libproto::Request::take_request_id(move _16) -> [return: bb8, unwind: bb70]; // scope 4 at cita-network/src/network.rs:208:45: 208:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:208:49: 208:64
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Request) -> Vec<u8> {libproto::Request::take_request_id}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = libproto::Response::set_request_id(move _14, move _15) -> [return: bb9, unwind: bb70]; // scope 4 at cita-network/src/network.rs:208:21: 208:67
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:208:30: 208:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_request_id}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = pubsub::crossbeam_channel::unbounded::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>() -> [return: bb10, unwind: bb70]; // scope 4 at cita-network/src/network.rs:210:36: 210:47
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:210:36: 210:45
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>, pubsub::crossbeam_channel::Receiver<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>) {pubsub::crossbeam_channel::unbounded::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>}, val: Value(<ZST>) }
    }

    bb10: {
        _81 = const true;                // scope 4 at cita-network/src/network.rs:210:26: 210:28
        _17 = move (_19.0: pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>); // scope 4 at cita-network/src/network.rs:210:26: 210:28
        _18 = move (_19.1: pubsub::crossbeam_channel::Receiver<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>); // scope 4 at cita-network/src/network.rs:210:30: 210:32
        _21 = &((*_3).3: node_manager::NodesManagerClient); // scope 5 at cita-network/src/network.rs:211:21: 213:66
        _81 = const false;               // scope 5 at cita-network/src/network.rs:213:62: 213:64
        _23 = move _17;                  // scope 5 at cita-network/src/network.rs:213:62: 213:64
        _22 = GetPeersInfoReq::new(move _23) -> [return: bb11, unwind: bb44]; // scope 5 at cita-network/src/network.rs:213:41: 213:65
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:213:41: 213:61
                                         // + literal: Const { ty: fn(pubsub::crossbeam_channel::Sender<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>) -> GetPeersInfoReq {GetPeersInfoReq::new}, val: Value(<ZST>) }
    }

    bb11: {
        _20 = NodesManagerClient::get_peers_info(move _21, move _22) -> [return: bb12, unwind: bb44]; // scope 5 at cita-network/src/network.rs:211:21: 213:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:213:26: 213:40
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, GetPeersInfoReq) {NodesManagerClient::get_peers_info}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = &_18;                      // scope 5 at cita-network/src/network.rs:217:33: 217:42
        _25 = pubsub::crossbeam_channel::Receiver::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>::recv(move _26) -> [return: bb13, unwind: bb44]; // scope 5 at cita-network/src/network.rs:217:33: 217:42
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:217:36: 217:40
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>) -> Result<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>, pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>::recv}, val: Value(<ZST>) }
    }

    bb13: {
        _24 = Result::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>, pubsub::crossbeam_channel::RecvError>::unwrap(move _25) -> [return: bb14, unwind: bb44]; // scope 5 at cita-network/src/network.rs:217:33: 217:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:217:43: 217:49
                                         // + literal: Const { ty: fn(Result<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>, pubsub::crossbeam_channel::RecvError>) -> HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>> {Result::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>, pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb14: {
        _80 = const true;                // scope 5 at cita-network/src/network.rs:217:50: 217:51
        _30 = &_24;                      // scope 6 at cita-network/src/network.rs:220:33: 220:44
        _29 = HashMap::<H160, std::string::String, BuildHasherDefault<FnvHasher>>::len(move _30) -> [return: bb15, unwind: bb66]; // scope 6 at cita-network/src/network.rs:220:33: 220:44
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:220:39: 220:42
                                         // + literal: Const { ty: for<'a> fn(&'a HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>) -> usize {HashMap::<H160, std::string::String, BuildHasherDefault<FnvHasher>>::len}, val: Value(<ZST>) }
    }

    bb15: {
        _28 = move _29 as u32 (IntToInt); // scope 6 at cita-network/src/network.rs:220:33: 220:51
        _80 = const false;               // scope 6 at cita-network/src/network.rs:221:74: 221:79
        _33 = move _24;                  // scope 6 at cita-network/src/network.rs:221:74: 221:79
        _32 = <HashMap<H160, std::string::String> as FromIterator<(H160, std::string::String)>>::from_iter::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>(move _33) -> [return: bb16, unwind: bb66]; // scope 6 at cita-network/src/network.rs:221:37: 221:80
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:221:37: 221:73
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>) -> HashMap<H160, std::string::String> {<HashMap<H160, std::string::String> as FromIterator<(H160, std::string::String)>>::from_iter::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>}, val: Value(<ZST>) }
    }

    bb16: {
        _31 = std::option::Option::<HashMap<H160, std::string::String>>::Some(move _32); // scope 6 at cita-network/src/network.rs:221:32: 221:81
        _34 = std::option::Option::<std::string::String>::None; // scope 6 at cita-network/src/network.rs:222:40: 222:44
        _27 = jsonrpc_types::rpc_types::PeersInfo { amount: move _28, peers: move _31, error_message: move _34 }; // scope 6 at cita-network/src/network.rs:219:38: 223:22
        _35 = to_value::<jsonrpc_types::rpc_types::PeersInfo>(move _27) -> [return: bb17, unwind: bb66]; // scope 8 at cita-network/src/network.rs:225:50: 225:82
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:225:50: 225:70
                                         // + literal: Const { ty: fn(jsonrpc_types::rpc_types::PeersInfo) -> Result<Value, serde_json::Error> {to_value::<jsonrpc_types::rpc_types::PeersInfo>}, val: Value(<ZST>) }
    }

    bb17: {
        _76 = const true;                // scope 8 at cita-network/src/network.rs:225:81: 225:82
        _36 = discriminant(_35);         // scope 8 at cita-network/src/network.rs:225:28: 225:47
        switchInt(move _36) -> [0: bb18, otherwise: bb21]; // scope 8 at cita-network/src/network.rs:225:28: 225:47
    }

    bb18: {
        _76 = const false;               // scope 8 at cita-network/src/network.rs:225:31: 225:46
        _37 = move ((_35 as Ok).0: serde_json::Value); // scope 8 at cita-network/src/network.rs:225:31: 225:46
        _39 = &mut _12;                  // scope 8 at cita-network/src/network.rs:226:25: 226:77
        _41 = &_37;                      // scope 8 at cita-network/src/network.rs:226:49: 226:76
        _40 = <Value as ToString>::to_string(move _41) -> [return: bb19, unwind: bb43]; // scope 8 at cita-network/src/network.rs:226:49: 226:76
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:226:65: 226:74
                                         // + literal: Const { ty: for<'a> fn(&'a Value) -> std::string::String {<Value as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb19: {
        _38 = libproto::Response::set_peers_info(move _39, move _40) -> [return: bb20, unwind: bb43]; // scope 8 at cita-network/src/network.rs:226:25: 226:77
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:226:34: 226:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_peers_info}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_37) -> [return: bb52, unwind: bb64]; // scope 7 at cita-network/src/network.rs:227:21: 227:22
    }

    bb21: {
        _43 = &mut _12;                  // scope 7 at cita-network/src/network.rs:228:25: 228:75
        _72 = const _;                   // scope 7 at cita-network/src/network.rs:228:43: 228:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:228:43: 228:74
                                         // + literal: Const { ty: &jsonrpc_types::ErrorCode, val: Unevaluated(LocalMessage::reply_peers_info, [], Some(promoted[1])) }
        _44 = jsonrpc_types::ErrorCode::code(_72) -> [return: bb22, unwind: bb64]; // scope 7 at cita-network/src/network.rs:228:43: 228:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:228:68: 228:72
                                         // + literal: Const { ty: for<'a> fn(&'a jsonrpc_types::ErrorCode) -> i64 {jsonrpc_types::ErrorCode::code}, val: Value(<ZST>) }
    }

    bb22: {
        _42 = libproto::Response::set_code(move _43, move _44) -> [return: bb23, unwind: bb64]; // scope 7 at cita-network/src/network.rs:228:25: 228:75
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:228:34: 228:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb23: {
        _46 = &mut _12;                  // scope 7 at cita-network/src/network.rs:229:25: 229:87
        _71 = const _;                   // scope 7 at cita-network/src/network.rs:229:48: 229:86
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:229:48: 229:86
                                         // + literal: Const { ty: &jsonrpc_types::ErrorCode, val: Unevaluated(LocalMessage::reply_peers_info, [], Some(promoted[0])) }
        _47 = jsonrpc_types::ErrorCode::description(_71) -> [return: bb24, unwind: bb64]; // scope 7 at cita-network/src/network.rs:229:48: 229:86
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:229:73: 229:84
                                         // + literal: Const { ty: for<'a> fn(&'a jsonrpc_types::ErrorCode) -> std::string::String {jsonrpc_types::ErrorCode::description}, val: Value(<ZST>) }
    }

    bb24: {
        _45 = libproto::Response::set_error_msg(move _46, move _47) -> [return: bb74, unwind: bb64]; // scope 7 at cita-network/src/network.rs:229:25: 229:87
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:229:34: 229:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_error_msg}, val: Value(<ZST>) }
    }

    bb25: {
        _79 = const true;                // scope 7 at cita-network/src/network.rs:232:59: 232:60
        _51 = &((*_3).1: mq_agent::MqAgentClient); // scope 9 at cita-network/src/network.rs:233:21: 236:23
        _55 = const Net;                 // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _56 = const libproto::router::MsgType::Response; // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x02)) }
        _54 = RoutingKey(move _55, move _56); // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _53 = <RoutingKey as Into<std::string::String>>::into(move _54) -> [return: bb26, unwind: bb60]; // scope 9 at cita-network/src/network.rs:234:25: 234:61
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:234:55: 234:59
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb26: {
        _78 = const true;                // scope 9 at cita-network/src/network.rs:234:60: 234:61
        _79 = const false;               // scope 9 at cita-network/src/network.rs:235:25: 235:28
        _59 = move _48;                  // scope 9 at cita-network/src/network.rs:235:25: 235:28
        _58 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _59) -> [return: bb27, unwind: bb58]; // scope 9 at cita-network/src/network.rs:235:25: 235:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:235:29: 235:37
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb27: {
        _57 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _58) -> [return: bb28, unwind: bb58]; // scope 9 at cita-network/src/network.rs:235:25: 235:48
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:235:40: 235:46
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb28: {
        _78 = const false;               // scope 9 at cita-network/src/network.rs:233:55: 236:22
        _52 = PubMessage::new(move _53, move _57) -> [return: bb29, unwind: bb58]; // scope 9 at cita-network/src/network.rs:233:55: 236:22
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:233:55: 233:70
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb29: {
        _78 = const false;               // scope 9 at cita-network/src/network.rs:236:21: 236:22
        _50 = MqAgentClient::send_peer_count(move _51, move _52) -> [return: bb30, unwind: bb60]; // scope 9 at cita-network/src/network.rs:233:21: 236:23
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:233:39: 233:54
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::send_peer_count}, val: Value(<ZST>) }
    }

    bb30: {
        _79 = const false;               // scope 7 at cita-network/src/network.rs:237:17: 237:18
        _80 = const false;               // scope 5 at cita-network/src/network.rs:237:17: 237:18
        drop(_18) -> [return: bb31, unwind: bb68]; // scope 4 at cita-network/src/network.rs:237:17: 237:18
    }

    bb31: {
        _81 = const false;               // scope 4 at cita-network/src/network.rs:237:17: 237:18
        _82 = const false;               // scope 3 at cita-network/src/network.rs:237:17: 237:18
        goto -> bb32;                    // scope 3 at cita-network/src/network.rs:206:17: 237:18
    }

    bb32: {
        drop(_9) -> [return: bb56, unwind: bb73]; // scope 2 at cita-network/src/network.rs:238:13: 238:14
    }

    bb33: {
        _60 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _63 = &_60;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _75 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::reply_peers_info, [], Some(promoted[4])) }
        _62 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _63, _75) -> [return: bb37, unwind: bb73]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _61 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _65 = &_60;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _67 = log::max_level() -> [return: bb38, unwind: bb73]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _61) -> [0: bb56, otherwise: bb40]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        switchInt(move _62) -> [0: bb34, otherwise: bb35]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _66 = &_67;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _64 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _65, move _66) -> [return: bb39, unwind: bb73]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb39: {
        _61 = move _64;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        _74 = const _;                   // scope 10 at cita-network/src/network.rs:239:23: 239:73
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:239:23: 239:73
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::reply_peers_info, [], Some(promoted[3])) }
        _70 = _74 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/network.rs:239:23: 239:73
        _69 = Arguments::<'_>::new_const(move _70) -> [return: bb41, unwind: bb73]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb41: {
        _73 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::reply_peers_info, [], Some(promoted[2])) }
        _68 = log::__private_api_log(move _69, _60, _73) -> [return: bb75, unwind: bb73]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb42: {
        return;                          // scope 0 at cita-network/src/network.rs:242:6: 242:6
    }

    bb43 (cleanup): {
        drop(_37) -> bb64;               // scope 7 at cita-network/src/network.rs:227:21: 227:22
    }

    bb44 (cleanup): {
        drop(_18) -> bb68;               // scope 4 at cita-network/src/network.rs:237:17: 237:18
    }

    bb45 (cleanup): {
        drop(_9) -> bb73;                // scope 2 at cita-network/src/network.rs:238:13: 238:14
    }

    bb46 (cleanup): {
        drop(_4) -> bb47;                // scope 0 at cita-network/src/network.rs:242:5: 242:6
    }

    bb47 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:199:5: 242:6
    }

    bb48: {
        _76 = const false;               // scope 7 at cita-network/src/network.rs:230:21: 230:22
        _82 = const false;               // scope 7 at cita-network/src/network.rs:232:45: 232:53
        _49 = move _12;                  // scope 7 at cita-network/src/network.rs:232:45: 232:53
        _48 = <libproto::Response as Into<libproto::Message>>::into(move _49) -> [return: bb25, unwind: bb66]; // scope 7 at cita-network/src/network.rs:232:45: 232:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:232:54: 232:58
                                         // + literal: Const { ty: fn(libproto::Response) -> libproto::Message {<libproto::Response as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(_76) -> [0: bb48, otherwise: bb50]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb50: {
        drop(((_35 as Ok).0: serde_json::Value)) -> [return: bb48, unwind: bb66]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb51: {
        drop(_35) -> [return: bb48, unwind: bb66]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb52: {
        _83 = discriminant(_35);         // scope 7 at cita-network/src/network.rs:230:21: 230:22
        switchInt(move _83) -> [0: bb49, otherwise: bb51]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb53: {
        _77 = const false;               // scope 1 at cita-network/src/network.rs:242:5: 242:6
        drop(_4) -> bb42;                // scope 0 at cita-network/src/network.rs:242:5: 242:6
    }

    bb54: {
        switchInt(_77) -> [0: bb53, otherwise: bb55]; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb55: {
        drop(((_6 as Some).0: libproto::Request)) -> [return: bb53, unwind: bb46]; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb56: {
        _84 = discriminant(_6);          // scope 1 at cita-network/src/network.rs:242:5: 242:6
        switchInt(move _84) -> [1: bb54, otherwise: bb53]; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb57 (cleanup): {
        drop(_53) -> bb60;               // scope 9 at cita-network/src/network.rs:236:21: 236:22
    }

    bb58 (cleanup): {
        switchInt(_78) -> [0: bb60, otherwise: bb57]; // scope 9 at cita-network/src/network.rs:236:21: 236:22
    }

    bb59 (cleanup): {
        drop(_48) -> bb66;               // scope 7 at cita-network/src/network.rs:237:17: 237:18
    }

    bb60 (cleanup): {
        switchInt(_79) -> [0: bb66, otherwise: bb59]; // scope 7 at cita-network/src/network.rs:237:17: 237:18
    }

    bb61 (cleanup): {
        switchInt(_76) -> [0: bb66, otherwise: bb62]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb62 (cleanup): {
        drop(((_35 as Ok).0: serde_json::Value)) -> bb66; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb63 (cleanup): {
        drop(_35) -> bb66;               // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb64 (cleanup): {
        _85 = discriminant(_35);         // scope 7 at cita-network/src/network.rs:230:21: 230:22
        switchInt(move _85) -> [0: bb61, otherwise: bb63]; // scope 7 at cita-network/src/network.rs:230:21: 230:22
    }

    bb65 (cleanup): {
        drop(_24) -> bb44;               // scope 5 at cita-network/src/network.rs:237:17: 237:18
    }

    bb66 (cleanup): {
        switchInt(_80) -> [0: bb44, otherwise: bb65]; // scope 5 at cita-network/src/network.rs:237:17: 237:18
    }

    bb67 (cleanup): {
        drop(_17) -> bb70;               // scope 4 at cita-network/src/network.rs:237:17: 237:18
    }

    bb68 (cleanup): {
        switchInt(_81) -> [0: bb70, otherwise: bb67]; // scope 4 at cita-network/src/network.rs:237:17: 237:18
    }

    bb69 (cleanup): {
        drop(_12) -> bb45;               // scope 3 at cita-network/src/network.rs:237:17: 237:18
    }

    bb70 (cleanup): {
        switchInt(_82) -> [0: bb45, otherwise: bb69]; // scope 3 at cita-network/src/network.rs:237:17: 237:18
    }

    bb71 (cleanup): {
        switchInt(_77) -> [0: bb46, otherwise: bb72]; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb72 (cleanup): {
        drop(((_6 as Some).0: libproto::Request)) -> bb46; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb73 (cleanup): {
        _86 = discriminant(_6);          // scope 1 at cita-network/src/network.rs:242:5: 242:6
        switchInt(move _86) -> [1: bb71, otherwise: bb46]; // scope 1 at cita-network/src/network.rs:242:5: 242:6
    }

    bb74: {
        goto -> bb52;                    // scope 7 at cita-network/src/network.rs:229:25: 229:87
    }

    bb75: {
        goto -> bb56;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info: &jsonrpc_types::ErrorCode = {
    let mut _0: &jsonrpc_types::ErrorCode; // return place in scope 0 at cita-network/src/network.rs:229:48: 229:86
    let mut _1: jsonrpc_types::ErrorCode; // in scope 0 at cita-network/src/network.rs:229:48: 229:72

    bb0: {
        _1 = jsonrpc_types::ErrorCode::InternalError; // scope 0 at cita-network/src/network.rs:229:48: 229:72
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:229:48: 229:86
        return;                          // scope 0 at cita-network/src/network.rs:229:48: 229:86
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info: &jsonrpc_types::ErrorCode = {
    let mut _0: &jsonrpc_types::ErrorCode; // return place in scope 0 at cita-network/src/network.rs:228:43: 228:74
    let mut _1: jsonrpc_types::ErrorCode; // in scope 0 at cita-network/src/network.rs:228:43: 228:67

    bb0: {
        _1 = jsonrpc_types::ErrorCode::InternalError; // scope 0 at cita-network/src/network.rs:228:43: 228:67
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:228:43: 228:74
        return;                          // scope 0 at cita-network/src/network.rs:228:43: 228:74
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:239:17: 239:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:239:17: 239:74

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:239:17: 239:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:239:17: 239:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:239:17: 239:74
        _1 = (move _2, move _4, move _6, const 239_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[3] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:239:23: 239:73
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:239:23: 239:73

    bb0: {
        _1 = [const "[Network] Receive unexpected get peers info data"]; // scope 0 at cita-network/src/network.rs:239:23: 239:73
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:239:23: 239:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:239:23: 239:73
        return;                          // scope 0 at cita-network/src/network.rs:239:23: 239:73
    }
}

promoted[4] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::reply_peers_info: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req(_1: &LocalMessage, _2: &[u8], _3: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:244:21: 244:26
    debug data => _2;                    // in scope 0 at cita-network/src/network.rs:244:28: 244:32
    debug service => _3;                 // in scope 0 at cita-network/src/network.rs:244:41: 244:48
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:244:64: 244:64
    let mut _4: libproto::Message;       // in scope 0 at cita-network/src/network.rs:245:13: 245:20
    let mut _5: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/network.rs:245:23: 245:51
    let mut _7: std::option::Option<libproto::SnapshotReq>; // in scope 0 at cita-network/src/network.rs:246:19: 246:42
    let mut _8: &mut libproto::Message;  // in scope 0 at cita-network/src/network.rs:246:19: 246:42
    let mut _10: isize;                  // in scope 0 at cita-network/src/network.rs:250:13: 250:26
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _14: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _16: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _17: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _20: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: &[&str];                // in scope 0 at cita-network/src/network.rs:251:23: 251:71
    let mut _22: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:251:73: 251:76
    let _26: &libproto::SnapshotReq;     // in scope 0 at cita-network/src/network.rs:251:73: 251:76
    let _27: ();                         // in scope 0 at cita-network/src/network.rs:252:17: 252:49
    let mut _28: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:252:17: 252:49
    let mut _29: libproto::Resp;         // in scope 0 at cita-network/src/network.rs:252:31: 252:48
    let _30: ();                         // in scope 0 at cita-network/src/network.rs:253:17: 253:36
    let mut _31: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:253:17: 253:36
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _34: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _35: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _38: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _40: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _41: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _42: &[&str];                // in scope 0 at cita-network/src/network.rs:256:23: 256:68
    let mut _43: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:256:70: 256:73
    let _47: &libproto::SnapshotReq;     // in scope 0 at cita-network/src/network.rs:256:70: 256:73
    let _48: ();                         // in scope 0 at cita-network/src/network.rs:257:17: 257:63
    let mut _49: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:257:17: 257:63
    let _50: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:257:17: 257:63
    let mut _51: &std::sync::Arc<std::sync::atomic::AtomicBool>; // in scope 0 at cita-network/src/network.rs:257:17: 257:63
    let mut _52: std::sync::atomic::Ordering; // in scope 0 at cita-network/src/network.rs:257:46: 257:62
    let _53: ();                         // in scope 0 at cita-network/src/network.rs:258:17: 258:46
    let mut _54: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:258:17: 258:46
    let mut _55: libproto::Resp;         // in scope 0 at cita-network/src/network.rs:258:31: 258:45
    let _56: ();                         // in scope 0 at cita-network/src/network.rs:259:17: 259:36
    let mut _57: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:259:17: 259:36
    let mut _59: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _60: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _61: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _63: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _64: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _65: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _66: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _67: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _68: &[&str];                // in scope 0 at cita-network/src/network.rs:262:23: 262:70
    let mut _69: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _70: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _71: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:262:72: 262:75
    let _73: &libproto::SnapshotReq;     // in scope 0 at cita-network/src/network.rs:262:72: 262:75
    let _74: ();                         // in scope 0 at cita-network/src/network.rs:263:17: 263:48
    let mut _75: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:263:17: 263:48
    let mut _76: libproto::Resp;         // in scope 0 at cita-network/src/network.rs:263:31: 263:47
    let _77: ();                         // in scope 0 at cita-network/src/network.rs:264:17: 264:36
    let mut _78: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:264:17: 264:36
    let mut _80: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _81: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _82: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _83: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _84: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _85: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _86: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _87: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _88: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _89: &[&str];                // in scope 0 at cita-network/src/network.rs:267:23: 267:68
    let mut _90: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _91: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _92: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _93: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:267:70: 267:73
    let _94: &libproto::SnapshotReq;     // in scope 0 at cita-network/src/network.rs:267:70: 267:73
    let _95: ();                         // in scope 0 at cita-network/src/network.rs:268:17: 268:46
    let mut _96: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:268:17: 268:46
    let mut _97: libproto::Resp;         // in scope 0 at cita-network/src/network.rs:268:31: 268:45
    let _98: ();                         // in scope 0 at cita-network/src/network.rs:269:17: 269:36
    let mut _99: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:269:17: 269:36
    let mut _101: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _102: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _103: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _104: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _105: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _106: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _107: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _108: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _109: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _110: &[&str];               // in scope 0 at cita-network/src/network.rs:272:23: 272:66
    let mut _111: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _112: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _113: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _114: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:272:68: 272:71
    let _115: &libproto::SnapshotReq;    // in scope 0 at cita-network/src/network.rs:272:68: 272:71
    let _116: ();                        // in scope 0 at cita-network/src/network.rs:273:17: 273:64
    let mut _117: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:273:17: 273:64
    let _118: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:273:17: 273:64
    let mut _119: &std::sync::Arc<std::sync::atomic::AtomicBool>; // in scope 0 at cita-network/src/network.rs:273:17: 273:64
    let mut _120: std::sync::atomic::Ordering; // in scope 0 at cita-network/src/network.rs:273:47: 273:63
    let _121: ();                        // in scope 0 at cita-network/src/network.rs:274:17: 274:44
    let mut _122: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:274:17: 274:44
    let mut _123: libproto::Resp;        // in scope 0 at cita-network/src/network.rs:274:31: 274:43
    let _124: ();                        // in scope 0 at cita-network/src/network.rs:275:17: 275:36
    let mut _125: &mut libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:275:17: 275:36
    let mut _127: libproto::SnapshotResp; // in scope 0 at cita-network/src/network.rs:279:33: 279:37
    let _128: ();                        // in scope 0 at cita-network/src/network.rs:280:9: 283:11
    let mut _129: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:280:9: 283:11
    let mut _130: mq_agent::PubMessage;  // in scope 0 at cita-network/src/network.rs:280:46: 283:10
    let mut _131: std::string::String;   // in scope 0 at cita-network/src/network.rs:281:13: 281:53
    let mut _132: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _133: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _134: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _135: std::vec::Vec<u8>;     // in scope 0 at cita-network/src/network.rs:282:13: 282:39
    let mut _136: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/network.rs:282:13: 282:30
    let _137: &libproto::Message;        // in scope 0 at cita-network/src/network.rs:282:13: 282:19
    let mut _153: bool;                  // in scope 0 at cita-network/src/network.rs:283:9: 283:10
    let mut _154: bool;                  // in scope 0 at cita-network/src/network.rs:284:5: 284:6
    scope 1 {
        debug msg => _4;                 // in scope 1 at cita-network/src/network.rs:245:13: 245:20
        let _6: libproto::SnapshotReq;   // in scope 1 at cita-network/src/network.rs:246:13: 246:16
        scope 2 {
            debug req => _6;             // in scope 2 at cita-network/src/network.rs:246:13: 246:16
            let mut _9: libproto::SnapshotResp; // in scope 2 at cita-network/src/network.rs:247:13: 247:21
            scope 3 {
                debug resp => _9;        // in scope 3 at cita-network/src/network.rs:247:13: 247:21
                let _11: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _32: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _58: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _79: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _100: log::Level;    // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _126: libproto::Message; // in scope 3 at cita-network/src/network.rs:279:13: 279:16
                scope 4 {
                    debug lvl => _11;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _150: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _151: &[&str; 1]; // in scope 4 at cita-network/src/network.rs:251:23: 251:71
                    let mut _152: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 5 {
                    debug lvl => _32;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _138: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _139: &[&str; 1]; // in scope 5 at cita-network/src/network.rs:256:23: 256:68
                    let mut _140: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 6 {
                    debug lvl => _58;    // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _141: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _142: &[&str; 1]; // in scope 6 at cita-network/src/network.rs:262:23: 262:70
                    let mut _143: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 7 {
                    debug lvl => _79;    // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _144: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _145: &[&str; 1]; // in scope 7 at cita-network/src/network.rs:267:23: 267:68
                    let mut _146: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 8 {
                    debug lvl => _100;   // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _147: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _148: &[&str; 1]; // in scope 8 at cita-network/src/network.rs:272:23: 272:66
                    let mut _149: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 9 {
                    debug msg => _126;   // in scope 9 at cita-network/src/network.rs:279:13: 279:16
                }
            }
        }
    }

    bb0: {
        _154 = const false;              // scope 0 at cita-network/src/network.rs:245:13: 245:20
        _153 = const false;              // scope 0 at cita-network/src/network.rs:245:13: 245:20
        _5 = <libproto::Message as libproto::TryFrom<&[u8]>>::try_from(_2) -> bb1; // scope 0 at cita-network/src/network.rs:245:23: 245:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:245:23: 245:45
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&[u8]>>::Error> {<libproto::Message as libproto::TryFrom<&[u8]>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _5) -> bb2; // scope 0 at cita-network/src/network.rs:245:23: 245:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:245:52: 245:58
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &mut _4;                    // scope 1 at cita-network/src/network.rs:246:19: 246:42
        _7 = libproto::Message::take_snapshot_req(move _8) -> [return: bb3, unwind: bb83]; // scope 1 at cita-network/src/network.rs:246:19: 246:42
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:246:23: 246:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::SnapshotReq> {libproto::Message::take_snapshot_req}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = std::option::Option::<libproto::SnapshotReq>::unwrap(move _7) -> [return: bb4, unwind: bb83]; // scope 1 at cita-network/src/network.rs:246:19: 246:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:246:43: 246:49
                                         // + literal: Const { ty: fn(std::option::Option<libproto::SnapshotReq>) -> libproto::SnapshotReq {std::option::Option::<libproto::SnapshotReq>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = libproto::SnapshotResp::new() -> [return: bb5, unwind: bb82]; // scope 2 at cita-network/src/network.rs:247:24: 247:43
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:247:24: 247:41
                                         // + literal: Const { ty: fn() -> libproto::SnapshotResp {libproto::SnapshotResp::new}, val: Value(<ZST>) }
    }

    bb5: {
        _154 = const true;               // scope 3 at cita-network/src/network.rs:249:9: 277:10
        _10 = discriminant((_6.0: libproto::Cmd)); // scope 3 at cita-network/src/network.rs:249:15: 249:22
        switchInt(move _10) -> [0: bb20, 1: bb46, 2: bb8, 3: bb34, 4: bb6, otherwise: bb7]; // scope 3 at cita-network/src/network.rs:249:9: 249:22
    }

    bb6: {
        _100 = log::Level::Info;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _103 = &_100;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _149 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[11])) }
        _102 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _103, _149) -> [return: bb61, unwind: bb88]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 3 at cita-network/src/network.rs:249:15: 249:22
    }

    bb8: {
        _11 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _14 = &_11;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _152 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[14])) }
        _13 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _14, _152) -> [return: bb12, unwind: bb88]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _12 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb11;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _16 = &_11;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _18 = log::max_level() -> [return: bb13, unwind: bb88]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _12) -> [0: bb18, otherwise: bb15]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        switchInt(move _13) -> [0: bb9, otherwise: bb10]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _17 = &_18;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _15 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _16, move _17) -> [return: bb14, unwind: bb88]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb14: {
        _12 = move _15;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb11;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _151 = const _;                  // scope 4 at cita-network/src/network.rs:251:23: 251:71
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:251:23: 251:71
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[13])) }
        _21 = _151 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/network.rs:251:23: 251:71
        _26 = &_6;                       // scope 4 at cita-network/src/network.rs:251:73: 251:76
        _25 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>(_26) -> [return: bb16, unwind: bb88]; // scope 4 at cita-network/src/network.rs:251:73: 251:76
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:251:73: 251:76
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb16: {
        _24 = [move _25];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = &_24;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = _23 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _20 = Arguments::<'_>::new_v1(move _21, move _22) -> [return: bb17, unwind: bb88]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _150 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[12])) }
        _19 = log::__private_api_log(move _20, _11, _150) -> [return: bb89, unwind: bb88]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _28 = &mut _9;                   // scope 3 at cita-network/src/network.rs:252:17: 252:49
        _29 = const SnapshotAck;         // scope 3 at cita-network/src/network.rs:252:31: 252:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x02)) }
        _27 = libproto::SnapshotResp::set_resp(move _28, move _29) -> [return: bb19, unwind: bb88]; // scope 3 at cita-network/src/network.rs:252:17: 252:49
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:252:22: 252:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb19: {
        _31 = &mut _9;                   // scope 3 at cita-network/src/network.rs:253:17: 253:36
        _30 = libproto::SnapshotResp::set_flag(move _31, const true) -> [return: bb90, unwind: bb88]; // scope 3 at cita-network/src/network.rs:253:17: 253:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:253:22: 253:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb20: {
        _32 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _35 = &_32;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _140 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[2])) }
        _34 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _35, _140) -> [return: bb24, unwind: bb88]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb21: {
        _33 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _37 = &_32;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _39 = log::max_level() -> [return: bb25, unwind: bb88]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _33) -> [0: bb30, otherwise: bb27]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        switchInt(move _34) -> [0: bb21, otherwise: bb22]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _38 = &_39;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, move _38) -> [return: bb26, unwind: bb88]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _33 = move _36;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _139 = const _;                  // scope 5 at cita-network/src/network.rs:256:23: 256:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:256:23: 256:68
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[1])) }
        _42 = _139 as &[&str] (Pointer(Unsize)); // scope 5 at cita-network/src/network.rs:256:23: 256:68
        _47 = &_6;                       // scope 5 at cita-network/src/network.rs:256:70: 256:73
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>(_47) -> [return: bb28, unwind: bb88]; // scope 5 at cita-network/src/network.rs:256:70: 256:73
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:256:70: 256:73
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb28: {
        _45 = [move _46];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = &_45;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = _44 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = Arguments::<'_>::new_v1(move _42, move _43) -> [return: bb29, unwind: bb88]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb29: {
        _138 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[0])) }
        _40 = log::__private_api_log(move _41, _32, _138) -> [return: bb91, unwind: bb88]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb30: {
        _51 = &((*_3).0: std::sync::Arc<std::sync::atomic::AtomicBool>); // scope 3 at cita-network/src/network.rs:257:17: 257:63
        _50 = <Arc<AtomicBool> as Deref>::deref(move _51) -> [return: bb31, unwind: bb88]; // scope 3 at cita-network/src/network.rs:257:17: 257:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:257:17: 257:63
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<AtomicBool>) -> &'a <Arc<AtomicBool> as Deref>::Target {<Arc<AtomicBool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb31: {
        _49 = _50;                       // scope 3 at cita-network/src/network.rs:257:17: 257:63
        _52 = const SeqCst;              // scope 3 at cita-network/src/network.rs:257:46: 257:62
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _48 = AtomicBool::store(move _49, const true, move _52) -> [return: bb32, unwind: bb88]; // scope 3 at cita-network/src/network.rs:257:17: 257:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:257:34: 257:39
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicBool, bool, std::sync::atomic::Ordering) {AtomicBool::store}, val: Value(<ZST>) }
    }

    bb32: {
        _54 = &mut _9;                   // scope 3 at cita-network/src/network.rs:258:17: 258:46
        _55 = const BeginAck;            // scope 3 at cita-network/src/network.rs:258:31: 258:45
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x00)) }
        _53 = libproto::SnapshotResp::set_resp(move _54, move _55) -> [return: bb33, unwind: bb88]; // scope 3 at cita-network/src/network.rs:258:17: 258:46
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:258:22: 258:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb33: {
        _57 = &mut _9;                   // scope 3 at cita-network/src/network.rs:259:17: 259:36
        _56 = libproto::SnapshotResp::set_flag(move _57, const true) -> [return: bb92, unwind: bb88]; // scope 3 at cita-network/src/network.rs:259:17: 259:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:259:22: 259:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb34: {
        _58 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _61 = &_58;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _143 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[5])) }
        _60 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _61, _143) -> [return: bb38, unwind: bb88]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb35: {
        _59 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb37;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _63 = &_58;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _65 = log::max_level() -> [return: bb39, unwind: bb88]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb37: {
        switchInt(move _59) -> [0: bb44, otherwise: bb41]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        switchInt(move _60) -> [0: bb35, otherwise: bb36]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _64 = &_65;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _62 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _63, move _64) -> [return: bb40, unwind: bb88]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb40: {
        _59 = move _62;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb37;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        _142 = const _;                  // scope 6 at cita-network/src/network.rs:262:23: 262:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:262:23: 262:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[4])) }
        _68 = _142 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/network.rs:262:23: 262:70
        _73 = &_6;                       // scope 6 at cita-network/src/network.rs:262:72: 262:75
        _72 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>(_73) -> [return: bb42, unwind: bb88]; // scope 6 at cita-network/src/network.rs:262:72: 262:75
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:262:72: 262:75
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb42: {
        _71 = [move _72];                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _70 = &_71;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _69 = _70 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _67 = Arguments::<'_>::new_v1(move _68, move _69) -> [return: bb43, unwind: bb88]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb43: {
        _141 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[3])) }
        _66 = log::__private_api_log(move _67, _58, _141) -> [return: bb93, unwind: bb88]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb44: {
        _75 = &mut _9;                   // scope 3 at cita-network/src/network.rs:263:17: 263:48
        _76 = const RestoreAck;          // scope 3 at cita-network/src/network.rs:263:31: 263:47
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x03)) }
        _74 = libproto::SnapshotResp::set_resp(move _75, move _76) -> [return: bb45, unwind: bb88]; // scope 3 at cita-network/src/network.rs:263:17: 263:48
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:263:22: 263:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb45: {
        _78 = &mut _9;                   // scope 3 at cita-network/src/network.rs:264:17: 264:36
        _77 = libproto::SnapshotResp::set_flag(move _78, const true) -> [return: bb94, unwind: bb88]; // scope 3 at cita-network/src/network.rs:264:17: 264:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:264:22: 264:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb46: {
        _79 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _82 = &_79;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _146 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[8])) }
        _81 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _82, _146) -> [return: bb50, unwind: bb88]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb47: {
        _80 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        _84 = &_79;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _86 = log::max_level() -> [return: bb51, unwind: bb88]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(move _80) -> [0: bb56, otherwise: bb53]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        switchInt(move _81) -> [0: bb47, otherwise: bb48]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _85 = &_86;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _83 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _84, move _85) -> [return: bb52, unwind: bb88]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb52: {
        _80 = move _83;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        _145 = const _;                  // scope 7 at cita-network/src/network.rs:267:23: 267:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:267:23: 267:68
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[7])) }
        _89 = _145 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/network.rs:267:23: 267:68
        _94 = &_6;                       // scope 7 at cita-network/src/network.rs:267:70: 267:73
        _93 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>(_94) -> [return: bb54, unwind: bb88]; // scope 7 at cita-network/src/network.rs:267:70: 267:73
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:267:70: 267:73
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb54: {
        _92 = [move _93];                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _91 = &_92;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _90 = _91 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _88 = Arguments::<'_>::new_v1(move _89, move _90) -> [return: bb55, unwind: bb88]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb55: {
        _144 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[6])) }
        _87 = log::__private_api_log(move _88, _79, _144) -> [return: bb95, unwind: bb88]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb56: {
        _96 = &mut _9;                   // scope 3 at cita-network/src/network.rs:268:17: 268:46
        _97 = const ClearAck;            // scope 3 at cita-network/src/network.rs:268:31: 268:45
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x01)) }
        _95 = libproto::SnapshotResp::set_resp(move _96, move _97) -> [return: bb57, unwind: bb88]; // scope 3 at cita-network/src/network.rs:268:17: 268:46
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:268:22: 268:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb57: {
        _99 = &mut _9;                   // scope 3 at cita-network/src/network.rs:269:17: 269:36
        _98 = libproto::SnapshotResp::set_flag(move _99, const true) -> [return: bb96, unwind: bb88]; // scope 3 at cita-network/src/network.rs:269:17: 269:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:269:22: 269:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb58: {
        _101 = const false;              // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        _105 = &_100;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _107 = log::max_level() -> [return: bb62, unwind: bb88]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb60: {
        switchInt(move _101) -> [0: bb67, otherwise: bb64]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb61: {
        switchInt(move _102) -> [0: bb58, otherwise: bb59]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _106 = &_107;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _104 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _105, move _106) -> [return: bb63, unwind: bb88]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb63: {
        _101 = move _104;                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb64: {
        _148 = const _;                  // scope 8 at cita-network/src/network.rs:272:23: 272:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:272:23: 272:66
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[10])) }
        _110 = _148 as &[&str] (Pointer(Unsize)); // scope 8 at cita-network/src/network.rs:272:23: 272:66
        _115 = &_6;                      // scope 8 at cita-network/src/network.rs:272:68: 272:71
        _114 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>(_115) -> [return: bb65, unwind: bb88]; // scope 8 at cita-network/src/network.rs:272:68: 272:71
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:272:68: 272:71
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb65: {
        _113 = [move _114];              // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _112 = &_113;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _111 = _112 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _109 = Arguments::<'_>::new_v1(move _110, move _111) -> [return: bb66, unwind: bb88]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb66: {
        _147 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(LocalMessage::snapshot_req, [], Some(promoted[9])) }
        _108 = log::__private_api_log(move _109, _100, _147) -> [return: bb97, unwind: bb88]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb67: {
        _119 = &((*_3).0: std::sync::Arc<std::sync::atomic::AtomicBool>); // scope 3 at cita-network/src/network.rs:273:17: 273:64
        _118 = <Arc<AtomicBool> as Deref>::deref(move _119) -> [return: bb68, unwind: bb88]; // scope 3 at cita-network/src/network.rs:273:17: 273:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:273:17: 273:64
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<AtomicBool>) -> &'a <Arc<AtomicBool> as Deref>::Target {<Arc<AtomicBool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb68: {
        _117 = _118;                     // scope 3 at cita-network/src/network.rs:273:17: 273:64
        _120 = const SeqCst;             // scope 3 at cita-network/src/network.rs:273:47: 273:63
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _116 = AtomicBool::store(move _117, const false, move _120) -> [return: bb69, unwind: bb88]; // scope 3 at cita-network/src/network.rs:273:17: 273:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:273:34: 273:39
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicBool, bool, std::sync::atomic::Ordering) {AtomicBool::store}, val: Value(<ZST>) }
    }

    bb69: {
        _122 = &mut _9;                  // scope 3 at cita-network/src/network.rs:274:17: 274:44
        _123 = const EndAck;             // scope 3 at cita-network/src/network.rs:274:31: 274:43
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x04)) }
        _121 = libproto::SnapshotResp::set_resp(move _122, move _123) -> [return: bb70, unwind: bb88]; // scope 3 at cita-network/src/network.rs:274:17: 274:44
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:274:22: 274:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb70: {
        _125 = &mut _9;                  // scope 3 at cita-network/src/network.rs:275:17: 275:36
        _124 = libproto::SnapshotResp::set_flag(move _125, const true) -> [return: bb98, unwind: bb88]; // scope 3 at cita-network/src/network.rs:275:17: 275:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:275:22: 275:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb71: {
        _154 = const false;              // scope 3 at cita-network/src/network.rs:279:33: 279:37
        _127 = move _9;                  // scope 3 at cita-network/src/network.rs:279:33: 279:37
        _126 = <libproto::SnapshotResp as Into<libproto::Message>>::into(move _127) -> [return: bb72, unwind: bb88]; // scope 3 at cita-network/src/network.rs:279:33: 279:44
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:279:38: 279:42
                                         // + literal: Const { ty: fn(libproto::SnapshotResp) -> libproto::Message {<libproto::SnapshotResp as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb72: {
        _129 = &((*_3).1: mq_agent::MqAgentClient); // scope 9 at cita-network/src/network.rs:280:9: 283:11
        _133 = const Net;                // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _134 = const libproto::router::MsgType::SnapshotResp; // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x12)) }
        _132 = RoutingKey(move _133, move _134); // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _131 = <RoutingKey as Into<std::string::String>>::into(move _132) -> [return: bb73, unwind: bb81]; // scope 9 at cita-network/src/network.rs:281:13: 281:53
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:281:47: 281:51
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb73: {
        _153 = const true;               // scope 9 at cita-network/src/network.rs:281:52: 281:53
        _137 = &_126;                    // scope 9 at cita-network/src/network.rs:282:13: 282:19
        _136 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_137) -> [return: bb74, unwind: bb86]; // scope 9 at cita-network/src/network.rs:282:13: 282:30
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:282:20: 282:28
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb74: {
        _135 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _136) -> [return: bb75, unwind: bb86]; // scope 9 at cita-network/src/network.rs:282:13: 282:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:282:31: 282:37
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb75: {
        _153 = const false;              // scope 9 at cita-network/src/network.rs:280:46: 283:10
        _130 = PubMessage::new(move _131, move _135) -> [return: bb76, unwind: bb86]; // scope 9 at cita-network/src/network.rs:280:46: 283:10
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:280:46: 280:61
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb76: {
        _153 = const false;              // scope 9 at cita-network/src/network.rs:283:9: 283:10
        _128 = MqAgentClient::send_snapshot_resp(move _129, move _130) -> [return: bb77, unwind: bb81]; // scope 9 at cita-network/src/network.rs:280:9: 283:11
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:280:27: 280:45
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::send_snapshot_resp}, val: Value(<ZST>) }
    }

    bb77: {
        drop(_126) -> [return: bb78, unwind: bb88]; // scope 3 at cita-network/src/network.rs:284:5: 284:6
    }

    bb78: {
        _154 = const false;              // scope 2 at cita-network/src/network.rs:284:5: 284:6
        drop(_6) -> [return: bb79, unwind: bb83]; // scope 1 at cita-network/src/network.rs:284:5: 284:6
    }

    bb79: {
        drop(_4) -> bb80;                // scope 0 at cita-network/src/network.rs:284:5: 284:6
    }

    bb80: {
        return;                          // scope 0 at cita-network/src/network.rs:284:6: 284:6
    }

    bb81 (cleanup): {
        drop(_126) -> bb88;              // scope 3 at cita-network/src/network.rs:284:5: 284:6
    }

    bb82 (cleanup): {
        drop(_6) -> bb83;                // scope 1 at cita-network/src/network.rs:284:5: 284:6
    }

    bb83 (cleanup): {
        drop(_4) -> bb84;                // scope 0 at cita-network/src/network.rs:284:5: 284:6
    }

    bb84 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:244:5: 284:6
    }

    bb85 (cleanup): {
        drop(_131) -> bb81;              // scope 9 at cita-network/src/network.rs:283:9: 283:10
    }

    bb86 (cleanup): {
        switchInt(_153) -> [0: bb81, otherwise: bb85]; // scope 9 at cita-network/src/network.rs:283:9: 283:10
    }

    bb87 (cleanup): {
        drop(_9) -> bb82;                // scope 2 at cita-network/src/network.rs:284:5: 284:6
    }

    bb88 (cleanup): {
        switchInt(_154) -> [0: bb82, otherwise: bb87]; // scope 2 at cita-network/src/network.rs:284:5: 284:6
    }

    bb89: {
        goto -> bb18;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb90: {
        goto -> bb71;                    // scope 3 at cita-network/src/network.rs:253:17: 253:36
    }

    bb91: {
        goto -> bb30;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb92: {
        goto -> bb71;                    // scope 3 at cita-network/src/network.rs:259:17: 259:36
    }

    bb93: {
        goto -> bb44;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb94: {
        goto -> bb71;                    // scope 3 at cita-network/src/network.rs:264:17: 264:36
    }

    bb95: {
        goto -> bb56;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb96: {
        goto -> bb71;                    // scope 3 at cita-network/src/network.rs:269:17: 269:36
    }

    bb97: {
        goto -> bb67;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb98: {
        goto -> bb71;                    // scope 3 at cita-network/src/network.rs:275:17: 275:36
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:256:17: 256:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:256:17: 256:74

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:256:17: 256:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:256:17: 256:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:256:17: 256:74
        _1 = (move _2, move _4, move _6, const 256_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:256:23: 256:68
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:256:23: 256:68

    bb0: {
        _1 = [const "[Network] Snapshot receive cmd::Begin: "]; // scope 0 at cita-network/src/network.rs:256:23: 256:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:256:23: 256:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:256:23: 256:68
        return;                          // scope 0 at cita-network/src/network.rs:256:23: 256:68
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:262:17: 262:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:262:17: 262:76

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:262:17: 262:76
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:262:17: 262:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:262:17: 262:76
        _1 = (move _2, move _4, move _6, const 262_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:262:23: 262:70
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:262:23: 262:70

    bb0: {
        _1 = [const "[Network] Snapshot receive cmd::Restore: "]; // scope 0 at cita-network/src/network.rs:262:23: 262:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:262:23: 262:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:262:23: 262:70
        return;                          // scope 0 at cita-network/src/network.rs:262:23: 262:70
    }
}

promoted[5] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:267:17: 267:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:267:17: 267:74

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:267:17: 267:74
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:267:17: 267:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:267:17: 267:74
        _1 = (move _2, move _4, move _6, const 267_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:267:23: 267:68
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:267:23: 267:68

    bb0: {
        _1 = [const "[Network] Snapshot receive cmd::Clear: "]; // scope 0 at cita-network/src/network.rs:267:23: 267:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:267:23: 267:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:267:23: 267:68
        return;                          // scope 0 at cita-network/src/network.rs:267:23: 267:68
    }
}

promoted[8] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:272:17: 272:72
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:272:17: 272:72

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:272:17: 272:72
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:272:17: 272:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:272:17: 272:72
        _1 = (move _2, move _4, move _6, const 272_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:272:23: 272:66
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:272:23: 272:66

    bb0: {
        _1 = [const "[Network] Snapshot receive cmd::End: "]; // scope 0 at cita-network/src/network.rs:272:23: 272:66
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:272:23: 272:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:272:23: 272:66
        return;                          // scope 0 at cita-network/src/network.rs:272:23: 272:66
    }
}

promoted[11] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:251:17: 251:77
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:251:17: 251:77

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:251:17: 251:77
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:251:17: 251:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:251:17: 251:77
        _1 = (move _2, move _4, move _6, const 251_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:251:23: 251:71
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:251:23: 251:71

    bb0: {
        _1 = [const "[Network] Snapshot receive cmd::Snapshot: "]; // scope 0 at cita-network/src/network.rs:251:23: 251:71
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:251:23: 251:71
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:251:23: 251:71
        return;                          // scope 0 at cita-network/src/network.rs:251:23: 251:71
    }
}

promoted[14] in network::<impl at cita-network/src/network.rs:117:1: 117:18>::snapshot_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn network::<impl at cita-network/src/network.rs:292:1: 292:19>::new(_1: std::string::String, _2: Vec<u8>) -> RemoteMessage {
    debug key => _1;                     // in scope 0 at cita-network/src/network.rs:293:16: 293:19
    debug data => _2;                    // in scope 0 at cita-network/src/network.rs:293:29: 293:33
    let mut _0: network::RemoteMessage;  // return place in scope 0 at cita-network/src/network.rs:293:47: 293:51

    bb0: {
        _0 = RemoteMessage { key: move _1, data: move _2 }; // scope 0 at cita-network/src/network.rs:294:9: 294:36
        return;                          // scope 0 at cita-network/src/network.rs:295:6: 295:6
    }
}

fn network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle(_1: RemoteMessage, _2: &mut Network) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/network.rs:297:19: 297:23
    debug service => _2;                 // in scope 0 at cita-network/src/network.rs:297:25: 297:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:297:48: 297:48
    let _3: libproto::router::RoutingKey; // in scope 0 at cita-network/src/network.rs:298:13: 298:19
    let mut _4: &std::string::String;    // in scope 0 at cita-network/src/network.rs:298:39: 298:48
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-network/src/network.rs:299:16: 299:58
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:299:60: 299:68
    let _20: &std::string::String;       // in scope 0 at cita-network/src/network.rs:299:60: 299:68
    let mut _21: bool;                   // in scope 0 at cita-network/src/network.rs:301:12: 302:63
    let mut _22: bool;                   // in scope 0 at cita-network/src/network.rs:301:12: 301:51
    let mut _23: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:301:12: 301:51
    let _24: &std::sync::atomic::AtomicBool; // in scope 0 at cita-network/src/network.rs:301:12: 301:51
    let mut _25: &std::sync::Arc<std::sync::atomic::AtomicBool>; // in scope 0 at cita-network/src/network.rs:301:12: 301:51
    let mut _26: std::sync::atomic::Ordering; // in scope 0 at cita-network/src/network.rs:301:34: 301:50
    let mut _27: bool;                   // in scope 0 at cita-network/src/network.rs:302:16: 302:63
    let mut _28: &libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:302:16: 302:39
    let _29: libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:302:16: 302:39
    let mut _30: libproto::router::RoutingKey; // in scope 0 at cita-network/src/network.rs:302:16: 302:22
    let mut _31: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _32: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _33: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _34: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let _35: ();                         // in scope 0 at cita-network/src/network.rs:309:17: 311:89
    let mut _36: &synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/network.rs:309:17: 311:89
    let mut _37: synchronizer::SynchronizerMessage; // in scope 0 at cita-network/src/network.rs:311:43: 311:88
    let mut _38: std::string::String;    // in scope 0 at cita-network/src/network.rs:311:68: 311:76
    let mut _39: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:311:78: 311:87
    let _40: ();                         // in scope 0 at cita-network/src/network.rs:314:17: 316:91
    let mut _41: &synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/network.rs:314:17: 316:91
    let mut _42: synchronizer::SynchronizerMessage; // in scope 0 at cita-network/src/network.rs:316:45: 316:90
    let mut _43: std::string::String;    // in scope 0 at cita-network/src/network.rs:316:70: 316:78
    let mut _44: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:316:80: 316:89
    let _45: ();                         // in scope 0 at cita-network/src/network.rs:319:17: 322:19
    let mut _46: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:319:17: 322:19
    let mut _47: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:319:52: 322:18
    let mut _48: std::string::String;    // in scope 0 at cita-network/src/network.rs:320:21: 320:60
    let mut _49: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _50: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _51: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _52: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:321:21: 321:30
    let mut _54: std::string::String;    // in scope 0 at cita-network/src/network.rs:326:37: 326:86
    let mut _55: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _56: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _57: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _58: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:326:88: 326:97
    let _59: ();                         // in scope 0 at cita-network/src/network.rs:327:17: 327:64
    let mut _60: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:327:17: 327:64
    let mut _61: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:327:60: 327:63
    let mut _63: std::string::String;    // in scope 0 at cita-network/src/network.rs:330:43: 330:79
    let mut _64: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _65: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _66: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _67: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:330:81: 330:90
    let _68: ();                         // in scope 0 at cita-network/src/network.rs:331:17: 331:64
    let mut _69: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:331:17: 331:64
    let mut _70: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:331:60: 331:63
    let mut _72: std::string::String;    // in scope 0 at cita-network/src/network.rs:334:43: 334:78
    let mut _73: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _74: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _75: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _76: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:334:80: 334:89
    let _77: ();                         // in scope 0 at cita-network/src/network.rs:335:17: 335:59
    let mut _78: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:335:17: 335:59
    let mut _79: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:335:55: 335:58
    let mut _81: std::string::String;    // in scope 0 at cita-network/src/network.rs:338:43: 338:82
    let mut _82: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _83: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _84: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _85: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:338:84: 338:93
    let _86: ();                         // in scope 0 at cita-network/src/network.rs:339:17: 339:59
    let mut _87: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:339:17: 339:59
    let mut _88: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:339:55: 339:58
    let mut _90: std::string::String;    // in scope 0 at cita-network/src/network.rs:342:43: 342:79
    let mut _91: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _92: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _93: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _94: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/network.rs:342:81: 342:90
    let _95: ();                         // in scope 0 at cita-network/src/network.rs:343:17: 343:59
    let mut _96: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/network.rs:343:17: 343:59
    let mut _97: mq_agent::PubMessage;   // in scope 0 at cita-network/src/network.rs:343:55: 343:58
    let mut _99: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _100: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _101: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _102: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _103: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _104: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _105: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _106: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _107: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _108: &[&str];               // in scope 0 at cita-network/src/network.rs:346:24: 346:65
    let mut _109: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _110: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _111: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _112: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/network.rs:346:67: 346:75
    let _113: &std::string::String;      // in scope 0 at cita-network/src/network.rs:346:67: 346:75
    let mut _121: bool;                  // in scope 0 at cita-network/src/network.rs:349:5: 349:6
    let mut _122: bool;                  // in scope 0 at cita-network/src/network.rs:349:5: 349:6
    scope 1 {
        debug rt_key => _3;              // in scope 1 at cita-network/src/network.rs:298:13: 298:19
        let _5: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _53: mq_agent::PubMessage;   // in scope 1 at cita-network/src/network.rs:325:21: 325:24
        let _62: mq_agent::PubMessage;   // in scope 1 at cita-network/src/network.rs:330:21: 330:24
        let _71: mq_agent::PubMessage;   // in scope 1 at cita-network/src/network.rs:334:21: 334:24
        let _80: mq_agent::PubMessage;   // in scope 1 at cita-network/src/network.rs:338:21: 338:24
        let _89: mq_agent::PubMessage;   // in scope 1 at cita-network/src/network.rs:342:21: 342:24
        let _98: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _117: &libproto::router::SubModules; // in scope 1 at cita-network/src/network.rs:302:43: 302:63
        scope 2 {
            debug lvl => _5;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _118: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _119: &[&str; 1];    // in scope 2 at cita-network/src/network.rs:299:16: 299:58
            let mut _120: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug msg => _53;            // in scope 3 at cita-network/src/network.rs:325:21: 325:24
        }
        scope 4 {
            debug msg => _62;            // in scope 4 at cita-network/src/network.rs:330:21: 330:24
        }
        scope 5 {
            debug msg => _71;            // in scope 5 at cita-network/src/network.rs:334:21: 334:24
        }
        scope 6 {
            debug msg => _80;            // in scope 6 at cita-network/src/network.rs:338:21: 338:24
        }
        scope 7 {
            debug msg => _89;            // in scope 7 at cita-network/src/network.rs:342:21: 342:24
        }
        scope 8 {
            debug lvl => _98;            // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _114: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _115: &[&str; 2];    // in scope 8 at cita-network/src/network.rs:346:24: 346:65
            let mut _116: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _122 = const false;              // scope 0 at cita-network/src/network.rs:298:13: 298:19
        _121 = const false;              // scope 0 at cita-network/src/network.rs:298:13: 298:19
        _121 = const true;               // scope 0 at cita-network/src/network.rs:298:13: 298:19
        _122 = const true;               // scope 0 at cita-network/src/network.rs:298:13: 298:19
        _4 = &(_1.0: std::string::String); // scope 0 at cita-network/src/network.rs:298:39: 298:48
        _3 = <RoutingKey as From<&std::string::String>>::from(move _4) -> [return: bb1, unwind: bb67]; // scope 0 at cita-network/src/network.rs:298:22: 298:49
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:298:22: 298:38
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&std::string::String) -> RoutingKey {<RoutingKey as From<&std::string::String>>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = log::Level::Trace;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _8 = &_5;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _120 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(RemoteMessage::handle, [], Some(promoted[6])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _120) -> [return: bb5, unwind: bb67]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _10 = &_5;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> [return: bb6, unwind: bb67]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _6) -> [0: bb11, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _7) -> [0: bb2, otherwise: bb3]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> [return: bb7, unwind: bb67]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = move _9;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _119 = const _;                  // scope 2 at cita-network/src/network.rs:299:16: 299:58
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:299:16: 299:58
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(RemoteMessage::handle, [], Some(promoted[5])) }
        _15 = _119 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/network.rs:299:16: 299:58
        _20 = &(_1.0: std::string::String); // scope 2 at cita-network/src/network.rs:299:60: 299:68
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_20) -> [return: bb9, unwind: bb67]; // scope 2 at cita-network/src/network.rs:299:60: 299:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:299:60: 299:68
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = [move _19];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> [return: bb10, unwind: bb67]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _118 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(RemoteMessage::handle, [], Some(promoted[4])) }
        _13 = log::__private_api_log(move _14, _5, _118) -> [return: bb68, unwind: bb67]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = &((*_2).0: std::sync::Arc<std::sync::atomic::AtomicBool>); // scope 1 at cita-network/src/network.rs:301:12: 301:51
        _24 = <Arc<AtomicBool> as Deref>::deref(move _25) -> [return: bb15, unwind: bb67]; // scope 1 at cita-network/src/network.rs:301:12: 301:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:301:12: 301:51
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<AtomicBool>) -> &'a <Arc<AtomicBool> as Deref>::Target {<Arc<AtomicBool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb12: {
        _21 = const false;               // scope 1 at cita-network/src/network.rs:301:12: 302:63
        goto -> bb14;                    // scope 1 at cita-network/src/network.rs:301:12: 302:63
    }

    bb13: {
        _30 = _3;                        // scope 1 at cita-network/src/network.rs:302:16: 302:22
        _29 = RoutingKey::get_sub_module(move _30) -> [return: bb17, unwind: bb67]; // scope 1 at cita-network/src/network.rs:302:16: 302:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:302:23: 302:37
                                         // + literal: Const { ty: fn(RoutingKey) -> SubModules {RoutingKey::get_sub_module}, val: Value(<ZST>) }
    }

    bb14: {
        switchInt(move _21) -> [0: bb20, otherwise: bb19]; // scope 1 at cita-network/src/network.rs:301:12: 302:63
    }

    bb15: {
        _23 = _24;                       // scope 1 at cita-network/src/network.rs:301:12: 301:51
        _26 = const SeqCst;              // scope 1 at cita-network/src/network.rs:301:34: 301:50
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::sync::atomic::Ordering, val: Value(Scalar(0x04)) }
        _22 = AtomicBool::load(move _23, move _26) -> [return: bb16, unwind: bb67]; // scope 1 at cita-network/src/network.rs:301:12: 301:51
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:301:29: 301:33
                                         // + literal: Const { ty: for<'a> fn(&'a AtomicBool, std::sync::atomic::Ordering) -> bool {AtomicBool::load}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _22) -> [0: bb12, otherwise: bb13]; // scope 1 at cita-network/src/network.rs:301:12: 302:63
    }

    bb17: {
        _28 = &_29;                      // scope 1 at cita-network/src/network.rs:302:16: 302:39
        _117 = const _;                  // scope 1 at cita-network/src/network.rs:302:43: 302:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:302:43: 302:63
                                         // + literal: Const { ty: &SubModules, val: Unevaluated(RemoteMessage::handle, [], Some(promoted[3])) }
        _27 = <SubModules as PartialEq>::ne(move _28, _117) -> [return: bb18, unwind: bb67]; // scope 1 at cita-network/src/network.rs:302:16: 302:63
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:302:16: 302:63
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a SubModules, &'b SubModules) -> bool {<SubModules as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb18: {
        _21 = move _27;                  // scope 1 at cita-network/src/network.rs:301:12: 302:63
        goto -> bb14;                    // scope 1 at cita-network/src/network.rs:301:12: 302:63
    }

    bb19: {
        drop(_1) -> bb57;                // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb20: {
        _34 = discriminant((_3.0: libproto::router::SubModules)); // scope 1 at cita-network/src/network.rs:307:15: 307:21
        switchInt(move _34) -> [3: bb22, 4: bb23, 6: bb24, otherwise: bb21]; // scope 1 at cita-network/src/network.rs:307:9: 307:21
    }

    bb21: {
        _98 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _101 = &_98;                     // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _116 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(RemoteMessage::handle, [], Some(promoted[2])) }
        _100 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _101, _116) -> [return: bb50, unwind: bb67]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        _31 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:307:15: 307:21
        switchInt(move _31) -> [0: bb35, 25: bb32, otherwise: bb21]; // scope 1 at cita-network/src/network.rs:307:9: 307:21
    }

    bb23: {
        _32 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:307:15: 307:21
        switchInt(move _32) -> [1: bb38, 23: bb41, 24: bb44, otherwise: bb21]; // scope 1 at cita-network/src/network.rs:307:9: 307:21
    }

    bb24: {
        _33 = discriminant((_3.1: libproto::router::MsgType)); // scope 1 at cita-network/src/network.rs:307:15: 307:21
        switchInt(move _33) -> [3: bb29, 4: bb27, 5: bb25, otherwise: bb21]; // scope 1 at cita-network/src/network.rs:307:9: 307:21
    }

    bb25: {
        _36 = &((*_2).4: synchronizer::SynchronizerClient); // scope 1 at cita-network/src/network.rs:309:17: 311:89
        _122 = const false;              // scope 1 at cita-network/src/network.rs:311:68: 311:76
        _38 = move (_1.0: std::string::String); // scope 1 at cita-network/src/network.rs:311:68: 311:76
        _121 = const false;              // scope 1 at cita-network/src/network.rs:311:78: 311:87
        _39 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:311:78: 311:87
        _37 = SynchronizerMessage::new(move _38, move _39) -> [return: bb26, unwind: bb67]; // scope 1 at cita-network/src/network.rs:311:43: 311:88
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:311:43: 311:67
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> SynchronizerMessage {SynchronizerMessage::new}, val: Value(<ZST>) }
    }

    bb26: {
        _35 = SynchronizerClient::handle_remote_status(move _36, move _37) -> [return: bb69, unwind: bb67]; // scope 1 at cita-network/src/network.rs:309:17: 311:89
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:311:22: 311:42
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::handle_remote_status}, val: Value(<ZST>) }
    }

    bb27: {
        _41 = &((*_2).4: synchronizer::SynchronizerClient); // scope 1 at cita-network/src/network.rs:314:17: 316:91
        _122 = const false;              // scope 1 at cita-network/src/network.rs:316:70: 316:78
        _43 = move (_1.0: std::string::String); // scope 1 at cita-network/src/network.rs:316:70: 316:78
        _121 = const false;              // scope 1 at cita-network/src/network.rs:316:80: 316:89
        _44 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:316:80: 316:89
        _42 = SynchronizerMessage::new(move _43, move _44) -> [return: bb28, unwind: bb67]; // scope 1 at cita-network/src/network.rs:316:45: 316:90
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:316:45: 316:69
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> SynchronizerMessage {SynchronizerMessage::new}, val: Value(<ZST>) }
    }

    bb28: {
        _40 = SynchronizerClient::handle_remote_response(move _41, move _42) -> [return: bb70, unwind: bb67]; // scope 1 at cita-network/src/network.rs:314:17: 316:91
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:316:22: 316:44
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::handle_remote_response}, val: Value(<ZST>) }
    }

    bb29: {
        _46 = &((*_2).1: mq_agent::MqAgentClient); // scope 1 at cita-network/src/network.rs:319:17: 322:19
        _50 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _51 = const libproto::router::MsgType::SyncRequest; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x03)) }
        _49 = RoutingKey(move _50, move _51); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _48 = <RoutingKey as Into<std::string::String>>::into(move _49) -> [return: bb30, unwind: bb67]; // scope 1 at cita-network/src/network.rs:320:21: 320:60
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:320:54: 320:58
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb30: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:321:21: 321:30
        _52 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:321:21: 321:30
        _47 = PubMessage::new(move _48, move _52) -> [return: bb31, unwind: bb67]; // scope 1 at cita-network/src/network.rs:319:52: 322:18
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:319:52: 319:67
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb31: {
        _45 = MqAgentClient::pub_sync_request(move _46, move _47) -> [return: bb71, unwind: bb67]; // scope 1 at cita-network/src/network.rs:319:17: 322:19
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:319:35: 319:51
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::pub_sync_request}, val: Value(<ZST>) }
    }

    bb32: {
        _56 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _57 = const libproto::router::MsgType::CompactSignedProposal; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x19)) }
        _55 = RoutingKey(move _56, move _57); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _54 = <RoutingKey as Into<std::string::String>>::into(move _55) -> [return: bb33, unwind: bb67]; // scope 1 at cita-network/src/network.rs:326:37: 326:86
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:326:80: 326:84
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb33: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:326:88: 326:97
        _58 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:326:88: 326:97
        _53 = PubMessage::new(move _54, move _58) -> [return: bb34, unwind: bb67]; // scope 1 at cita-network/src/network.rs:326:21: 326:98
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:326:21: 326:36
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb34: {
        _60 = &((*_2).1: mq_agent::MqAgentClient); // scope 3 at cita-network/src/network.rs:327:17: 327:64
        _61 = move _53;                  // scope 3 at cita-network/src/network.rs:327:60: 327:63
        _59 = MqAgentClient::forward_msg_to_consensus(move _60, move _61) -> [return: bb72, unwind: bb67]; // scope 3 at cita-network/src/network.rs:327:17: 327:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:327:35: 327:59
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::forward_msg_to_consensus}, val: Value(<ZST>) }
    }

    bb35: {
        _65 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _66 = const libproto::router::MsgType::RawBytes; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x00)) }
        _64 = RoutingKey(move _65, move _66); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _63 = <RoutingKey as Into<std::string::String>>::into(move _64) -> [return: bb36, unwind: bb67]; // scope 1 at cita-network/src/network.rs:330:43: 330:79
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:330:73: 330:77
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb36: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:330:81: 330:90
        _67 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:330:81: 330:90
        _62 = PubMessage::new(move _63, move _67) -> [return: bb37, unwind: bb67]; // scope 1 at cita-network/src/network.rs:330:27: 330:91
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:330:27: 330:42
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb37: {
        _69 = &((*_2).1: mq_agent::MqAgentClient); // scope 4 at cita-network/src/network.rs:331:17: 331:64
        _70 = move _62;                  // scope 4 at cita-network/src/network.rs:331:60: 331:63
        _68 = MqAgentClient::forward_msg_to_consensus(move _69, move _70) -> [return: bb73, unwind: bb67]; // scope 4 at cita-network/src/network.rs:331:17: 331:64
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:331:35: 331:59
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::forward_msg_to_consensus}, val: Value(<ZST>) }
    }

    bb38: {
        _74 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _75 = const libproto::router::MsgType::Request; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _73 = RoutingKey(move _74, move _75); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _72 = <RoutingKey as Into<std::string::String>>::into(move _73) -> [return: bb39, unwind: bb67]; // scope 1 at cita-network/src/network.rs:334:43: 334:78
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:334:72: 334:76
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb39: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:334:80: 334:89
        _76 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:334:80: 334:89
        _71 = PubMessage::new(move _72, move _76) -> [return: bb40, unwind: bb67]; // scope 1 at cita-network/src/network.rs:334:27: 334:90
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:334:27: 334:42
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb40: {
        _78 = &((*_2).1: mq_agent::MqAgentClient); // scope 5 at cita-network/src/network.rs:335:17: 335:59
        _79 = move _71;                  // scope 5 at cita-network/src/network.rs:335:55: 335:58
        _77 = MqAgentClient::forward_msg_to_auth(move _78, move _79) -> [return: bb74, unwind: bb67]; // scope 5 at cita-network/src/network.rs:335:17: 335:59
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:335:35: 335:54
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::forward_msg_to_auth}, val: Value(<ZST>) }
    }

    bb41: {
        _83 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _84 = const libproto::router::MsgType::GetBlockTxn; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x17)) }
        _82 = RoutingKey(move _83, move _84); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _81 = <RoutingKey as Into<std::string::String>>::into(move _82) -> [return: bb42, unwind: bb67]; // scope 1 at cita-network/src/network.rs:338:43: 338:82
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:338:76: 338:80
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb42: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:338:84: 338:93
        _85 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:338:84: 338:93
        _80 = PubMessage::new(move _81, move _85) -> [return: bb43, unwind: bb67]; // scope 1 at cita-network/src/network.rs:338:27: 338:94
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:338:27: 338:42
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb43: {
        _87 = &((*_2).1: mq_agent::MqAgentClient); // scope 6 at cita-network/src/network.rs:339:17: 339:59
        _88 = move _80;                  // scope 6 at cita-network/src/network.rs:339:55: 339:58
        _86 = MqAgentClient::forward_msg_to_auth(move _87, move _88) -> [return: bb75, unwind: bb67]; // scope 6 at cita-network/src/network.rs:339:17: 339:59
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:339:35: 339:54
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::forward_msg_to_auth}, val: Value(<ZST>) }
    }

    bb44: {
        _92 = const Net;                 // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _93 = const libproto::router::MsgType::BlockTxn; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x18)) }
        _91 = RoutingKey(move _92, move _93); // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _90 = <RoutingKey as Into<std::string::String>>::into(move _91) -> [return: bb45, unwind: bb67]; // scope 1 at cita-network/src/network.rs:342:43: 342:79
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:342:73: 342:77
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb45: {
        _121 = const false;              // scope 1 at cita-network/src/network.rs:342:81: 342:90
        _94 = move (_1.1: std::vec::Vec<u8>); // scope 1 at cita-network/src/network.rs:342:81: 342:90
        _89 = PubMessage::new(move _90, move _94) -> [return: bb46, unwind: bb67]; // scope 1 at cita-network/src/network.rs:342:27: 342:91
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:342:27: 342:42
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb46: {
        _96 = &((*_2).1: mq_agent::MqAgentClient); // scope 7 at cita-network/src/network.rs:343:17: 343:59
        _97 = move _89;                  // scope 7 at cita-network/src/network.rs:343:55: 343:58
        _95 = MqAgentClient::forward_msg_to_auth(move _96, move _97) -> [return: bb76, unwind: bb67]; // scope 7 at cita-network/src/network.rs:343:17: 343:59
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:343:35: 343:54
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::forward_msg_to_auth}, val: Value(<ZST>) }
    }

    bb47: {
        _99 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        _103 = &_98;                     // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _105 = log::max_level() -> [return: bb51, unwind: bb67]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb49: {
        switchInt(move _99) -> [0: bb56, otherwise: bb53]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        switchInt(move _100) -> [0: bb47, otherwise: bb48]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _104 = &_105;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _102 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _103, move _104) -> [return: bb52, unwind: bb67]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb52: {
        _99 = move _102;                 // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb49;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        _115 = const _;                  // scope 8 at cita-network/src/network.rs:346:24: 346:65
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:346:24: 346:65
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(RemoteMessage::handle, [], Some(promoted[1])) }
        _108 = _115 as &[&str] (Pointer(Unsize)); // scope 8 at cita-network/src/network.rs:346:24: 346:65
        _113 = &(_1.0: std::string::String); // scope 8 at cita-network/src/network.rs:346:67: 346:75
        _112 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_113) -> [return: bb54, unwind: bb67]; // scope 8 at cita-network/src/network.rs:346:67: 346:75
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:346:67: 346:75
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb54: {
        _111 = [move _112];              // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _110 = &_111;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _109 = _110 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _107 = Arguments::<'_>::new_v1(move _108, move _109) -> [return: bb55, unwind: bb67]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb55: {
        _114 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(RemoteMessage::handle, [], Some(promoted[0])) }
        _106 = log::__private_api_log(move _107, _98, _114) -> [return: bb77, unwind: bb67]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb56: {
        switchInt(_122) -> [0: bb61, otherwise: bb63]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb57: {
        return;                          // scope 0 at cita-network/src/network.rs:349:6: 349:6
    }

    bb58 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:297:5: 349:6
    }

    bb59 (cleanup): {
        switchInt(_121) -> [0: bb58, otherwise: bb60]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb60 (cleanup): {
        drop((_1.1: std::vec::Vec<u8>)) -> bb58; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb61: {
        switchInt(_121) -> [0: bb57, otherwise: bb62]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb62: {
        drop((_1.1: std::vec::Vec<u8>)) -> bb57; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb63: {
        drop((_1.0: std::string::String)) -> [return: bb61, unwind: bb59]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb64 (cleanup): {
        switchInt(_121) -> [0: bb58, otherwise: bb65]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb65 (cleanup): {
        drop((_1.1: std::vec::Vec<u8>)) -> bb58; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb66 (cleanup): {
        drop((_1.0: std::string::String)) -> bb64; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb67 (cleanup): {
        switchInt(_122) -> [0: bb64, otherwise: bb66]; // scope 0 at cita-network/src/network.rs:349:5: 349:6
    }

    bb68: {
        goto -> bb11;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb69: {
        goto -> bb56;                    // scope 1 at cita-network/src/network.rs:309:17: 311:89
    }

    bb70: {
        goto -> bb56;                    // scope 1 at cita-network/src/network.rs:314:17: 316:91
    }

    bb71: {
        goto -> bb56;                    // scope 1 at cita-network/src/network.rs:319:17: 322:19
    }

    bb72: {
        goto -> bb56;                    // scope 3 at cita-network/src/network.rs:327:17: 327:64
    }

    bb73: {
        goto -> bb56;                    // scope 4 at cita-network/src/network.rs:331:17: 331:64
    }

    bb74: {
        goto -> bb56;                    // scope 5 at cita-network/src/network.rs:335:17: 335:59
    }

    bb75: {
        goto -> bb56;                    // scope 6 at cita-network/src/network.rs:339:17: 339:59
    }

    bb76: {
        goto -> bb56;                    // scope 7 at cita-network/src/network.rs:343:17: 343:59
    }

    bb77: {
        goto -> bb56;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:346:17: 346:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:346:17: 346:76

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:346:17: 346:76
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:346:17: 346:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:346:17: 346:76
        _1 = (move _2, move _4, move _6, const 346_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/network.rs:346:24: 346:65
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/network.rs:346:24: 346:65

    bb0: {
        _1 = [const "[Network] Unexpected key ", const " from Remote"]; // scope 0 at cita-network/src/network.rs:346:24: 346:65
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:346:24: 346:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:346:24: 346:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:346:24: 346:65
        return;                          // scope 0 at cita-network/src/network.rs:346:24: 346:65
    }
}

promoted[2] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &SubModules = {
    let mut _0: &libproto::router::SubModules; // return place in scope 0 at cita-network/src/network.rs:302:43: 302:63
    let mut _1: libproto::router::SubModules; // in scope 0 at cita-network/src/network.rs:302:43: 302:63

    bb0: {
        _1 = libproto::router::SubModules::Snapshot; // scope 0 at cita-network/src/network.rs:302:43: 302:63
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:302:43: 302:63
        return;                          // scope 0 at cita-network/src/network.rs:302:43: 302:63
    }
}

promoted[4] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:299:9: 299:69
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:299:9: 299:69

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:299:9: 299:69
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:299:9: 299:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:299:9: 299:69
        _1 = (move _2, move _4, move _6, const 299_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:299:16: 299:58
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:299:16: 299:58

    bb0: {
        _1 = [const "[Network] Receive Message from Remote/"]; // scope 0 at cita-network/src/network.rs:299:16: 299:58
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:299:16: 299:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:299:16: 299:58
        return;                          // scope 0 at cita-network/src/network.rs:299:16: 299:58
    }
}

promoted[6] in network::<impl at cita-network/src/network.rs:292:1: 292:19>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn send_message(_1: &NodesManagerClient, _2: std::string::String, _3: libproto::Message) -> () {
    debug nodes_mgr_client => _1;        // in scope 0 at cita-network/src/network.rs:352:21: 352:37
    debug key => _2;                     // in scope 0 at cita-network/src/network.rs:352:60: 352:63
    debug msg => _3;                     // in scope 0 at cita-network/src/network.rs:352:73: 352:76
    let mut _0: ();                      // return place in scope 0 at cita-network/src/network.rs:352:92: 352:92
    let _4: libproto::OperateType;       // in scope 0 at cita-network/src/network.rs:353:9: 353:16
    let mut _5: &libproto::Message;      // in scope 0 at cita-network/src/network.rs:353:19: 353:36
    let mut _6: isize;                   // in scope 0 at cita-network/src/network.rs:356:9: 356:31
    let _7: ();                          // in scope 0 at cita-network/src/network.rs:357:13: 357:68
    let mut _8: node_manager::BroadcastReq; // in scope 0 at cita-network/src/network.rs:357:40: 357:67
    let mut _9: std::string::String;     // in scope 0 at cita-network/src/network.rs:357:58: 357:61
    let mut _10: libproto::Message;      // in scope 0 at cita-network/src/network.rs:357:63: 357:66
    let mut _12: u32;                    // in scope 0 at cita-network/src/network.rs:360:23: 360:39
    let mut _13: &libproto::Message;     // in scope 0 at cita-network/src/network.rs:360:23: 360:39
    let _14: ();                         // in scope 0 at cita-network/src/network.rs:361:13: 361:82
    let mut _15: node_manager::SingleTxReq; // in scope 0 at cita-network/src/network.rs:361:43: 361:81
    let mut _16: tentacle::SessionId;    // in scope 0 at cita-network/src/network.rs:361:60: 361:70
    let mut _17: std::string::String;    // in scope 0 at cita-network/src/network.rs:361:72: 361:75
    let mut _18: libproto::Message;      // in scope 0 at cita-network/src/network.rs:361:77: 361:80
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _22: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _23: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _24: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _25: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _26: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _27: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _28: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _29: &[&str];                // in scope 0 at cita-network/src/network.rs:365:19: 365:94
    let _30: ();                         // in scope 0 at cita-network/src/network.rs:366:13: 366:68
    let mut _31: node_manager::BroadcastReq; // in scope 0 at cita-network/src/network.rs:366:40: 366:67
    let mut _32: std::string::String;    // in scope 0 at cita-network/src/network.rs:366:58: 366:61
    let mut _33: libproto::Message;      // in scope 0 at cita-network/src/network.rs:366:63: 366:66
    let mut _37: bool;                   // in scope 0 at cita-network/src/network.rs:369:1: 369:2
    let mut _38: bool;                   // in scope 0 at cita-network/src/network.rs:369:1: 369:2
    scope 1 {
        debug operate => _4;             // in scope 1 at cita-network/src/network.rs:353:9: 353:16
        let _11: usize;                  // in scope 1 at cita-network/src/network.rs:360:17: 360:20
        let _19: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug dst => _11;            // in scope 2 at cita-network/src/network.rs:360:17: 360:20
        }
        scope 3 {
            debug lvl => _19;            // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _34: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _35: &[&str; 1];     // in scope 3 at cita-network/src/network.rs:365:19: 365:94
            let mut _36: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _38 = const false;               // scope 0 at cita-network/src/network.rs:353:9: 353:16
        _37 = const false;               // scope 0 at cita-network/src/network.rs:353:9: 353:16
        _38 = const true;                // scope 0 at cita-network/src/network.rs:353:9: 353:16
        _37 = const true;                // scope 0 at cita-network/src/network.rs:353:9: 353:16
        _5 = &_3;                        // scope 0 at cita-network/src/network.rs:353:19: 353:36
        _4 = libproto::Message::get_operate(move _5) -> [return: bb1, unwind: bb24]; // scope 0 at cita-network/src/network.rs:353:19: 353:36
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:353:23: 353:34
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> OperateType {libproto::Message::get_operate}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_4);           // scope 1 at cita-network/src/network.rs:355:11: 355:18
        switchInt(move _6) -> [0: bb4, 1: bb6, 2: bb2, otherwise: bb3]; // scope 1 at cita-network/src/network.rs:355:5: 355:18
    }

    bb2: {
        _19 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _22 = &_19;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _36 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(send_message, [], Some(promoted[2])) }
        _21 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _22, _36) -> [return: bb13, unwind: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        unreachable;                     // scope 1 at cita-network/src/network.rs:355:11: 355:18
    }

    bb4: {
        _38 = const false;               // scope 1 at cita-network/src/network.rs:357:58: 357:61
        _9 = move _2;                    // scope 1 at cita-network/src/network.rs:357:58: 357:61
        _37 = const false;               // scope 1 at cita-network/src/network.rs:357:63: 357:66
        _10 = move _3;                   // scope 1 at cita-network/src/network.rs:357:63: 357:66
        _8 = BroadcastReq::new(move _9, move _10) -> [return: bb5, unwind: bb24]; // scope 1 at cita-network/src/network.rs:357:40: 357:67
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:357:40: 357:57
                                         // + literal: Const { ty: fn(std::string::String, libproto::Message) -> BroadcastReq {BroadcastReq::new}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = NodesManagerClient::broadcast(_1, move _8) -> [return: bb26, unwind: bb24]; // scope 1 at cita-network/src/network.rs:357:13: 357:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:357:30: 357:39
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, BroadcastReq) {NodesManagerClient::broadcast}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = &_3;                       // scope 1 at cita-network/src/network.rs:360:23: 360:39
        _12 = libproto::Message::get_origin(move _13) -> [return: bb7, unwind: bb24]; // scope 1 at cita-network/src/network.rs:360:23: 360:39
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:360:27: 360:37
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = move _12 as usize (IntToInt); // scope 1 at cita-network/src/network.rs:360:23: 360:48
        _16 = <usize as Into<SessionId>>::into(_11) -> [return: bb8, unwind: bb24]; // scope 2 at cita-network/src/network.rs:361:60: 361:70
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:361:64: 361:68
                                         // + literal: Const { ty: fn(usize) -> SessionId {<usize as Into<SessionId>>::into}, val: Value(<ZST>) }
    }

    bb8: {
        _38 = const false;               // scope 2 at cita-network/src/network.rs:361:72: 361:75
        _17 = move _2;                   // scope 2 at cita-network/src/network.rs:361:72: 361:75
        _37 = const false;               // scope 2 at cita-network/src/network.rs:361:77: 361:80
        _18 = move _3;                   // scope 2 at cita-network/src/network.rs:361:77: 361:80
        _15 = SingleTxReq::new(move _16, move _17, move _18) -> [return: bb9, unwind: bb24]; // scope 2 at cita-network/src/network.rs:361:43: 361:81
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:361:43: 361:59
                                         // + literal: Const { ty: fn(SessionId, std::string::String, libproto::Message) -> SingleTxReq {SingleTxReq::new}, val: Value(<ZST>) }
    }

    bb9: {
        _14 = NodesManagerClient::send_message(_1, move _15) -> [return: bb27, unwind: bb24]; // scope 2 at cita-network/src/network.rs:361:13: 361:82
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:361:30: 361:42
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, SingleTxReq) {NodesManagerClient::send_message}, val: Value(<ZST>) }
    }

    bb10: {
        _20 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _24 = &_19;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _26 = log::max_level() -> [return: bb14, unwind: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _20) -> [0: bb18, otherwise: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        switchInt(move _21) -> [0: bb10, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _25 = &_26;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _23 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _24, move _25) -> [return: bb15, unwind: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _20 = move _23;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _35 = const _;                   // scope 3 at cita-network/src/network.rs:365:19: 365:94
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:365:19: 365:94
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(send_message, [], Some(promoted[1])) }
        _29 = _35 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/network.rs:365:19: 365:94
        _28 = Arguments::<'_>::new_const(move _29) -> [return: bb17, unwind: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb17: {
        _34 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(send_message, [], Some(promoted[0])) }
        _27 = log::__private_api_log(move _28, _19, _34) -> [return: bb28, unwind: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _38 = const false;               // scope 1 at cita-network/src/network.rs:366:58: 366:61
        _32 = move _2;                   // scope 1 at cita-network/src/network.rs:366:58: 366:61
        _37 = const false;               // scope 1 at cita-network/src/network.rs:366:63: 366:66
        _33 = move _3;                   // scope 1 at cita-network/src/network.rs:366:63: 366:66
        _31 = BroadcastReq::new(move _32, move _33) -> [return: bb19, unwind: bb24]; // scope 1 at cita-network/src/network.rs:366:40: 366:67
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:366:40: 366:57
                                         // + literal: Const { ty: fn(std::string::String, libproto::Message) -> BroadcastReq {BroadcastReq::new}, val: Value(<ZST>) }
    }

    bb19: {
        _30 = NodesManagerClient::broadcast(_1, move _31) -> [return: bb29, unwind: bb24]; // scope 1 at cita-network/src/network.rs:366:13: 366:68
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:366:30: 366:39
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, BroadcastReq) {NodesManagerClient::broadcast}, val: Value(<ZST>) }
    }

    bb20: {
        return;                          // scope 0 at cita-network/src/network.rs:369:2: 369:2
    }

    bb21 (cleanup): {
        switchInt(_38) -> [0: bb22, otherwise: bb25]; // scope 0 at cita-network/src/network.rs:369:1: 369:2
    }

    bb22 (cleanup): {
        resume;                          // scope 0 at cita-network/src/network.rs:352:1: 369:2
    }

    bb23 (cleanup): {
        drop(_3) -> bb21;                // scope 0 at cita-network/src/network.rs:369:1: 369:2
    }

    bb24 (cleanup): {
        switchInt(_37) -> [0: bb21, otherwise: bb23]; // scope 0 at cita-network/src/network.rs:369:1: 369:2
    }

    bb25 (cleanup): {
        drop(_2) -> bb22;                // scope 0 at cita-network/src/network.rs:369:1: 369:2
    }

    bb26: {
        goto -> bb20;                    // scope 1 at cita-network/src/network.rs:357:13: 357:68
    }

    bb27: {
        goto -> bb20;                    // scope 2 at cita-network/src/network.rs:361:13: 361:82
    }

    bb28: {
        goto -> bb18;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb29: {
        goto -> bb20;                    // scope 1 at cita-network/src/network.rs:366:13: 366:68
    }
}

promoted[0] in send_message: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/network.rs:365:13: 365:95
    let mut _7: &str;                    // in scope 0 at cita-network/src/network.rs:365:13: 365:95

    bb0: {
        _3 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::network"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/network.rs"; // scope 0 at cita-network/src/network.rs:365:13: 365:95
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:365:13: 365:95
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/network.rs:365:13: 365:95
        _1 = (move _2, move _4, move _6, const 365_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in send_message: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/network.rs:365:19: 365:94
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/network.rs:365:19: 365:94

    bb0: {
        _1 = [const "[MqAgent] Subtract broadcast does not support yet, use broadcast instead!"]; // scope 0 at cita-network/src/network.rs:365:19: 365:94
                                         // mir::Constant
                                         // + span: cita-network/src/network.rs:365:19: 365:94
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/network.rs:365:19: 365:94
        return;                          // scope 0 at cita-network/src/network.rs:365:19: 365:94
    }
}

promoted[2] in send_message: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

const DEFAULT_MAX_CONNECTS: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/node_manager.rs:41:33: 41:38

    bb0: {
        _0 = const 666_usize;            // scope 0 at cita-network/src/node_manager.rs:41:41: 41:44
        return;                          // scope 0 at cita-network/src/node_manager.rs:41:1: 41:45
    }
}

const DEFAULT_MAX_KNOWN_ADDRS: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/node_manager.rs:42:36: 42:41

    bb0: {
        _0 = const 1000_usize;           // scope 0 at cita-network/src/node_manager.rs:42:44: 42:48
        return;                          // scope 0 at cita-network/src/node_manager.rs:42:1: 42:49
    }
}

const DEFAULT_PORT: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/node_manager.rs:43:25: 43:30

    bb0: {
        _0 = const 4000_usize;           // scope 0 at cita-network/src/node_manager.rs:43:33: 43:37
        return;                          // scope 0 at cita-network/src/node_manager.rs:43:1: 43:38
    }
}

const CHECK_CONNECTED_NODES: Duration = {
    let mut _0: std::time::Duration;     // return place in scope 0 at cita-network/src/node_manager.rs:44:34: 44:42

    bb0: {
        ConstEvalCounter;                // scope 0 at cita-network/src/node_manager.rs:44:45: 44:67
        _0 = Duration::from_secs(const 3_u64) -> bb1; // scope 0 at cita-network/src/node_manager.rs:44:45: 44:67
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:44:45: 44:64
                                         // + literal: Const { ty: fn(u64) -> Duration {Duration::from_secs}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:44:1: 44:68
    }
}

const FULL_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:57:23: 57:26

    bb0: {
        _0 = const 100_i32;              // scope 0 at cita-network/src/node_manager.rs:57:29: 57:32
        return;                          // scope 0 at cita-network/src/node_manager.rs:57:1: 57:33
    }
}

const MIN_DIALING_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:59:30: 59:33

    bb0: {
        _0 = const 60_i32;               // scope 0 at cita-network/src/node_manager.rs:59:36: 59:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:59:1: 59:39
    }
}

const DIALING_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:61:26: 61:29

    bb0: {
        _0 = const 10_i32;               // scope 0 at cita-network/src/node_manager.rs:61:32: 61:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:61:1: 61:35
    }
}

const SUCCESS_DIALING_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:63:34: 63:37

    bb0: {
        _0 = const 10_i32;               // scope 0 at cita-network/src/node_manager.rs:63:40: 63:42
        return;                          // scope 0 at cita-network/src/node_manager.rs:63:1: 63:43
    }
}

const REFUSED_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:65:26: 65:29

    bb0: {
        _0 = const 20_i32;               // scope 0 at cita-network/src/node_manager.rs:65:32: 65:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:65:1: 65:35
    }
}

const DIALED_ERROR_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:67:31: 67:34

    bb0: {
        _0 = const 25_i32;               // scope 0 at cita-network/src/node_manager.rs:67:37: 67:39
        return;                          // scope 0 at cita-network/src/node_manager.rs:67:1: 67:40
    }
}

const KEEP_ON_LINE_SCORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at cita-network/src/node_manager.rs:69:31: 69:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at cita-network/src/node_manager.rs:69:37: 69:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:69:1: 69:39
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:71:10: 71:15>::fmt(_1: &NodeSource, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    let mut _3: &str;                    // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    let mut _4: isize;                   // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    let _5: &str;                        // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    let _6: &str;                        // in scope 0 at cita-network/src/node_manager.rs:71:10: 71:15

    bb0: {
        _4 = discriminant((*_1));        // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
        switchInt(move _4) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    }

    bb1: {
        _6 = const "FromDiscovery";      // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:71:10: 71:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _6;                         // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
        goto -> bb4;                     // scope 0 at cita-network/src/node_manager.rs:71:14: 71:15
    }

    bb2: {
        unreachable;                     // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
    }

    bb3: {
        _5 = const "FromConfig";         // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:71:10: 71:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _5;                         // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
        goto -> bb4;                     // scope 0 at cita-network/src/node_manager.rs:71:14: 71:15
    }

    bb4: {
        _0 = std::fmt::Formatter::<'_>::write_str(_2, move _3) -> bb5; // scope 0 at cita-network/src/node_manager.rs:71:10: 71:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:71:10: 71:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:71:15: 71:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:71:17: 71:26>::eq(_1: &NodeSource, _2: &NodeSource) -> bool {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:71:17: 71:26
    debug other => _2;                   // in scope 0 at cita-network/src/node_manager.rs:71:17: 71:26
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/node_manager.rs:71:17: 71:26
    let _3: isize;                       // in scope 0 at cita-network/src/node_manager.rs:71:17: 71:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at cita-network/src/node_manager.rs:71:17: 71:26
        let _4: isize;                   // in scope 1 at cita-network/src/node_manager.rs:71:17: 71:26
        scope 2 {
            debug __arg1_tag => _4;      // in scope 2 at cita-network/src/node_manager.rs:71:17: 71:26
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-network/src/node_manager.rs:71:17: 71:26
        _4 = discriminant((*_2));        // scope 1 at cita-network/src/node_manager.rs:71:17: 71:26
        _0 = Eq(_3, _4);                 // scope 2 at cita-network/src/node_manager.rs:71:17: 71:26
        return;                          // scope 0 at cita-network/src/node_manager.rs:71:26: 71:26
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:77:10: 77:15>::fmt(_1: &NodeStatus, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
    let _6: &i32;                        // in scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
    let _9: &std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
    let _10: &str;                       // in scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
    let mut _11: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
    let _12: &&node_manager::NodeSource; // in scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
    let _13: &node_manager::NodeSource;  // in scope 0 at cita-network/src/node_manager.rs:86:5: 86:29

    bb0: {
        _3 = const "NodeStatus";         // scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:77:10: 77:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "score";              // scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:81:5: 81:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: i32);            // scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:81:5: 81:19
        _7 = const "session_id";         // scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:85:5: 85:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = &((*_1).1: std::option::Option<tentacle::SessionId>); // scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:85:5: 85:38
        _10 = const "node_src";          // scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:86:5: 86:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _13 = &((*_1).2: node_manager::NodeSource); // scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
        _12 = &_13;                      // scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
        _11 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:86:5: 86:29
        _0 = std::fmt::Formatter::<'_>::debug_struct_field3_finish(_2, _3, _4, move _5, _7, move _8, _10, move _11) -> bb1; // scope 0 at cita-network/src/node_manager.rs:77:10: 77:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:77:10: 77:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f, 'g, 'h> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f), &'g str, &'h (dyn Debug + 'h)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field3_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:77:15: 77:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:89:1: 89:16>::new(_1: i32, _2: std::option::Option<SessionId>, _3: NodeSource) -> NodeStatus {
    debug score => _1;                   // in scope 0 at cita-network/src/node_manager.rs:90:16: 90:21
    debug session_id => _2;              // in scope 0 at cita-network/src/node_manager.rs:90:28: 90:38
    debug node_src => _3;                // in scope 0 at cita-network/src/node_manager.rs:90:59: 90:67
    let mut _0: node_manager::NodeStatus; // return place in scope 0 at cita-network/src/node_manager.rs:90:84: 90:88

    bb0: {
        _0 = NodeStatus { score: _1, session_id: _2, node_src: move _3 }; // scope 0 at cita-network/src/node_manager.rs:91:9: 95:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:96:6: 96:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:99:10: 99:15>::fmt(_1: &SessionInfo, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
    let _6: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
    let _9: &&std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
    let _10: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:102:5: 102:25

    bb0: {
        _3 = const "SessionInfo";        // scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:99:10: 99:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "ty";                 // scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:101:5: 101:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: tentacle::service::SessionType); // scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:101:5: 101:24
        _7 = const "addr";               // scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:102:5: 102:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &((*_1).1: std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
        _9 = &_10;                       // scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:102:5: 102:25
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _3, _4, move _5, _7, move _8) -> bb1; // scope 0 at cita-network/src/node_manager.rs:99:10: 99:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:99:10: 99:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:99:15: 99:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:105:1: 105:17>::new(_1: tentacle::service::SessionType, _2: std::net::SocketAddr) -> SessionInfo {
    debug ty => _1;                      // in scope 0 at cita-network/src/node_manager.rs:106:16: 106:18
    debug addr => _2;                    // in scope 0 at cita-network/src/node_manager.rs:106:33: 106:37
    let mut _0: node_manager::SessionInfo; // return place in scope 0 at cita-network/src/node_manager.rs:106:54: 106:58

    bb0: {
        _0 = SessionInfo { ty: _1, addr: _2 }; // scope 0 at cita-network/src/node_manager.rs:107:9: 107:33
        return;                          // scope 0 at cita-network/src/node_manager.rs:108:6: 108:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:111:10: 111:15>::fmt(_1: &TransformAddr, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
    let _6: &std::net::SocketAddr;       // in scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
    let _9: &&std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
    let _10: &std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:116:5: 116:39

    bb0: {
        _3 = const "TransformAddr";      // scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:111:10: 111:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "conn_addr";          // scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:114:5: 114:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:114:5: 114:30
        _7 = const "trans_addr";         // scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:116:5: 116:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &((*_1).1: std::option::Option<std::net::SocketAddr>); // scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
        _9 = &_10;                       // scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:116:5: 116:39
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _3, _4, move _5, _7, move _8) -> bb1; // scope 0 at cita-network/src/node_manager.rs:111:10: 111:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:111:10: 111:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:111:15: 111:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:119:1: 119:19>::new(_1: std::net::SocketAddr, _2: std::option::Option<std::net::SocketAddr>) -> TransformAddr {
    debug conn_addr => _1;               // in scope 0 at cita-network/src/node_manager.rs:120:16: 120:25
    debug trans_addr => _2;              // in scope 0 at cita-network/src/node_manager.rs:120:39: 120:49
    let mut _0: node_manager::TransformAddr; // return place in scope 0 at cita-network/src/node_manager.rs:120:74: 120:78

    bb0: {
        _0 = TransformAddr { conn_addr: _1, trans_addr: _2 }; // scope 0 at cita-network/src/node_manager.rs:121:9: 124:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:125:6: 125:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:128:10: 128:17>::default() -> ConsensusNodeTopology {
    let mut _0: node_manager::ConsensusNodeTopology; // return place in scope 0 at cita-network/src/node_manager.rs:128:10: 128:17
    let mut _1: std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
    let mut _2: std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
    let mut _3: bool;                    // in scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
    let mut _4: u64;                     // in scope 0 at cita-network/src/node_manager.rs:134:5: 134:20

    bb0: {
        _1 = <BTreeSet<H160> as Default>::default() -> bb1; // scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:130:5: 130:40
                                         // + literal: Const { ty: fn() -> BTreeSet<H160> {<BTreeSet<H160> as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <BTreeSet<H160> as Default>::default() -> [return: bb2, unwind: bb6]; // scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:131:5: 131:43
                                         // + literal: Const { ty: fn() -> BTreeSet<H160> {<BTreeSet<H160> as Default>::default}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = <bool as Default>::default() -> [return: bb3, unwind: bb5]; // scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:133:5: 133:35
                                         // + literal: Const { ty: fn() -> bool {<bool as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = <u64 as Default>::default() -> [return: bb4, unwind: bb5]; // scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:134:5: 134:20
                                         // + literal: Const { ty: fn() -> u64 {<u64 as Default>::default}, val: Value(<ZST>) }
    }

    bb4: {
        _0 = ConsensusNodeTopology { linked_nodes: move _1, validator_nodes: move _2, consensus_all_linked: move _3, height: move _4 }; // scope 0 at cita-network/src/node_manager.rs:128:10: 128:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:128:17: 128:17
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at cita-network/src/node_manager.rs:128:16: 128:17
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at cita-network/src/node_manager.rs:128:16: 128:17
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:128:10: 128:17
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:128:19: 128:24>::fmt(_1: &ConsensusNodeTopology, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
    let _6: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
    let _9: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
    let _10: &str;                       // in scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
    let mut _11: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
    let _12: &bool;                      // in scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
    let _13: &str;                       // in scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
    let _15: &&u64;                      // in scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
    let _16: &u64;                       // in scope 0 at cita-network/src/node_manager.rs:134:5: 134:20

    bb0: {
        _3 = const "ConsensusNodeTopology"; // scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:128:19: 128:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "linked_nodes";       // scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:130:5: 130:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:130:5: 130:40
        _7 = const "validator_nodes";    // scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:131:5: 131:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = &((*_1).1: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:131:5: 131:43
        _10 = const "consensus_all_linked"; // scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:133:5: 133:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &((*_1).2: bool);          // scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
        _11 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:133:5: 133:35
        _13 = const "height";            // scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:134:5: 134:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = &((*_1).3: u64);           // scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
        _15 = &_16;                      // scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
        _14 = _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:134:5: 134:20
        _0 = std::fmt::Formatter::<'_>::debug_struct_field4_finish(_2, _3, _4, move _5, _7, move _8, _10, move _11, _13, move _14) -> bb1; // scope 0 at cita-network/src/node_manager.rs:128:19: 128:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:128:19: 128:24
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f), &'g str, &'h (dyn Debug + 'h), &'i str, &'j (dyn Debug + 'j)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field4_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:128:24: 128:24
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::new(_1: H160) -> ConsensusNodeTopology {
    debug self_address => _1;            // in scope 0 at cita-network/src/node_manager.rs:138:16: 138:28
    let mut _0: node_manager::ConsensusNodeTopology; // return place in scope 0 at cita-network/src/node_manager.rs:139:13: 139:20
    let _2: bool;                        // in scope 0 at cita-network/src/node_manager.rs:140:9: 140:46
    let mut _3: &mut std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:140:9: 140:46
    scope 1 {
        debug top => _0;                 // in scope 1 at cita-network/src/node_manager.rs:139:13: 139:20
    }

    bb0: {
        _0 = <ConsensusNodeTopology as Default>::default() -> bb1; // scope 0 at cita-network/src/node_manager.rs:139:23: 139:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:139:23: 139:53
                                         // + literal: Const { ty: fn() -> ConsensusNodeTopology {<ConsensusNodeTopology as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &mut (_0.0: std::collections::BTreeSet<cita_types::H160>); // scope 1 at cita-network/src/node_manager.rs:140:9: 140:46
        _2 = BTreeSet::<H160>::insert(move _3, _1) -> [return: bb2, unwind: bb3]; // scope 1 at cita-network/src/node_manager.rs:140:9: 140:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:140:26: 140:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeSet<H160>, H160) -> bool {BTreeSet::<H160>::insert}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:142:6: 142:6
    }

    bb3 (cleanup): {
        drop(_0) -> bb4;                 // scope 0 at cita-network/src/node_manager.rs:142:5: 142:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:138:5: 142:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::validator_subset_linked(_1: &ConsensusNodeTopology) -> bool {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:144:32: 144:37
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/node_manager.rs:144:42: 144:46
    let mut _2: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:145:9: 145:59
    let _3: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:145:40: 145:58

    bb0: {
        _2 = &((*_1).1: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:145:9: 145:59
        _3 = &((*_1).0: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:145:40: 145:58
        _0 = BTreeSet::<H160>::is_subset(move _2, _3) -> bb1; // scope 0 at cita-network/src/node_manager.rs:145:9: 145:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:145:30: 145:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeSet<H160>, &'b BTreeSet<H160>) -> bool {BTreeSet::<H160>::is_subset}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:146:6: 146:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::update_validators(_1: &mut ConsensusNodeTopology, _2: u64, _3: BTreeSet<H160>) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:148:30: 148:39
    debug height => _2;                  // in scope 0 at cita-network/src/node_manager.rs:148:41: 148:47
    debug validators => _3;              // in scope 0 at cita-network/src/node_manager.rs:148:54: 148:64
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:148:85: 148:85
    let mut _4: bool;                    // in scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
    let mut _5: bool;                    // in scope 0 at cita-network/src/node_manager.rs:149:12: 149:32
    let mut _6: u64;                     // in scope 0 at cita-network/src/node_manager.rs:149:21: 149:32
    let mut _7: bool;                    // in scope 0 at cita-network/src/node_manager.rs:149:36: 149:70
    let mut _8: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:149:36: 149:46
    let mut _9: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:149:50: 149:70
    let _10: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:150:20: 150:106
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:151:13: 151:19
    let _25: &u64;                       // in scope 0 at cita-network/src/node_manager.rs:151:13: 151:19
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:151:20: 151:31
    let _27: &u64;                       // in scope 0 at cita-network/src/node_manager.rs:151:20: 151:31
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:151:32: 151:42
    let _29: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:151:32: 151:42
    let mut _30: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:151:43: 151:63
    let _31: &std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:151:43: 151:63
    let mut _32: bool;                   // in scope 0 at cita-network/src/node_manager.rs:153:16: 153:36
    let mut _33: u64;                    // in scope 0 at cita-network/src/node_manager.rs:153:25: 153:36
    let mut _34: std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:158:32: 158:42
    let mut _35: bool;                   // in scope 0 at cita-network/src/node_manager.rs:159:37: 159:67
    let mut _36: &node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:159:37: 159:67
    let mut _40: bool;                   // in scope 0 at cita-network/src/node_manager.rs:160:5: 160:6
    scope 1 {
        debug lvl => _10;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _37: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _38: &[&str; 4];         // in scope 1 at cita-network/src/node_manager.rs:150:20: 150:106
        let mut _39: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _40 = const false;               // scope 0 at cita-network/src/node_manager.rs:149:9: 157:10
        _40 = const true;                // scope 0 at cita-network/src/node_manager.rs:149:9: 157:10
        _6 = ((*_1).3: u64);             // scope 0 at cita-network/src/node_manager.rs:149:21: 149:32
        _5 = Lt(_2, move _6);            // scope 0 at cita-network/src/node_manager.rs:149:12: 149:32
        switchInt(move _5) -> [0: bb2, otherwise: bb1]; // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
    }

    bb1: {
        _4 = const true;                 // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
        goto -> bb3;                     // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
    }

    bb2: {
        _8 = &_3;                        // scope 0 at cita-network/src/node_manager.rs:149:36: 149:46
        _9 = &((*_1).1: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:149:50: 149:70
        _7 = <BTreeSet<H160> as PartialEq>::eq(move _8, move _9) -> [return: bb4, unwind: bb28]; // scope 0 at cita-network/src/node_manager.rs:149:36: 149:70
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:149:36: 149:70
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeSet<H160>, &'b BTreeSet<H160>) -> bool {<BTreeSet<H160> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb21, otherwise: bb5]; // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
    }

    bb4: {
        _4 = move _7;                    // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
        goto -> bb3;                     // scope 0 at cita-network/src/node_manager.rs:149:12: 149:70
    }

    bb5: {
        _10 = log::Level::Debug;         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _13 = &_10;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _39 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(ConsensusNodeTopology::update_validators, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _39) -> [return: bb9, unwind: bb28]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = const false;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _15 = &_10;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb10, unwind: bb28]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _11) -> [0: bb18, otherwise: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _12) -> [0: bb6, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb11, unwind: bb28]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _11 = move _14;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _38 = const _;                   // scope 1 at cita-network/src/node_manager.rs:150:20: 150:106
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:20: 150:106
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(ConsensusNodeTopology::update_validators, [], Some(promoted[1])) }
        _20 = _38 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:150:20: 150:106
        _25 = &_2;                       // scope 1 at cita-network/src/node_manager.rs:151:13: 151:19
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_25) -> [return: bb13, unwind: bb28]; // scope 1 at cita-network/src/node_manager.rs:151:13: 151:19
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:151:13: 151:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = &((*_1).3: u64);           // scope 1 at cita-network/src/node_manager.rs:151:20: 151:31
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_27) -> [return: bb14, unwind: bb28]; // scope 1 at cita-network/src/node_manager.rs:151:20: 151:31
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:151:20: 151:31
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = &_3;                       // scope 1 at cita-network/src/node_manager.rs:151:32: 151:42
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeSet<H160>>(_29) -> [return: bb15, unwind: bb28]; // scope 1 at cita-network/src/node_manager.rs:151:32: 151:42
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:151:32: 151:42
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeSet<H160>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeSet<H160>>}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = &((*_1).1: std::collections::BTreeSet<cita_types::H160>); // scope 1 at cita-network/src/node_manager.rs:151:43: 151:63
        _30 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeSet<H160>>(_31) -> [return: bb16, unwind: bb28]; // scope 1 at cita-network/src/node_manager.rs:151:43: 151:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:151:43: 151:63
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeSet<H160>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeSet<H160>>}, val: Value(<ZST>) }
    }

    bb16: {
        _23 = [move _24, move _26, move _28, move _30]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb17, unwind: bb28]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _37 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(ConsensusNodeTopology::update_validators, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _37) -> [return: bb29, unwind: bb28]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _33 = ((*_1).3: u64);            // scope 0 at cita-network/src/node_manager.rs:153:25: 153:36
        _32 = Gt(_2, move _33);          // scope 0 at cita-network/src/node_manager.rs:153:16: 153:36
        switchInt(move _32) -> [0: bb20, otherwise: bb19]; // scope 0 at cita-network/src/node_manager.rs:153:16: 153:36
    }

    bb19: {
        ((*_1).3: u64) = _2;             // scope 0 at cita-network/src/node_manager.rs:154:17: 154:37
        goto -> bb20;                    // scope 0 at cita-network/src/node_manager.rs:153:13: 155:14
    }

    bb20: {
        drop(_3) -> bb25;                // scope 0 at cita-network/src/node_manager.rs:160:5: 160:6
    }

    bb21: {
        _40 = const false;               // scope 0 at cita-network/src/node_manager.rs:158:32: 158:42
        _34 = move _3;                   // scope 0 at cita-network/src/node_manager.rs:158:32: 158:42
        drop(((*_1).1: std::collections::BTreeSet<cita_types::H160>)) -> [return: bb22, unwind: bb23]; // scope 0 at cita-network/src/node_manager.rs:158:9: 158:29
    }

    bb22: {
        ((*_1).1: std::collections::BTreeSet<cita_types::H160>) = move _34; // scope 0 at cita-network/src/node_manager.rs:158:9: 158:29
        _36 = &(*_1);                    // scope 0 at cita-network/src/node_manager.rs:159:37: 159:67
        _35 = ConsensusNodeTopology::validator_subset_linked(move _36) -> [return: bb24, unwind: bb28]; // scope 0 at cita-network/src/node_manager.rs:159:37: 159:67
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:159:42: 159:65
                                         // + literal: Const { ty: for<'a> fn(&'a ConsensusNodeTopology) -> bool {ConsensusNodeTopology::validator_subset_linked}, val: Value(<ZST>) }
    }

    bb23 (cleanup): {
        ((*_1).1: std::collections::BTreeSet<cita_types::H160>) = move _34; // scope 0 at cita-network/src/node_manager.rs:158:9: 158:29
        goto -> bb28;                    // scope 0 at cita-network/src/node_manager.rs:158:41: 158:42
    }

    bb24: {
        ((*_1).2: bool) = move _35;      // scope 0 at cita-network/src/node_manager.rs:159:9: 159:67
        goto -> bb25;                    // scope 0 at cita-network/src/node_manager.rs:160:5: 160:6
    }

    bb25: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:160:6: 160:6
    }

    bb26 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:148:5: 160:6
    }

    bb27 (cleanup): {
        drop(_3) -> bb26;                // scope 0 at cita-network/src/node_manager.rs:160:5: 160:6
    }

    bb28 (cleanup): {
        switchInt(_40) -> [0: bb26, otherwise: bb27]; // scope 0 at cita-network/src/node_manager.rs:160:5: 160:6
    }

    bb29: {
        goto -> bb18;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::update_validators: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:150:13: 151:64
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:150:13: 151:64

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:150:13: 151:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:13: 151:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:150:13: 151:64
        _1 = (move _2, move _4, move _6, const 150_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::update_validators: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/node_manager.rs:150:20: 150:106
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/node_manager.rs:150:20: 150:106

    bb0: {
        _1 = [const "No need update validator height ", const " self height ", const " validator ", const " self validator "]; // scope 0 at cita-network/src/node_manager.rs:150:20: 150:106
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:20: 150:106
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:20: 150:106
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:20: 150:106
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:150:20: 150:106
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:150:20: 150:106
        return;                          // scope 0 at cita-network/src/node_manager.rs:150:20: 150:106
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::update_validators: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::add_linked_nodes(_1: &mut ConsensusNodeTopology, _2: H160) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:162:29: 162:38
    debug linked_node => _2;             // in scope 0 at cita-network/src/node_manager.rs:162:40: 162:51
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:162:62: 162:62
    let mut _3: bool;                    // in scope 0 at cita-network/src/node_manager.rs:163:12: 163:49
    let mut _4: &mut std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:163:12: 163:49
    let mut _5: bool;                    // in scope 0 at cita-network/src/node_manager.rs:164:41: 164:71
    let mut _6: &node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:164:41: 164:71

    bb0: {
        _4 = &mut ((*_1).0: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:163:12: 163:49
        _3 = BTreeSet::<H160>::insert(move _4, _2) -> bb1; // scope 0 at cita-network/src/node_manager.rs:163:12: 163:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:163:30: 163:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeSet<H160>, H160) -> bool {BTreeSet::<H160>::insert}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb4, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:163:12: 163:49
    }

    bb2: {
        _6 = &(*_1);                     // scope 0 at cita-network/src/node_manager.rs:164:41: 164:71
        _5 = ConsensusNodeTopology::validator_subset_linked(move _6) -> bb3; // scope 0 at cita-network/src/node_manager.rs:164:41: 164:71
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:164:46: 164:69
                                         // + literal: Const { ty: for<'a> fn(&'a ConsensusNodeTopology) -> bool {ConsensusNodeTopology::validator_subset_linked}, val: Value(<ZST>) }
    }

    bb3: {
        ((*_1).2: bool) = move _5;       // scope 0 at cita-network/src/node_manager.rs:164:13: 164:71
        goto -> bb4;                     // scope 0 at cita-network/src/node_manager.rs:163:9: 165:10
    }

    bb4: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:166:6: 166:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::del_linked_nodes(_1: &mut ConsensusNodeTopology, _2: &H160) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:168:29: 168:38
    debug linked_node => _2;             // in scope 0 at cita-network/src/node_manager.rs:168:40: 168:51
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:168:63: 168:63
    let mut _3: bool;                    // in scope 0 at cita-network/src/node_manager.rs:169:12: 169:49
    let mut _4: &mut std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:169:12: 169:49
    let mut _5: bool;                    // in scope 0 at cita-network/src/node_manager.rs:170:41: 170:71
    let mut _6: &node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:170:41: 170:71

    bb0: {
        _4 = &mut ((*_1).0: std::collections::BTreeSet<cita_types::H160>); // scope 0 at cita-network/src/node_manager.rs:169:12: 169:49
        _3 = BTreeSet::<H160>::remove::<H160>(move _4, _2) -> bb1; // scope 0 at cita-network/src/node_manager.rs:169:12: 169:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:169:30: 169:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeSet<H160>, &'b H160) -> bool {BTreeSet::<H160>::remove::<H160>}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb4, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:169:12: 169:49
    }

    bb2: {
        _6 = &(*_1);                     // scope 0 at cita-network/src/node_manager.rs:170:41: 170:71
        _5 = ConsensusNodeTopology::validator_subset_linked(move _6) -> bb3; // scope 0 at cita-network/src/node_manager.rs:170:41: 170:71
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:170:46: 170:69
                                         // + literal: Const { ty: for<'a> fn(&'a ConsensusNodeTopology) -> bool {ConsensusNodeTopology::validator_subset_linked}, val: Value(<ZST>) }
    }

    bb3: {
        ((*_1).2: bool) = move _5;       // scope 0 at cita-network/src/node_manager.rs:170:13: 170:71
        goto -> bb4;                     // scope 0 at cita-network/src/node_manager.rs:169:9: 171:10
    }

    bb4: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:172:6: 172:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:137:1: 137:27>::consensus_all_linked(_1: &ConsensusNodeTopology) -> bool {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:174:33: 174:38
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/node_manager.rs:174:43: 174:47

    bb0: {
        _0 = ((*_1).2: bool);            // scope 0 at cita-network/src/node_manager.rs:175:9: 175:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:176:6: 176:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::new(_1: H160) -> NodesManager {
    debug peer_key => _1;                // in scope 0 at cita-network/src/node_manager.rs:206:12: 206:20
    let mut _0: node_manager::NodesManager; // return place in scope 0 at cita-network/src/node_manager.rs:206:34: 206:46
    let _2: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:207:14: 207:16
    let _3: pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:207:18: 207:20
    let mut _4: (pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>, pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>); // in scope 0 at cita-network/src/node_manager.rs:207:24: 207:35
    let mut _7: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:209:51: 209:53
    let mut _8: pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 0 at cita-network/src/node_manager.rs:213:36: 213:42
    let mut _9: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:214:26: 214:44
    let mut _10: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:215:27: 215:46
    let mut _11: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:216:30: 216:49
    let mut _12: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:217:34: 217:53
    let mut _13: std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:218:38: 218:57
    let mut _14: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/node_manager.rs:220:35: 220:41
    let mut _15: pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:221:45: 221:47
    let mut _16: std::option::Option<tentacle::service::ServiceControl>; // in scope 0 at cita-network/src/node_manager.rs:222:27: 222:31
    let mut _17: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:224:27: 224:31
    let mut _18: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:225:24: 225:28
    let mut _19: std::collections::HashMap<cita_types::H160, u64, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:226:33: 226:51
    let mut _20: node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:228:33: 228:69
    let mut _21: bool;                   // in scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    let mut _22: bool;                   // in scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    let mut _23: bool;                   // in scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    scope 1 {
        debug tx => _2;                  // in scope 1 at cita-network/src/node_manager.rs:207:14: 207:16
        debug rx => _3;                  // in scope 1 at cita-network/src/node_manager.rs:207:18: 207:20
        let _5: pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 1 at cita-network/src/node_manager.rs:208:13: 208:19
        scope 2 {
            debug ticker => _5;          // in scope 2 at cita-network/src/node_manager.rs:208:13: 208:19
            let _6: node_manager::NodesManagerClient; // in scope 2 at cita-network/src/node_manager.rs:209:13: 209:19
            scope 3 {
                debug client => _6;      // in scope 3 at cita-network/src/node_manager.rs:209:13: 209:19
            }
        }
    }

    bb0: {
        _23 = const false;               // scope 0 at cita-network/src/node_manager.rs:207:24: 207:35
        _21 = const false;               // scope 0 at cita-network/src/node_manager.rs:207:24: 207:35
        _22 = const false;               // scope 0 at cita-network/src/node_manager.rs:207:24: 207:35
        _4 = pubsub::crossbeam_channel::unbounded::<NodesManagerMessage>() -> bb1; // scope 0 at cita-network/src/node_manager.rs:207:24: 207:35
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:207:24: 207:33
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<NodesManagerMessage>, pubsub::crossbeam_channel::Receiver<NodesManagerMessage>) {pubsub::crossbeam_channel::unbounded::<NodesManagerMessage>}, val: Value(<ZST>) }
    }

    bb1: {
        _23 = const true;                // scope 0 at cita-network/src/node_manager.rs:207:14: 207:16
        _2 = move (_4.0: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>); // scope 0 at cita-network/src/node_manager.rs:207:14: 207:16
        _22 = const true;                // scope 0 at cita-network/src/node_manager.rs:207:18: 207:20
        _3 = move (_4.1: pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>); // scope 0 at cita-network/src/node_manager.rs:207:18: 207:20
        _5 = tick(const _) -> [return: bb2, unwind: bb25]; // scope 1 at cita-network/src/node_manager.rs:208:22: 208:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:208:22: 208:26
                                         // + literal: Const { ty: fn(Duration) -> pubsub::crossbeam_channel::Receiver<Instant> {tick}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:208:27: 208:48
                                         // + literal: Const { ty: Duration, val: Unevaluated(CHECK_CONNECTED_NODES, [], None) }
    }

    bb2: {
        _23 = const false;               // scope 2 at cita-network/src/node_manager.rs:209:51: 209:53
        _7 = move _2;                    // scope 2 at cita-network/src/node_manager.rs:209:51: 209:53
        _21 = const true;                // scope 2 at cita-network/src/node_manager.rs:209:22: 209:55
        _6 = NodesManagerClient { sender: move _7 }; // scope 2 at cita-network/src/node_manager.rs:209:22: 209:55
        _8 = move _5;                    // scope 3 at cita-network/src/node_manager.rs:213:36: 213:42
        _9 = <HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>> as Default>::default() -> [return: bb3, unwind: bb19]; // scope 3 at cita-network/src/node_manager.rs:214:26: 214:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:214:26: 214:42
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>> {<HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>> as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = <BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>> as Default>::default() -> [return: bb4, unwind: bb18]; // scope 3 at cita-network/src/node_manager.rs:215:27: 215:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:215:27: 215:44
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>> {<BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>> as Default>::default}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = <BTreeMap<SessionId, TransformAddr> as Default>::default() -> [return: bb5, unwind: bb17]; // scope 3 at cita-network/src/node_manager.rs:216:30: 216:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:216:30: 216:47
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> BTreeMap<SessionId, TransformAddr> {<BTreeMap<SessionId, TransformAddr> as Default>::default}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = <BTreeMap<H160, SessionId> as Default>::default() -> [return: bb6, unwind: bb16]; // scope 3 at cita-network/src/node_manager.rs:217:34: 217:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:217:34: 217:51
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn() -> BTreeMap<H160, SessionId> {<BTreeMap<H160, SessionId> as Default>::default}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = <BTreeMap<SessionId, SessionInfo> as Default>::default() -> [return: bb7, unwind: bb15]; // scope 3 at cita-network/src/node_manager.rs:218:38: 218:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:218:38: 218:55
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> BTreeMap<SessionId, SessionInfo> {<BTreeMap<SessionId, SessionInfo> as Default>::default}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = const false;               // scope 3 at cita-network/src/node_manager.rs:220:35: 220:41
        _14 = move _6;                   // scope 3 at cita-network/src/node_manager.rs:220:35: 220:41
        _22 = const false;               // scope 3 at cita-network/src/node_manager.rs:221:45: 221:47
        _15 = move _3;                   // scope 3 at cita-network/src/node_manager.rs:221:45: 221:47
        _16 = std::option::Option::<ServiceControl>::None; // scope 3 at cita-network/src/node_manager.rs:222:27: 222:31
        _17 = std::option::Option::<std::net::SocketAddr>::None; // scope 3 at cita-network/src/node_manager.rs:224:27: 224:31
        _18 = std::option::Option::<std::net::SocketAddr>::None; // scope 3 at cita-network/src/node_manager.rs:225:24: 225:28
        _19 = <HashMap<H160, u64, BuildHasherDefault<FnvHasher>> as Default>::default() -> [return: bb8, unwind: bb11]; // scope 3 at cita-network/src/node_manager.rs:226:33: 226:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:226:33: 226:49
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> HashMap<H160, u64, BuildHasherDefault<FnvHasher>> {<HashMap<H160, u64, BuildHasherDefault<FnvHasher>> as Default>::default}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = ConsensusNodeTopology::new(_1) -> [return: bb9, unwind: bb10]; // scope 3 at cita-network/src/node_manager.rs:228:33: 228:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:228:33: 228:59
                                         // + literal: Const { ty: fn(H160) -> ConsensusNodeTopology {ConsensusNodeTopology::new}, val: Value(<ZST>) }
    }

    bb9: {
        _0 = NodesManager { known_addrs: move _9, config_addrs: move _10, connected_addrs: move _11, pending_connected_addrs: move _13, connected_peer_keys: move _12, check_connected_nodes: move _8, max_connects: const _, nodes_manager_client: move _14, nodes_manager_service_receiver: move _15, service_ctrl: move _16, peer_key: _1, gossip_key_version: move _19, consensus_topology: move _20, self_version: const 0_u64, dialing_node: move _17, self_addr: move _18 }; // scope 3 at cita-network/src/node_manager.rs:212:9: 229:10
        _21 = const false;               // scope 2 at cita-network/src/node_manager.rs:230:5: 230:6
        _22 = const false;               // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
        _23 = const false;               // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:230:6: 230:6
    }

    bb10 (cleanup): {
        drop(_19) -> bb11;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb11 (cleanup): {
        drop(_16) -> bb12;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb12 (cleanup): {
        drop(_15) -> bb13;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb13 (cleanup): {
        drop(_14) -> bb14;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb14 (cleanup): {
        drop(_13) -> bb15;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb15 (cleanup): {
        drop(_12) -> bb16;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb16 (cleanup): {
        drop(_11) -> bb17;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb17 (cleanup): {
        drop(_10) -> bb18;               // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb18 (cleanup): {
        drop(_9) -> bb19;                // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb19 (cleanup): {
        drop(_8) -> bb23;                // scope 3 at cita-network/src/node_manager.rs:229:9: 229:10
    }

    bb20 (cleanup): {
        switchInt(_23) -> [0: bb21, otherwise: bb26]; // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:206:5: 230:6
    }

    bb22 (cleanup): {
        drop(_6) -> bb25;                // scope 2 at cita-network/src/node_manager.rs:230:5: 230:6
    }

    bb23 (cleanup): {
        switchInt(_21) -> [0: bb25, otherwise: bb22]; // scope 2 at cita-network/src/node_manager.rs:230:5: 230:6
    }

    bb24 (cleanup): {
        drop(_3) -> bb20;                // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    }

    bb25 (cleanup): {
        switchInt(_22) -> [0: bb20, otherwise: bb24]; // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    }

    bb26 (cleanup): {
        drop(_2) -> bb21;                // scope 0 at cita-network/src/node_manager.rs:230:5: 230:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config(_1: NetConfig, _2: H160) -> NodesManager {
    debug cfg => _1;                     // in scope 0 at cita-network/src/node_manager.rs:232:24: 232:27
    debug key => _2;                     // in scope 0 at cita-network/src/node_manager.rs:232:40: 232:43
    let mut _0: node_manager::NodesManager; // return place in scope 0 at cita-network/src/node_manager.rs:232:57: 232:61
    let mut _3: node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:233:13: 233:25
    let mut _5: std::option::Option<usize>; // in scope 0 at cita-network/src/node_manager.rs:234:28: 234:44
    let mut _6: usize;                   // in scope 0 at cita-network/src/node_manager.rs:235:33: 235:45
    let mut _7: isize;                   // in scope 0 at cita-network/src/node_manager.rs:238:16: 238:31
    let mut _9: std::vec::IntoIter<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:239:25: 239:34
    let mut _11: std::option::Option<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:239:25: 239:34
    let mut _12: &mut std::vec::IntoIter<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:239:25: 239:34
    let mut _13: isize;                  // in scope 0 at cita-network/src/node_manager.rs:239:13: 246:14
    let mut _15: (std::option::Option<std::string::String>, std::option::Option<usize>); // in scope 0 at cita-network/src/node_manager.rs:240:49: 240:69
    let mut _16: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:240:50: 240:57
    let mut _17: std::option::Option<usize>; // in scope 0 at cita-network/src/node_manager.rs:240:59: 240:68
    let mut _18: isize;                  // in scope 0 at cita-network/src/node_manager.rs:240:35: 240:45
    let mut _19: isize;                  // in scope 0 at cita-network/src/node_manager.rs:240:25: 240:33
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _25: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:241:44: 241:51
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _27: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _28: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _29: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:241:53: 241:55
    let _30: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:241:53: 241:55
    let mut _31: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:241:57: 241:61
    let _32: &usize;                     // in scope 0 at cita-network/src/node_manager.rs:241:57: 241:61
    let _33: std::option::Option<std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:242:21: 242:65
    let mut _34: &mut std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:242:21: 242:65
    let mut _35: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:242:60: 242:64
    let mut _37: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _38: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _39: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _40: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _41: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _42: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _43: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _44: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _45: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:244:27: 244:82
    let mut _48: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _50: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _52: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _53: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _54: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _55: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _56: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _57: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:248:19: 248:73
    let mut _65: bool;                   // in scope 0 at cita-network/src/node_manager.rs:246:13: 246:14
    let mut _66: bool;                   // in scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    let mut _67: isize;                  // in scope 0 at cita-network/src/node_manager.rs:246:13: 246:14
    let mut _68: isize;                  // in scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    let mut _69: isize;                  // in scope 0 at cita-network/src/node_manager.rs:246:13: 246:14
    let mut _70: isize;                  // in scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    scope 1 {
        debug node_mgr => _3;            // in scope 1 at cita-network/src/node_manager.rs:233:13: 233:25
        let _4: usize;                   // in scope 1 at cita-network/src/node_manager.rs:234:13: 234:25
        scope 2 {
            debug max_connects => _4;    // in scope 2 at cita-network/src/node_manager.rs:234:13: 234:25
            let _47: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug cfg_addrs => _8;   // in scope 3 at cita-network/src/node_manager.rs:238:21: 238:30
                let _8: std::vec::Vec<config::PeerConfig>; // in scope 3 at cita-network/src/node_manager.rs:238:21: 238:30
                let mut _10: std::vec::IntoIter<config::PeerConfig>; // in scope 3 at cita-network/src/node_manager.rs:239:25: 239:34
                scope 4 {
                    debug iter => _10;   // in scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
                    let _14: config::PeerConfig; // in scope 4 at cita-network/src/node_manager.rs:239:17: 239:21
                    scope 5 {
                        debug addr => _14; // in scope 5 at cita-network/src/node_manager.rs:239:17: 239:21
                        let _36: log::Level; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        scope 6 {
                            debug ip => _20; // in scope 6 at cita-network/src/node_manager.rs:240:30: 240:32
                            debug port => _21; // in scope 6 at cita-network/src/node_manager.rs:240:40: 240:44
                            let _20: std::string::String; // in scope 6 at cita-network/src/node_manager.rs:240:30: 240:32
                            let _21: usize; // in scope 6 at cita-network/src/node_manager.rs:240:40: 240:44
                            let _22: std::string::String; // in scope 6 at cita-network/src/node_manager.rs:241:25: 241:33
                            let _23: std::string::String; // in scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                            let mut _58: &[&str; 2]; // in scope 6 at cita-network/src/node_manager.rs:241:44: 241:51
                            scope 7 {
                                debug addr_str => _22; // in scope 7 at cita-network/src/node_manager.rs:241:25: 241:33
                            }
                            scope 8 {
                                debug res => _23; // in scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                            }
                        }
                        scope 9 {
                            debug lvl => _36; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _59: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _60: &[&str; 1]; // in scope 9 at cita-network/src/node_manager.rs:244:27: 244:82
                            let mut _61: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                    }
                }
            }
            scope 10 {
                debug lvl => _47;        // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _62: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _63: &[&str; 1]; // in scope 10 at cita-network/src/node_manager.rs:248:19: 248:73
                let mut _64: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _66 = const false;               // scope 0 at cita-network/src/node_manager.rs:233:13: 233:25
        _65 = const false;               // scope 0 at cita-network/src/node_manager.rs:233:13: 233:25
        _66 = const true;                // scope 0 at cita-network/src/node_manager.rs:233:13: 233:25
        _3 = NodesManager::new(_2) -> [return: bb1, unwind: bb52]; // scope 0 at cita-network/src/node_manager.rs:233:28: 233:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:233:28: 233:45
                                         // + literal: Const { ty: fn(H160) -> NodesManager {NodesManager::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = (_1.2: std::option::Option<usize>); // scope 1 at cita-network/src/node_manager.rs:234:28: 234:44
        _4 = std::option::Option::<usize>::unwrap_or(move _5, const _) -> [return: bb2, unwind: bb38]; // scope 1 at cita-network/src/node_manager.rs:234:28: 234:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:234:45: 234:54
                                         // + literal: Const { ty: fn(std::option::Option<usize>, usize) -> usize {std::option::Option::<usize>::unwrap_or}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = _4;                         // scope 2 at cita-network/src/node_manager.rs:235:33: 235:45
        (_3.6: usize) = move _6;         // scope 2 at cita-network/src/node_manager.rs:235:9: 235:45
        (_3.10: cita_types::H160) = _2;  // scope 2 at cita-network/src/node_manager.rs:236:9: 236:32
        _7 = discriminant((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>)); // scope 3 at cita-network/src/node_manager.rs:238:16: 238:31
        switchInt(move _7) -> [1: bb3, otherwise: bb26]; // scope 3 at cita-network/src/node_manager.rs:238:16: 238:31
    }

    bb3: {
        _66 = const false;               // scope 3 at cita-network/src/node_manager.rs:238:21: 238:30
        _8 = move (((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>) as Some).0: std::vec::Vec<config::PeerConfig>); // scope 3 at cita-network/src/node_manager.rs:238:21: 238:30
        _9 = <Vec<PeerConfig> as IntoIterator>::into_iter(move _8) -> [return: bb4, unwind: bb38]; // scope 3 at cita-network/src/node_manager.rs:239:25: 239:34
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:239:25: 239:34
                                         // + literal: Const { ty: fn(Vec<PeerConfig>) -> <Vec<PeerConfig> as IntoIterator>::IntoIter {<Vec<PeerConfig> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = move _9;                   // scope 3 at cita-network/src/node_manager.rs:239:25: 239:34
        goto -> bb5;                     // scope 4 at cita-network/src/node_manager.rs:239:13: 246:14
    }

    bb5: {
        _12 = &mut _10;                  // scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
        _11 = <std::vec::IntoIter<PeerConfig> as Iterator>::next(_12) -> [return: bb6, unwind: bb37]; // scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:239:25: 239:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<PeerConfig>) -> std::option::Option<<std::vec::IntoIter<PeerConfig> as Iterator>::Item> {<std::vec::IntoIter<PeerConfig> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = discriminant(_11);         // scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
        switchInt(move _13) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
    }

    bb7: {
        _14 = move ((_11 as Some).0: config::PeerConfig); // scope 4 at cita-network/src/node_manager.rs:239:17: 239:21
        _16 = move (_14.0: std::option::Option<std::string::String>); // scope 6 at cita-network/src/node_manager.rs:240:50: 240:57
        _17 = (_14.1: std::option::Option<usize>); // scope 6 at cita-network/src/node_manager.rs:240:59: 240:68
        _65 = const true;                // scope 6 at cita-network/src/node_manager.rs:240:49: 240:69
        _15 = (move _16, move _17);      // scope 6 at cita-network/src/node_manager.rs:240:49: 240:69
        _19 = discriminant((_15.0: std::option::Option<std::string::String>)); // scope 6 at cita-network/src/node_manager.rs:240:24: 240:46
        switchInt(move _19) -> [1: bb10, otherwise: bb17]; // scope 6 at cita-network/src/node_manager.rs:240:24: 240:46
    }

    bb8: {
        unreachable;                     // scope 4 at cita-network/src/node_manager.rs:239:25: 239:34
    }

    bb9: {
        drop(_10) -> [return: bb35, unwind: bb38]; // scope 3 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb10: {
        _18 = discriminant((_15.1: std::option::Option<usize>)); // scope 6 at cita-network/src/node_manager.rs:240:24: 240:46
        switchInt(move _18) -> [1: bb11, otherwise: bb17]; // scope 6 at cita-network/src/node_manager.rs:240:24: 240:46
    }

    bb11: {
        _65 = const false;               // scope 6 at cita-network/src/node_manager.rs:240:30: 240:32
        _20 = move (((_15.0: std::option::Option<std::string::String>) as Some).0: std::string::String); // scope 6 at cita-network/src/node_manager.rs:240:30: 240:32
        _21 = (((_15.1: std::option::Option<usize>) as Some).0: usize); // scope 6 at cita-network/src/node_manager.rs:240:40: 240:44
        _58 = const _;                   // scope 6 at cita-network/src/node_manager.rs:241:44: 241:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:241:44: 241:51
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::from_config, [], Some(promoted[0])) }
        _25 = _58 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/node_manager.rs:241:44: 241:51
        _30 = &_20;                      // scope 6 at cita-network/src/node_manager.rs:241:53: 241:55
        _29 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_30) -> [return: bb12, unwind: bb36]; // scope 6 at cita-network/src/node_manager.rs:241:53: 241:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:241:53: 241:55
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb12: {
        _32 = &_21;                      // scope 6 at cita-network/src/node_manager.rs:241:57: 241:61
        _31 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_32) -> [return: bb13, unwind: bb36]; // scope 6 at cita-network/src/node_manager.rs:241:57: 241:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:241:57: 241:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb13: {
        _28 = [move _29, move _31];      // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _27 = &_28;                      // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _26 = _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _24 = Arguments::<'_>::new_v1(move _25, move _26) -> [return: bb14, unwind: bb36]; // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = format(move _24) -> [return: bb15, unwind: bb36]; // scope 6 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb15: {
        _22 = move _23;                  // scope 8 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _34 = &mut (_3.1: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>); // scope 7 at cita-network/src/node_manager.rs:242:21: 242:65
        _35 = std::option::Option::<std::net::SocketAddr>::None; // scope 7 at cita-network/src/node_manager.rs:242:60: 242:64
        _33 = BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::insert(move _34, move _22, move _35) -> [return: bb16, unwind: bb36]; // scope 7 at cita-network/src/node_manager.rs:242:21: 242:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:242:43: 242:49
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>, std::string::String, std::option::Option<std::net::SocketAddr>) -> std::option::Option<std::option::Option<std::net::SocketAddr>> {BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::insert}, val: Value(<ZST>) }
    }

    bb16: {
        drop(_20) -> [return: bb43, unwind: bb49]; // scope 5 at cita-network/src/node_manager.rs:243:17: 243:18
    }

    bb17: {
        _36 = log::Level::Warn;          // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _39 = &_36;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _61 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::from_config, [], Some(promoted[3])) }
        _38 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _39, _61) -> [return: bb21, unwind: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _37 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _41 = &_36;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _43 = log::max_level() -> [return: bb22, unwind: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _37) -> [0: bb43, otherwise: bb24]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        switchInt(move _38) -> [0: bb18, otherwise: bb19]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _42 = &_43;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _40 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _41, move _42) -> [return: bb23, unwind: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _37 = move _40;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _60 = const _;                   // scope 9 at cita-network/src/node_manager.rs:244:27: 244:82
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:244:27: 244:82
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::from_config, [], Some(promoted[2])) }
        _46 = _60 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/node_manager.rs:244:27: 244:82
        _45 = Arguments::<'_>::new_const(move _46) -> [return: bb25, unwind: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb25: {
        _59 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::from_config, [], Some(promoted[1])) }
        _44 = log::__private_api_log(move _45, _36, _59) -> [return: bb53, unwind: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb26: {
        _47 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _50 = &_47;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _64 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::from_config, [], Some(promoted[6])) }
        _49 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _50, _64) -> [return: bb30, unwind: bb38]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb27: {
        _48 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb29;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _52 = &_47;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _54 = log::max_level() -> [return: bb31, unwind: bb38]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb29: {
        switchInt(move _48) -> [0: bb35, otherwise: bb33]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        switchInt(move _49) -> [0: bb27, otherwise: bb28]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _53 = &_54;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _51 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _52, move _53) -> [return: bb32, unwind: bb38]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb32: {
        _48 = move _51;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb29;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _63 = const _;                   // scope 10 at cita-network/src/node_manager.rs:248:19: 248:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:248:19: 248:73
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::from_config, [], Some(promoted[5])) }
        _57 = _63 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/node_manager.rs:248:19: 248:73
        _56 = Arguments::<'_>::new_const(move _57) -> [return: bb34, unwind: bb38]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb34: {
        _62 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::from_config, [], Some(promoted[4])) }
        _55 = log::__private_api_log(move _56, _47, _62) -> [return: bb54, unwind: bb38]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb35: {
        _0 = move _3;                    // scope 2 at cita-network/src/node_manager.rs:250:9: 250:17
        _68 = discriminant((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>)); // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
        switchInt(move _68) -> [1: bb45, otherwise: bb44]; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb36 (cleanup): {
        drop(_20) -> bb49;               // scope 5 at cita-network/src/node_manager.rs:243:17: 243:18
    }

    bb37 (cleanup): {
        drop(_10) -> bb38;               // scope 3 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb38 (cleanup): {
        drop(_3) -> bb52;                // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:232:5: 251:6
    }

    bb40: {
        _65 = const false;               // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
        goto -> bb5;                     // scope 4 at cita-network/src/node_manager.rs:239:13: 246:14
    }

    bb41: {
        switchInt(_65) -> [0: bb40, otherwise: bb42]; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb42: {
        drop((((_15.0: std::option::Option<std::string::String>) as Some).0: std::string::String)) -> [return: bb40, unwind: bb37]; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb43: {
        _67 = discriminant((_15.0: std::option::Option<std::string::String>)); // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
        switchInt(move _67) -> [1: bb41, otherwise: bb40]; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb44: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:251:6: 251:6
    }

    bb45: {
        switchInt(_66) -> [0: bb44, otherwise: bb46]; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb46: {
        drop((((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>) as Some).0: std::vec::Vec<config::PeerConfig>)) -> bb44; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb47 (cleanup): {
        switchInt(_65) -> [0: bb37, otherwise: bb48]; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb48 (cleanup): {
        drop((((_15.0: std::option::Option<std::string::String>) as Some).0: std::string::String)) -> bb37; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb49 (cleanup): {
        _69 = discriminant((_15.0: std::option::Option<std::string::String>)); // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
        switchInt(move _69) -> [1: bb47, otherwise: bb37]; // scope 5 at cita-network/src/node_manager.rs:246:13: 246:14
    }

    bb50 (cleanup): {
        switchInt(_66) -> [0: bb39, otherwise: bb51]; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb51 (cleanup): {
        drop((((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>) as Some).0: std::vec::Vec<config::PeerConfig>)) -> bb39; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb52 (cleanup): {
        _70 = discriminant((_1.1: std::option::Option<std::vec::Vec<config::PeerConfig>>)); // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
        switchInt(move _70) -> [1: bb50, otherwise: bb39]; // scope 0 at cita-network/src/node_manager.rs:251:5: 251:6
    }

    bb53: {
        goto -> bb43;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb54: {
        goto -> bb35;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:241:44: 241:51
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:241:44: 241:51

    bb0: {
        _1 = [const "", const ":"];      // scope 0 at cita-network/src/node_manager.rs:241:44: 241:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:241:44: 241:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:241:44: 241:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:241:44: 241:51
        return;                          // scope 0 at cita-network/src/node_manager.rs:241:44: 241:51
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:244:21: 244:83
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:244:21: 244:83

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:244:21: 244:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:244:21: 244:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:244:21: 244:83
        _1 = (move _2, move _4, move _6, const 244_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:244:27: 244:82
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:244:27: 244:82

    bb0: {
        _1 = [const "[NodeManager] ip(host) & port 'MUST' be set in peers."]; // scope 0 at cita-network/src/node_manager.rs:244:27: 244:82
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:244:27: 244:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:244:27: 244:82
        return;                          // scope 0 at cita-network/src/node_manager.rs:244:27: 244:82
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:248:13: 248:74
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:248:13: 248:74

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:248:13: 248:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:248:13: 248:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:248:13: 248:74
        _1 = (move _2, move _4, move _6, const 248_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:248:19: 248:73
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:248:19: 248:73

    bb0: {
        _1 = [const "[NodeManager] Does not set any peers in config file!"]; // scope 0 at cita-network/src/node_manager.rs:248:19: 248:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:248:19: 248:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:248:19: 248:73
        return;                          // scope 0 at cita-network/src/node_manager.rs:248:19: 248:73
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::from_config: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change(_1: std::sync::mpsc::Receiver<DebouncedEvent>, _2: NodesManagerClient, _3: std::string::String) -> () {
    debug rx => _1;                      // in scope 0 at cita-network/src/node_manager.rs:254:9: 254:11
    debug node_client => _2;             // in scope 0 at cita-network/src/node_manager.rs:255:9: 255:20
    debug fname => _3;                   // in scope 0 at cita-network/src/node_manager.rs:256:9: 256:14
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:257:7: 257:7
    let mut _4: std::result::Result<notify::DebouncedEvent, std::sync::mpsc::RecvError>; // in scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
    let mut _5: &std::sync::mpsc::Receiver<notify::DebouncedEvent>; // in scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
    let mut _6: isize;                   // in scope 0 at cita-network/src/node_manager.rs:260:17: 260:26
    let _7: notify::DebouncedEvent;      // in scope 0 at cita-network/src/node_manager.rs:260:20: 260:25
    let mut _8: isize;                   // in scope 0 at cita-network/src/node_manager.rs:261:21: 261:53
    let mut _10: bool;                   // in scope 0 at cita-network/src/node_manager.rs:262:28: 262:46
    let mut _11: &std::path::Path;       // in scope 0 at cita-network/src/node_manager.rs:262:28: 262:46
    let _12: &std::path::Path;           // in scope 0 at cita-network/src/node_manager.rs:262:28: 262:46
    let mut _13: &std::path::PathBuf;    // in scope 0 at cita-network/src/node_manager.rs:262:28: 262:46
    let mut _15: std::option::Option<&str>; // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:83
    let mut _16: &std::ffi::OsStr;       // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:83
    let _17: &std::ffi::OsStr;           // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:74
    let mut _18: std::option::Option<&std::ffi::OsStr>; // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:65
    let mut _19: &std::path::Path;       // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:65
    let _20: &std::path::Path;           // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:65
    let mut _21: &std::path::PathBuf;    // in scope 0 at cita-network/src/node_manager.rs:263:45: 263:65
    let mut _22: bool;                   // in scope 0 at cita-network/src/node_manager.rs:264:32: 264:50
    let mut _23: &&str;                  // in scope 0 at cita-network/src/node_manager.rs:264:32: 264:41
    let mut _24: &std::string::String;   // in scope 0 at cita-network/src/node_manager.rs:264:45: 264:50
    let mut _26: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _27: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _28: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _29: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _30: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _31: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _32: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _33: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _34: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _35: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:265:39: 265:75
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _37: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _38: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _39: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:265:77: 265:86
    let _40: &&str;                      // in scope 0 at cita-network/src/node_manager.rs:265:77: 265:86
    let mut _42: &str;                   // in scope 0 at cita-network/src/node_manager.rs:267:61: 267:70
    let mut _43: isize;                  // in scope 0 at cita-network/src/node_manager.rs:268:40: 268:51
    let mut _46: std::vec::IntoIter<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:270:49: 270:54
    let mut _47: std::vec::Vec<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:270:49: 270:54
    let mut _49: std::option::Option<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:270:49: 270:54
    let mut _50: &mut std::vec::IntoIter<config::PeerConfig>; // in scope 0 at cita-network/src/node_manager.rs:270:49: 270:54
    let mut _51: isize;                  // in scope 0 at cita-network/src/node_manager.rs:270:37: 274:38
    let mut _53: (std::option::Option<std::string::String>, std::option::Option<usize>); // in scope 0 at cita-network/src/node_manager.rs:271:73: 271:93
    let mut _54: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:271:74: 271:81
    let mut _55: std::option::Option<usize>; // in scope 0 at cita-network/src/node_manager.rs:271:83: 271:92
    let mut _56: isize;                  // in scope 0 at cita-network/src/node_manager.rs:271:59: 271:69
    let mut _57: isize;                  // in scope 0 at cita-network/src/node_manager.rs:271:49: 271:57
    let _60: ();                         // in scope 0 at cita-network/src/node_manager.rs:272:45: 272:87
    let mut _61: &mut std::vec::Vec<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:272:45: 272:87
    let mut _62: std::string::String;    // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:119:23: 122:6
    let mut _64: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _65: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:272:68: 272:75
    let mut _66: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _67: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _68: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _69: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:272:77: 272:79
    let _70: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:272:77: 272:79
    let mut _71: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:272:81: 272:85
    let _72: &usize;                     // in scope 0 at cita-network/src/node_manager.rs:272:81: 272:85
    let _73: ();                         // in scope 0 at cita-network/src/node_manager.rs:275:37: 277:39
    let mut _74: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/node_manager.rs:275:37: 277:39
    let mut _75: node_manager::ModifiedConfigPeersReq; // in scope 0 at cita-network/src/node_manager.rs:275:69: 277:38
    let mut _76: std::vec::Vec<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:276:41: 276:50
    let mut _78: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _79: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _80: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _81: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _82: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _83: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _84: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _85: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _86: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _87: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:282:33: 282:58
    let mut _88: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _89: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _90: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _91: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:282:60: 282:65
    let _92: &notify::DebouncedEvent;    // in scope 0 at cita-network/src/node_manager.rs:282:60: 282:65
    let _93: std::sync::mpsc::RecvError; // in scope 0 at cita-network/src/node_manager.rs:284:21: 284:22
    let mut _95: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _96: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _97: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _98: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _99: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _100: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _101: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _102: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _103: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _104: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:284:33: 284:52
    let mut _105: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _106: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _107: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _108: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:284:54: 284:55
    let _109: &std::sync::mpsc::RecvError; // in scope 0 at cita-network/src/node_manager.rs:284:54: 284:55
    let mut _120: bool;                  // in scope 0 at cita-network/src/node_manager.rs:274:37: 274:38
    let mut _121: bool;                  // in scope 0 at cita-network/src/node_manager.rs:279:29: 279:30
    let mut _122: bool;                  // in scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    let mut _123: bool;                  // in scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    let mut _124: bool;                  // in scope 0 at cita-network/src/node_manager.rs:278:33: 278:34
    let mut _125: bool;                  // in scope 0 at cita-network/src/node_manager.rs:278:33: 278:34
    let mut _126: isize;                 // in scope 0 at cita-network/src/node_manager.rs:274:37: 274:38
    let mut _127: isize;                 // in scope 0 at cita-network/src/node_manager.rs:279:29: 279:30
    let mut _128: isize;                 // in scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    let mut _129: isize;                 // in scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    scope 1 {
        debug event => _7;               // in scope 1 at cita-network/src/node_manager.rs:260:20: 260:25
        let _9: std::path::PathBuf;      // in scope 1 at cita-network/src/node_manager.rs:261:44: 261:52
        let _77: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug path_buf => _9;        // in scope 2 at cita-network/src/node_manager.rs:261:44: 261:52
            let _14: &str;               // in scope 2 at cita-network/src/node_manager.rs:263:33: 263:42
            scope 3 {
                debug file_name => _14;  // in scope 3 at cita-network/src/node_manager.rs:263:33: 263:42
                let _25: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _41: config::NetConfig; // in scope 3 at cita-network/src/node_manager.rs:267:37: 267:43
                scope 4 {
                    debug lvl => _25;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _111: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _112: &[&str; 2]; // in scope 4 at cita-network/src/node_manager.rs:265:39: 265:75
                    let mut _113: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 5 {
                    debug config => _41; // in scope 5 at cita-network/src/node_manager.rs:267:37: 267:43
                    scope 6 {
                        debug peers => _44; // in scope 6 at cita-network/src/node_manager.rs:268:45: 268:50
                        let _44: std::vec::Vec<config::PeerConfig>; // in scope 6 at cita-network/src/node_manager.rs:268:45: 268:50
                        let mut _45: std::vec::Vec<std::string::String>; // in scope 6 at cita-network/src/node_manager.rs:269:41: 269:54
                        scope 7 {
                            debug addr_strs => _45; // in scope 7 at cita-network/src/node_manager.rs:269:41: 269:54
                            let mut _48: std::vec::IntoIter<config::PeerConfig>; // in scope 7 at cita-network/src/node_manager.rs:270:49: 270:54
                            scope 8 {
                                debug iter => _48; // in scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
                                let _52: config::PeerConfig; // in scope 8 at cita-network/src/node_manager.rs:270:41: 270:45
                                scope 9 {
                                    debug addr => _52; // in scope 9 at cita-network/src/node_manager.rs:270:41: 270:45
                                    scope 10 {
                                        debug ip => _58; // in scope 10 at cita-network/src/node_manager.rs:271:54: 271:56
                                        debug port => _59; // in scope 10 at cita-network/src/node_manager.rs:271:64: 271:68
                                        let _58: std::string::String; // in scope 10 at cita-network/src/node_manager.rs:271:54: 271:56
                                        let _59: usize; // in scope 10 at cita-network/src/node_manager.rs:271:64: 271:68
                                        let _63: std::string::String; // in scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                                        let mut _110: &[&str; 2]; // in scope 10 at cita-network/src/node_manager.rs:272:68: 272:75
                                        scope 11 {
                                            debug res => _63; // in scope 11 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        scope 12 {
            debug lvl => _77;            // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _114: &(&str, &str, &str, u32); // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _115: &[&str; 1];    // in scope 12 at cita-network/src/node_manager.rs:282:33: 282:58
            let mut _116: &log::LevelFilter; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 13 {
        debug e => const std::sync::mpsc::RecvError; // in scope 13 at cita-network/src/node_manager.rs:284:21: 284:22
        let _94: log::Level;             // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 14 {
            debug lvl => _94;            // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _117: &(&str, &str, &str, u32); // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _118: &[&str; 1];    // in scope 14 at cita-network/src/node_manager.rs:284:33: 284:52
            let mut _119: &log::LevelFilter; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _121 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        _122 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        _125 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        _124 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        _123 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        _120 = const false;              // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
        goto -> bb1;                     // scope 0 at cita-network/src/node_manager.rs:258:9: 286:10
    }

    bb1: {
        _5 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
        _4 = std::sync::mpsc::Receiver::<DebouncedEvent>::recv(move _5) -> [return: bb2, unwind: bb71]; // scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:259:22: 259:26
                                         // + literal: Const { ty: for<'a> fn(&'a std::sync::mpsc::Receiver<DebouncedEvent>) -> Result<DebouncedEvent, std::sync::mpsc::RecvError> {std::sync::mpsc::Receiver::<DebouncedEvent>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = discriminant(_4);           // scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
        switchInt(move _6) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 0 at cita-network/src/node_manager.rs:259:13: 259:28
    }

    bb3: {
        _94 = log::Level::Warn;          // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _97 = &_94;                      // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _119 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[9])) }
        _96 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _97, _119) -> [return: bb62, unwind: bb71]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb4: {
        unreachable;                     // scope 0 at cita-network/src/node_manager.rs:259:19: 259:28
    }

    bb5: {
        _122 = const true;               // scope 0 at cita-network/src/node_manager.rs:260:20: 260:25
        _123 = const true;               // scope 0 at cita-network/src/node_manager.rs:260:20: 260:25
        _7 = move ((_4 as Ok).0: notify::DebouncedEvent); // scope 0 at cita-network/src/node_manager.rs:260:20: 260:25
        _8 = discriminant(_7);           // scope 1 at cita-network/src/node_manager.rs:260:36: 260:41
        switchInt(move _8) -> [2: bb8, 3: bb9, otherwise: bb6]; // scope 1 at cita-network/src/node_manager.rs:260:30: 260:41
    }

    bb6: {
        _77 = log::Level::Trace;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _80 = &_77;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _116 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[6])) }
        _79 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _80, _116) -> [return: bb53, unwind: bb99]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _13 = &_9;                       // scope 2 at cita-network/src/node_manager.rs:262:28: 262:46
        _12 = <PathBuf as Deref>::deref(move _13) -> [return: bb10, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:262:28: 262:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:262:28: 262:46
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _123 = const false;              // scope 1 at cita-network/src/node_manager.rs:261:44: 261:52
        _9 = move ((_7 as Create).0: std::path::PathBuf); // scope 1 at cita-network/src/node_manager.rs:261:44: 261:52
        goto -> bb7;                     // scope 1 at cita-network/src/node_manager.rs:260:30: 283:18
    }

    bb9: {
        _122 = const false;              // scope 1 at cita-network/src/node_manager.rs:261:78: 261:86
        _9 = move ((_7 as Write).0: std::path::PathBuf); // scope 1 at cita-network/src/node_manager.rs:261:78: 261:86
        goto -> bb7;                     // scope 1 at cita-network/src/node_manager.rs:260:30: 283:18
    }

    bb10: {
        _11 = _12;                       // scope 2 at cita-network/src/node_manager.rs:262:28: 262:46
        _10 = Path::is_file(move _11) -> [return: bb11, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:262:28: 262:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:262:37: 262:44
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> bool {Path::is_file}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _10) -> [0: bb49, otherwise: bb12]; // scope 2 at cita-network/src/node_manager.rs:262:28: 262:46
    }

    bb12: {
        _21 = &_9;                       // scope 2 at cita-network/src/node_manager.rs:263:45: 263:65
        _20 = <PathBuf as Deref>::deref(move _21) -> [return: bb13, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:263:45: 263:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:263:45: 263:65
                                         // + literal: Const { ty: for<'a> fn(&'a PathBuf) -> &'a <PathBuf as Deref>::Target {<PathBuf as Deref>::deref}, val: Value(<ZST>) }
    }

    bb13: {
        _19 = _20;                       // scope 2 at cita-network/src/node_manager.rs:263:45: 263:65
        _18 = Path::file_name(move _19) -> [return: bb14, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:263:45: 263:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:263:54: 263:63
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> std::option::Option<&'a OsStr> {Path::file_name}, val: Value(<ZST>) }
    }

    bb14: {
        _17 = std::option::Option::<&OsStr>::unwrap(move _18) -> [return: bb15, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:263:45: 263:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:263:66: 263:72
                                         // + literal: Const { ty: fn(std::option::Option<&OsStr>) -> &OsStr {std::option::Option::<&OsStr>::unwrap}, val: Value(<ZST>) }
    }

    bb15: {
        _16 = _17;                       // scope 2 at cita-network/src/node_manager.rs:263:45: 263:83
        _15 = OsStr::to_str(move _16) -> [return: bb16, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:263:45: 263:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:263:75: 263:81
                                         // + literal: Const { ty: for<'a> fn(&'a OsStr) -> std::option::Option<&'a str> {OsStr::to_str}, val: Value(<ZST>) }
    }

    bb16: {
        _14 = std::option::Option::<&str>::unwrap(move _15) -> [return: bb17, unwind: bb70]; // scope 2 at cita-network/src/node_manager.rs:263:45: 263:92
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:263:84: 263:90
                                         // + literal: Const { ty: fn(std::option::Option<&str>) -> &str {std::option::Option::<&str>::unwrap}, val: Value(<ZST>) }
    }

    bb17: {
        _23 = &_14;                      // scope 3 at cita-network/src/node_manager.rs:264:32: 264:41
        _24 = &_3;                       // scope 3 at cita-network/src/node_manager.rs:264:45: 264:50
        _22 = <&str as PartialEq<std::string::String>>::eq(move _23, move _24) -> [return: bb18, unwind: bb70]; // scope 3 at cita-network/src/node_manager.rs:264:32: 264:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:264:32: 264:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b std::string::String) -> bool {<&str as PartialEq<std::string::String>>::eq}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _22) -> [0: bb49, otherwise: bb19]; // scope 3 at cita-network/src/node_manager.rs:264:32: 264:50
    }

    bb19: {
        _25 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _28 = &_25;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _113 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[3])) }
        _27 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _28, _113) -> [return: bb23, unwind: bb70]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb20: {
        _26 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb22;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        _30 = &_25;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _32 = log::max_level() -> [return: bb24, unwind: bb70]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb22: {
        switchInt(move _26) -> [0: bb29, otherwise: bb26]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        switchInt(move _27) -> [0: bb20, otherwise: bb21]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _31 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _29 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _30, move _31) -> [return: bb25, unwind: bb70]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb25: {
        _26 = move _29;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb22;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _112 = const _;                  // scope 4 at cita-network/src/node_manager.rs:265:39: 265:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:265:39: 265:75
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[2])) }
        _35 = _112 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/node_manager.rs:265:39: 265:75
        _40 = &_14;                      // scope 4 at cita-network/src/node_manager.rs:265:77: 265:86
        _39 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_40) -> [return: bb27, unwind: bb70]; // scope 4 at cita-network/src/node_manager.rs:265:77: 265:86
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:265:77: 265:86
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb27: {
        _38 = [move _39];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _37 = &_38;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _36 = _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _34 = Arguments::<'_>::new_v1(move _35, move _36) -> [return: bb28, unwind: bb70]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb28: {
        _111 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[1])) }
        _33 = log::__private_api_log(move _34, _25, _111) -> [return: bb100, unwind: bb70]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb29: {
        _42 = _14;                       // scope 3 at cita-network/src/node_manager.rs:267:61: 267:70
        _41 = NetConfig::new(move _42) -> [return: bb30, unwind: bb70]; // scope 3 at cita-network/src/node_manager.rs:267:46: 267:71
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:267:46: 267:60
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> NetConfig {NetConfig::new}, val: Value(<ZST>) }
    }

    bb30: {
        _121 = const true;               // scope 3 at cita-network/src/node_manager.rs:267:70: 267:71
        _43 = discriminant((_41.1: std::option::Option<std::vec::Vec<config::PeerConfig>>)); // scope 6 at cita-network/src/node_manager.rs:268:40: 268:51
        switchInt(move _43) -> [1: bb31, otherwise: bb82]; // scope 6 at cita-network/src/node_manager.rs:268:40: 268:51
    }

    bb31: {
        _121 = const false;              // scope 6 at cita-network/src/node_manager.rs:268:45: 268:50
        _125 = const true;               // scope 6 at cita-network/src/node_manager.rs:268:45: 268:50
        _44 = move (((_41.1: std::option::Option<std::vec::Vec<config::PeerConfig>>) as Some).0: std::vec::Vec<config::PeerConfig>); // scope 6 at cita-network/src/node_manager.rs:268:45: 268:50
        _45 = Vec::<std::string::String>::new() -> [return: bb32, unwind: bb93]; // scope 6 at cita-network/src/node_manager.rs:269:57: 269:67
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:269:57: 269:65
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> Vec<std::string::String> {Vec::<std::string::String>::new}, val: Value(<ZST>) }
    }

    bb32: {
        _124 = const true;               // scope 7 at cita-network/src/node_manager.rs:270:37: 274:38
        _125 = const false;              // scope 7 at cita-network/src/node_manager.rs:270:49: 270:54
        _47 = move _44;                  // scope 7 at cita-network/src/node_manager.rs:270:49: 270:54
        _46 = <Vec<PeerConfig> as IntoIterator>::into_iter(move _47) -> [return: bb33, unwind: bb91]; // scope 7 at cita-network/src/node_manager.rs:270:49: 270:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:270:49: 270:54
                                         // + literal: Const { ty: fn(Vec<PeerConfig>) -> <Vec<PeerConfig> as IntoIterator>::IntoIter {<Vec<PeerConfig> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb33: {
        _48 = move _46;                  // scope 7 at cita-network/src/node_manager.rs:270:49: 270:54
        goto -> bb34;                    // scope 8 at cita-network/src/node_manager.rs:270:37: 274:38
    }

    bb34: {
        _50 = &mut _48;                  // scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
        _49 = <std::vec::IntoIter<PeerConfig> as Iterator>::next(_50) -> [return: bb35, unwind: bb69]; // scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:270:49: 270:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<PeerConfig>) -> std::option::Option<<std::vec::IntoIter<PeerConfig> as Iterator>::Item> {<std::vec::IntoIter<PeerConfig> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb35: {
        _51 = discriminant(_49);         // scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
        switchInt(move _51) -> [0: bb38, 1: bb36, otherwise: bb37]; // scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
    }

    bb36: {
        _52 = move ((_49 as Some).0: config::PeerConfig); // scope 8 at cita-network/src/node_manager.rs:270:41: 270:45
        _54 = move (_52.0: std::option::Option<std::string::String>); // scope 10 at cita-network/src/node_manager.rs:271:74: 271:81
        _55 = (_52.1: std::option::Option<usize>); // scope 10 at cita-network/src/node_manager.rs:271:83: 271:92
        _120 = const true;               // scope 10 at cita-network/src/node_manager.rs:271:73: 271:93
        _53 = (move _54, move _55);      // scope 10 at cita-network/src/node_manager.rs:271:73: 271:93
        _57 = discriminant((_53.0: std::option::Option<std::string::String>)); // scope 10 at cita-network/src/node_manager.rs:271:48: 271:70
        switchInt(move _57) -> [1: bb39, otherwise: bb78]; // scope 10 at cita-network/src/node_manager.rs:271:48: 271:70
    }

    bb37: {
        unreachable;                     // scope 8 at cita-network/src/node_manager.rs:270:49: 270:54
    }

    bb38: {
        drop(_48) -> [return: bb46, unwind: bb91]; // scope 7 at cita-network/src/node_manager.rs:274:37: 274:38
    }

    bb39: {
        _56 = discriminant((_53.1: std::option::Option<usize>)); // scope 10 at cita-network/src/node_manager.rs:271:48: 271:70
        switchInt(move _56) -> [1: bb40, otherwise: bb78]; // scope 10 at cita-network/src/node_manager.rs:271:48: 271:70
    }

    bb40: {
        _120 = const false;              // scope 10 at cita-network/src/node_manager.rs:271:54: 271:56
        _58 = move (((_53.0: std::option::Option<std::string::String>) as Some).0: std::string::String); // scope 10 at cita-network/src/node_manager.rs:271:54: 271:56
        _59 = (((_53.1: std::option::Option<usize>) as Some).0: usize); // scope 10 at cita-network/src/node_manager.rs:271:64: 271:68
        _61 = &mut _45;                  // scope 10 at cita-network/src/node_manager.rs:272:45: 272:87
        _110 = const _;                  // scope 10 at cita-network/src/node_manager.rs:272:68: 272:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:68: 272:75
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[0])) }
        _65 = _110 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/node_manager.rs:272:68: 272:75
        _70 = &_58;                      // scope 10 at cita-network/src/node_manager.rs:272:77: 272:79
        _69 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_70) -> [return: bb41, unwind: bb68]; // scope 10 at cita-network/src/node_manager.rs:272:77: 272:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:77: 272:79
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb41: {
        _72 = &_59;                      // scope 10 at cita-network/src/node_manager.rs:272:81: 272:85
        _71 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_72) -> [return: bb42, unwind: bb68]; // scope 10 at cita-network/src/node_manager.rs:272:81: 272:85
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:81: 272:85
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb42: {
        _68 = [move _69, move _71];      // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _67 = &_68;                      // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _66 = _67 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _64 = Arguments::<'_>::new_v1(move _65, move _66) -> [return: bb43, unwind: bb68]; // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb43: {
        _63 = format(move _64) -> [return: bb44, unwind: bb68]; // scope 10 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb44: {
        _62 = move _63;                  // scope 11 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _60 = Vec::<std::string::String>::push(move _61, move _62) -> [return: bb45, unwind: bb68]; // scope 10 at cita-network/src/node_manager.rs:272:45: 272:87
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:55: 272:59
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<std::string::String>, std::string::String) {Vec::<std::string::String>::push}, val: Value(<ZST>) }
    }

    bb45: {
        drop(_58) -> [return: bb78, unwind: bb69]; // scope 9 at cita-network/src/node_manager.rs:273:41: 273:42
    }

    bb46: {
        _74 = &_2;                       // scope 7 at cita-network/src/node_manager.rs:275:37: 277:39
        _124 = const false;              // scope 7 at cita-network/src/node_manager.rs:276:41: 276:50
        _76 = move _45;                  // scope 7 at cita-network/src/node_manager.rs:276:41: 276:50
        _75 = ModifiedConfigPeersReq::new(move _76) -> [return: bb47, unwind: bb91]; // scope 7 at cita-network/src/node_manager.rs:275:69: 277:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:275:69: 275:96
                                         // + literal: Const { ty: fn(Vec<std::string::String>) -> ModifiedConfigPeersReq {ModifiedConfigPeersReq::new}, val: Value(<ZST>) }
    }

    bb47: {
        _73 = NodesManagerClient::fix_modified_config(move _74, move _75) -> [return: bb48, unwind: bb91]; // scope 7 at cita-network/src/node_manager.rs:275:37: 277:39
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:275:49: 275:68
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, ModifiedConfigPeersReq) {NodesManagerClient::fix_modified_config}, val: Value(<ZST>) }
    }

    bb48: {
        _124 = const false;              // scope 6 at cita-network/src/node_manager.rs:278:33: 278:34
        _125 = const false;              // scope 5 at cita-network/src/node_manager.rs:278:33: 278:34
        goto -> bb82;                    // scope 5 at cita-network/src/node_manager.rs:268:33: 278:34
    }

    bb49: {
        drop(_9) -> [return: bb89, unwind: bb99]; // scope 1 at cita-network/src/node_manager.rs:281:21: 281:22
    }

    bb50: {
        _78 = const false;               // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb52;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _82 = &_77;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _84 = log::max_level() -> [return: bb54, unwind: bb99]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb52: {
        switchInt(move _78) -> [0: bb89, otherwise: bb56]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        switchInt(move _79) -> [0: bb50, otherwise: bb51]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb54: {
        _83 = &_84;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _81 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _82, move _83) -> [return: bb55, unwind: bb99]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb55: {
        _78 = move _81;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb52;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb56: {
        _115 = const _;                  // scope 12 at cita-network/src/node_manager.rs:282:33: 282:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:282:33: 282:58
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[5])) }
        _87 = _115 as &[&str] (Pointer(Unsize)); // scope 12 at cita-network/src/node_manager.rs:282:33: 282:58
        _92 = &_7;                       // scope 12 at cita-network/src/node_manager.rs:282:60: 282:65
        _91 = core::fmt::ArgumentV1::<'_>::new_debug::<DebouncedEvent>(_92) -> [return: bb57, unwind: bb99]; // scope 12 at cita-network/src/node_manager.rs:282:60: 282:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:282:60: 282:65
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b DebouncedEvent) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<DebouncedEvent>}, val: Value(<ZST>) }
    }

    bb57: {
        _90 = [move _91];                // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _89 = &_90;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _88 = _89 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _86 = Arguments::<'_>::new_v1(move _87, move _88) -> [return: bb58, unwind: bb99]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb58: {
        _114 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[4])) }
        _85 = log::__private_api_log(move _86, _77, _114) -> [return: bb101, unwind: bb99]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb59: {
        _95 = const false;               // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb61;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb60: {
        _99 = &_94;                      // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _101 = log::max_level() -> [return: bb63, unwind: bb71]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb61: {
        switchInt(move _95) -> [0: bb1, otherwise: bb65]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        switchInt(move _96) -> [0: bb59, otherwise: bb60]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb63: {
        _100 = &_101;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _98 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _99, move _100) -> [return: bb64, unwind: bb71]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb64: {
        _95 = move _98;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb61;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        _118 = const _;                  // scope 14 at cita-network/src/node_manager.rs:284:33: 284:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:284:33: 284:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[8])) }
        _104 = _118 as &[&str] (Pointer(Unsize)); // scope 14 at cita-network/src/node_manager.rs:284:33: 284:52
        _109 = &_93;                     // scope 14 at cita-network/src/node_manager.rs:284:54: 284:55
        _108 = core::fmt::ArgumentV1::<'_>::new_debug::<std::sync::mpsc::RecvError>(_109) -> [return: bb66, unwind: bb71]; // scope 14 at cita-network/src/node_manager.rs:284:54: 284:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:284:54: 284:55
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b std::sync::mpsc::RecvError) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::sync::mpsc::RecvError>}, val: Value(<ZST>) }
    }

    bb66: {
        _107 = [move _108];              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _106 = &_107;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _105 = _106 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _103 = Arguments::<'_>::new_v1(move _104, move _105) -> [return: bb67, unwind: bb71]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb67: {
        _117 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::notify_config_change, [], Some(promoted[7])) }
        _102 = log::__private_api_log(move _103, _94, _117) -> [return: bb102, unwind: bb71]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb68 (cleanup): {
        drop(_58) -> bb69;               // scope 9 at cita-network/src/node_manager.rs:273:41: 273:42
    }

    bb69 (cleanup): {
        drop(_48) -> bb91;               // scope 7 at cita-network/src/node_manager.rs:274:37: 274:38
    }

    bb70 (cleanup): {
        drop(_9) -> bb99;                // scope 1 at cita-network/src/node_manager.rs:281:21: 281:22
    }

    bb71 (cleanup): {
        drop(_3) -> bb72;                // scope 0 at cita-network/src/node_manager.rs:287:5: 287:6
    }

    bb72 (cleanup): {
        drop(_2) -> bb73;                // scope 0 at cita-network/src/node_manager.rs:287:5: 287:6
    }

    bb73 (cleanup): {
        drop(_1) -> bb74;                // scope 0 at cita-network/src/node_manager.rs:287:5: 287:6
    }

    bb74 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:253:5: 287:6
    }

    bb75: {
        _120 = const false;              // scope 9 at cita-network/src/node_manager.rs:274:37: 274:38
        goto -> bb34;                    // scope 8 at cita-network/src/node_manager.rs:270:37: 274:38
    }

    bb76: {
        switchInt(_120) -> [0: bb75, otherwise: bb77]; // scope 9 at cita-network/src/node_manager.rs:274:37: 274:38
    }

    bb77: {
        drop((((_53.0: std::option::Option<std::string::String>) as Some).0: std::string::String)) -> [return: bb75, unwind: bb69]; // scope 9 at cita-network/src/node_manager.rs:274:37: 274:38
    }

    bb78: {
        _126 = discriminant((_53.0: std::option::Option<std::string::String>)); // scope 9 at cita-network/src/node_manager.rs:274:37: 274:38
        switchInt(move _126) -> [1: bb76, otherwise: bb75]; // scope 9 at cita-network/src/node_manager.rs:274:37: 274:38
    }

    bb79: {
        _121 = const false;              // scope 3 at cita-network/src/node_manager.rs:279:29: 279:30
        goto -> bb49;                    // scope 3 at cita-network/src/node_manager.rs:264:29: 279:30
    }

    bb80: {
        switchInt(_121) -> [0: bb79, otherwise: bb81]; // scope 3 at cita-network/src/node_manager.rs:279:29: 279:30
    }

    bb81: {
        drop((((_41.1: std::option::Option<std::vec::Vec<config::PeerConfig>>) as Some).0: std::vec::Vec<config::PeerConfig>)) -> [return: bb79, unwind: bb70]; // scope 3 at cita-network/src/node_manager.rs:279:29: 279:30
    }

    bb82: {
        _127 = discriminant((_41.1: std::option::Option<std::vec::Vec<config::PeerConfig>>)); // scope 3 at cita-network/src/node_manager.rs:279:29: 279:30
        switchInt(move _127) -> [1: bb80, otherwise: bb79]; // scope 3 at cita-network/src/node_manager.rs:279:29: 279:30
    }

    bb83: {
        _122 = const false;              // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
        _123 = const false;              // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
        goto -> bb1;                     // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb84: {
        switchInt(_123) -> [0: bb83, otherwise: bb85]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb85: {
        drop(((_7 as Create).0: std::path::PathBuf)) -> [return: bb83, unwind: bb71]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb86: {
        switchInt(_122) -> [0: bb83, otherwise: bb87]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb87: {
        drop(((_7 as Write).0: std::path::PathBuf)) -> [return: bb83, unwind: bb71]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb88: {
        drop(_7) -> [return: bb83, unwind: bb71]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb89: {
        _128 = discriminant(_7);         // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
        switchInt(move _128) -> [2: bb84, 3: bb86, otherwise: bb88]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb90 (cleanup): {
        drop(_45) -> bb93;               // scope 6 at cita-network/src/node_manager.rs:278:33: 278:34
    }

    bb91 (cleanup): {
        switchInt(_124) -> [0: bb93, otherwise: bb90]; // scope 6 at cita-network/src/node_manager.rs:278:33: 278:34
    }

    bb92 (cleanup): {
        drop(_44) -> bb70;               // scope 5 at cita-network/src/node_manager.rs:278:33: 278:34
    }

    bb93 (cleanup): {
        switchInt(_125) -> [0: bb70, otherwise: bb92]; // scope 5 at cita-network/src/node_manager.rs:278:33: 278:34
    }

    bb94 (cleanup): {
        switchInt(_123) -> [0: bb71, otherwise: bb95]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb95 (cleanup): {
        drop(((_7 as Create).0: std::path::PathBuf)) -> bb71; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb96 (cleanup): {
        switchInt(_122) -> [0: bb71, otherwise: bb97]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb97 (cleanup): {
        drop(((_7 as Write).0: std::path::PathBuf)) -> bb71; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb98 (cleanup): {
        drop(_7) -> bb71;                // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb99 (cleanup): {
        _129 = discriminant(_7);         // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
        switchInt(move _129) -> [2: bb94, 3: bb96, otherwise: bb98]; // scope 0 at cita-network/src/node_manager.rs:283:17: 283:18
    }

    bb100: {
        goto -> bb29;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb101: {
        goto -> bb89;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb102: {
        goto -> bb1;                     // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:272:68: 272:75
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:272:68: 272:75

    bb0: {
        _1 = [const "", const ":"];      // scope 0 at cita-network/src/node_manager.rs:272:68: 272:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:68: 272:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:272:68: 272:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:272:68: 272:75
        return;                          // scope 0 at cita-network/src/node_manager.rs:272:68: 272:75
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:265:33: 265:87
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:265:33: 265:87

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:265:33: 265:87
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:265:33: 265:87
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:265:33: 265:87
        _1 = (move _2, move _4, move _6, const 265_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:265:39: 265:75
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:265:39: 265:75

    bb0: {
        _1 = [const "file ", const " changed, will auto reload!"]; // scope 0 at cita-network/src/node_manager.rs:265:39: 265:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:265:39: 265:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:265:39: 265:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:265:39: 265:75
        return;                          // scope 0 at cita-network/src/node_manager.rs:265:39: 265:75
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:282:26: 282:66
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:282:26: 282:66

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:282:26: 282:66
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:282:26: 282:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:282:26: 282:66
        _1 = (move _2, move _4, move _6, const 282_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:282:33: 282:58
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:282:33: 282:58

    bb0: {
        _1 = [const "file notify event: "]; // scope 0 at cita-network/src/node_manager.rs:282:33: 282:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:282:33: 282:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:282:33: 282:58
        return;                          // scope 0 at cita-network/src/node_manager.rs:282:33: 282:58
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:284:27: 284:56
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:284:27: 284:56

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:284:27: 284:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:284:27: 284:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:284:27: 284:56
        _1 = (move _2, move _4, move _6, const 284_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:284:33: 284:52
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:284:33: 284:52

    bb0: {
        _1 = [const "watch error: "];    // scope 0 at cita-network/src/node_manager.rs:284:33: 284:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:284:33: 284:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:284:33: 284:52
        return;                          // scope 0 at cita-network/src/node_manager.rs:284:33: 284:52
    }
}

promoted[9] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::notify_config_change: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run(_1: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:291:16: 291:25
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:291:27: 291:27
    let _2: &dyn pubsub::crossbeam_channel::internal::SelectHandle; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:13: 764:20
    let _3: &pubsub::crossbeam_channel::Receiver<()>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:56: 764:78
    let _4: pubsub::crossbeam_channel::Receiver<()>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:57: 764:78
    let mut _6: (&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:25: 767:53
    let mut _7: *const u8;               // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:38: 767:52
    let _10: &pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
    let mut _11: &dyn pubsub::crossbeam_channel::internal::SelectHandle; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:29: 935:33
    let mut _12: *const u8;              // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:86
    let mut _13: *const pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:73
    let _14: usize;                      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:775:18: 775:24
    let _17: &pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
    let mut _18: &dyn pubsub::crossbeam_channel::internal::SelectHandle; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:29: 935:33
    let mut _19: *const u8;              // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:86
    let mut _20: *const pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:73
    let _21: usize;                      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:776:18: 776:24
    let mut _24: &mut [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8)]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:50: 829:59
    let mut _25: &mut [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8); 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:50: 829:59
    let mut _26: pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:833:44: 833:49
    let mut _27: usize;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
    let mut _28: &pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
    let mut _30: pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
    let _31: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:35
    let mut _32: [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8); 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:30: 990:34
    let mut _34: isize;                  // in scope 0 at cita-network/src/node_manager.rs:296:25: 296:33
    let _36: ();                         // in scope 0 at cita-network/src/node_manager.rs:297:29: 297:46
    let mut _39: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _40: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _41: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _42: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _43: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _44: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _45: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _46: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _47: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _48: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:299:44: 299:83
    let mut _49: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _50: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _51: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _52: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:299:85: 299:88
    let _53: &pubsub::crossbeam_channel::RecvError; // in scope 0 at cita-network/src/node_manager.rs:299:85: 299:88
    let mut _54: usize;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
    let mut _55: &pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
    let mut _57: pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
    let _58: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:35
    let mut _59: [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8); 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:30: 990:34
    let _60: ();                         // in scope 0 at cita-network/src/node_manager.rs:303:21: 303:38
    let mut _61: !;                      // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:9: 73:54
    let mut _66: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:994:9: 994:10
    let mut _67: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:842:5: 842:6
    scope 1 {
        debug _handle => _2;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:13: 764:20
        scope 2 {
            debug _sel => _5;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:13: 767:21
            let _8: &pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
            scope 4 {
                debug _r => _8;          // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
                scope 5 {
                    debug _oper0 => _9;  // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:926:21: 926:25
                    let _15: &pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
                    scope 9 {
                        debug _r => _15; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
                        scope 10 {
                            debug _oper1 => _16; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:926:21: 926:25
                            let _22: pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:828:13: 828:18
                            let _23: pubsub::crossbeam_channel::SelectedOperation<'_>; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:17: 829:22
                            scope 14 {
                                debug _oper => _22; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:828:13: 828:18
                                let _29: std::result::Result<node_manager::NodesManagerMessage, pubsub::crossbeam_channel::RecvError>; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:17: 989:21
                                let _56: std::result::Result<std::time::Instant, pubsub::crossbeam_channel::RecvError>; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:17: 989:21
                                let mut _62: &&str; // in scope 14 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
                                scope 18 {
                                    debug _res => _29; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:17: 989:21
                                    let _33: std::result::Result<node_manager::NodesManagerMessage, pubsub::crossbeam_channel::RecvError>; // in scope 18 at cita-network/src/node_manager.rs:294:62: 294:65
                                    scope 19 {
                                        debug msg => _33; // in scope 19 at cita-network/src/node_manager.rs:294:62: 294:65
                                        let _35: node_manager::NodesManagerMessage; // in scope 19 at cita-network/src/node_manager.rs:296:28: 296:32
                                        let _37: pubsub::crossbeam_channel::RecvError; // in scope 19 at cita-network/src/node_manager.rs:299:29: 299:32
                                        scope 20 {
                                            debug data => _35; // in scope 20 at cita-network/src/node_manager.rs:296:28: 296:32
                                        }
                                        scope 21 {
                                            debug err => const pubsub::crossbeam_channel::RecvError; // in scope 21 at cita-network/src/node_manager.rs:299:29: 299:32
                                            let _38: log::Level; // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            scope 22 {
                                                debug lvl => _38; // in scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                                let mut _63: &(&str, &str, &str, u32); // in scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                                let mut _64: &[&str; 1]; // in scope 22 at cita-network/src/node_manager.rs:299:44: 299:83
                                                let mut _65: &log::LevelFilter; // in scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                            }
                                        }
                                    }
                                }
                                scope 23 {
                                    debug _res => _56; // in scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:17: 989:21
                                    scope 24 {
                                    }
                                }
                            }
                            scope 15 {
                                debug _oper => _23; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:17: 829:22
                                scope 16 {
                                    scope 17 {
                                    }
                                }
                            }
                        }
                        scope 11 {
                            let _16: &pubsub::crossbeam_channel::Receiver<std::time::Instant>; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:926:21: 926:25
                            scope 12 {
                                scope 13 {
                                    debug _r => _15; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:927:25: 927:27
                                }
                            }
                        }
                    }
                }
                scope 6 {
                    let _9: &pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:926:21: 926:25
                    scope 7 {
                        scope 8 {
                            debug _r => _8; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:927:25: 927:27
                        }
                    }
                }
            }
        }
        scope 3 {
            let mut _5: [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8); 2]; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:13: 767:21
        }
    }

    bb0: {
        _67 = const false;               // scope 0 at cita-network/src/node_manager.rs:292:9: 306:10
        _66 = const false;               // scope 0 at cita-network/src/node_manager.rs:292:9: 306:10
        goto -> bb1;                     // scope 0 at cita-network/src/node_manager.rs:292:9: 306:10
    }

    bb1: {
        _4 = never::<()>() -> bb2;       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:57: 764:78
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:57: 764:76
                                         // + literal: Const { ty: fn() -> pubsub::crossbeam_channel::Receiver<()> {never::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:56: 764:78
        _2 = _3 as &dyn pubsub::crossbeam_channel::internal::SelectHandle (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:764:56: 764:78
        _7 = const {0x0 as *const u8};   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:38: 767:52
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: *const u8, val: Value(Scalar(0x0000000000000000)) }
        _6 = (_2, const 0_usize, move _7); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:25: 767:53
        _5 = [move _6; 2];               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:24: 767:60
        _8 = &((*_1).8: pubsub::crossbeam_channel::Receiver<node_manager::NodesManagerMessage>); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
        _10 = NodesManager::run::unbind::<'_, pubsub::crossbeam_channel::Receiver<NodesManagerMessage>>(_8) -> [return: bb3, unwind: bb30]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:27
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a pubsub::crossbeam_channel::Receiver<NodesManagerMessage>) -> &pubsub::crossbeam_channel::Receiver<NodesManagerMessage> {NodesManager::run::unbind::<'_, pubsub::crossbeam_channel::Receiver<NodesManagerMessage>>}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = _10;                        // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
        _11 = _9 as &dyn pubsub::crossbeam_channel::internal::SelectHandle (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:29: 935:33
        _13 = &raw const (*_9);          // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:43
        _12 = _13 as *const u8 (PtrToPtr); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:86
        _14 = const 0_usize;             // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:775:18: 775:24
        _5[_14] = (move _11, const 0_usize, move _12); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:17: 935:87
        _15 = &((*_1).5: pubsub::crossbeam_channel::Receiver<std::time::Instant>); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:924:13: 924:19
        _17 = NodesManager::run::unbind::<'_, pubsub::crossbeam_channel::Receiver<Instant>>(_15) -> [return: bb4, unwind: bb30]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:27
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a pubsub::crossbeam_channel::Receiver<Instant>) -> &pubsub::crossbeam_channel::Receiver<Instant> {NodesManager::run::unbind::<'_, pubsub::crossbeam_channel::Receiver<Instant>>}, val: Value(<ZST>) }
    }

    bb4: {
        _16 = _17;                       // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:933:21: 933:31
        _18 = _16 as &dyn pubsub::crossbeam_channel::internal::SelectHandle (Pointer(Unsize)); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:29: 935:33
        _20 = &raw const (*_16);         // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:43
        _19 = _20 as *const u8 (PtrToPtr); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:39: 935:86
        _21 = const 1_usize;             // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:776:18: 776:24
        _5[_21] = (move _18, const 1_usize, move _19); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:935:17: 935:87
        _25 = &mut _5;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:50: 829:59
        _24 = _25 as &mut [(&dyn pubsub::crossbeam_channel::internal::SelectHandle, usize, *const u8)] (Pointer(Unsize)); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:50: 829:59
        _23 = pubsub::crossbeam_channel::internal::select(move _24) -> [return: bb5, unwind: bb30]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:25: 829:60
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:829:25: 829:49
                                         // + literal: Const { ty: for<'b, 'a> fn(&'b mut [(&'a (dyn SelectHandle + 'a), usize, *const u8)]) -> SelectedOperation<'a> {pubsub::crossbeam_channel::internal::select}, val: Value(<ZST>) }
    }

    bb5: {
        _26 = move _23;                  // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:833:44: 833:49
        _22 = transmute::<SelectedOperation<'_>, SelectedOperation<'_>>(move _26) -> bb6; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:833:22: 833:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:833:22: 833:43
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(SelectedOperation<'_>) -> SelectedOperation<'_> {transmute::<SelectedOperation<'_>, SelectedOperation<'_>>}, val: Value(<ZST>) }
    }

    bb6: {
        _67 = const true;                // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:833:49: 833:50
        _28 = &_22;                      // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
        _27 = SelectedOperation::<'_>::index(move _28) -> [return: bb7, unwind: bb36]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:18: 988:23
                                         // + literal: Const { ty: for<'a> fn(&'a SelectedOperation<'_>) -> usize {SelectedOperation::<'_>::index}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _27) -> [0: bb8, otherwise: bb23]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:775:18: 988:25
    }

    bb8: {
        _67 = const false;               // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
        _30 = move _22;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
        _29 = SelectedOperation::<'_>::recv::<NodesManagerMessage>(move _30, _9) -> [return: bb9, unwind: bb36]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:38
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:30: 989:34
                                         // + literal: Const { ty: for<'a> fn(SelectedOperation<'_>, &'a pubsub::crossbeam_channel::Receiver<NodesManagerMessage>) -> Result<NodesManagerMessage, pubsub::crossbeam_channel::RecvError> {SelectedOperation::<'_>::recv::<NodesManagerMessage>}, val: Value(<ZST>) }
    }

    bb9: {
        _66 = const true;                // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:37: 989:38
        _32 = _5;                        // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:30: 990:34
        _31 = std::mem::drop::<[(&dyn SelectHandle, usize, *const u8); 2]>(move _32) -> [return: bb10, unwind: bb34]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:35
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:29
                                         // + literal: Const { ty: fn([(&dyn SelectHandle, usize, *const u8); 2]) {std::mem::drop::<[(&dyn SelectHandle, usize, *const u8); 2]>}, val: Value(<ZST>) }
    }

    bb10: {
        _66 = const false;               // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:992:24: 992:28
        _33 = move _29;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:992:24: 992:28
        _34 = discriminant(_33);         // scope 19 at cita-network/src/node_manager.rs:295:27: 295:30
        switchInt(move _34) -> [0: bb13, 1: bb11, otherwise: bb12]; // scope 19 at cita-network/src/node_manager.rs:295:21: 295:30
    }

    bb11: {
        _38 = log::Level::Error;         // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _41 = &_38;                      // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _65 = const _;                   // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::run, [], Some(promoted[3])) }
        _40 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _41, _65) -> [return: bb17, unwind: bb34]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        unreachable;                     // scope 19 at cita-network/src/node_manager.rs:295:27: 295:30
    }

    bb13: {
        _35 = move ((_33 as Ok).0: node_manager::NodesManagerMessage); // scope 19 at cita-network/src/node_manager.rs:296:28: 296:32
        _36 = NodesManagerMessage::handle(move _35, _1) -> [return: bb37, unwind: bb34]; // scope 20 at cita-network/src/node_manager.rs:297:29: 297:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:297:34: 297:40
                                         // + literal: Const { ty: for<'a> fn(NodesManagerMessage, &'a mut NodesManager) {NodesManagerMessage::handle}, val: Value(<ZST>) }
    }

    bb14: {
        _39 = const false;               // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _43 = &_38;                      // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _45 = log::max_level() -> [return: bb18, unwind: bb34]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _39) -> [0: bb32, otherwise: bb20]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        switchInt(move _40) -> [0: bb14, otherwise: bb15]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        _44 = &_45;                      // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _42 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _43, move _44) -> [return: bb19, unwind: bb34]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _39 = move _42;                  // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _64 = const _;                   // scope 22 at cita-network/src/node_manager.rs:299:44: 299:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:299:44: 299:83
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::run, [], Some(promoted[2])) }
        _48 = _64 as &[&str] (Pointer(Unsize)); // scope 22 at cita-network/src/node_manager.rs:299:44: 299:83
        _53 = &_37;                      // scope 22 at cita-network/src/node_manager.rs:299:85: 299:88
        _52 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::RecvError>(_53) -> [return: bb21, unwind: bb34]; // scope 22 at cita-network/src/node_manager.rs:299:85: 299:88
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:299:85: 299:88
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::RecvError) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::RecvError>}, val: Value(<ZST>) }
    }

    bb21: {
        _51 = [move _52];                // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _50 = &_51;                      // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _49 = _50 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _47 = Arguments::<'_>::new_v1(move _48, move _49) -> [return: bb22, unwind: bb34]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb22: {
        _63 = const _;                   // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::run, [], Some(promoted[1])) }
        _46 = log::__private_api_log(move _47, _38, _63) -> [return: bb38, unwind: bb34]; // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb23: {
        _55 = &_22;                      // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
        _54 = SelectedOperation::<'_>::index(move _55) -> [return: bb24, unwind: bb36]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:12: 988:25
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:18: 988:23
                                         // + literal: Const { ty: for<'a> fn(&'a SelectedOperation<'_>) -> usize {SelectedOperation::<'_>::index}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _54) -> [1: bb25, otherwise: bb28]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:776:18: 988:25
    }

    bb25: {
        _67 = const false;               // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
        _57 = move _22;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:29
        _56 = SelectedOperation::<'_>::recv::<Instant>(move _57, _16) -> [return: bb26, unwind: bb36]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:24: 989:38
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:989:30: 989:34
                                         // + literal: Const { ty: for<'a> fn(SelectedOperation<'_>, &'a pubsub::crossbeam_channel::Receiver<Instant>) -> Result<Instant, pubsub::crossbeam_channel::RecvError> {SelectedOperation::<'_>::recv::<Instant>}, val: Value(<ZST>) }
    }

    bb26: {
        _59 = _5;                        // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:30: 990:34
        _58 = std::mem::drop::<[(&dyn SelectHandle, usize, *const u8); 2]>(move _59) -> [return: bb27, unwind: bb36]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:35
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:990:13: 990:29
                                         // + literal: Const { ty: fn([(&dyn SelectHandle, usize, *const u8); 2]) {std::mem::drop::<[(&dyn SelectHandle, usize, *const u8); 2]>}, val: Value(<ZST>) }
    }

    bb27: {
        _60 = NodesManager::dial_nodes(_1) -> [return: bb39, unwind: bb36]; // scope 24 at cita-network/src/node_manager.rs:303:21: 303:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:303:26: 303:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut NodesManager) {NodesManager::dial_nodes}, val: Value(<ZST>) }
    }

    bb28: {
        _62 = const _;                   // scope 14 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
                                         // + literal: Const { ty: &&str, val: Unevaluated(NodesManager::run, [], Some(promoted[0])) }
        _61 = core::panicking::unreachable_display::<&str>(_62) -> bb36; // scope 14 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:9: 73:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:9: 73:47
                                         // + literal: Const { ty: for<'a> fn(&'a &str) -> ! {core::panicking::unreachable_display::<&str>}, val: Value(<ZST>) }
    }

    bb29: {
        _67 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:842:5: 842:6
        drop(_4) -> bb1;                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:810:5: 810:6
    }

    bb30 (cleanup): {
        drop(_4) -> bb31;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:810:5: 810:6
    }

    bb31 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:291:5: 307:6
    }

    bb32: {
        _66 = const false;               // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:994:9: 994:10
        goto -> bb29;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:988:9: 1001:10
    }

    bb33 (cleanup): {
        drop(_29) -> bb36;               // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:994:9: 994:10
    }

    bb34 (cleanup): {
        switchInt(_66) -> [0: bb36, otherwise: bb33]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:994:9: 994:10
    }

    bb35 (cleanup): {
        drop(_22) -> bb30;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:842:5: 842:6
    }

    bb36 (cleanup): {
        switchInt(_67) -> [0: bb30, otherwise: bb35]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:842:5: 842:6
    }

    bb37: {
        goto -> bb32;                    // scope 20 at cita-network/src/node_manager.rs:297:29: 297:46
    }

    bb38: {
        goto -> bb32;                    // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb39: {
        goto -> bb29;                    // scope 24 at cita-network/src/node_manager.rs:303:21: 303:38
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
    let mut _1: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:1031:13: 1031:64

    bb0: {
        _1 = const "internal error in crossbeam-channel: invalid case"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:1031:13: 1031:64
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:1031:13: 1031:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
        return;                          // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/panic.rs:73:48: 73:53
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:299:37: 299:89
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:299:37: 299:89

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:299:37: 299:89
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:299:37: 299:89
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:299:37: 299:89
        _1 = (move _2, move _4, move _6, const 299_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:299:44: 299:83
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:299:44: 299:83

    bb0: {
        _1 = [const "[NodeManager] Receive data error "]; // scope 0 at cita-network/src/node_manager.rs:299:44: 299:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:299:44: 299:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:299:44: 299:83
        return;                          // scope 0 at cita-network/src/node_manager.rs:299:44: 299:83
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

const _LEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:763:21: 763:26
    let mut _1: usize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
    let mut _2: (usize, bool);           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
    let mut _3: (usize, bool);           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61

    bb0: {
        StorageLive(_1);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
        _2 = CheckedAdd(const 1_usize, const 0_usize); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_usize, const 0_usize) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
    }

    bb1: {
        _1 = move (_2.0: usize);         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
        _3 = CheckedAdd(const 1_usize, _1); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_usize, move _1) -> bb2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
    }

    bb2: {
        _0 = move (_3.0: usize);         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:9: 817:61
        StorageDead(_1);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:817:60: 817:61
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:763:9: 763:78
    }
}

node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:55: 767:59

    bb0: {
        _0 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:55: 767:59
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:767:55: 767:59
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run::unbind(_1: &T) -> &T {
    debug x => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:930:45: 930:46
    let mut _0: &T;                      // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:930:55: 930:60

    bb0: {
        _0 = transmute::<&T, &T>(_1) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:931:25: 931:49
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:931:25: 931:46
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(&T) -> &T {transmute::<&T, &T>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:932:22: 932:22
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::run::unbind(_1: &T) -> &T {
    debug x => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:930:45: 930:46
    let mut _0: &T;                      // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:930:55: 930:60

    bb0: {
        _0 = transmute::<&T, &T>(_1) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:931:25: 931:49
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:931:25: 931:46
                                         // + literal: Const { ty: unsafe extern "rust-intrinsic" fn(&T) -> &T {transmute::<&T, &T>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.3.9/src/select_macro.rs:932:22: 932:22
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::client(_1: &NodesManager) -> NodesManagerClient {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:309:19: 309:24
    let mut _0: node_manager::NodesManagerClient; // return place in scope 0 at cita-network/src/node_manager.rs:309:29: 309:47
    let mut _2: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/node_manager.rs:310:9: 310:42

    bb0: {
        _2 = &((*_1).7: node_manager::NodesManagerClient); // scope 0 at cita-network/src/node_manager.rs:310:9: 310:42
        _0 = <NodesManagerClient as Clone>::clone(move _2) -> bb1; // scope 0 at cita-network/src/node_manager.rs:310:9: 310:42
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:310:35: 310:40
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient) -> NodesManagerClient {<NodesManagerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:311:6: 311:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes(_1: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:313:23: 313:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:313:34: 313:34
    let mut _2: isize;                   // in scope 0 at cita-network/src/node_manager.rs:314:16: 314:34
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:316:17: 316:76
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:317:17: 317:29
    let _19: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:317:17: 317:29
    let _20: ();                         // in scope 0 at cita-network/src/node_manager.rs:321:9: 321:33
    let mut _21: bool;                   // in scope 0 at cita-network/src/node_manager.rs:324:12: 324:58
    let mut _22: usize;                  // in scope 0 at cita-network/src/node_manager.rs:324:12: 324:38
    let mut _23: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:324:12: 324:38
    let mut _24: usize;                  // in scope 0 at cita-network/src/node_manager.rs:324:41: 324:58
    let mut _25: std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:325:17: 325:26
    let mut _26: std::iter::Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, node_manager::NodeStatus>>; // in scope 0 at cita-network/src/node_manager.rs:325:37: 325:69
    let mut _27: std::collections::hash_map::Keys<'_, std::net::SocketAddr, node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:325:37: 325:60
    let mut _28: &std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:325:37: 325:60
    let _29: ();                         // in scope 0 at cita-network/src/node_manager.rs:326:13: 326:45
    let mut _30: &mut rand::ThreadRng;   // in scope 0 at cita-network/src/node_manager.rs:326:13: 326:45
    let mut _31: rand::ThreadRng;        // in scope 0 at cita-network/src/node_manager.rs:326:13: 326:25
    let mut _32: &mut [std::net::SocketAddr]; // in scope 0 at cita-network/src/node_manager.rs:326:34: 326:44
    let mut _33: &mut [std::net::SocketAddr]; // in scope 0 at cita-network/src/node_manager.rs:326:34: 326:44
    let mut _34: &mut std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:326:34: 326:44
    let mut _35: std::vec::IntoIter<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:328:24: 328:29
    let mut _36: std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:328:24: 328:29
    let mut _38: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:328:24: 328:29
    let mut _39: &mut std::vec::IntoIter<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:328:24: 328:29
    let mut _40: isize;                  // in scope 0 at cita-network/src/node_manager.rs:328:13: 389:14
    let mut _43: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:329:29: 329:59
    let mut _44: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:329:29: 329:59
    let _45: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:329:54: 329:58
    let mut _46: isize;                  // in scope 0 at cita-network/src/node_manager.rs:331:24: 331:40
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _50: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _51: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _54: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _55: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _56: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _57: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _58: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:333:25: 333:83
    let mut _59: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _60: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _61: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _62: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:334:25: 334:28
    let _63: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:334:25: 334:28
    let mut _64: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:334:30: 334:40
    let _65: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:334:30: 334:40
    let mut _66: i32;                    // in scope 0 at cita-network/src/node_manager.rs:338:35: 342:22
    let mut _67: bool;                   // in scope 0 at cita-network/src/node_manager.rs:338:38: 338:85
    let mut _68: i32;                    // in scope 0 at cita-network/src/node_manager.rs:338:38: 338:72
    let mut _69: i32;                    // in scope 0 at cita-network/src/node_manager.rs:338:39: 338:50
    let mut _70: (i32, bool);            // in scope 0 at cita-network/src/node_manager.rs:338:38: 338:72
    let mut _71: i32;                    // in scope 0 at cita-network/src/node_manager.rs:341:25: 341:36
    let mut _72: (i32, bool);            // in scope 0 at cita-network/src/node_manager.rs:341:25: 341:57
    let mut _73: isize;                  // in scope 0 at cita-network/src/node_manager.rs:346:24: 346:39
    let mut _75: bool;                   // in scope 0 at cita-network/src/node_manager.rs:347:24: 347:40
    let mut _76: &std::net::SocketAddr;  // in scope 0 at cita-network/src/node_manager.rs:347:24: 347:27
    let mut _77: &std::net::SocketAddr;  // in scope 0 at cita-network/src/node_manager.rs:347:31: 347:40
    let mut _79: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _80: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _81: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _82: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _83: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _84: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _85: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _86: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _87: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _88: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:349:29: 349:84
    let mut _89: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _90: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _91: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _92: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:350:29: 350:38
    let _93: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:350:29: 350:38
    let mut _94: bool;                   // in scope 0 at cita-network/src/node_manager.rs:357:20: 357:51
    let mut _95: i32;                    // in scope 0 at cita-network/src/node_manager.rs:357:20: 357:31
    let mut _97: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _98: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _99: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _100: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _101: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _102: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _103: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _104: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _105: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _106: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:359:25: 359:86
    let mut _107: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _108: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _109: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _110: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:360:25: 360:28
    let _111: &std::net::SocketAddr;     // in scope 0 at cita-network/src/node_manager.rs:360:25: 360:28
    let mut _112: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:360:30: 360:41
    let _113: &i32;                      // in scope 0 at cita-network/src/node_manager.rs:360:30: 360:41
    let mut _114: i32;                   // in scope 0 at cita-network/src/node_manager.rs:365:36: 369:22
    let mut _115: bool;                  // in scope 0 at cita-network/src/node_manager.rs:365:39: 365:79
    let mut _116: &node_manager::NodeSource; // in scope 0 at cita-network/src/node_manager.rs:365:39: 365:53
    let mut _117: (i32, bool);           // in scope 0 at cita-network/src/node_manager.rs:365:21: 369:22
    let mut _118: isize;                 // in scope 0 at cita-network/src/node_manager.rs:374:24: 374:42
    let mut _120: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:375:41: 375:50
    let mut _122: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _123: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _124: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _125: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _126: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _127: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _128: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _129: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _130: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _131: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:376:27: 376:49
    let mut _132: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _133: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _134: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _135: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:376:51: 376:68
    let _136: &std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:376:51: 376:68
    let mut _137: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:377:27: 377:85
    let mut _138: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:377:27: 377:85
    let mut _139: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/node_manager.rs:377:37: 377:65
    let mut _140: tentacle::service::DialProtocol; // in scope 0 at cita-network/src/node_manager.rs:377:67: 377:84
    let mut _141: isize;                 // in scope 0 at cita-network/src/node_manager.rs:378:25: 378:30
    let mut _142: (i32, bool);           // in scope 0 at cita-network/src/node_manager.rs:380:29: 380:57
    let mut _144: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _145: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _146: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _147: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _148: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _149: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _150: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _151: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _152: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _153: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:381:36: 381:64
    let mut _156: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _157: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _158: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _159: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _160: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _161: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _162: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _163: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _164: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _165: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:384:35: 384:69
    let mut _166: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _167: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _168: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _169: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:384:71: 384:74
    let _170: &tentacle::error::Error;   // in scope 0 at cita-network/src/node_manager.rs:384:71: 384:74
    let _171: log::Level;                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _172: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _173: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _174: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _175: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _176: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _177: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _178: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _179: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _180: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _181: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:393:13: 393:55
    let mut _182: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _183: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _184: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _185: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:394:13: 394:33
    let _186: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:394:13: 394:33
    let _187: log::Level;                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _188: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _189: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _190: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _191: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _192: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _193: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _194: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _195: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _196: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _197: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:396:16: 396:54
    let mut _198: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _199: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _200: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _201: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:396:56: 396:72
    let _202: &std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:396:56: 396:72
    let _203: log::Level;                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _204: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _205: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _206: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _207: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _208: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _209: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _210: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _211: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _212: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _213: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:398:13: 398:56
    let mut _214: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _215: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _216: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _217: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:399:13: 399:37
    let _218: &std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:399:13: 399:37
    let mut _250: bool;                  // in scope 0 at cita-network/src/node_manager.rs:390:9: 390:10
    scope 1 {
        debug dialing_node => _3;        // in scope 1 at cita-network/src/node_manager.rs:314:21: 314:33
        let _3: std::net::SocketAddr;    // in scope 1 at cita-network/src/node_manager.rs:314:21: 314:33
        let _4: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _4;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _219: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _220: &[&str; 2];    // in scope 2 at cita-network/src/node_manager.rs:316:17: 316:76
            let mut _221: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 3 {
        debug socks => _25;              // in scope 3 at cita-network/src/node_manager.rs:325:17: 325:26
        let mut _37: std::vec::IntoIter<std::net::SocketAddr>; // in scope 3 at cita-network/src/node_manager.rs:328:24: 328:29
        scope 4 {
            debug iter => _37;           // in scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
            let _41: std::net::SocketAddr; // in scope 4 at cita-network/src/node_manager.rs:328:17: 328:20
            scope 5 {
                debug key => _41;        // in scope 5 at cita-network/src/node_manager.rs:328:17: 328:20
                let _42: &mut node_manager::NodeStatus; // in scope 5 at cita-network/src/node_manager.rs:329:21: 329:26
                scope 6 {
                    debug value => _42;  // in scope 6 at cita-network/src/node_manager.rs:329:21: 329:26
                    let _96: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _243: &node_manager::NodeSource; // in scope 6 at cita-network/src/node_manager.rs:365:57: 365:79
                    scope 7 {
                        debug session_id => _47; // in scope 7 at cita-network/src/node_manager.rs:331:29: 331:39
                        let _47: tentacle::SessionId; // in scope 7 at cita-network/src/node_manager.rs:331:29: 331:39
                        let _48: log::Level; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        scope 8 {
                            debug lvl => _48; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _231: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _232: &[&str; 3]; // in scope 8 at cita-network/src/node_manager.rs:333:25: 333:83
                            let mut _233: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                    }
                    scope 9 {
                        debug self_addr => _74; // in scope 9 at cita-network/src/node_manager.rs:346:29: 346:38
                        let _74: std::net::SocketAddr; // in scope 9 at cita-network/src/node_manager.rs:346:29: 346:38
                        let _78: log::Level; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        scope 10 {
                            debug lvl => _78; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _247: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _248: &[&str; 2]; // in scope 10 at cita-network/src/node_manager.rs:349:29: 349:84
                            let mut _249: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                    }
                    scope 11 {
                        debug lvl => _96; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let mut _244: &(&str, &str, &str, u32); // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                        let mut _245: &[&str; 3]; // in scope 11 at cita-network/src/node_manager.rs:359:25: 359:86
                        let mut _246: &log::LevelFilter; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                    }
                    scope 12 {
                        debug ctrl => _119; // in scope 12 at cita-network/src/node_manager.rs:374:29: 374:41
                        let _119: &mut tentacle::service::ServiceControl; // in scope 12 at cita-network/src/node_manager.rs:374:29: 374:41
                        let _121: log::Level; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let _143: log::Level; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let _154: tentacle::error::Error; // in scope 12 at cita-network/src/node_manager.rs:383:29: 383:32
                        scope 13 {
                            debug lvl => _121; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _240: &(&str, &str, &str, u32); // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _241: &[&str; 1]; // in scope 13 at cita-network/src/node_manager.rs:376:27: 376:49
                            let mut _242: &log::LevelFilter; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 14 {
                            debug lvl => _143; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _234: &(&str, &str, &str, u32); // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _235: &[&str; 1]; // in scope 14 at cita-network/src/node_manager.rs:381:36: 381:64
                            let mut _236: &log::LevelFilter; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 15 {
                            debug err => _154; // in scope 15 at cita-network/src/node_manager.rs:383:29: 383:32
                            let _155: log::Level; // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            scope 16 {
                                debug lvl => _155; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _237: &(&str, &str, &str, u32); // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _238: &[&str; 1]; // in scope 16 at cita-network/src/node_manager.rs:384:35: 384:69
                                let mut _239: &log::LevelFilter; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                        }
                    }
                }
            }
        }
    }
    scope 17 {
        debug lvl => _171;               // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _228: &(&str, &str, &str, u32); // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _229: &[&str; 1];        // in scope 17 at cita-network/src/node_manager.rs:393:13: 393:55
        let mut _230: &log::LevelFilter; // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 18 {
        debug lvl => _187;               // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _225: &(&str, &str, &str, u32); // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _226: &[&str; 1];        // in scope 18 at cita-network/src/node_manager.rs:396:16: 396:54
        let mut _227: &log::LevelFilter; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 19 {
        debug lvl => _203;               // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _222: &(&str, &str, &str, u32); // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _223: &[&str; 1];        // in scope 19 at cita-network/src/node_manager.rs:398:13: 398:56
        let mut _224: &log::LevelFilter; // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _250 = const false;              // scope 0 at cita-network/src/node_manager.rs:314:9: 320:10
        _2 = discriminant(((*_1).14: std::option::Option<std::net::SocketAddr>)); // scope 1 at cita-network/src/node_manager.rs:314:16: 314:34
        switchInt(move _2) -> [1: bb1, otherwise: bb11]; // scope 1 at cita-network/src/node_manager.rs:314:16: 314:34
    }

    bb1: {
        _3 = ((((*_1).14: std::option::Option<std::net::SocketAddr>) as Some).0: std::net::SocketAddr); // scope 1 at cita-network/src/node_manager.rs:314:21: 314:33
        _4 = log::Level::Info;           // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _7 = &_4;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _221 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[2])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _221) -> bb5; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _9 = &_4;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb6;   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _5) -> [0: bb145, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _6) -> [0: bb2, otherwise: bb3]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _10 = &_11;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb7; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _5 = move _8;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _220 = const _;                  // scope 2 at cita-network/src/node_manager.rs:316:17: 316:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:316:17: 316:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[1])) }
        _14 = _220 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/node_manager.rs:316:17: 316:76
        _19 = &_3;                       // scope 2 at cita-network/src/node_manager.rs:317:17: 317:29
        _18 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_19) -> bb9; // scope 2 at cita-network/src/node_manager.rs:317:17: 317:29
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:317:17: 317:29
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = [move _18];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb10; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _219 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[0])) }
        _12 = log::__private_api_log(move _13, _4, _219) -> bb145; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _20 = NodesManager::translate_address(_1) -> bb12; // scope 0 at cita-network/src/node_manager.rs:321:9: 321:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:321:14: 321:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut NodesManager) {NodesManager::translate_address}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = &((*_1).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 0 at cita-network/src/node_manager.rs:324:12: 324:38
        _22 = BTreeMap::<SessionId, TransformAddr>::len(move _23) -> bb13; // scope 0 at cita-network/src/node_manager.rs:324:12: 324:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:324:33: 324:36
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<SessionId, TransformAddr>) -> usize {BTreeMap::<SessionId, TransformAddr>::len}, val: Value(<ZST>) }
    }

    bb13: {
        _24 = ((*_1).6: usize);          // scope 0 at cita-network/src/node_manager.rs:324:41: 324:58
        _21 = Lt(move _22, move _24);    // scope 0 at cita-network/src/node_manager.rs:324:12: 324:58
        switchInt(move _21) -> [0: bb115, otherwise: bb14]; // scope 0 at cita-network/src/node_manager.rs:324:12: 324:58
    }

    bb14: {
        _28 = &((*_1).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 0 at cita-network/src/node_manager.rs:325:37: 325:60
        _27 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::keys(move _28) -> bb15; // scope 0 at cita-network/src/node_manager.rs:325:37: 325:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:325:54: 325:58
                                         // + literal: Const { ty: for<'a> fn(&'a HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>) -> std::collections::hash_map::Keys<'a, std::net::SocketAddr, NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::keys}, val: Value(<ZST>) }
    }

    bb15: {
        _26 = <std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus> as Iterator>::cloned::<'_, std::net::SocketAddr>(move _27) -> bb16; // scope 0 at cita-network/src/node_manager.rs:325:37: 325:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:325:61: 325:67
                                         // + literal: Const { ty: fn(std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>) -> Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> {<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus> as Iterator>::cloned::<'_, std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb16: {
        _250 = const true;               // scope 0 at cita-network/src/node_manager.rs:325:37: 325:79
        _25 = <Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> as Iterator>::collect::<Vec<std::net::SocketAddr>>(move _26) -> bb17; // scope 0 at cita-network/src/node_manager.rs:325:37: 325:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:325:70: 325:77
                                         // + literal: Const { ty: fn(Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>>) -> Vec<std::net::SocketAddr> {<Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> as Iterator>::collect::<Vec<std::net::SocketAddr>>}, val: Value(<ZST>) }
    }

    bb17: {
        _31 = thread_rng() -> [return: bb18, unwind: bb151]; // scope 3 at cita-network/src/node_manager.rs:326:13: 326:25
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:326:13: 326:23
                                         // + literal: Const { ty: fn() -> ThreadRng {thread_rng}, val: Value(<ZST>) }
    }

    bb18: {
        _30 = &mut _31;                  // scope 3 at cita-network/src/node_manager.rs:326:13: 326:45
        _34 = &mut _25;                  // scope 3 at cita-network/src/node_manager.rs:326:34: 326:44
        _33 = <Vec<std::net::SocketAddr> as DerefMut>::deref_mut(_34) -> [return: bb19, unwind: bb148]; // scope 3 at cita-network/src/node_manager.rs:326:34: 326:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:326:34: 326:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<std::net::SocketAddr>) -> &'a mut <Vec<std::net::SocketAddr> as Deref>::Target {<Vec<std::net::SocketAddr> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb19: {
        _32 = _33;                       // scope 3 at cita-network/src/node_manager.rs:326:34: 326:44
        _29 = <ThreadRng as Rng>::shuffle::<std::net::SocketAddr>(move _30, move _32) -> [return: bb20, unwind: bb148]; // scope 3 at cita-network/src/node_manager.rs:326:13: 326:45
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:326:26: 326:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut ThreadRng, &'b mut [std::net::SocketAddr]) {<ThreadRng as Rng>::shuffle::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_31) -> [return: bb21, unwind: bb151]; // scope 3 at cita-network/src/node_manager.rs:326:45: 326:46
    }

    bb21: {
        _250 = const false;              // scope 3 at cita-network/src/node_manager.rs:328:24: 328:29
        _36 = move _25;                  // scope 3 at cita-network/src/node_manager.rs:328:24: 328:29
        _35 = <Vec<std::net::SocketAddr> as IntoIterator>::into_iter(move _36) -> [return: bb22, unwind: bb151]; // scope 3 at cita-network/src/node_manager.rs:328:24: 328:29
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:328:24: 328:29
                                         // + literal: Const { ty: fn(Vec<std::net::SocketAddr>) -> <Vec<std::net::SocketAddr> as IntoIterator>::IntoIter {<Vec<std::net::SocketAddr> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb22: {
        _37 = move _35;                  // scope 3 at cita-network/src/node_manager.rs:328:24: 328:29
        goto -> bb23;                    // scope 4 at cita-network/src/node_manager.rs:328:13: 389:14
    }

    bb23: {
        _39 = &mut _37;                  // scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
        _38 = <std::vec::IntoIter<std::net::SocketAddr> as Iterator>::next(_39) -> [return: bb24, unwind: bb147]; // scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:328:24: 328:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<std::net::SocketAddr>) -> std::option::Option<<std::vec::IntoIter<std::net::SocketAddr> as Iterator>::Item> {<std::vec::IntoIter<std::net::SocketAddr> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb24: {
        _40 = discriminant(_38);         // scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
        switchInt(move _40) -> [0: bb113, 1: bb25, otherwise: bb26]; // scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
    }

    bb25: {
        _41 = ((_38 as Some).0: std::net::SocketAddr); // scope 4 at cita-network/src/node_manager.rs:328:17: 328:20
        _44 = &mut ((*_1).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 5 at cita-network/src/node_manager.rs:329:29: 329:59
        _45 = &_41;                      // scope 5 at cita-network/src/node_manager.rs:329:54: 329:58
        _43 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _44, _45) -> [return: bb27, unwind: bb147]; // scope 5 at cita-network/src/node_manager.rs:329:29: 329:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:329:46: 329:53
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb26: {
        unreachable;                     // scope 4 at cita-network/src/node_manager.rs:328:24: 328:29
    }

    bb27: {
        _42 = std::option::Option::<&mut NodeStatus>::unwrap(move _43) -> [return: bb28, unwind: bb147]; // scope 5 at cita-network/src/node_manager.rs:329:29: 329:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:329:60: 329:66
                                         // + literal: Const { ty: fn(std::option::Option<&mut NodeStatus>) -> &mut NodeStatus {std::option::Option::<&mut NodeStatus>::unwrap}, val: Value(<ZST>) }
    }

    bb28: {
        _46 = discriminant(((*_42).1: std::option::Option<tentacle::SessionId>)); // scope 7 at cita-network/src/node_manager.rs:331:24: 331:40
        switchInt(move _46) -> [1: bb29, otherwise: bb46]; // scope 7 at cita-network/src/node_manager.rs:331:24: 331:40
    }

    bb29: {
        _47 = ((((*_42).1: std::option::Option<tentacle::SessionId>) as Some).0: tentacle::SessionId); // scope 7 at cita-network/src/node_manager.rs:331:29: 331:39
        _48 = log::Level::Debug;         // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _51 = &_48;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _233 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[14])) }
        _50 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _51, _233) -> [return: bb33, unwind: bb147]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb30: {
        _49 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb32;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _53 = &_48;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _55 = log::max_level() -> [return: bb34, unwind: bb147]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb32: {
        switchInt(move _49) -> [0: bb40, otherwise: bb36]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        switchInt(move _50) -> [0: bb30, otherwise: bb31]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _54 = &_55;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, move _54) -> [return: bb35, unwind: bb147]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb35: {
        _49 = move _52;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb32;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _232 = const _;                  // scope 8 at cita-network/src/node_manager.rs:333:25: 333:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:333:25: 333:83
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[13])) }
        _58 = _232 as &[&str] (Pointer(Unsize)); // scope 8 at cita-network/src/node_manager.rs:333:25: 333:83
        _63 = &_41;                      // scope 8 at cita-network/src/node_manager.rs:334:25: 334:28
        _62 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_63) -> [return: bb37, unwind: bb147]; // scope 8 at cita-network/src/node_manager.rs:334:25: 334:28
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:334:25: 334:28
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb37: {
        _65 = &_47;                      // scope 8 at cita-network/src/node_manager.rs:334:30: 334:40
        _64 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_65) -> [return: bb38, unwind: bb147]; // scope 8 at cita-network/src/node_manager.rs:334:30: 334:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:334:30: 334:40
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb38: {
        _61 = [move _62, move _64];      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _60 = &_61;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _59 = _60 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _57 = Arguments::<'_>::new_v1(move _58, move _59) -> [return: bb39, unwind: bb147]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb39: {
        _231 = const _;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[12])) }
        _56 = log::__private_api_log(move _57, _48, _231) -> [return: bb152, unwind: bb147]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb40: {
        _69 = ((*_42).0: i32);           // scope 7 at cita-network/src/node_manager.rs:338:39: 338:50
        _70 = CheckedAdd(_69, const _);  // scope 7 at cita-network/src/node_manager.rs:338:38: 338:72
        assert(!move (_70.1: bool), "attempt to compute `{} + {}`, which would overflow", move _69, const _) -> [success: bb41, unwind: bb147]; // scope 7 at cita-network/src/node_manager.rs:338:38: 338:72
    }

    bb41: {
        _68 = move (_70.0: i32);         // scope 7 at cita-network/src/node_manager.rs:338:38: 338:72
        _67 = Gt(move _68, const _);     // scope 7 at cita-network/src/node_manager.rs:338:38: 338:85
        switchInt(move _67) -> [0: bb43, otherwise: bb42]; // scope 7 at cita-network/src/node_manager.rs:338:38: 338:85
    }

    bb42: {
        _66 = const _;                   // scope 7 at cita-network/src/node_manager.rs:339:25: 339:35
        goto -> bb45;                    // scope 7 at cita-network/src/node_manager.rs:338:35: 342:22
    }

    bb43: {
        _71 = ((*_42).0: i32);           // scope 7 at cita-network/src/node_manager.rs:341:25: 341:36
        _72 = CheckedAdd(_71, const _);  // scope 7 at cita-network/src/node_manager.rs:341:25: 341:57
        assert(!move (_72.1: bool), "attempt to compute `{} + {}`, which would overflow", move _71, const _) -> [success: bb44, unwind: bb147]; // scope 7 at cita-network/src/node_manager.rs:341:25: 341:57
    }

    bb44: {
        _66 = move (_72.0: i32);         // scope 7 at cita-network/src/node_manager.rs:341:25: 341:57
        goto -> bb45;                    // scope 7 at cita-network/src/node_manager.rs:338:35: 342:22
    }

    bb45: {
        ((*_42).0: i32) = move _66;      // scope 7 at cita-network/src/node_manager.rs:338:21: 342:22
        goto -> bb23;                    // scope 6 at no-location
    }

    bb46: {
        _73 = discriminant(((*_1).15: std::option::Option<std::net::SocketAddr>)); // scope 9 at cita-network/src/node_manager.rs:346:24: 346:39
        switchInt(move _73) -> [1: bb47, otherwise: bb59]; // scope 9 at cita-network/src/node_manager.rs:346:24: 346:39
    }

    bb47: {
        _74 = ((((*_1).15: std::option::Option<std::net::SocketAddr>) as Some).0: std::net::SocketAddr); // scope 9 at cita-network/src/node_manager.rs:346:29: 346:38
        _76 = &_41;                      // scope 9 at cita-network/src/node_manager.rs:347:24: 347:27
        _77 = &_74;                      // scope 9 at cita-network/src/node_manager.rs:347:31: 347:40
        _75 = <std::net::SocketAddr as PartialEq>::eq(move _76, move _77) -> [return: bb48, unwind: bb147]; // scope 9 at cita-network/src/node_manager.rs:347:24: 347:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:347:24: 347:40
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::net::SocketAddr, &'b std::net::SocketAddr) -> bool {<std::net::SocketAddr as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb48: {
        switchInt(move _75) -> [0: bb59, otherwise: bb49]; // scope 9 at cita-network/src/node_manager.rs:347:24: 347:40
    }

    bb49: {
        _78 = log::Level::Debug;         // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _81 = &_78;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _249 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[30])) }
        _80 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _81, _249) -> [return: bb53, unwind: bb147]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb50: {
        _79 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb52;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _83 = &_78;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _85 = log::max_level() -> [return: bb54, unwind: bb147]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb52: {
        switchInt(move _79) -> [0: bb23, otherwise: bb56]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        switchInt(move _80) -> [0: bb50, otherwise: bb51]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb54: {
        _84 = &_85;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _82 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _83, move _84) -> [return: bb55, unwind: bb147]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb55: {
        _79 = move _82;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb52;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb56: {
        _248 = const _;                  // scope 10 at cita-network/src/node_manager.rs:349:29: 349:84
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:349:29: 349:84
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[29])) }
        _88 = _248 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/node_manager.rs:349:29: 349:84
        _93 = &_74;                      // scope 10 at cita-network/src/node_manager.rs:350:29: 350:38
        _92 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_93) -> [return: bb57, unwind: bb147]; // scope 10 at cita-network/src/node_manager.rs:350:29: 350:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:350:29: 350:38
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb57: {
        _91 = [move _92];                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _90 = &_91;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _89 = _90 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _87 = Arguments::<'_>::new_v1(move _88, move _89) -> [return: bb58, unwind: bb147]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb58: {
        _247 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[28])) }
        _86 = log::__private_api_log(move _87, _78, _247) -> [return: bb153, unwind: bb147]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb59: {
        _95 = ((*_42).0: i32);           // scope 6 at cita-network/src/node_manager.rs:357:20: 357:31
        _94 = Lt(move _95, const _);     // scope 6 at cita-network/src/node_manager.rs:357:20: 357:51
        switchInt(move _94) -> [0: bb77, otherwise: bb60]; // scope 6 at cita-network/src/node_manager.rs:357:20: 357:51
    }

    bb60: {
        _96 = log::Level::Debug;         // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _99 = &_96;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _246 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[27])) }
        _98 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _99, _246) -> [return: bb64, unwind: bb147]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb61: {
        _97 = const false;               // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb63;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _101 = &_96;                     // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _103 = log::max_level() -> [return: bb65, unwind: bb147]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb63: {
        switchInt(move _97) -> [0: bb71, otherwise: bb67]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb64: {
        switchInt(move _98) -> [0: bb61, otherwise: bb62]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        _102 = &_103;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _100 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _101, move _102) -> [return: bb66, unwind: bb147]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb66: {
        _97 = move _100;                 // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb63;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb67: {
        _245 = const _;                  // scope 11 at cita-network/src/node_manager.rs:359:25: 359:86
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:359:25: 359:86
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[26])) }
        _106 = _245 as &[&str] (Pointer(Unsize)); // scope 11 at cita-network/src/node_manager.rs:359:25: 359:86
        _111 = &_41;                     // scope 11 at cita-network/src/node_manager.rs:360:25: 360:28
        _110 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_111) -> [return: bb68, unwind: bb147]; // scope 11 at cita-network/src/node_manager.rs:360:25: 360:28
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:360:25: 360:28
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb68: {
        _113 = &((*_42).0: i32);         // scope 11 at cita-network/src/node_manager.rs:360:30: 360:41
        _112 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(_113) -> [return: bb69, unwind: bb147]; // scope 11 at cita-network/src/node_manager.rs:360:30: 360:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:360:30: 360:41
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb69: {
        _109 = [move _110, move _112];   // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _108 = &_109;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _107 = _108 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _105 = Arguments::<'_>::new_v1(move _106, move _107) -> [return: bb70, unwind: bb147]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb70: {
        _244 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[25])) }
        _104 = log::__private_api_log(move _105, _96, _244) -> [return: bb154, unwind: bb147]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb71: {
        _116 = &((*_42).2: node_manager::NodeSource); // scope 6 at cita-network/src/node_manager.rs:365:39: 365:53
        _243 = const _;                  // scope 6 at cita-network/src/node_manager.rs:365:57: 365:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:365:57: 365:79
                                         // + literal: Const { ty: &NodeSource, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[24])) }
        _115 = <NodeSource as PartialEq>::eq(move _116, _243) -> [return: bb72, unwind: bb147]; // scope 6 at cita-network/src/node_manager.rs:365:39: 365:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:365:39: 365:79
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a NodeSource, &'b NodeSource) -> bool {<NodeSource as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb72: {
        switchInt(move _115) -> [0: bb74, otherwise: bb73]; // scope 6 at cita-network/src/node_manager.rs:365:39: 365:79
    }

    bb73: {
        _114 = const 2_i32;              // scope 6 at cita-network/src/node_manager.rs:366:25: 366:26
        goto -> bb75;                    // scope 6 at cita-network/src/node_manager.rs:365:36: 369:22
    }

    bb74: {
        _114 = const 1_i32;              // scope 6 at cita-network/src/node_manager.rs:368:25: 368:26
        goto -> bb75;                    // scope 6 at cita-network/src/node_manager.rs:365:36: 369:22
    }

    bb75: {
        _117 = CheckedAdd(((*_42).0: i32), _114); // scope 6 at cita-network/src/node_manager.rs:365:21: 369:22
        assert(!move (_117.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_42).0: i32), move _114) -> [success: bb76, unwind: bb147]; // scope 6 at cita-network/src/node_manager.rs:365:21: 369:22
    }

    bb76: {
        ((*_42).0: i32) = move (_117.0: i32); // scope 6 at cita-network/src/node_manager.rs:365:21: 369:22
        goto -> bb23;                    // scope 6 at no-location
    }

    bb77: {
        _118 = discriminant(((*_1).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 12 at cita-network/src/node_manager.rs:374:24: 374:42
        switchInt(move _118) -> [1: bb78, otherwise: bb113]; // scope 12 at cita-network/src/node_manager.rs:374:24: 374:42
    }

    bb78: {
        _119 = &mut ((((*_1).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 12 at cita-network/src/node_manager.rs:374:29: 374:41
        _120 = std::option::Option::<std::net::SocketAddr>::Some(_41); // scope 12 at cita-network/src/node_manager.rs:375:41: 375:50
        ((*_1).14: std::option::Option<std::net::SocketAddr>) = move _120; // scope 12 at cita-network/src/node_manager.rs:375:21: 375:50
        _121 = log::Level::Info;         // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _124 = &_121;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _242 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[23])) }
        _123 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _124, _242) -> [return: bb82, unwind: bb147]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb79: {
        _122 = const false;              // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb81;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb80: {
        _126 = &_121;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _128 = log::max_level() -> [return: bb83, unwind: bb147]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb81: {
        switchInt(move _122) -> [0: bb88, otherwise: bb85]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb82: {
        switchInt(move _123) -> [0: bb79, otherwise: bb80]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb83: {
        _127 = &_128;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _125 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _126, move _127) -> [return: bb84, unwind: bb147]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb84: {
        _122 = move _125;                // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb81;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb85: {
        _241 = const _;                  // scope 13 at cita-network/src/node_manager.rs:376:27: 376:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:376:27: 376:49
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[22])) }
        _131 = _241 as &[&str] (Pointer(Unsize)); // scope 13 at cita-network/src/node_manager.rs:376:27: 376:49
        _136 = &((*_1).14: std::option::Option<std::net::SocketAddr>); // scope 13 at cita-network/src/node_manager.rs:376:51: 376:68
        _135 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<std::net::SocketAddr>>(_136) -> [return: bb86, unwind: bb147]; // scope 13 at cita-network/src/node_manager.rs:376:51: 376:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:376:51: 376:68
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<std::net::SocketAddr>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<std::net::SocketAddr>>}, val: Value(<ZST>) }
    }

    bb86: {
        _134 = [move _135];              // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _133 = &_134;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _132 = _133 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _130 = Arguments::<'_>::new_v1(move _131, move _132) -> [return: bb87, unwind: bb147]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb87: {
        _240 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[21])) }
        _129 = log::__private_api_log(move _130, _121, _240) -> [return: bb155, unwind: bb147]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb88: {
        _138 = &(*_119);                 // scope 12 at cita-network/src/node_manager.rs:377:27: 377:85
        _139 = socketaddr_to_multiaddr(_41) -> [return: bb89, unwind: bb147]; // scope 12 at cita-network/src/node_manager.rs:377:37: 377:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:377:37: 377:60
                                         // + literal: Const { ty: fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}, val: Value(<ZST>) }
    }

    bb89: {
        _140 = tentacle::service::DialProtocol::All; // scope 12 at cita-network/src/node_manager.rs:377:67: 377:84
        _137 = ServiceControl::dial(move _138, move _139, move _140) -> [return: bb90, unwind: bb147]; // scope 12 at cita-network/src/node_manager.rs:377:27: 377:85
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:377:32: 377:36
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, Multiaddr, DialProtocol) -> Result<(), tentacle::error::Error> {ServiceControl::dial}, val: Value(<ZST>) }
    }

    bb90: {
        _141 = discriminant(_137);       // scope 12 at cita-network/src/node_manager.rs:377:27: 377:85
        switchInt(move _141) -> [0: bb93, 1: bb91, otherwise: bb92]; // scope 12 at cita-network/src/node_manager.rs:377:21: 377:85
    }

    bb91: {
        _154 = move ((_137 as Err).0: tentacle::error::Error); // scope 12 at cita-network/src/node_manager.rs:383:29: 383:32
        _155 = log::Level::Warn;         // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _158 = &_155;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _239 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[20])) }
        _157 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _158, _239) -> [return: bb106, unwind: bb146]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb92: {
        unreachable;                     // scope 12 at cita-network/src/node_manager.rs:377:27: 377:85
    }

    bb93: {
        _142 = CheckedSub(((*_42).0: i32), const _); // scope 12 at cita-network/src/node_manager.rs:380:29: 380:57
        assert(!move (_142.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_42).0: i32), const _) -> [success: bb94, unwind: bb147]; // scope 12 at cita-network/src/node_manager.rs:380:29: 380:57
    }

    bb94: {
        ((*_42).0: i32) = move (_142.0: i32); // scope 12 at cita-network/src/node_manager.rs:380:29: 380:57
        _143 = log::Level::Debug;        // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _146 = &_143;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _236 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[17])) }
        _145 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _146, _236) -> [return: bb98, unwind: bb147]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb95: {
        _144 = const false;              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb97;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb96: {
        _148 = &_143;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _150 = log::max_level() -> [return: bb99, unwind: bb147]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb97: {
        switchInt(move _144) -> [0: bb113, otherwise: bb101]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb98: {
        switchInt(move _145) -> [0: bb95, otherwise: bb96]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb99: {
        _149 = &_150;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _147 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _148, move _149) -> [return: bb100, unwind: bb147]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb100: {
        _144 = move _147;                // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb97;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb101: {
        _235 = const _;                  // scope 14 at cita-network/src/node_manager.rs:381:36: 381:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:381:36: 381:64
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[16])) }
        _153 = _235 as &[&str] (Pointer(Unsize)); // scope 14 at cita-network/src/node_manager.rs:381:36: 381:64
        _152 = Arguments::<'_>::new_const(move _153) -> [return: bb102, unwind: bb147]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb102: {
        _234 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[15])) }
        _151 = log::__private_api_log(move _152, _143, _234) -> [return: bb156, unwind: bb147]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb103: {
        _156 = const false;              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb105;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb104: {
        _160 = &_155;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _162 = log::max_level() -> [return: bb107, unwind: bb146]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb105: {
        switchInt(move _156) -> [0: bb112, otherwise: bb109]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb106: {
        switchInt(move _157) -> [0: bb103, otherwise: bb104]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb107: {
        _161 = &_162;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _159 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _160, move _161) -> [return: bb108, unwind: bb146]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb108: {
        _156 = move _159;                // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb105;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb109: {
        _238 = const _;                  // scope 16 at cita-network/src/node_manager.rs:384:35: 384:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:384:35: 384:69
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[19])) }
        _165 = _238 as &[&str] (Pointer(Unsize)); // scope 16 at cita-network/src/node_manager.rs:384:35: 384:69
        _170 = &_154;                    // scope 16 at cita-network/src/node_manager.rs:384:71: 384:74
        _169 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_170) -> [return: bb110, unwind: bb146]; // scope 16 at cita-network/src/node_manager.rs:384:71: 384:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:384:71: 384:74
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb110: {
        _168 = [move _169];              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _167 = &_168;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _166 = _167 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _164 = Arguments::<'_>::new_v1(move _165, move _166) -> [return: bb111, unwind: bb146]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb111: {
        _237 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[18])) }
        _163 = log::__private_api_log(move _164, _155, _237) -> [return: bb157, unwind: bb146]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb112: {
        drop(_154) -> [return: bb113, unwind: bb147]; // scope 12 at cita-network/src/node_manager.rs:385:25: 385:26
    }

    bb113: {
        drop(_37) -> [return: bb114, unwind: bb151]; // scope 3 at cita-network/src/node_manager.rs:389:13: 389:14
    }

    bb114: {
        _250 = const false;              // scope 0 at cita-network/src/node_manager.rs:390:9: 390:10
        goto -> bb115;                   // scope 0 at cita-network/src/node_manager.rs:324:9: 390:10
    }

    bb115: {
        _171 = log::Level::Debug;        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _174 = &_171;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _230 = const _;                  // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[11])) }
        _173 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _174, _230) -> bb119; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb116: {
        _172 = const false;              // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb118;                   // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb117: {
        _176 = &_171;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _178 = log::max_level() -> bb120; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb118: {
        switchInt(move _172) -> [0: bb125, otherwise: bb122]; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb119: {
        switchInt(move _173) -> [0: bb116, otherwise: bb117]; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb120: {
        _177 = &_178;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _175 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _176, move _177) -> bb121; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb121: {
        _172 = move _175;                // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb118;                   // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb122: {
        _229 = const _;                  // scope 17 at cita-network/src/node_manager.rs:393:13: 393:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:393:13: 393:55
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[10])) }
        _181 = _229 as &[&str] (Pointer(Unsize)); // scope 17 at cita-network/src/node_manager.rs:393:13: 393:55
        _186 = &((*_1).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 17 at cita-network/src/node_manager.rs:394:13: 394:33
        _185 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<SessionId, TransformAddr>>(_186) -> bb123; // scope 17 at cita-network/src/node_manager.rs:394:13: 394:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:394:13: 394:33
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeMap<SessionId, TransformAddr>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<SessionId, TransformAddr>>}, val: Value(<ZST>) }
    }

    bb123: {
        _184 = [move _185];              // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _183 = &_184;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _182 = _183 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _180 = Arguments::<'_>::new_v1(move _181, move _182) -> bb124; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb124: {
        _228 = const _;                  // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[9])) }
        _179 = log::__private_api_log(move _180, _171, _228) -> bb125; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb125: {
        _187 = log::Level::Debug;        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _190 = &_187;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _227 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[8])) }
        _189 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _190, _227) -> bb129; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb126: {
        _188 = const false;              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb128;                   // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb127: {
        _192 = &_187;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _194 = log::max_level() -> bb130; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb128: {
        switchInt(move _188) -> [0: bb135, otherwise: bb132]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb129: {
        switchInt(move _189) -> [0: bb126, otherwise: bb127]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb130: {
        _193 = &_194;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _191 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _192, move _193) -> bb131; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb131: {
        _188 = move _191;                // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb128;                   // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb132: {
        _226 = const _;                  // scope 18 at cita-network/src/node_manager.rs:396:16: 396:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:396:16: 396:54
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[7])) }
        _197 = _226 as &[&str] (Pointer(Unsize)); // scope 18 at cita-network/src/node_manager.rs:396:16: 396:54
        _202 = &((*_1).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 18 at cita-network/src/node_manager.rs:396:56: 396:72
        _201 = core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>>(_202) -> bb133; // scope 18 at cita-network/src/node_manager.rs:396:56: 396:72
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:396:56: 396:72
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: for<'b> fn(&'b HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>>}, val: Value(<ZST>) }
    }

    bb133: {
        _200 = [move _201];              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _199 = &_200;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _198 = _199 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _196 = Arguments::<'_>::new_v1(move _197, move _198) -> bb134; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb134: {
        _225 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[6])) }
        _195 = log::__private_api_log(move _196, _187, _225) -> bb135; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb135: {
        _203 = log::Level::Debug;        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _206 = &_203;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _224 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[5])) }
        _205 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _206, _224) -> bb139; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb136: {
        _204 = const false;              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb138;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb137: {
        _208 = &_203;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _210 = log::max_level() -> bb140; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb138: {
        switchInt(move _204) -> [0: bb145, otherwise: bb142]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb139: {
        switchInt(move _205) -> [0: bb136, otherwise: bb137]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb140: {
        _209 = &_210;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _207 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _208, move _209) -> bb141; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb141: {
        _204 = move _207;                // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb138;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb142: {
        _223 = const _;                  // scope 19 at cita-network/src/node_manager.rs:398:13: 398:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:398:13: 398:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[4])) }
        _213 = _223 as &[&str] (Pointer(Unsize)); // scope 19 at cita-network/src/node_manager.rs:398:13: 398:56
        _218 = &((*_1).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 19 at cita-network/src/node_manager.rs:399:13: 399:37
        _217 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<H160, SessionId>>(_218) -> bb143; // scope 19 at cita-network/src/node_manager.rs:399:13: 399:37
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:399:13: 399:37
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeMap<H160, SessionId>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<H160, SessionId>>}, val: Value(<ZST>) }
    }

    bb143: {
        _216 = [move _217];              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _215 = &_216;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _214 = _215 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _212 = Arguments::<'_>::new_v1(move _213, move _214) -> bb144; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb144: {
        _222 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::dial_nodes, [], Some(promoted[3])) }
        _211 = log::__private_api_log(move _212, _203, _222) -> bb145; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb145: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:401:6: 401:6
    }

    bb146 (cleanup): {
        drop(_154) -> bb147;             // scope 12 at cita-network/src/node_manager.rs:385:25: 385:26
    }

    bb147 (cleanup): {
        drop(_37) -> bb151;              // scope 3 at cita-network/src/node_manager.rs:389:13: 389:14
    }

    bb148 (cleanup): {
        drop(_31) -> bb151;              // scope 3 at cita-network/src/node_manager.rs:326:45: 326:46
    }

    bb149 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:313:5: 401:6
    }

    bb150 (cleanup): {
        drop(_25) -> bb149;              // scope 0 at cita-network/src/node_manager.rs:390:9: 390:10
    }

    bb151 (cleanup): {
        switchInt(_250) -> [0: bb149, otherwise: bb150]; // scope 0 at cita-network/src/node_manager.rs:390:9: 390:10
    }

    bb152: {
        goto -> bb40;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb153: {
        goto -> bb23;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb154: {
        goto -> bb71;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb155: {
        goto -> bb88;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb156: {
        goto -> bb113;                   // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb157: {
        goto -> bb112;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:315:13: 318:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:315:13: 318:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:315:13: 318:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:315:13: 318:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:315:13: 318:14
        _1 = (move _2, move _4, move _6, const 315_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:316:17: 316:76
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:316:17: 316:76

    bb0: {
        _1 = [const "[NodeManager] Dialing node: ", const ", waiting for next round."]; // scope 0 at cita-network/src/node_manager.rs:316:17: 316:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:316:17: 316:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:316:17: 316:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:316:17: 316:76
        return;                          // scope 0 at cita-network/src/node_manager.rs:316:17: 316:76
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:397:9: 400:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:397:9: 400:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:397:9: 400:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:397:9: 400:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:397:9: 400:10
        _1 = (move _2, move _4, move _6, const 397_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:398:13: 398:56
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:398:13: 398:56

    bb0: {
        _1 = [const "[NodeManager] Address in connected : "]; // scope 0 at cita-network/src/node_manager.rs:398:13: 398:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:398:13: 398:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:398:13: 398:56
        return;                          // scope 0 at cita-network/src/node_manager.rs:398:13: 398:56
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:396:9: 396:73
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:396:9: 396:73

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:396:9: 396:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:396:9: 396:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:396:9: 396:73
        _1 = (move _2, move _4, move _6, const 396_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:396:16: 396:54
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:396:16: 396:54

    bb0: {
        _1 = [const "[NodeManager] known_addrs info: "]; // scope 0 at cita-network/src/node_manager.rs:396:16: 396:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:396:16: 396:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:396:16: 396:54
        return;                          // scope 0 at cita-network/src/node_manager.rs:396:16: 396:54
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:392:9: 395:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:392:9: 395:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:392:9: 395:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:392:9: 395:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:392:9: 395:10
        _1 = (move _2, move _4, move _6, const 392_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:393:13: 393:55
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:393:13: 393:55

    bb0: {
        _1 = [const "[NodeManager] connected_addrs info: "]; // scope 0 at cita-network/src/node_manager.rs:393:13: 393:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:393:13: 393:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:393:13: 393:55
        return;                          // scope 0 at cita-network/src/node_manager.rs:393:13: 393:55
    }
}

promoted[11] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:332:21: 335:22
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:332:21: 335:22

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:332:21: 335:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:332:21: 335:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:332:21: 335:22
        _1 = (move _2, move _4, move _6, const 332_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:333:25: 333:83
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:333:25: 333:83

    bb0: {
        _1 = [const "[NodeManager] Address ", const " has been connected on : ", const "."]; // scope 0 at cita-network/src/node_manager.rs:333:25: 333:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:333:25: 333:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:333:25: 333:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:333:25: 333:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:333:25: 333:83
        return;                          // scope 0 at cita-network/src/node_manager.rs:333:25: 333:83
    }
}

promoted[14] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[15] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:381:29: 381:65
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:381:29: 381:65

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:381:29: 381:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:381:29: 381:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:381:29: 381:65
        _1 = (move _2, move _4, move _6, const 381_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[16] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:381:36: 381:64
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:381:36: 381:64

    bb0: {
        _1 = [const "[NodeManager] Dail success"]; // scope 0 at cita-network/src/node_manager.rs:381:36: 381:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:381:36: 381:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:381:36: 381:64
        return;                          // scope 0 at cita-network/src/node_manager.rs:381:36: 381:64
    }
}

promoted[17] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[18] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:384:29: 384:75
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:384:29: 384:75

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:384:29: 384:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:384:29: 384:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:384:29: 384:75
        _1 = (move _2, move _4, move _6, const 384_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[19] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:384:35: 384:69
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:384:35: 384:69

    bb0: {
        _1 = [const "[NodeManager] Dail failed : "]; // scope 0 at cita-network/src/node_manager.rs:384:35: 384:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:384:35: 384:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:384:35: 384:69
        return;                          // scope 0 at cita-network/src/node_manager.rs:384:35: 384:69
    }
}

promoted[20] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[21] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:376:21: 376:69
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:376:21: 376:69

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:376:21: 376:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:376:21: 376:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:376:21: 376:69
        _1 = (move _2, move _4, move _6, const 376_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[22] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:376:27: 376:49
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:376:27: 376:49

    bb0: {
        _1 = [const "Trying to dial: "]; // scope 0 at cita-network/src/node_manager.rs:376:27: 376:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:376:27: 376:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:376:27: 376:49
        return;                          // scope 0 at cita-network/src/node_manager.rs:376:27: 376:49
    }
}

promoted[23] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[24] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &NodeSource = {
    let mut _0: &node_manager::NodeSource; // return place in scope 0 at cita-network/src/node_manager.rs:365:57: 365:79
    let mut _1: node_manager::NodeSource; // in scope 0 at cita-network/src/node_manager.rs:365:57: 365:79

    bb0: {
        _1 = NodeSource::FromConfig;     // scope 0 at cita-network/src/node_manager.rs:365:57: 365:79
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:365:57: 365:79
        return;                          // scope 0 at cita-network/src/node_manager.rs:365:57: 365:79
    }
}

promoted[25] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:358:21: 361:22
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:358:21: 361:22

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:358:21: 361:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:358:21: 361:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:358:21: 361:22
        _1 = (move _2, move _4, move _6, const 358_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[26] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:359:25: 359:86
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:359:25: 359:86

    bb0: {
        _1 = [const "[NodeManager] Address ", const " has to low score (", const ") to dial."]; // scope 0 at cita-network/src/node_manager.rs:359:25: 359:86
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:359:25: 359:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:359:25: 359:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:359:25: 359:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:359:25: 359:86
        return;                          // scope 0 at cita-network/src/node_manager.rs:359:25: 359:86
    }
}

promoted[27] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[28] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:348:25: 351:26
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:348:25: 351:26

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:348:25: 351:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:348:25: 351:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:348:25: 351:26
        _1 = (move _2, move _4, move _6, const 348_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[29] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:349:29: 349:84
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:349:29: 349:84

    bb0: {
        _1 = [const "[NodeManager] Trying to connected self: ", const ", skip it"]; // scope 0 at cita-network/src/node_manager.rs:349:29: 349:84
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:349:29: 349:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:349:29: 349:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:349:29: 349:84
        return;                          // scope 0 at cita-network/src/node_manager.rs:349:29: 349:84
    }
}

promoted[30] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::dial_nodes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::set_service_task_sender(_1: &mut NodesManager, _2: ServiceControl) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:403:36: 403:45
    debug ctrl => _2;                    // in scope 0 at cita-network/src/node_manager.rs:403:47: 403:51
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:403:69: 403:69
    let mut _3: std::option::Option<tentacle::service::ServiceControl>; // in scope 0 at cita-network/src/node_manager.rs:404:29: 404:39

    bb0: {
        _3 = std::option::Option::<ServiceControl>::Some(move _2); // scope 0 at cita-network/src/node_manager.rs:404:29: 404:39
        drop(((*_1).9: std::option::Option<tentacle::service::ServiceControl>)) -> [return: bb1, unwind: bb2]; // scope 0 at cita-network/src/node_manager.rs:404:9: 404:26
    }

    bb1: {
        ((*_1).9: std::option::Option<tentacle::service::ServiceControl>) = move _3; // scope 0 at cita-network/src/node_manager.rs:404:9: 404:26
        return;                          // scope 0 at cita-network/src/node_manager.rs:405:6: 405:6
    }

    bb2 (cleanup): {
        ((*_1).9: std::option::Option<tentacle::service::ServiceControl>) = move _3; // scope 0 at cita-network/src/node_manager.rs:404:9: 404:26
        resume;                          // scope 0 at cita-network/src/node_manager.rs:403:5: 405:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address(_1: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:407:30: 407:39
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:407:41: 407:41
    let mut _2: std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _3: std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _4: &mut std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _5: std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _6: std::option::Option<(&std::string::String, &mut std::option::Option<std::net::SocketAddr>)>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _7: &mut std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
    let mut _8: isize;                   // in scope 0 at cita-network/src/node_manager.rs:408:9: 432:10
    let mut _11: bool;                   // in scope 0 at cita-network/src/node_manager.rs:410:16: 410:31
    let mut _12: &std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:410:16: 410:31
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _16: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _19: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _23: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:411:24: 411:77
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:411:79: 411:82
    let _28: &&std::string::String;      // in scope 0 at cita-network/src/node_manager.rs:411:79: 411:82
    let mut _29: std::result::Result<std::vec::IntoIter<std::net::SocketAddr>, std::io::Error>; // in scope 0 at cita-network/src/node_manager.rs:414:19: 414:40
    let mut _30: isize;                  // in scope 0 at cita-network/src/node_manager.rs:415:17: 415:31
    let mut _32: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:416:48: 416:61
    let mut _33: &mut std::vec::IntoIter<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:416:48: 416:61
    let mut _34: isize;                  // in scope 0 at cita-network/src/node_manager.rs:416:28: 416:45
    let mut _37: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:418:71: 418:75
    let mut _38: node_manager::NodeSource; // in scope 0 at cita-network/src/node_manager.rs:418:77: 418:99
    let _39: std::option::Option<node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:419:25: 419:74
    let mut _40: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:419:25: 419:74
    let mut _41: node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:419:62: 419:73
    let mut _42: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:420:34: 420:51
    let mut _44: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _45: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _46: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _48: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _49: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _50: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _51: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _52: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _53: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:422:32: 422:82
    let mut _56: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _57: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _58: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _59: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _60: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _61: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _62: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _63: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _64: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _65: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:427:25: 427:85
    let mut _66: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _67: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _68: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _69: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:428:25: 428:26
    let _70: &std::io::Error;            // in scope 0 at cita-network/src/node_manager.rs:428:25: 428:26
    scope 1 {
        debug iter => _5;                // in scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
        let _9: &std::string::String;    // in scope 1 at cita-network/src/node_manager.rs:408:14: 408:17
        let _10: &mut std::option::Option<std::net::SocketAddr>; // in scope 1 at cita-network/src/node_manager.rs:408:19: 408:24
        scope 2 {
            debug key => _9;             // in scope 2 at cita-network/src/node_manager.rs:408:14: 408:17
            debug value => _10;          // in scope 2 at cita-network/src/node_manager.rs:408:19: 408:24
            let _13: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _31: std::vec::IntoIter<std::net::SocketAddr>; // in scope 2 at cita-network/src/node_manager.rs:415:20: 415:30
            let _54: std::io::Error;     // in scope 2 at cita-network/src/node_manager.rs:425:21: 425:22
            scope 3 {
                debug lvl => _13;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _77: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _78: &[&str; 2]; // in scope 3 at cita-network/src/node_manager.rs:411:24: 411:77
                let mut _79: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug result => _31;     // in scope 4 at cita-network/src/node_manager.rs:415:20: 415:30
                let _43: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 5 {
                    debug socket_addr => _35; // in scope 5 at cita-network/src/node_manager.rs:416:33: 416:44
                    let _35: std::net::SocketAddr; // in scope 5 at cita-network/src/node_manager.rs:416:33: 416:44
                    let _36: node_manager::NodeStatus; // in scope 5 at cita-network/src/node_manager.rs:418:29: 418:40
                    scope 6 {
                        debug node_status => _36; // in scope 6 at cita-network/src/node_manager.rs:418:29: 418:40
                    }
                }
                scope 7 {
                    debug lvl => _43;    // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _71: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _72: &[&str; 1]; // in scope 7 at cita-network/src/node_manager.rs:422:32: 422:82
                    let mut _73: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
            scope 8 {
                debug e => _54;          // in scope 8 at cita-network/src/node_manager.rs:425:21: 425:22
                let _55: log::Level;     // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 9 {
                    debug lvl => _55;    // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _74: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _75: &[&str; 1]; // in scope 9 at cita-network/src/node_manager.rs:427:25: 427:85
                    let mut _76: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _4 = &mut ((*_1).1: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>); // scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
        _3 = BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::iter_mut(move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:408:47: 408:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>) -> std::collections::btree_map::IterMut<'a, std::string::String, std::option::Option<std::net::SocketAddr>> {BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::iter_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as IntoIterator>::into_iter(move _3) -> bb2; // scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:408:29: 408:57
                                         // + literal: Const { ty: fn(std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>) -> <std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as IntoIterator>::IntoIter {<std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = move _2;                    // scope 0 at cita-network/src/node_manager.rs:408:29: 408:57
        goto -> bb3;                     // scope 1 at cita-network/src/node_manager.rs:408:9: 432:10
    }

    bb3: {
        _7 = &mut _5;                    // scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
        _6 = <std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as Iterator>::next(_7) -> bb4; // scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:408:29: 408:57
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>>) -> std::option::Option<<std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as Iterator>::Item> {<std::collections::btree_map::IterMut<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = discriminant(_6);           // scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
        switchInt(move _8) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
    }

    bb5: {
        _9 = (((_6 as Some).0: (&std::string::String, &mut std::option::Option<std::net::SocketAddr>)).0: &std::string::String); // scope 1 at cita-network/src/node_manager.rs:408:14: 408:17
        _10 = move (((_6 as Some).0: (&std::string::String, &mut std::option::Option<std::net::SocketAddr>)).1: &mut std::option::Option<std::net::SocketAddr>); // scope 1 at cita-network/src/node_manager.rs:408:19: 408:24
        _12 = &(*_10);                   // scope 2 at cita-network/src/node_manager.rs:410:16: 410:31
        _11 = std::option::Option::<std::net::SocketAddr>::is_some(move _12) -> bb8; // scope 2 at cita-network/src/node_manager.rs:410:16: 410:31
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:410:22: 410:29
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<std::net::SocketAddr>) -> bool {std::option::Option::<std::net::SocketAddr>::is_some}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 1 at cita-network/src/node_manager.rs:408:29: 408:57
    }

    bb7: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:433:6: 433:6
    }

    bb8: {
        switchInt(move _11) -> [0: bb19, otherwise: bb9]; // scope 2 at cita-network/src/node_manager.rs:410:16: 410:31
    }

    bb9: {
        _13 = log::Level::Debug;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _16 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _79 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::translate_address, [], Some(promoted[8])) }
        _15 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _16, _79) -> bb13; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _14 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _18 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _20 = log::max_level() -> bb14;  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _14) -> [0: bb3, otherwise: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        switchInt(move _15) -> [0: bb10, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _19 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, move _19) -> bb15; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _14 = move _17;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _78 = const _;                   // scope 3 at cita-network/src/node_manager.rs:411:24: 411:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:411:24: 411:77
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(NodesManager::translate_address, [], Some(promoted[7])) }
        _23 = _78 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:411:24: 411:77
        _28 = &_9;                       // scope 3 at cita-network/src/node_manager.rs:411:79: 411:82
        _27 = core::fmt::ArgumentV1::<'_>::new_debug::<&std::string::String>(_28) -> bb17; // scope 3 at cita-network/src/node_manager.rs:411:79: 411:82
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:411:79: 411:82
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&std::string::String>}, val: Value(<ZST>) }
    }

    bb17: {
        _26 = [move _27];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = &_26;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = Arguments::<'_>::new_v1(move _23, move _24) -> bb18; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb18: {
        _77 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::translate_address, [], Some(promoted[6])) }
        _21 = log::__private_api_log(move _22, _13, _77) -> bb3; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb19: {
        _29 = <std::string::String as ToSocketAddrs>::to_socket_addrs(_9) -> bb20; // scope 2 at cita-network/src/node_manager.rs:414:19: 414:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:414:23: 414:38
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> Result<<std::string::String as ToSocketAddrs>::Iter, std::io::Error> {<std::string::String as ToSocketAddrs>::to_socket_addrs}, val: Value(<ZST>) }
    }

    bb20: {
        _30 = discriminant(_29);         // scope 2 at cita-network/src/node_manager.rs:414:19: 414:40
        switchInt(move _30) -> [0: bb23, 1: bb21, otherwise: bb22]; // scope 2 at cita-network/src/node_manager.rs:414:13: 414:40
    }

    bb21: {
        _54 = move ((_29 as Err).0: std::io::Error); // scope 2 at cita-network/src/node_manager.rs:425:21: 425:22
        _55 = log::Level::Error;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _58 = &_55;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _76 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::translate_address, [], Some(promoted[5])) }
        _57 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _58, _76) -> [return: bb41, unwind: bb48]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        unreachable;                     // scope 2 at cita-network/src/node_manager.rs:414:19: 414:40
    }

    bb23: {
        _31 = move ((_29 as Ok).0: std::vec::IntoIter<std::net::SocketAddr>); // scope 2 at cita-network/src/node_manager.rs:415:20: 415:30
        _33 = &mut _31;                  // scope 5 at cita-network/src/node_manager.rs:416:48: 416:61
        _32 = <std::vec::IntoIter<std::net::SocketAddr> as Iterator>::next(move _33) -> [return: bb24, unwind: bb49]; // scope 5 at cita-network/src/node_manager.rs:416:48: 416:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:416:55: 416:59
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<std::net::SocketAddr>) -> std::option::Option<<std::vec::IntoIter<std::net::SocketAddr> as Iterator>::Item> {<std::vec::IntoIter<std::net::SocketAddr> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb24: {
        _34 = discriminant(_32);         // scope 5 at cita-network/src/node_manager.rs:416:28: 416:45
        switchInt(move _34) -> [1: bb25, otherwise: bb28]; // scope 5 at cita-network/src/node_manager.rs:416:28: 416:45
    }

    bb25: {
        _35 = ((_32 as Some).0: std::net::SocketAddr); // scope 5 at cita-network/src/node_manager.rs:416:33: 416:44
        _37 = std::option::Option::<SessionId>::None; // scope 5 at cita-network/src/node_manager.rs:418:71: 418:75
        _38 = const NodeSource::FromConfig; // scope 5 at cita-network/src/node_manager.rs:418:77: 418:99
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: NodeSource, val: Value(Scalar(0x00)) }
        _36 = NodeStatus::new(const _, move _37, move _38) -> [return: bb26, unwind: bb49]; // scope 5 at cita-network/src/node_manager.rs:418:43: 418:100
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:418:43: 418:58
                                         // + literal: Const { ty: fn(i32, std::option::Option<SessionId>, NodeSource) -> NodeStatus {NodeStatus::new}, val: Value(<ZST>) }
    }

    bb26: {
        _40 = &mut ((*_1).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 6 at cita-network/src/node_manager.rs:419:25: 419:74
        _41 = move _36;                  // scope 6 at cita-network/src/node_manager.rs:419:62: 419:73
        _39 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::insert(move _40, _35, move _41) -> [return: bb27, unwind: bb49]; // scope 6 at cita-network/src/node_manager.rs:419:25: 419:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:419:42: 419:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, std::net::SocketAddr, NodeStatus) -> std::option::Option<NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::insert}, val: Value(<ZST>) }
    }

    bb27: {
        _42 = std::option::Option::<std::net::SocketAddr>::Some(_35); // scope 6 at cita-network/src/node_manager.rs:420:34: 420:51
        (*_10) = move _42;               // scope 6 at cita-network/src/node_manager.rs:420:25: 420:51
        goto -> bb37;                    // scope 4 at cita-network/src/node_manager.rs:416:21: 423:22
    }

    bb28: {
        _43 = log::Level::Error;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _46 = &_43;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _73 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManager::translate_address, [], Some(promoted[2])) }
        _45 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _46, _73) -> [return: bb32, unwind: bb49]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _44 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _48 = &_43;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _50 = log::max_level() -> [return: bb33, unwind: bb49]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _44) -> [0: bb37, otherwise: bb35]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        switchInt(move _45) -> [0: bb29, otherwise: bb30]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _49 = &_50;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _47 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _48, move _49) -> [return: bb34, unwind: bb49]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _44 = move _47;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _72 = const _;                   // scope 7 at cita-network/src/node_manager.rs:422:32: 422:82
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:422:32: 422:82
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::translate_address, [], Some(promoted[1])) }
        _53 = _72 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/node_manager.rs:422:32: 422:82
        _52 = Arguments::<'_>::new_const(move _53) -> [return: bb36, unwind: bb49]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb36: {
        _71 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::translate_address, [], Some(promoted[0])) }
        _51 = log::__private_api_log(move _52, _43, _71) -> [return: bb51, unwind: bb49]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb37: {
        drop(_31) -> bb3;                // scope 2 at cita-network/src/node_manager.rs:424:17: 424:18
    }

    bb38: {
        _56 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb40;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _60 = &_55;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _62 = log::max_level() -> [return: bb42, unwind: bb48]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb40: {
        switchInt(move _56) -> [0: bb47, otherwise: bb44]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        switchInt(move _57) -> [0: bb38, otherwise: bb39]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb42: {
        _61 = &_62;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _59 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _60, move _61) -> [return: bb43, unwind: bb48]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb43: {
        _56 = move _59;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb40;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        _75 = const _;                   // scope 9 at cita-network/src/node_manager.rs:427:25: 427:85
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:427:25: 427:85
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManager::translate_address, [], Some(promoted[4])) }
        _65 = _75 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/node_manager.rs:427:25: 427:85
        _70 = &_54;                      // scope 9 at cita-network/src/node_manager.rs:428:25: 428:26
        _69 = core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>(_70) -> [return: bb45, unwind: bb48]; // scope 9 at cita-network/src/node_manager.rs:428:25: 428:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:428:25: 428:26
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::io::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>}, val: Value(<ZST>) }
    }

    bb45: {
        _68 = [move _69];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _67 = &_68;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _66 = _67 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _64 = Arguments::<'_>::new_v1(move _65, move _66) -> [return: bb46, unwind: bb48]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb46: {
        _74 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManager::translate_address, [], Some(promoted[3])) }
        _63 = log::__private_api_log(move _64, _55, _74) -> [return: bb52, unwind: bb48]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb47: {
        drop(_54) -> bb3;                // scope 2 at cita-network/src/node_manager.rs:430:17: 430:18
    }

    bb48 (cleanup): {
        drop(_54) -> bb50;               // scope 2 at cita-network/src/node_manager.rs:430:17: 430:18
    }

    bb49 (cleanup): {
        drop(_31) -> bb50;               // scope 2 at cita-network/src/node_manager.rs:424:17: 424:18
    }

    bb50 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:407:5: 433:6
    }

    bb51: {
        goto -> bb37;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb52: {
        goto -> bb47;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:422:25: 422:83
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:422:25: 422:83

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:422:25: 422:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:422:25: 422:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:422:25: 422:83
        _1 = (move _2, move _4, move _6, const 422_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:422:32: 422:82
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:422:32: 422:82

    bb0: {
        _1 = [const "[NodeManager] Can not convert to socket address!"]; // scope 0 at cita-network/src/node_manager.rs:422:32: 422:82
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:422:32: 422:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:422:32: 422:82
        return;                          // scope 0 at cita-network/src/node_manager.rs:422:32: 422:82
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:426:21: 429:22
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:426:21: 429:22

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:426:21: 429:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:426:21: 429:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:426:21: 429:22
        _1 = (move _2, move _4, move _6, const 426_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:427:25: 427:85
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:427:25: 427:85

    bb0: {
        _1 = [const "[NodeManager] Can not convert to socket address! error: "]; // scope 0 at cita-network/src/node_manager.rs:427:25: 427:85
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:427:25: 427:85
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:427:25: 427:85
        return;                          // scope 0 at cita-network/src/node_manager.rs:427:25: 427:85
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:411:17: 411:83
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:411:17: 411:83

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:411:17: 411:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:411:17: 411:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:411:17: 411:83
        _1 = (move _2, move _4, move _6, const 411_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:411:24: 411:77
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:411:24: 411:77

    bb0: {
        _1 = [const "[NodeManager] The Address ", const " has been translated."]; // scope 0 at cita-network/src/node_manager.rs:411:24: 411:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:411:24: 411:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:411:24: 411:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:411:24: 411:77
        return;                          // scope 0 at cita-network/src/node_manager.rs:411:24: 411:77
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:205:1: 205:18>::translate_address: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:436:10: 436:15>::clone(_1: &NodesManagerClient) -> NodesManagerClient {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:436:10: 436:15
    let mut _0: node_manager::NodesManagerClient; // return place in scope 0 at cita-network/src/node_manager.rs:436:10: 436:15
    let mut _2: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
    let _3: &pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40

    bb0: {
        _3 = &((*_1).0: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>); // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
        _2 = <pubsub::crossbeam_channel::Sender<NodesManagerMessage> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:438:5: 438:40
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<NodesManagerMessage>) -> pubsub::crossbeam_channel::Sender<NodesManagerMessage> {<pubsub::crossbeam_channel::Sender<NodesManagerMessage> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = NodesManagerClient { sender: move _2 }; // scope 0 at cita-network/src/node_manager.rs:436:10: 436:15
        return;                          // scope 0 at cita-network/src/node_manager.rs:436:15: 436:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:436:17: 436:22>::fmt(_1: &NodesManagerClient, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
    let _6: &&pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
    let _7: &pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:438:5: 438:40

    bb0: {
        _3 = const "NodesManagerClient"; // scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:436:17: 436:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "sender";             // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:438:5: 438:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &((*_1).0: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>); // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
        _6 = &_7;                        // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:438:5: 438:40
        _0 = std::fmt::Formatter::<'_>::debug_struct_field1_finish(_2, _3, _4, move _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:436:17: 436:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:436:17: 436:22
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:436:22: 436:22
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::new(_1: pubsub::crossbeam_channel::Sender<NodesManagerMessage>) -> NodesManagerClient {
    debug sender => _1;                  // in scope 0 at cita-network/src/node_manager.rs:442:16: 442:22
    let mut _0: node_manager::NodesManagerClient; // return place in scope 0 at cita-network/src/node_manager.rs:442:56: 442:60

    bb0: {
        _0 = NodesManagerClient { sender: move _1 }; // scope 0 at cita-network/src/node_manager.rs:443:9: 443:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:444:6: 444:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::add_node(_1: &NodesManagerClient, _2: AddNodeReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:446:21: 446:26
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:446:28: 446:31
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:446:45: 446:45
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:447:9: 447:60
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:447:23: 447:59

    bb0: {
        _4 = NodesManagerMessage::AddNodeReq(move _2); // scope 0 at cita-network/src/node_manager.rs:447:23: 447:59
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:447:9: 447:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:447:14: 447:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:448:6: 448:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::dialed_error(_1: &NodesManagerClient, _2: DialedErrorReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:450:25: 450:30
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:450:32: 450:35
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:450:53: 450:53
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:451:9: 451:64
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:451:23: 451:63

    bb0: {
        _4 = NodesManagerMessage::DialedErrorReq(move _2); // scope 0 at cita-network/src/node_manager.rs:451:23: 451:63
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:451:9: 451:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:451:14: 451:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:452:6: 452:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::connected_self(_1: &NodesManagerClient, _2: ConnectedSelfReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:454:27: 454:32
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:454:34: 454:37
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:454:57: 454:57
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:455:9: 455:63
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:455:23: 455:62

    bb0: {
        _4 = NodesManagerMessage::ConnectedSelf(move _2); // scope 0 at cita-network/src/node_manager.rs:455:23: 455:62
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:455:9: 455:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:455:14: 455:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:456:6: 456:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::get_random_nodes(_1: &NodesManagerClient, _2: GetRandomNodesReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:458:29: 458:34
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:458:36: 458:39
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:458:60: 458:60
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:459:9: 459:67
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:459:23: 459:66

    bb0: {
        _4 = NodesManagerMessage::GetRandomNodesReq(move _2); // scope 0 at cita-network/src/node_manager.rs:459:23: 459:66
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:459:9: 459:67
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:459:14: 459:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:460:6: 460:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::pending_connected_node(_1: &NodesManagerClient, _2: PendingConnectedNodeReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:462:35: 462:40
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:462:42: 462:45
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:462:72: 462:72
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:463:9: 463:73
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:463:23: 463:72

    bb0: {
        _4 = NodesManagerMessage::PendingConnectedNodeReq(move _2); // scope 0 at cita-network/src/node_manager.rs:463:23: 463:72
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:463:9: 463:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:463:14: 463:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:464:6: 464:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::del_connected_node(_1: &NodesManagerClient, _2: DelConnectedNodeReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:466:31: 466:36
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:466:38: 466:41
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:466:64: 466:64
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:467:9: 467:69
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:467:23: 467:68

    bb0: {
        _4 = NodesManagerMessage::DelConnectedNodeReq(move _2); // scope 0 at cita-network/src/node_manager.rs:467:23: 467:68
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:467:9: 467:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:467:14: 467:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:468:6: 468:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::add_repeated_node(_1: &NodesManagerClient, _2: AddRepeatedNodeReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:470:30: 470:35
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:470:37: 470:40
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:470:62: 470:62
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:471:9: 471:65
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:471:23: 471:64

    bb0: {
        _4 = NodesManagerMessage::AddRepeatedNode(move _2); // scope 0 at cita-network/src/node_manager.rs:471:23: 471:64
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:471:9: 471:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:471:14: 471:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:472:6: 472:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::broadcast(_1: &NodesManagerClient, _2: BroadcastReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:474:22: 474:27
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:474:29: 474:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:474:48: 474:48
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:475:9: 475:59
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:475:23: 475:58

    bb0: {
        _4 = NodesManagerMessage::Broadcast(move _2); // scope 0 at cita-network/src/node_manager.rs:475:23: 475:58
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:475:9: 475:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:475:14: 475:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:476:6: 476:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::retrans_net_msg(_1: &NodesManagerClient, _2: RetransNetMsgReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:478:28: 478:33
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:478:35: 478:38
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:478:58: 478:58
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:479:9: 479:63
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:479:23: 479:62

    bb0: {
        _4 = NodesManagerMessage::RetransNetMsg(move _2); // scope 0 at cita-network/src/node_manager.rs:479:23: 479:62
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:479:9: 479:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:479:14: 479:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:480:6: 480:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::send_message(_1: &NodesManagerClient, _2: SingleTxReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:482:25: 482:30
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:482:32: 482:35
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:482:50: 482:50
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:483:9: 483:61
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:483:23: 483:60

    bb0: {
        _4 = NodesManagerMessage::SingleTxReq(move _2); // scope 0 at cita-network/src/node_manager.rs:483:23: 483:60
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:483:9: 483:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:483:14: 483:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:484:6: 484:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::get_peer_count(_1: &NodesManagerClient, _2: GetPeerCountReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:486:27: 486:32
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:486:34: 486:37
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:486:56: 486:56
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:487:9: 487:62
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:487:23: 487:61

    bb0: {
        _4 = NodesManagerMessage::GetPeerCount(move _2); // scope 0 at cita-network/src/node_manager.rs:487:23: 487:61
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:487:9: 487:62
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:487:14: 487:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:488:6: 488:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::get_peers_info(_1: &NodesManagerClient, _2: GetPeersInfoReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:490:27: 490:32
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:490:34: 490:37
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:490:56: 490:56
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:491:9: 491:62
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:491:23: 491:61

    bb0: {
        _4 = NodesManagerMessage::GetPeersInfo(move _2); // scope 0 at cita-network/src/node_manager.rs:491:23: 491:61
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:491:9: 491:62
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:491:14: 491:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:492:6: 492:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::network_init(_1: &NodesManagerClient, _2: NetworkInitReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:494:25: 494:30
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:494:32: 494:35
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:494:53: 494:53
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:495:9: 495:61
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:495:23: 495:60

    bb0: {
        _4 = NodesManagerMessage::NetworkInit(move _2); // scope 0 at cita-network/src/node_manager.rs:495:23: 495:60
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:495:9: 495:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:495:14: 495:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:496:6: 496:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::add_connected_node(_1: &NodesManagerClient, _2: AddConnectedNodeReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:498:31: 498:36
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:498:38: 498:41
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:498:64: 498:64
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:499:9: 499:66
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:499:23: 499:65

    bb0: {
        _4 = NodesManagerMessage::AddConnectedNode(move _2); // scope 0 at cita-network/src/node_manager.rs:499:23: 499:65
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:499:9: 499:66
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:499:14: 499:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:500:6: 500:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::fix_modified_config(_1: &NodesManagerClient, _2: ModifiedConfigPeersReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:502:32: 502:37
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:502:39: 502:42
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:502:68: 502:68
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:503:9: 503:69
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:503:23: 503:68

    bb0: {
        _4 = NodesManagerMessage::ModifiedConfigPeers(move _2); // scope 0 at cita-network/src/node_manager.rs:503:23: 503:68
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:503:9: 503:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:503:14: 503:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:504:6: 504:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::deal_rich_status(_1: &NodesManagerClient, _2: DealRichStatusReq) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:506:29: 506:34
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:506:36: 506:39
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:506:60: 506:60
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:507:9: 507:64
    let mut _4: node_manager::NodesManagerMessage; // in scope 0 at cita-network/src/node_manager.rs:507:23: 507:63

    bb0: {
        _4 = NodesManagerMessage::DealRichStatus(move _2); // scope 0 at cita-network/src/node_manager.rs:507:23: 507:63
        _3 = NodesManagerClient::send_req(_1, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:507:9: 507:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:507:14: 507:22
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NodesManagerMessage) {NodesManagerClient::send_req}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:508:6: 508:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::send_req(_1: &NodesManagerClient, _2: NodesManagerMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:510:17: 510:22
    debug req => _2;                     // in scope 0 at cita-network/src/node_manager.rs:510:24: 510:27
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:510:50: 510:50
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<node_manager::NodesManagerMessage>>; // in scope 0 at cita-network/src/node_manager.rs:511:25: 511:50
    let mut _4: &pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:511:25: 511:50
    let mut _5: isize;                   // in scope 0 at cita-network/src/node_manager.rs:511:16: 511:22
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:513:17: 513:76
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:514:17: 514:18
    let _22: &pubsub::crossbeam_channel::TrySendError<node_manager::NodesManagerMessage>; // in scope 0 at cita-network/src/node_manager.rs:514:17: 514:18
    let mut _26: bool;                   // in scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
    let mut _27: isize;                  // in scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
    scope 1 {
        debug e => _6;                   // in scope 1 at cita-network/src/node_manager.rs:511:20: 511:21
        let _6: pubsub::crossbeam_channel::TrySendError<node_manager::NodesManagerMessage>; // in scope 1 at cita-network/src/node_manager.rs:511:20: 511:21
        let _7: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _7;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _23: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _24: &[&str; 1];     // in scope 2 at cita-network/src/node_manager.rs:513:17: 513:76
            let mut _25: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _26 = const false;               // scope 1 at cita-network/src/node_manager.rs:511:25: 511:50
        _4 = &((*_1).0: pubsub::crossbeam_channel::Sender<node_manager::NodesManagerMessage>); // scope 1 at cita-network/src/node_manager.rs:511:25: 511:50
        _3 = pubsub::crossbeam_channel::Sender::<NodesManagerMessage>::try_send(move _4, move _2) -> bb1; // scope 1 at cita-network/src/node_manager.rs:511:25: 511:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:511:37: 511:45
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<NodesManagerMessage>, NodesManagerMessage) -> Result<(), pubsub::crossbeam_channel::TrySendError<NodesManagerMessage>> {pubsub::crossbeam_channel::Sender::<NodesManagerMessage>::try_send}, val: Value(<ZST>) }
    }

    bb1: {
        _26 = const true;                // scope 1 at cita-network/src/node_manager.rs:511:49: 511:50
        _5 = discriminant(_3);           // scope 1 at cita-network/src/node_manager.rs:511:16: 511:22
        switchInt(move _5) -> [1: bb2, otherwise: bb18]; // scope 1 at cita-network/src/node_manager.rs:511:16: 511:22
    }

    bb2: {
        _26 = const false;               // scope 1 at cita-network/src/node_manager.rs:511:20: 511:21
        _6 = move ((_3 as Err).0: pubsub::crossbeam_channel::TrySendError<node_manager::NodesManagerMessage>); // scope 1 at cita-network/src/node_manager.rs:511:20: 511:21
        _7 = log::Level::Warn;           // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _10 = &_7;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _25 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NodesManagerClient::send_req, [], Some(promoted[2])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _25) -> [return: bb6, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _12 = &_7;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> [return: bb7, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _8) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _9) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _13 = &_14;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> [return: bb8, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _8 = move _11;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _24 = const _;                   // scope 2 at cita-network/src/node_manager.rs:513:17: 513:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:513:17: 513:76
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(NodesManagerClient::send_req, [], Some(promoted[1])) }
        _17 = _24 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/node_manager.rs:513:17: 513:76
        _22 = &_6;                       // scope 2 at cita-network/src/node_manager.rs:514:17: 514:18
        _21 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<NodesManagerMessage>>(_22) -> [return: bb10, unwind: bb13]; // scope 2 at cita-network/src/node_manager.rs:514:17: 514:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:514:17: 514:18
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<NodesManagerMessage>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<NodesManagerMessage>>}, val: Value(<ZST>) }
    }

    bb10: {
        _20 = [move _21];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = &_20;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = Arguments::<'_>::new_v1(move _17, move _18) -> [return: bb11, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _23 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NodesManagerClient::send_req, [], Some(promoted[0])) }
        _15 = log::__private_api_log(move _16, _7, _23) -> [return: bb19, unwind: bb13]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_6) -> bb18;                // scope 0 at cita-network/src/node_manager.rs:516:9: 516:10
    }

    bb13 (cleanup): {
        drop(_6) -> bb14;                // scope 0 at cita-network/src/node_manager.rs:516:9: 516:10
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:510:5: 517:6
    }

    bb15: {
        _26 = const false;               // scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:517:6: 517:6
    }

    bb16: {
        switchInt(_26) -> [0: bb15, otherwise: bb17]; // scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
    }

    bb17: {
        drop(((_3 as Err).0: pubsub::crossbeam_channel::TrySendError<node_manager::NodesManagerMessage>)) -> bb15; // scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
    }

    bb18: {
        _27 = discriminant(_3);          // scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
        switchInt(move _27) -> [1: bb16, otherwise: bb15]; // scope 0 at cita-network/src/node_manager.rs:517:5: 517:6
    }

    bb19: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::send_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:512:13: 515:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:512:13: 515:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:512:13: 515:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:512:13: 515:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:512:13: 515:14
        _1 = (move _2, move _4, move _6, const 512_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::send_req: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:513:17: 513:76
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:513:17: 513:76

    bb0: {
        _1 = [const "[NodesManager] Send message to node manager failed : "]; // scope 0 at cita-network/src/node_manager.rs:513:17: 513:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:513:17: 513:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:513:17: 513:76
        return;                          // scope 0 at cita-network/src/node_manager.rs:513:17: 513:76
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:441:1: 441:24>::send_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:540:1: 540:25>::handle(_1: NodesManagerMessage, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:541:19: 541:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:541:25: 541:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:541:53: 541:53
    let mut _3: isize;                   // in scope 0 at cita-network/src/node_manager.rs:543:13: 543:49
    let _4: node_manager::AddNodeReq;    // in scope 0 at cita-network/src/node_manager.rs:543:45: 543:48
    let _5: node_manager::DialedErrorReq; // in scope 0 at cita-network/src/node_manager.rs:544:49: 544:52
    let _6: node_manager::GetRandomNodesReq; // in scope 0 at cita-network/src/node_manager.rs:545:52: 545:55
    let _7: node_manager::PendingConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:546:58: 546:61
    let _8: node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:547:54: 547:57
    let _9: node_manager::BroadcastReq;  // in scope 0 at cita-network/src/node_manager.rs:548:44: 548:47
    let _10: node_manager::SingleTxReq;  // in scope 0 at cita-network/src/node_manager.rs:549:46: 549:49
    let _11: node_manager::GetPeerCountReq; // in scope 0 at cita-network/src/node_manager.rs:550:47: 550:50
    let _12: node_manager::NetworkInitReq; // in scope 0 at cita-network/src/node_manager.rs:551:46: 551:49
    let _13: node_manager::AddConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:552:51: 552:54
    let _14: node_manager::AddRepeatedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:553:50: 553:53
    let _15: node_manager::ConnectedSelfReq; // in scope 0 at cita-network/src/node_manager.rs:554:48: 554:51
    let _16: node_manager::GetPeersInfoReq; // in scope 0 at cita-network/src/node_manager.rs:555:47: 555:50
    let _17: node_manager::ModifiedConfigPeersReq; // in scope 0 at cita-network/src/node_manager.rs:556:54: 556:57
    let _18: node_manager::RetransNetMsgReq; // in scope 0 at cita-network/src/node_manager.rs:557:48: 557:51
    let _19: node_manager::DealRichStatusReq; // in scope 0 at cita-network/src/node_manager.rs:558:49: 558:52
    scope 1 {
        debug req => _4;                 // in scope 1 at cita-network/src/node_manager.rs:543:45: 543:48
    }
    scope 2 {
        debug req => _5;                 // in scope 2 at cita-network/src/node_manager.rs:544:49: 544:52
    }
    scope 3 {
        debug req => _6;                 // in scope 3 at cita-network/src/node_manager.rs:545:52: 545:55
    }
    scope 4 {
        debug req => _7;                 // in scope 4 at cita-network/src/node_manager.rs:546:58: 546:61
    }
    scope 5 {
        debug req => _8;                 // in scope 5 at cita-network/src/node_manager.rs:547:54: 547:57
    }
    scope 6 {
        debug req => _9;                 // in scope 6 at cita-network/src/node_manager.rs:548:44: 548:47
    }
    scope 7 {
        debug req => _10;                // in scope 7 at cita-network/src/node_manager.rs:549:46: 549:49
    }
    scope 8 {
        debug req => _11;                // in scope 8 at cita-network/src/node_manager.rs:550:47: 550:50
    }
    scope 9 {
        debug req => _12;                // in scope 9 at cita-network/src/node_manager.rs:551:46: 551:49
    }
    scope 10 {
        debug req => _13;                // in scope 10 at cita-network/src/node_manager.rs:552:51: 552:54
    }
    scope 11 {
        debug req => _14;                // in scope 11 at cita-network/src/node_manager.rs:553:50: 553:53
    }
    scope 12 {
        debug req => _15;                // in scope 12 at cita-network/src/node_manager.rs:554:48: 554:51
    }
    scope 13 {
        debug req => _16;                // in scope 13 at cita-network/src/node_manager.rs:555:47: 555:50
    }
    scope 14 {
        debug req => _17;                // in scope 14 at cita-network/src/node_manager.rs:556:54: 556:57
    }
    scope 15 {
        debug req => _18;                // in scope 15 at cita-network/src/node_manager.rs:557:48: 557:51
    }
    scope 16 {
        debug req => _19;                // in scope 16 at cita-network/src/node_manager.rs:558:49: 558:52
    }

    bb0: {
        _3 = discriminant(_1);           // scope 0 at cita-network/src/node_manager.rs:542:15: 542:19
        switchInt(move _3) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb17, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, 12: bb14, 13: bb15, 14: bb16, 15: bb1, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:542:9: 542:19
    }

    bb1: {
        _19 = move ((_1 as DealRichStatus).0: node_manager::DealRichStatusReq); // scope 0 at cita-network/src/node_manager.rs:558:49: 558:52
        _0 = DealRichStatusReq::handle(move _19, _2) -> bb18; // scope 16 at cita-network/src/node_manager.rs:558:57: 558:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:558:61: 558:67
                                         // + literal: Const { ty: for<'a> fn(DealRichStatusReq, &'a mut NodesManager) {DealRichStatusReq::handle}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-network/src/node_manager.rs:542:15: 542:19
    }

    bb3: {
        _4 = move ((_1 as AddNodeReq).0: node_manager::AddNodeReq); // scope 0 at cita-network/src/node_manager.rs:543:45: 543:48
        _0 = AddNodeReq::handle(move _4, _2) -> bb18; // scope 1 at cita-network/src/node_manager.rs:543:53: 543:72
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:543:57: 543:63
                                         // + literal: Const { ty: for<'a> fn(AddNodeReq, &'a mut NodesManager) {AddNodeReq::handle}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = move ((_1 as DialedErrorReq).0: node_manager::DialedErrorReq); // scope 0 at cita-network/src/node_manager.rs:544:49: 544:52
        _0 = DialedErrorReq::handle(move _5, _2) -> bb18; // scope 2 at cita-network/src/node_manager.rs:544:57: 544:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:544:61: 544:67
                                         // + literal: Const { ty: for<'a> fn(DialedErrorReq, &'a mut NodesManager) {DialedErrorReq::handle}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = move ((_1 as GetRandomNodesReq).0: node_manager::GetRandomNodesReq); // scope 0 at cita-network/src/node_manager.rs:545:52: 545:55
        _0 = GetRandomNodesReq::handle(move _6, _2) -> bb18; // scope 3 at cita-network/src/node_manager.rs:545:60: 545:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:545:64: 545:70
                                         // + literal: Const { ty: for<'a> fn(GetRandomNodesReq, &'a mut NodesManager) {GetRandomNodesReq::handle}, val: Value(<ZST>) }
    }

    bb6: {
        _7 = move ((_1 as PendingConnectedNodeReq).0: node_manager::PendingConnectedNodeReq); // scope 0 at cita-network/src/node_manager.rs:546:58: 546:61
        _0 = PendingConnectedNodeReq::handle(move _7, _2) -> bb18; // scope 4 at cita-network/src/node_manager.rs:546:66: 546:85
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:546:70: 546:76
                                         // + literal: Const { ty: for<'a> fn(PendingConnectedNodeReq, &'a mut NodesManager) {PendingConnectedNodeReq::handle}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = move ((_1 as DelConnectedNodeReq).0: node_manager::DelConnectedNodeReq); // scope 0 at cita-network/src/node_manager.rs:547:54: 547:57
        _0 = DelConnectedNodeReq::handle(move _8, _2) -> bb18; // scope 5 at cita-network/src/node_manager.rs:547:62: 547:81
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:547:66: 547:72
                                         // + literal: Const { ty: for<'a> fn(DelConnectedNodeReq, &'a mut NodesManager) {DelConnectedNodeReq::handle}, val: Value(<ZST>) }
    }

    bb8: {
        _9 = move ((_1 as Broadcast).0: node_manager::BroadcastReq); // scope 0 at cita-network/src/node_manager.rs:548:44: 548:47
        _0 = BroadcastReq::handle(move _9, _2) -> bb18; // scope 6 at cita-network/src/node_manager.rs:548:52: 548:71
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:548:56: 548:62
                                         // + literal: Const { ty: for<'a> fn(BroadcastReq, &'a mut NodesManager) {BroadcastReq::handle}, val: Value(<ZST>) }
    }

    bb9: {
        _10 = move ((_1 as SingleTxReq).0: node_manager::SingleTxReq); // scope 0 at cita-network/src/node_manager.rs:549:46: 549:49
        _0 = SingleTxReq::handle(move _10, _2) -> bb18; // scope 7 at cita-network/src/node_manager.rs:549:54: 549:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:549:58: 549:64
                                         // + literal: Const { ty: for<'a> fn(SingleTxReq, &'a mut NodesManager) {SingleTxReq::handle}, val: Value(<ZST>) }
    }

    bb10: {
        _11 = move ((_1 as GetPeerCount).0: node_manager::GetPeerCountReq); // scope 0 at cita-network/src/node_manager.rs:550:47: 550:50
        _0 = GetPeerCountReq::handle(move _11, _2) -> bb18; // scope 8 at cita-network/src/node_manager.rs:550:55: 550:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:550:59: 550:65
                                         // + literal: Const { ty: for<'a> fn(GetPeerCountReq, &'a mut NodesManager) {GetPeerCountReq::handle}, val: Value(<ZST>) }
    }

    bb11: {
        _12 = move ((_1 as NetworkInit).0: node_manager::NetworkInitReq); // scope 0 at cita-network/src/node_manager.rs:551:46: 551:49
        _0 = NetworkInitReq::handle(move _12, _2) -> bb18; // scope 9 at cita-network/src/node_manager.rs:551:54: 551:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:551:58: 551:64
                                         // + literal: Const { ty: for<'a> fn(NetworkInitReq, &'a mut NodesManager) {NetworkInitReq::handle}, val: Value(<ZST>) }
    }

    bb12: {
        _13 = move ((_1 as AddConnectedNode).0: node_manager::AddConnectedNodeReq); // scope 0 at cita-network/src/node_manager.rs:552:51: 552:54
        _0 = AddConnectedNodeReq::handle(move _13, _2) -> bb18; // scope 10 at cita-network/src/node_manager.rs:552:59: 552:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:552:63: 552:69
                                         // + literal: Const { ty: for<'a> fn(AddConnectedNodeReq, &'a mut NodesManager) {AddConnectedNodeReq::handle}, val: Value(<ZST>) }
    }

    bb13: {
        _14 = move ((_1 as AddRepeatedNode).0: node_manager::AddRepeatedNodeReq); // scope 0 at cita-network/src/node_manager.rs:553:50: 553:53
        _0 = AddRepeatedNodeReq::handle(move _14, _2) -> bb18; // scope 11 at cita-network/src/node_manager.rs:553:58: 553:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:553:62: 553:68
                                         // + literal: Const { ty: for<'a> fn(AddRepeatedNodeReq, &'a mut NodesManager) {AddRepeatedNodeReq::handle}, val: Value(<ZST>) }
    }

    bb14: {
        _15 = move ((_1 as ConnectedSelf).0: node_manager::ConnectedSelfReq); // scope 0 at cita-network/src/node_manager.rs:554:48: 554:51
        _0 = ConnectedSelfReq::handle(move _15, _2) -> bb18; // scope 12 at cita-network/src/node_manager.rs:554:56: 554:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:554:60: 554:66
                                         // + literal: Const { ty: for<'a> fn(ConnectedSelfReq, &'a mut NodesManager) {ConnectedSelfReq::handle}, val: Value(<ZST>) }
    }

    bb15: {
        _16 = move ((_1 as GetPeersInfo).0: node_manager::GetPeersInfoReq); // scope 0 at cita-network/src/node_manager.rs:555:47: 555:50
        _0 = GetPeersInfoReq::handle(move _16, _2) -> bb18; // scope 13 at cita-network/src/node_manager.rs:555:55: 555:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:555:59: 555:65
                                         // + literal: Const { ty: for<'a> fn(GetPeersInfoReq, &'a mut NodesManager) {GetPeersInfoReq::handle}, val: Value(<ZST>) }
    }

    bb16: {
        _17 = move ((_1 as ModifiedConfigPeers).0: node_manager::ModifiedConfigPeersReq); // scope 0 at cita-network/src/node_manager.rs:556:54: 556:57
        _0 = ModifiedConfigPeersReq::handle(move _17, _2) -> bb18; // scope 14 at cita-network/src/node_manager.rs:556:62: 556:81
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:556:66: 556:72
                                         // + literal: Const { ty: for<'a> fn(ModifiedConfigPeersReq, &'a mut NodesManager) {ModifiedConfigPeersReq::handle}, val: Value(<ZST>) }
    }

    bb17: {
        _18 = move ((_1 as RetransNetMsg).0: node_manager::RetransNetMsgReq); // scope 0 at cita-network/src/node_manager.rs:557:48: 557:51
        _0 = RetransNetMsgReq::handle(move _18, _2) -> bb18; // scope 15 at cita-network/src/node_manager.rs:557:56: 557:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:557:60: 557:66
                                         // + literal: Const { ty: for<'a> fn(RetransNetMsgReq, &'a mut NodesManager) {RetransNetMsgReq::handle}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:560:6: 560:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:563:10: 563:17>::default() -> InitMsg {
    let mut _0: node_manager::InitMsg;   // return place in scope 0 at cita-network/src/node_manager.rs:563:10: 563:17
    let mut _1: u64;                     // in scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
    let mut _2: cita_types::H160;        // in scope 0 at cita-network/src/node_manager.rs:566:5: 566:26

    bb0: {
        _1 = <u64 as Default>::default() -> bb1; // scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:565:5: 565:22
                                         // + literal: Const { ty: fn() -> u64 {<u64 as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <H160 as Default>::default() -> bb2; // scope 0 at cita-network/src/node_manager.rs:566:5: 566:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:566:5: 566:26
                                         // + literal: Const { ty: fn() -> H160 {<H160 as Default>::default}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = InitMsg { chain_id: move _1, peer_key: move _2 }; // scope 0 at cita-network/src/node_manager.rs:563:10: 563:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:563:17: 563:17
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:563:19: 563:24>::clone(_1: &InitMsg) -> InitMsg {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:563:19: 563:24
    let mut _0: node_manager::InitMsg;   // return place in scope 0 at cita-network/src/node_manager.rs:563:19: 563:24
    let mut _2: u64;                     // in scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
    let _3: &u64;                        // in scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
    let mut _4: cita_types::H160;        // in scope 0 at cita-network/src/node_manager.rs:566:5: 566:26
    let _5: &cita_types::H160;           // in scope 0 at cita-network/src/node_manager.rs:566:5: 566:26

    bb0: {
        _3 = &((*_1).0: u64);            // scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
        _2 = (*_3);                      // scope 0 at cita-network/src/node_manager.rs:565:5: 565:22
        _5 = &((*_1).1: cita_types::H160); // scope 0 at cita-network/src/node_manager.rs:566:5: 566:26
        _4 = <H160 as Clone>::clone(_5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:566:5: 566:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:566:5: 566:26
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> H160 {<H160 as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = InitMsg { chain_id: move _2, peer_key: move _4 }; // scope 0 at cita-network/src/node_manager.rs:563:19: 563:24
        return;                          // scope 0 at cita-network/src/node_manager.rs:563:24: 563:24
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:569:1: 569:31>::into(_1: InitMsg) -> Vec<u8> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:570:13: 570:17
    let mut _0: std::vec::Vec<u8>;       // return place in scope 0 at cita-network/src/node_manager.rs:571:13: 571:20
    let _4: ();                          // in scope 0 at cita-network/src/node_manager.rs:574:9: 574:69
    let mut _5: std::result::Result<(), std::io::Error>; // in scope 0 at cita-network/src/node_manager.rs:574:9: 574:60
    let mut _6: &mut std::vec::Vec<u8>;  // in scope 0 at cita-network/src/node_manager.rs:574:9: 574:60
    let mut _7: u64;                     // in scope 0 at cita-network/src/node_manager.rs:574:46: 574:59
    let _8: ();                          // in scope 0 at cita-network/src/node_manager.rs:575:9: 575:49
    let mut _9: &cita_types::H160;       // in scope 0 at cita-network/src/node_manager.rs:575:9: 575:49
    let mut _10: &mut [u8];              // in scope 0 at cita-network/src/node_manager.rs:575:31: 575:48
    let mut _11: &mut [u8];              // in scope 0 at cita-network/src/node_manager.rs:575:36: 575:48
    let mut _12: &mut [u8; 20];          // in scope 0 at cita-network/src/node_manager.rs:575:36: 575:44
    let _13: ();                         // in scope 0 at cita-network/src/node_manager.rs:577:9: 577:46
    let mut _14: &mut std::vec::Vec<u8>; // in scope 0 at cita-network/src/node_manager.rs:577:9: 577:46
    let mut _15: &[u8];                  // in scope 0 at cita-network/src/node_manager.rs:577:31: 577:45
    let _16: &[u8];                      // in scope 0 at cita-network/src/node_manager.rs:577:31: 577:45
    let _17: &std::vec::Vec<u8>;         // in scope 0 at cita-network/src/node_manager.rs:577:31: 577:45
    let _18: ();                         // in scope 0 at cita-network/src/node_manager.rs:578:9: 578:41
    let mut _19: &mut std::vec::Vec<u8>; // in scope 0 at cita-network/src/node_manager.rs:578:9: 578:41
    let mut _20: &[u8];                  // in scope 0 at cita-network/src/node_manager.rs:578:31: 578:40
    let _21: &[u8; 20];                  // in scope 0 at cita-network/src/node_manager.rs:578:31: 578:40
    let mut _22: bool;                   // in scope 0 at cita-network/src/node_manager.rs:580:5: 580:6
    scope 1 {
        debug out => _0;                 // in scope 1 at cita-network/src/node_manager.rs:571:13: 571:20
        let mut _2: [u8; 20];            // in scope 1 at cita-network/src/node_manager.rs:572:13: 572:25
        scope 2 {
            debug key_data => _2;        // in scope 2 at cita-network/src/node_manager.rs:572:13: 572:25
            let mut _3: std::vec::Vec<u8>; // in scope 2 at cita-network/src/node_manager.rs:573:13: 573:30
            scope 3 {
                debug chain_id_data => _3; // in scope 3 at cita-network/src/node_manager.rs:573:13: 573:30
            }
        }
    }

    bb0: {
        _22 = const false;               // scope 0 at cita-network/src/node_manager.rs:571:13: 571:20
        _22 = const true;                // scope 0 at cita-network/src/node_manager.rs:571:23: 571:33
        _0 = Vec::<u8>::new() -> bb1;    // scope 0 at cita-network/src/node_manager.rs:571:23: 571:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:571:23: 571:31
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<u8> {Vec::<u8>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <[u8; 20] as Default>::default() -> [return: bb2, unwind: bb15]; // scope 1 at cita-network/src/node_manager.rs:572:38: 572:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:572:38: 572:54
                                         // + literal: Const { ty: fn() -> [u8; 20] {<[u8; 20] as Default>::default}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = Vec::<u8>::new() -> [return: bb3, unwind: bb15]; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn() -> Vec<u8> {Vec::<u8>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = &mut _3;                    // scope 3 at cita-network/src/node_manager.rs:574:9: 574:60
        _7 = (_1.0: u64);                // scope 3 at cita-network/src/node_manager.rs:574:46: 574:59
        _5 = <Vec<u8> as WriteBytesExt>::write_u64::<BigEndian>(move _6, move _7) -> [return: bb4, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:574:9: 574:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:574:23: 574:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u8>, u64) -> Result<(), std::io::Error> {<Vec<u8> as WriteBytesExt>::write_u64::<BigEndian>}, val: Value(<ZST>) }
    }

    bb4: {
        _4 = Result::<(), std::io::Error>::unwrap(move _5) -> [return: bb5, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:574:9: 574:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:574:61: 574:67
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = &(_1.1: cita_types::H160);  // scope 3 at cita-network/src/node_manager.rs:575:9: 575:49
        _12 = &mut _2;                   // scope 3 at cita-network/src/node_manager.rs:575:36: 575:44
        _11 = <[u8; 20] as IndexMut<RangeFull>>::index_mut(move _12, const RangeFull) -> [return: bb6, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:575:36: 575:48
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:575:36: 575:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut [u8; 20], RangeFull) -> &'a mut <[u8; 20] as std::ops::Index<RangeFull>>::Output {<[u8; 20] as IndexMut<RangeFull>>::index_mut}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFull, val: Value(<ZST>) }
    }

    bb6: {
        _10 = _11;                       // scope 3 at cita-network/src/node_manager.rs:575:31: 575:48
        _8 = H160::copy_to(move _9, _10) -> [return: bb7, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:575:9: 575:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:575:23: 575:30
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b mut [u8]) {H160::copy_to}, val: Value(<ZST>) }
    }

    bb7: {
        _14 = &mut _0;                   // scope 3 at cita-network/src/node_manager.rs:577:9: 577:46
        _17 = &_3;                       // scope 3 at cita-network/src/node_manager.rs:577:31: 577:45
        _16 = <Vec<u8> as Deref>::deref(_17) -> [return: bb8, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:577:31: 577:45
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:577:31: 577:45
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _15 = _16;                       // scope 3 at cita-network/src/node_manager.rs:577:31: 577:45
        _13 = Vec::<u8>::extend_from_slice(move _14, move _15) -> [return: bb9, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:577:9: 577:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:577:13: 577:30
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Vec<u8>, &'b [u8]) {Vec::<u8>::extend_from_slice}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = &mut _0;                   // scope 3 at cita-network/src/node_manager.rs:578:9: 578:41
        _21 = &_2;                       // scope 3 at cita-network/src/node_manager.rs:578:31: 578:40
        _20 = _21 as &[u8] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:578:31: 578:40
        _18 = Vec::<u8>::extend_from_slice(move _19, move _20) -> [return: bb10, unwind: bb12]; // scope 3 at cita-network/src/node_manager.rs:578:9: 578:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:578:13: 578:30
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Vec<u8>, &'b [u8]) {Vec::<u8>::extend_from_slice}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = const false;               // scope 3 at cita-network/src/node_manager.rs:579:9: 579:12
        drop(_3) -> [return: bb11, unwind: bb15]; // scope 2 at cita-network/src/node_manager.rs:580:5: 580:6
    }

    bb11: {
        _22 = const false;               // scope 0 at cita-network/src/node_manager.rs:580:5: 580:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:580:6: 580:6
    }

    bb12 (cleanup): {
        drop(_3) -> bb15;                // scope 2 at cita-network/src/node_manager.rs:580:5: 580:6
    }

    bb13 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:570:5: 580:6
    }

    bb14 (cleanup): {
        drop(_0) -> bb13;                // scope 0 at cita-network/src/node_manager.rs:580:5: 580:6
    }

    bb15 (cleanup): {
        switchInt(_22) -> [0: bb13, otherwise: bb14]; // scope 0 at cita-network/src/node_manager.rs:580:5: 580:6
    }
}

node_manager::<impl at cita-network/src/node_manager.rs:569:1: 569:31>::into::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/node_manager.rs:572:32: 572:34

    bb0: {
        _0 = const 20_usize;             // scope 0 at cita-network/src/node_manager.rs:572:32: 572:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:572:32: 572:34
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:583:1: 583:31>::from(_1: Vec<u8>) -> InitMsg {
    debug data => _1;                    // in scope 0 at cita-network/src/node_manager.rs:584:13: 584:17
    let mut _0: node_manager::InitMsg;   // return place in scope 0 at cita-network/src/node_manager.rs:584:31: 584:38
    let mut _2: [u8; 8];                 // in scope 0 at cita-network/src/node_manager.rs:585:13: 585:30
    let _3: ();                          // in scope 0 at cita-network/src/node_manager.rs:586:9: 586:50
    let mut _4: &mut [u8];               // in scope 0 at cita-network/src/node_manager.rs:586:9: 586:50
    let mut _5: &mut [u8; 8];            // in scope 0 at cita-network/src/node_manager.rs:586:9: 586:50
    let _6: &[u8];                       // in scope 0 at cita-network/src/node_manager.rs:586:39: 586:49
    let _7: &[u8];                       // in scope 0 at cita-network/src/node_manager.rs:586:40: 586:49
    let mut _8: &std::vec::Vec<u8>;      // in scope 0 at cita-network/src/node_manager.rs:586:40: 586:44
    let mut _9: std::ops::RangeTo<usize>; // in scope 0 at cita-network/src/node_manager.rs:586:45: 586:48
    let mut _11: [u8; 8];                // in scope 0 at cita-network/src/node_manager.rs:587:45: 587:58
    let mut _13: std::result::Result<u64, std::io::Error>; // in scope 0 at cita-network/src/node_manager.rs:588:24: 588:61
    let mut _14: &mut std::io::Cursor<[u8; 8]>; // in scope 0 at cita-network/src/node_manager.rs:588:24: 588:61
    let _16: &[u8];                      // in scope 0 at cita-network/src/node_manager.rs:589:44: 589:54
    let _17: &[u8];                      // in scope 0 at cita-network/src/node_manager.rs:589:45: 589:54
    let mut _18: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/node_manager.rs:589:45: 589:49
    let mut _19: std::ops::RangeFrom<usize>; // in scope 0 at cita-network/src/node_manager.rs:589:50: 589:53
    let mut _20: u64;                    // in scope 0 at cita-network/src/node_manager.rs:591:19: 591:27
    let mut _21: cita_types::H160;       // in scope 0 at cita-network/src/node_manager.rs:591:29: 591:37
    scope 1 {
        debug chain_id_data => _2;       // in scope 1 at cita-network/src/node_manager.rs:585:13: 585:30
        let mut _10: std::io::Cursor<[u8; 8]>; // in scope 1 at cita-network/src/node_manager.rs:587:13: 587:30
        scope 2 {
            debug chain_id_data => _10;  // in scope 2 at cita-network/src/node_manager.rs:587:13: 587:30
            let _12: u64;                // in scope 2 at cita-network/src/node_manager.rs:588:13: 588:21
            scope 3 {
                debug chain_id => _12;   // in scope 3 at cita-network/src/node_manager.rs:588:13: 588:21
                let _15: cita_types::H160; // in scope 3 at cita-network/src/node_manager.rs:589:13: 589:21
                scope 4 {
                    debug peer_key => _15; // in scope 4 at cita-network/src/node_manager.rs:589:13: 589:21
                }
            }
        }
    }

    bb0: {
        _2 = <[u8; 8] as Default>::default() -> [return: bb1, unwind: bb10]; // scope 0 at cita-network/src/node_manager.rs:585:42: 585:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:585:42: 585:58
                                         // + literal: Const { ty: fn() -> [u8; 8] {<[u8; 8] as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &mut _2;                    // scope 1 at cita-network/src/node_manager.rs:586:9: 586:50
        _4 = move _5 as &mut [u8] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:586:9: 586:50
        _8 = &_1;                        // scope 1 at cita-network/src/node_manager.rs:586:40: 586:44
        _9 = const RangeTo::<usize> {{ end: 8_usize }}; // scope 1 at cita-network/src/node_manager.rs:586:45: 586:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeTo<usize>, val: Value(Scalar(0x0000000000000008)) }
        _7 = <Vec<u8> as std::ops::Index<RangeTo<usize>>>::index(move _8, move _9) -> [return: bb2, unwind: bb10]; // scope 1 at cita-network/src/node_manager.rs:586:40: 586:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:586:40: 586:49
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>, RangeTo<usize>) -> &'a <Vec<u8> as std::ops::Index<RangeTo<usize>>>::Output {<Vec<u8> as std::ops::Index<RangeTo<usize>>>::index}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = _7;                         // scope 1 at cita-network/src/node_manager.rs:586:39: 586:49
        _3 = core::slice::<impl [u8]>::copy_from_slice(move _4, _6) -> [return: bb3, unwind: bb10]; // scope 1 at cita-network/src/node_manager.rs:586:9: 586:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:586:23: 586:38
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut [u8], &'b [u8]) {core::slice::<impl [u8]>::copy_from_slice}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = _2;                        // scope 1 at cita-network/src/node_manager.rs:587:45: 587:58
        _10 = std::io::Cursor::<[u8; 8]>::new(move _11) -> [return: bb4, unwind: bb10]; // scope 1 at cita-network/src/node_manager.rs:587:33: 587:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:587:33: 587:44
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn([u8; 8]) -> std::io::Cursor<[u8; 8]> {std::io::Cursor::<[u8; 8]>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = &mut _10;                  // scope 2 at cita-network/src/node_manager.rs:588:24: 588:61
        _13 = <std::io::Cursor<[u8; 8]> as ReadBytesExt>::read_u64::<BigEndian>(move _14) -> [return: bb5, unwind: bb10]; // scope 2 at cita-network/src/node_manager.rs:588:24: 588:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:588:38: 588:46
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::io::Cursor<[u8; 8]>) -> Result<u64, std::io::Error> {<std::io::Cursor<[u8; 8]> as ReadBytesExt>::read_u64::<BigEndian>}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = Result::<u64, std::io::Error>::unwrap(move _13) -> [return: bb6, unwind: bb10]; // scope 2 at cita-network/src/node_manager.rs:588:24: 588:70
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:588:62: 588:68
                                         // + literal: Const { ty: fn(Result<u64, std::io::Error>) -> u64 {Result::<u64, std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _18 = &_1;                       // scope 3 at cita-network/src/node_manager.rs:589:45: 589:49
        _19 = const RangeFrom::<usize> {{ start: 8_usize }}; // scope 3 at cita-network/src/node_manager.rs:589:50: 589:53
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFrom<usize>, val: Value(Scalar(0x0000000000000008)) }
        _17 = <Vec<u8> as std::ops::Index<RangeFrom<usize>>>::index(move _18, move _19) -> [return: bb7, unwind: bb10]; // scope 3 at cita-network/src/node_manager.rs:589:45: 589:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:589:45: 589:54
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>, RangeFrom<usize>) -> &'a <Vec<u8> as std::ops::Index<RangeFrom<usize>>>::Output {<Vec<u8> as std::ops::Index<RangeFrom<usize>>>::index}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = _17;                       // scope 3 at cita-network/src/node_manager.rs:589:44: 589:54
        _15 = H160::from_slice(_16) -> [return: bb8, unwind: bb10]; // scope 3 at cita-network/src/node_manager.rs:589:24: 589:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:589:24: 589:43
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H160 {H160::from_slice}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = _12;                       // scope 4 at cita-network/src/node_manager.rs:591:19: 591:27
        _21 = _15;                       // scope 4 at cita-network/src/node_manager.rs:591:29: 591:37
        _0 = InitMsg { chain_id: move _20, peer_key: move _21 }; // scope 4 at cita-network/src/node_manager.rs:591:9: 591:39
        drop(_1) -> bb9;                 // scope 0 at cita-network/src/node_manager.rs:592:5: 592:6
    }

    bb9: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:592:6: 592:6
    }

    bb10 (cleanup): {
        drop(_1) -> bb11;                // scope 0 at cita-network/src/node_manager.rs:592:5: 592:6
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:584:5: 592:6
    }
}

node_manager::<impl at cita-network/src/node_manager.rs:583:1: 583:31>::from::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/node_manager.rs:585:37: 585:38

    bb0: {
        _0 = const 8_usize;              // scope 0 at cita-network/src/node_manager.rs:585:37: 585:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:585:37: 585:38
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::new(_1: SessionId, _2: tentacle::service::SessionType, _3: InitMsg) -> AddConnectedNodeReq {
    debug session_id => _1;              // in scope 0 at cita-network/src/node_manager.rs:602:16: 602:26
    debug ty => _2;                      // in scope 0 at cita-network/src/node_manager.rs:602:39: 602:41
    debug init_msg => _3;                // in scope 0 at cita-network/src/node_manager.rs:602:56: 602:64
    let mut _0: node_manager::AddConnectedNodeReq; // return place in scope 0 at cita-network/src/node_manager.rs:602:78: 602:82

    bb0: {
        _0 = AddConnectedNodeReq { session_id: _1, ty: _2, init_msg: move _3 }; // scope 0 at cita-network/src/node_manager.rs:603:9: 607:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:608:6: 608:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle(_1: AddConnectedNodeReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:610:19: 610:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:610:25: 610:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:610:53: 610:53
    let mut _3: std::option::Option<&tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:611:36: 611:92
    let mut _4: &std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:611:36: 611:92
    let _5: &cita_types::H160;           // in scope 0 at cita-network/src/node_manager.rs:611:68: 611:91
    let mut _6: isize;                   // in scope 0 at cita-network/src/node_manager.rs:611:16: 611:33
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _14: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _16: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:618:17: 618:98
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _21: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:619:17: 619:32
    let _23: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:619:17: 619:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:619:34: 619:46
    let mut _25: isize;                  // in scope 0 at cita-network/src/node_manager.rs:623:20: 623:38
    let mut _27: bool;                   // in scope 0 at cita-network/src/node_manager.rs:624:20: 624:52
    let mut _28: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:624:20: 624:27
    let mut _29: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:625:56: 625:98
    let mut _30: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:625:56: 625:98
    let _31: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:625:84: 625:97
    let mut _32: isize;                  // in scope 0 at cita-network/src/node_manager.rs:625:28: 625:53
    let mut _34: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:626:50: 626:68
    let mut _35: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:626:55: 626:67
    let mut _36: (i32, bool);            // in scope 0 at cita-network/src/node_manager.rs:627:25: 627:67
    let mut _37: std::collections::btree_map::Entry<'_, tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:629:33: 631:27
    let mut _38: std::collections::btree_map::Entry<'_, tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:629:33: 629:76
    let mut _39: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:629:33: 629:76
    let mut _40: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:629:63: 629:75
    let mut _41: [closure@cita-network/src/node_manager.rs:629:88: 629:91]; // in scope 0 at cita-network/src/node_manager.rs:629:88: 631:26
    let mut _42: &std::net::SocketAddr;  // in scope 0 at cita-network/src/node_manager.rs:629:88: 631:26
    let mut _43: isize;                  // in scope 0 at cita-network/src/node_manager.rs:636:20: 636:38
    let mut _45: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:637:25: 637:57
    let mut _46: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:637:25: 637:57
    let mut _47: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:637:41: 637:56
    let mut _48: bool;                   // in scope 0 at cita-network/src/node_manager.rs:639:19: 639:61
    let mut _49: &cita_types::H160;      // in scope 0 at cita-network/src/node_manager.rs:639:19: 639:35
    let mut _50: &cita_types::H160;      // in scope 0 at cita-network/src/node_manager.rs:639:39: 639:61
    let mut _51: isize;                  // in scope 0 at cita-network/src/node_manager.rs:646:20: 646:38
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _55: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _56: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _57: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _58: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _59: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _60: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _61: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _62: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _63: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:648:21: 648:80
    let mut _64: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _65: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _66: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _67: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:649:21: 649:33
    let _68: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:649:21: 649:33
    let mut _69: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:651:37: 651:55
    let mut _70: isize;                  // in scope 0 at cita-network/src/node_manager.rs:652:24: 652:42
    let mut _72: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:653:29: 653:61
    let mut _73: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:653:29: 653:61
    let mut _74: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:653:45: 653:60
    let mut _75: std::option::Option<node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:660:41: 660:97
    let mut _76: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:660:41: 660:97
    let _77: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:660:80: 660:96
    let mut _78: isize;                  // in scope 0 at cita-network/src/node_manager.rs:660:20: 660:38
    let mut _81: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _82: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _83: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _84: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _85: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _86: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _87: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _88: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _89: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _90: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:662:21: 662:90
    let mut _91: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _92: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _93: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _94: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:663:21: 663:36
    let _95: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:663:21: 663:36
    let mut _96: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:663:38: 663:55
    let _97: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:663:38: 663:55
    let mut _98: std::option::Option<node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:665:25: 667:90
    let mut _99: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:665:25: 667:90
    let mut _100: tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:667:29: 667:44
    let mut _101: node_manager::TransformAddr; // in scope 0 at cita-network/src/node_manager.rs:667:46: 667:89
    let mut _102: std::net::SocketAddr;  // in scope 0 at cita-network/src/node_manager.rs:667:65: 667:82
    let mut _103: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:667:84: 667:88
    let mut _104: bool;                  // in scope 0 at cita-network/src/node_manager.rs:670:20: 670:52
    let mut _105: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:670:20: 670:27
    let mut _106: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:672:25: 672:72
    let mut _107: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:672:25: 672:72
    let _108: &std::net::SocketAddr;     // in scope 0 at cita-network/src/node_manager.rs:672:53: 672:71
    let mut _109: isize;                 // in scope 0 at cita-network/src/node_manager.rs:671:28: 671:53
    let mut _111: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:674:50: 674:71
    let mut _112: tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:674:55: 674:70
    let mut _113: (i32, bool);           // in scope 0 at cita-network/src/node_manager.rs:675:25: 675:67
    let mut _114: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:682:21: 684:65
    let mut _115: &mut std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:682:21: 684:65
    let mut _116: cita_types::H160;      // in scope 0 at cita-network/src/node_manager.rs:684:25: 684:47
    let mut _117: tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:684:49: 684:64
    let _118: ();                        // in scope 0 at cita-network/src/node_manager.rs:685:13: 687:58
    let mut _119: &mut node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:685:13: 687:58
    let mut _120: cita_types::H160;      // in scope 0 at cita-network/src/node_manager.rs:687:35: 687:57
    let mut _122: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _123: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _124: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _125: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _126: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _127: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _128: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _129: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _130: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _131: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:690:17: 690:59
    let mut _132: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _133: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _134: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _135: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:691:17: 691:40
    let _136: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:691:17: 691:40
    let mut _138: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _139: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _140: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _141: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _142: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _143: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _144: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _145: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _146: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _147: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:693:19: 693:57
    let mut _148: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _149: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _150: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _151: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:693:59: 693:78
    let _152: &std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:693:59: 693:78
    let mut _154: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _155: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _156: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _157: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _158: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _159: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _160: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _161: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _162: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _163: &[&str];               // in scope 0 at cita-network/src/node_manager.rs:696:17: 696:60
    let mut _164: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _165: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _166: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _167: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:697:17: 697:44
    let _168: &std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:697:17: 697:44
    let mut _169: bool;                  // in scope 0 at cita-network/src/node_manager.rs:702:12: 702:44
    let mut _170: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:702:12: 702:19
    let mut _171: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:703:36: 703:40
    let mut _172: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
    let mut _193: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:625:33: 625:52
    let mut _194: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:625:33: 625:52
    let mut _195: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:625:33: 625:52
    let mut _196: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:625:33: 625:52
    let mut _197: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:671:33: 671:52
    let mut _198: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:671:33: 671:52
    let mut _199: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:671:33: 671:52
    let mut _200: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:671:33: 671:52
    scope 1 {
        debug repeated_id => _7;         // in scope 1 at cita-network/src/node_manager.rs:611:21: 611:32
        let _7: &tentacle::SessionId;    // in scope 1 at cita-network/src/node_manager.rs:611:21: 611:32
        let _8: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _8;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _174: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _175: &[&str; 3];    // in scope 2 at cita-network/src/node_manager.rs:618:17: 618:98
            let mut _176: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug dialing_addr => _26;   // in scope 3 at cita-network/src/node_manager.rs:623:25: 623:37
            let _26: std::net::SocketAddr; // in scope 3 at cita-network/src/node_manager.rs:623:25: 623:37
            let mut _173: &tentacle::service::SessionType; // in scope 3 at cita-network/src/node_manager.rs:624:31: 624:52
            scope 4 {
                debug node_status => _33; // in scope 4 at cita-network/src/node_manager.rs:625:33: 625:52
                let _33: &mut &mut node_manager::NodeStatus; // in scope 4 at cita-network/src/node_manager.rs:625:33: 625:52
                scope 5 {
                }
            }
        }
        scope 6 {
            debug ctrl => _44;           // in scope 6 at cita-network/src/node_manager.rs:636:25: 636:37
            let _44: &mut tentacle::service::ServiceControl; // in scope 6 at cita-network/src/node_manager.rs:636:25: 636:37
            scope 7 {
            }
        }
    }
    scope 8 {
        debug dialing_node => _52;       // in scope 8 at cita-network/src/node_manager.rs:646:25: 646:37
        let _52: std::net::SocketAddr;   // in scope 8 at cita-network/src/node_manager.rs:646:25: 646:37
        let _53: log::Level;             // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 9 {
            debug lvl => _53;            // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _190: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _191: &[&str; 2];    // in scope 9 at cita-network/src/node_manager.rs:648:21: 648:80
            let mut _192: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 10 {
            debug ctrl => _71;           // in scope 10 at cita-network/src/node_manager.rs:652:29: 652:41
            let _71: &mut tentacle::service::ServiceControl; // in scope 10 at cita-network/src/node_manager.rs:652:29: 652:41
            scope 11 {
            }
        }
    }
    scope 12 {
        debug session_info => _79;       // in scope 12 at cita-network/src/node_manager.rs:660:25: 660:37
        let _79: node_manager::SessionInfo; // in scope 12 at cita-network/src/node_manager.rs:660:25: 660:37
        let _80: log::Level;             // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 13 {
            debug lvl => _80;            // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _187: &(&str, &str, &str, u32); // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _188: &[&str; 3];    // in scope 13 at cita-network/src/node_manager.rs:662:21: 662:90
            let mut _189: &log::LevelFilter; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 14 {
            let mut _186: &tentacle::service::SessionType; // in scope 14 at cita-network/src/node_manager.rs:670:31: 670:52
            scope 15 {
                debug node_status => _110; // in scope 15 at cita-network/src/node_manager.rs:671:33: 671:52
                let _110: &mut &mut node_manager::NodeStatus; // in scope 15 at cita-network/src/node_manager.rs:671:33: 671:52
            }
        }
    }
    scope 16 {
        let _121: log::Level;            // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _137: log::Level;            // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _153: log::Level;            // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 17 {
            debug lvl => _121;           // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _183: &(&str, &str, &str, u32); // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _184: &[&str; 1];    // in scope 17 at cita-network/src/node_manager.rs:690:17: 690:59
            let mut _185: &log::LevelFilter; // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 18 {
            debug lvl => _137;           // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _180: &(&str, &str, &str, u32); // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _181: &[&str; 1];    // in scope 18 at cita-network/src/node_manager.rs:693:19: 693:57
            let mut _182: &log::LevelFilter; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 19 {
            debug lvl => _153;           // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _177: &(&str, &str, &str, u32); // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _178: &[&str; 1];    // in scope 19 at cita-network/src/node_manager.rs:696:17: 696:60
            let mut _179: &log::LevelFilter; // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = &((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 1 at cita-network/src/node_manager.rs:611:36: 611:92
        _5 = &((_1.2: node_manager::InitMsg).1: cita_types::H160); // scope 1 at cita-network/src/node_manager.rs:611:68: 611:91
        _3 = BTreeMap::<H160, SessionId>::get::<H160>(move _4, _5) -> bb1; // scope 1 at cita-network/src/node_manager.rs:611:36: 611:92
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:611:64: 611:67
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<H160, SessionId>, &'b H160) -> std::option::Option<&'a SessionId> {BTreeMap::<H160, SessionId>::get::<H160>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_3);           // scope 1 at cita-network/src/node_manager.rs:611:16: 611:33
        switchInt(move _6) -> [1: bb2, otherwise: bb24]; // scope 1 at cita-network/src/node_manager.rs:611:16: 611:33
    }

    bb2: {
        _7 = ((_3 as Some).0: &tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:611:21: 611:32
        _8 = log::Level::Info;           // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _11 = &_8;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _176 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[4])) }
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, _176) -> bb6; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _13 = &_8;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _15 = log::max_level() -> bb7;   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _9) -> [0: bb13, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _10) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _14 = &_15;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, move _14) -> bb8; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _9 = move _12;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _175 = const _;                  // scope 2 at cita-network/src/node_manager.rs:618:17: 618:98
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:618:17: 618:98
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[3])) }
        _18 = _175 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/node_manager.rs:618:17: 618:98
        _23 = &(_1.0: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:619:17: 619:32
        _22 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_23) -> bb10; // scope 2 at cita-network/src/node_manager.rs:619:17: 619:32
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:619:17: 619:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb10: {
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_7) -> bb11; // scope 2 at cita-network/src/node_manager.rs:619:34: 619:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:619:34: 619:46
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb11: {
        _21 = [move _22, move _24];      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _20 = &_21;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = Arguments::<'_>::new_v1(move _18, move _19) -> bb12; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _174 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[2])) }
        _16 = log::__private_api_log(move _17, _8, _174) -> bb13; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _25 = discriminant(((*_2).14: std::option::Option<std::net::SocketAddr>)); // scope 3 at cita-network/src/node_manager.rs:623:20: 623:38
        switchInt(move _25) -> [1: bb14, otherwise: bb21]; // scope 3 at cita-network/src/node_manager.rs:623:20: 623:38
    }

    bb14: {
        _26 = ((((*_2).14: std::option::Option<std::net::SocketAddr>) as Some).0: std::net::SocketAddr); // scope 3 at cita-network/src/node_manager.rs:623:25: 623:37
        _28 = &(_1.1: tentacle::service::SessionType); // scope 3 at cita-network/src/node_manager.rs:624:20: 624:27
        _173 = const _;                  // scope 3 at cita-network/src/node_manager.rs:624:31: 624:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:624:31: 624:52
                                         // + literal: Const { ty: &tentacle::service::SessionType, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[1])) }
        _27 = <tentacle::service::SessionType as PartialEq>::eq(move _28, _173) -> bb15; // scope 3 at cita-network/src/node_manager.rs:624:20: 624:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:624:20: 624:52
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a tentacle::service::SessionType, &'b tentacle::service::SessionType) -> bool {<tentacle::service::SessionType as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _27) -> [0: bb21, otherwise: bb16]; // scope 3 at cita-network/src/node_manager.rs:624:20: 624:52
    }

    bb16: {
        _30 = &mut ((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 4 at cita-network/src/node_manager.rs:625:56: 625:98
        _31 = &_26;                      // scope 4 at cita-network/src/node_manager.rs:625:84: 625:97
        _29 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _30, _31) -> bb17; // scope 4 at cita-network/src/node_manager.rs:625:56: 625:98
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:625:76: 625:83
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb17: {
        _32 = discriminant(_29);         // scope 4 at cita-network/src/node_manager.rs:625:28: 625:53
        switchInt(move _32) -> [1: bb18, otherwise: bb21]; // scope 4 at cita-network/src/node_manager.rs:625:28: 625:53
    }

    bb18: {
        _33 = &mut ((_29 as Some).0: &mut node_manager::NodeStatus); // scope 4 at cita-network/src/node_manager.rs:625:33: 625:52
        _35 = (*_7);                     // scope 4 at cita-network/src/node_manager.rs:626:55: 626:67
        _34 = std::option::Option::<SessionId>::Some(move _35); // scope 4 at cita-network/src/node_manager.rs:626:50: 626:68
        _193 = deref_copy (*_33);        // scope 4 at cita-network/src/node_manager.rs:626:25: 626:68
        ((*_193).1: std::option::Option<tentacle::SessionId>) = move _34; // scope 4 at cita-network/src/node_manager.rs:626:25: 626:68
        _194 = deref_copy (*_33);        // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
        _36 = CheckedAdd(((*_194).0: i32), const _); // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
        _195 = deref_copy (*_33);        // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
        assert(!move (_36.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_195).0: i32), const _) -> bb19; // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
    }

    bb19: {
        _196 = deref_copy (*_33);        // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
        ((*_196).0: i32) = move (_36.0: i32); // scope 4 at cita-network/src/node_manager.rs:627:25: 627:67
        _39 = &mut ((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 4 at cita-network/src/node_manager.rs:629:33: 629:76
        _40 = (*_7);                     // scope 4 at cita-network/src/node_manager.rs:629:63: 629:75
        _38 = BTreeMap::<SessionId, TransformAddr>::entry(move _39, move _40) -> bb20; // scope 4 at cita-network/src/node_manager.rs:629:33: 629:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:629:57: 629:62
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<SessionId, TransformAddr>, SessionId) -> std::collections::btree_map::Entry<'a, SessionId, TransformAddr> {BTreeMap::<SessionId, TransformAddr>::entry}, val: Value(<ZST>) }
    }

    bb20: {
        _42 = &_26;                      // scope 4 at cita-network/src/node_manager.rs:629:88: 631:26
        _41 = [closure@cita-network/src/node_manager.rs:629:88: 629:91] { dialing_addr: move _42 }; // scope 4 at cita-network/src/node_manager.rs:629:88: 631:26
                                         // closure
                                         // + def_id: DefId(0:363 ~ cita_network[da60]::node_manager::{impl#9}::handle::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     for<'a> extern "rust-call" fn((&'a mut node_manager::TransformAddr,)),
                                         //     (&std::net::SocketAddr,),
                                         // ]
        _37 = std::collections::btree_map::Entry::<'_, SessionId, TransformAddr>::and_modify::<[closure@cita-network/src/node_manager.rs:629:88: 629:91]>(move _38, move _41) -> bb21; // scope 4 at cita-network/src/node_manager.rs:629:33: 631:27
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:629:77: 629:87
                                         // + literal: Const { ty: fn(std::collections::btree_map::Entry<'_, SessionId, TransformAddr>, [closure@cita-network/src/node_manager.rs:629:88: 629:91]) -> std::collections::btree_map::Entry<'_, SessionId, TransformAddr> {std::collections::btree_map::Entry::<'_, SessionId, TransformAddr>::and_modify::<[closure@cita-network/src/node_manager.rs:629:88: 629:91]>}, val: Value(<ZST>) }
    }

    bb21: {
        _43 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 6 at cita-network/src/node_manager.rs:636:20: 636:38
        switchInt(move _43) -> [1: bb22, otherwise: bb93]; // scope 6 at cita-network/src/node_manager.rs:636:20: 636:38
    }

    bb22: {
        _44 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 6 at cita-network/src/node_manager.rs:636:25: 636:37
        _46 = &(*_44);                   // scope 6 at cita-network/src/node_manager.rs:637:25: 637:57
        _47 = (_1.0: tentacle::SessionId); // scope 6 at cita-network/src/node_manager.rs:637:41: 637:56
        _45 = ServiceControl::disconnect(move _46, move _47) -> bb23; // scope 6 at cita-network/src/node_manager.rs:637:25: 637:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:637:30: 637:40
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId) -> Result<(), tentacle::error::Error> {ServiceControl::disconnect}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_45) -> bb93;               // scope 6 at cita-network/src/node_manager.rs:637:57: 637:58
    }

    bb24: {
        _49 = &((*_2).10: cita_types::H160); // scope 0 at cita-network/src/node_manager.rs:639:19: 639:35
        _50 = &((_1.2: node_manager::InitMsg).1: cita_types::H160); // scope 0 at cita-network/src/node_manager.rs:639:39: 639:61
        _48 = <H160 as PartialEq>::eq(move _49, move _50) -> bb25; // scope 0 at cita-network/src/node_manager.rs:639:19: 639:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:639:19: 639:61
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b H160) -> bool {<H160 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb25: {
        switchInt(move _48) -> [0: bb40, otherwise: bb26]; // scope 0 at cita-network/src/node_manager.rs:639:19: 639:61
    }

    bb26: {
        _51 = discriminant(((*_2).14: std::option::Option<std::net::SocketAddr>)); // scope 8 at cita-network/src/node_manager.rs:646:20: 646:38
        switchInt(move _51) -> [1: bb27, otherwise: bb93]; // scope 8 at cita-network/src/node_manager.rs:646:20: 646:38
    }

    bb27: {
        _52 = ((((*_2).14: std::option::Option<std::net::SocketAddr>) as Some).0: std::net::SocketAddr); // scope 8 at cita-network/src/node_manager.rs:646:25: 646:37
        _53 = log::Level::Debug;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _56 = &_53;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _192 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[20])) }
        _55 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _56, _192) -> bb31; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb28: {
        _54 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _58 = &_53;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _60 = log::max_level() -> bb32;  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _54) -> [0: bb37, otherwise: bb34]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        switchInt(move _55) -> [0: bb28, otherwise: bb29]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _59 = &_60;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _57 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _58, move _59) -> bb33; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _54 = move _57;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _191 = const _;                  // scope 9 at cita-network/src/node_manager.rs:648:21: 648:80
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:648:21: 648:80
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[19])) }
        _63 = _191 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/node_manager.rs:648:21: 648:80
        _68 = &_52;                      // scope 9 at cita-network/src/node_manager.rs:649:21: 649:33
        _67 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_68) -> bb35; // scope 9 at cita-network/src/node_manager.rs:649:21: 649:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:649:21: 649:33
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb35: {
        _66 = [move _67];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _65 = &_66;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _64 = _65 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _62 = Arguments::<'_>::new_v1(move _63, move _64) -> bb36; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _190 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[18])) }
        _61 = log::__private_api_log(move _62, _53, _190) -> bb37; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb37: {
        _69 = std::option::Option::<std::net::SocketAddr>::Some(_52); // scope 8 at cita-network/src/node_manager.rs:651:37: 651:55
        ((*_2).15: std::option::Option<std::net::SocketAddr>) = move _69; // scope 8 at cita-network/src/node_manager.rs:651:17: 651:55
        _70 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 10 at cita-network/src/node_manager.rs:652:24: 652:42
        switchInt(move _70) -> [1: bb38, otherwise: bb93]; // scope 10 at cita-network/src/node_manager.rs:652:24: 652:42
    }

    bb38: {
        _71 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 10 at cita-network/src/node_manager.rs:652:29: 652:41
        _73 = &(*_71);                   // scope 10 at cita-network/src/node_manager.rs:653:29: 653:61
        _74 = (_1.0: tentacle::SessionId); // scope 10 at cita-network/src/node_manager.rs:653:45: 653:60
        _72 = ServiceControl::disconnect(move _73, move _74) -> bb39; // scope 10 at cita-network/src/node_manager.rs:653:29: 653:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:653:34: 653:44
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId) -> Result<(), tentacle::error::Error> {ServiceControl::disconnect}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_72) -> bb93;               // scope 10 at cita-network/src/node_manager.rs:653:61: 653:62
    }

    bb40: {
        _76 = &mut ((*_2).3: std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>); // scope 12 at cita-network/src/node_manager.rs:660:41: 660:97
        _77 = &(_1.0: tentacle::SessionId); // scope 12 at cita-network/src/node_manager.rs:660:80: 660:96
        _75 = BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>(move _76, _77) -> bb41; // scope 12 at cita-network/src/node_manager.rs:660:41: 660:97
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:660:73: 660:79
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<SessionId, SessionInfo>, &'b SessionId) -> std::option::Option<SessionInfo> {BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>}, val: Value(<ZST>) }
    }

    bb41: {
        _78 = discriminant(_75);         // scope 12 at cita-network/src/node_manager.rs:660:20: 660:38
        switchInt(move _78) -> [1: bb42, otherwise: bb61]; // scope 12 at cita-network/src/node_manager.rs:660:20: 660:38
    }

    bb42: {
        _79 = move ((_75 as Some).0: node_manager::SessionInfo); // scope 12 at cita-network/src/node_manager.rs:660:25: 660:37
        _80 = log::Level::Info;          // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _83 = &_80;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _189 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[17])) }
        _82 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _83, _189) -> bb46; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb43: {
        _81 = const false;               // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        _85 = &_80;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _87 = log::max_level() -> bb47;  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb45: {
        switchInt(move _81) -> [0: bb53, otherwise: bb49]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb46: {
        switchInt(move _82) -> [0: bb43, otherwise: bb44]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _86 = &_87;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _84 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _85, move _86) -> bb48; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb48: {
        _81 = move _84;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb49: {
        _188 = const _;                  // scope 13 at cita-network/src/node_manager.rs:662:21: 662:90
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:662:21: 662:90
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[16])) }
        _90 = _188 as &[&str] (Pointer(Unsize)); // scope 13 at cita-network/src/node_manager.rs:662:21: 662:90
        _95 = &(_1.0: tentacle::SessionId); // scope 13 at cita-network/src/node_manager.rs:663:21: 663:36
        _94 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_95) -> bb50; // scope 13 at cita-network/src/node_manager.rs:663:21: 663:36
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:663:21: 663:36
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb50: {
        _97 = &(_79.1: std::net::SocketAddr); // scope 13 at cita-network/src/node_manager.rs:663:38: 663:55
        _96 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_97) -> bb51; // scope 13 at cita-network/src/node_manager.rs:663:38: 663:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:663:38: 663:55
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb51: {
        _93 = [move _94, move _96];      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _92 = &_93;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _91 = _92 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _89 = Arguments::<'_>::new_v1(move _90, move _91) -> bb52; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb52: {
        _187 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[15])) }
        _88 = log::__private_api_log(move _89, _80, _187) -> bb53; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb53: {
        _99 = &mut ((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 12 at cita-network/src/node_manager.rs:665:25: 667:90
        _100 = (_1.0: tentacle::SessionId); // scope 12 at cita-network/src/node_manager.rs:667:29: 667:44
        _102 = (_79.1: std::net::SocketAddr); // scope 12 at cita-network/src/node_manager.rs:667:65: 667:82
        _103 = std::option::Option::<std::net::SocketAddr>::None; // scope 12 at cita-network/src/node_manager.rs:667:84: 667:88
        _101 = TransformAddr::new(move _102, move _103) -> bb54; // scope 12 at cita-network/src/node_manager.rs:667:46: 667:89
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:667:46: 667:64
                                         // + literal: Const { ty: fn(std::net::SocketAddr, std::option::Option<std::net::SocketAddr>) -> TransformAddr {TransformAddr::new}, val: Value(<ZST>) }
    }

    bb54: {
        _98 = BTreeMap::<SessionId, TransformAddr>::insert(move _99, move _100, move _101) -> bb55; // scope 12 at cita-network/src/node_manager.rs:665:25: 667:90
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:667:22: 667:28
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<SessionId, TransformAddr>, SessionId, TransformAddr) -> std::option::Option<TransformAddr> {BTreeMap::<SessionId, TransformAddr>::insert}, val: Value(<ZST>) }
    }

    bb55: {
        _105 = &(_1.1: tentacle::service::SessionType); // scope 14 at cita-network/src/node_manager.rs:670:20: 670:27
        _186 = const _;                  // scope 14 at cita-network/src/node_manager.rs:670:31: 670:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:670:31: 670:52
                                         // + literal: Const { ty: &tentacle::service::SessionType, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[14])) }
        _104 = <tentacle::service::SessionType as PartialEq>::eq(move _105, _186) -> bb56; // scope 14 at cita-network/src/node_manager.rs:670:20: 670:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:670:20: 670:52
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a tentacle::service::SessionType, &'b tentacle::service::SessionType) -> bool {<tentacle::service::SessionType as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb56: {
        switchInt(move _104) -> [0: bb61, otherwise: bb57]; // scope 14 at cita-network/src/node_manager.rs:670:20: 670:52
    }

    bb57: {
        _107 = &mut ((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 15 at cita-network/src/node_manager.rs:672:25: 672:72
        _108 = &(_79.1: std::net::SocketAddr); // scope 15 at cita-network/src/node_manager.rs:672:53: 672:71
        _106 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _107, _108) -> bb58; // scope 15 at cita-network/src/node_manager.rs:672:25: 672:72
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:672:45: 672:52
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb58: {
        _109 = discriminant(_106);       // scope 15 at cita-network/src/node_manager.rs:671:28: 671:53
        switchInt(move _109) -> [1: bb59, otherwise: bb61]; // scope 15 at cita-network/src/node_manager.rs:671:28: 671:53
    }

    bb59: {
        _110 = &mut ((_106 as Some).0: &mut node_manager::NodeStatus); // scope 15 at cita-network/src/node_manager.rs:671:33: 671:52
        _112 = (_1.0: tentacle::SessionId); // scope 15 at cita-network/src/node_manager.rs:674:55: 674:70
        _111 = std::option::Option::<SessionId>::Some(move _112); // scope 15 at cita-network/src/node_manager.rs:674:50: 674:71
        _197 = deref_copy (*_110);       // scope 15 at cita-network/src/node_manager.rs:674:25: 674:71
        ((*_197).1: std::option::Option<tentacle::SessionId>) = move _111; // scope 15 at cita-network/src/node_manager.rs:674:25: 674:71
        _198 = deref_copy (*_110);       // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
        _113 = CheckedAdd(((*_198).0: i32), const _); // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
        _199 = deref_copy (*_110);       // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
        assert(!move (_113.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_199).0: i32), const _) -> bb60; // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
    }

    bb60: {
        _200 = deref_copy (*_110);       // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
        ((*_200).0: i32) = move (_113.0: i32); // scope 15 at cita-network/src/node_manager.rs:675:25: 675:67
        goto -> bb61;                    // scope 14 at cita-network/src/node_manager.rs:671:21: 676:22
    }

    bb61: {
        _115 = &mut ((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 0 at cita-network/src/node_manager.rs:682:21: 684:65
        _116 = ((_1.2: node_manager::InitMsg).1: cita_types::H160); // scope 0 at cita-network/src/node_manager.rs:684:25: 684:47
        _117 = (_1.0: tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:684:49: 684:64
        _114 = BTreeMap::<H160, SessionId>::insert(move _115, move _116, move _117) -> bb62; // scope 0 at cita-network/src/node_manager.rs:682:21: 684:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:684:18: 684:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<H160, SessionId>, H160, SessionId) -> std::option::Option<SessionId> {BTreeMap::<H160, SessionId>::insert}, val: Value(<ZST>) }
    }

    bb62: {
        _119 = &mut ((*_2).12: node_manager::ConsensusNodeTopology); // scope 16 at cita-network/src/node_manager.rs:685:13: 687:58
        _120 = ((_1.2: node_manager::InitMsg).1: cita_types::H160); // scope 16 at cita-network/src/node_manager.rs:687:35: 687:57
        _118 = ConsensusNodeTopology::add_linked_nodes(move _119, move _120) -> bb63; // scope 16 at cita-network/src/node_manager.rs:685:13: 687:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:687:18: 687:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut ConsensusNodeTopology, H160) {ConsensusNodeTopology::add_linked_nodes}, val: Value(<ZST>) }
    }

    bb63: {
        _121 = log::Level::Info;         // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _124 = &_121;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _185 = const _;                  // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[13])) }
        _123 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _124, _185) -> bb67; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb64: {
        _122 = const false;              // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb66;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        _126 = &_121;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _128 = log::max_level() -> bb68; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb66: {
        switchInt(move _122) -> [0: bb73, otherwise: bb70]; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb67: {
        switchInt(move _123) -> [0: bb64, otherwise: bb65]; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb68: {
        _127 = &_128;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _125 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _126, move _127) -> bb69; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb69: {
        _122 = move _125;                // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb66;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb70: {
        _184 = const _;                  // scope 17 at cita-network/src/node_manager.rs:690:17: 690:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:690:17: 690:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[12])) }
        _131 = _184 as &[&str] (Pointer(Unsize)); // scope 17 at cita-network/src/node_manager.rs:690:17: 690:59
        _136 = &((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 17 at cita-network/src/node_manager.rs:691:17: 691:40
        _135 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<SessionId, TransformAddr>>(_136) -> bb71; // scope 17 at cita-network/src/node_manager.rs:691:17: 691:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:691:17: 691:40
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeMap<SessionId, TransformAddr>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<SessionId, TransformAddr>>}, val: Value(<ZST>) }
    }

    bb71: {
        _134 = [move _135];              // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _133 = &_134;                    // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _132 = _133 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _130 = Arguments::<'_>::new_v1(move _131, move _132) -> bb72; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb72: {
        _183 = const _;                  // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[11])) }
        _129 = log::__private_api_log(move _130, _121, _183) -> bb73; // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb73: {
        _137 = log::Level::Info;         // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _140 = &_137;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _182 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[10])) }
        _139 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _140, _182) -> bb77; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb74: {
        _138 = const false;              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb76;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb75: {
        _142 = &_137;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _144 = log::max_level() -> bb78; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb76: {
        switchInt(move _138) -> [0: bb83, otherwise: bb80]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb77: {
        switchInt(move _139) -> [0: bb74, otherwise: bb75]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb78: {
        _143 = &_144;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _141 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _142, move _143) -> bb79; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb79: {
        _138 = move _141;                // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb76;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb80: {
        _181 = const _;                  // scope 18 at cita-network/src/node_manager.rs:693:19: 693:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:693:19: 693:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[9])) }
        _147 = _181 as &[&str] (Pointer(Unsize)); // scope 18 at cita-network/src/node_manager.rs:693:19: 693:57
        _152 = &((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 18 at cita-network/src/node_manager.rs:693:59: 693:78
        _151 = core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>>(_152) -> bb81; // scope 18 at cita-network/src/node_manager.rs:693:59: 693:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:693:59: 693:78
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>>}, val: Value(<ZST>) }
    }

    bb81: {
        _150 = [move _151];              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _149 = &_150;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _148 = _149 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _146 = Arguments::<'_>::new_v1(move _147, move _148) -> bb82; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb82: {
        _180 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[8])) }
        _145 = log::__private_api_log(move _146, _137, _180) -> bb83; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb83: {
        _153 = log::Level::Info;         // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _156 = &_153;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _179 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[7])) }
        _155 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _156, _179) -> bb87; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb84: {
        _154 = const false;              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb86;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb85: {
        _158 = &_153;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _160 = log::max_level() -> bb88; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb86: {
        switchInt(move _154) -> [0: bb93, otherwise: bb90]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb87: {
        switchInt(move _155) -> [0: bb84, otherwise: bb85]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb88: {
        _159 = &_160;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _157 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _158, move _159) -> bb89; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb89: {
        _154 = move _157;                // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb86;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb90: {
        _178 = const _;                  // scope 19 at cita-network/src/node_manager.rs:696:17: 696:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:696:17: 696:60
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[6])) }
        _163 = _178 as &[&str] (Pointer(Unsize)); // scope 19 at cita-network/src/node_manager.rs:696:17: 696:60
        _168 = &((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 19 at cita-network/src/node_manager.rs:697:17: 697:44
        _167 = core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<H160, SessionId>>(_168) -> bb91; // scope 19 at cita-network/src/node_manager.rs:697:17: 697:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:697:17: 697:44
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'b> fn(&'b BTreeMap<H160, SessionId>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<BTreeMap<H160, SessionId>>}, val: Value(<ZST>) }
    }

    bb91: {
        _166 = [move _167];              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _165 = &_166;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _164 = _165 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _162 = Arguments::<'_>::new_v1(move _163, move _164) -> bb92; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb92: {
        _177 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[5])) }
        _161 = log::__private_api_log(move _162, _153, _177) -> bb93; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb93: {
        _170 = &(_1.1: tentacle::service::SessionType); // scope 0 at cita-network/src/node_manager.rs:702:12: 702:19
        _172 = const _;                  // scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:702:23: 702:44
                                         // + literal: Const { ty: &tentacle::service::SessionType, val: Unevaluated(AddConnectedNodeReq::handle, [], Some(promoted[0])) }
        _169 = <tentacle::service::SessionType as PartialEq>::eq(move _170, _172) -> bb94; // scope 0 at cita-network/src/node_manager.rs:702:12: 702:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:702:12: 702:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a tentacle::service::SessionType, &'b tentacle::service::SessionType) -> bool {<tentacle::service::SessionType as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb94: {
        switchInt(move _169) -> [0: bb96, otherwise: bb95]; // scope 0 at cita-network/src/node_manager.rs:702:12: 702:44
    }

    bb95: {
        _171 = std::option::Option::<std::net::SocketAddr>::None; // scope 0 at cita-network/src/node_manager.rs:703:36: 703:40
        ((*_2).14: std::option::Option<std::net::SocketAddr>) = move _171; // scope 0 at cita-network/src/node_manager.rs:703:13: 703:40
        goto -> bb96;                    // scope 0 at cita-network/src/node_manager.rs:702:9: 704:10
    }

    bb96: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:705:6: 705:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &tentacle::service::SessionType = {
    let mut _0: &tentacle::service::SessionType; // return place in scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
    let mut _1: tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:702:23: 702:44

    bb0: {
        _1 = Outbound;                   // scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
        return;                          // scope 0 at cita-network/src/node_manager.rs:702:23: 702:44
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &tentacle::service::SessionType = {
    let mut _0: &tentacle::service::SessionType; // return place in scope 0 at cita-network/src/node_manager.rs:624:31: 624:52
    let mut _1: tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:624:31: 624:52

    bb0: {
        _1 = Outbound;                   // scope 0 at cita-network/src/node_manager.rs:624:31: 624:52
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:624:31: 624:52
        return;                          // scope 0 at cita-network/src/node_manager.rs:624:31: 624:52
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:617:13: 620:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:617:13: 620:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:617:13: 620:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:617:13: 620:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:617:13: 620:14
        _1 = (move _2, move _4, move _6, const 617_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:618:17: 618:98
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:618:17: 618:98

    bb0: {
        _1 = [const "[NodeManager] New session [", const "] repeated with [", const "], disconnect this session."]; // scope 0 at cita-network/src/node_manager.rs:618:17: 618:98
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:618:17: 618:98
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:618:17: 618:98
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:618:17: 618:98
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:618:17: 618:98
        return;                          // scope 0 at cita-network/src/node_manager.rs:618:17: 618:98
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:695:13: 698:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:695:13: 698:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:695:13: 698:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:695:13: 698:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:695:13: 698:14
        _1 = (move _2, move _4, move _6, const 695_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:696:17: 696:60
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:696:17: 696:60

    bb0: {
        _1 = [const "[NodeManager] Address in connected : "]; // scope 0 at cita-network/src/node_manager.rs:696:17: 696:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:696:17: 696:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:696:17: 696:60
        return;                          // scope 0 at cita-network/src/node_manager.rs:696:17: 696:60
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:693:13: 693:79
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:693:13: 693:79

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:693:13: 693:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:693:13: 693:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:693:13: 693:79
        _1 = (move _2, move _4, move _6, const 693_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[9] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:693:19: 693:57
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:693:19: 693:57

    bb0: {
        _1 = [const "[NodeManager] known_addrs info: "]; // scope 0 at cita-network/src/node_manager.rs:693:19: 693:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:693:19: 693:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:693:19: 693:57
        return;                          // scope 0 at cita-network/src/node_manager.rs:693:19: 693:57
    }
}

promoted[10] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[11] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:689:13: 692:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:689:13: 692:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:689:13: 692:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:689:13: 692:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:689:13: 692:14
        _1 = (move _2, move _4, move _6, const 689_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[12] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:690:17: 690:59
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:690:17: 690:59

    bb0: {
        _1 = [const "[NodeManager] connected_addrs info: "]; // scope 0 at cita-network/src/node_manager.rs:690:17: 690:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:690:17: 690:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:690:17: 690:59
        return;                          // scope 0 at cita-network/src/node_manager.rs:690:17: 690:59
    }
}

promoted[13] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[14] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &tentacle::service::SessionType = {
    let mut _0: &tentacle::service::SessionType; // return place in scope 0 at cita-network/src/node_manager.rs:670:31: 670:52
    let mut _1: tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:670:31: 670:52

    bb0: {
        _1 = Outbound;                   // scope 0 at cita-network/src/node_manager.rs:670:31: 670:52
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:670:31: 670:52
        return;                          // scope 0 at cita-network/src/node_manager.rs:670:31: 670:52
    }
}

promoted[15] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:661:17: 664:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:661:17: 664:18

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:661:17: 664:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:661:17: 664:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:661:17: 664:18
        _1 = (move _2, move _4, move _6, const 661_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[16] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:662:21: 662:90
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:662:21: 662:90

    bb0: {
        _1 = [const "[NodeManager] Add session [", const "], address: ", const " to Connected_addrs."]; // scope 0 at cita-network/src/node_manager.rs:662:21: 662:90
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:662:21: 662:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:662:21: 662:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:662:21: 662:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:662:21: 662:90
        return;                          // scope 0 at cita-network/src/node_manager.rs:662:21: 662:90
    }
}

promoted[17] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[18] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:647:17: 650:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:647:17: 650:18

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:647:17: 650:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:647:17: 650:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:647:17: 650:18
        _1 = (move _2, move _4, move _6, const 647_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[19] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:648:21: 648:80
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:648:21: 648:80

    bb0: {
        _1 = [const "[NodeManager] Connected Self, Delete ", const " from know_addrs"]; // scope 0 at cita-network/src/node_manager.rs:648:21: 648:80
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:648:21: 648:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:648:21: 648:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:648:21: 648:80
        return;                          // scope 0 at cita-network/src/node_manager.rs:648:21: 648:80
    }
}

promoted[20] in node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:601:1: 601:25>::handle::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:629:88: 629:91], _2: &mut TransformAddr) -> () {
    debug v => _2;                       // in scope 0 at cita-network/src/node_manager.rs:629:89: 629:90
    debug dialing_addr => (*(_1.0: &std::net::SocketAddr)); // in scope 0 at cita-network/src/node_manager.rs:623:25: 623:37
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:629:92: 629:92
    let mut _3: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:630:44: 630:62
    let mut _4: std::net::SocketAddr;    // in scope 0 at cita-network/src/node_manager.rs:630:49: 630:61
    let mut _5: &std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:629:88: 631:26

    bb0: {
        _5 = deref_copy (_1.0: &std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:630:49: 630:61
        _4 = (*_5);                      // scope 0 at cita-network/src/node_manager.rs:630:49: 630:61
        _3 = std::option::Option::<std::net::SocketAddr>::Some(move _4); // scope 0 at cita-network/src/node_manager.rs:630:44: 630:62
        ((*_2).1: std::option::Option<std::net::SocketAddr>) = move _3; // scope 0 at cita-network/src/node_manager.rs:630:29: 630:62
        return;                          // scope 0 at cita-network/src/node_manager.rs:631:26: 631:26
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:708:10: 708:17>::default() -> NetworkInitReq {
    let mut _0: node_manager::NetworkInitReq; // return place in scope 0 at cita-network/src/node_manager.rs:708:10: 708:17
    let mut _1: tentacle::SessionId;     // in scope 0 at cita-network/src/node_manager.rs:710:5: 710:26

    bb0: {
        _1 = <SessionId as Default>::default() -> bb1; // scope 0 at cita-network/src/node_manager.rs:710:5: 710:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:710:5: 710:26
                                         // + literal: Const { ty: fn() -> SessionId {<SessionId as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = NetworkInitReq { session_id: move _1 }; // scope 0 at cita-network/src/node_manager.rs:708:10: 708:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:708:17: 708:17
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:713:1: 713:20>::new(_1: SessionId) -> NetworkInitReq {
    debug session_id => _1;              // in scope 0 at cita-network/src/node_manager.rs:714:16: 714:26
    let mut _0: node_manager::NetworkInitReq; // return place in scope 0 at cita-network/src/node_manager.rs:714:42: 714:46

    bb0: {
        _0 = NetworkInitReq { session_id: _1 }; // scope 0 at cita-network/src/node_manager.rs:715:9: 715:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:716:6: 716:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:713:1: 713:20>::handle(_1: NetworkInitReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:718:19: 718:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:718:25: 718:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:718:53: 718:53
    let _3: cita_types::H160;            // in scope 0 at cita-network/src/node_manager.rs:719:13: 719:21
    let mut _6: std::string::String;     // in scope 0 at cita-network/src/node_manager.rs:727:24: 727:50
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:727:24: 727:38
    let mut _8: std::vec::Vec<u8>;       // in scope 0 at cita-network/src/node_manager.rs:728:25: 728:40
    let mut _9: std::option::Option<bytes::Bytes>; // in scope 0 at cita-network/src/node_manager.rs:730:28: 730:72
    let _10: &cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:730:62: 730:71
    let mut _11: isize;                  // in scope 0 at cita-network/src/node_manager.rs:730:16: 730:25
    let mut _13: isize;                  // in scope 0 at cita-network/src/node_manager.rs:731:20: 731:38
    let mut _16: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:732:27: 732:91
    let mut _17: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:732:48: 732:63
    let mut _18: bytes::Bytes;           // in scope 0 at cita-network/src/node_manager.rs:732:87: 732:90
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _22: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _23: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _24: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _25: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _26: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _27: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _28: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _29: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:734:21: 734:101
    let mut _30: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _31: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _32: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _33: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:735:21: 735:36
    let _34: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:735:21: 735:36
    let mut _35: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:735:38: 735:46
    let _36: &cita_types::H160;          // in scope 0 at cita-network/src/node_manager.rs:735:38: 735:46
    let mut _37: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:735:48: 735:51
    let _38: &std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:735:48: 735:51
    let mut _42: bool;                   // in scope 0 at cita-network/src/node_manager.rs:738:9: 738:10
    let mut _43: bool;                   // in scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    let mut _44: isize;                  // in scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    let mut _45: isize;                  // in scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    scope 1 {
        debug peer_key => _3;            // in scope 1 at cita-network/src/node_manager.rs:719:13: 719:21
        let _4: node_manager::InitMsg;   // in scope 1 at cita-network/src/node_manager.rs:721:13: 721:21
        scope 2 {
            debug init_msg => _4;        // in scope 2 at cita-network/src/node_manager.rs:721:13: 721:21
            let mut _5: cita_protocol::NetMessageUnit; // in scope 2 at cita-network/src/node_manager.rs:726:13: 726:25
            scope 3 {
                debug msg_unit => _5;    // in scope 3 at cita-network/src/node_manager.rs:726:13: 726:25
                scope 4 {
                    debug buf => _12;    // in scope 4 at cita-network/src/node_manager.rs:730:21: 730:24
                    let _12: bytes::Bytes; // in scope 4 at cita-network/src/node_manager.rs:730:21: 730:24
                    scope 5 {
                        debug ctrl => _14; // in scope 5 at cita-network/src/node_manager.rs:731:25: 731:37
                        let _14: &mut tentacle::service::ServiceControl; // in scope 5 at cita-network/src/node_manager.rs:731:25: 731:37
                        let _15: std::result::Result<(), tentacle::error::Error>; // in scope 5 at cita-network/src/node_manager.rs:732:21: 732:24
                        scope 6 {
                            debug ret => _15; // in scope 6 at cita-network/src/node_manager.rs:732:21: 732:24
                            let _19: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            scope 7 {
                                debug lvl => _19; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _39: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _40: &[&str; 3]; // in scope 7 at cita-network/src/node_manager.rs:734:21: 734:101
                                let mut _41: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _42 = const false;               // scope 0 at cita-network/src/node_manager.rs:719:13: 719:21
        _43 = const false;               // scope 0 at cita-network/src/node_manager.rs:719:13: 719:21
        _3 = ((*_2).10: cita_types::H160); // scope 0 at cita-network/src/node_manager.rs:719:24: 719:40
        _4 = InitMsg { chain_id: const 0_u64, peer_key: _3 }; // scope 1 at cita-network/src/node_manager.rs:721:24: 724:10
        _5 = <NetMessageUnit as Default>::default() -> bb1; // scope 2 at cita-network/src/node_manager.rs:726:28: 726:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:726:28: 726:51
                                         // + literal: Const { ty: fn() -> NetMessageUnit {<NetMessageUnit as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = const "network.init";       // scope 3 at cita-network/src/node_manager.rs:727:24: 727:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:727:24: 727:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = <str as ToString>::to_string(_7) -> [return: bb2, unwind: bb29]; // scope 3 at cita-network/src/node_manager.rs:727:24: 727:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:727:39: 727:48
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::string::String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb2: {
        drop((_5.0: std::string::String)) -> [return: bb3, unwind: bb4]; // scope 3 at cita-network/src/node_manager.rs:727:9: 727:21
    }

    bb3: {
        (_5.0: std::string::String) = move _6; // scope 3 at cita-network/src/node_manager.rs:727:9: 727:21
        _8 = <InitMsg as Into<Vec<u8>>>::into(move _4) -> [return: bb5, unwind: bb29]; // scope 3 at cita-network/src/node_manager.rs:728:25: 728:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:728:34: 728:38
                                         // + literal: Const { ty: fn(InitMsg) -> Vec<u8> {<InitMsg as Into<Vec<u8>>>::into}, val: Value(<ZST>) }
    }

    bb4 (cleanup): {
        (_5.0: std::string::String) = move _6; // scope 3 at cita-network/src/node_manager.rs:727:9: 727:21
        goto -> bb29;                    // scope 3 at cita-network/src/node_manager.rs:727:49: 727:50
    }

    bb5: {
        drop((_5.1: std::vec::Vec<u8>)) -> [return: bb6, unwind: bb7]; // scope 3 at cita-network/src/node_manager.rs:728:9: 728:22
    }

    bb6: {
        (_5.1: std::vec::Vec<u8>) = move _8; // scope 3 at cita-network/src/node_manager.rs:728:9: 728:22
        _10 = &_5;                       // scope 4 at cita-network/src/node_manager.rs:730:62: 730:71
        _9 = pubsub_message_to_network_message(_10) -> [return: bb8, unwind: bb29]; // scope 4 at cita-network/src/node_manager.rs:730:28: 730:72
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:730:28: 730:61
                                         // + literal: Const { ty: for<'a> fn(&'a NetMessageUnit) -> std::option::Option<bytes::Bytes> {pubsub_message_to_network_message}, val: Value(<ZST>) }
    }

    bb7 (cleanup): {
        (_5.1: std::vec::Vec<u8>) = move _8; // scope 3 at cita-network/src/node_manager.rs:728:9: 728:22
        goto -> bb29;                    // scope 3 at cita-network/src/node_manager.rs:728:39: 728:40
    }

    bb8: {
        _43 = const true;                // scope 4 at cita-network/src/node_manager.rs:730:71: 730:72
        _11 = discriminant(_9);          // scope 4 at cita-network/src/node_manager.rs:730:16: 730:25
        switchInt(move _11) -> [1: bb9, otherwise: bb25]; // scope 4 at cita-network/src/node_manager.rs:730:16: 730:25
    }

    bb9: {
        _43 = const false;               // scope 4 at cita-network/src/node_manager.rs:730:21: 730:24
        _42 = const true;                // scope 4 at cita-network/src/node_manager.rs:730:21: 730:24
        _12 = move ((_9 as Some).0: bytes::Bytes); // scope 4 at cita-network/src/node_manager.rs:730:21: 730:24
        _13 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 5 at cita-network/src/node_manager.rs:731:20: 731:38
        switchInt(move _13) -> [1: bb10, otherwise: bb32]; // scope 5 at cita-network/src/node_manager.rs:731:20: 731:38
    }

    bb10: {
        _14 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 5 at cita-network/src/node_manager.rs:731:25: 731:37
        _16 = &(*_14);                   // scope 5 at cita-network/src/node_manager.rs:732:27: 732:91
        _17 = (_1.0: tentacle::SessionId); // scope 5 at cita-network/src/node_manager.rs:732:48: 732:63
        _42 = const false;               // scope 5 at cita-network/src/node_manager.rs:732:87: 732:90
        _18 = move _12;                  // scope 5 at cita-network/src/node_manager.rs:732:87: 732:90
        _15 = ServiceControl::send_message_to(move _16, move _17, const _, move _18) -> [return: bb11, unwind: bb28]; // scope 5 at cita-network/src/node_manager.rs:732:27: 732:91
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:732:32: 732:47
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId, ProtocolId, bytes::Bytes) -> Result<(), tentacle::error::Error> {ServiceControl::send_message_to}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:732:65: 732:85
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
    }

    bb11: {
        _19 = log::Level::Info;          // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _22 = &_19;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _41 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(NetworkInitReq::handle, [], Some(promoted[2])) }
        _21 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _22, _41) -> [return: bb15, unwind: bb27]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _20 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb14;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _24 = &_19;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _26 = log::max_level() -> [return: bb16, unwind: bb27]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb14: {
        switchInt(move _20) -> [0: bb23, otherwise: bb18]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        switchInt(move _21) -> [0: bb12, otherwise: bb13]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _25 = &_26;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _23 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _24, move _25) -> [return: bb17, unwind: bb27]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb17: {
        _20 = move _23;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb14;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        _40 = const _;                   // scope 7 at cita-network/src/node_manager.rs:734:21: 734:101
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:734:21: 734:101
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(NetworkInitReq::handle, [], Some(promoted[1])) }
        _29 = _40 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/node_manager.rs:734:21: 734:101
        _34 = &(_1.0: tentacle::SessionId); // scope 7 at cita-network/src/node_manager.rs:735:21: 735:36
        _33 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_34) -> [return: bb19, unwind: bb27]; // scope 7 at cita-network/src/node_manager.rs:735:21: 735:36
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:735:21: 735:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb19: {
        _36 = &_3;                       // scope 7 at cita-network/src/node_manager.rs:735:38: 735:46
        _35 = core::fmt::ArgumentV1::<'_>::new_debug::<H160>(_36) -> [return: bb20, unwind: bb27]; // scope 7 at cita-network/src/node_manager.rs:735:38: 735:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:735:38: 735:46
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b H160) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<H160>}, val: Value(<ZST>) }
    }

    bb20: {
        _38 = &_15;                      // scope 7 at cita-network/src/node_manager.rs:735:48: 735:51
        _37 = core::fmt::ArgumentV1::<'_>::new_debug::<Result<(), tentacle::error::Error>>(_38) -> [return: bb21, unwind: bb27]; // scope 7 at cita-network/src/node_manager.rs:735:48: 735:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:735:48: 735:51
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b Result<(), tentacle::error::Error>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Result<(), tentacle::error::Error>>}, val: Value(<ZST>) }
    }

    bb21: {
        _32 = [move _33, move _35, move _37]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _31 = &_32;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _30 = _31 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _28 = Arguments::<'_>::new_v1(move _29, move _30) -> [return: bb22, unwind: bb27]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb22: {
        _39 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(NetworkInitReq::handle, [], Some(promoted[0])) }
        _27 = log::__private_api_log(move _28, _19, _39) -> [return: bb39, unwind: bb27]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb23: {
        drop(_15) -> [return: bb32, unwind: bb28]; // scope 5 at cita-network/src/node_manager.rs:737:13: 737:14
    }

    bb24: {
        _42 = const false;               // scope 3 at cita-network/src/node_manager.rs:738:9: 738:10
        goto -> bb25;                    // scope 3 at cita-network/src/node_manager.rs:730:9: 738:10
    }

    bb25: {
        drop(_5) -> [return: bb26, unwind: bb38]; // scope 2 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb26: {
        _44 = discriminant(_9);          // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
        switchInt(move _44) -> [1: bb34, otherwise: bb33]; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb27 (cleanup): {
        drop(_15) -> bb28;               // scope 5 at cita-network/src/node_manager.rs:737:13: 737:14
    }

    bb28 (cleanup): {
        drop(_5) -> bb38;                // scope 2 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb29 (cleanup): {
        drop(_5) -> bb30;                // scope 2 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb30 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:718:5: 739:6
    }

    bb31: {
        drop(_12) -> [return: bb24, unwind: bb28]; // scope 3 at cita-network/src/node_manager.rs:738:9: 738:10
    }

    bb32: {
        switchInt(_42) -> [0: bb24, otherwise: bb31]; // scope 3 at cita-network/src/node_manager.rs:738:9: 738:10
    }

    bb33: {
        _43 = const false;               // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:739:6: 739:6
    }

    bb34: {
        switchInt(_43) -> [0: bb33, otherwise: bb35]; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb35: {
        drop(((_9 as Some).0: bytes::Bytes)) -> bb33; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb36 (cleanup): {
        switchInt(_43) -> [0: bb30, otherwise: bb37]; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb37 (cleanup): {
        drop(((_9 as Some).0: bytes::Bytes)) -> bb30; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb38 (cleanup): {
        _45 = discriminant(_9);          // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
        switchInt(move _45) -> [1: bb36, otherwise: bb30]; // scope 0 at cita-network/src/node_manager.rs:739:5: 739:6
    }

    bb39: {
        goto -> bb23;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:713:1: 713:20>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:733:17: 736:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:733:17: 736:18

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:733:17: 736:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:733:17: 736:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:733:17: 736:18
        _1 = (move _2, move _4, move _6, const 733_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:713:1: 713:20>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:734:21: 734:101
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:734:21: 734:101

    bb0: {
        _1 = [const "[NodeManager] Send network init message!, id: ", const ", peer_addr: ", const ", ret: "]; // scope 0 at cita-network/src/node_manager.rs:734:21: 734:101
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:734:21: 734:101
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:734:21: 734:101
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:734:21: 734:101
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:734:21: 734:101
        return;                          // scope 0 at cita-network/src/node_manager.rs:734:21: 734:101
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:713:1: 713:20>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::new(_1: std::net::SocketAddr, _2: NodeSource) -> AddNodeReq {
    debug addr => _1;                    // in scope 0 at cita-network/src/node_manager.rs:748:16: 748:20
    debug source => _2;                  // in scope 0 at cita-network/src/node_manager.rs:748:34: 748:40
    let mut _0: node_manager::AddNodeReq; // return place in scope 0 at cita-network/src/node_manager.rs:748:57: 748:61

    bb0: {
        _0 = AddNodeReq { addr: _1, source: move _2 }; // scope 0 at cita-network/src/node_manager.rs:749:9: 749:36
        return;                          // scope 0 at cita-network/src/node_manager.rs:750:6: 750:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::handle(_1: AddNodeReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:752:19: 752:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:752:25: 752:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:752:53: 752:53
    let mut _3: bool;                    // in scope 0 at cita-network/src/node_manager.rs:753:12: 753:63
    let mut _4: usize;                   // in scope 0 at cita-network/src/node_manager.rs:753:12: 753:37
    let mut _5: &std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:753:12: 753:37
    let _6: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:755:17: 755:66
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:756:17: 756:40
    let _21: node_manager::NodeStatus;   // in scope 0 at cita-network/src/node_manager.rs:761:13: 761:32
    let mut _22: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:761:63: 761:67
    let mut _23: node_manager::NodeSource; // in scope 0 at cita-network/src/node_manager.rs:761:69: 761:80
    let _24: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:762:9: 765:44
    let mut _25: std::collections::hash_map::Entry<'_, std::net::SocketAddr, node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:762:9: 764:30
    let mut _26: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:762:9: 764:30
    let mut _27: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:764:20: 764:29
    let mut _28: node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:765:24: 765:43
    scope 1 {
        debug lvl => _6;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _29: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _30: &usize;             // in scope 1 at cita-network/src/node_manager.rs:756:17: 756:40
        let mut _31: &[&str; 1];         // in scope 1 at cita-network/src/node_manager.rs:755:17: 755:66
        let mut _32: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug default_node_status => _21; // in scope 2 at cita-network/src/node_manager.rs:761:13: 761:32
    }

    bb0: {
        _5 = &((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 0 at cita-network/src/node_manager.rs:753:12: 753:37
        _4 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::len(move _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:753:12: 753:37
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:753:32: 753:35
                                         // + literal: Const { ty: for<'a> fn(&'a HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>) -> usize {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::len}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Gt(move _4, const _);       // scope 0 at cita-network/src/node_manager.rs:753:12: 753:63
        switchInt(move _3) -> [0: bb12, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:753:12: 753:63
    }

    bb2: {
        _6 = log::Level::Warn;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _9 = &_6;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _32 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddNodeReq::handle, [], Some(promoted[3])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _32) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _11 = &_6;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> bb7;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _7) -> [0: bb15, otherwise: bb9]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _8) -> [0: bb3, otherwise: bb4]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _12 = &_13;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> bb8; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _7 = move _10;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _31 = const _;                   // scope 1 at cita-network/src/node_manager.rs:755:17: 755:66
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:755:17: 755:66
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddNodeReq::handle, [], Some(promoted[2])) }
        _16 = _31 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:755:17: 755:66
        _30 = const _;                   // scope 1 at cita-network/src/node_manager.rs:756:17: 756:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:756:17: 756:40
                                         // + literal: Const { ty: &usize, val: Unevaluated(AddNodeReq::handle, [], Some(promoted[1])) }
        _20 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(_30) -> bb10; // scope 1 at cita-network/src/node_manager.rs:756:17: 756:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:756:17: 756:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb10: {
        _19 = [move _20];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = &_19;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = Arguments::<'_>::new_v1(move _16, move _17) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _29 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddNodeReq::handle, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _29) -> bb15; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _22 = std::option::Option::<SessionId>::None; // scope 0 at cita-network/src/node_manager.rs:761:63: 761:67
        _23 = move (_1.1: node_manager::NodeSource); // scope 0 at cita-network/src/node_manager.rs:761:69: 761:80
        _21 = NodeStatus::new(const _, move _22, move _23) -> bb13; // scope 0 at cita-network/src/node_manager.rs:761:35: 761:81
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:761:35: 761:50
                                         // + literal: Const { ty: fn(i32, std::option::Option<SessionId>, NodeSource) -> NodeStatus {NodeStatus::new}, val: Value(<ZST>) }
    }

    bb13: {
        _26 = &mut ((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 2 at cita-network/src/node_manager.rs:762:9: 764:30
        _27 = (_1.0: std::net::SocketAddr); // scope 2 at cita-network/src/node_manager.rs:764:20: 764:29
        _25 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::entry(move _26, move _27) -> bb14; // scope 2 at cita-network/src/node_manager.rs:762:9: 764:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:764:14: 764:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, std::net::SocketAddr) -> std::collections::hash_map::Entry<'a, std::net::SocketAddr, NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::entry}, val: Value(<ZST>) }
    }

    bb14: {
        _28 = move _21;                  // scope 2 at cita-network/src/node_manager.rs:765:24: 765:43
        _24 = std::collections::hash_map::Entry::<'_, std::net::SocketAddr, NodeStatus>::or_insert(move _25, move _28) -> bb15; // scope 2 at cita-network/src/node_manager.rs:762:9: 765:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:765:14: 765:23
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, std::net::SocketAddr, NodeStatus>, NodeStatus) -> &mut NodeStatus {std::collections::hash_map::Entry::<'_, std::net::SocketAddr, NodeStatus>::or_insert}, val: Value(<ZST>) }
    }

    bb15: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:766:6: 766:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:754:13: 757:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:754:13: 757:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:754:13: 757:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:754:13: 757:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:754:13: 757:14
        _1 = (move _2, move _4, move _6, const 754_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::handle: &usize = {
    let mut _0: &usize;                  // return place in scope 0 at cita-network/src/node_manager.rs:756:17: 756:40
    let mut _1: usize;                   // in scope 0 at cita-network/src/node_manager.rs:756:17: 756:40

    bb0: {
        _1 = const _;                    // scope 0 at cita-network/src/node_manager.rs:756:17: 756:40
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:756:17: 756:40
        return;                          // scope 0 at cita-network/src/node_manager.rs:756:17: 756:40
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:755:17: 755:66
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:755:17: 755:66

    bb0: {
        _1 = [const "[NodeManager] Known address has reach Max: "]; // scope 0 at cita-network/src/node_manager.rs:755:17: 755:66
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:755:17: 755:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:755:17: 755:66
        return;                          // scope 0 at cita-network/src/node_manager.rs:755:17: 755:66
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:747:1: 747:16>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:773:1: 773:20>::new(_1: std::net::SocketAddr) -> DialedErrorReq {
    debug addr => _1;                    // in scope 0 at cita-network/src/node_manager.rs:774:16: 774:20
    let mut _0: node_manager::DialedErrorReq; // return place in scope 0 at cita-network/src/node_manager.rs:774:37: 774:41

    bb0: {
        _0 = DialedErrorReq { addr: _1 }; // scope 0 at cita-network/src/node_manager.rs:775:9: 775:32
        return;                          // scope 0 at cita-network/src/node_manager.rs:776:6: 776:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:773:1: 773:20>::handle(_1: DialedErrorReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:778:19: 778:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:778:25: 778:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:778:53: 778:53
    let mut _3: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:779:44: 779:83
    let mut _4: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:779:44: 779:83
    let _5: &std::net::SocketAddr;       // in scope 0 at cita-network/src/node_manager.rs:779:72: 779:82
    let mut _6: isize;                   // in scope 0 at cita-network/src/node_manager.rs:779:16: 779:41
    let mut _8: (i32, bool);             // in scope 0 at cita-network/src/node_manager.rs:780:13: 780:52
    let mut _9: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:784:32: 784:36
    let mut _10: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:779:21: 779:40
    let mut _11: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:779:21: 779:40
    let mut _12: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:779:21: 779:40
    scope 1 {
        debug node_status => _7;         // in scope 1 at cita-network/src/node_manager.rs:779:21: 779:40
        let _7: &mut &mut node_manager::NodeStatus; // in scope 1 at cita-network/src/node_manager.rs:779:21: 779:40
    }

    bb0: {
        _4 = &mut ((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 1 at cita-network/src/node_manager.rs:779:44: 779:83
        _5 = &(_1.0: std::net::SocketAddr); // scope 1 at cita-network/src/node_manager.rs:779:72: 779:82
        _3 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _4, _5) -> bb1; // scope 1 at cita-network/src/node_manager.rs:779:44: 779:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:779:64: 779:71
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = discriminant(_3);           // scope 1 at cita-network/src/node_manager.rs:779:16: 779:41
        switchInt(move _6) -> [1: bb2, otherwise: bb4]; // scope 1 at cita-network/src/node_manager.rs:779:16: 779:41
    }

    bb2: {
        _7 = &mut ((_3 as Some).0: &mut node_manager::NodeStatus); // scope 1 at cita-network/src/node_manager.rs:779:21: 779:40
        _10 = deref_copy (*_7);          // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
        _8 = CheckedSub(((*_10).0: i32), const _); // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
        _11 = deref_copy (*_7);          // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
        assert(!move (_8.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_11).0: i32), const _) -> bb3; // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
    }

    bb3: {
        _12 = deref_copy (*_7);          // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
        ((*_12).0: i32) = move (_8.0: i32); // scope 1 at cita-network/src/node_manager.rs:780:13: 780:52
        goto -> bb4;                     // scope 0 at cita-network/src/node_manager.rs:779:9: 781:10
    }

    bb4: {
        _9 = std::option::Option::<std::net::SocketAddr>::None; // scope 0 at cita-network/src/node_manager.rs:784:32: 784:36
        ((*_2).14: std::option::Option<std::net::SocketAddr>) = move _9; // scope 0 at cita-network/src/node_manager.rs:784:9: 784:36
        return;                          // scope 0 at cita-network/src/node_manager.rs:785:6: 785:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::new(_1: std::net::SocketAddr, _2: SessionId) -> AddRepeatedNodeReq {
    debug addr => _1;                    // in scope 0 at cita-network/src/node_manager.rs:794:16: 794:20
    debug session_id => _2;              // in scope 0 at cita-network/src/node_manager.rs:794:34: 794:44
    let mut _0: node_manager::AddRepeatedNodeReq; // return place in scope 0 at cita-network/src/node_manager.rs:794:60: 794:64

    bb0: {
        _0 = AddRepeatedNodeReq { addr: _1, session_id: _2 }; // scope 0 at cita-network/src/node_manager.rs:795:9: 795:48
        return;                          // scope 0 at cita-network/src/node_manager.rs:796:6: 796:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle(_1: AddRepeatedNodeReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:798:19: 798:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:798:25: 798:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:798:53: 798:53
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:800:13: 800:78
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:801:13: 801:22
    let _18: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:801:13: 801:22
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:801:24: 801:39
    let _20: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:801:24: 801:39
    let mut _21: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:804:44: 804:83
    let mut _22: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:804:44: 804:83
    let _23: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:804:72: 804:82
    let mut _24: isize;                  // in scope 0 at cita-network/src/node_manager.rs:804:16: 804:41
    let mut _26: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:805:38: 805:59
    let mut _27: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:805:43: 805:58
    let mut _28: (i32, bool);            // in scope 0 at cita-network/src/node_manager.rs:806:13: 806:55
    let mut _29: std::option::Option<node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:808:41: 808:97
    let mut _30: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:808:41: 808:97
    let _31: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:808:80: 808:96
    let mut _32: isize;                  // in scope 0 at cita-network/src/node_manager.rs:808:20: 808:38
    let mut _34: std::option::Option<node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:809:25: 812:18
    let mut _35: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:809:25: 812:18
    let mut _36: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:810:21: 810:36
    let mut _37: node_manager::TransformAddr; // in scope 0 at cita-network/src/node_manager.rs:811:21: 811:75
    let mut _38: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:811:40: 811:57
    let mut _39: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:811:59: 811:74
    let mut _40: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:811:64: 811:73
    let mut _41: std::collections::btree_map::Entry<'_, tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:814:25: 819:23
    let mut _42: std::collections::btree_map::Entry<'_, tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:814:25: 816:44
    let mut _43: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:814:25: 816:44
    let mut _44: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:816:28: 816:43
    let mut _45: [closure@cita-network/src/node_manager.rs:817:33: 817:36]; // in scope 0 at cita-network/src/node_manager.rs:817:33: 819:22
    let mut _46: &node_manager::AddRepeatedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:817:33: 819:22
    let _47: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _48: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _50: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _52: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _53: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _54: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _55: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _56: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _57: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:822:19: 822:78
    let mut _58: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:825:32: 825:36
    let mut _65: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:804:21: 804:40
    let mut _66: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:804:21: 804:40
    let mut _67: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:804:21: 804:40
    let mut _68: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:804:21: 804:40
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _62: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _63: &[&str; 3];         // in scope 1 at cita-network/src/node_manager.rs:800:13: 800:78
        let mut _64: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug node_status => _25;        // in scope 2 at cita-network/src/node_manager.rs:804:21: 804:40
        let _25: &mut &mut node_manager::NodeStatus; // in scope 2 at cita-network/src/node_manager.rs:804:21: 804:40
        scope 3 {
            debug session_info => _33;   // in scope 3 at cita-network/src/node_manager.rs:808:25: 808:37
            let _33: node_manager::SessionInfo; // in scope 3 at cita-network/src/node_manager.rs:808:25: 808:37
            scope 4 {
            }
        }
        scope 5 {
        }
    }
    scope 6 {
        debug lvl => _47;                // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _59: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _60: &[&str; 1];         // in scope 6 at cita-network/src/node_manager.rs:822:19: 822:78
        let mut _61: &log::LevelFilter;  // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _3 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _64 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[5])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _64) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb11, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _63 = const _;                   // scope 1 at cita-network/src/node_manager.rs:800:13: 800:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:800:13: 800:78
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[4])) }
        _13 = _63 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:800:13: 800:78
        _18 = &(_1.0: std::net::SocketAddr); // scope 1 at cita-network/src/node_manager.rs:801:13: 801:22
        _17 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_18) -> bb8; // scope 1 at cita-network/src/node_manager.rs:801:13: 801:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:801:13: 801:22
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &(_1.1: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:801:24: 801:39
        _19 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_20) -> bb9; // scope 1 at cita-network/src/node_manager.rs:801:24: 801:39
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:801:24: 801:39
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = [move _17, move _19];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _62 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[3])) }
        _11 = log::__private_api_log(move _12, _3, _62) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = &mut ((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 2 at cita-network/src/node_manager.rs:804:44: 804:83
        _23 = &(_1.0: std::net::SocketAddr); // scope 2 at cita-network/src/node_manager.rs:804:72: 804:82
        _21 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _22, _23) -> bb12; // scope 2 at cita-network/src/node_manager.rs:804:44: 804:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:804:64: 804:71
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = discriminant(_21);         // scope 2 at cita-network/src/node_manager.rs:804:16: 804:41
        switchInt(move _24) -> [1: bb13, otherwise: bb20]; // scope 2 at cita-network/src/node_manager.rs:804:16: 804:41
    }

    bb13: {
        _25 = &mut ((_21 as Some).0: &mut node_manager::NodeStatus); // scope 2 at cita-network/src/node_manager.rs:804:21: 804:40
        _27 = (_1.1: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:805:43: 805:58
        _26 = std::option::Option::<SessionId>::Some(move _27); // scope 2 at cita-network/src/node_manager.rs:805:38: 805:59
        _65 = deref_copy (*_25);         // scope 2 at cita-network/src/node_manager.rs:805:13: 805:59
        ((*_65).1: std::option::Option<tentacle::SessionId>) = move _26; // scope 2 at cita-network/src/node_manager.rs:805:13: 805:59
        _66 = deref_copy (*_25);         // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
        _28 = CheckedAdd(((*_66).0: i32), const _); // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
        _67 = deref_copy (*_25);         // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
        assert(!move (_28.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_67).0: i32), const _) -> bb14; // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
    }

    bb14: {
        _68 = deref_copy (*_25);         // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
        ((*_68).0: i32) = move (_28.0: i32); // scope 2 at cita-network/src/node_manager.rs:806:13: 806:55
        _30 = &mut ((*_2).3: std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>); // scope 3 at cita-network/src/node_manager.rs:808:41: 808:97
        _31 = &(_1.1: tentacle::SessionId); // scope 3 at cita-network/src/node_manager.rs:808:80: 808:96
        _29 = BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>(move _30, _31) -> bb15; // scope 3 at cita-network/src/node_manager.rs:808:41: 808:97
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:808:73: 808:79
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<SessionId, SessionInfo>, &'b SessionId) -> std::option::Option<SessionInfo> {BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>}, val: Value(<ZST>) }
    }

    bb15: {
        _32 = discriminant(_29);         // scope 3 at cita-network/src/node_manager.rs:808:20: 808:38
        switchInt(move _32) -> [1: bb16, otherwise: bb18]; // scope 3 at cita-network/src/node_manager.rs:808:20: 808:38
    }

    bb16: {
        _33 = move ((_29 as Some).0: node_manager::SessionInfo); // scope 3 at cita-network/src/node_manager.rs:808:25: 808:37
        _35 = &mut ((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 3 at cita-network/src/node_manager.rs:809:25: 812:18
        _36 = (_1.1: tentacle::SessionId); // scope 3 at cita-network/src/node_manager.rs:810:21: 810:36
        _38 = (_33.1: std::net::SocketAddr); // scope 3 at cita-network/src/node_manager.rs:811:40: 811:57
        _40 = (_1.0: std::net::SocketAddr); // scope 3 at cita-network/src/node_manager.rs:811:64: 811:73
        _39 = std::option::Option::<std::net::SocketAddr>::Some(move _40); // scope 3 at cita-network/src/node_manager.rs:811:59: 811:74
        _37 = TransformAddr::new(move _38, move _39) -> bb17; // scope 3 at cita-network/src/node_manager.rs:811:21: 811:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:811:21: 811:39
                                         // + literal: Const { ty: fn(std::net::SocketAddr, std::option::Option<std::net::SocketAddr>) -> TransformAddr {TransformAddr::new}, val: Value(<ZST>) }
    }

    bb17: {
        _34 = BTreeMap::<SessionId, TransformAddr>::insert(move _35, move _36, move _37) -> bb29; // scope 3 at cita-network/src/node_manager.rs:809:25: 812:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:809:49: 809:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<SessionId, TransformAddr>, SessionId, TransformAddr) -> std::option::Option<TransformAddr> {BTreeMap::<SessionId, TransformAddr>::insert}, val: Value(<ZST>) }
    }

    bb18: {
        _43 = &mut ((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 2 at cita-network/src/node_manager.rs:814:25: 816:44
        _44 = (_1.1: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:816:28: 816:43
        _42 = BTreeMap::<SessionId, TransformAddr>::entry(move _43, move _44) -> bb19; // scope 2 at cita-network/src/node_manager.rs:814:25: 816:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:816:22: 816:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<SessionId, TransformAddr>, SessionId) -> std::collections::btree_map::Entry<'a, SessionId, TransformAddr> {BTreeMap::<SessionId, TransformAddr>::entry}, val: Value(<ZST>) }
    }

    bb19: {
        _46 = &_1;                       // scope 2 at cita-network/src/node_manager.rs:817:33: 819:22
        _45 = [closure@cita-network/src/node_manager.rs:817:33: 817:36] { self: move _46 }; // scope 2 at cita-network/src/node_manager.rs:817:33: 819:22
                                         // closure
                                         // + def_id: DefId(0:384 ~ cita_network[da60]::node_manager::{impl#13}::handle::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     for<'a> extern "rust-call" fn((&'a mut node_manager::TransformAddr,)),
                                         //     (&node_manager::AddRepeatedNodeReq,),
                                         // ]
        _41 = std::collections::btree_map::Entry::<'_, SessionId, TransformAddr>::and_modify::<[closure@cita-network/src/node_manager.rs:817:33: 817:36]>(move _42, move _45) -> bb29; // scope 2 at cita-network/src/node_manager.rs:814:25: 819:23
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:817:22: 817:32
                                         // + literal: Const { ty: fn(std::collections::btree_map::Entry<'_, SessionId, TransformAddr>, [closure@cita-network/src/node_manager.rs:817:33: 817:36]) -> std::collections::btree_map::Entry<'_, SessionId, TransformAddr> {std::collections::btree_map::Entry::<'_, SessionId, TransformAddr>::and_modify::<[closure@cita-network/src/node_manager.rs:817:33: 817:36]>}, val: Value(<ZST>) }
    }

    bb20: {
        _47 = log::Level::Warn;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _50 = &_47;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _61 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[2])) }
        _49 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _50, _61) -> bb24; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb21: {
        _48 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _52 = &_47;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _54 = log::max_level() -> bb25;  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _48) -> [0: bb29, otherwise: bb27]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        switchInt(move _49) -> [0: bb21, otherwise: bb22]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _53 = &_54;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _51 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _52, move _53) -> bb26; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _48 = move _51;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _60 = const _;                   // scope 6 at cita-network/src/node_manager.rs:822:19: 822:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:822:19: 822:78
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[1])) }
        _57 = _60 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/node_manager.rs:822:19: 822:78
        _56 = Arguments::<'_>::new_const(move _57) -> bb28; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb28: {
        _59 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(AddRepeatedNodeReq::handle, [], Some(promoted[0])) }
        _55 = log::__private_api_log(move _56, _47, _59) -> bb29; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb29: {
        _58 = std::option::Option::<std::net::SocketAddr>::None; // scope 0 at cita-network/src/node_manager.rs:825:32: 825:36
        ((*_2).14: std::option::Option<std::net::SocketAddr>) = move _58; // scope 0 at cita-network/src/node_manager.rs:825:9: 825:36
        return;                          // scope 0 at cita-network/src/node_manager.rs:826:6: 826:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:822:13: 822:79
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:822:13: 822:79

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:822:13: 822:79
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:822:13: 822:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:822:13: 822:79
        _1 = (move _2, move _4, move _6, const 822_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:822:19: 822:78
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:822:19: 822:78

    bb0: {
        _1 = [const "[NodeManager] Cant find repeated sock addr in known addrs"]; // scope 0 at cita-network/src/node_manager.rs:822:19: 822:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:822:19: 822:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:822:19: 822:78
        return;                          // scope 0 at cita-network/src/node_manager.rs:822:19: 822:78
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:799:9: 802:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:799:9: 802:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:799:9: 802:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:799:9: 802:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:799:9: 802:10
        _1 = (move _2, move _4, move _6, const 799_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:800:13: 800:78
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:800:13: 800:78

    bb0: {
        _1 = [const "[NodeManager] Dialing a repeated node [", const "], on session: ", const "."]; // scope 0 at cita-network/src/node_manager.rs:800:13: 800:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:800:13: 800:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:800:13: 800:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:800:13: 800:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:800:13: 800:78
        return;                          // scope 0 at cita-network/src/node_manager.rs:800:13: 800:78
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:793:1: 793:24>::handle::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:817:33: 817:36], _2: &mut TransformAddr) -> () {
    debug v => _2;                       // in scope 0 at cita-network/src/node_manager.rs:817:34: 817:35
    debug self => (*(_1.0: &node_manager::AddRepeatedNodeReq)); // in scope 0 at cita-network/src/node_manager.rs:798:19: 798:23
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:817:37: 817:37
    let mut _3: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:818:40: 818:55
    let mut _4: std::net::SocketAddr;    // in scope 0 at cita-network/src/node_manager.rs:818:45: 818:54
    let mut _5: &node_manager::AddRepeatedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:817:33: 819:22

    bb0: {
        _5 = deref_copy (_1.0: &node_manager::AddRepeatedNodeReq); // scope 0 at cita-network/src/node_manager.rs:818:45: 818:54
        _4 = ((*_5).0: std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:818:45: 818:54
        _3 = std::option::Option::<std::net::SocketAddr>::Some(move _4); // scope 0 at cita-network/src/node_manager.rs:818:40: 818:55
        ((*_2).1: std::option::Option<std::net::SocketAddr>) = move _3; // scope 0 at cita-network/src/node_manager.rs:818:25: 818:55
        return;                          // scope 0 at cita-network/src/node_manager.rs:819:22: 819:22
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:834:1: 834:23>::new(_1: usize, _2: pubsub::crossbeam_channel::Sender<Vec<std::net::SocketAddr>>) -> GetRandomNodesReq {
    debug num => _1;                     // in scope 0 at cita-network/src/node_manager.rs:835:16: 835:19
    debug return_channel => _2;          // in scope 0 at cita-network/src/node_manager.rs:835:28: 835:42
    let mut _0: node_manager::GetRandomNodesReq; // return place in scope 0 at cita-network/src/node_manager.rs:835:72: 835:76

    bb0: {
        _0 = GetRandomNodesReq { num: _1, return_channel: move _2 }; // scope 0 at cita-network/src/node_manager.rs:836:9: 839:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:840:6: 840:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:834:1: 834:23>::handle(_1: GetRandomNodesReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:842:19: 842:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:842:25: 842:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:842:53: 842:53
    let mut _3: std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:843:13: 843:22
    let mut _4: std::iter::Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, node_manager::NodeStatus>>; // in scope 0 at cita-network/src/node_manager.rs:843:33: 843:68
    let mut _5: std::collections::hash_map::Keys<'_, std::net::SocketAddr, node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:843:33: 843:59
    let mut _6: &std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:843:33: 843:59
    let _7: ();                          // in scope 0 at cita-network/src/node_manager.rs:844:9: 844:41
    let mut _8: &mut rand::ThreadRng;    // in scope 0 at cita-network/src/node_manager.rs:844:9: 844:41
    let mut _9: rand::ThreadRng;         // in scope 0 at cita-network/src/node_manager.rs:844:9: 844:21
    let mut _10: &mut [std::net::SocketAddr]; // in scope 0 at cita-network/src/node_manager.rs:844:30: 844:40
    let mut _11: &mut [std::net::SocketAddr]; // in scope 0 at cita-network/src/node_manager.rs:844:30: 844:40
    let mut _12: &mut std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:844:30: 844:40
    let _13: ();                         // in scope 0 at cita-network/src/node_manager.rs:845:9: 845:33
    let mut _14: &mut std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:845:9: 845:33
    let mut _15: usize;                  // in scope 0 at cita-network/src/node_manager.rs:845:24: 845:32
    let mut _16: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<std::vec::Vec<std::net::SocketAddr>>>; // in scope 0 at cita-network/src/node_manager.rs:847:25: 847:60
    let mut _17: &pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:847:25: 847:60
    let mut _18: std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:847:54: 847:59
    let mut _19: isize;                  // in scope 0 at cita-network/src/node_manager.rs:847:16: 847:22
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _23: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _24: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _25: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _26: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _27: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _28: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _29: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _30: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _31: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:849:17: 849:76
    let mut _32: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _33: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _34: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _35: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:850:17: 850:18
    let _36: &pubsub::crossbeam_channel::TrySendError<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:850:17: 850:18
    let mut _40: bool;                   // in scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    let mut _41: bool;                   // in scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    let mut _42: isize;                  // in scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    scope 1 {
        debug addrs => _3;               // in scope 1 at cita-network/src/node_manager.rs:843:13: 843:22
        scope 2 {
            debug e => _20;              // in scope 2 at cita-network/src/node_manager.rs:847:20: 847:21
            let _20: pubsub::crossbeam_channel::TrySendError<std::vec::Vec<std::net::SocketAddr>>; // in scope 2 at cita-network/src/node_manager.rs:847:20: 847:21
            let _21: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _21;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _37: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _38: &[&str; 1]; // in scope 3 at cita-network/src/node_manager.rs:849:17: 849:76
                let mut _39: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _40 = const false;               // scope 0 at cita-network/src/node_manager.rs:843:13: 843:22
        _41 = const false;               // scope 0 at cita-network/src/node_manager.rs:843:13: 843:22
        _6 = &((*_2).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 0 at cita-network/src/node_manager.rs:843:33: 843:59
        _5 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::keys(move _6) -> [return: bb1, unwind: bb25]; // scope 0 at cita-network/src/node_manager.rs:843:33: 843:59
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:843:53: 843:57
                                         // + literal: Const { ty: for<'a> fn(&'a HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>) -> std::collections::hash_map::Keys<'a, std::net::SocketAddr, NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::keys}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = <std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus> as Iterator>::cloned::<'_, std::net::SocketAddr>(move _5) -> [return: bb2, unwind: bb25]; // scope 0 at cita-network/src/node_manager.rs:843:33: 843:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:843:60: 843:66
                                         // + literal: Const { ty: fn(std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>) -> Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> {<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus> as Iterator>::cloned::<'_, std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = <Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> as Iterator>::collect::<Vec<std::net::SocketAddr>>(move _4) -> [return: bb3, unwind: bb25]; // scope 0 at cita-network/src/node_manager.rs:843:33: 843:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:843:69: 843:76
                                         // + literal: Const { ty: fn(Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>>) -> Vec<std::net::SocketAddr> {<Cloned<std::collections::hash_map::Keys<'_, std::net::SocketAddr, NodeStatus>> as Iterator>::collect::<Vec<std::net::SocketAddr>>}, val: Value(<ZST>) }
    }

    bb3: {
        _41 = const true;                // scope 0 at cita-network/src/node_manager.rs:843:77: 843:78
        _9 = thread_rng() -> [return: bb4, unwind: bb31]; // scope 1 at cita-network/src/node_manager.rs:844:9: 844:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:844:9: 844:19
                                         // + literal: Const { ty: fn() -> ThreadRng {thread_rng}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = &mut _9;                    // scope 1 at cita-network/src/node_manager.rs:844:9: 844:41
        _12 = &mut _3;                   // scope 1 at cita-network/src/node_manager.rs:844:30: 844:40
        _11 = <Vec<std::net::SocketAddr> as DerefMut>::deref_mut(_12) -> [return: bb5, unwind: bb24]; // scope 1 at cita-network/src/node_manager.rs:844:30: 844:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:844:30: 844:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<std::net::SocketAddr>) -> &'a mut <Vec<std::net::SocketAddr> as Deref>::Target {<Vec<std::net::SocketAddr> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = _11;                       // scope 1 at cita-network/src/node_manager.rs:844:30: 844:40
        _7 = <ThreadRng as Rng>::shuffle::<std::net::SocketAddr>(move _8, move _10) -> [return: bb6, unwind: bb24]; // scope 1 at cita-network/src/node_manager.rs:844:9: 844:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:844:22: 844:29
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut ThreadRng, &'b mut [std::net::SocketAddr]) {<ThreadRng as Rng>::shuffle::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_9) -> [return: bb7, unwind: bb31]; // scope 1 at cita-network/src/node_manager.rs:844:41: 844:42
    }

    bb7: {
        _14 = &mut _3;                   // scope 1 at cita-network/src/node_manager.rs:845:9: 845:33
        _15 = (_1.0: usize);             // scope 1 at cita-network/src/node_manager.rs:845:24: 845:32
        _13 = Vec::<std::net::SocketAddr>::truncate(move _14, move _15) -> [return: bb8, unwind: bb31]; // scope 1 at cita-network/src/node_manager.rs:845:9: 845:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:845:15: 845:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<std::net::SocketAddr>, usize) {Vec::<std::net::SocketAddr>::truncate}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = &(_1.1: pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>); // scope 2 at cita-network/src/node_manager.rs:847:25: 847:60
        _41 = const false;               // scope 2 at cita-network/src/node_manager.rs:847:54: 847:59
        _18 = move _3;                   // scope 2 at cita-network/src/node_manager.rs:847:54: 847:59
        _16 = pubsub::crossbeam_channel::Sender::<Vec<std::net::SocketAddr>>::try_send(move _17, move _18) -> [return: bb9, unwind: bb31]; // scope 2 at cita-network/src/node_manager.rs:847:25: 847:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:847:45: 847:53
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<Vec<std::net::SocketAddr>>, Vec<std::net::SocketAddr>) -> Result<(), pubsub::crossbeam_channel::TrySendError<Vec<std::net::SocketAddr>>> {pubsub::crossbeam_channel::Sender::<Vec<std::net::SocketAddr>>::try_send}, val: Value(<ZST>) }
    }

    bb9: {
        _40 = const true;                // scope 2 at cita-network/src/node_manager.rs:847:59: 847:60
        _19 = discriminant(_16);         // scope 2 at cita-network/src/node_manager.rs:847:16: 847:22
        switchInt(move _19) -> [1: bb10, otherwise: bb21]; // scope 2 at cita-network/src/node_manager.rs:847:16: 847:22
    }

    bb10: {
        _40 = const false;               // scope 2 at cita-network/src/node_manager.rs:847:20: 847:21
        _20 = move ((_16 as Err).0: pubsub::crossbeam_channel::TrySendError<std::vec::Vec<std::net::SocketAddr>>); // scope 2 at cita-network/src/node_manager.rs:847:20: 847:21
        _21 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _24 = &_21;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _39 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(GetRandomNodesReq::handle, [], Some(promoted[2])) }
        _23 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _24, _39) -> [return: bb14, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb13;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _26 = &_21;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _28 = log::max_level() -> [return: bb15, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _22) -> [0: bb20, otherwise: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        switchInt(move _23) -> [0: bb11, otherwise: bb12]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _27 = &_28;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _25 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _26, move _27) -> [return: bb16, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb16: {
        _22 = move _25;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb13;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _38 = const _;                   // scope 3 at cita-network/src/node_manager.rs:849:17: 849:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:849:17: 849:76
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(GetRandomNodesReq::handle, [], Some(promoted[1])) }
        _31 = _38 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:849:17: 849:76
        _36 = &_20;                      // scope 3 at cita-network/src/node_manager.rs:850:17: 850:18
        _35 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<Vec<std::net::SocketAddr>>>(_36) -> [return: bb18, unwind: bb23]; // scope 3 at cita-network/src/node_manager.rs:850:17: 850:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:850:17: 850:18
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<Vec<std::net::SocketAddr>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<Vec<std::net::SocketAddr>>>}, val: Value(<ZST>) }
    }

    bb18: {
        _34 = [move _35];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _33 = &_34;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _32 = _33 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _30 = Arguments::<'_>::new_v1(move _31, move _32) -> [return: bb19, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb19: {
        _37 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(GetRandomNodesReq::handle, [], Some(promoted[0])) }
        _29 = log::__private_api_log(move _30, _21, _37) -> [return: bb32, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_20) -> [return: bb21, unwind: bb25]; // scope 1 at cita-network/src/node_manager.rs:852:9: 852:10
    }

    bb21: {
        _41 = const false;               // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
        _42 = discriminant(_16);         // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
        switchInt(move _42) -> [1: bb28, otherwise: bb27]; // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb22: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:853:6: 853:6
    }

    bb23 (cleanup): {
        drop(_20) -> bb25;               // scope 1 at cita-network/src/node_manager.rs:852:9: 852:10
    }

    bb24 (cleanup): {
        drop(_9) -> bb31;                // scope 1 at cita-network/src/node_manager.rs:844:41: 844:42
    }

    bb25 (cleanup): {
        drop(_1) -> bb26;                // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb26 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:842:5: 853:6
    }

    bb27: {
        _40 = const false;               // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
        drop(_1) -> bb22;                // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb28: {
        switchInt(_40) -> [0: bb27, otherwise: bb29]; // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb29: {
        drop(((_16 as Err).0: pubsub::crossbeam_channel::TrySendError<std::vec::Vec<std::net::SocketAddr>>)) -> [return: bb27, unwind: bb25]; // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb30 (cleanup): {
        drop(_3) -> bb25;                // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb31 (cleanup): {
        switchInt(_41) -> [0: bb25, otherwise: bb30]; // scope 0 at cita-network/src/node_manager.rs:853:5: 853:6
    }

    bb32: {
        goto -> bb20;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:834:1: 834:23>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:848:13: 851:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:848:13: 851:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:848:13: 851:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:848:13: 851:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:848:13: 851:14
        _1 = (move _2, move _4, move _6, const 848_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:834:1: 834:23>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:849:17: 849:76
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:849:17: 849:76

    bb0: {
        _1 = [const "[NodeManager] Get random n nodes, send them failed : "]; // scope 0 at cita-network/src/node_manager.rs:849:17: 849:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:849:17: 849:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:849:17: 849:76
        return;                          // scope 0 at cita-network/src/node_manager.rs:849:17: 849:76
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:834:1: 834:23>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::new(_1: SessionId, _2: std::net::SocketAddr, _3: tentacle::service::SessionType) -> PendingConnectedNodeReq {
    debug session_id => _1;              // in scope 0 at cita-network/src/node_manager.rs:863:16: 863:26
    debug addr => _2;                    // in scope 0 at cita-network/src/node_manager.rs:863:39: 863:43
    debug ty => _3;                      // in scope 0 at cita-network/src/node_manager.rs:863:57: 863:59
    let mut _0: node_manager::PendingConnectedNodeReq; // return place in scope 0 at cita-network/src/node_manager.rs:863:77: 863:81

    bb0: {
        _0 = PendingConnectedNodeReq { session_id: _1, addr: _2, ty: _3 }; // scope 0 at cita-network/src/node_manager.rs:864:9: 868:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:869:6: 869:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle(_1: PendingConnectedNodeReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:871:19: 871:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:871:25: 871:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:871:53: 871:53
    let mut _3: bool;                    // in scope 0 at cita-network/src/node_manager.rs:872:12: 872:65
    let mut _4: usize;                   // in scope 0 at cita-network/src/node_manager.rs:872:12: 872:41
    let mut _5: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:872:12: 872:41
    let mut _6: usize;                   // in scope 0 at cita-network/src/node_manager.rs:872:45: 872:65
    let _7: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:875:17: 875:105
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:876:17: 876:37
    let _22: &usize;                     // in scope 0 at cita-network/src/node_manager.rs:876:17: 876:37
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:876:39: 876:54
    let _24: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:876:39: 876:54
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:876:56: 876:65
    let _26: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:876:56: 876:65
    let mut _27: isize;                  // in scope 0 at cita-network/src/node_manager.rs:878:20: 878:38
    let mut _29: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:879:25: 879:57
    let mut _30: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:879:25: 879:57
    let mut _31: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:879:41: 879:56
    let _32: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _34: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _35: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _38: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _40: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _41: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _42: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:885:13: 885:93
    let mut _43: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _45: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:886:13: 886:28
    let _47: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:886:13: 886:28
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:886:30: 886:39
    let _49: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:886:30: 886:39
    let _50: std::option::Option<node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:888:9: 890:75
    let mut _51: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:888:9: 890:75
    let mut _52: tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:890:21: 890:36
    let mut _53: node_manager::SessionInfo; // in scope 0 at cita-network/src/node_manager.rs:890:38: 890:74
    let mut _54: tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:890:55: 890:62
    let mut _55: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:890:64: 890:73
    scope 1 {
        debug lvl => _7;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _59: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _60: &[&str; 3];         // in scope 1 at cita-network/src/node_manager.rs:875:17: 875:105
        let mut _61: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug ctrl => _28;               // in scope 2 at cita-network/src/node_manager.rs:878:25: 878:37
        let _28: &mut tentacle::service::ServiceControl; // in scope 2 at cita-network/src/node_manager.rs:878:25: 878:37
        scope 3 {
        }
    }
    scope 4 {
        debug lvl => _32;                // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _56: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _57: &[&str; 3];         // in scope 4 at cita-network/src/node_manager.rs:885:13: 885:93
        let mut _58: &log::LevelFilter;  // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _5 = &((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 0 at cita-network/src/node_manager.rs:872:12: 872:41
        _4 = BTreeMap::<SessionId, TransformAddr>::len(move _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:872:12: 872:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:872:36: 872:39
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<SessionId, TransformAddr>) -> usize {BTreeMap::<SessionId, TransformAddr>::len}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = ((*_2).6: usize);           // scope 0 at cita-network/src/node_manager.rs:872:45: 872:65
        _3 = Ge(move _4, move _6);       // scope 0 at cita-network/src/node_manager.rs:872:12: 872:65
        switchInt(move _3) -> [0: bb17, otherwise: bb2]; // scope 0 at cita-network/src/node_manager.rs:872:12: 872:65
    }

    bb2: {
        _7 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _10 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _61 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[5])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _61) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _12 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> bb7;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _8) -> [0: bb14, otherwise: bb9]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _9) -> [0: bb3, otherwise: bb4]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _13 = &_14;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> bb8; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _8 = move _11;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _60 = const _;                   // scope 1 at cita-network/src/node_manager.rs:875:17: 875:105
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:875:17: 875:105
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[4])) }
        _17 = _60 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:875:17: 875:105
        _22 = &((*_2).6: usize);         // scope 1 at cita-network/src/node_manager.rs:876:17: 876:37
        _21 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(_22) -> bb10; // scope 1 at cita-network/src/node_manager.rs:876:17: 876:37
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:876:17: 876:37
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb10: {
        _24 = &(_1.0: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:876:39: 876:54
        _23 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_24) -> bb11; // scope 1 at cita-network/src/node_manager.rs:876:39: 876:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:876:39: 876:54
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = &(_1.1: std::net::SocketAddr); // scope 1 at cita-network/src/node_manager.rs:876:56: 876:65
        _25 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_26) -> bb12; // scope 1 at cita-network/src/node_manager.rs:876:56: 876:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:876:56: 876:65
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb12: {
        _20 = [move _21, move _23, move _25]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = &_20;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = Arguments::<'_>::new_v1(move _17, move _18) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _59 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[3])) }
        _15 = log::__private_api_log(move _16, _7, _59) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _27 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 2 at cita-network/src/node_manager.rs:878:20: 878:38
        switchInt(move _27) -> [1: bb15, otherwise: bb30]; // scope 2 at cita-network/src/node_manager.rs:878:20: 878:38
    }

    bb15: {
        _28 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 2 at cita-network/src/node_manager.rs:878:25: 878:37
        _30 = &(*_28);                   // scope 2 at cita-network/src/node_manager.rs:879:25: 879:57
        _31 = (_1.0: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:879:41: 879:56
        _29 = ServiceControl::disconnect(move _30, move _31) -> bb16; // scope 2 at cita-network/src/node_manager.rs:879:25: 879:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:879:30: 879:40
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId) -> Result<(), tentacle::error::Error> {ServiceControl::disconnect}, val: Value(<ZST>) }
    }

    bb16: {
        drop(_29) -> bb30;               // scope 2 at cita-network/src/node_manager.rs:879:57: 879:58
    }

    bb17: {
        _32 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _35 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _58 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[2])) }
        _34 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _35, _58) -> bb21; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _33 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _37 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _39 = log::max_level() -> bb22;  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _33) -> [0: bb28, otherwise: bb24]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        switchInt(move _34) -> [0: bb18, otherwise: bb19]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _38 = &_39;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, move _38) -> bb23; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _33 = move _36;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _57 = const _;                   // scope 4 at cita-network/src/node_manager.rs:885:13: 885:93
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:885:13: 885:93
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[1])) }
        _42 = _57 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/node_manager.rs:885:13: 885:93
        _47 = &(_1.0: tentacle::SessionId); // scope 4 at cita-network/src/node_manager.rs:886:13: 886:28
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_47) -> bb25; // scope 4 at cita-network/src/node_manager.rs:886:13: 886:28
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:886:13: 886:28
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb25: {
        _49 = &(_1.1: std::net::SocketAddr); // scope 4 at cita-network/src/node_manager.rs:886:30: 886:39
        _48 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_49) -> bb26; // scope 4 at cita-network/src/node_manager.rs:886:30: 886:39
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:886:30: 886:39
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb26: {
        _45 = [move _46, move _48];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = &_45;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = _44 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = Arguments::<'_>::new_v1(move _42, move _43) -> bb27; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb27: {
        _56 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(PendingConnectedNodeReq::handle, [], Some(promoted[0])) }
        _40 = log::__private_api_log(move _41, _32, _56) -> bb28; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb28: {
        _51 = &mut ((*_2).3: std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>); // scope 0 at cita-network/src/node_manager.rs:888:9: 890:75
        _52 = (_1.0: tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:890:21: 890:36
        _54 = (_1.2: tentacle::service::SessionType); // scope 0 at cita-network/src/node_manager.rs:890:55: 890:62
        _55 = (_1.1: std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:890:64: 890:73
        _53 = SessionInfo::new(move _54, move _55) -> bb29; // scope 0 at cita-network/src/node_manager.rs:890:38: 890:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:890:38: 890:54
                                         // + literal: Const { ty: fn(tentacle::service::SessionType, std::net::SocketAddr) -> SessionInfo {SessionInfo::new}, val: Value(<ZST>) }
    }

    bb29: {
        _50 = BTreeMap::<SessionId, SessionInfo>::insert(move _51, move _52, move _53) -> bb30; // scope 0 at cita-network/src/node_manager.rs:888:9: 890:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:890:14: 890:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<SessionId, SessionInfo>, SessionId, SessionInfo) -> std::option::Option<SessionInfo> {BTreeMap::<SessionId, SessionInfo>::insert}, val: Value(<ZST>) }
    }

    bb30: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:891:6: 891:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:884:9: 887:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:884:9: 887:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:884:9: 887:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:884:9: 887:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:884:9: 887:10
        _1 = (move _2, move _4, move _6, const 884_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:885:13: 885:93
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:885:13: 885:93

    bb0: {
        _1 = [const "[NodeManager] Session [", const "], address: ", const " pending to add to Connected_addrs."]; // scope 0 at cita-network/src/node_manager.rs:885:13: 885:93
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:885:13: 885:93
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:885:13: 885:93
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:885:13: 885:93
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:885:13: 885:93
        return;                          // scope 0 at cita-network/src/node_manager.rs:885:13: 885:93
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:874:13: 877:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:874:13: 877:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:874:13: 877:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:874:13: 877:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:874:13: 877:14
        _1 = (move _2, move _4, move _6, const 874_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:875:17: 875:105
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:875:17: 875:105

    bb0: {
        _1 = [const "[NodeManager] Has reached to max connects [", const "], refuse Session [", const "], address: "]; // scope 0 at cita-network/src/node_manager.rs:875:17: 875:105
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:875:17: 875:105
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:875:17: 875:105
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:875:17: 875:105
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:875:17: 875:105
        return;                          // scope 0 at cita-network/src/node_manager.rs:875:17: 875:105
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:862:1: 862:29>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::new(_1: SessionId) -> DelConnectedNodeReq {
    debug session_id => _1;              // in scope 0 at cita-network/src/node_manager.rs:899:16: 899:26
    let mut _0: node_manager::DelConnectedNodeReq; // return place in scope 0 at cita-network/src/node_manager.rs:899:42: 899:46

    bb0: {
        _0 = DelConnectedNodeReq { session_id: _1 }; // scope 0 at cita-network/src/node_manager.rs:900:9: 900:43
        return;                          // scope 0 at cita-network/src/node_manager.rs:901:6: 901:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle(_1: DelConnectedNodeReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:903:19: 903:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:903:25: 903:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:903:53: 903:53
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:904:15: 904:58
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:904:60: 904:75
    let _18: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:904:60: 904:75
    let mut _19: std::option::Option<node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:906:29: 906:77
    let mut _20: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:906:29: 906:77
    let _21: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:906:60: 906:76
    let mut _22: isize;                  // in scope 0 at cita-network/src/node_manager.rs:906:16: 906:26
    let mut _25: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:907:30: 907:45
    let mut _26: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:907:56: 907:70
    let _27: ();                         // in scope 0 at cita-network/src/node_manager.rs:908:13: 908:54
    let mut _28: &node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:908:13: 908:54
    let mut _29: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:908:34: 908:44
    let mut _31: std::option::Option<(&cita_types::H160, &tentacle::SessionId)>; // in scope 0 at cita-network/src/node_manager.rs:912:42: 915:58
    let mut _32: &mut std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:912:42: 915:58
    let mut _33: std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:912:42: 914:28
    let mut _34: &std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:912:42: 914:28
    let mut _35: [closure@cita-network/src/node_manager.rs:915:27: 915:36]; // in scope 0 at cita-network/src/node_manager.rs:915:27: 915:57
    let mut _36: &node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:915:27: 915:57
    let mut _37: isize;                  // in scope 0 at cita-network/src/node_manager.rs:912:24: 912:39
    let mut _39: isize;                  // in scope 0 at cita-network/src/node_manager.rs:923:20: 923:29
    let _41: ();                         // in scope 0 at cita-network/src/node_manager.rs:924:17: 924:66
    let mut _42: &mut node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:924:17: 924:66
    let _43: &cita_types::H160;          // in scope 0 at cita-network/src/node_manager.rs:924:61: 924:65
    let _44: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:925:17: 925:57
    let mut _45: &mut std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:925:17: 925:57
    let _46: &cita_types::H160;          // in scope 0 at cita-network/src/node_manager.rs:925:52: 925:56
    let mut _47: std::option::Option<node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:930:37: 930:93
    let mut _48: &mut std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>; // in scope 0 at cita-network/src/node_manager.rs:930:37: 930:93
    let _49: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:930:76: 930:92
    let mut _50: isize;                  // in scope 0 at cita-network/src/node_manager.rs:930:16: 930:34
    let mut _52: bool;                   // in scope 0 at cita-network/src/node_manager.rs:931:16: 931:56
    let mut _53: &tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:931:16: 931:31
    let _54: ();                         // in scope 0 at cita-network/src/node_manager.rs:932:17: 932:65
    let mut _55: &node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:932:17: 932:65
    let mut _56: std::net::SocketAddr;   // in scope 0 at cita-network/src/node_manager.rs:932:38: 932:55
    let mut _57: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:934:40: 934:44
    let mut _62: &cita_types::H160;      // in scope 0 at cita-network/src/node_manager.rs:912:42: 915:58
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _59: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _60: &[&str; 2];         // in scope 1 at cita-network/src/node_manager.rs:904:15: 904:58
        let mut _61: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug addr => _23;               // in scope 2 at cita-network/src/node_manager.rs:906:21: 906:25
        let _23: node_manager::TransformAddr; // in scope 2 at cita-network/src/node_manager.rs:906:21: 906:25
        let _24: std::net::SocketAddr;   // in scope 2 at cita-network/src/node_manager.rs:907:17: 907:27
        scope 3 {
            debug trans_addr => _24;     // in scope 3 at cita-network/src/node_manager.rs:907:17: 907:27
            let _30: std::option::Option<cita_types::H160>; // in scope 3 at cita-network/src/node_manager.rs:911:17: 911:20
            scope 4 {
                debug key => _30;        // in scope 4 at cita-network/src/node_manager.rs:911:17: 911:20
                scope 6 {
                    debug key => _40;    // in scope 6 at cita-network/src/node_manager.rs:923:25: 923:28
                    let _40: cita_types::H160; // in scope 6 at cita-network/src/node_manager.rs:923:25: 923:28
                }
            }
            scope 5 {
                debug key => _38;        // in scope 5 at cita-network/src/node_manager.rs:912:31: 912:34
                let _38: cita_types::H160; // in scope 5 at cita-network/src/node_manager.rs:912:31: 912:34
            }
        }
    }
    scope 7 {
        debug session_info => _51;       // in scope 7 at cita-network/src/node_manager.rs:930:21: 930:33
        let _51: node_manager::SessionInfo; // in scope 7 at cita-network/src/node_manager.rs:930:21: 930:33
        let mut _58: &tentacle::service::SessionType; // in scope 7 at cita-network/src/node_manager.rs:931:35: 931:56
    }

    bb0: {
        _3 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _61 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(DelConnectedNodeReq::handle, [], Some(promoted[3])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _61) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb10, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _60 = const _;                   // scope 1 at cita-network/src/node_manager.rs:904:15: 904:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:904:15: 904:58
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(DelConnectedNodeReq::handle, [], Some(promoted[2])) }
        _13 = _60 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:904:15: 904:58
        _18 = &(_1.0: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:904:60: 904:75
        _17 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_18) -> bb8; // scope 1 at cita-network/src/node_manager.rs:904:60: 904:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:904:60: 904:75
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb8: {
        _16 = [move _17];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> bb9; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _59 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(DelConnectedNodeReq::handle, [], Some(promoted[1])) }
        _11 = log::__private_api_log(move _12, _3, _59) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb10: {
        _20 = &mut ((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 2 at cita-network/src/node_manager.rs:906:29: 906:77
        _21 = &(_1.0: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:906:60: 906:76
        _19 = BTreeMap::<SessionId, TransformAddr>::remove::<SessionId>(move _20, _21) -> bb11; // scope 2 at cita-network/src/node_manager.rs:906:29: 906:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:906:53: 906:59
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<SessionId, TransformAddr>, &'b SessionId) -> std::option::Option<TransformAddr> {BTreeMap::<SessionId, TransformAddr>::remove::<SessionId>}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = discriminant(_19);         // scope 2 at cita-network/src/node_manager.rs:906:16: 906:26
        switchInt(move _22) -> [1: bb12, otherwise: bb22]; // scope 2 at cita-network/src/node_manager.rs:906:16: 906:26
    }

    bb12: {
        _23 = move ((_19 as Some).0: node_manager::TransformAddr); // scope 2 at cita-network/src/node_manager.rs:906:21: 906:25
        _25 = (_23.1: std::option::Option<std::net::SocketAddr>); // scope 2 at cita-network/src/node_manager.rs:907:30: 907:45
        _26 = (_23.0: std::net::SocketAddr); // scope 2 at cita-network/src/node_manager.rs:907:56: 907:70
        _24 = std::option::Option::<std::net::SocketAddr>::unwrap_or(move _25, move _26) -> bb13; // scope 2 at cita-network/src/node_manager.rs:907:30: 907:71
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:907:46: 907:55
                                         // + literal: Const { ty: fn(std::option::Option<std::net::SocketAddr>, std::net::SocketAddr) -> std::net::SocketAddr {std::option::Option::<std::net::SocketAddr>::unwrap_or}, val: Value(<ZST>) }
    }

    bb13: {
        _28 = &_1;                       // scope 3 at cita-network/src/node_manager.rs:908:13: 908:54
        _29 = _24;                       // scope 3 at cita-network/src/node_manager.rs:908:34: 908:44
        _27 = DelConnectedNodeReq::fix_node_status(move _28, move _29, _2) -> bb14; // scope 3 at cita-network/src/node_manager.rs:908:13: 908:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:908:18: 908:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a DelConnectedNodeReq, std::net::SocketAddr, &'b mut NodesManager) {DelConnectedNodeReq::fix_node_status}, val: Value(<ZST>) }
    }

    bb14: {
        _34 = &((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 5 at cita-network/src/node_manager.rs:912:42: 914:28
        _33 = BTreeMap::<H160, SessionId>::iter(move _34) -> bb15; // scope 5 at cita-network/src/node_manager.rs:912:42: 914:28
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:914:22: 914:26
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<H160, SessionId>) -> std::collections::btree_map::Iter<'a, H160, SessionId> {BTreeMap::<H160, SessionId>::iter}, val: Value(<ZST>) }
    }

    bb15: {
        _32 = &mut _33;                  // scope 5 at cita-network/src/node_manager.rs:912:42: 915:58
        _36 = &_1;                       // scope 5 at cita-network/src/node_manager.rs:915:27: 915:57
        _35 = [closure@cita-network/src/node_manager.rs:915:27: 915:36] { self: move _36 }; // scope 5 at cita-network/src/node_manager.rs:915:27: 915:57
                                         // closure
                                         // + def_id: DefId(0:403 ~ cita_network[da60]::node_manager::{impl#16}::handle::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a (&cita_types::H160, &tentacle::SessionId),)) -> bool,
                                         //     (&node_manager::DelConnectedNodeReq,),
                                         // ]
        _31 = <std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::find::<[closure@cita-network/src/node_manager.rs:915:27: 915:36]>(move _32, move _35) -> bb16; // scope 5 at cita-network/src/node_manager.rs:912:42: 915:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:915:22: 915:26
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::btree_map::Iter<'_, H160, SessionId>, [closure@cita-network/src/node_manager.rs:915:27: 915:36]) -> std::option::Option<<std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::Item> {<std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::find::<[closure@cita-network/src/node_manager.rs:915:27: 915:36]>}, val: Value(<ZST>) }
    }

    bb16: {
        _37 = discriminant(_31);         // scope 5 at cita-network/src/node_manager.rs:912:24: 912:39
        switchInt(move _37) -> [1: bb17, otherwise: bb18]; // scope 5 at cita-network/src/node_manager.rs:912:24: 912:39
    }

    bb17: {
        _62 = deref_copy (((_31 as Some).0: (&cita_types::H160, &tentacle::SessionId)).0: &cita_types::H160); // scope 5 at cita-network/src/node_manager.rs:912:31: 912:34
        _38 = (*_62);                    // scope 5 at cita-network/src/node_manager.rs:912:31: 912:34
        _30 = std::option::Option::<H160>::Some(_38); // scope 5 at cita-network/src/node_manager.rs:917:21: 917:30
        goto -> bb19;                    // scope 3 at cita-network/src/node_manager.rs:912:17: 920:18
    }

    bb18: {
        _30 = std::option::Option::<H160>::None; // scope 3 at cita-network/src/node_manager.rs:919:21: 919:25
        goto -> bb19;                    // scope 3 at cita-network/src/node_manager.rs:912:17: 920:18
    }

    bb19: {
        _39 = discriminant(_30);         // scope 6 at cita-network/src/node_manager.rs:923:20: 923:29
        switchInt(move _39) -> [1: bb20, otherwise: bb22]; // scope 6 at cita-network/src/node_manager.rs:923:20: 923:29
    }

    bb20: {
        _40 = ((_30 as Some).0: cita_types::H160); // scope 6 at cita-network/src/node_manager.rs:923:25: 923:28
        _42 = &mut ((*_2).12: node_manager::ConsensusNodeTopology); // scope 6 at cita-network/src/node_manager.rs:924:17: 924:66
        _43 = &_40;                      // scope 6 at cita-network/src/node_manager.rs:924:61: 924:65
        _41 = ConsensusNodeTopology::del_linked_nodes(move _42, _43) -> bb21; // scope 6 at cita-network/src/node_manager.rs:924:17: 924:66
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:924:44: 924:60
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut ConsensusNodeTopology, &'b H160) {ConsensusNodeTopology::del_linked_nodes}, val: Value(<ZST>) }
    }

    bb21: {
        _45 = &mut ((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 6 at cita-network/src/node_manager.rs:925:17: 925:57
        _46 = &_40;                      // scope 6 at cita-network/src/node_manager.rs:925:52: 925:56
        _44 = BTreeMap::<H160, SessionId>::remove::<H160>(move _45, _46) -> bb22; // scope 6 at cita-network/src/node_manager.rs:925:17: 925:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:925:45: 925:51
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<H160, SessionId>, &'b H160) -> std::option::Option<SessionId> {BTreeMap::<H160, SessionId>::remove::<H160>}, val: Value(<ZST>) }
    }

    bb22: {
        _48 = &mut ((*_2).3: std::collections::BTreeMap<tentacle::SessionId, node_manager::SessionInfo>); // scope 7 at cita-network/src/node_manager.rs:930:37: 930:93
        _49 = &(_1.0: tentacle::SessionId); // scope 7 at cita-network/src/node_manager.rs:930:76: 930:92
        _47 = BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>(move _48, _49) -> bb23; // scope 7 at cita-network/src/node_manager.rs:930:37: 930:93
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:930:69: 930:75
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<SessionId, SessionInfo>, &'b SessionId) -> std::option::Option<SessionInfo> {BTreeMap::<SessionId, SessionInfo>::remove::<SessionId>}, val: Value(<ZST>) }
    }

    bb23: {
        _50 = discriminant(_47);         // scope 7 at cita-network/src/node_manager.rs:930:16: 930:34
        switchInt(move _50) -> [1: bb24, otherwise: bb28]; // scope 7 at cita-network/src/node_manager.rs:930:16: 930:34
    }

    bb24: {
        _51 = move ((_47 as Some).0: node_manager::SessionInfo); // scope 7 at cita-network/src/node_manager.rs:930:21: 930:33
        _53 = &(_51.0: tentacle::service::SessionType); // scope 7 at cita-network/src/node_manager.rs:931:16: 931:31
        _58 = const _;                   // scope 7 at cita-network/src/node_manager.rs:931:35: 931:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:931:35: 931:56
                                         // + literal: Const { ty: &tentacle::service::SessionType, val: Unevaluated(DelConnectedNodeReq::handle, [], Some(promoted[0])) }
        _52 = <tentacle::service::SessionType as PartialEq>::eq(move _53, _58) -> bb25; // scope 7 at cita-network/src/node_manager.rs:931:16: 931:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:931:16: 931:56
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a tentacle::service::SessionType, &'b tentacle::service::SessionType) -> bool {<tentacle::service::SessionType as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb25: {
        switchInt(move _52) -> [0: bb28, otherwise: bb26]; // scope 7 at cita-network/src/node_manager.rs:931:16: 931:56
    }

    bb26: {
        _55 = &_1;                       // scope 7 at cita-network/src/node_manager.rs:932:17: 932:65
        _56 = (_51.1: std::net::SocketAddr); // scope 7 at cita-network/src/node_manager.rs:932:38: 932:55
        _54 = DelConnectedNodeReq::fix_node_status(move _55, move _56, _2) -> bb27; // scope 7 at cita-network/src/node_manager.rs:932:17: 932:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:932:22: 932:37
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a DelConnectedNodeReq, std::net::SocketAddr, &'b mut NodesManager) {DelConnectedNodeReq::fix_node_status}, val: Value(<ZST>) }
    }

    bb27: {
        _57 = std::option::Option::<std::net::SocketAddr>::None; // scope 7 at cita-network/src/node_manager.rs:934:40: 934:44
        ((*_2).14: std::option::Option<std::net::SocketAddr>) = move _57; // scope 7 at cita-network/src/node_manager.rs:934:17: 934:44
        goto -> bb28;                    // scope 7 at cita-network/src/node_manager.rs:931:13: 935:14
    }

    bb28: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:937:6: 937:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle: &tentacle::service::SessionType = {
    let mut _0: &tentacle::service::SessionType; // return place in scope 0 at cita-network/src/node_manager.rs:931:35: 931:56
    let mut _1: tentacle::service::SessionType; // in scope 0 at cita-network/src/node_manager.rs:931:35: 931:56

    bb0: {
        _1 = Outbound;                   // scope 0 at cita-network/src/node_manager.rs:931:35: 931:56
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:931:35: 931:56
        return;                          // scope 0 at cita-network/src/node_manager.rs:931:35: 931:56
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:904:9: 904:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:904:9: 904:76

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:904:9: 904:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:904:9: 904:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:904:9: 904:76
        _1 = (move _2, move _4, move _6, const 904_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:904:15: 904:58
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:904:15: 904:58

    bb0: {
        _1 = [const "[NodeManager] Disconnected session [", const "]"]; // scope 0 at cita-network/src/node_manager.rs:904:15: 904:58
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:904:15: 904:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:904:15: 904:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:904:15: 904:58
        return;                          // scope 0 at cita-network/src/node_manager.rs:904:15: 904:58
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::handle::{closure#0}(_1: &mut [closure@cita-network/src/node_manager.rs:915:27: 915:36], _2: &(&H160, &SessionId)) -> bool {
    debug self => (*((*_1).0: &node_manager::DelConnectedNodeReq)); // in scope 0 at cita-network/src/node_manager.rs:903:19: 903:23
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/node_manager.rs:915:37: 915:37
    let _3: tentacle::SessionId;         // in scope 0 at cita-network/src/node_manager.rs:915:33: 915:34
    let mut _4: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:915:37: 915:38
    let mut _5: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:915:42: 915:57
    let mut _6: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:915:28: 915:35
    let mut _7: &node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/node_manager.rs:915:27: 915:57
    scope 1 {
        debug v => _3;                   // in scope 1 at cita-network/src/node_manager.rs:915:33: 915:34
    }

    bb0: {
        _6 = deref_copy ((*_2).1: &tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:915:33: 915:34
        _3 = (*_6);                      // scope 0 at cita-network/src/node_manager.rs:915:33: 915:34
        _4 = &_3;                        // scope 1 at cita-network/src/node_manager.rs:915:37: 915:38
        _7 = deref_copy ((*_1).0: &node_manager::DelConnectedNodeReq); // scope 1 at cita-network/src/node_manager.rs:915:42: 915:57
        _5 = &((*_7).0: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:915:42: 915:57
        _0 = <SessionId as PartialEq>::eq(move _4, move _5) -> bb1; // scope 1 at cita-network/src/node_manager.rs:915:37: 915:57
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:915:37: 915:57
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a SessionId, &'b SessionId) -> bool {<SessionId as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:915:57: 915:57
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status(_1: &DelConnectedNodeReq, _2: std::net::SocketAddr, _3: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:939:24: 939:29
    debug addr => _2;                    // in scope 0 at cita-network/src/node_manager.rs:939:31: 939:35
    debug service => _3;                 // in scope 0 at cita-network/src/node_manager.rs:939:49: 939:56
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:939:77: 939:77
    let mut _4: std::option::Option<&mut node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:941:44: 941:78
    let mut _5: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:941:44: 941:78
    let _6: &std::net::SocketAddr;       // in scope 0 at cita-network/src/node_manager.rs:941:72: 941:77
    let mut _7: isize;                   // in scope 0 at cita-network/src/node_manager.rs:941:16: 941:41
    let mut _9: isize;                   // in scope 0 at cita-network/src/node_manager.rs:942:20: 942:36
    let mut _11: bool;                   // in scope 0 at cita-network/src/node_manager.rs:943:20: 943:49
    let mut _12: &tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:943:20: 943:30
    let mut _13: &tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:943:34: 943:49
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _18: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _19: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _20: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _22: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:944:27: 944:70
    let mut _25: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _27: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:944:72: 944:76
    let _29: &std::net::SocketAddr;      // in scope 0 at cita-network/src/node_manager.rs:944:72: 944:76
    let mut _30: (i32, bool);            // in scope 0 at cita-network/src/node_manager.rs:945:21: 945:55
    let mut _31: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:946:46: 946:50
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _34: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _35: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _38: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _40: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _41: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _42: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:949:25: 949:83
    let mut _43: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _45: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:950:25: 950:40
    let _47: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:950:25: 950:40
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:950:42: 950:52
    let _49: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:950:42: 950:52
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _55: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _56: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _57: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _59: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _60: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:954:24: 954:104
    let mut _70: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    let mut _71: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    let mut _72: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    let mut _73: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    let mut _74: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    let mut _75: &mut node_manager::NodeStatus; // in scope 0 at cita-network/src/node_manager.rs:941:21: 941:40
    scope 1 {
        debug node_status => _8;         // in scope 1 at cita-network/src/node_manager.rs:941:21: 941:40
        let _8: &mut &mut node_manager::NodeStatus; // in scope 1 at cita-network/src/node_manager.rs:941:21: 941:40
        let _50: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug session_id => _10;     // in scope 2 at cita-network/src/node_manager.rs:942:25: 942:35
            let _10: tentacle::SessionId; // in scope 2 at cita-network/src/node_manager.rs:942:25: 942:35
            let _14: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _32: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _14;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _64: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _65: &[&str; 2]; // in scope 3 at cita-network/src/node_manager.rs:944:27: 944:70
                let mut _66: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug lvl => _32;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _61: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _62: &[&str; 2]; // in scope 4 at cita-network/src/node_manager.rs:949:25: 949:83
                let mut _63: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 5 {
            debug lvl => _50;            // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _67: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _68: &[&str; 1];     // in scope 5 at cita-network/src/node_manager.rs:954:24: 954:104
            let mut _69: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _5 = &mut ((*_3).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 1 at cita-network/src/node_manager.rs:941:44: 941:78
        _6 = &_2;                        // scope 1 at cita-network/src/node_manager.rs:941:72: 941:77
        _4 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>(move _5, _6) -> bb1; // scope 1 at cita-network/src/node_manager.rs:941:44: 941:78
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:941:64: 941:71
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<&'a mut NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::get_mut::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = discriminant(_4);           // scope 1 at cita-network/src/node_manager.rs:941:16: 941:41
        switchInt(move _7) -> [1: bb2, otherwise: bb37]; // scope 1 at cita-network/src/node_manager.rs:941:16: 941:41
    }

    bb2: {
        _8 = &mut ((_4 as Some).0: &mut node_manager::NodeStatus); // scope 1 at cita-network/src/node_manager.rs:941:21: 941:40
        _70 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:942:20: 942:36
        _9 = discriminant(((*_70).1: std::option::Option<tentacle::SessionId>)); // scope 2 at cita-network/src/node_manager.rs:942:20: 942:36
        switchInt(move _9) -> [1: bb3, otherwise: bb28]; // scope 2 at cita-network/src/node_manager.rs:942:20: 942:36
    }

    bb3: {
        _71 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:942:25: 942:35
        _10 = ((((*_71).1: std::option::Option<tentacle::SessionId>) as Some).0: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:942:25: 942:35
        _12 = &_10;                      // scope 2 at cita-network/src/node_manager.rs:943:20: 943:30
        _13 = &((*_1).0: tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:943:34: 943:49
        _11 = <SessionId as PartialEq>::eq(move _12, move _13) -> bb4; // scope 2 at cita-network/src/node_manager.rs:943:20: 943:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:943:20: 943:49
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a SessionId, &'b SessionId) -> bool {<SessionId as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _11) -> [0: bb17, otherwise: bb5]; // scope 2 at cita-network/src/node_manager.rs:943:20: 943:49
    }

    bb5: {
        _14 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _17 = &_14;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _66 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[5])) }
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, _66) -> bb9; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _19 = &_14;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _21 = log::max_level() -> bb10;  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _15) -> [0: bb15, otherwise: bb12]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _16) -> [0: bb6, otherwise: bb7]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _20 = &_21;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _18 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _19, move _20) -> bb11; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _15 = move _18;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _65 = const _;                   // scope 3 at cita-network/src/node_manager.rs:944:27: 944:70
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:944:27: 944:70
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[4])) }
        _24 = _65 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:944:27: 944:70
        _29 = &_2;                       // scope 3 at cita-network/src/node_manager.rs:944:72: 944:76
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_29) -> bb13; // scope 3 at cita-network/src/node_manager.rs:944:72: 944:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:944:72: 944:76
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = [move _28];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _26 = &_27;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = _26 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = Arguments::<'_>::new_v1(move _24, move _25) -> bb14; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _64 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[3])) }
        _22 = log::__private_api_log(move _23, _14, _64) -> bb15; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb15: {
        _72 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
        _30 = CheckedSub(((*_72).0: i32), const _); // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
        _73 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
        assert(!move (_30.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_73).0: i32), const _) -> bb16; // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
    }

    bb16: {
        _74 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
        ((*_74).0: i32) = move (_30.0: i32); // scope 2 at cita-network/src/node_manager.rs:945:21: 945:55
        _31 = std::option::Option::<SessionId>::None; // scope 2 at cita-network/src/node_manager.rs:946:46: 946:50
        _75 = deref_copy (*_8);          // scope 2 at cita-network/src/node_manager.rs:946:21: 946:50
        ((*_75).1: std::option::Option<tentacle::SessionId>) = move _31; // scope 2 at cita-network/src/node_manager.rs:946:21: 946:50
        goto -> bb37;                    // scope 2 at cita-network/src/node_manager.rs:943:17: 952:18
    }

    bb17: {
        _32 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _35 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _63 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[2])) }
        _34 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _35, _63) -> bb21; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _33 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _37 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _39 = log::max_level() -> bb22;  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _33) -> [0: bb37, otherwise: bb24]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        switchInt(move _34) -> [0: bb18, otherwise: bb19]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _38 = &_39;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, move _38) -> bb23; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _33 = move _36;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _62 = const _;                   // scope 4 at cita-network/src/node_manager.rs:949:25: 949:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:949:25: 949:83
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[1])) }
        _42 = _62 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/node_manager.rs:949:25: 949:83
        _47 = &((*_1).0: tentacle::SessionId); // scope 4 at cita-network/src/node_manager.rs:950:25: 950:40
        _46 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_47) -> bb25; // scope 4 at cita-network/src/node_manager.rs:950:25: 950:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:950:25: 950:40
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb25: {
        _49 = &_10;                      // scope 4 at cita-network/src/node_manager.rs:950:42: 950:52
        _48 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_49) -> bb26; // scope 4 at cita-network/src/node_manager.rs:950:42: 950:52
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:950:42: 950:52
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb26: {
        _45 = [move _46, move _48];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = &_45;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = _44 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = Arguments::<'_>::new_v1(move _42, move _43) -> bb27; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb27: {
        _61 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[0])) }
        _40 = log::__private_api_log(move _41, _32, _61) -> bb37; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb28: {
        _50 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _53 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _69 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[8])) }
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, _69) -> bb32; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _51 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _55 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _57 = log::max_level() -> bb33;  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _51) -> [0: bb37, otherwise: bb35]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        switchInt(move _52) -> [0: bb29, otherwise: bb30]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _56 = &_57;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _54 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _55, move _56) -> bb34; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _51 = move _54;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _68 = const _;                   // scope 5 at cita-network/src/node_manager.rs:954:24: 954:104
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:954:24: 954:104
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[7])) }
        _60 = _68 as &[&str] (Pointer(Unsize)); // scope 5 at cita-network/src/node_manager.rs:954:24: 954:104
        _59 = Arguments::<'_>::new_const(move _60) -> bb36; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb36: {
        _67 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(DelConnectedNodeReq::fix_node_status, [], Some(promoted[6])) }
        _58 = log::__private_api_log(move _59, _50, _67) -> bb37; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb37: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:957:6: 957:6
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:948:21: 951:22
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:948:21: 951:22

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:948:21: 951:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:948:21: 951:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:948:21: 951:22
        _1 = (move _2, move _4, move _6, const 948_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:949:25: 949:83
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:949:25: 949:83

    bb0: {
        _1 = [const "[NodeManager] Expected session id: ", const ", but found: "]; // scope 0 at cita-network/src/node_manager.rs:949:25: 949:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:949:25: 949:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:949:25: 949:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:949:25: 949:83
        return;                          // scope 0 at cita-network/src/node_manager.rs:949:25: 949:83
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:944:21: 944:77
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:944:21: 944:77

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:944:21: 944:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:944:21: 944:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:944:21: 944:77
        _1 = (move _2, move _4, move _6, const 944_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:944:27: 944:70
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:944:27: 944:70

    bb0: {
        _1 = [const "Reset node status of address ", const " to None"]; // scope 0 at cita-network/src/node_manager.rs:944:27: 944:70
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:944:27: 944:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:944:27: 944:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:944:27: 944:70
        return;                          // scope 0 at cita-network/src/node_manager.rs:944:27: 944:70
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:954:17: 954:105
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:954:17: 954:105

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:954:17: 954:105
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:954:17: 954:105
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:954:17: 954:105
        _1 = (move _2, move _4, move _6, const 954_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:954:24: 954:104
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:954:24: 954:104

    bb0: {
        _1 = [const "[NodeManager] Can not get node status from known_addr, this should not happen!"]; // scope 0 at cita-network/src/node_manager.rs:954:24: 954:104
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:954:24: 954:104
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:954:24: 954:104
        return;                          // scope 0 at cita-network/src/node_manager.rs:954:24: 954:104
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:898:1: 898:25>::fix_node_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:960:10: 960:15>::fmt(_1: &RetransNetMsgReq, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
    let _6: &cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
    let _9: &&tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
    let _10: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:963:5: 963:36

    bb0: {
        _3 = const "RetransNetMsgReq";   // scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:960:10: 960:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "msg_unit";           // scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:962:5: 962:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: cita_protocol::NetMessageUnit); // scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:962:5: 962:29
        _7 = const "incomming_session_id"; // scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:963:5: 963:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &((*_1).1: tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
        _9 = &_10;                       // scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:963:5: 963:36
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _3, _4, move _5, _7, move _8) -> bb1; // scope 0 at cita-network/src/node_manager.rs:960:10: 960:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:960:10: 960:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:960:15: 960:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::new(_1: NetMessageUnit, _2: SessionId) -> RetransNetMsgReq {
    debug msg_unit => _1;                // in scope 0 at cita-network/src/node_manager.rs:967:16: 967:24
    debug incomming_session_id => _2;    // in scope 0 at cita-network/src/node_manager.rs:967:42: 967:62
    let mut _0: node_manager::RetransNetMsgReq; // return place in scope 0 at cita-network/src/node_manager.rs:967:78: 967:82

    bb0: {
        _0 = RetransNetMsgReq { msg_unit: move _1, incomming_session_id: _2 }; // scope 0 at cita-network/src/node_manager.rs:968:9: 971:10
        return;                          // scope 0 at cita-network/src/node_manager.rs:972:6: 972:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::handle(_1: RetransNetMsgReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:974:19: 974:27
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:974:29: 974:36
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:974:57: 974:57
    let _3: u64;                         // in scope 0 at cita-network/src/node_manager.rs:975:13: 975:24
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:979:13: 979:112
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 5]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 5]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:980:13: 980:30
    let _20: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:980:13: 980:30
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:981:13: 981:38
    let _22: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:981:13: 981:38
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:982:13: 982:24
    let _24: &u64;                       // in scope 0 at cita-network/src/node_manager.rs:982:13: 982:24
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:983:13: 983:33
    let _26: &u64;                       // in scope 0 at cita-network/src/node_manager.rs:983:13: 983:33
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:984:13: 984:30
    let _28: &u8;                        // in scope 0 at cita-network/src/node_manager.rs:984:13: 984:30
    let mut _30: std::collections::hash_map::Entry<'_, cita_types::H160, u64>; // in scope 0 at cita-network/src/node_manager.rs:987:29: 989:39
    let mut _31: &mut std::collections::HashMap<cita_types::H160, u64, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:987:29: 989:39
    let mut _32: cita_types::H160;       // in scope 0 at cita-network/src/node_manager.rs:989:20: 989:38
    let mut _33: bool;                   // in scope 0 at cita-network/src/node_manager.rs:991:12: 991:60
    let mut _34: bool;                   // in scope 0 at cita-network/src/node_manager.rs:991:32: 991:60
    let mut _35: u64;                    // in scope 0 at cita-network/src/node_manager.rs:991:32: 991:46
    let mut _37: std::iter::Cloned<std::collections::btree_map::Keys<'_, tentacle::SessionId, node_manager::TransformAddr>>; // in scope 0 at cita-network/src/node_manager.rs:993:35: 993:74
    let mut _38: std::collections::btree_map::Keys<'_, tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:993:35: 993:65
    let mut _39: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:993:35: 993:65
    let _40: ();                         // in scope 0 at cita-network/src/node_manager.rs:994:13: 994:42
    let mut _41: &mut std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:994:13: 994:42
    let mut _42: [closure@cita-network/src/node_manager.rs:994:24: 994:28]; // in scope 0 at cita-network/src/node_manager.rs:994:24: 994:41
    let mut _43: &tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:994:24: 994:41
    let mut _44: bool;                   // in scope 0 at cita-network/src/node_manager.rs:996:16: 996:63
    let mut _45: std::option::Option<bytes::Bytes>; // in scope 0 at cita-network/src/node_manager.rs:1000:32: 1000:81
    let _46: &cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:1000:66: 1000:80
    let mut _47: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1000:20: 1000:29
    let mut _49: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1001:24: 1001:42
    let mut _51: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:1003:25: 1003:100
    let mut _52: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:1003:25: 1003:100
    let mut _53: tentacle::service::TargetSession; // in scope 0 at cita-network/src/node_manager.rs:1003:47: 1003:72
    let mut _54: std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1003:68: 1003:71
    let mut _55: bytes::Bytes;           // in scope 0 at cita-network/src/node_manager.rs:1003:96: 1003:99
    let mut _59: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1005:13: 1005:14
    let mut _60: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1006:9: 1006:10
    let mut _61: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1006:9: 1006:10
    let mut _62: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1006:9: 1006:10
    let mut _63: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1006:9: 1006:10
    scope 1 {
        debug msg_version => _3;         // in scope 1 at cita-network/src/node_manager.rs:975:13: 975:24
        let _4: tentacle::SessionId;     // in scope 1 at cita-network/src/node_manager.rs:976:13: 976:18
        scope 2 {
            debug in_id => _4;           // in scope 2 at cita-network/src/node_manager.rs:976:13: 976:18
            let _5: log::Level;          // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _29: &mut u64;           // in scope 2 at cita-network/src/node_manager.rs:987:13: 987:26
            scope 3 {
                debug lvl => _5;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _56: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _57: &[&str; 5]; // in scope 3 at cita-network/src/node_manager.rs:979:13: 979:112
                let mut _58: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug saved_version => _29; // in scope 4 at cita-network/src/node_manager.rs:987:13: 987:26
                let mut _36: std::vec::Vec<tentacle::SessionId>; // in scope 4 at cita-network/src/node_manager.rs:993:17: 993:24
                scope 5 {
                    debug ids => _36;    // in scope 5 at cita-network/src/node_manager.rs:993:17: 993:24
                    scope 6 {
                        debug buf => _48; // in scope 6 at cita-network/src/node_manager.rs:1000:25: 1000:28
                        let _48: bytes::Bytes; // in scope 6 at cita-network/src/node_manager.rs:1000:25: 1000:28
                        scope 7 {
                            debug ctrl => _50; // in scope 7 at cita-network/src/node_manager.rs:1001:29: 1001:41
                            let _50: &mut tentacle::service::ServiceControl; // in scope 7 at cita-network/src/node_manager.rs:1001:29: 1001:41
                            scope 8 {
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _59 = const false;               // scope 0 at cita-network/src/node_manager.rs:975:13: 975:24
        _60 = const false;               // scope 0 at cita-network/src/node_manager.rs:975:13: 975:24
        _61 = const false;               // scope 0 at cita-network/src/node_manager.rs:975:13: 975:24
        _3 = ((_1.0: cita_protocol::NetMessageUnit).3: u64); // scope 0 at cita-network/src/node_manager.rs:975:27: 975:48
        _4 = (_1.1: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:976:21: 976:46
        _5 = log::Level::Trace;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _8 = &_5;                        // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _58 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(RetransNetMsgReq::handle, [], Some(promoted[2])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _58) -> [return: bb4, unwind: bb37]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = const false;                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _10 = &_5;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> [return: bb5, unwind: bb37]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _6) -> [0: bb14, otherwise: bb7]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _11 = &_12;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> [return: bb6, unwind: bb37]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = move _9;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _57 = const _;                   // scope 3 at cita-network/src/node_manager.rs:979:13: 979:112
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &[&str; 5], val: Unevaluated(RetransNetMsgReq::handle, [], Some(promoted[1])) }
        _15 = _57 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:979:13: 979:112
        _20 = &((_1.0: cita_protocol::NetMessageUnit).0: std::string::String); // scope 3 at cita-network/src/node_manager.rs:980:13: 980:30
        _19 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_20) -> [return: bb8, unwind: bb37]; // scope 3 at cita-network/src/node_manager.rs:980:13: 980:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:980:13: 980:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb8: {
        _22 = &(_1.1: tentacle::SessionId); // scope 3 at cita-network/src/node_manager.rs:981:13: 981:38
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<SessionId>(_22) -> [return: bb9, unwind: bb37]; // scope 3 at cita-network/src/node_manager.rs:981:13: 981:38
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:981:13: 981:38
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<SessionId>}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = &_3;                       // scope 3 at cita-network/src/node_manager.rs:982:13: 982:24
        _23 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_24) -> [return: bb10, unwind: bb37]; // scope 3 at cita-network/src/node_manager.rs:982:13: 982:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:982:13: 982:24
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = &((*_2).13: u64);          // scope 3 at cita-network/src/node_manager.rs:983:13: 983:33
        _25 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_26) -> [return: bb11, unwind: bb37]; // scope 3 at cita-network/src/node_manager.rs:983:13: 983:33
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:983:13: 983:33
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _28 = &((_1.0: cita_protocol::NetMessageUnit).4: u8); // scope 3 at cita-network/src/node_manager.rs:984:13: 984:30
        _27 = core::fmt::ArgumentV1::<'_>::new_display::<u8>(_28) -> [return: bb12, unwind: bb37]; // scope 3 at cita-network/src/node_manager.rs:984:13: 984:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:984:13: 984:30
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b u8) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u8>}, val: Value(<ZST>) }
    }

    bb12: {
        _18 = [move _19, move _21, move _23, move _25, move _27]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> [return: bb13, unwind: bb37]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _56 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(RetransNetMsgReq::handle, [], Some(promoted[0])) }
        _13 = log::__private_api_log(move _14, _5, _56) -> [return: bb50, unwind: bb37]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _31 = &mut ((*_2).11: std::collections::HashMap<cita_types::H160, u64, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 2 at cita-network/src/node_manager.rs:987:29: 989:39
        _32 = ((_1.0: cita_protocol::NetMessageUnit).2: cita_types::H160); // scope 2 at cita-network/src/node_manager.rs:989:20: 989:38
        _30 = HashMap::<H160, u64, BuildHasherDefault<FnvHasher>>::entry(move _31, move _32) -> [return: bb15, unwind: bb37]; // scope 2 at cita-network/src/node_manager.rs:987:29: 989:39
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:989:14: 989:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, u64, BuildHasherDefault<FnvHasher>>, H160) -> std::collections::hash_map::Entry<'a, H160, u64> {HashMap::<H160, u64, BuildHasherDefault<FnvHasher>>::entry}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = std::collections::hash_map::Entry::<'_, H160, u64>::or_insert(move _30, const 0_u64) -> [return: bb16, unwind: bb37]; // scope 2 at cita-network/src/node_manager.rs:987:29: 990:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:990:14: 990:23
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, H160, u64>, u64) -> &mut u64 {std::collections::hash_map::Entry::<'_, H160, u64>::or_insert}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _3) -> [0: bb17, otherwise: bb18]; // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
    }

    bb17: {
        _33 = const true;                // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
        goto -> bb19;                    // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
    }

    bb18: {
        _35 = (*_29);                    // scope 4 at cita-network/src/node_manager.rs:991:32: 991:46
        _34 = Lt(move _35, _3);          // scope 4 at cita-network/src/node_manager.rs:991:32: 991:60
        _33 = move _34;                  // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
        goto -> bb19;                    // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
    }

    bb19: {
        switchInt(move _33) -> [0: bb33, otherwise: bb20]; // scope 4 at cita-network/src/node_manager.rs:991:12: 991:60
    }

    bb20: {
        (*_29) = _3;                     // scope 4 at cita-network/src/node_manager.rs:992:13: 992:41
        _39 = &((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 4 at cita-network/src/node_manager.rs:993:35: 993:65
        _38 = BTreeMap::<SessionId, TransformAddr>::keys(move _39) -> [return: bb21, unwind: bb37]; // scope 4 at cita-network/src/node_manager.rs:993:35: 993:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:993:59: 993:63
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<SessionId, TransformAddr>) -> std::collections::btree_map::Keys<'a, SessionId, TransformAddr> {BTreeMap::<SessionId, TransformAddr>::keys}, val: Value(<ZST>) }
    }

    bb21: {
        _37 = <std::collections::btree_map::Keys<'_, SessionId, TransformAddr> as Iterator>::cloned::<'_, SessionId>(move _38) -> [return: bb22, unwind: bb37]; // scope 4 at cita-network/src/node_manager.rs:993:35: 993:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:993:66: 993:72
                                         // + literal: Const { ty: fn(std::collections::btree_map::Keys<'_, SessionId, TransformAddr>) -> Cloned<std::collections::btree_map::Keys<'_, SessionId, TransformAddr>> {<std::collections::btree_map::Keys<'_, SessionId, TransformAddr> as Iterator>::cloned::<'_, SessionId>}, val: Value(<ZST>) }
    }

    bb22: {
        _36 = <Cloned<std::collections::btree_map::Keys<'_, SessionId, TransformAddr>> as Iterator>::collect::<Vec<SessionId>>(move _37) -> [return: bb23, unwind: bb37]; // scope 4 at cita-network/src/node_manager.rs:993:35: 993:84
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:993:75: 993:82
                                         // + literal: Const { ty: fn(Cloned<std::collections::btree_map::Keys<'_, SessionId, TransformAddr>>) -> Vec<SessionId> {<Cloned<std::collections::btree_map::Keys<'_, SessionId, TransformAddr>> as Iterator>::collect::<Vec<SessionId>>}, val: Value(<ZST>) }
    }

    bb23: {
        _60 = const true;                // scope 4 at cita-network/src/node_manager.rs:993:83: 993:84
        _41 = &mut _36;                  // scope 5 at cita-network/src/node_manager.rs:994:13: 994:42
        _43 = &_4;                       // scope 5 at cita-network/src/node_manager.rs:994:24: 994:41
        _42 = [closure@cita-network/src/node_manager.rs:994:24: 994:28] { in_id: move _43 }; // scope 5 at cita-network/src/node_manager.rs:994:24: 994:41
                                         // closure
                                         // + def_id: DefId(0:408 ~ cita_network[da60]::node_manager::{impl#17}::handle::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a tentacle::SessionId,)) -> bool,
                                         //     (&tentacle::SessionId,),
                                         // ]
        _40 = Vec::<SessionId>::retain::<[closure@cita-network/src/node_manager.rs:994:24: 994:28]>(move _41, move _42) -> [return: bb24, unwind: bb36]; // scope 5 at cita-network/src/node_manager.rs:994:13: 994:42
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:994:17: 994:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<SessionId>, [closure@cita-network/src/node_manager.rs:994:24: 994:28]) {Vec::<SessionId>::retain::<[closure@cita-network/src/node_manager.rs:994:24: 994:28]>}, val: Value(<ZST>) }
    }

    bb24: {
        _44 = (((*_2).12: node_manager::ConsensusNodeTopology).2: bool); // scope 5 at cita-network/src/node_manager.rs:996:16: 996:63
        switchInt(move _44) -> [0: bb26, otherwise: bb25]; // scope 5 at cita-network/src/node_manager.rs:996:16: 996:63
    }

    bb25: {
        ((_1.0: cita_protocol::NetMessageUnit).4: u8) = const 0_u8; // scope 5 at cita-network/src/node_manager.rs:997:17: 997:38
        goto -> bb26;                    // scope 5 at cita-network/src/node_manager.rs:996:13: 998:14
    }

    bb26: {
        _46 = &(_1.0: cita_protocol::NetMessageUnit); // scope 6 at cita-network/src/node_manager.rs:1000:66: 1000:80
        _45 = pubsub_message_to_network_message(_46) -> [return: bb27, unwind: bb36]; // scope 6 at cita-network/src/node_manager.rs:1000:32: 1000:81
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1000:32: 1000:65
                                         // + literal: Const { ty: for<'a> fn(&'a NetMessageUnit) -> std::option::Option<bytes::Bytes> {pubsub_message_to_network_message}, val: Value(<ZST>) }
    }

    bb27: {
        _61 = const true;                // scope 6 at cita-network/src/node_manager.rs:1000:80: 1000:81
        _47 = discriminant(_45);         // scope 6 at cita-network/src/node_manager.rs:1000:20: 1000:29
        switchInt(move _47) -> [1: bb28, otherwise: bb42]; // scope 6 at cita-network/src/node_manager.rs:1000:20: 1000:29
    }

    bb28: {
        _61 = const false;               // scope 6 at cita-network/src/node_manager.rs:1000:25: 1000:28
        _59 = const true;                // scope 6 at cita-network/src/node_manager.rs:1000:25: 1000:28
        _48 = move ((_45 as Some).0: bytes::Bytes); // scope 6 at cita-network/src/node_manager.rs:1000:25: 1000:28
        _49 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 7 at cita-network/src/node_manager.rs:1001:24: 1001:42
        switchInt(move _49) -> [1: bb29, otherwise: bb40]; // scope 7 at cita-network/src/node_manager.rs:1001:24: 1001:42
    }

    bb29: {
        _50 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 7 at cita-network/src/node_manager.rs:1001:29: 1001:41
        _52 = &(*_50);                   // scope 7 at cita-network/src/node_manager.rs:1003:25: 1003:100
        _60 = const false;               // scope 7 at cita-network/src/node_manager.rs:1003:68: 1003:71
        _54 = move _36;                  // scope 7 at cita-network/src/node_manager.rs:1003:68: 1003:71
        _53 = tentacle::service::TargetSession::Multi(move _54); // scope 7 at cita-network/src/node_manager.rs:1003:47: 1003:72
        _59 = const false;               // scope 7 at cita-network/src/node_manager.rs:1003:96: 1003:99
        _55 = move _48;                  // scope 7 at cita-network/src/node_manager.rs:1003:96: 1003:99
        _51 = ServiceControl::filter_broadcast(move _52, move _53, const _, move _55) -> [return: bb30, unwind: bb47]; // scope 7 at cita-network/src/node_manager.rs:1003:25: 1003:100
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1003:30: 1003:46
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, TargetSession, ProtocolId, bytes::Bytes) -> Result<(), tentacle::error::Error> {ServiceControl::filter_broadcast}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1003:74: 1003:94
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
    }

    bb30: {
        drop(_51) -> [return: bb40, unwind: bb47]; // scope 7 at cita-network/src/node_manager.rs:1003:100: 1003:101
    }

    bb31: {
        _59 = const false;               // scope 5 at cita-network/src/node_manager.rs:1005:13: 1005:14
        goto -> bb42;                    // scope 5 at cita-network/src/node_manager.rs:1000:13: 1005:14
    }

    bb32: {
        _60 = const false;               // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
        _62 = discriminant(_45);         // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
        switchInt(move _62) -> [1: bb44, otherwise: bb43]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb33: {
        drop(_1) -> bb34;                // scope 0 at cita-network/src/node_manager.rs:1007:5: 1007:6
    }

    bb34: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1007:6: 1007:6
    }

    bb35 (cleanup): {
        _63 = discriminant(_45);         // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
        switchInt(move _63) -> [1: bb48, otherwise: bb37]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb36 (cleanup): {
        drop(_36) -> bb37;               // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb37 (cleanup): {
        drop(_1) -> bb38;                // scope 0 at cita-network/src/node_manager.rs:1007:5: 1007:6
    }

    bb38 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:974:5: 1007:6
    }

    bb39: {
        drop(_48) -> [return: bb31, unwind: bb47]; // scope 5 at cita-network/src/node_manager.rs:1005:13: 1005:14
    }

    bb40: {
        switchInt(_59) -> [0: bb31, otherwise: bb39]; // scope 5 at cita-network/src/node_manager.rs:1005:13: 1005:14
    }

    bb41: {
        drop(_36) -> [return: bb32, unwind: bb35]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb42: {
        switchInt(_60) -> [0: bb32, otherwise: bb41]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb43: {
        _61 = const false;               // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
        goto -> bb33;                    // scope 4 at cita-network/src/node_manager.rs:991:9: 1006:10
    }

    bb44: {
        switchInt(_61) -> [0: bb43, otherwise: bb45]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb45: {
        drop(((_45 as Some).0: bytes::Bytes)) -> [return: bb43, unwind: bb37]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb46 (cleanup): {
        drop(_36) -> bb35;               // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb47 (cleanup): {
        switchInt(_60) -> [0: bb35, otherwise: bb46]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb48 (cleanup): {
        switchInt(_61) -> [0: bb37, otherwise: bb49]; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb49 (cleanup): {
        drop(((_45 as Some).0: bytes::Bytes)) -> bb37; // scope 4 at cita-network/src/node_manager.rs:1006:9: 1006:10
    }

    bb50: {
        goto -> bb14;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:978:9: 985:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:978:9: 985:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:978:9: 985:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:978:9: 985:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:978:9: 985:10
        _1 = (move _2, move _4, move _6, const 978_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::handle: &[&str; 5] = {
    let mut _0: &[&str; 5];              // return place in scope 0 at cita-network/src/node_manager.rs:979:13: 979:112
    let mut _1: [&str; 5];               // in scope 0 at cita-network/src/node_manager.rs:979:13: 979:112

    bb0: {
        _1 = [const "[NodeManager] RetranseReq msg.key ", const ", from session ", const ",version ", const " self current version ", const " ttl "]; // scope 0 at cita-network/src/node_manager.rs:979:13: 979:112
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:979:13: 979:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:979:13: 979:112
        return;                          // scope 0 at cita-network/src/node_manager.rs:979:13: 979:112
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:966:1: 966:22>::handle::{closure#0}(_1: &mut [closure@cita-network/src/node_manager.rs:994:24: 994:28], _2: &SessionId) -> bool {
    debug id => _2;                      // in scope 0 at cita-network/src/node_manager.rs:994:25: 994:27
    debug in_id => (*((*_1).0: &tentacle::SessionId)); // in scope 0 at cita-network/src/node_manager.rs:976:13: 976:18
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/node_manager.rs:994:29: 994:29
    let mut _3: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:994:24: 994:41

    bb0: {
        _3 = deref_copy ((*_1).0: &tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:994:36: 994:41
        _0 = <SessionId as PartialEq>::ne(_2, _3) -> bb1; // scope 0 at cita-network/src/node_manager.rs:994:29: 994:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:994:29: 994:41
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a SessionId, &'b SessionId) -> bool {<SessionId as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:994:41: 994:41
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1010:10: 1010:15>::fmt(_1: &DealRichStatusReq, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
    let _6: &&libproto::Message;         // in scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
    let _7: &libproto::Message;          // in scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22

    bb0: {
        _3 = const "DealRichStatusReq";  // scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1010:10: 1010:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "msg";                // scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1012:5: 1012:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &((*_1).0: libproto::Message); // scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
        _6 = &_7;                        // scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:1012:5: 1012:22
        _0 = std::fmt::Formatter::<'_>::debug_struct_field1_finish(_2, _3, _4, move _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1010:10: 1010:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1010:10: 1010:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1010:15: 1010:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::new(_1: libproto::Message) -> DealRichStatusReq {
    debug msg => _1;                     // in scope 0 at cita-network/src/node_manager.rs:1016:16: 1016:19
    let mut _0: node_manager::DealRichStatusReq; // return place in scope 0 at cita-network/src/node_manager.rs:1016:38: 1016:42

    bb0: {
        _0 = DealRichStatusReq { msg: move _1 }; // scope 0 at cita-network/src/node_manager.rs:1017:9: 1017:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:1018:6: 1018:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::handle(_1: DealRichStatusReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1020:19: 1020:27
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1020:29: 1020:36
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1020:57: 1020:57
    let _3: libproto::RichStatus;        // in scope 0 at cita-network/src/node_manager.rs:1021:13: 1021:24
    let mut _4: std::option::Option<libproto::RichStatus>; // in scope 0 at cita-network/src/node_manager.rs:1021:27: 1021:54
    let mut _5: &mut libproto::Message;  // in scope 0 at cita-network/src/node_manager.rs:1021:27: 1021:54
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1022:53: 1022:64
    let _21: &libproto::RichStatus;      // in scope 0 at cita-network/src/node_manager.rs:1022:53: 1022:64
    let mut _23: std::iter::Map<std::slice::Iter<'_, std::vec::Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]>; // in scope 0 at cita-network/src/node_manager.rs:1024:45: 1027:51
    let mut _24: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-network/src/node_manager.rs:1024:45: 1026:20
    let mut _25: &[std::vec::Vec<u8>];   // in scope 0 at cita-network/src/node_manager.rs:1024:45: 1026:20
    let _26: &[std::vec::Vec<u8>];       // in scope 0 at cita-network/src/node_manager.rs:1024:45: 1025:30
    let mut _27: &libproto::RichStatus;  // in scope 0 at cita-network/src/node_manager.rs:1024:45: 1025:30
    let _28: ();                         // in scope 0 at cita-network/src/node_manager.rs:1030:9: 1032:69
    let mut _29: &mut node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:1030:9: 1032:69
    let mut _30: u64;                    // in scope 0 at cita-network/src/node_manager.rs:1032:32: 1032:56
    let mut _31: &libproto::RichStatus;  // in scope 0 at cita-network/src/node_manager.rs:1032:32: 1032:56
    let mut _32: std::collections::BTreeSet<cita_types::H160>; // in scope 0 at cita-network/src/node_manager.rs:1032:58: 1032:68
    let mut _36: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1033:5: 1033:6
    scope 1 {
        debug rich_status => _3;         // in scope 1 at cita-network/src/node_manager.rs:1021:13: 1021:24
        let _6: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _22: std::collections::BTreeSet<cita_types::H160>; // in scope 1 at cita-network/src/node_manager.rs:1024:13: 1024:23
        scope 2 {
            debug lvl => _6;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _33: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _34: &[&str; 1];     // in scope 2 at cita-network/src/node_manager.rs:1022:15: 1022:51
            let mut _35: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug validators => _22;     // in scope 3 at cita-network/src/node_manager.rs:1024:13: 1024:23
        }
    }

    bb0: {
        _36 = const false;               // scope 0 at cita-network/src/node_manager.rs:1021:13: 1021:24
        _5 = &mut (_1.0: libproto::Message); // scope 0 at cita-network/src/node_manager.rs:1021:27: 1021:54
        _4 = libproto::Message::take_rich_status(move _5) -> [return: bb1, unwind: bb22]; // scope 0 at cita-network/src/node_manager.rs:1021:27: 1021:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1021:36: 1021:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::RichStatus> {libproto::Message::take_rich_status}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = std::option::Option::<libproto::RichStatus>::unwrap(move _4) -> [return: bb2, unwind: bb22]; // scope 0 at cita-network/src/node_manager.rs:1021:27: 1021:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1021:55: 1021:61
                                         // + literal: Const { ty: fn(std::option::Option<libproto::RichStatus>) -> libproto::RichStatus {std::option::Option::<libproto::RichStatus>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = log::Level::Info;           // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _9 = &_6;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _35 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(DealRichStatusReq::handle, [], Some(promoted[2])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _35) -> [return: bb6, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _11 = &_6;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> [return: bb7, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _7) -> [0: bb12, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _8) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _12 = &_13;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> [return: bb8, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _7 = move _10;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _34 = const _;                   // scope 2 at cita-network/src/node_manager.rs:1022:15: 1022:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1022:15: 1022:51
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(DealRichStatusReq::handle, [], Some(promoted[1])) }
        _16 = _34 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/node_manager.rs:1022:15: 1022:51
        _21 = &_3;                       // scope 2 at cita-network/src/node_manager.rs:1022:53: 1022:64
        _20 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::RichStatus>(_21) -> [return: bb10, unwind: bb21]; // scope 2 at cita-network/src/node_manager.rs:1022:53: 1022:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1022:53: 1022:64
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::RichStatus) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::RichStatus>}, val: Value(<ZST>) }
    }

    bb10: {
        _19 = [move _20];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = &_19;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = Arguments::<'_>::new_v1(move _16, move _17) -> [return: bb11, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _33 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(DealRichStatusReq::handle, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _33) -> [return: bb26, unwind: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _27 = &_3;                       // scope 1 at cita-network/src/node_manager.rs:1024:45: 1025:30
        _26 = libproto::RichStatus::get_validators(move _27) -> [return: bb13, unwind: bb21]; // scope 1 at cita-network/src/node_manager.rs:1024:45: 1025:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1025:14: 1025:28
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::RichStatus) -> &'a [Vec<u8>] {libproto::RichStatus::get_validators}, val: Value(<ZST>) }
    }

    bb13: {
        _25 = _26;                       // scope 1 at cita-network/src/node_manager.rs:1024:45: 1026:20
        _24 = core::slice::<impl [Vec<u8>]>::iter(move _25) -> [return: bb14, unwind: bb21]; // scope 1 at cita-network/src/node_manager.rs:1024:45: 1026:20
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1026:14: 1026:18
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::map::<H160, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]>(move _24, const ZeroSized: [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]) -> [return: bb15, unwind: bb21]; // scope 1 at cita-network/src/node_manager.rs:1024:45: 1027:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1027:14: 1027:17
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]) -> std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]> {<std::slice::Iter<'_, Vec<u8>> as Iterator>::map::<H160, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/node_manager.rs:1027:18: 1027:24], val: Value(<ZST>) }
    }

    bb15: {
        _22 = <std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]> as Iterator>::collect::<BTreeSet<H160>>(move _23) -> [return: bb16, unwind: bb21]; // scope 1 at cita-network/src/node_manager.rs:1024:45: 1028:23
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1028:14: 1028:21
                                         // + literal: Const { ty: fn(std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]>) -> BTreeSet<H160> {<std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-network/src/node_manager.rs:1027:18: 1027:24]> as Iterator>::collect::<BTreeSet<H160>>}, val: Value(<ZST>) }
    }

    bb16: {
        _36 = const true;                // scope 1 at cita-network/src/node_manager.rs:1028:22: 1028:23
        _29 = &mut ((*_2).12: node_manager::ConsensusNodeTopology); // scope 3 at cita-network/src/node_manager.rs:1030:9: 1032:69
        _31 = &_3;                       // scope 3 at cita-network/src/node_manager.rs:1032:32: 1032:56
        _30 = libproto::RichStatus::get_height(move _31) -> [return: bb17, unwind: bb25]; // scope 3 at cita-network/src/node_manager.rs:1032:32: 1032:56
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1032:44: 1032:54
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::RichStatus) -> u64 {libproto::RichStatus::get_height}, val: Value(<ZST>) }
    }

    bb17: {
        _36 = const false;               // scope 3 at cita-network/src/node_manager.rs:1032:58: 1032:68
        _32 = move _22;                  // scope 3 at cita-network/src/node_manager.rs:1032:58: 1032:68
        _28 = ConsensusNodeTopology::update_validators(move _29, move _30, move _32) -> [return: bb18, unwind: bb25]; // scope 3 at cita-network/src/node_manager.rs:1030:9: 1032:69
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1032:14: 1032:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut ConsensusNodeTopology, u64, BTreeSet<H160>) {ConsensusNodeTopology::update_validators}, val: Value(<ZST>) }
    }

    bb18: {
        _36 = const false;               // scope 1 at cita-network/src/node_manager.rs:1033:5: 1033:6
        drop(_3) -> [return: bb19, unwind: bb22]; // scope 0 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb19: {
        drop(_1) -> bb20;                // scope 0 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb20: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1033:6: 1033:6
    }

    bb21 (cleanup): {
        drop(_3) -> bb22;                // scope 0 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb22 (cleanup): {
        drop(_1) -> bb23;                // scope 0 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb23 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1020:5: 1033:6
    }

    bb24 (cleanup): {
        drop(_22) -> bb21;               // scope 1 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb25 (cleanup): {
        switchInt(_36) -> [0: bb21, otherwise: bb24]; // scope 1 at cita-network/src/node_manager.rs:1033:5: 1033:6
    }

    bb26: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1022:9: 1022:65
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1022:9: 1022:65

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1022:9: 1022:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1022:9: 1022:65
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1022:9: 1022:65
        _1 = (move _2, move _4, move _6, const 1022_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51

    bb0: {
        _1 = [const "DealRichStatusReq rich status "]; // scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1022:15: 1022:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51
        return;                          // scope 0 at cita-network/src/node_manager.rs:1022:15: 1022:51
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1015:1: 1015:23>::handle::{closure#0}(_1: &mut [closure@cita-network/src/node_manager.rs:1027:18: 1027:24], _2: &Vec<u8>) -> H160 {
    debug node => _2;                    // in scope 0 at cita-network/src/node_manager.rs:1027:19: 1027:23
    let mut _0: cita_types::H160;        // return place in scope 0 at cita-network/src/node_manager.rs:1027:25: 1027:25
    let mut _3: &[u8];                   // in scope 0 at cita-network/src/node_manager.rs:1027:45: 1027:49
    let _4: &[u8];                       // in scope 0 at cita-network/src/node_manager.rs:1027:45: 1027:49

    bb0: {
        _4 = <Vec<u8> as Deref>::deref(_2) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1027:45: 1027:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1027:45: 1027:49
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 0 at cita-network/src/node_manager.rs:1027:45: 1027:49
        _0 = H160::from_slice(move _3) -> bb2; // scope 0 at cita-network/src/node_manager.rs:1027:25: 1027:50
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1027:25: 1027:44
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H160 {H160::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1027:50: 1027:50
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1036:10: 1036:15>::fmt(_1: &BroadcastReq, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
    debug f => _2;                       // in scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
    let _3: &str;                        // in scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
    let _4: &str;                        // in scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
    let _6: &std::string::String;        // in scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
    let _7: &str;                        // in scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
    let _9: &&libproto::Message;         // in scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
    let _10: &libproto::Message;         // in scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22

    bb0: {
        _3 = const "BroadcastReq";       // scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1036:10: 1036:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "key";                // scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1038:5: 1038:16
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::string::String); // scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:1038:5: 1038:16
        _7 = const "msg";                // scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1039:5: 1039:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &((*_1).1: libproto::Message); // scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
        _9 = &_10;                       // scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/node_manager.rs:1039:5: 1039:22
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _3, _4, move _5, _7, move _8) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1036:10: 1036:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1036:10: 1036:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1036:15: 1036:15
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1042:1: 1042:18>::new(_1: std::string::String, _2: libproto::Message) -> BroadcastReq {
    debug key => _1;                     // in scope 0 at cita-network/src/node_manager.rs:1043:16: 1043:19
    debug msg => _2;                     // in scope 0 at cita-network/src/node_manager.rs:1043:29: 1043:32
    let mut _0: node_manager::BroadcastReq; // return place in scope 0 at cita-network/src/node_manager.rs:1043:51: 1043:55

    bb0: {
        _0 = BroadcastReq { key: move _1, msg: move _2 }; // scope 0 at cita-network/src/node_manager.rs:1044:9: 1044:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:1045:6: 1045:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1042:1: 1042:18>::handle(_1: BroadcastReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1047:19: 1047:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1047:25: 1047:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1047:53: 1047:53
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1050:13: 1050:21
    let _18: &libproto::Message;         // in scope 0 at cita-network/src/node_manager.rs:1050:13: 1050:21
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1051:13: 1051:21
    let _20: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:1051:13: 1051:21
    let mut _21: cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:1054:13: 1054:21
    let mut _22: std::string::String;    // in scope 0 at cita-network/src/node_manager.rs:1055:20: 1055:28
    let mut _23: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/node_manager.rs:1056:21: 1056:49
    let mut _24: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/node_manager.rs:1056:21: 1056:40
    let mut _25: libproto::Message;      // in scope 0 at cita-network/src/node_manager.rs:1056:21: 1056:29
    let mut _26: cita_types::H160;       // in scope 0 at cita-network/src/node_manager.rs:1057:21: 1057:37
    let mut _27: u64;                    // in scope 0 at cita-network/src/node_manager.rs:1058:24: 1058:44
    let mut _28: (u64, bool);            // in scope 0 at cita-network/src/node_manager.rs:1059:9: 1059:34
    let mut _29: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1065:12: 1065:98
    let mut _30: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1065:12: 1065:62
    let mut _31: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1065:13: 1065:62
    let mut _32: &node_manager::ConsensusNodeTopology; // in scope 0 at cita-network/src/node_manager.rs:1065:13: 1065:62
    let mut _33: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1065:66: 1065:98
    let mut _34: &str;                   // in scope 0 at cita-network/src/node_manager.rs:1065:66: 1065:98
    let _35: &str;                       // in scope 0 at cita-network/src/node_manager.rs:1065:66: 1065:98
    let mut _36: &std::string::String;   // in scope 0 at cita-network/src/node_manager.rs:1065:66: 1065:98
    let mut _37: std::option::Option<bytes::Bytes>; // in scope 0 at cita-network/src/node_manager.rs:1069:28: 1069:68
    let _38: &cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:1069:62: 1069:67
    let mut _39: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1069:16: 1069:25
    let mut _41: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1070:20: 1070:38
    let mut _43: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:1071:25: 1071:93
    let mut _44: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:1071:25: 1071:93
    let mut _45: tentacle::service::TargetSession; // in scope 0 at cita-network/src/node_manager.rs:1071:47: 1071:65
    let mut _46: bytes::Bytes;           // in scope 0 at cita-network/src/node_manager.rs:1071:89: 1071:92
    let mut _50: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1073:9: 1073:10
    let mut _51: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    let mut _52: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    let mut _53: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    let mut _54: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    let mut _55: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _47: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _48: &[&str; 2];         // in scope 1 at cita-network/src/node_manager.rs:1049:13: 1049:60
        let mut _49: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug info => _21;               // in scope 2 at cita-network/src/node_manager.rs:1054:13: 1054:21
        scope 3 {
            debug buf => _40;            // in scope 3 at cita-network/src/node_manager.rs:1069:21: 1069:24
            let _40: bytes::Bytes;       // in scope 3 at cita-network/src/node_manager.rs:1069:21: 1069:24
            scope 4 {
                debug ctrl => _42;       // in scope 4 at cita-network/src/node_manager.rs:1070:25: 1070:37
                let _42: &mut tentacle::service::ServiceControl; // in scope 4 at cita-network/src/node_manager.rs:1070:25: 1070:37
                scope 5 {
                }
            }
        }
    }

    bb0: {
        _50 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _53 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _51 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _52 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _52 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _53 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _3 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _49 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(BroadcastReq::handle, [], Some(promoted[2])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _49) -> [return: bb4, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> [return: bb5, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb11, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> [return: bb6, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _48 = const _;                   // scope 1 at cita-network/src/node_manager.rs:1049:13: 1049:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1049:13: 1049:60
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(BroadcastReq::handle, [], Some(promoted[1])) }
        _13 = _48 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:1049:13: 1049:60
        _18 = &(_1.1: libproto::Message); // scope 1 at cita-network/src/node_manager.rs:1050:13: 1050:21
        _17 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_18) -> [return: bb8, unwind: bb49]; // scope 1 at cita-network/src/node_manager.rs:1050:13: 1050:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1050:13: 1050:21
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &(_1.0: std::string::String); // scope 1 at cita-network/src/node_manager.rs:1051:13: 1051:21
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_20) -> [return: bb9, unwind: bb49]; // scope 1 at cita-network/src/node_manager.rs:1051:13: 1051:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1051:13: 1051:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = [move _17, move _19];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb10, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _47 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(BroadcastReq::handle, [], Some(promoted[0])) }
        _11 = log::__private_api_log(move _12, _3, _47) -> [return: bb50, unwind: bb49]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _21 = <NetMessageUnit as Default>::default() -> [return: bb12, unwind: bb49]; // scope 0 at cita-network/src/node_manager.rs:1054:24: 1054:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1054:24: 1054:47
                                         // + literal: Const { ty: fn() -> NetMessageUnit {<NetMessageUnit as Default>::default}, val: Value(<ZST>) }
    }

    bb12: {
        _53 = const false;               // scope 2 at cita-network/src/node_manager.rs:1055:20: 1055:28
        _22 = move (_1.0: std::string::String); // scope 2 at cita-network/src/node_manager.rs:1055:20: 1055:28
        drop((_21.0: std::string::String)) -> [return: bb13, unwind: bb14]; // scope 2 at cita-network/src/node_manager.rs:1055:9: 1055:17
    }

    bb13: {
        (_21.0: std::string::String) = move _22; // scope 2 at cita-network/src/node_manager.rs:1055:9: 1055:17
        _52 = const false;               // scope 2 at cita-network/src/node_manager.rs:1056:21: 1056:29
        _25 = move (_1.1: libproto::Message); // scope 2 at cita-network/src/node_manager.rs:1056:21: 1056:29
        _24 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _25) -> [return: bb15, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1056:21: 1056:40
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1056:30: 1056:38
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb14 (cleanup): {
        (_21.0: std::string::String) = move _22; // scope 2 at cita-network/src/node_manager.rs:1055:9: 1055:17
        goto -> bb36;                    // scope 2 at cita-network/src/node_manager.rs:1055:27: 1055:28
    }

    bb15: {
        _23 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _24) -> [return: bb16, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1056:21: 1056:49
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1056:41: 1056:47
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb16: {
        drop((_21.1: std::vec::Vec<u8>)) -> [return: bb17, unwind: bb18]; // scope 2 at cita-network/src/node_manager.rs:1056:9: 1056:18
    }

    bb17: {
        (_21.1: std::vec::Vec<u8>) = move _23; // scope 2 at cita-network/src/node_manager.rs:1056:9: 1056:18
        _26 = ((*_2).10: cita_types::H160); // scope 2 at cita-network/src/node_manager.rs:1057:21: 1057:37
        (_21.2: cita_types::H160) = move _26; // scope 2 at cita-network/src/node_manager.rs:1057:9: 1057:37
        _27 = ((*_2).13: u64);           // scope 2 at cita-network/src/node_manager.rs:1058:24: 1058:44
        (_21.3: u64) = move _27;         // scope 2 at cita-network/src/node_manager.rs:1058:9: 1058:44
        _28 = CheckedAdd(((*_2).13: u64), const 1_u64); // scope 2 at cita-network/src/node_manager.rs:1059:9: 1059:34
        assert(!move (_28.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_2).13: u64), const 1_u64) -> [success: bb19, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1059:9: 1059:34
    }

    bb18 (cleanup): {
        (_21.1: std::vec::Vec<u8>) = move _23; // scope 2 at cita-network/src/node_manager.rs:1056:9: 1056:18
        goto -> bb36;                    // scope 2 at cita-network/src/node_manager.rs:1056:48: 1056:49
    }

    bb19: {
        ((*_2).13: u64) = move (_28.0: u64); // scope 2 at cita-network/src/node_manager.rs:1059:9: 1059:34
        _32 = &((*_2).12: node_manager::ConsensusNodeTopology); // scope 2 at cita-network/src/node_manager.rs:1065:13: 1065:62
        _31 = ConsensusNodeTopology::consensus_all_linked(move _32) -> [return: bb23, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1065:13: 1065:62
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1065:40: 1065:60
                                         // + literal: Const { ty: for<'a> fn(&'a ConsensusNodeTopology) -> bool {ConsensusNodeTopology::consensus_all_linked}, val: Value(<ZST>) }
    }

    bb20: {
        _29 = const false;               // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
        goto -> bb22;                    // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
    }

    bb21: {
        _36 = &(_21.0: std::string::String); // scope 2 at cita-network/src/node_manager.rs:1065:66: 1065:98
        _35 = <std::string::String as Deref>::deref(move _36) -> [return: bb24, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1065:66: 1065:98
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1065:66: 1065:98
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb22: {
        switchInt(move _29) -> [0: bb27, otherwise: bb26]; // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
    }

    bb23: {
        _30 = Not(move _31);             // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:62
        switchInt(move _30) -> [0: bb20, otherwise: bb21]; // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
    }

    bb24: {
        _34 = _35;                       // scope 2 at cita-network/src/node_manager.rs:1065:66: 1065:98
        _33 = core::str::<impl str>::contains::<'_, &str>(move _34, const _) -> [return: bb25, unwind: bb36]; // scope 2 at cita-network/src/node_manager.rs:1065:66: 1065:98
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1065:75: 1065:83
                                         // + literal: Const { ty: fn(&str, &str) -> bool {core::str::<impl str>::contains::<'_, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1065:84: 1065:97
                                         // + literal: Const { ty: &str, val: Unevaluated(CONSENSUS_STR, [], None) }
    }

    bb25: {
        _29 = move _33;                  // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
        goto -> bb22;                    // scope 2 at cita-network/src/node_manager.rs:1065:12: 1065:98
    }

    bb26: {
        (_21.4: u8) = const _;           // scope 2 at cita-network/src/node_manager.rs:1066:13: 1066:41
        goto -> bb27;                    // scope 2 at cita-network/src/node_manager.rs:1065:9: 1067:10
    }

    bb27: {
        _38 = &_21;                      // scope 3 at cita-network/src/node_manager.rs:1069:62: 1069:67
        _37 = pubsub_message_to_network_message(_38) -> [return: bb28, unwind: bb36]; // scope 3 at cita-network/src/node_manager.rs:1069:28: 1069:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1069:28: 1069:61
                                         // + literal: Const { ty: for<'a> fn(&'a NetMessageUnit) -> std::option::Option<bytes::Bytes> {pubsub_message_to_network_message}, val: Value(<ZST>) }
    }

    bb28: {
        _51 = const true;                // scope 3 at cita-network/src/node_manager.rs:1069:67: 1069:68
        _39 = discriminant(_37);         // scope 3 at cita-network/src/node_manager.rs:1069:16: 1069:25
        switchInt(move _39) -> [1: bb29, otherwise: bb33]; // scope 3 at cita-network/src/node_manager.rs:1069:16: 1069:25
    }

    bb29: {
        _51 = const false;               // scope 3 at cita-network/src/node_manager.rs:1069:21: 1069:24
        _50 = const true;                // scope 3 at cita-network/src/node_manager.rs:1069:21: 1069:24
        _40 = move ((_37 as Some).0: bytes::Bytes); // scope 3 at cita-network/src/node_manager.rs:1069:21: 1069:24
        _41 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 4 at cita-network/src/node_manager.rs:1070:20: 1070:38
        switchInt(move _41) -> [1: bb30, otherwise: bb39]; // scope 4 at cita-network/src/node_manager.rs:1070:20: 1070:38
    }

    bb30: {
        _42 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 4 at cita-network/src/node_manager.rs:1070:25: 1070:37
        _44 = &(*_42);                   // scope 4 at cita-network/src/node_manager.rs:1071:25: 1071:93
        _45 = tentacle::service::TargetSession::All; // scope 4 at cita-network/src/node_manager.rs:1071:47: 1071:65
        _50 = const false;               // scope 4 at cita-network/src/node_manager.rs:1071:89: 1071:92
        _46 = move _40;                  // scope 4 at cita-network/src/node_manager.rs:1071:89: 1071:92
        _43 = ServiceControl::filter_broadcast(move _44, move _45, const _, move _46) -> [return: bb31, unwind: bb35]; // scope 4 at cita-network/src/node_manager.rs:1071:25: 1071:93
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1071:30: 1071:46
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, TargetSession, ProtocolId, bytes::Bytes) -> Result<(), tentacle::error::Error> {ServiceControl::filter_broadcast}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1071:67: 1071:87
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
    }

    bb31: {
        drop(_43) -> [return: bb39, unwind: bb35]; // scope 4 at cita-network/src/node_manager.rs:1071:93: 1071:94
    }

    bb32: {
        _50 = const false;               // scope 2 at cita-network/src/node_manager.rs:1073:9: 1073:10
        goto -> bb33;                    // scope 2 at cita-network/src/node_manager.rs:1069:9: 1073:10
    }

    bb33: {
        drop(_21) -> [return: bb34, unwind: bb45]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb34: {
        _54 = discriminant(_37);         // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
        switchInt(move _54) -> [1: bb41, otherwise: bb40]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb35 (cleanup): {
        drop(_21) -> bb45;               // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb36 (cleanup): {
        drop(_21) -> bb49;               // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb37 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1047:5: 1074:6
    }

    bb38: {
        drop(_40) -> [return: bb32, unwind: bb35]; // scope 2 at cita-network/src/node_manager.rs:1073:9: 1073:10
    }

    bb39: {
        switchInt(_50) -> [0: bb32, otherwise: bb38]; // scope 2 at cita-network/src/node_manager.rs:1073:9: 1073:10
    }

    bb40: {
        _51 = const false;               // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:1074:6: 1074:6
    }

    bb41: {
        switchInt(_51) -> [0: bb40, otherwise: bb42]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb42: {
        drop(((_37 as Some).0: bytes::Bytes)) -> [return: bb40, unwind: bb49]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb43 (cleanup): {
        switchInt(_51) -> [0: bb49, otherwise: bb44]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb44 (cleanup): {
        drop(((_37 as Some).0: bytes::Bytes)) -> bb49; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb45 (cleanup): {
        _55 = discriminant(_37);         // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
        switchInt(move _55) -> [1: bb43, otherwise: bb49]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb46 (cleanup): {
        switchInt(_52) -> [0: bb37, otherwise: bb47]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb47 (cleanup): {
        drop((_1.1: libproto::Message)) -> bb37; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb48 (cleanup): {
        drop((_1.0: std::string::String)) -> bb46; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb49 (cleanup): {
        switchInt(_53) -> [0: bb46, otherwise: bb48]; // scope 0 at cita-network/src/node_manager.rs:1074:5: 1074:6
    }

    bb50: {
        goto -> bb11;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1042:1: 1042:18>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1048:9: 1052:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1048:9: 1052:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1048:9: 1052:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1048:9: 1052:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1048:9: 1052:10
        _1 = (move _2, move _4, move _6, const 1048_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1042:1: 1042:18>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60

    bb0: {
        _1 = [const "[NodeManager] Broadcast msg ", const ", from key "]; // scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1049:13: 1049:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1049:13: 1049:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60
        return;                          // scope 0 at cita-network/src/node_manager.rs:1049:13: 1049:60
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1042:1: 1042:18>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1083:1: 1083:17>::new(_1: SessionId, _2: std::string::String, _3: libproto::Message) -> SingleTxReq {
    debug dst => _1;                     // in scope 0 at cita-network/src/node_manager.rs:1084:16: 1084:19
    debug key => _2;                     // in scope 0 at cita-network/src/node_manager.rs:1084:32: 1084:35
    debug msg => _3;                     // in scope 0 at cita-network/src/node_manager.rs:1084:45: 1084:48
    let mut _0: node_manager::SingleTxReq; // return place in scope 0 at cita-network/src/node_manager.rs:1084:67: 1084:71

    bb0: {
        _0 = SingleTxReq { dst: _1, key: move _2, msg: move _3 }; // scope 0 at cita-network/src/node_manager.rs:1085:9: 1085:38
        return;                          // scope 0 at cita-network/src/node_manager.rs:1086:6: 1086:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1083:1: 1083:17>::handle(_1: SingleTxReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1088:19: 1088:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1088:25: 1088:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1088:53: 1088:53
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1091:13: 1091:21
    let _18: &libproto::Message;         // in scope 0 at cita-network/src/node_manager.rs:1091:13: 1091:21
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1092:13: 1092:21
    let _20: &tentacle::SessionId;       // in scope 0 at cita-network/src/node_manager.rs:1092:13: 1092:21
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1093:13: 1093:21
    let _22: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:1093:13: 1093:21
    let _23: tentacle::SessionId;        // in scope 0 at cita-network/src/node_manager.rs:1095:13: 1095:16
    let mut _25: std::string::String;    // in scope 0 at cita-network/src/node_manager.rs:1097:24: 1097:32
    let mut _26: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/node_manager.rs:1098:25: 1098:53
    let mut _27: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/node_manager.rs:1098:25: 1098:44
    let mut _28: libproto::Message;      // in scope 0 at cita-network/src/node_manager.rs:1098:25: 1098:33
    let mut _29: std::option::Option<bytes::Bytes>; // in scope 0 at cita-network/src/node_manager.rs:1100:28: 1100:72
    let _30: &cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/node_manager.rs:1100:62: 1100:71
    let mut _31: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1100:16: 1100:25
    let mut _33: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1101:20: 1101:38
    let mut _35: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:1102:25: 1102:77
    let mut _36: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:1102:25: 1102:77
    let mut _37: bytes::Bytes;           // in scope 0 at cita-network/src/node_manager.rs:1102:73: 1102:76
    let mut _41: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1104:9: 1104:10
    let mut _42: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    let mut _43: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    let mut _44: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    let mut _45: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    let mut _46: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _38: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _39: &[&str; 3];         // in scope 1 at cita-network/src/node_manager.rs:1090:13: 1090:61
        let mut _40: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug dst => _23;                // in scope 2 at cita-network/src/node_manager.rs:1095:13: 1095:16
        let mut _24: cita_protocol::NetMessageUnit; // in scope 2 at cita-network/src/node_manager.rs:1096:13: 1096:25
        scope 3 {
            debug msg_unit => _24;       // in scope 3 at cita-network/src/node_manager.rs:1096:13: 1096:25
            scope 4 {
                debug buf => _32;        // in scope 4 at cita-network/src/node_manager.rs:1100:21: 1100:24
                let _32: bytes::Bytes;   // in scope 4 at cita-network/src/node_manager.rs:1100:21: 1100:24
                scope 5 {
                    debug ctrl => _34;   // in scope 5 at cita-network/src/node_manager.rs:1101:25: 1101:37
                    let _34: &mut tentacle::service::ServiceControl; // in scope 5 at cita-network/src/node_manager.rs:1101:25: 1101:37
                    scope 6 {
                    }
                }
            }
        }
    }

    bb0: {
        _41 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _44 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _42 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _43 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _43 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _44 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _3 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _40 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(SingleTxReq::handle, [], Some(promoted[2])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _40) -> [return: bb4, unwind: bb41]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> [return: bb5, unwind: bb41]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb12, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> [return: bb6, unwind: bb41]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _39 = const _;                   // scope 1 at cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(SingleTxReq::handle, [], Some(promoted[1])) }
        _13 = _39 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/node_manager.rs:1090:13: 1090:61
        _18 = &(_1.2: libproto::Message); // scope 1 at cita-network/src/node_manager.rs:1091:13: 1091:21
        _17 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_18) -> [return: bb8, unwind: bb41]; // scope 1 at cita-network/src/node_manager.rs:1091:13: 1091:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1091:13: 1091:21
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &(_1.0: tentacle::SessionId); // scope 1 at cita-network/src/node_manager.rs:1092:13: 1092:21
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<SessionId>(_20) -> [return: bb9, unwind: bb41]; // scope 1 at cita-network/src/node_manager.rs:1092:13: 1092:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1092:13: 1092:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<SessionId>}, val: Value(<ZST>) }
    }

    bb9: {
        _22 = &(_1.1: std::string::String); // scope 1 at cita-network/src/node_manager.rs:1093:13: 1093:21
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_22) -> [return: bb10, unwind: bb41]; // scope 1 at cita-network/src/node_manager.rs:1093:13: 1093:21
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1093:13: 1093:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = [move _17, move _19, move _21]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb11, unwind: bb41]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _38 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(SingleTxReq::handle, [], Some(promoted[0])) }
        _11 = log::__private_api_log(move _12, _3, _38) -> [return: bb42, unwind: bb41]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = (_1.0: tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:1095:19: 1095:27
        _24 = <NetMessageUnit as Default>::default() -> [return: bb13, unwind: bb41]; // scope 2 at cita-network/src/node_manager.rs:1096:28: 1096:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1096:28: 1096:51
                                         // + literal: Const { ty: fn() -> NetMessageUnit {<NetMessageUnit as Default>::default}, val: Value(<ZST>) }
    }

    bb13: {
        _44 = const false;               // scope 3 at cita-network/src/node_manager.rs:1097:24: 1097:32
        _25 = move (_1.1: std::string::String); // scope 3 at cita-network/src/node_manager.rs:1097:24: 1097:32
        drop((_24.0: std::string::String)) -> [return: bb14, unwind: bb15]; // scope 3 at cita-network/src/node_manager.rs:1097:9: 1097:21
    }

    bb14: {
        (_24.0: std::string::String) = move _25; // scope 3 at cita-network/src/node_manager.rs:1097:9: 1097:21
        _43 = const false;               // scope 3 at cita-network/src/node_manager.rs:1098:25: 1098:33
        _28 = move (_1.2: libproto::Message); // scope 3 at cita-network/src/node_manager.rs:1098:25: 1098:33
        _27 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _28) -> [return: bb16, unwind: bb28]; // scope 3 at cita-network/src/node_manager.rs:1098:25: 1098:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1098:34: 1098:42
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb15 (cleanup): {
        (_24.0: std::string::String) = move _25; // scope 3 at cita-network/src/node_manager.rs:1097:9: 1097:21
        goto -> bb28;                    // scope 3 at cita-network/src/node_manager.rs:1097:31: 1097:32
    }

    bb16: {
        _26 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _27) -> [return: bb17, unwind: bb28]; // scope 3 at cita-network/src/node_manager.rs:1098:25: 1098:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1098:45: 1098:51
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb17: {
        drop((_24.1: std::vec::Vec<u8>)) -> [return: bb18, unwind: bb19]; // scope 3 at cita-network/src/node_manager.rs:1098:9: 1098:22
    }

    bb18: {
        (_24.1: std::vec::Vec<u8>) = move _26; // scope 3 at cita-network/src/node_manager.rs:1098:9: 1098:22
        _30 = &_24;                      // scope 4 at cita-network/src/node_manager.rs:1100:62: 1100:71
        _29 = pubsub_message_to_network_message(_30) -> [return: bb20, unwind: bb28]; // scope 4 at cita-network/src/node_manager.rs:1100:28: 1100:72
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1100:28: 1100:61
                                         // + literal: Const { ty: for<'a> fn(&'a NetMessageUnit) -> std::option::Option<bytes::Bytes> {pubsub_message_to_network_message}, val: Value(<ZST>) }
    }

    bb19 (cleanup): {
        (_24.1: std::vec::Vec<u8>) = move _26; // scope 3 at cita-network/src/node_manager.rs:1098:9: 1098:22
        goto -> bb28;                    // scope 3 at cita-network/src/node_manager.rs:1098:52: 1098:53
    }

    bb20: {
        _42 = const true;                // scope 4 at cita-network/src/node_manager.rs:1100:71: 1100:72
        _31 = discriminant(_29);         // scope 4 at cita-network/src/node_manager.rs:1100:16: 1100:25
        switchInt(move _31) -> [1: bb21, otherwise: bb25]; // scope 4 at cita-network/src/node_manager.rs:1100:16: 1100:25
    }

    bb21: {
        _42 = const false;               // scope 4 at cita-network/src/node_manager.rs:1100:21: 1100:24
        _41 = const true;                // scope 4 at cita-network/src/node_manager.rs:1100:21: 1100:24
        _32 = move ((_29 as Some).0: bytes::Bytes); // scope 4 at cita-network/src/node_manager.rs:1100:21: 1100:24
        _33 = discriminant(((*_2).9: std::option::Option<tentacle::service::ServiceControl>)); // scope 5 at cita-network/src/node_manager.rs:1101:20: 1101:38
        switchInt(move _33) -> [1: bb22, otherwise: bb31]; // scope 5 at cita-network/src/node_manager.rs:1101:20: 1101:38
    }

    bb22: {
        _34 = &mut ((((*_2).9: std::option::Option<tentacle::service::ServiceControl>) as Some).0: tentacle::service::ServiceControl); // scope 5 at cita-network/src/node_manager.rs:1101:25: 1101:37
        _36 = &(*_34);                   // scope 5 at cita-network/src/node_manager.rs:1102:25: 1102:77
        _41 = const false;               // scope 5 at cita-network/src/node_manager.rs:1102:73: 1102:76
        _37 = move _32;                  // scope 5 at cita-network/src/node_manager.rs:1102:73: 1102:76
        _35 = ServiceControl::send_message_to(move _36, _23, const _, move _37) -> [return: bb23, unwind: bb27]; // scope 5 at cita-network/src/node_manager.rs:1102:25: 1102:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1102:30: 1102:45
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId, ProtocolId, bytes::Bytes) -> Result<(), tentacle::error::Error> {ServiceControl::send_message_to}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1102:51: 1102:71
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
    }

    bb23: {
        drop(_35) -> [return: bb31, unwind: bb27]; // scope 5 at cita-network/src/node_manager.rs:1102:77: 1102:78
    }

    bb24: {
        _41 = const false;               // scope 3 at cita-network/src/node_manager.rs:1104:9: 1104:10
        goto -> bb25;                    // scope 3 at cita-network/src/node_manager.rs:1100:9: 1104:10
    }

    bb25: {
        drop(_24) -> [return: bb26, unwind: bb37]; // scope 2 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb26: {
        _45 = discriminant(_29);         // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
        switchInt(move _45) -> [1: bb33, otherwise: bb32]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb27 (cleanup): {
        drop(_24) -> bb37;               // scope 2 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb28 (cleanup): {
        drop(_24) -> bb41;               // scope 2 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb29 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1088:5: 1105:6
    }

    bb30: {
        drop(_32) -> [return: bb24, unwind: bb27]; // scope 3 at cita-network/src/node_manager.rs:1104:9: 1104:10
    }

    bb31: {
        switchInt(_41) -> [0: bb24, otherwise: bb30]; // scope 3 at cita-network/src/node_manager.rs:1104:9: 1104:10
    }

    bb32: {
        _42 = const false;               // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:1105:6: 1105:6
    }

    bb33: {
        switchInt(_42) -> [0: bb32, otherwise: bb34]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb34: {
        drop(((_29 as Some).0: bytes::Bytes)) -> [return: bb32, unwind: bb41]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb35 (cleanup): {
        switchInt(_42) -> [0: bb41, otherwise: bb36]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb36 (cleanup): {
        drop(((_29 as Some).0: bytes::Bytes)) -> bb41; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb37 (cleanup): {
        _46 = discriminant(_29);         // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
        switchInt(move _46) -> [1: bb35, otherwise: bb41]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb38 (cleanup): {
        switchInt(_43) -> [0: bb29, otherwise: bb39]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb39 (cleanup): {
        drop((_1.2: libproto::Message)) -> bb29; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb40 (cleanup): {
        drop((_1.1: std::string::String)) -> bb38; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb41 (cleanup): {
        switchInt(_44) -> [0: bb38, otherwise: bb40]; // scope 0 at cita-network/src/node_manager.rs:1105:5: 1105:6
    }

    bb42: {
        goto -> bb12;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1083:1: 1083:17>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1089:9: 1094:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1089:9: 1094:10

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1089:9: 1094:10
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1089:9: 1094:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1089:9: 1094:10
        _1 = (move _2, move _4, move _6, const 1089_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1083:1: 1083:17>::handle: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61

    bb0: {
        _1 = [const "[NodeManager] Send msg ", const " to ", const ", from key "]; // scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1090:13: 1090:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61
        return;                          // scope 0 at cita-network/src/node_manager.rs:1090:13: 1090:61
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1083:1: 1083:17>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1112:1: 1112:21>::new(_1: pubsub::crossbeam_channel::Sender<usize>) -> GetPeerCountReq {
    debug return_channel => _1;          // in scope 0 at cita-network/src/node_manager.rs:1113:16: 1113:30
    let mut _0: node_manager::GetPeerCountReq; // return place in scope 0 at cita-network/src/node_manager.rs:1113:50: 1113:54

    bb0: {
        _0 = GetPeerCountReq { return_channel: move _1 }; // scope 0 at cita-network/src/node_manager.rs:1114:9: 1114:43
        return;                          // scope 0 at cita-network/src/node_manager.rs:1115:6: 1115:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1112:1: 1112:21>::handle(_1: GetPeerCountReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1117:19: 1117:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1117:25: 1117:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1117:53: 1117:53
    let _3: usize;                       // in scope 0 at cita-network/src/node_manager.rs:1118:13: 1118:23
    let mut _4: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:1118:26: 1118:55
    let mut _5: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<usize>>; // in scope 0 at cita-network/src/node_manager.rs:1120:25: 1120:65
    let mut _6: &pubsub::crossbeam_channel::Sender<usize>; // in scope 0 at cita-network/src/node_manager.rs:1120:25: 1120:65
    let mut _7: usize;                   // in scope 0 at cita-network/src/node_manager.rs:1120:54: 1120:64
    let mut _8: isize;                   // in scope 0 at cita-network/src/node_manager.rs:1120:16: 1120:22
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1123:17: 1123:27
    let _25: &usize;                     // in scope 0 at cita-network/src/node_manager.rs:1123:17: 1123:27
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1123:29: 1123:30
    let _27: &pubsub::crossbeam_channel::TrySendError<usize>; // in scope 0 at cita-network/src/node_manager.rs:1123:29: 1123:30
    scope 1 {
        debug peer_count => _3;          // in scope 1 at cita-network/src/node_manager.rs:1118:13: 1118:23
        scope 2 {
            debug e => _9;               // in scope 2 at cita-network/src/node_manager.rs:1120:20: 1120:21
            let _9: pubsub::crossbeam_channel::TrySendError<usize>; // in scope 2 at cita-network/src/node_manager.rs:1120:20: 1120:21
            let _10: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _10;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _28: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _29: &[&str; 2]; // in scope 3 at cita-network/src/node_manager.rs:1122:17: 1122:77
                let mut _30: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _4 = &((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 0 at cita-network/src/node_manager.rs:1118:26: 1118:55
        _3 = BTreeMap::<SessionId, TransformAddr>::len(move _4) -> [return: bb1, unwind: bb16]; // scope 0 at cita-network/src/node_manager.rs:1118:26: 1118:55
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1118:50: 1118:53
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<SessionId, TransformAddr>) -> usize {BTreeMap::<SessionId, TransformAddr>::len}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &(_1.0: pubsub::crossbeam_channel::Sender<usize>); // scope 2 at cita-network/src/node_manager.rs:1120:25: 1120:65
        _7 = _3;                         // scope 2 at cita-network/src/node_manager.rs:1120:54: 1120:64
        _5 = pubsub::crossbeam_channel::Sender::<usize>::try_send(move _6, move _7) -> [return: bb2, unwind: bb16]; // scope 2 at cita-network/src/node_manager.rs:1120:25: 1120:65
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1120:45: 1120:53
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<usize>, usize) -> Result<(), pubsub::crossbeam_channel::TrySendError<usize>> {pubsub::crossbeam_channel::Sender::<usize>::try_send}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = discriminant(_5);           // scope 2 at cita-network/src/node_manager.rs:1120:16: 1120:22
        switchInt(move _8) -> [1: bb3, otherwise: bb14]; // scope 2 at cita-network/src/node_manager.rs:1120:16: 1120:22
    }

    bb3: {
        _9 = ((_5 as Err).0: pubsub::crossbeam_channel::TrySendError<usize>); // scope 2 at cita-network/src/node_manager.rs:1120:20: 1120:21
        _10 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _13 = &_10;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _30 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(GetPeerCountReq::handle, [], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _30) -> [return: bb7, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _15 = &_10;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb8, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _11) -> [0: bb14, otherwise: bb10]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        switchInt(move _12) -> [0: bb4, otherwise: bb5]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _16 = &_17;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb9, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _11 = move _14;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _29 = const _;                   // scope 3 at cita-network/src/node_manager.rs:1122:17: 1122:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1122:17: 1122:77
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(GetPeerCountReq::handle, [], Some(promoted[1])) }
        _20 = _29 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/node_manager.rs:1122:17: 1122:77
        _25 = &_3;                       // scope 3 at cita-network/src/node_manager.rs:1123:17: 1123:27
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_25) -> [return: bb11, unwind: bb16]; // scope 3 at cita-network/src/node_manager.rs:1123:17: 1123:27
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1123:17: 1123:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb11: {
        _27 = &_9;                       // scope 3 at cita-network/src/node_manager.rs:1123:29: 1123:30
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<usize>>(_27) -> [return: bb12, unwind: bb16]; // scope 3 at cita-network/src/node_manager.rs:1123:29: 1123:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1123:29: 1123:30
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<usize>>}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = [move _24, move _26];      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb13, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _28 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(GetPeerCountReq::handle, [], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _28) -> [return: bb18, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_1) -> bb15;                // scope 0 at cita-network/src/node_manager.rs:1126:5: 1126:6
    }

    bb15: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1126:6: 1126:6
    }

    bb16 (cleanup): {
        drop(_1) -> bb17;                // scope 0 at cita-network/src/node_manager.rs:1126:5: 1126:6
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1117:5: 1126:6
    }

    bb18: {
        goto -> bb14;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1112:1: 1112:21>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1121:13: 1124:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1121:13: 1124:14

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1121:13: 1124:14
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1121:13: 1124:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1121:13: 1124:14
        _1 = (move _2, move _4, move _6, const 1121_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1112:1: 1112:21>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77

    bb0: {
        _1 = [const "[NodeManager] Get peer count ", const ", but send it failed : "]; // scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1122:17: 1122:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1122:17: 1122:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77
        return;                          // scope 0 at cita-network/src/node_manager.rs:1122:17: 1122:77
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1112:1: 1112:21>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::new(_1: pubsub::crossbeam_channel::Sender<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>) -> GetPeersInfoReq {
    debug return_channel => _1;          // in scope 0 at cita-network/src/node_manager.rs:1134:16: 1134:30
    let mut _0: node_manager::GetPeersInfoReq; // return place in scope 0 at cita-network/src/node_manager.rs:1134:69: 1134:73

    bb0: {
        _0 = GetPeersInfoReq { return_channel: move _1 }; // scope 0 at cita-network/src/node_manager.rs:1135:9: 1135:43
        return;                          // scope 0 at cita-network/src/node_manager.rs:1136:6: 1136:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle(_1: GetPeersInfoReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1138:19: 1138:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1138:25: 1138:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1138:53: 1138:53
    let mut _3: std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:1139:13: 1139:22
    let mut _4: std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1141:29: 1141:63
    let mut _5: std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1141:29: 1141:63
    let mut _6: &std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1141:29: 1141:63
    let mut _8: std::option::Option<(&cita_types::H160, &tentacle::SessionId)>; // in scope 0 at cita-network/src/node_manager.rs:1141:29: 1141:63
    let mut _9: &mut std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1141:29: 1141:63
    let mut _10: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1141:9: 1150:10
    let mut _13: std::option::Option<&node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:1142:33: 1142:68
    let mut _14: &std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>; // in scope 0 at cita-network/src/node_manager.rs:1142:33: 1142:68
    let _15: &&tentacle::SessionId;      // in scope 0 at cita-network/src/node_manager.rs:1142:61: 1142:67
    let mut _16: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1142:20: 1142:30
    let _18: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1143:17: 1143:75
    let mut _19: &mut std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:1143:17: 1143:75
    let mut _20: cita_types::H160;       // in scope 0 at cita-network/src/node_manager.rs:1143:30: 1143:41
    let mut _21: std::string::String;    // in scope 0 at cita-network/src/node_manager.rs:1143:43: 1143:74
    let mut _22: &std::net::IpAddr;      // in scope 0 at cita-network/src/node_manager.rs:1143:43: 1143:74
    let _23: std::net::IpAddr;           // in scope 0 at cita-network/src/node_manager.rs:1143:43: 1143:62
    let mut _24: &std::net::SocketAddr;  // in scope 0 at cita-network/src/node_manager.rs:1143:43: 1143:62
    let mut _26: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _27: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _28: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _29: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _30: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _31: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _32: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _33: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _34: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _35: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127
    let mut _36: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _37: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _38: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _39: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1147:21: 1147:26
    let _40: &&tentacle::SessionId;      // in scope 0 at cita-network/src/node_manager.rs:1147:21: 1147:26
    let mut _42: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _43: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _44: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _45: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _46: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _47: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _48: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _49: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _50: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _51: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53
    let mut _52: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _53: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _54: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _55: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1152:55: 1152:60
    let _56: &std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:1152:55: 1152:60
    let mut _57: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>>; // in scope 0 at cita-network/src/node_manager.rs:1154:25: 1154:60
    let mut _58: &pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 0 at cita-network/src/node_manager.rs:1154:25: 1154:60
    let mut _59: std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:1154:54: 1154:59
    let mut _60: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1154:16: 1154:22
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _64: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _65: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _66: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _67: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _68: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _69: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _70: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _74: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _75: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1155:66: 1155:67
    let _77: &pubsub::crossbeam_channel::TrySendError<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 0 at cita-network/src/node_manager.rs:1155:66: 1155:67
    let mut _87: &tentacle::SessionId;   // in scope 0 at cita-network/src/node_manager.rs:1142:61: 1142:67
    let mut _88: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    let mut _89: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    let mut _90: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    scope 1 {
        debug peers => _3;               // in scope 1 at cita-network/src/node_manager.rs:1139:13: 1139:22
        let mut _7: std::collections::btree_map::Iter<'_, cita_types::H160, tentacle::SessionId>; // in scope 1 at cita-network/src/node_manager.rs:1141:29: 1141:63
        let _41: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug iter => _7;            // in scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
            let _11: &cita_types::H160;  // in scope 2 at cita-network/src/node_manager.rs:1141:14: 1141:17
            let _12: &tentacle::SessionId; // in scope 2 at cita-network/src/node_manager.rs:1141:19: 1141:24
            scope 3 {
                debug key => _11;        // in scope 3 at cita-network/src/node_manager.rs:1141:14: 1141:17
                debug value => _12;      // in scope 3 at cita-network/src/node_manager.rs:1141:19: 1141:24
                let _25: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 4 {
                    debug addr => _17;   // in scope 4 at cita-network/src/node_manager.rs:1142:25: 1142:29
                    let _17: &node_manager::TransformAddr; // in scope 4 at cita-network/src/node_manager.rs:1142:25: 1142:29
                }
                scope 5 {
                    debug lvl => _25;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _84: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _85: &[&str; 2]; // in scope 5 at cita-network/src/node_manager.rs:1146:21: 1146:127
                    let mut _86: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
        scope 6 {
            debug lvl => _41;            // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _81: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _82: &[&str; 1];     // in scope 6 at cita-network/src/node_manager.rs:1152:16: 1152:53
            let mut _83: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 7 {
            debug e => _61;              // in scope 7 at cita-network/src/node_manager.rs:1154:20: 1154:21
            let _61: pubsub::crossbeam_channel::TrySendError<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>; // in scope 7 at cita-network/src/node_manager.rs:1154:20: 1154:21
            let _62: log::Level;         // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 8 {
                debug lvl => _62;        // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _78: &(&str, &str, &str, u32); // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _79: &[&str; 1]; // in scope 8 at cita-network/src/node_manager.rs:1155:19: 1155:64
                let mut _80: &log::LevelFilter; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _88 = const false;               // scope 0 at cita-network/src/node_manager.rs:1139:13: 1139:22
        _89 = const false;               // scope 0 at cita-network/src/node_manager.rs:1139:13: 1139:22
        _3 = <HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>> as Default>::default() -> [return: bb1, unwind: bb50]; // scope 0 at cita-network/src/node_manager.rs:1139:25: 1139:43
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1139:25: 1139:41
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>> {<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>> as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _89 = const true;                // scope 1 at cita-network/src/node_manager.rs:1141:9: 1150:10
        _6 = &((*_2).4: std::collections::BTreeMap<cita_types::H160, tentacle::SessionId>); // scope 1 at cita-network/src/node_manager.rs:1141:29: 1141:63
        _5 = BTreeMap::<H160, SessionId>::iter(move _6) -> [return: bb2, unwind: bb56]; // scope 1 at cita-network/src/node_manager.rs:1141:29: 1141:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1141:57: 1141:61
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<H160, SessionId>) -> std::collections::btree_map::Iter<'a, H160, SessionId> {BTreeMap::<H160, SessionId>::iter}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = <std::collections::btree_map::Iter<'_, H160, SessionId> as IntoIterator>::into_iter(move _5) -> [return: bb3, unwind: bb56]; // scope 1 at cita-network/src/node_manager.rs:1141:29: 1141:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1141:29: 1141:63
                                         // + literal: Const { ty: fn(std::collections::btree_map::Iter<'_, H160, SessionId>) -> <std::collections::btree_map::Iter<'_, H160, SessionId> as IntoIterator>::IntoIter {<std::collections::btree_map::Iter<'_, H160, SessionId> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = move _4;                    // scope 1 at cita-network/src/node_manager.rs:1141:29: 1141:63
        goto -> bb4;                     // scope 2 at cita-network/src/node_manager.rs:1141:9: 1150:10
    }

    bb4: {
        _9 = &mut _7;                    // scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
        _8 = <std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::next(_9) -> [return: bb5, unwind: bb56]; // scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1141:29: 1141:63
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::btree_map::Iter<'_, H160, SessionId>) -> std::option::Option<<std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::Item> {<std::collections::btree_map::Iter<'_, H160, SessionId> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = discriminant(_8);          // scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
        switchInt(move _10) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
    }

    bb6: {
        _11 = (((_8 as Some).0: (&cita_types::H160, &tentacle::SessionId)).0: &cita_types::H160); // scope 2 at cita-network/src/node_manager.rs:1141:14: 1141:17
        _12 = (((_8 as Some).0: (&cita_types::H160, &tentacle::SessionId)).1: &tentacle::SessionId); // scope 2 at cita-network/src/node_manager.rs:1141:19: 1141:24
        _14 = &((*_2).2: std::collections::BTreeMap<tentacle::SessionId, node_manager::TransformAddr>); // scope 4 at cita-network/src/node_manager.rs:1142:33: 1142:68
        _15 = &_12;                      // scope 4 at cita-network/src/node_manager.rs:1142:61: 1142:67
        _87 = deref_copy (*_15);         // scope 4 at cita-network/src/node_manager.rs:1142:61: 1142:67
        _13 = BTreeMap::<SessionId, TransformAddr>::get::<SessionId>(move _14, _87) -> [return: bb9, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1142:33: 1142:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1142:57: 1142:60
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<SessionId, TransformAddr>, &'b SessionId) -> std::option::Option<&'a TransformAddr> {BTreeMap::<SessionId, TransformAddr>::get::<SessionId>}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 2 at cita-network/src/node_manager.rs:1141:29: 1141:63
    }

    bb8: {
        _41 = log::Level::Debug;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _44 = &_41;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _83 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[5])) }
        _43 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _44, _83) -> [return: bb28, unwind: bb56]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = discriminant(_13);         // scope 4 at cita-network/src/node_manager.rs:1142:20: 1142:30
        switchInt(move _16) -> [1: bb10, otherwise: bb15]; // scope 4 at cita-network/src/node_manager.rs:1142:20: 1142:30
    }

    bb10: {
        _17 = ((_13 as Some).0: &node_manager::TransformAddr); // scope 4 at cita-network/src/node_manager.rs:1142:25: 1142:29
        _19 = &mut _3;                   // scope 4 at cita-network/src/node_manager.rs:1143:17: 1143:75
        _20 = <H160 as Clone>::clone(_11) -> [return: bb11, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1143:30: 1143:41
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1143:34: 1143:39
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> H160 {<H160 as Clone>::clone}, val: Value(<ZST>) }
    }

    bb11: {
        _24 = &((*_17).0: std::net::SocketAddr); // scope 4 at cita-network/src/node_manager.rs:1143:43: 1143:62
        _23 = std::net::SocketAddr::ip(move _24) -> [return: bb12, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1143:43: 1143:62
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1143:58: 1143:60
                                         // + literal: Const { ty: for<'a> fn(&'a std::net::SocketAddr) -> IpAddr {std::net::SocketAddr::ip}, val: Value(<ZST>) }
    }

    bb12: {
        _22 = &_23;                      // scope 4 at cita-network/src/node_manager.rs:1143:43: 1143:74
        _21 = <IpAddr as ToString>::to_string(move _22) -> [return: bb13, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1143:43: 1143:74
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1143:63: 1143:72
                                         // + literal: Const { ty: for<'a> fn(&'a IpAddr) -> std::string::String {<IpAddr as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb13: {
        _18 = HashMap::<H160, std::string::String, BuildHasherDefault<FnvHasher>>::insert(move _19, move _20, move _21) -> [return: bb14, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1143:17: 1143:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1143:23: 1143:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>, H160, std::string::String) -> std::option::Option<std::string::String> {HashMap::<H160, std::string::String, BuildHasherDefault<FnvHasher>>::insert}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_18) -> [return: bb4, unwind: bb56]; // scope 4 at cita-network/src/node_manager.rs:1143:75: 1143:76
    }

    bb15: {
        _25 = log::Level::Warn;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _28 = &_25;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _86 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[8])) }
        _27 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _28, _86) -> [return: bb19, unwind: bb56]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb16: {
        _26 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb18;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _30 = &_25;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _32 = log::max_level() -> [return: bb20, unwind: bb56]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb18: {
        switchInt(move _26) -> [0: bb4, otherwise: bb22]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        switchInt(move _27) -> [0: bb16, otherwise: bb17]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _31 = &_32;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _29 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _30, move _31) -> [return: bb21, unwind: bb56]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb21: {
        _26 = move _29;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb18;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _85 = const _;                   // scope 5 at cita-network/src/node_manager.rs:1146:21: 1146:127
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1146:21: 1146:127
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[7])) }
        _35 = _85 as &[&str] (Pointer(Unsize)); // scope 5 at cita-network/src/node_manager.rs:1146:21: 1146:127
        _40 = &_12;                      // scope 5 at cita-network/src/node_manager.rs:1147:21: 1147:26
        _39 = core::fmt::ArgumentV1::<'_>::new_display::<&SessionId>(_40) -> [return: bb23, unwind: bb56]; // scope 5 at cita-network/src/node_manager.rs:1147:21: 1147:26
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1147:21: 1147:26
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b &SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&SessionId>}, val: Value(<ZST>) }
    }

    bb23: {
        _38 = [move _39];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _37 = &_38;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _36 = _37 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _34 = Arguments::<'_>::new_v1(move _35, move _36) -> [return: bb24, unwind: bb56]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb24: {
        _84 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[6])) }
        _33 = log::__private_api_log(move _34, _25, _84) -> [return: bb57, unwind: bb56]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb25: {
        _42 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb27;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _46 = &_41;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _48 = log::max_level() -> [return: bb29, unwind: bb56]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb27: {
        switchInt(move _42) -> [0: bb34, otherwise: bb31]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        switchInt(move _43) -> [0: bb25, otherwise: bb26]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _47 = &_48;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _45 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _46, move _47) -> [return: bb30, unwind: bb56]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb30: {
        _42 = move _45;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb27;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _82 = const _;                   // scope 6 at cita-network/src/node_manager.rs:1152:16: 1152:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1152:16: 1152:53
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[4])) }
        _51 = _82 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/node_manager.rs:1152:16: 1152:53
        _56 = &_3;                       // scope 6 at cita-network/src/node_manager.rs:1152:55: 1152:60
        _55 = core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>(_56) -> [return: bb32, unwind: bb56]; // scope 6 at cita-network/src/node_manager.rs:1152:55: 1152:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1152:55: 1152:60
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>}, val: Value(<ZST>) }
    }

    bb32: {
        _54 = [move _55];                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _53 = &_54;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _52 = _53 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _50 = Arguments::<'_>::new_v1(move _51, move _52) -> [return: bb33, unwind: bb56]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb33: {
        _81 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[3])) }
        _49 = log::__private_api_log(move _50, _41, _81) -> [return: bb58, unwind: bb56]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb34: {
        _58 = &(_1.0: pubsub::crossbeam_channel::Sender<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>); // scope 7 at cita-network/src/node_manager.rs:1154:25: 1154:60
        _89 = const false;               // scope 7 at cita-network/src/node_manager.rs:1154:54: 1154:59
        _59 = move _3;                   // scope 7 at cita-network/src/node_manager.rs:1154:54: 1154:59
        _57 = pubsub::crossbeam_channel::Sender::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>::try_send(move _58, move _59) -> [return: bb35, unwind: bb56]; // scope 7 at cita-network/src/node_manager.rs:1154:25: 1154:60
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1154:45: 1154:53
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>, HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>) -> Result<(), pubsub::crossbeam_channel::TrySendError<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>> {pubsub::crossbeam_channel::Sender::<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>::try_send}, val: Value(<ZST>) }
    }

    bb35: {
        _88 = const true;                // scope 7 at cita-network/src/node_manager.rs:1154:59: 1154:60
        _60 = discriminant(_57);         // scope 7 at cita-network/src/node_manager.rs:1154:16: 1154:22
        switchInt(move _60) -> [1: bb36, otherwise: bb47]; // scope 7 at cita-network/src/node_manager.rs:1154:16: 1154:22
    }

    bb36: {
        _88 = const false;               // scope 7 at cita-network/src/node_manager.rs:1154:20: 1154:21
        _61 = move ((_57 as Err).0: pubsub::crossbeam_channel::TrySendError<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>); // scope 7 at cita-network/src/node_manager.rs:1154:20: 1154:21
        _62 = log::Level::Warn;          // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _65 = &_62;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _80 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[2])) }
        _64 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _65, _80) -> [return: bb40, unwind: bb49]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb37: {
        _63 = const false;               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _67 = &_62;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _69 = log::max_level() -> [return: bb41, unwind: bb49]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _63) -> [0: bb46, otherwise: bb43]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        switchInt(move _64) -> [0: bb37, otherwise: bb38]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        _68 = &_69;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _66 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _67, move _68) -> [return: bb42, unwind: bb49]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb42: {
        _63 = move _66;                  // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb43: {
        _79 = const _;                   // scope 8 at cita-network/src/node_manager.rs:1155:19: 1155:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1155:19: 1155:64
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[1])) }
        _72 = _79 as &[&str] (Pointer(Unsize)); // scope 8 at cita-network/src/node_manager.rs:1155:19: 1155:64
        _77 = &_61;                      // scope 8 at cita-network/src/node_manager.rs:1155:66: 1155:67
        _76 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>>(_77) -> [return: bb44, unwind: bb49]; // scope 8 at cita-network/src/node_manager.rs:1155:66: 1155:67
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1155:66: 1155:67
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<HashMap<H160, std::string::String, BuildHasherDefault<FnvHasher>>>>}, val: Value(<ZST>) }
    }

    bb44: {
        _75 = [move _76];                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _74 = &_75;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _71 = Arguments::<'_>::new_v1(move _72, move _73) -> [return: bb45, unwind: bb49]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb45: {
        _78 = const _;                   // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(GetPeersInfoReq::handle, [], Some(promoted[0])) }
        _70 = log::__private_api_log(move _71, _62, _78) -> [return: bb59, unwind: bb49]; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb46: {
        drop(_61) -> [return: bb47, unwind: bb50]; // scope 1 at cita-network/src/node_manager.rs:1156:9: 1156:10
    }

    bb47: {
        _89 = const false;               // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
        _90 = discriminant(_57);         // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
        switchInt(move _90) -> [1: bb53, otherwise: bb52]; // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb48: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1157:6: 1157:6
    }

    bb49 (cleanup): {
        drop(_61) -> bb50;               // scope 1 at cita-network/src/node_manager.rs:1156:9: 1156:10
    }

    bb50 (cleanup): {
        drop(_1) -> bb51;                // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb51 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1138:5: 1157:6
    }

    bb52: {
        _88 = const false;               // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
        drop(_1) -> bb48;                // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb53: {
        switchInt(_88) -> [0: bb52, otherwise: bb54]; // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb54: {
        drop(((_57 as Err).0: pubsub::crossbeam_channel::TrySendError<std::collections::HashMap<cita_types::H160, std::string::String, std::hash::BuildHasherDefault<fnv::FnvHasher>>>)) -> [return: bb52, unwind: bb50]; // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb55 (cleanup): {
        drop(_3) -> bb50;                // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb56 (cleanup): {
        switchInt(_89) -> [0: bb50, otherwise: bb55]; // scope 0 at cita-network/src/node_manager.rs:1157:5: 1157:6
    }

    bb57: {
        goto -> bb4;                     // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb58: {
        goto -> bb34;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb59: {
        goto -> bb46;                    // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1155:13: 1155:68
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1155:13: 1155:68

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1155:13: 1155:68
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1155:13: 1155:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1155:13: 1155:68
        _1 = (move _2, move _4, move _6, const 1155_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64

    bb0: {
        _1 = [const "[NodeManager] Send peers info failed : "]; // scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1155:19: 1155:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64
        return;                          // scope 0 at cita-network/src/node_manager.rs:1155:19: 1155:64
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1152:9: 1152:61
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1152:9: 1152:61

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1152:9: 1152:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1152:9: 1152:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1152:9: 1152:61
        _1 = (move _2, move _4, move _6, const 1152_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53

    bb0: {
        _1 = [const "[NodeManager] get peers info : "]; // scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1152:16: 1152:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53
        return;                          // scope 0 at cita-network/src/node_manager.rs:1152:16: 1152:53
    }
}

promoted[5] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1145:17: 1148:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1145:17: 1148:18

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1145:17: 1148:18
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1145:17: 1148:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1145:17: 1148:18
        _1 = (move _2, move _4, move _6, const 1145_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127

    bb0: {
        _1 = [const "[NodeManager] Can not get socket address for session ", const " from connected_addr. It must be something wrong!"]; // scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1146:21: 1146:127
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1146:21: 1146:127
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127
        return;                          // scope 0 at cita-network/src/node_manager.rs:1146:21: 1146:127
    }
}

promoted[8] in node_manager::<impl at cita-network/src/node_manager.rs:1133:1: 1133:21>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1164:1: 1164:22>::new(_1: std::net::SocketAddr) -> ConnectedSelfReq {
    debug addr => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1165:16: 1165:20
    let mut _0: node_manager::ConnectedSelfReq; // return place in scope 0 at cita-network/src/node_manager.rs:1165:37: 1165:41

    bb0: {
        _0 = ConnectedSelfReq { addr: _1 }; // scope 0 at cita-network/src/node_manager.rs:1166:9: 1166:34
        return;                          // scope 0 at cita-network/src/node_manager.rs:1167:6: 1167:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1164:1: 1164:22>::handle(_1: ConnectedSelfReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1169:19: 1169:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1169:25: 1169:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1169:53: 1169:53
    let mut _3: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:1170:29: 1170:44
    let mut _4: std::net::SocketAddr;    // in scope 0 at cita-network/src/node_manager.rs:1170:34: 1170:43
    let mut _5: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:1171:32: 1171:36

    bb0: {
        _4 = (_1.0: std::net::SocketAddr); // scope 0 at cita-network/src/node_manager.rs:1170:34: 1170:43
        _3 = std::option::Option::<std::net::SocketAddr>::Some(move _4); // scope 0 at cita-network/src/node_manager.rs:1170:29: 1170:44
        ((*_2).15: std::option::Option<std::net::SocketAddr>) = move _3; // scope 0 at cita-network/src/node_manager.rs:1170:9: 1170:44
        _5 = std::option::Option::<std::net::SocketAddr>::None; // scope 0 at cita-network/src/node_manager.rs:1171:32: 1171:36
        ((*_2).14: std::option::Option<std::net::SocketAddr>) = move _5; // scope 0 at cita-network/src/node_manager.rs:1171:9: 1171:36
        return;                          // scope 0 at cita-network/src/node_manager.rs:1172:6: 1172:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::new(_1: Vec<std::string::String>) -> ModifiedConfigPeersReq {
    debug peers => _1;                   // in scope 0 at cita-network/src/node_manager.rs:1180:16: 1180:21
    let mut _0: node_manager::ModifiedConfigPeersReq; // return place in scope 0 at cita-network/src/node_manager.rs:1180:39: 1180:43

    bb0: {
        _0 = ModifiedConfigPeersReq { peers: move _1 }; // scope 0 at cita-network/src/node_manager.rs:1181:9: 1181:41
        return;                          // scope 0 at cita-network/src/node_manager.rs:1182:6: 1182:6
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle(_1: ModifiedConfigPeersReq, _2: &mut NodesManager) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/node_manager.rs:1184:19: 1184:23
    debug service => _2;                 // in scope 0 at cita-network/src/node_manager.rs:1184:25: 1184:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/node_manager.rs:1184:53: 1184:53
    let mut _3: std::collections::BTreeSet<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1186:13: 1186:21
    let mut _4: std::iter::Cloned<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>>; // in scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:73
    let mut _5: std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:64
    let mut _6: &std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:64
    let mut _7: std::slice::Iter<'_, std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1187:21: 1187:32
    let mut _8: &std::vec::Vec<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1187:21: 1187:32
    let mut _10: std::option::Option<&std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1187:21: 1187:32
    let mut _11: &mut std::slice::Iter<'_, std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1187:21: 1187:32
    let mut _12: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1187:9: 1189:10
    let _14: bool;                       // in scope 0 at cita-network/src/node_manager.rs:1188:13: 1188:30
    let mut _15: &mut std::collections::BTreeSet<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1188:13: 1188:30
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _18: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _19: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _21: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _22: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _23: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _24: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _25: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: &[&str];                // in scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32
    let mut _27: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _28: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _29: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _30: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/node_manager.rs:1191:34: 1191:44
    let _31: &std::vec::Vec<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1191:34: 1191:44
    let mut _32: std::collections::btree_set::IntoIter<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1194:20: 1194:24
    let mut _33: std::collections::BTreeSet<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1194:20: 1194:24
    let mut _35: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1194:20: 1194:24
    let mut _36: &mut std::collections::btree_set::IntoIter<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1194:20: 1194:24
    let mut _37: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1194:9: 1207:10
    let _39: std::option::Option<()>;    // in scope 0 at cita-network/src/node_manager.rs:1195:13: 1206:15
    let mut _40: std::option::Option<std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1195:13: 1195:46
    let mut _41: &mut std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1195:13: 1195:46
    let _42: &std::string::String;       // in scope 0 at cita-network/src/node_manager.rs:1195:41: 1195:45
    let mut _43: [closure@cita-network/src/node_manager.rs:1195:56: 1195:62]; // in scope 0 at cita-network/src/node_manager.rs:1195:56: 1206:14
    let mut _44: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1195:56: 1206:14
    let mut _45: std::vec::IntoIter<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1208:21: 1208:31
    let mut _46: std::vec::Vec<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1208:21: 1208:31
    let mut _48: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1208:21: 1208:31
    let mut _49: &mut std::vec::IntoIter<std::string::String>; // in scope 0 at cita-network/src/node_manager.rs:1208:21: 1208:31
    let mut _50: isize;                  // in scope 0 at cita-network/src/node_manager.rs:1208:9: 1210:10
    let _52: &mut std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:1209:13: 1209:61
    let mut _53: std::collections::btree_map::Entry<'_, std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1209:13: 1209:45
    let mut _54: &mut std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>; // in scope 0 at cita-network/src/node_manager.rs:1209:13: 1209:45
    let mut _55: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/node_manager.rs:1209:56: 1209:60
    let mut _59: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    let mut _60: bool;                   // in scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    scope 1 {
        debug keys => _3;                // in scope 1 at cita-network/src/node_manager.rs:1186:13: 1186:21
        let mut _9: std::slice::Iter<'_, std::string::String>; // in scope 1 at cita-network/src/node_manager.rs:1187:21: 1187:32
        let _16: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _34: std::collections::btree_set::IntoIter<std::string::String>; // in scope 1 at cita-network/src/node_manager.rs:1194:20: 1194:24
        let mut _47: std::vec::IntoIter<std::string::String>; // in scope 1 at cita-network/src/node_manager.rs:1208:21: 1208:31
        scope 2 {
            debug iter => _9;            // in scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
            let _13: &std::string::String; // in scope 2 at cita-network/src/node_manager.rs:1187:13: 1187:17
            scope 3 {
                debug peer => _13;       // in scope 3 at cita-network/src/node_manager.rs:1187:13: 1187:17
            }
        }
        scope 4 {
            debug lvl => _16;            // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _56: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _57: &[&str; 1];     // in scope 4 at cita-network/src/node_manager.rs:1191:15: 1191:32
            let mut _58: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 5 {
            debug iter => _34;           // in scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
            let _38: std::string::String; // in scope 5 at cita-network/src/node_manager.rs:1194:13: 1194:16
            scope 6 {
                debug key => _38;        // in scope 6 at cita-network/src/node_manager.rs:1194:13: 1194:16
            }
        }
        scope 7 {
            debug iter => _47;           // in scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
            let _51: std::string::String; // in scope 7 at cita-network/src/node_manager.rs:1208:13: 1208:17
            scope 8 {
                debug peer => _51;       // in scope 8 at cita-network/src/node_manager.rs:1208:13: 1208:17
            }
        }
    }

    bb0: {
        _60 = const false;               // scope 0 at cita-network/src/node_manager.rs:1186:13: 1186:21
        _59 = const false;               // scope 0 at cita-network/src/node_manager.rs:1186:13: 1186:21
        _60 = const true;                // scope 0 at cita-network/src/node_manager.rs:1186:13: 1186:21
        _6 = &((*_2).1: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>); // scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:64
        _5 = BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::keys(move _6) -> [return: bb1, unwind: bb44]; // scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:64
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1186:58: 1186:62
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>) -> std::collections::btree_map::Keys<'a, std::string::String, std::option::Option<std::net::SocketAddr>> {BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::keys}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = <std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as Iterator>::cloned::<'_, std::string::String>(move _5) -> [return: bb2, unwind: bb44]; // scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:73
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1186:65: 1186:71
                                         // + literal: Const { ty: fn(std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>) -> Cloned<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>> {<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>> as Iterator>::cloned::<'_, std::string::String>}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = <Cloned<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>> as Iterator>::collect::<BTreeSet<std::string::String>>(move _4) -> [return: bb3, unwind: bb44]; // scope 0 at cita-network/src/node_manager.rs:1186:37: 1186:83
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1186:74: 1186:81
                                         // + literal: Const { ty: fn(Cloned<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>>) -> BTreeSet<std::string::String> {<Cloned<std::collections::btree_map::Keys<'_, std::string::String, std::option::Option<std::net::SocketAddr>>> as Iterator>::collect::<BTreeSet<std::string::String>>}, val: Value(<ZST>) }
    }

    bb3: {
        _59 = const true;                // scope 0 at cita-network/src/node_manager.rs:1186:82: 1186:83
        _8 = &(_1.0: std::vec::Vec<std::string::String>); // scope 1 at cita-network/src/node_manager.rs:1187:21: 1187:32
        _7 = <&Vec<std::string::String> as IntoIterator>::into_iter(move _8) -> [return: bb4, unwind: bb42]; // scope 1 at cita-network/src/node_manager.rs:1187:21: 1187:32
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1187:21: 1187:32
                                         // + literal: Const { ty: fn(&Vec<std::string::String>) -> <&Vec<std::string::String> as IntoIterator>::IntoIter {<&Vec<std::string::String> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = move _7;                    // scope 1 at cita-network/src/node_manager.rs:1187:21: 1187:32
        goto -> bb5;                     // scope 2 at cita-network/src/node_manager.rs:1187:9: 1189:10
    }

    bb5: {
        _11 = &mut _9;                   // scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
        _10 = <std::slice::Iter<'_, std::string::String> as Iterator>::next(_11) -> [return: bb6, unwind: bb42]; // scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1187:21: 1187:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = discriminant(_10);         // scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
        switchInt(move _12) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
    }

    bb7: {
        _13 = ((_10 as Some).0: &std::string::String); // scope 2 at cita-network/src/node_manager.rs:1187:13: 1187:17
        _15 = &mut _3;                   // scope 3 at cita-network/src/node_manager.rs:1188:13: 1188:30
        _14 = BTreeSet::<std::string::String>::remove::<std::string::String>(move _15, _13) -> [return: bb45, unwind: bb42]; // scope 3 at cita-network/src/node_manager.rs:1188:13: 1188:30
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1188:18: 1188:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeSet<std::string::String>, &'b std::string::String) -> bool {BTreeSet::<std::string::String>::remove::<std::string::String>}, val: Value(<ZST>) }
    }

    bb8: {
        unreachable;                     // scope 2 at cita-network/src/node_manager.rs:1187:21: 1187:32
    }

    bb9: {
        _16 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _19 = &_16;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _58 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(ModifiedConfigPeersReq::handle, [], Some(promoted[2])) }
        _18 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _19, _58) -> [return: bb13, unwind: bb42]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _17 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _21 = &_16;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _23 = log::max_level() -> [return: bb14, unwind: bb42]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _17) -> [0: bb19, otherwise: bb16]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        switchInt(move _18) -> [0: bb10, otherwise: bb11]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _22 = &_23;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _20 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _21, move _22) -> [return: bb15, unwind: bb42]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _17 = move _20;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _57 = const _;                   // scope 4 at cita-network/src/node_manager.rs:1191:15: 1191:32
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1191:15: 1191:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(ModifiedConfigPeersReq::handle, [], Some(promoted[1])) }
        _26 = _57 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/node_manager.rs:1191:15: 1191:32
        _31 = &(_1.0: std::vec::Vec<std::string::String>); // scope 4 at cita-network/src/node_manager.rs:1191:34: 1191:44
        _30 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<std::string::String>>(_31) -> [return: bb17, unwind: bb42]; // scope 4 at cita-network/src/node_manager.rs:1191:34: 1191:44
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1191:34: 1191:44
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<std::string::String>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<std::string::String>>}, val: Value(<ZST>) }
    }

    bb17: {
        _29 = [move _30];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _28 = &_29;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _27 = _28 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = Arguments::<'_>::new_v1(move _26, move _27) -> [return: bb18, unwind: bb42]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb18: {
        _56 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(ModifiedConfigPeersReq::handle, [], Some(promoted[0])) }
        _24 = log::__private_api_log(move _25, _16, _56) -> [return: bb46, unwind: bb42]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb19: {
        _59 = const false;               // scope 1 at cita-network/src/node_manager.rs:1194:20: 1194:24
        _33 = move _3;                   // scope 1 at cita-network/src/node_manager.rs:1194:20: 1194:24
        _32 = <BTreeSet<std::string::String> as IntoIterator>::into_iter(move _33) -> [return: bb20, unwind: bb42]; // scope 1 at cita-network/src/node_manager.rs:1194:20: 1194:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1194:20: 1194:24
                                         // + literal: Const { ty: fn(BTreeSet<std::string::String>) -> <BTreeSet<std::string::String> as IntoIterator>::IntoIter {<BTreeSet<std::string::String> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb20: {
        _34 = move _32;                  // scope 1 at cita-network/src/node_manager.rs:1194:20: 1194:24
        goto -> bb21;                    // scope 5 at cita-network/src/node_manager.rs:1194:9: 1207:10
    }

    bb21: {
        _36 = &mut _34;                  // scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
        _35 = <std::collections::btree_set::IntoIter<std::string::String> as Iterator>::next(_36) -> [return: bb22, unwind: bb39]; // scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1194:20: 1194:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::btree_set::IntoIter<std::string::String>) -> std::option::Option<<std::collections::btree_set::IntoIter<std::string::String> as Iterator>::Item> {<std::collections::btree_set::IntoIter<std::string::String> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb22: {
        _37 = discriminant(_35);         // scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
        switchInt(move _37) -> [0: bb25, 1: bb23, otherwise: bb24]; // scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
    }

    bb23: {
        _38 = move ((_35 as Some).0: std::string::String); // scope 5 at cita-network/src/node_manager.rs:1194:13: 1194:16
        _41 = &mut ((*_2).1: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>); // scope 6 at cita-network/src/node_manager.rs:1195:13: 1195:46
        _42 = &_38;                      // scope 6 at cita-network/src/node_manager.rs:1195:41: 1195:45
        _40 = BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::remove::<std::string::String>(move _41, _42) -> [return: bb26, unwind: bb38]; // scope 6 at cita-network/src/node_manager.rs:1195:13: 1195:46
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1195:34: 1195:40
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>, &'b std::string::String) -> std::option::Option<std::option::Option<std::net::SocketAddr>> {BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::remove::<std::string::String>}, val: Value(<ZST>) }
    }

    bb24: {
        unreachable;                     // scope 5 at cita-network/src/node_manager.rs:1194:20: 1194:24
    }

    bb25: {
        drop(_34) -> [return: bb28, unwind: bb42]; // scope 1 at cita-network/src/node_manager.rs:1207:9: 1207:10
    }

    bb26: {
        _44 = &mut _2;                   // scope 6 at cita-network/src/node_manager.rs:1195:56: 1206:14
        _43 = [closure@cita-network/src/node_manager.rs:1195:56: 1195:62] { service: move _44 }; // scope 6 at cita-network/src/node_manager.rs:1195:56: 1206:14
                                         // closure
                                         // + def_id: DefId(0:443 ~ cita_network[da60]::node_manager::{impl#24}::handle::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::option::Option<std::net::SocketAddr>,)) -> std::option::Option<()>,
                                         //     (&mut &mut node_manager::NodesManager,),
                                         // ]
        _39 = std::option::Option::<std::option::Option<std::net::SocketAddr>>::and_then::<(), [closure@cita-network/src/node_manager.rs:1195:56: 1195:62]>(move _40, move _43) -> [return: bb27, unwind: bb38]; // scope 6 at cita-network/src/node_manager.rs:1195:13: 1206:15
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1195:47: 1195:55
                                         // + literal: Const { ty: fn(std::option::Option<std::option::Option<std::net::SocketAddr>>, [closure@cita-network/src/node_manager.rs:1195:56: 1195:62]) -> std::option::Option<()> {std::option::Option::<std::option::Option<std::net::SocketAddr>>::and_then::<(), [closure@cita-network/src/node_manager.rs:1195:56: 1195:62]>}, val: Value(<ZST>) }
    }

    bb27: {
        drop(_38) -> [return: bb21, unwind: bb39]; // scope 5 at cita-network/src/node_manager.rs:1207:9: 1207:10
    }

    bb28: {
        _60 = const false;               // scope 1 at cita-network/src/node_manager.rs:1208:21: 1208:31
        _46 = move (_1.0: std::vec::Vec<std::string::String>); // scope 1 at cita-network/src/node_manager.rs:1208:21: 1208:31
        _45 = <Vec<std::string::String> as IntoIterator>::into_iter(move _46) -> [return: bb29, unwind: bb42]; // scope 1 at cita-network/src/node_manager.rs:1208:21: 1208:31
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1208:21: 1208:31
                                         // + literal: Const { ty: fn(Vec<std::string::String>) -> <Vec<std::string::String> as IntoIterator>::IntoIter {<Vec<std::string::String> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb29: {
        _47 = move _45;                  // scope 1 at cita-network/src/node_manager.rs:1208:21: 1208:31
        goto -> bb30;                    // scope 7 at cita-network/src/node_manager.rs:1208:9: 1210:10
    }

    bb30: {
        _49 = &mut _47;                  // scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
        _48 = <std::vec::IntoIter<std::string::String> as Iterator>::next(_49) -> [return: bb31, unwind: bb37]; // scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1208:21: 1208:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<std::string::String>) -> std::option::Option<<std::vec::IntoIter<std::string::String> as Iterator>::Item> {<std::vec::IntoIter<std::string::String> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb31: {
        _50 = discriminant(_48);         // scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
        switchInt(move _50) -> [0: bb34, 1: bb32, otherwise: bb33]; // scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
    }

    bb32: {
        _51 = move ((_48 as Some).0: std::string::String); // scope 7 at cita-network/src/node_manager.rs:1208:13: 1208:17
        _54 = &mut ((*_2).1: std::collections::BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>); // scope 8 at cita-network/src/node_manager.rs:1209:13: 1209:45
        _53 = BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::entry(move _54, move _51) -> [return: bb35, unwind: bb37]; // scope 8 at cita-network/src/node_manager.rs:1209:13: 1209:45
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1209:34: 1209:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<std::string::String, std::option::Option<std::net::SocketAddr>>, std::string::String) -> std::collections::btree_map::Entry<'a, std::string::String, std::option::Option<std::net::SocketAddr>> {BTreeMap::<std::string::String, std::option::Option<std::net::SocketAddr>>::entry}, val: Value(<ZST>) }
    }

    bb33: {
        unreachable;                     // scope 7 at cita-network/src/node_manager.rs:1208:21: 1208:31
    }

    bb34: {
        drop(_47) -> [return: bb36, unwind: bb42]; // scope 1 at cita-network/src/node_manager.rs:1210:9: 1210:10
    }

    bb35: {
        _55 = std::option::Option::<std::net::SocketAddr>::None; // scope 8 at cita-network/src/node_manager.rs:1209:56: 1209:60
        _52 = std::collections::btree_map::Entry::<'_, std::string::String, std::option::Option<std::net::SocketAddr>>::or_insert(move _53, move _55) -> [return: bb47, unwind: bb37]; // scope 8 at cita-network/src/node_manager.rs:1209:13: 1209:61
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1209:46: 1209:55
                                         // + literal: Const { ty: fn(std::collections::btree_map::Entry<'_, std::string::String, std::option::Option<std::net::SocketAddr>>, std::option::Option<std::net::SocketAddr>) -> &mut std::option::Option<std::net::SocketAddr> {std::collections::btree_map::Entry::<'_, std::string::String, std::option::Option<std::net::SocketAddr>>::or_insert}, val: Value(<ZST>) }
    }

    bb36: {
        _59 = const false;               // scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
        return;                          // scope 0 at cita-network/src/node_manager.rs:1211:6: 1211:6
    }

    bb37 (cleanup): {
        drop(_47) -> bb42;               // scope 1 at cita-network/src/node_manager.rs:1210:9: 1210:10
    }

    bb38 (cleanup): {
        drop(_38) -> bb39;               // scope 5 at cita-network/src/node_manager.rs:1207:9: 1207:10
    }

    bb39 (cleanup): {
        drop(_34) -> bb42;               // scope 1 at cita-network/src/node_manager.rs:1207:9: 1207:10
    }

    bb40 (cleanup): {
        resume;                          // scope 0 at cita-network/src/node_manager.rs:1184:5: 1211:6
    }

    bb41 (cleanup): {
        drop(_3) -> bb44;                // scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    }

    bb42 (cleanup): {
        switchInt(_59) -> [0: bb44, otherwise: bb41]; // scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    }

    bb43 (cleanup): {
        drop((_1.0: std::vec::Vec<std::string::String>)) -> bb40; // scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    }

    bb44 (cleanup): {
        switchInt(_60) -> [0: bb40, otherwise: bb43]; // scope 0 at cita-network/src/node_manager.rs:1211:5: 1211:6
    }

    bb45: {
        goto -> bb5;                     // scope 3 at cita-network/src/node_manager.rs:1188:13: 1188:30
    }

    bb46: {
        goto -> bb19;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb47: {
        goto -> bb30;                    // scope 8 at cita-network/src/node_manager.rs:1209:13: 1209:61
    }
}

promoted[0] in node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1191:9: 1191:45
    let mut _7: &str;                    // in scope 0 at cita-network/src/node_manager.rs:1191:9: 1191:45

    bb0: {
        _3 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::node_manager"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/node_manager.rs"; // scope 0 at cita-network/src/node_manager.rs:1191:9: 1191:45
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1191:9: 1191:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/node_manager.rs:1191:9: 1191:45
        _1 = (move _2, move _4, move _6, const 1191_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32

    bb0: {
        _1 = [const "left peers "];      // scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1191:15: 1191:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32
        return;                          // scope 0 at cita-network/src/node_manager.rs:1191:15: 1191:32
    }
}

promoted[2] in node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:1195:56: 1195:62], _2: std::option::Option<std::net::SocketAddr>) -> std::option::Option<()> {
    debug addr => _2;                    // in scope 0 at cita-network/src/node_manager.rs:1195:57: 1195:61
    debug service => (*(_1.0: &mut &mut node_manager::NodesManager)); // in scope 0 at cita-network/src/node_manager.rs:1184:25: 1184:32
    let mut _0: std::option::Option<()>; // return place in scope 0 at cita-network/src/node_manager.rs:1195:63: 1195:63
    let mut _3: [closure@cita-network/src/node_manager.rs:1196:31: 1196:37]; // in scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18
    let mut _4: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1195:56: 1206:14

    bb0: {
        _4 = deref_copy (_1.0: &mut &mut node_manager::NodesManager); // scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18
        _3 = [closure@cita-network/src/node_manager.rs:1196:31: 1196:37] { service: _4 }; // scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18
                                         // closure
                                         // + def_id: DefId(0:444 ~ cita_network[da60]::node_manager::{impl#24}::handle::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::net::SocketAddr,)) -> std::option::Option<()>,
                                         //     (&mut &mut node_manager::NodesManager,),
                                         // ]
        _0 = std::option::Option::<std::net::SocketAddr>::and_then::<(), [closure@cita-network/src/node_manager.rs:1196:31: 1196:37]>(_2, move _3) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1196:17: 1205:19
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1196:22: 1196:30
                                         // + literal: Const { ty: fn(std::option::Option<std::net::SocketAddr>, [closure@cita-network/src/node_manager.rs:1196:31: 1196:37]) -> std::option::Option<()> {std::option::Option::<std::net::SocketAddr>::and_then::<(), [closure@cita-network/src/node_manager.rs:1196:31: 1196:37]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1206:14: 1206:14
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle::{closure#0}::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:1196:31: 1196:37], _2: std::net::SocketAddr) -> std::option::Option<()> {
    debug addr => _2;                    // in scope 0 at cita-network/src/node_manager.rs:1196:32: 1196:36
    debug service => (*(_1.0: &mut &mut node_manager::NodesManager)); // in scope 0 at cita-network/src/node_manager.rs:1184:25: 1184:32
    let mut _0: std::option::Option<()>; // return place in scope 0 at cita-network/src/node_manager.rs:1196:38: 1196:38
    let mut _3: std::option::Option<node_manager::NodeStatus>; // in scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
    let mut _4: &mut std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>; // in scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
    let _5: &std::net::SocketAddr;       // in scope 0 at cita-network/src/node_manager.rs:1197:48: 1197:53
    let mut _6: [closure@cita-network/src/node_manager.rs:1197:64: 1197:77]; // in scope 0 at cita-network/src/node_manager.rs:1197:64: 1204:22
    let mut _7: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18
    let mut _8: &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18
    let mut _9: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1196:31: 1205:18

    bb0: {
        _7 = deref_copy (_1.0: &mut &mut node_manager::NodesManager); // scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
        _8 = deref_copy (*_7);           // scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
        _4 = &mut ((*_8).0: std::collections::HashMap<std::net::SocketAddr, node_manager::NodeStatus, std::hash::BuildHasherDefault<fnv::FnvHasher>>); // scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
        _5 = &_2;                        // scope 0 at cita-network/src/node_manager.rs:1197:48: 1197:53
        _3 = HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::remove::<std::net::SocketAddr>(move _4, _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1197:21: 1197:54
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1197:41: 1197:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>, &'b std::net::SocketAddr) -> std::option::Option<NodeStatus> {HashMap::<std::net::SocketAddr, NodeStatus, BuildHasherDefault<FnvHasher>>::remove::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = deref_copy (_1.0: &mut &mut node_manager::NodesManager); // scope 0 at cita-network/src/node_manager.rs:1197:64: 1204:22
        _6 = [closure@cita-network/src/node_manager.rs:1197:64: 1197:77] { service: _9 }; // scope 0 at cita-network/src/node_manager.rs:1197:64: 1204:22
                                         // closure
                                         // + def_id: DefId(0:445 ~ cita_network[da60]::node_manager::{impl#24}::handle::{closure#0}::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((node_manager::NodeStatus,)) -> std::option::Option<()>,
                                         //     (&mut &mut node_manager::NodesManager,),
                                         // ]
        _0 = std::option::Option::<NodeStatus>::and_then::<(), [closure@cita-network/src/node_manager.rs:1197:64: 1197:77]>(move _3, move _6) -> bb2; // scope 0 at cita-network/src/node_manager.rs:1197:21: 1204:23
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1197:55: 1197:63
                                         // + literal: Const { ty: fn(std::option::Option<NodeStatus>, [closure@cita-network/src/node_manager.rs:1197:64: 1197:77]) -> std::option::Option<()> {std::option::Option::<NodeStatus>::and_then::<(), [closure@cita-network/src/node_manager.rs:1197:64: 1197:77]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1205:18: 1205:18
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle::{closure#0}::{closure#0}::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:1197:64: 1197:77], _2: NodeStatus) -> std::option::Option<()> {
    debug node_status => _2;             // in scope 0 at cita-network/src/node_manager.rs:1197:65: 1197:76
    debug service => (*(_1.0: &mut &mut node_manager::NodesManager)); // in scope 0 at cita-network/src/node_manager.rs:1184:25: 1184:32
    let mut _0: std::option::Option<()>; // return place in scope 0 at cita-network/src/node_manager.rs:1197:78: 1197:78
    let mut _3: std::option::Option<tentacle::SessionId>; // in scope 0 at cita-network/src/node_manager.rs:1198:25: 1198:47
    let mut _4: [closure@cita-network/src/node_manager.rs:1198:57: 1198:62]; // in scope 0 at cita-network/src/node_manager.rs:1198:57: 1203:26
    let mut _5: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1197:64: 1204:22

    bb0: {
        _3 = (_2.1: std::option::Option<tentacle::SessionId>); // scope 0 at cita-network/src/node_manager.rs:1198:25: 1198:47
        _5 = deref_copy (_1.0: &mut &mut node_manager::NodesManager); // scope 0 at cita-network/src/node_manager.rs:1198:57: 1203:26
        _4 = [closure@cita-network/src/node_manager.rs:1198:57: 1198:62] { service: _5 }; // scope 0 at cita-network/src/node_manager.rs:1198:57: 1203:26
                                         // closure
                                         // + def_id: DefId(0:446 ~ cita_network[da60]::node_manager::{impl#24}::handle::{closure#0}::{closure#0}::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((tentacle::SessionId,)) -> std::option::Option<()>,
                                         //     (&mut &mut node_manager::NodesManager,),
                                         // ]
        _0 = std::option::Option::<SessionId>::and_then::<(), [closure@cita-network/src/node_manager.rs:1198:57: 1198:62]>(move _3, move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1198:25: 1203:27
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1198:48: 1198:56
                                         // + literal: Const { ty: fn(std::option::Option<SessionId>, [closure@cita-network/src/node_manager.rs:1198:57: 1198:62]) -> std::option::Option<()> {std::option::Option::<SessionId>::and_then::<(), [closure@cita-network/src/node_manager.rs:1198:57: 1198:62]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1204:22: 1204:22
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle::{closure#0}::{closure#0}::{closure#0}::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:1198:57: 1198:62], _2: SessionId) -> std::option::Option<()> {
    debug sid => _2;                     // in scope 0 at cita-network/src/node_manager.rs:1198:58: 1198:61
    debug service => (*(_1.0: &mut &mut node_manager::NodesManager)); // in scope 0 at cita-network/src/node_manager.rs:1184:25: 1184:32
    let mut _0: std::option::Option<()>; // return place in scope 0 at cita-network/src/node_manager.rs:1198:63: 1198:63
    let mut _3: std::option::Option<&mut tentacle::service::ServiceControl>; // in scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
    let mut _4: &mut std::option::Option<tentacle::service::ServiceControl>; // in scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
    let mut _5: [closure@cita-network/src/node_manager.rs:1202:43: 1202:49]; // in scope 0 at cita-network/src/node_manager.rs:1202:43: 1202:75
    let mut _6: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:1202:43: 1202:75
    let mut _7: &mut &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1198:57: 1203:26
    let mut _8: &mut node_manager::NodesManager; // in scope 0 at cita-network/src/node_manager.rs:1198:57: 1203:26

    bb0: {
        _7 = deref_copy (_1.0: &mut &mut node_manager::NodesManager); // scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
        _8 = deref_copy (*_7);           // scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
        _4 = &mut ((*_8).9: std::option::Option<tentacle::service::ServiceControl>); // scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
        _3 = std::option::Option::<ServiceControl>::as_mut(move _4) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1199:29: 1201:42
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1201:34: 1201:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::option::Option<ServiceControl>) -> std::option::Option<&'a mut ServiceControl> {std::option::Option::<ServiceControl>::as_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_2;                        // scope 0 at cita-network/src/node_manager.rs:1202:43: 1202:75
        _5 = [closure@cita-network/src/node_manager.rs:1202:43: 1202:49] { sid: move _6 }; // scope 0 at cita-network/src/node_manager.rs:1202:43: 1202:75
                                         // closure
                                         // + def_id: DefId(0:447 ~ cita_network[da60]::node_manager::{impl#24}::handle::{closure#0}::{closure#0}::{closure#0}::{closure#0}::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((&mut tentacle::service::ServiceControl,)) -> std::option::Option<()>,
                                         //     (&tentacle::SessionId,),
                                         // ]
        _0 = std::option::Option::<&mut ServiceControl>::and_then::<(), [closure@cita-network/src/node_manager.rs:1202:43: 1202:49]>(move _3, move _5) -> bb2; // scope 0 at cita-network/src/node_manager.rs:1199:29: 1202:76
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1202:34: 1202:42
                                         // + literal: Const { ty: fn(std::option::Option<&mut ServiceControl>, [closure@cita-network/src/node_manager.rs:1202:43: 1202:49]) -> std::option::Option<()> {std::option::Option::<&mut ServiceControl>::and_then::<(), [closure@cita-network/src/node_manager.rs:1202:43: 1202:49]>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1203:26: 1203:26
    }
}

fn node_manager::<impl at cita-network/src/node_manager.rs:1179:1: 1179:28>::handle::{closure#0}::{closure#0}::{closure#0}::{closure#0}::{closure#0}(_1: [closure@cita-network/src/node_manager.rs:1202:43: 1202:49], _2: &mut ServiceControl) -> std::option::Option<()> {
    debug ctrl => _2;                    // in scope 0 at cita-network/src/node_manager.rs:1202:44: 1202:48
    debug sid => (*(_1.0: &tentacle::SessionId)); // in scope 0 at cita-network/src/node_manager.rs:1198:58: 1198:61
    let mut _0: std::option::Option<()>; // return place in scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:50
    let mut _3: std::result::Result<(), tentacle::error::Error>; // in scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:70
    let mut _4: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:70
    let mut _5: tentacle::SessionId;     // in scope 0 at cita-network/src/node_manager.rs:1202:66: 1202:69
    let mut _6: &tentacle::SessionId;    // in scope 0 at cita-network/src/node_manager.rs:1202:43: 1202:75

    bb0: {
        _4 = &(*_2);                     // scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:70
        _6 = deref_copy (_1.0: &tentacle::SessionId); // scope 0 at cita-network/src/node_manager.rs:1202:66: 1202:69
        _5 = (*_6);                      // scope 0 at cita-network/src/node_manager.rs:1202:66: 1202:69
        _3 = ServiceControl::disconnect(move _4, move _5) -> bb1; // scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:70
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1202:55: 1202:65
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl, SessionId) -> Result<(), tentacle::error::Error> {ServiceControl::disconnect}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Result::<(), tentacle::error::Error>::ok(move _3) -> bb2; // scope 0 at cita-network/src/node_manager.rs:1202:50: 1202:75
                                         // mir::Constant
                                         // + span: cita-network/src/node_manager.rs:1202:71: 1202:73
                                         // + literal: Const { ty: fn(Result<(), tentacle::error::Error>) -> std::option::Option<()> {Result::<(), tentacle::error::Error>::ok}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/node_manager.rs:1202:75: 1202:75
    }
}

const DISCOVERY_PROTOCOL_ID: ProtocolId = {
    let mut _0: tentacle::ProtocolId;    // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:28:34: 28:44

    bb0: {
        ConstEvalCounter;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:28:47: 28:65
        _0 = ProtocolId::new(const 0_usize) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:28:47: 28:65
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:28:47: 28:62
                                         // + literal: Const { ty: fn(usize) -> ProtocolId {ProtocolId::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:28:1: 28:66
    }
}

const DISCOVERY_TIMEOUT_SECS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:29:35: 29:38

    bb0: {
        _0 = const 150_u64;              // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:29:41: 29:44
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:29:1: 29:45
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:31:10: 31:15>::clone(_1: &NodesAddressManager) -> NodesAddressManager {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:10: 31:15
    let mut _0: p2p_protocol::node_discovery::NodesAddressManager; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:10: 31:15
    let mut _2: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
    let _3: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45

    bb0: {
        _3 = &((*_1).0: node_manager::NodesManagerClient); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
        _2 = <NodesManagerClient as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient) -> NodesManagerClient {<NodesManagerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = NodesAddressManager { nodes_mgr_client: move _2 }; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:10: 31:15
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:15: 31:15
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22>::fmt(_1: &NodesAddressManager, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
    debug f => _2;                       // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
    let _3: &str;                        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
    let _4: &str;                        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
    let _6: &&node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
    let _7: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45

    bb0: {
        _3 = const "NodesAddressManager"; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "nodes_mgr_client";   // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &((*_1).0: node_manager::NodesManagerClient); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
        _6 = &_7;                        // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:33:5: 33:45
        _0 = std::fmt::Formatter::<'_>::debug_struct_field1_finish(_2, _3, _4, move _5) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:31:17: 31:22
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field1_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:31:22: 31:22
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:36:1: 36:25>::new(_1: NodesManagerClient) -> NodesAddressManager {
    debug nodes_mgr_client => _1;        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:37:16: 37:32
    let mut _0: p2p_protocol::node_discovery::NodesAddressManager; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:37:57: 37:61

    bb0: {
        _0 = NodesAddressManager { nodes_mgr_client: move _1 }; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:38:9: 38:49
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:39:6: 39:6
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::add_new_addr(_1: &mut NodesAddressManager, _2: SessionId, _3: Multiaddr) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:43:21: 43:30
    debug _session_id => _2;             // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:43:32: 43:43
    debug addr => _3;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:43:56: 43:60
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:43:73: 43:73
    let _4: std::net::SocketAddr;        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:13: 44:20
    let mut _5: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:23: 44:53
    let _6: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:47: 44:52
    let mut _8: std::net::SocketAddr;    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:45:35: 45:42
    let mut _9: node_manager::NodeSource; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:45:44: 45:69
    let _10: ();                         // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:46:9: 46:44
    let mut _11: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:46:9: 46:44
    let mut _12: node_manager::AddNodeReq; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:46:40: 46:43
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _16: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _19: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _23: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:59: 48:66
    let _28: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:59: 48:66
    scope 1 {
        debug address => _4;             // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:44:13: 44:20
        let _7: node_manager::AddNodeReq; // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:45:13: 45:16
        scope 2 {
            debug req => _7;             // in scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:45:13: 45:16
            let _13: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _13;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _29: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _30: &[&str; 2]; // in scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                let mut _31: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _6 = &_3;                        // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:47: 44:52
        _5 = multiaddr_to_socketaddr(_6) -> [return: bb1, unwind: bb16]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:23: 44:53
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:44:23: 44:46
                                         // + literal: Const { ty: for<'a> fn(&'a Multiaddr) -> std::option::Option<std::net::SocketAddr> {multiaddr_to_socketaddr}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = std::option::Option::<std::net::SocketAddr>::unwrap(move _5) -> [return: bb2, unwind: bb16]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:44:23: 44:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:44:54: 44:60
                                         // + literal: Const { ty: fn(std::option::Option<std::net::SocketAddr>) -> std::net::SocketAddr {std::option::Option::<std::net::SocketAddr>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = _4;                         // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:45:35: 45:42
        _9 = const NodeSource::FromDiscovery; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:45:44: 45:69
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: NodeSource, val: Value(Scalar(0x01)) }
        _7 = AddNodeReq::new(move _8, move _9) -> [return: bb3, unwind: bb16]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:45:19: 45:70
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:45:19: 45:34
                                         // + literal: Const { ty: fn(std::net::SocketAddr, NodeSource) -> AddNodeReq {AddNodeReq::new}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = &((*_1).0: node_manager::NodesManagerClient); // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:46:9: 46:44
        _12 = move _7;                   // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:46:40: 46:43
        _10 = NodesManagerClient::add_node(move _11, move _12) -> [return: bb4, unwind: bb16]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:46:9: 46:44
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:46:31: 46:39
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, AddNodeReq) {NodesManagerClient::add_node}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _16 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _31 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<NodesAddressManager as AddressManager>::add_new_addr, [], Some(promoted[2])) }
        _15 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _16, _31) -> [return: bb8, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _18 = &_13;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _20 = log::max_level() -> [return: bb9, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _14) -> [0: bb14, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        switchInt(move _15) -> [0: bb5, otherwise: bb6]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _19 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, move _19) -> [return: bb10, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _14 = move _17;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _30 = const _;                   // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<NodesAddressManager as AddressManager>::add_new_addr, [], Some(promoted[1])) }
        _23 = _30 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
        _28 = &_4;                       // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:48:59: 48:66
        _27 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_28) -> [return: bb12, unwind: bb16]; // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:48:59: 48:66
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:48:59: 48:66
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = [move _27];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = &_26;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = Arguments::<'_>::new_v1(move _23, move _24) -> [return: bb13, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _29 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<NodesAddressManager as AddressManager>::add_new_addr, [], Some(promoted[0])) }
        _21 = log::__private_api_log(move _22, _13, _29) -> [return: bb18, unwind: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_3) -> bb15;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:49:5: 49:6
    }

    bb15: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:49:6: 49:6
    }

    bb16 (cleanup): {
        drop(_3) -> bb17;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:49:5: 49:6
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:43:5: 49:6
    }

    bb18: {
        goto -> bb14;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::add_new_addr: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:9: 48:67
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:9: 48:67

    bb0: {
        _3 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/node_discovery.rs"; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:9: 48:67
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:48:9: 48:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:9: 48:67
        _1 = (move _2, move _4, move _6, const 48_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::add_new_addr: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57

    bb0: {
        _1 = [const "[NodeDiscovery] Add node ", const " to manager"]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:48:15: 48:57
    }
}

promoted[2] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::add_new_addr: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::add_new_addrs(_1: &mut NodesAddressManager, _2: SessionId, _3: Vec<Multiaddr>) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:51:22: 51:31
    debug session_id => _2;              // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:51:33: 51:43
    debug addrs => _3;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:51:56: 51:61
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:51:79: 51:79
    let mut _4: std::vec::IntoIter<tentacle::parity_multiaddr::Multiaddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let mut _5: std::vec::IntoIter<tentacle::parity_multiaddr::Multiaddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let mut _6: std::vec::IntoIter<tentacle::parity_multiaddr::Multiaddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let _7: ();                          // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let mut _8: std::option::Option<tentacle::parity_multiaddr::Multiaddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let mut _9: &mut std::vec::IntoIter<tentacle::parity_multiaddr::Multiaddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    let mut _10: isize;                  // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:9: 54:10
    scope 1 {
        debug iter => _6;                // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
        let _11: tentacle::parity_multiaddr::Multiaddr; // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:13: 52:17
        scope 2 {
            debug addr => _11;           // in scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:52:13: 52:17
        }
    }

    bb0: {
        _5 = <Vec<Multiaddr> as IntoIterator>::into_iter(move _3) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:52:27: 52:36
                                         // + literal: Const { ty: fn(Vec<Multiaddr>) -> <Vec<Multiaddr> as IntoIterator>::IntoIter {<Vec<Multiaddr> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = <std::vec::IntoIter<Multiaddr> as IntoIterator>::into_iter(move _5) -> bb2; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
                                         // + literal: Const { ty: fn(std::vec::IntoIter<Multiaddr>) -> <std::vec::IntoIter<Multiaddr> as IntoIterator>::IntoIter {<std::vec::IntoIter<Multiaddr> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = move _4;                    // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
        goto -> bb3;                     // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:9: 54:10
    }

    bb3: {
        _9 = &mut _6;                    // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
        _8 = <std::vec::IntoIter<Multiaddr> as Iterator>::next(_9) -> [return: bb4, unwind: bb9]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<Multiaddr>) -> std::option::Option<<std::vec::IntoIter<Multiaddr> as Iterator>::Item> {<std::vec::IntoIter<Multiaddr> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = discriminant(_8);          // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
        switchInt(move _10) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    }

    bb5: {
        _11 = move ((_8 as Some).0: tentacle::parity_multiaddr::Multiaddr); // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:13: 52:17
        _7 = <NodesAddressManager as AddressManager>::add_new_addr(_1, _2, move _11) -> [return: bb11, unwind: bb9]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:53:13: 53:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:53:18: 53:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut NodesAddressManager, SessionId, Multiaddr) {<NodesAddressManager as AddressManager>::add_new_addr}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:52:21: 52:38
    }

    bb7: {
        drop(_6) -> bb8;                 // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:54:9: 54:10
    }

    bb8: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:55:6: 55:6
    }

    bb9 (cleanup): {
        drop(_6) -> bb10;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:54:9: 54:10
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:51:5: 55:6
    }

    bb11: {
        goto -> bb3;                     // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:53:13: 53:48
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::misbehave(_1: &mut NodesAddressManager, _2: SessionId, _3: Misbehavior) -> MisbehaveResult {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:57:18: 57:27
    debug _session_id => _2;             // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:57:29: 57:40
    debug _kind => _3;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:57:53: 57:58
    let mut _0: tentacle_discovery::MisbehaveResult; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:57:76: 57:91
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _15: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _16: &[&str; 1];         // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
        let mut _17: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _4 = log::Level::Warn;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _17 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<NodesAddressManager as AddressManager>::misbehave, [], Some(promoted[2])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _17) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _5) -> [0: bb9, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _6) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _16 = const _;                   // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<NodesAddressManager as AddressManager>::misbehave, [], Some(promoted[1])) }
        _14 = _16 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
        _13 = Arguments::<'_>::new_const(move _14) -> bb8; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb8: {
        _15 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<NodesAddressManager as AddressManager>::misbehave, [], Some(promoted[0])) }
        _12 = log::__private_api_log(move _13, _4, _15) -> bb9; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb9: {
        _0 = const Disconnect;           // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:59:9: 59:36
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MisbehaveResult, val: Value(Scalar(0x01)) }
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:60:6: 60:6
    }
}

promoted[0] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::misbehave: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:9: 58:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:9: 58:76

    bb0: {
        _3 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/node_discovery.rs"; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:9: 58:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:58:9: 58:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:9: 58:76
        _1 = (move _2, move _4, move _6, const 58_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::misbehave: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75

    bb0: {
        _1 = [const "[NodeDiscovery] Has not handled misbehave in this version!"]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:58:15: 58:75
    }
}

promoted[2] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::misbehave: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::get_random(_1: &mut NodesAddressManager, _2: usize) -> Vec<Multiaddr> {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:62:19: 62:28
    debug n => _2;                       // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:62:30: 62:31
    let mut _0: std::vec::Vec<tentacle::parity_multiaddr::Multiaddr>; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:62:43: 62:57
    let _3: pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:14: 63:16
    let _4: pubsub::crossbeam_channel::Receiver<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:18: 63:20
    let mut _5: (pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>, pubsub::crossbeam_channel::Receiver<std::vec::Vec<std::net::SocketAddr>>); // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:24: 63:35
    let mut _7: pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:65:45: 65:47
    let _8: ();                          // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:66:9: 66:52
    let mut _9: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:66:9: 66:52
    let mut _10: node_manager::GetRandomNodesReq; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:66:48: 66:51
    let mut _12: std::result::Result<std::vec::Vec<std::net::SocketAddr>, pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:68:19: 68:28
    let mut _13: &pubsub::crossbeam_channel::Receiver<std::vec::Vec<std::net::SocketAddr>>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:68:19: 68:28
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _18: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _19: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _20: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _22: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _23: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
    let mut _25: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _27: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:72:13: 72:16
    let _29: &std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:72:13: 72:16
    let mut _30: std::iter::Map<std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> tentacle::parity_multiaddr::Multiaddr {tentacle::utils::socketaddr_to_multiaddr}>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:53
    let mut _31: std::vec::IntoIter<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:24
    let mut _32: std::vec::Vec<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:12
    let mut _36: bool;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    let mut _37: bool;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    scope 1 {
        debug tx => _3;                  // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:63:14: 63:16
        debug rx => _4;                  // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:63:18: 63:20
        let _6: node_manager::GetRandomNodesReq; // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:65:13: 65:16
        scope 2 {
            debug req => _6;             // in scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:65:13: 65:16
            let _11: std::vec::Vec<std::net::SocketAddr>; // in scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:68:13: 68:16
            scope 3 {
                debug ret => _11;        // in scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:68:13: 68:16
                let _14: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 4 {
                    debug lvl => _14;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _33: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _34: &[&str; 2]; // in scope 4 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                    let mut _35: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _36 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:24: 63:35
        _37 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:24: 63:35
        _5 = pubsub::crossbeam_channel::unbounded::<Vec<std::net::SocketAddr>>() -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:24: 63:35
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:63:24: 63:33
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<Vec<std::net::SocketAddr>>, pubsub::crossbeam_channel::Receiver<Vec<std::net::SocketAddr>>) {pubsub::crossbeam_channel::unbounded::<Vec<std::net::SocketAddr>>}, val: Value(<ZST>) }
    }

    bb1: {
        _37 = const true;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:14: 63:16
        _3 = move (_5.0: pubsub::crossbeam_channel::Sender<std::vec::Vec<std::net::SocketAddr>>); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:14: 63:16
        _4 = move (_5.1: pubsub::crossbeam_channel::Receiver<std::vec::Vec<std::net::SocketAddr>>); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:63:18: 63:20
        _37 = const false;               // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:65:45: 65:47
        _7 = move _3;                    // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:65:45: 65:47
        _6 = GetRandomNodesReq::new(_2, move _7) -> [return: bb2, unwind: bb20]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:65:19: 65:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:65:19: 65:41
                                         // + literal: Const { ty: fn(usize, pubsub::crossbeam_channel::Sender<Vec<std::net::SocketAddr>>) -> GetRandomNodesReq {GetRandomNodesReq::new}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = &((*_1).0: node_manager::NodesManagerClient); // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:66:9: 66:52
        _10 = move _6;                   // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:66:48: 66:51
        _8 = NodesManagerClient::get_random_nodes(move _9, move _10) -> [return: bb3, unwind: bb20]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:66:9: 66:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:66:31: 66:47
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, GetRandomNodesReq) {NodesManagerClient::get_random_nodes}, val: Value(<ZST>) }
    }

    bb3: {
        _13 = &_4;                       // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:68:19: 68:28
        _12 = pubsub::crossbeam_channel::Receiver::<Vec<std::net::SocketAddr>>::recv(move _13) -> [return: bb4, unwind: bb20]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:68:19: 68:28
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:68:22: 68:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<Vec<std::net::SocketAddr>>) -> Result<Vec<std::net::SocketAddr>, pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<Vec<std::net::SocketAddr>>::recv}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = Result::<Vec<std::net::SocketAddr>, pubsub::crossbeam_channel::RecvError>::unwrap(move _12) -> [return: bb5, unwind: bb20]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:68:19: 68:37
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:68:29: 68:35
                                         // + literal: Const { ty: fn(Result<Vec<std::net::SocketAddr>, pubsub::crossbeam_channel::RecvError>) -> Vec<std::net::SocketAddr> {Result::<Vec<std::net::SocketAddr>, pubsub::crossbeam_channel::RecvError>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _36 = const true;                // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:68:36: 68:37
        _14 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _17 = &_14;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _35 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<NodesAddressManager as AddressManager>::get_random, [], Some(promoted[2])) }
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, _35) -> [return: bb9, unwind: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _19 = &_14;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _21 = log::max_level() -> [return: bb10, unwind: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _15) -> [0: bb15, otherwise: bb12]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _16) -> [0: bb6, otherwise: bb7]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _20 = &_21;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _18 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _19, move _20) -> [return: bb11, unwind: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _15 = move _18;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _34 = const _;                   // scope 4 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<NodesAddressManager as AddressManager>::get_random, [], Some(promoted[1])) }
        _24 = _34 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
        _29 = &_11;                      // scope 4 at cita-network/src/p2p_protocol/node_discovery.rs:72:13: 72:16
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<std::net::SocketAddr>>(_29) -> [return: bb13, unwind: bb23]; // scope 4 at cita-network/src/p2p_protocol/node_discovery.rs:72:13: 72:16
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:72:13: 72:16
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<std::net::SocketAddr>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<std::net::SocketAddr>>}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = [move _28];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _26 = &_27;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = _26 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = Arguments::<'_>::new_v1(move _24, move _25) -> [return: bb14, unwind: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _33 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<NodesAddressManager as AddressManager>::get_random, [], Some(promoted[0])) }
        _22 = log::__private_api_log(move _23, _14, _33) -> [return: bb26, unwind: bb23]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb15: {
        _36 = const false;               // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:12
        _32 = move _11;                  // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:12
        _31 = <Vec<std::net::SocketAddr> as IntoIterator>::into_iter(move _32) -> [return: bb16, unwind: bb23]; // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:24
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:75:13: 75:22
                                         // + literal: Const { ty: fn(Vec<std::net::SocketAddr>) -> <Vec<std::net::SocketAddr> as IntoIterator>::IntoIter {<Vec<std::net::SocketAddr> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = <std::vec::IntoIter<std::net::SocketAddr> as Iterator>::map::<Multiaddr, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}>(move _31, socketaddr_to_multiaddr) -> [return: bb17, unwind: bb23]; // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:53
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:75:25: 75:28
                                         // + literal: Const { ty: fn(std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}) -> std::iter::Map<std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}> {<std::vec::IntoIter<std::net::SocketAddr> as Iterator>::map::<Multiaddr, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:75:29: 75:52
                                         // + literal: Const { ty: fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}, val: Value(<ZST>) }
    }

    bb17: {
        _0 = <std::iter::Map<std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}> as Iterator>::collect::<Vec<Multiaddr>>(move _30) -> [return: bb18, unwind: bb23]; // scope 3 at cita-network/src/p2p_protocol/node_discovery.rs:75:9: 75:63
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:75:54: 75:61
                                         // + literal: Const { ty: fn(std::iter::Map<std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}>) -> Vec<Multiaddr> {<std::iter::Map<std::vec::IntoIter<std::net::SocketAddr>, fn(std::net::SocketAddr) -> Multiaddr {socketaddr_to_multiaddr}> as Iterator>::collect::<Vec<Multiaddr>>}, val: Value(<ZST>) }
    }

    bb18: {
        _36 = const false;               // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
        drop(_4) -> [return: bb19, unwind: bb25]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb19: {
        _37 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:6: 76:6
    }

    bb20 (cleanup): {
        drop(_4) -> bb25;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:62:5: 76:6
    }

    bb22 (cleanup): {
        drop(_11) -> bb20;               // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb23 (cleanup): {
        switchInt(_36) -> [0: bb20, otherwise: bb22]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb24 (cleanup): {
        drop(_3) -> bb21;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb25 (cleanup): {
        switchInt(_37) -> [0: bb21, otherwise: bb24]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:76:5: 76:6
    }

    bb26: {
        goto -> bb15;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::get_random: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:70:9: 73:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:70:9: 73:10

    bb0: {
        _3 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::node_discovery"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/node_discovery.rs"; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:70:9: 73:10
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:70:9: 73:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:70:9: 73:10
        _1 = (move _2, move _4, move _6, const 70_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::get_random: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76

    bb0: {
        _1 = [const "[NodeDiscovery] Get random address : ", const " from nodes manager."]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:71:13: 71:76
    }
}

promoted[2] in node_discovery::<impl at cita-network/src/p2p_protocol/node_discovery.rs:42:1: 42:44>::get_random: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn create_discovery_meta(_1: NodesManagerClient) -> ProtocolMeta {
    debug nodes_mgr_client => _1;        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:79:30: 79:46
    let mut _0: tentacle::service::ProtocolMeta; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:79:71: 79:83
    let _2: p2p_protocol::node_discovery::NodesAddressManager; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:9: 80:17
    let mut _4: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 89:52
    let mut _5: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 88:48
    let mut _6: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 87:11
    let mut _7: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 83:35
    let mut _8: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 82:27
    let mut _9: [closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32]; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:84:25: 87:10
    let mut _10: std::vec::Vec<std::string::String>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
    let mut _11: std::boxed::Box<[std::string::String]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _12: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _13: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _14: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _15: std::boxed::Box<[std::string::String; 1]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _16: std::string::String;    // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:89:32: 89:50
    let _17: &str;                       // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:89:32: 89:39
    let mut _18: bool;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:89:51: 89:52
    let mut _19: bool;                   // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:91:1: 91:2
    let mut _20: ();                     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
    let mut _21: *const [std::string::String; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    scope 1 {
        debug addr_mgr => _2;            // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:80:9: 80:17
        let _3: std::time::Duration;     // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:81:9: 81:16
        scope 2 {
            debug timeout => _3;         // in scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:81:9: 81:16
            scope 3 {
            }
        }
    }

    bb0: {
        _18 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:9: 80:17
        _19 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:9: 80:17
        _2 = NodesAddressManager::new(move _1) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:20: 80:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:80:20: 80:44
                                         // + literal: Const { ty: fn(NodesManagerClient) -> NodesAddressManager {NodesAddressManager::new}, val: Value(<ZST>) }
    }

    bb1: {
        _19 = const true;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:61: 80:62
        _3 = Duration::new(const _, const 0_u32) -> [return: bb2, unwind: bb17]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:81:19: 81:72
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:81:19: 81:45
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = <MetaBuilder as Default>::default() -> [return: bb3, unwind: bb17]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 82:27
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:82:5: 82:25
                                         // + literal: Const { ty: fn() -> MetaBuilder {<MetaBuilder as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = MetaBuilder::id(move _8, const _) -> [return: bb4, unwind: bb17]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 83:35
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:83:10: 83:12
                                         // + literal: Const { ty: fn(MetaBuilder, ProtocolId) -> MetaBuilder {MetaBuilder::id}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:83:13: 83:34
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(DISCOVERY_PROTOCOL_ID, [], None) }
    }

    bb4: {
        _19 = const false;               // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:84:25: 87:10
        _9 = [closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32] { addr_mgr: move _2, timeout: _3 }; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:84:25: 87:10
                                         // closure
                                         // + def_id: DefId(0:498 ~ cita_network[da60]::p2p_protocol::node_discovery::create_discovery_meta::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> tentacle::service::ProtocolHandle<std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>>,
                                         //     (p2p_protocol::node_discovery::NodesAddressManager, std::time::Duration),
                                         // ]
        _6 = MetaBuilder::service_handle::<[closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32]>(move _7, move _9) -> [return: bb5, unwind: bb17]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 87:11
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:84:10: 84:24
                                         // + literal: Const { ty: fn(MetaBuilder, [closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32]) -> MetaBuilder {MetaBuilder::service_handle::<[closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32]>}, val: Value(<ZST>) }
    }

    bb5: {
        _5 = MetaBuilder::name::<[closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18]>(move _6, const ZeroSized: [closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18]) -> [return: bb6, unwind: bb17]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 88:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:88:10: 88:14
                                         // + literal: Const { ty: fn(MetaBuilder, [closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18]) -> MetaBuilder {MetaBuilder::name::<[closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18], val: Value(<ZST>) }
    }

    bb6: {
        _18 = const true;                // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:88:47: 88:48
        _12 = const 24_usize;            // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _13 = const 8_usize;             // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _14 = alloc::alloc::exchange_malloc(move _12, move _13) -> [return: bb7, unwind: bb15]; // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = ShallowInitBox(move _14, [std::string::String; 1]); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _17 = const "0.0.2";             // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:89:32: 89:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:89:32: 89:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = <str as ToOwned>::to_owned(_17) -> [return: bb8, unwind: bb13]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:89:32: 89:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:89:40: 89:48
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> <str as ToOwned>::Owned {<str as ToOwned>::to_owned}, val: Value(<ZST>) }
    }

    bb8: {
        _21 = (((_15.0: std::ptr::Unique<[std::string::String; 1]>).0: std::ptr::NonNull<[std::string::String; 1]>).0: *const [std::string::String; 1]); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_21) = [move _16];             // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _11 = move _15 as std::boxed::Box<[std::string::String]> (Pointer(Unsize)); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _10 = slice::<impl [std::string::String]>::into_vec::<std::alloc::Global>(move _11) -> [return: bb9, unwind: bb15]; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[std::string::String]>) -> Vec<std::string::String> {slice::<impl [std::string::String]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = const false;               // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 89:52
        _4 = MetaBuilder::support_versions(move _5, move _10) -> [return: bb10, unwind: bb15]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 89:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:89:10: 89:26
                                         // + literal: Const { ty: fn(MetaBuilder, Vec<std::string::String>) -> MetaBuilder {MetaBuilder::support_versions}, val: Value(<ZST>) }
    }

    bb10: {
        _18 = const false;               // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:89:51: 89:52
        _0 = MetaBuilder::build(move _4) -> [return: bb11, unwind: bb17]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:82:5: 90:17
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:90:10: 90:15
                                         // + literal: Const { ty: fn(MetaBuilder) -> ProtocolMeta {MetaBuilder::build}, val: Value(<ZST>) }
    }

    bb11: {
        _19 = const false;               // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:91:1: 91:2
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:91:2: 91:2
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:79:1: 91:2
    }

    bb13 (cleanup): {
        _20 = alloc::alloc::box_free::<[std::string::String; 1], std::alloc::Global>(move (_15.0: std::ptr::Unique<[std::string::String; 1]>), const std::alloc::Global) -> bb15; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
                                         // + literal: Const { ty: unsafe fn(Unique<[std::string::String; 1]>, std::alloc::Global) {alloc::alloc::box_free::<[std::string::String; 1], std::alloc::Global>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::alloc::Global, val: Value(<ZST>) }
    }

    bb14 (cleanup): {
        drop(_5) -> bb17;                // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:89:51: 89:52
    }

    bb15 (cleanup): {
        switchInt(_18) -> [0: bb17, otherwise: bb14]; // scope 2 at cita-network/src/p2p_protocol/node_discovery.rs:89:51: 89:52
    }

    bb16 (cleanup): {
        drop(_2) -> bb12;                // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:91:1: 91:2
    }

    bb17 (cleanup): {
        switchInt(_19) -> [0: bb12, otherwise: bb16]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:91:1: 91:2
    }
}

fn create_discovery_meta::{closure#0}(_1: [closure@cita-network/src/p2p_protocol/node_discovery.rs:84:25: 84:32]) -> ProtocolHandle<Box<dyn ServiceProtocol + std::marker::Send>> {
    debug addr_mgr => (_1.0: p2p_protocol::node_discovery::NodesAddressManager); // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:80:9: 80:17
    debug timeout => (_1.1: std::time::Duration); // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:81:9: 81:16
    let mut _0: tentacle::service::ProtocolHandle<std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>>; // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:84:33: 84:33
    let _2: tentacle_discovery::Discovery<p2p_protocol::node_discovery::NodesAddressManager>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:17: 85:26
    let mut _3: p2p_protocol::node_discovery::NodesAddressManager; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:44: 85:60
    let mut _4: &p2p_protocol::node_discovery::NodesAddressManager; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:44: 85:60
    let mut _5: std::option::Option<std::time::Duration>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:62: 85:75
    let mut _6: std::time::Duration;     // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:67: 85:74
    let mut _7: std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:86:38: 86:81
    let mut _8: std::boxed::Box<tentacle_discovery::DiscoveryProtocol<p2p_protocol::node_discovery::NodesAddressManager>>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:86:38: 86:81
    let mut _9: tentacle_discovery::DiscoveryProtocol<p2p_protocol::node_discovery::NodesAddressManager>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:86:47: 86:80
    let mut _10: tentacle_discovery::Discovery<p2p_protocol::node_discovery::NodesAddressManager>; // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:86:70: 86:79
    scope 1 {
        debug discovery => _2;           // in scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:85:17: 85:26
    }

    bb0: {
        _4 = &(_1.0: p2p_protocol::node_discovery::NodesAddressManager); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:44: 85:60
        _3 = <NodesAddressManager as Clone>::clone(move _4) -> [return: bb1, unwind: bb6]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:44: 85:60
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:85:53: 85:58
                                         // + literal: Const { ty: for<'a> fn(&'a NodesAddressManager) -> NodesAddressManager {<NodesAddressManager as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = (_1.1: std::time::Duration); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:67: 85:74
        _5 = std::option::Option::<Duration>::Some(move _6); // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:62: 85:75
        _2 = Discovery::<NodesAddressManager>::new(move _3, move _5) -> [return: bb2, unwind: bb6]; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:85:29: 85:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:85:29: 85:43
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(NodesAddressManager, std::option::Option<Duration>) -> Discovery<NodesAddressManager> {Discovery::<NodesAddressManager>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = move _2;                   // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:86:70: 86:79
        _9 = DiscoveryProtocol::<NodesAddressManager>::new(move _10) -> [return: bb3, unwind: bb6]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:86:47: 86:80
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:86:47: 86:69
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(Discovery<NodesAddressManager>) -> DiscoveryProtocol<NodesAddressManager> {DiscoveryProtocol::<NodesAddressManager>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = Box::<DiscoveryProtocol<NodesAddressManager>>::new(move _9) -> [return: bb4, unwind: bb6]; // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:86:38: 86:81
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:86:38: 86:46
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(DiscoveryProtocol<NodesAddressManager>) -> Box<DiscoveryProtocol<NodesAddressManager>> {Box::<DiscoveryProtocol<NodesAddressManager>>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = move _8 as std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send> (Pointer(Unsize)); // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:86:38: 86:81
        _0 = ProtocolHandle::<Box<dyn ServiceProtocol + std::marker::Send>>::Callback(move _7); // scope 1 at cita-network/src/p2p_protocol/node_discovery.rs:86:13: 86:82
        drop(_1) -> bb5;                 // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:87:9: 87:10
    }

    bb5: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:87:10: 87:10
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:87:9: 87:10
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:84:25: 87:10
    }
}

fn create_discovery_meta::{closure#1}(_1: &[closure@cita-network/src/p2p_protocol/node_discovery.rs:88:15: 88:18], _2: ProtocolId) -> std::string::String {
    let mut _0: std::string::String;     // return place in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:88:19: 88:19
    let _3: &str;                        // in scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:88:19: 88:36

    bb0: {
        _3 = const "/cita/discovery";    // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:88:19: 88:36
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:88:19: 88:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = <str as ToOwned>::to_owned(_3) -> bb1; // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:88:19: 88:47
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/node_discovery.rs:88:37: 88:45
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> <str as ToOwned>::Owned {<str as ToOwned>::to_owned}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/node_discovery.rs:88:47: 88:47
    }
}

const MAX_FRAME_LENGTH: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:29: 35:34
    let mut _1: usize;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
    let mut _2: (usize, bool);           // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
    let mut _3: (usize, bool);           // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:54

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
        _2 = CheckedMul(const 512_usize, const 1024_usize); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
        assert(!move (_2.1: bool), "attempt to compute `{} * {}`, which would overflow", const 512_usize, const 1024_usize) -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
    }

    bb1: {
        _1 = move (_2.0: usize);         // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:47
        _3 = CheckedMul(_1, const 1204_usize); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:54
        assert(!move (_3.1: bool), "attempt to compute `{} * {}`, which would overflow", move _1, const 1204_usize) -> bb2; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:54
    }

    bb2: {
        _0 = move (_3.0: usize);         // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:37: 35:54
        StorageDead(_1);                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:53: 35:54
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:35:1: 35:55
    }
}

const TRANSFER_PROTOCOL_ID: ProtocolId = {
    let mut _0: tentacle::ProtocolId;    // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:36:33: 36:43

    bb0: {
        ConstEvalCounter;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:36:46: 36:64
        _0 = ProtocolId::new(const 1_usize) -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:36:46: 36:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:36:46: 36:61
                                         // + literal: Const { ty: fn(usize) -> ProtocolId {ProtocolId::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:36:1: 36:65
    }
}

fn transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::init(_1: &mut TransferProtocol, _2: &mut ProtocolContext) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:47:13: 47:22
    debug _control => _2;                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:47:24: 47:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:47:56: 47:56

    bb0: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:47:58: 47:58
    }
}

fn transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected(_1: &mut TransferProtocol, _2: ProtocolContextMutRef<'_>, _3: &str) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:18: 49:27
    debug control => _2;                 // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    debug version => _3;                 // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:61: 49:68
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:76: 49:76
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 5]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 5]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:13: 52:26
    let _19: &tentacle::ProtocolId;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:13: 52:26
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
    let _21: &tentacle::SessionId;       // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
    let _23: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
    let _25: &tentacle::service::SessionType; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:93: 52:100
    let _27: &&str;                      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:52:93: 52:100
    let _28: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:9: 54:60
    let mut _29: &mut std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:9: 54:60
    let mut _30: tentacle::SessionId;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:41: 54:59
    let _31: node_manager::NetworkInitReq; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:56:13: 56:16
    let mut _32: tentacle::SessionId;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:56:39: 56:57
    let _33: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:57:9: 57:48
    let mut _34: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:57:9: 57:48
    let mut _35: node_manager::NetworkInitReq; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:57:44: 57:47
    let mut _37: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _38: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _39: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _40: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _41: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _42: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _43: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _44: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _45: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
    let mut _47: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _48: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _49: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _50: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:61:13: 61:39
    let _51: &std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:61:13: 61:39
    let mut _58: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    let mut _59: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    let mut _60: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    let mut _61: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    let mut _62: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:49:29: 49:36
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _55: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _56: &[&str; 5];         // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
        let mut _57: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug req => _31;                // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:56:13: 56:16
        let _36: log::Level;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 3 {
            debug lvl => _36;            // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _52: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _53: &[&str; 1];     // in scope 3 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
            let mut _54: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _57 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[5])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _57) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _5) -> [0: bb14, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _6) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _56 = const _;                   // scope 1 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &[&str; 5], val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[4])) }
        _14 = _56 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
        _19 = &((*_1).0: tentacle::ProtocolId); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:13: 52:26
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<ProtocolId>(_19) -> bb8; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:13: 52:26
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:52:13: 52:26
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b ProtocolId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<ProtocolId>}, val: Value(<ZST>) }
    }

    bb8: {
        _58 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
        _21 = &((*_58).0: tentacle::SessionId); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<SessionId>(_21) -> bb9; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:52:28: 52:46
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<SessionId>}, val: Value(<ZST>) }
    }

    bb9: {
        _59 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
        _23 = &((*_59).1: tentacle::parity_multiaddr::Multiaddr); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<Multiaddr>(_23) -> bb10; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:52:48: 52:71
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b Multiaddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Multiaddr>}, val: Value(<ZST>) }
    }

    bb10: {
        _60 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
        _25 = &((*_60).2: tentacle::service::SessionType); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::service::SessionType>(_25) -> bb11; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:52:73: 52:91
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::service::SessionType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::service::SessionType>}, val: Value(<ZST>) }
    }

    bb11: {
        _27 = &_3;                       // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:93: 52:100
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_27) -> bb12; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:52:93: 52:100
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:52:93: 52:100
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb12: {
        _17 = [move _18, move _20, move _22, move _24, move _26]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _55 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[3])) }
        _12 = log::__private_api_log(move _13, _4, _55) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = &mut ((*_1).1: std::vec::Vec<tentacle::SessionId>); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:9: 54:60
        _61 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:41: 54:59
        _30 = ((*_61).0: tentacle::SessionId); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:41: 54:59
        _28 = Vec::<SessionId>::push(move _29, move _30) -> bb15; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:54:9: 54:60
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:54:36: 54:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<SessionId>, SessionId) {Vec::<SessionId>::push}, val: Value(<ZST>) }
    }

    bb15: {
        _62 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:56:39: 56:57
        _32 = ((*_62).0: tentacle::SessionId); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:56:39: 56:57
        _31 = NetworkInitReq::new(move _32) -> bb16; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:56:19: 56:58
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:56:19: 56:38
                                         // + literal: Const { ty: fn(SessionId) -> NetworkInitReq {NetworkInitReq::new}, val: Value(<ZST>) }
    }

    bb16: {
        _34 = &((*_1).3: node_manager::NodesManagerClient); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:57:9: 57:48
        _35 = move _31;                  // scope 2 at cita-network/src/p2p_protocol/transfer.rs:57:44: 57:47
        _33 = NodesManagerClient::network_init(move _34, move _35) -> bb17; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:57:9: 57:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:57:31: 57:43
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, NetworkInitReq) {NodesManagerClient::network_init}, val: Value(<ZST>) }
    }

    bb17: {
        _36 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _39 = &_36;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _54 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[2])) }
        _38 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _39, _54) -> bb21; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _37 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _41 = &_36;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _43 = log::max_level() -> bb22;  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _37) -> [0: bb27, otherwise: bb24]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        switchInt(move _38) -> [0: bb18, otherwise: bb19]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _42 = &_43;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _40 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _41, move _42) -> bb23; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _37 = move _40;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _53 = const _;                   // scope 3 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[1])) }
        _46 = _53 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
        _51 = &((*_1).1: std::vec::Vec<tentacle::SessionId>); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:61:13: 61:39
        _50 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<SessionId>>(_51) -> bb25; // scope 3 at cita-network/src/p2p_protocol/transfer.rs:61:13: 61:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:61:13: 61:39
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<SessionId>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<SessionId>>}, val: Value(<ZST>) }
    }

    bb25: {
        _49 = [move _50];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _48 = &_49;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _47 = _48 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _45 = Arguments::<'_>::new_v1(move _46, move _47) -> bb26; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb26: {
        _52 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<TransferProtocol as ServiceProtocol>::connected, [], Some(promoted[0])) }
        _44 = log::__private_api_log(move _45, _36, _52) -> bb27; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:63:6: 63:6
    }
}

promoted[0] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:59:9: 62:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:59:9: 62:10

    bb0: {
        _3 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/transfer.rs"; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:59:9: 62:10
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:59:9: 62:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:59:9: 62:10
        _1 = (move _2, move _4, move _6, const 59_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50

    bb0: {
        _1 = [const "[Transfer] Connected sessions: "]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:60:13: 60:50
    }
}

promoted[2] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:50:9: 53:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:50:9: 53:10

    bb0: {
        _3 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/transfer.rs"; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:50:9: 53:10
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:50:9: 53:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:50:9: 53:10
        _1 = (move _2, move _4, move _6, const 50_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &[&str; 5] = {
    let mut _0: &[&str; 5];              // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
    let mut _1: [&str; 5];               // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112

    bb0: {
        _1 = [const "[Transfer] Connected proto id [", const "] open on session [", const "], address: [", const "], type: [", const "], version: "]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:51:13: 51:112
    }
}

promoted[5] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::connected: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::disconnected(_1: &mut TransferProtocol, _2: ProtocolContextMutRef<'_>) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:21: 65:30
    debug control => _2;                 // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:32: 65:39
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:64: 65:64
    let _3: std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:13: 66:21
    let mut _4: std::iter::Cloned<std::iter::Filter<std::slice::Iter<'_, tentacle::SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 70:22
    let mut _5: std::iter::Filter<std::slice::Iter<'_, tentacle::SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 69:53
    let mut _6: std::slice::Iter<'_, tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
    let mut _7: &[tentacle::SessionId];  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
    let _8: &[tentacle::SessionId];      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
    let mut _9: &std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
    let mut _10: [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
    let mut _11: &tentacle::context::ProtocolContextMutRef<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
    let mut _12: std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:72:38: 72:46
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _15: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _16: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _19: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _21: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _23: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _26: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:76:13: 76:26
    let _28: &tentacle::ProtocolId;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:76:13: 76:26
    let mut _29: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
    let _30: &tentacle::SessionId;       // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
    let mut _34: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:32: 65:39
    scope 1 {
        debug new_list => _3;            // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:66:13: 66:21
        let _13: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _13;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _31: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _32: &[&str; 3];     // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
            let mut _33: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _9 = &((*_1).1: std::vec::Vec<tentacle::SessionId>); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
        _8 = <Vec<SessionId> as Deref>::deref(move _9) -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SessionId>) -> &'a <Vec<SessionId> as Deref>::Target {<Vec<SessionId> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = _8;                         // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
        _6 = core::slice::<impl [SessionId]>::iter(move _7) -> bb2; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 68:20
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:68:14: 68:18
                                         // + literal: Const { ty: for<'a> fn(&'a [SessionId]) -> std::slice::Iter<'a, SessionId> {core::slice::<impl [SessionId]>::iter}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = &_2;                       // scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
        _10 = [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26] { control: move _11 }; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
                                         // closure
                                         // + def_id: DefId(0:541 ~ cita_network[da60]::p2p_protocol::transfer::{impl#0}::disconnected::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a &tentacle::SessionId,)) -> bool,
                                         //     (&tentacle::context::ProtocolContextMutRef<'_>,),
                                         // ]
        _5 = <std::slice::Iter<'_, SessionId> as Iterator>::filter::<[closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>(move _6, move _10) -> bb3; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 69:53
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:69:14: 69:20
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]) -> std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]> {<std::slice::Iter<'_, SessionId> as Iterator>::filter::<[closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = <std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]> as Iterator>::cloned::<'_, SessionId>(move _5) -> bb4; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 70:22
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:70:14: 70:20
                                         // + literal: Const { ty: fn(std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>) -> Cloned<std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>> {<std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]> as Iterator>::cloned::<'_, SessionId>}, val: Value(<ZST>) }
    }

    bb4: {
        _3 = <Cloned<std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>> as Iterator>::collect::<Vec<SessionId>>(move _4) -> bb5; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:66:24: 71:23
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:71:14: 71:21
                                         // + literal: Const { ty: fn(Cloned<std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>>) -> Vec<SessionId> {<Cloned<std::iter::Filter<std::slice::Iter<'_, SessionId>, [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26]>> as Iterator>::collect::<Vec<SessionId>>}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = move _3;                   // scope 1 at cita-network/src/p2p_protocol/transfer.rs:72:38: 72:46
        drop(((*_1).1: std::vec::Vec<tentacle::SessionId>)) -> [return: bb6, unwind: bb7]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:72:9: 72:35
    }

    bb6: {
        ((*_1).1: std::vec::Vec<tentacle::SessionId>) = move _12; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:72:9: 72:35
        _13 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _16 = &_13;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _33 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<TransferProtocol as ServiceProtocol>::disconnected, [], Some(promoted[2])) }
        _15 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _16, _33) -> bb11; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7 (cleanup): {
        ((*_1).1: std::vec::Vec<tentacle::SessionId>) = move _12; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:72:9: 72:35
        resume;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:5: 78:6
    }

    bb8: {
        _14 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _18 = &_13;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _20 = log::max_level() -> bb12;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _14) -> [0: bb18, otherwise: bb14]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        switchInt(move _15) -> [0: bb8, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _19 = &_20;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, move _19) -> bb13; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _14 = move _17;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _32 = const _;                   // scope 2 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(<TransferProtocol as ServiceProtocol>::disconnected, [], Some(promoted[1])) }
        _23 = _32 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
        _28 = &((*_1).0: tentacle::ProtocolId); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:76:13: 76:26
        _27 = core::fmt::ArgumentV1::<'_>::new_display::<ProtocolId>(_28) -> bb15; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:76:13: 76:26
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:76:13: 76:26
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b ProtocolId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<ProtocolId>}, val: Value(<ZST>) }
    }

    bb15: {
        _34 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
        _30 = &((*_34).0: tentacle::SessionId); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
        _29 = core::fmt::ArgumentV1::<'_>::new_display::<SessionId>(_30) -> bb16; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:76:28: 76:46
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<SessionId>}, val: Value(<ZST>) }
    }

    bb16: {
        _26 = [move _27, move _29];      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _25 = &_26;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = Arguments::<'_>::new_v1(move _23, move _24) -> bb17; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _31 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<TransferProtocol as ServiceProtocol>::disconnected, [], Some(promoted[0])) }
        _21 = log::__private_api_log(move _22, _13, _31) -> bb18; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:78:6: 78:6
    }
}

promoted[0] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::disconnected: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:74:9: 77:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:74:9: 77:10

    bb0: {
        _3 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/transfer.rs"; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:74:9: 77:10
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:74:9: 77:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:74:9: 77:10
        _1 = (move _2, move _4, move _6, const 74_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::disconnected: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74

    bb0: {
        _1 = [const "[Transfer] Disconnected proto id [", const "] close on session [", const "]"]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:75:13: 75:74
    }
}

promoted[2] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::disconnected: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::disconnected::{closure#0}(_1: &mut [closure@cita-network/src/p2p_protocol/transfer.rs:69:21: 69:26], _2: &&SessionId) -> bool {
    debug control => (*((*_1).0: &tentacle::context::ProtocolContextMutRef<'_>)); // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:65:32: 65:39
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:27: 69:27
    let _3: &tentacle::SessionId;        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:23: 69:25
    let mut _4: &&tentacle::SessionId;   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:27: 69:29
    let mut _5: &&tentacle::SessionId;   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
    let _6: &tentacle::SessionId;        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
    let mut _7: &tentacle::context::ProtocolContextMutRef<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
    let mut _8: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:21: 69:52
    scope 1 {
        debug id => _3;                  // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:23: 69:25
    }

    bb0: {
        _3 = (*_2);                      // scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:23: 69:25
        _4 = &_3;                        // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:27: 69:29
        _7 = deref_copy ((*_1).0: &tentacle::context::ProtocolContextMutRef<'_>); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
        _8 = deref_copy ((*_7).1: &tentacle::context::SessionContext); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
        _6 = &((*_8).0: tentacle::SessionId); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
        _5 = &_6;                        // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:33: 69:52
        _0 = <&SessionId as PartialEq>::ne(move _4, move _5) -> bb1; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:69:27: 69:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:69:27: 69:52
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &SessionId, &'b &SessionId) -> bool {<&SessionId as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:69:52: 69:52
    }
}

fn transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received(_1: &mut TransferProtocol, _2: ProtocolContextMutRef<'_>, _3: bytes::Bytes) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:17: 80:26
    debug env => _2;                     // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:28: 80:31
    debug data => _3;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:56: 80:60
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:76: 80:76
    let mut _4: bytes::BytesMut;         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
    let mut _5: std::option::Option<cita_protocol::NetMessageUnit>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:83:33: 83:77
    let mut _6: &mut bytes::BytesMut;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:83:67: 83:76
    let mut _7: isize;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:83:16: 83:30
    let mut _9: bool;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:84:16: 84:56
    let mut _10: &std::string::String;   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:84:16: 84:56
    let _11: &std::string::String;       // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:84:28: 84:55
    let _12: std::string::String;        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:84:29: 84:55
    let _13: &str;                       // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:84:29: 84:43
    let mut _15: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:85:41: 85:50
    let mut _17: tentacle::SessionId;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:86:52: 86:66
    let mut _18: tentacle::service::SessionType; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:86:68: 86:82
    let mut _19: node_manager::InitMsg;  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:86:84: 86:87
    let _20: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:87:17: 87:62
    let mut _21: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:87:17: 87:62
    let mut _22: node_manager::AddConnectedNodeReq; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:87:58: 87:61
    let mut _23: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:91:16: 91:46
    let mut _24: &cita_types::H160;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:91:16: 91:25
    let mut _25: &cita_types::H160;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:91:29: 91:46
    let mut _27: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _28: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _29: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _30: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _31: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _32: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _33: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _34: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _35: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _36: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
    let mut _37: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _38: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _39: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _40: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:66: 92:75
    let _41: &cita_types::H160;          // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:66: 92:75
    let mut _44: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:97:27: 97:61
    let mut _45: &std::vec::Vec<u8>;     // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:97:50: 97:60
    let _46: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:98:13: 98:47
    let mut _47: &mut libproto::Message; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:98:13: 98:47
    let mut _48: u32;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:98:28: 98:46
    let mut _49: usize;                  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:98:28: 98:39
    let _50: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:99:13: 103:19
    let mut _51: &network::NetworkClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:99:13: 103:19
    let mut _52: network::RemoteMessage; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:100:40: 103:18
    let mut _53: std::string::String;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:101:21: 101:37
    let mut _54: &std::string::String;   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:101:21: 101:37
    let mut _55: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:44
    let mut _56: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:35
    let mut _57: libproto::Message;      // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:24
    let mut _58: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:106:16: 106:28
    let mut _59: u8;                     // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:106:16: 106:24
    let mut _60: (u8, bool);             // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:107:17: 107:30
    let mut _62: cita_protocol::NetMessageUnit; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:108:49: 108:53
    let _63: ();                         // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:109:17: 109:59
    let mut _64: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:109:17: 109:59
    let mut _65: node_manager::RetransNetMsgReq; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:109:55: 109:58
    let mut _67: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _68: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _69: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _70: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _71: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _72: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _73: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _74: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _75: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
    let mut _83: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:28: 80:31
    let mut _84: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:28: 80:31
    let mut _85: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:28: 80:31
    let mut _86: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    let mut _87: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    let mut _88: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    let mut _89: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:103:17: 103:18
    let mut _90: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    let mut _91: isize;                  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    let mut _92: isize;                  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    scope 1 {
        debug data => _4;                // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        let _66: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug info => _8;            // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
            let mut _8: cita_protocol::NetMessageUnit; // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
            let _14: node_manager::InitMsg; // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:85:21: 85:24
            let _26: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _42: tentacle::SessionId; // in scope 2 at cita-network/src/p2p_protocol/transfer.rs:96:17: 96:20
            scope 3 {
                debug msg => _14;        // in scope 3 at cita-network/src/p2p_protocol/transfer.rs:85:21: 85:24
                let _16: node_manager::AddConnectedNodeReq; // in scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:21: 86:24
                scope 4 {
                    debug req => _16;    // in scope 4 at cita-network/src/p2p_protocol/transfer.rs:86:21: 86:24
                }
            }
            scope 5 {
                debug lvl => _26;        // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _77: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _78: &[&str; 2]; // in scope 5 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                let mut _79: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 6 {
                debug sid => _42;        // in scope 6 at cita-network/src/p2p_protocol/transfer.rs:96:17: 96:20
                let mut _43: libproto::Message; // in scope 6 at cita-network/src/p2p_protocol/transfer.rs:97:17: 97:24
                scope 7 {
                    debug msg => _43;    // in scope 7 at cita-network/src/p2p_protocol/transfer.rs:97:17: 97:24
                    let _61: node_manager::RetransNetMsgReq; // in scope 7 at cita-network/src/p2p_protocol/transfer.rs:108:21: 108:24
                    scope 8 {
                        debug req => _61; // in scope 8 at cita-network/src/p2p_protocol/transfer.rs:108:21: 108:24
                    }
                }
            }
        }
        scope 9 {
            debug lvl => _66;            // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _80: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _81: &[&str; 1];     // in scope 9 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
            let mut _82: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _89 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        _90 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        _86 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        _87 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        _88 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:13: 81:21
        _4 = <BytesMut as From<bytes::Bytes>>::from(move _3) -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:81:24: 81:44
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:81:24: 81:38
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(bytes::Bytes) -> BytesMut {<BytesMut as From<bytes::Bytes>>::from}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &mut _4;                    // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:67: 83:76
        _5 = network_message_to_pubsub_message(_6) -> [return: bb2, unwind: bb51]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:33: 83:77
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:83:33: 83:66
                                         // + literal: Const { ty: for<'a> fn(&'a mut BytesMut) -> std::option::Option<NetMessageUnit> {network_message_to_pubsub_message}, val: Value(<ZST>) }
    }

    bb2: {
        _88 = const true;                // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:76: 83:77
        _7 = discriminant(_5);           // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:16: 83:30
        switchInt(move _7) -> [1: bb3, otherwise: bb36]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:16: 83:30
    }

    bb3: {
        _88 = const false;               // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
        _86 = const true;                // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
        _87 = const true;                // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
        _8 = move ((_5 as Some).0: cita_protocol::NetMessageUnit); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:83:21: 83:29
        _10 = &(_8.0: std::string::String); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:16: 84:56
        _13 = const "network.init";      // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:29: 84:43
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:84:29: 84:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = <str as ToString>::to_string(_13) -> [return: bb4, unwind: bb75]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:29: 84:55
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:84:44: 84:53
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::string::String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = &_12;                      // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:28: 84:55
        _9 = <std::string::String as PartialEq>::eq(move _10, _11) -> [return: bb5, unwind: bb49]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:16: 84:56
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:84:25: 84:27
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::string::String, &'b std::string::String) -> bool {<std::string::String as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_12) -> [return: bb6, unwind: bb75]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:55: 84:56
    }

    bb6: {
        switchInt(move _9) -> [0: bb10, otherwise: bb7]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:16: 84:56
    }

    bb7: {
        _87 = const false;               // scope 2 at cita-network/src/p2p_protocol/transfer.rs:85:41: 85:50
        _15 = move (_8.1: std::vec::Vec<u8>); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:85:41: 85:50
        _14 = <InitMsg as From<Vec<u8>>>::from(move _15) -> [return: bb8, unwind: bb75]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:85:27: 85:51
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:85:27: 85:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(Vec<u8>) -> InitMsg {<InitMsg as From<Vec<u8>>>::from}, val: Value(<ZST>) }
    }

    bb8: {
        _83 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:52: 86:66
        _17 = ((*_83).0: tentacle::SessionId); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:52: 86:66
        _84 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:68: 86:82
        _18 = ((*_84).2: tentacle::service::SessionType); // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:68: 86:82
        _19 = move _14;                  // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:84: 86:87
        _16 = AddConnectedNodeReq::new(move _17, move _18, move _19) -> [return: bb9, unwind: bb75]; // scope 3 at cita-network/src/p2p_protocol/transfer.rs:86:27: 86:88
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:86:27: 86:51
                                         // + literal: Const { ty: fn(SessionId, tentacle::service::SessionType, InitMsg) -> AddConnectedNodeReq {AddConnectedNodeReq::new}, val: Value(<ZST>) }
    }

    bb9: {
        _21 = &((*_1).3: node_manager::NodesManagerClient); // scope 4 at cita-network/src/p2p_protocol/transfer.rs:87:17: 87:62
        _22 = move _16;                  // scope 4 at cita-network/src/p2p_protocol/transfer.rs:87:58: 87:61
        _20 = NodesManagerClient::add_connected_node(move _21, move _22) -> [return: bb79, unwind: bb75]; // scope 4 at cita-network/src/p2p_protocol/transfer.rs:87:17: 87:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:87:39: 87:57
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, AddConnectedNodeReq) {NodesManagerClient::add_connected_node}, val: Value(<ZST>) }
    }

    bb10: {
        _24 = &(_8.2: cita_types::H160); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:91:16: 91:25
        _25 = &((*_1).4: cita_types::H160); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:91:29: 91:46
        _23 = <H160 as PartialEq>::eq(move _24, move _25) -> [return: bb11, unwind: bb75]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:91:16: 91:46
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:91:16: 91:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b H160) -> bool {<H160 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _23) -> [0: bb22, otherwise: bb12]; // scope 2 at cita-network/src/p2p_protocol/transfer.rs:91:16: 91:46
    }

    bb12: {
        _26 = log::Level::Debug;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _29 = &_26;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _79 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[2])) }
        _28 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _29, _79) -> [return: bb16, unwind: bb75]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _31 = &_26;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _33 = log::max_level() -> [return: bb17, unwind: bb75]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _27) -> [0: bb67, otherwise: bb19]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        switchInt(move _28) -> [0: bb13, otherwise: bb14]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _32 = &_33;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _30 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _31, move _32) -> [return: bb18, unwind: bb75]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _27 = move _30;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _78 = const _;                   // scope 5 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[1])) }
        _36 = _78 as &[&str] (Pointer(Unsize)); // scope 5 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
        _41 = &(_8.2: cita_types::H160); // scope 5 at cita-network/src/p2p_protocol/transfer.rs:92:66: 92:75
        _40 = core::fmt::ArgumentV1::<'_>::new_debug::<H160>(_41) -> [return: bb20, unwind: bb75]; // scope 5 at cita-network/src/p2p_protocol/transfer.rs:92:66: 92:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:92:66: 92:75
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b H160) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<H160>}, val: Value(<ZST>) }
    }

    bb20: {
        _39 = [move _40];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _38 = &_39;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _37 = _38 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _35 = Arguments::<'_>::new_v1(move _36, move _37) -> [return: bb21, unwind: bb75]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        _77 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[0])) }
        _34 = log::__private_api_log(move _35, _26, _77) -> [return: bb80, unwind: bb75]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb22: {
        _85 = deref_copy (_2.1: &tentacle::context::SessionContext); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:96:23: 96:37
        _42 = ((*_85).0: tentacle::SessionId); // scope 2 at cita-network/src/p2p_protocol/transfer.rs:96:23: 96:37
        _45 = &(_8.1: std::vec::Vec<u8>); // scope 6 at cita-network/src/p2p_protocol/transfer.rs:97:50: 97:60
        _44 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _45) -> [return: bb23, unwind: bb75]; // scope 6 at cita-network/src/p2p_protocol/transfer.rs:97:27: 97:61
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:97:27: 97:49
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb23: {
        _43 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _44) -> [return: bb24, unwind: bb75]; // scope 6 at cita-network/src/p2p_protocol/transfer.rs:97:27: 97:70
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:97:62: 97:68
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb24: {
        _90 = const true;                // scope 6 at cita-network/src/p2p_protocol/transfer.rs:97:69: 97:70
        _47 = &mut _43;                  // scope 7 at cita-network/src/p2p_protocol/transfer.rs:98:13: 98:47
        _49 = SessionId::value(_42) -> [return: bb25, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:98:28: 98:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:98:32: 98:37
                                         // + literal: Const { ty: fn(SessionId) -> usize {SessionId::value}, val: Value(<ZST>) }
    }

    bb25: {
        _48 = move _49 as u32 (IntToInt); // scope 7 at cita-network/src/p2p_protocol/transfer.rs:98:28: 98:46
        _46 = libproto::Message::set_origin(move _47, move _48) -> [return: bb26, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:98:13: 98:47
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:98:17: 98:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message, u32) {libproto::Message::set_origin}, val: Value(<ZST>) }
    }

    bb26: {
        _51 = &((*_1).2: network::NetworkClient); // scope 7 at cita-network/src/p2p_protocol/transfer.rs:99:13: 103:19
        _54 = &(_8.0: std::string::String); // scope 7 at cita-network/src/p2p_protocol/transfer.rs:101:21: 101:37
        _53 = <std::string::String as Clone>::clone(move _54) -> [return: bb27, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:101:21: 101:37
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:101:30: 101:35
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as Clone>::clone}, val: Value(<ZST>) }
    }

    bb27: {
        _89 = const true;                // scope 7 at cita-network/src/p2p_protocol/transfer.rs:101:36: 101:37
        _90 = const false;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:24
        _57 = move _43;                  // scope 7 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:24
        _56 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _57) -> [return: bb28, unwind: bb69]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:35
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:102:25: 102:33
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb28: {
        _55 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _56) -> [return: bb29, unwind: bb69]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:102:21: 102:44
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:102:36: 102:42
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb29: {
        _89 = const false;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:100:40: 103:18
        _52 = RemoteMessage::new(move _53, move _55) -> [return: bb30, unwind: bb69]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:100:40: 103:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:100:40: 100:58
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> RemoteMessage {RemoteMessage::new}, val: Value(<ZST>) }
    }

    bb30: {
        _89 = const false;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:103:17: 103:18
        _50 = NetworkClient::handle_remote_message(move _51, move _52) -> [return: bb31, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:99:13: 103:19
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:100:18: 100:39
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient, RemoteMessage) {NetworkClient::handle_remote_message}, val: Value(<ZST>) }
    }

    bb31: {
        _59 = (_8.4: u8);                // scope 7 at cita-network/src/p2p_protocol/transfer.rs:106:16: 106:24
        _58 = Gt(move _59, const 0_u8);  // scope 7 at cita-network/src/p2p_protocol/transfer.rs:106:16: 106:28
        switchInt(move _58) -> [0: bb35, otherwise: bb32]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:106:16: 106:28
    }

    bb32: {
        _60 = CheckedSub((_8.4: u8), const 1_u8); // scope 7 at cita-network/src/p2p_protocol/transfer.rs:107:17: 107:30
        assert(!move (_60.1: bool), "attempt to compute `{} - {}`, which would overflow", (_8.4: u8), const 1_u8) -> [success: bb33, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:107:17: 107:30
    }

    bb33: {
        (_8.4: u8) = move (_60.0: u8);   // scope 7 at cita-network/src/p2p_protocol/transfer.rs:107:17: 107:30
        _86 = const false;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:108:49: 108:53
        _87 = const false;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:108:49: 108:53
        _62 = move _8;                   // scope 7 at cita-network/src/p2p_protocol/transfer.rs:108:49: 108:53
        _61 = RetransNetMsgReq::new(move _62, _42) -> [return: bb34, unwind: bb71]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:108:27: 108:59
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:108:27: 108:48
                                         // + literal: Const { ty: fn(NetMessageUnit, SessionId) -> RetransNetMsgReq {RetransNetMsgReq::new}, val: Value(<ZST>) }
    }

    bb34: {
        _64 = &((*_1).3: node_manager::NodesManagerClient); // scope 8 at cita-network/src/p2p_protocol/transfer.rs:109:17: 109:59
        _65 = move _61;                  // scope 8 at cita-network/src/p2p_protocol/transfer.rs:109:55: 109:58
        _63 = NodesManagerClient::retrans_net_msg(move _64, move _65) -> [return: bb81, unwind: bb71]; // scope 8 at cita-network/src/p2p_protocol/transfer.rs:109:17: 109:59
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:109:39: 109:54
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, RetransNetMsgReq) {NodesManagerClient::retrans_net_msg}, val: Value(<ZST>) }
    }

    bb35: {
        _90 = const false;               // scope 6 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        switchInt(_86) -> [0: bb56, otherwise: bb58]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb36: {
        _66 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _69 = &_66;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _82 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[5])) }
        _68 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _69, _82) -> [return: bb40, unwind: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb37: {
        _67 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _71 = &_66;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _73 = log::max_level() -> [return: bb41, unwind: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _67) -> [0: bb45, otherwise: bb43]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        switchInt(move _68) -> [0: bb37, otherwise: bb38]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        _72 = &_73;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _70 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _71, move _72) -> [return: bb42, unwind: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb42: {
        _67 = move _70;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb43: {
        _81 = const _;                   // scope 9 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[4])) }
        _76 = _81 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
        _75 = Arguments::<'_>::new_const(move _76) -> [return: bb44, unwind: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb44: {
        _80 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<TransferProtocol as ServiceProtocol>::received, [], Some(promoted[3])) }
        _74 = log::__private_api_log(move _75, _66, _80) -> [return: bb82, unwind: bb50]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb45: {
        drop(_4) -> [return: bb46, unwind: bb78]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb46: {
        _91 = discriminant(_5);          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
        switchInt(move _91) -> [1: bb60, otherwise: bb59]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb47: {
        _88 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
        goto -> bb48;                    // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb48: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:6: 114:6
    }

    bb49 (cleanup): {
        drop(_12) -> bb75;               // scope 2 at cita-network/src/p2p_protocol/transfer.rs:84:55: 84:56
    }

    bb50 (cleanup): {
        drop(_4) -> bb78;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb51 (cleanup): {
        drop(_4) -> bb52;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb52 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:80:5: 114:6
    }

    bb53: {
        _86 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        _86 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        _87 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        goto -> bb45;                    // scope 1 at cita-network/src/p2p_protocol/transfer.rs:83:9: 113:10
    }

    bb54 (cleanup): {
        switchInt(_87) -> [0: bb50, otherwise: bb55]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb55 (cleanup): {
        drop((_8.1: std::vec::Vec<u8>)) -> bb50; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb56: {
        switchInt(_87) -> [0: bb53, otherwise: bb57]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb57: {
        drop((_8.1: std::vec::Vec<u8>)) -> [return: bb53, unwind: bb50]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb58: {
        drop((_8.0: std::string::String)) -> [return: bb56, unwind: bb54]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb59: {
        _88 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
        goto -> bb48;                    // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb60: {
        switchInt(_88) -> [0: bb59, otherwise: bb61]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb61: {
        drop(((_5 as Some).0: cita_protocol::NetMessageUnit)) -> bb59; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb62: {
        _86 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        _86 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        _87 = const false;               // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
        drop(_4) -> [return: bb47, unwind: bb78]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb63 (cleanup): {
        switchInt(_87) -> [0: bb50, otherwise: bb64]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb64 (cleanup): {
        drop((_8.1: std::vec::Vec<u8>)) -> bb50; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb65: {
        switchInt(_87) -> [0: bb62, otherwise: bb66]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb66: {
        drop((_8.1: std::vec::Vec<u8>)) -> [return: bb62, unwind: bb50]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb67: {
        drop((_8.0: std::string::String)) -> [return: bb65, unwind: bb63]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb68 (cleanup): {
        drop(_53) -> bb71;               // scope 7 at cita-network/src/p2p_protocol/transfer.rs:103:17: 103:18
    }

    bb69 (cleanup): {
        switchInt(_89) -> [0: bb71, otherwise: bb68]; // scope 7 at cita-network/src/p2p_protocol/transfer.rs:103:17: 103:18
    }

    bb70 (cleanup): {
        drop(_43) -> bb75;               // scope 6 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb71 (cleanup): {
        switchInt(_90) -> [0: bb75, otherwise: bb70]; // scope 6 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb72 (cleanup): {
        switchInt(_87) -> [0: bb50, otherwise: bb73]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb73 (cleanup): {
        drop((_8.1: std::vec::Vec<u8>)) -> bb50; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb74 (cleanup): {
        drop((_8.0: std::string::String)) -> bb72; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb75 (cleanup): {
        switchInt(_86) -> [0: bb72, otherwise: bb74]; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:111:9: 111:10
    }

    bb76 (cleanup): {
        switchInt(_88) -> [0: bb52, otherwise: bb77]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb77 (cleanup): {
        drop(((_5 as Some).0: cita_protocol::NetMessageUnit)) -> bb52; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb78 (cleanup): {
        _92 = discriminant(_5);          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
        switchInt(move _92) -> [1: bb76, otherwise: bb52]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:114:5: 114:6
    }

    bb79: {
        goto -> bb67;                    // scope 4 at cita-network/src/p2p_protocol/transfer.rs:87:17: 87:62
    }

    bb80: {
        goto -> bb67;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb81: {
        goto -> bb35;                    // scope 8 at cita-network/src/p2p_protocol/transfer.rs:109:17: 109:59
    }

    bb82: {
        goto -> bb45;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:17: 92:76
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:17: 92:76

    bb0: {
        _3 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/transfer.rs"; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:17: 92:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:92:17: 92:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:17: 92:76
        _1 = (move _2, move _4, move _6, const 92_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64

    bb0: {
        _1 = [const "[Transfer] Recieve myself ", const " message"]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:92:24: 92:64
    }
}

promoted[2] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:13: 112:82
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:13: 112:82

    bb0: {
        _3 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol::transfer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/transfer.rs"; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:13: 112:82
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:112:13: 112:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:13: 112:82
        _1 = (move _2, move _4, move _6, const 112_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81

    bb0: {
        _1 = [const "[Transfer] Cannot convert network message to pubsub message!"]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:112:19: 112:81
    }
}

promoted[5] in transfer::<impl at cita-network/src/p2p_protocol/transfer.rs:46:1: 46:42>::received: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn create_transfer_meta(_1: NetworkClient, _2: NodesManagerClient, _3: H160) -> ProtocolMeta {
    debug network_client => _1;          // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:118:5: 118:19
    debug nodes_mgr_client => _2;        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:119:5: 119:21
    debug self_address => _3;            // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:120:5: 120:17
    let mut _0: tentacle::service::ProtocolMeta; // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:121:6: 121:18
    let mut _4: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
    let mut _5: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 139:47
    let mut _6: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 138:11
    let mut _7: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 128:11
    let mut _8: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 123:34
    let mut _9: tentacle::builder::MetaBuilder; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 122:27
    let mut _10: [closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32]; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:25: 138:10
    let mut _11: std::vec::Vec<std::string::String>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
    let mut _12: std::boxed::Box<[std::string::String]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _13: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _14: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _15: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _16: std::boxed::Box<[std::string::String; 1]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _17: std::string::String;    // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:32: 140:50
    let _18: &str;                       // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:32: 140:39
    let mut _19: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:51: 140:52
    let mut _20: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    let mut _21: bool;                   // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    let mut _22: ();                     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
    let mut _23: *const [std::string::String; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    scope 1 {
    }

    bb0: {
        _19 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _20 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _21 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _21 = const true;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _20 = const true;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _9 = <MetaBuilder as Default>::default() -> [return: bb1, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 122:27
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:122:5: 122:25
                                         // + literal: Const { ty: fn() -> MetaBuilder {<MetaBuilder as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = MetaBuilder::id(move _9, const _) -> [return: bb2, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 123:34
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:123:10: 123:12
                                         // + literal: Const { ty: fn(MetaBuilder, ProtocolId) -> MetaBuilder {MetaBuilder::id}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:123:13: 123:33
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
    }

    bb2: {
        _7 = MetaBuilder::codec::<[closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18]>(move _8, const ZeroSized: [closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18]) -> [return: bb3, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 128:11
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:124:10: 124:15
                                         // + literal: Const { ty: fn(MetaBuilder, [closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18]) -> MetaBuilder {MetaBuilder::codec::<[closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18], val: Value(<ZST>) }
    }

    bb3: {
        _21 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:25: 138:10
        _20 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:25: 138:10
        _10 = [closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32] { network_client: move _1, nodes_mgr_client: move _2, self_address: _3 }; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:25: 138:10
                                         // closure
                                         // + def_id: DefId(0:545 ~ cita_network[da60]::p2p_protocol::transfer::create_transfer_meta::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> tentacle::service::ProtocolHandle<std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>>,
                                         //     (network::NetworkClient, node_manager::NodesManagerClient, cita_types::H160),
                                         // ]
        _6 = MetaBuilder::service_handle::<[closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32]>(move _7, move _10) -> [return: bb4, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 138:11
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:129:10: 129:24
                                         // + literal: Const { ty: fn(MetaBuilder, [closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32]) -> MetaBuilder {MetaBuilder::service_handle::<[closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32]>}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = MetaBuilder::name::<[closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18]>(move _6, const ZeroSized: [closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18]) -> [return: bb5, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 139:47
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:139:10: 139:14
                                         // + literal: Const { ty: fn(MetaBuilder, [closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18]) -> MetaBuilder {MetaBuilder::name::<[closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18], val: Value(<ZST>) }
    }

    bb5: {
        _19 = const true;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:46: 139:47
        _13 = const 24_usize;            // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _14 = const 8_usize;             // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _15 = alloc::alloc::exchange_malloc(move _13, move _14) -> [return: bb6, unwind: bb15]; // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = ShallowInitBox(move _15, [std::string::String; 1]); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _18 = const "0.0.2";             // scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:32: 140:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:140:32: 140:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _17 = <str as ToOwned>::to_owned(_18) -> [return: bb7, unwind: bb13]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:32: 140:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:140:40: 140:48
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> <str as ToOwned>::Owned {<str as ToOwned>::to_owned}, val: Value(<ZST>) }
    }

    bb7: {
        _23 = (((_16.0: std::ptr::Unique<[std::string::String; 1]>).0: std::ptr::NonNull<[std::string::String; 1]>).0: *const [std::string::String; 1]); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_23) = [move _17];             // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _12 = move _16 as std::boxed::Box<[std::string::String]> (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _11 = slice::<impl [std::string::String]>::into_vec::<std::alloc::Global>(move _12) -> [return: bb8, unwind: bb15]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Box<[std::string::String]>) -> Vec<std::string::String> {slice::<impl [std::string::String]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
        _4 = MetaBuilder::support_versions(move _5, move _11) -> [return: bb9, unwind: bb15]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 140:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:140:10: 140:26
                                         // + literal: Const { ty: fn(MetaBuilder, Vec<std::string::String>) -> MetaBuilder {MetaBuilder::support_versions}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = const false;               // scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:51: 140:52
        _0 = MetaBuilder::build(move _4) -> [return: bb10, unwind: bb17]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:122:5: 141:17
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:141:10: 141:15
                                         // + literal: Const { ty: fn(MetaBuilder) -> ProtocolMeta {MetaBuilder::build}, val: Value(<ZST>) }
    }

    bb10: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:2: 142:2
    }

    bb11 (cleanup): {
        switchInt(_21) -> [0: bb12, otherwise: bb18]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:117:1: 142:2
    }

    bb13 (cleanup): {
        _22 = alloc::alloc::box_free::<[std::string::String; 1], std::alloc::Global>(move (_16.0: std::ptr::Unique<[std::string::String; 1]>), const std::alloc::Global) -> bb15; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:46: 54:47
                                         // + literal: Const { ty: unsafe fn(Unique<[std::string::String; 1]>, std::alloc::Global) {alloc::alloc::box_free::<[std::string::String; 1], std::alloc::Global>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::alloc::Global, val: Value(<ZST>) }
    }

    bb14 (cleanup): {
        drop(_5) -> bb17;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:51: 140:52
    }

    bb15 (cleanup): {
        switchInt(_19) -> [0: bb17, otherwise: bb14]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:140:51: 140:52
    }

    bb16 (cleanup): {
        drop(_2) -> bb11;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    }

    bb17 (cleanup): {
        switchInt(_20) -> [0: bb11, otherwise: bb16]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    }

    bb18 (cleanup): {
        drop(_1) -> bb12;                // scope 0 at cita-network/src/p2p_protocol/transfer.rs:142:1: 142:2
    }
}

fn create_transfer_meta::{closure#0}(_1: &[closure@cita-network/src/p2p_protocol/transfer.rs:124:16: 124:18]) -> Box<dyn Codec<Error = std::io::Error, Item = BytesMut, Error = std::io::Error, Item = bytes::Bytes> + std::marker::Send> {
    let mut _0: std::boxed::Box<dyn tentacle::traits::Codec<Error = std::io::Error, Item = bytes::BytesMut, Error = std::io::Error, Item = bytes::Bytes> + std::marker::Send>; // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:127:13: 127:29
    let mut _2: tokio::codec::LengthDelimitedCodec; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:125:17: 125:27
    let _3: ();                          // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:126:13: 126:58
    let mut _4: &mut tokio::codec::LengthDelimitedCodec; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:126:13: 126:58
    let mut _5: std::boxed::Box<tokio::codec::LengthDelimitedCodec>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:127:13: 127:29
    let mut _6: tokio::codec::LengthDelimitedCodec; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:127:22: 127:28
    scope 1 {
        debug lcodec => _2;              // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:125:17: 125:27
    }

    bb0: {
        _2 = LengthDelimitedCodec::new() -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:125:30: 125:57
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:125:30: 125:55
                                         // + literal: Const { ty: fn() -> LengthDelimitedCodec {LengthDelimitedCodec::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &mut _2;                    // scope 1 at cita-network/src/p2p_protocol/transfer.rs:126:13: 126:58
        _3 = LengthDelimitedCodec::set_max_frame_length(move _4, const _) -> bb2; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:126:13: 126:58
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:126:20: 126:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut LengthDelimitedCodec, usize) {LengthDelimitedCodec::set_max_frame_length}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = move _2;                    // scope 1 at cita-network/src/p2p_protocol/transfer.rs:127:22: 127:28
        _5 = Box::<LengthDelimitedCodec>::new(move _6) -> bb3; // scope 1 at cita-network/src/p2p_protocol/transfer.rs:127:13: 127:29
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:127:13: 127:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(LengthDelimitedCodec) -> Box<LengthDelimitedCodec> {Box::<LengthDelimitedCodec>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = move _5 as std::boxed::Box<dyn tentacle::traits::Codec<Error = std::io::Error, Item = bytes::BytesMut, Error = std::io::Error, Item = bytes::Bytes> + std::marker::Send> (Pointer(Unsize)); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:127:13: 127:29
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:128:10: 128:10
    }
}

fn create_transfer_meta::{closure#1}(_1: [closure@cita-network/src/p2p_protocol/transfer.rs:129:25: 129:32]) -> ProtocolHandle<Box<dyn ServiceProtocol + std::marker::Send>> {
    debug network_client => (_1.0: network::NetworkClient); // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:118:5: 118:19
    debug nodes_mgr_client => (_1.1: node_manager::NodesManagerClient); // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:119:5: 119:21
    debug self_address => (_1.2: cita_types::H160); // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:120:5: 120:17
    let mut _0: tentacle::service::ProtocolHandle<std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>>; // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:33: 129:33
    let _2: std::boxed::Box<p2p_protocol::transfer::TransferProtocol>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:130:17: 130:23
    let mut _3: p2p_protocol::transfer::TransferProtocol; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:130:35: 136:14
    let mut _4: std::vec::Vec<tentacle::SessionId>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:132:40: 132:54
    let mut _5: network::NetworkClient;  // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:133:33: 133:55
    let mut _6: &network::NetworkClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:133:33: 133:55
    let mut _7: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:134:35: 134:59
    let mut _8: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:134:35: 134:59
    let mut _9: cita_types::H160;        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:135:17: 135:29
    let mut _10: std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:137:38: 137:44
    let mut _11: std::boxed::Box<p2p_protocol::transfer::TransferProtocol>; // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:137:38: 137:44
    scope 1 {
        debug handle => _2;              // in scope 1 at cita-network/src/p2p_protocol/transfer.rs:130:17: 130:23
    }

    bb0: {
        _4 = <Vec<SessionId> as Default>::default() -> [return: bb1, unwind: bb8]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:132:40: 132:54
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:132:40: 132:52
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<SessionId> {<Vec<SessionId> as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &(_1.0: network::NetworkClient); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:133:33: 133:55
        _5 = <NetworkClient as Clone>::clone(move _6) -> [return: bb2, unwind: bb7]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:133:33: 133:55
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:133:48: 133:53
                                         // + literal: Const { ty: for<'a> fn(&'a NetworkClient) -> NetworkClient {<NetworkClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &(_1.1: node_manager::NodesManagerClient); // scope 0 at cita-network/src/p2p_protocol/transfer.rs:134:35: 134:59
        _7 = <NodesManagerClient as Clone>::clone(move _8) -> [return: bb3, unwind: bb6]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:134:35: 134:59
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:134:52: 134:57
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient) -> NodesManagerClient {<NodesManagerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = (_1.2: cita_types::H160);   // scope 0 at cita-network/src/p2p_protocol/transfer.rs:135:17: 135:29
        _3 = TransferProtocol { proto_id: const _, connected_session_ids: move _4, network_client: move _5, nodes_mgr_client: move _7, self_address: move _9 }; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:130:35: 136:14
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:131:27: 131:47
                                         // + literal: Const { ty: ProtocolId, val: Unevaluated(TRANSFER_PROTOCOL_ID, [], None) }
        _2 = Box::<TransferProtocol>::new(move _3) -> [return: bb4, unwind: bb8]; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:130:26: 136:15
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:130:26: 130:34
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(TransferProtocol) -> Box<TransferProtocol> {Box::<TransferProtocol>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = move _2;                   // scope 1 at cita-network/src/p2p_protocol/transfer.rs:137:38: 137:44
        _10 = move _11 as std::boxed::Box<dyn tentacle::traits::ServiceProtocol + std::marker::Send> (Pointer(Unsize)); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:137:38: 137:44
        _0 = ProtocolHandle::<Box<dyn ServiceProtocol + std::marker::Send>>::Callback(move _10); // scope 1 at cita-network/src/p2p_protocol/transfer.rs:137:13: 137:45
        drop(_1) -> bb5;                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:138:9: 138:10
    }

    bb5: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:138:10: 138:10
    }

    bb6 (cleanup): {
        drop(_5) -> bb7;                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:136:13: 136:14
    }

    bb7 (cleanup): {
        drop(_4) -> bb8;                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:136:13: 136:14
    }

    bb8 (cleanup): {
        drop(_1) -> bb9;                 // scope 0 at cita-network/src/p2p_protocol/transfer.rs:138:9: 138:10
    }

    bb9 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:129:25: 138:10
    }
}

fn create_transfer_meta::{closure#2}(_1: &[closure@cita-network/src/p2p_protocol/transfer.rs:139:15: 139:18], _2: ProtocolId) -> std::string::String {
    let mut _0: std::string::String;     // return place in scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:19: 139:19
    let _3: &str;                        // in scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:19: 139:35

    bb0: {
        _3 = const "/cita/transfer";     // scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:19: 139:35
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:139:19: 139:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = <str as ToOwned>::to_owned(_3) -> bb1; // scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:19: 139:46
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/transfer.rs:139:36: 139:44
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> <str as ToOwned>::Owned {<str as ToOwned>::to_owned}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/transfer.rs:139:46: 139:46
    }
}

fn p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:35:1: 35:13>::new(_1: NodesManagerClient) -> SHandle {
    debug nodes_mgr_client => _1;        // in scope 0 at cita-network/src/p2p_protocol/mod.rs:36:16: 36:32
    let mut _0: p2p_protocol::SHandle;   // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:36:57: 36:61

    bb0: {
        _0 = SHandle { nodes_mgr_client: move _1 }; // scope 0 at cita-network/src/p2p_protocol/mod.rs:37:9: 37:37
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:38:6: 38:6
    }
}

fn p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error(_1: &mut SHandle, _2: &mut ServiceContext, _3: ServiceError) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:42:21: 42:30
    debug _env => _2;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:42:32: 42:36
    debug error => _3;                   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:42:59: 42:64
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:42:80: 42:80
    let mut _4: isize;                   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:44:13: 44:57
    let _5: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:44:41: 44:48
    let _6: tentacle::error::Error;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:44:50: 44:55
    let mut _8: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:45:31: 45:64
    let _9: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:45:55: 45:63
    let mut _10: isize;                  // in scope 0 at cita-network/src/p2p_protocol/mod.rs:49:21: 49:65
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:53:29: 53:36
    let _27: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:53:29: 53:36
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:53:38: 53:48
    let _29: &tentacle::SessionId;       // in scope 0 at cita-network/src/p2p_protocol/mod.rs:53:38: 53:48
    let mut _31: std::net::SocketAddr;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:55:59: 55:66
    let _32: ();                         // in scope 0 at cita-network/src/p2p_protocol/mod.rs:56:25: 56:69
    let mut _33: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:56:25: 56:69
    let mut _34: node_manager::AddRepeatedNodeReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:56:65: 56:68
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _37: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _38: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _39: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _40: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _41: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _42: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _43: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _44: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
    let mut _46: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _47: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _48: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _49: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:82: 59:89
    let _50: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:82: 59:89
    let mut _52: std::net::SocketAddr;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:60:57: 60:64
    let _53: ();                         // in scope 0 at cita-network/src/p2p_protocol/mod.rs:61:25: 61:66
    let mut _54: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:61:25: 61:66
    let mut _55: node_manager::ConnectedSelfReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:61:62: 61:65
    let mut _57: std::net::SocketAddr;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:65:55: 65:62
    let _58: ();                         // in scope 0 at cita-network/src/p2p_protocol/mod.rs:66:25: 66:64
    let mut _59: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:66:25: 66:64
    let mut _60: node_manager::DialedErrorReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:66:60: 66:63
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _64: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _65: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _66: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _67: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _68: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _69: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _70: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _71: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
    let mut _72: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _73: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _74: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _75: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:77: 67:84
    let _76: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:77: 67:84
    let mut _77: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:86: 67:91
    let _78: &tentacle::error::Error;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:86: 67:91
    let _79: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:71:41: 71:48
    let _80: tentacle::error::Error;     // in scope 0 at cita-network/src/p2p_protocol/mod.rs:71:50: 71:55
    let mut _82: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:72:31: 72:64
    let _83: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:72:55: 72:63
    let mut _85: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _86: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _87: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _88: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _89: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _90: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _91: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _92: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _93: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _94: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
    let mut _95: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _96: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _97: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _98: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:75:21: 75:28
    let _99: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:75:21: 75:28
    let mut _100: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:75:30: 75:35
    let _101: &tentacle::error::Error;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:75:30: 75:35
    let _102: tentacle::SessionId;       // in scope 0 at cita-network/src/p2p_protocol/mod.rs:79:17: 79:19
    let _103: tentacle::ProtocolId;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:80:17: 80:25
    let _104: tentacle::error::Error;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:81:17: 81:22
    let mut _106: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _107: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _108: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _109: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _110: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _111: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _112: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _113: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _114: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _115: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
    let mut _116: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _117: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _118: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _119: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:21: 86:23
    let _120: &tentacle::SessionId;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:21: 86:23
    let mut _121: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:25: 86:33
    let _122: &tentacle::ProtocolId;     // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:25: 86:33
    let mut _123: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:35: 86:40
    let _124: &tentacle::error::Error;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:86:35: 86:40
    let _125: std::option::Option<std::string::String>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:90:17: 90:27
    let _126: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:91:17: 91:32
    let mut _128: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _129: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _130: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _131: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _132: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _133: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _134: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _135: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _136: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _137: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
    let mut _138: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _139: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _140: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _141: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:96:21: 96:31
    let _142: &std::option::Option<std::string::String>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:96:21: 96:31
    let mut _143: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:96:33: 96:48
    let _144: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:96:33: 96:48
    let _145: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:100:44: 100:59
    let mut _147: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _148: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _149: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _150: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _151: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _152: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _153: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _154: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _155: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _156: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
    let mut _157: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _158: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _159: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _160: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
    let _161: &tentacle::SessionId;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
    let _162: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
    let mut _163: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:36
    let mut _165: tentacle::SessionId;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:70
    let mut _166: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:70
    let mut _167: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:67
    let _168: ();                        // in scope 0 at cita-network/src/p2p_protocol/mod.rs:106:17: 106:62
    let mut _169: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:106:17: 106:62
    let mut _170: node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:106:58: 106:61
    let _171: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:110:17: 110:32
    let _172: tentacle::error::Error;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:111:17: 111:22
    let mut _174: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _175: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _176: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _177: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _178: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _179: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _180: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _181: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _182: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _183: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
    let mut _184: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _185: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _186: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _187: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
    let _188: &tentacle::SessionId;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
    let _189: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
    let mut _190: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:36
    let mut _191: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:41: 115:46
    let _192: &tentacle::error::Error;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:115:41: 115:46
    let _193: tentacle::error::Error;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:119:49: 119:54
    let _194: tentacle::ProtocolId;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:119:56: 119:64
    let mut _196: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _197: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _198: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _199: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _200: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _201: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _202: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _203: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _204: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _205: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
    let mut _206: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _207: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _208: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _209: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:122:21: 122:29
    let _210: &tentacle::ProtocolId;     // in scope 0 at cita-network/src/p2p_protocol/mod.rs:122:21: 122:29
    let mut _211: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:122:31: 122:36
    let _212: &tentacle::error::Error;   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:122:31: 122:36
    let _213: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:125:44: 125:59
    let mut _215: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _216: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _217: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _218: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _219: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _220: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _221: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _222: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _223: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _224: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
    let mut _225: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _226: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _227: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _228: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:128:21: 128:36
    let _229: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:128:21: 128:36
    scope 1 {
        debug address => _5;             // in scope 1 at cita-network/src/p2p_protocol/mod.rs:44:41: 44:48
        debug error => _6;               // in scope 1 at cita-network/src/p2p_protocol/mod.rs:44:50: 44:55
        let _7: std::net::SocketAddr;    // in scope 1 at cita-network/src/p2p_protocol/mod.rs:45:21: 45:28
        scope 2 {
            debug address => _7;         // in scope 2 at cita-network/src/p2p_protocol/mod.rs:45:21: 45:28
            let _11: tentacle::SessionId; // in scope 2 at cita-network/src/p2p_protocol/mod.rs:49:54: 49:64
            let _35: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _51: node_manager::ConnectedSelfReq; // in scope 2 at cita-network/src/p2p_protocol/mod.rs:60:29: 60:32
            let _56: node_manager::DialedErrorReq; // in scope 2 at cita-network/src/p2p_protocol/mod.rs:65:29: 65:32
            scope 3 {
                debug session_id => _11; // in scope 3 at cita-network/src/p2p_protocol/mod.rs:49:54: 49:64
                let _12: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _30: node_manager::AddRepeatedNodeReq; // in scope 3 at cita-network/src/p2p_protocol/mod.rs:55:29: 55:32
                scope 4 {
                    debug lvl => _12;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _236: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _237: &[&str; 2]; // in scope 4 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                    let mut _238: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 5 {
                    debug req => _30;    // in scope 5 at cita-network/src/p2p_protocol/mod.rs:55:29: 55:32
                }
            }
            scope 6 {
                debug lvl => _35;        // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _230: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _231: &[&str; 2]; // in scope 6 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                let mut _232: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 7 {
                debug req => _51;        // in scope 7 at cita-network/src/p2p_protocol/mod.rs:60:29: 60:32
            }
            scope 8 {
                debug req => _56;        // in scope 8 at cita-network/src/p2p_protocol/mod.rs:65:29: 65:32
                let _61: log::Level;     // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 9 {
                    debug lvl => _61;    // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _233: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _234: &[&str; 3]; // in scope 9 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                    let mut _235: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }
    scope 10 {
        debug address => _79;            // in scope 10 at cita-network/src/p2p_protocol/mod.rs:71:41: 71:48
        debug error => _80;              // in scope 10 at cita-network/src/p2p_protocol/mod.rs:71:50: 71:55
        let _81: std::net::SocketAddr;   // in scope 10 at cita-network/src/p2p_protocol/mod.rs:72:21: 72:28
        scope 11 {
            debug address => _81;        // in scope 11 at cita-network/src/p2p_protocol/mod.rs:72:21: 72:28
            let _84: log::Level;         // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 12 {
                debug lvl => _84;        // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _239: &(&str, &str, &str, u32); // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _240: &[&str; 2]; // in scope 12 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                let mut _241: &log::LevelFilter; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }
    scope 13 {
        debug id => _102;                // in scope 13 at cita-network/src/p2p_protocol/mod.rs:79:17: 79:19
        debug proto_id => _103;          // in scope 13 at cita-network/src/p2p_protocol/mod.rs:80:17: 80:25
        debug error => _104;             // in scope 13 at cita-network/src/p2p_protocol/mod.rs:81:17: 81:22
        let _105: log::Level;            // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 14 {
            debug lvl => _105;           // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _242: &(&str, &str, &str, u32); // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _243: &[&str; 3];    // in scope 14 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
            let mut _244: &log::LevelFilter; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 15 {
        debug proto_name => _125;        // in scope 15 at cita-network/src/p2p_protocol/mod.rs:90:17: 90:27
        debug session_context => _126;   // in scope 15 at cita-network/src/p2p_protocol/mod.rs:91:17: 91:32
        let _127: log::Level;            // in scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 16 {
            debug lvl => _127;           // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _245: &(&str, &str, &str, u32); // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _246: &[&str; 3];    // in scope 16 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
            let mut _247: &log::LevelFilter; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 17 {
        debug session_context => _145;   // in scope 17 at cita-network/src/p2p_protocol/mod.rs:100:44: 100:59
        let _146: log::Level;            // in scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _164: node_manager::DelConnectedNodeReq; // in scope 17 at cita-network/src/p2p_protocol/mod.rs:105:21: 105:24
        scope 18 {
            debug lvl => _146;           // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _248: &(&str, &str, &str, u32); // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _249: &[&str; 2];    // in scope 18 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
            let mut _250: &log::LevelFilter; // in scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 19 {
            debug req => _164;           // in scope 19 at cita-network/src/p2p_protocol/mod.rs:105:21: 105:24
        }
    }
    scope 20 {
        debug session_context => _171;   // in scope 20 at cita-network/src/p2p_protocol/mod.rs:110:17: 110:32
        debug error => _172;             // in scope 20 at cita-network/src/p2p_protocol/mod.rs:111:17: 111:22
        let _173: log::Level;            // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 21 {
            debug lvl => _173;           // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _251: &(&str, &str, &str, u32); // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _252: &[&str; 2];    // in scope 21 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
            let mut _253: &log::LevelFilter; // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 22 {
        debug error => _193;             // in scope 22 at cita-network/src/p2p_protocol/mod.rs:119:49: 119:54
        debug proto_id => _194;          // in scope 22 at cita-network/src/p2p_protocol/mod.rs:119:56: 119:64
        let _195: log::Level;            // in scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 23 {
            debug lvl => _195;           // in scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _254: &(&str, &str, &str, u32); // in scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _255: &[&str; 2];    // in scope 23 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
            let mut _256: &log::LevelFilter; // in scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 24 {
        debug session_context => _213;   // in scope 24 at cita-network/src/p2p_protocol/mod.rs:125:44: 125:59
        let _214: log::Level;            // in scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 25 {
            debug lvl => _214;           // in scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _257: &(&str, &str, &str, u32); // in scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _258: &[&str; 1];    // in scope 25 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
            let mut _259: &log::LevelFilter; // in scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = discriminant(_3);           // scope 0 at cita-network/src/p2p_protocol/mod.rs:43:15: 43:20
        switchInt(move _4) -> [0: bb3, 1: bb46, 2: bb74, 3: bb61, 4: bb87, 5: bb102, 6: bb116, 7: bb1, otherwise: bb2]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:43:9: 43:20
    }

    bb1: {
        _213 = move ((_3 as SessionBlocked).0: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:125:44: 125:59
        _214 = log::Level::Warn;         // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _217 = &_214;                    // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _259 = const _;                  // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[29])) }
        _216 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _217, _259) -> [return: bb131, unwind: bb138]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:43:15: 43:20
    }

    bb3: {
        _5 = move ((_3 as DialerError).0: tentacle::parity_multiaddr::Multiaddr); // scope 0 at cita-network/src/p2p_protocol/mod.rs:44:41: 44:48
        _6 = move ((_3 as DialerError).1: tentacle::error::Error); // scope 0 at cita-network/src/p2p_protocol/mod.rs:44:50: 44:55
        _9 = &_5;                        // scope 1 at cita-network/src/p2p_protocol/mod.rs:45:55: 45:63
        _8 = multiaddr_to_socketaddr(_9) -> [return: bb4, unwind: bb148]; // scope 1 at cita-network/src/p2p_protocol/mod.rs:45:31: 45:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:45:31: 45:54
                                         // + literal: Const { ty: for<'a> fn(&'a Multiaddr) -> std::option::Option<std::net::SocketAddr> {multiaddr_to_socketaddr}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = std::option::Option::<std::net::SocketAddr>::unwrap(move _8) -> [return: bb5, unwind: bb148]; // scope 1 at cita-network/src/p2p_protocol/mod.rs:45:31: 45:73
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:45:65: 45:71
                                         // + literal: Const { ty: fn(std::option::Option<std::net::SocketAddr>) -> std::net::SocketAddr {std::option::Option::<std::net::SocketAddr>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = discriminant(_6);          // scope 2 at cita-network/src/p2p_protocol/mod.rs:48:23: 48:28
        switchInt(move _10) -> [1: bb20, 3: bb7, otherwise: bb6]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:48:17: 48:28
    }

    bb6: {
        _57 = _7;                        // scope 2 at cita-network/src/p2p_protocol/mod.rs:65:55: 65:62
        _56 = DialedErrorReq::new(move _57) -> [return: bb32, unwind: bb148]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:65:35: 65:63
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:65:35: 65:54
                                         // + literal: Const { ty: fn(std::net::SocketAddr) -> DialedErrorReq {DialedErrorReq::new}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = ((_6 as RepeatedConnection).0: tentacle::SessionId); // scope 2 at cita-network/src/p2p_protocol/mod.rs:49:54: 49:64
        _12 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _15 = &_12;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _238 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[8])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _238) -> [return: bb11, unwind: bb148]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _17 = &_12;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> [return: bb12, unwind: bb148]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _13) -> [0: bb18, otherwise: bb14]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        switchInt(move _14) -> [0: bb8, otherwise: bb9]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _18 = &_19;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> [return: bb13, unwind: bb148]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _13 = move _16;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _237 = const _;                  // scope 4 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[7])) }
        _22 = _237 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
        _27 = &_7;                       // scope 4 at cita-network/src/p2p_protocol/mod.rs:53:29: 53:36
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_27) -> [return: bb15, unwind: bb148]; // scope 4 at cita-network/src/p2p_protocol/mod.rs:53:29: 53:36
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:53:29: 53:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = &_11;                      // scope 4 at cita-network/src/p2p_protocol/mod.rs:53:38: 53:48
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_29) -> [return: bb16, unwind: bb148]; // scope 4 at cita-network/src/p2p_protocol/mod.rs:53:38: 53:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:53:38: 53:48
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb16: {
        _25 = [move _26, move _28];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = &_25;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> [return: bb17, unwind: bb148]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _236 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[6])) }
        _20 = log::__private_api_log(move _21, _12, _236) -> [return: bb152, unwind: bb148]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = _7;                        // scope 3 at cita-network/src/p2p_protocol/mod.rs:55:59: 55:66
        _30 = AddRepeatedNodeReq::new(move _31, _11) -> [return: bb19, unwind: bb148]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:55:35: 55:79
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:55:35: 55:58
                                         // + literal: Const { ty: fn(std::net::SocketAddr, SessionId) -> AddRepeatedNodeReq {AddRepeatedNodeReq::new}, val: Value(<ZST>) }
    }

    bb19: {
        _33 = &((*_1).0: node_manager::NodesManagerClient); // scope 5 at cita-network/src/p2p_protocol/mod.rs:56:25: 56:69
        _34 = move _30;                  // scope 5 at cita-network/src/p2p_protocol/mod.rs:56:65: 56:68
        _32 = NodesManagerClient::add_repeated_node(move _33, move _34) -> [return: bb153, unwind: bb148]; // scope 5 at cita-network/src/p2p_protocol/mod.rs:56:25: 56:69
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:56:47: 56:64
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, AddRepeatedNodeReq) {NodesManagerClient::add_repeated_node}, val: Value(<ZST>) }
    }

    bb20: {
        _35 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _38 = &_35;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _232 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[2])) }
        _37 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _38, _232) -> [return: bb24, unwind: bb148]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb21: {
        _36 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _40 = &_35;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _42 = log::max_level() -> [return: bb25, unwind: bb148]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _36) -> [0: bb30, otherwise: bb27]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        switchInt(move _37) -> [0: bb21, otherwise: bb22]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _41 = &_42;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _39 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _40, move _41) -> [return: bb26, unwind: bb148]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _36 = move _39;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _231 = const _;                  // scope 6 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[1])) }
        _45 = _231 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
        _50 = &_7;                       // scope 6 at cita-network/src/p2p_protocol/mod.rs:59:82: 59:89
        _49 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_50) -> [return: bb28, unwind: bb148]; // scope 6 at cita-network/src/p2p_protocol/mod.rs:59:82: 59:89
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:59:82: 59:89
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb28: {
        _48 = [move _49];                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _47 = &_48;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _46 = _47 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = Arguments::<'_>::new_v1(move _45, move _46) -> [return: bb29, unwind: bb148]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb29: {
        _230 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[0])) }
        _43 = log::__private_api_log(move _44, _35, _230) -> [return: bb154, unwind: bb148]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb30: {
        _52 = _7;                        // scope 2 at cita-network/src/p2p_protocol/mod.rs:60:57: 60:64
        _51 = ConnectedSelfReq::new(move _52) -> [return: bb31, unwind: bb148]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:60:35: 60:65
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:60:35: 60:56
                                         // + literal: Const { ty: fn(std::net::SocketAddr) -> ConnectedSelfReq {ConnectedSelfReq::new}, val: Value(<ZST>) }
    }

    bb31: {
        _54 = &((*_1).0: node_manager::NodesManagerClient); // scope 7 at cita-network/src/p2p_protocol/mod.rs:61:25: 61:66
        _55 = move _51;                  // scope 7 at cita-network/src/p2p_protocol/mod.rs:61:62: 61:65
        _53 = NodesManagerClient::connected_self(move _54, move _55) -> [return: bb155, unwind: bb148]; // scope 7 at cita-network/src/p2p_protocol/mod.rs:61:25: 61:66
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:61:47: 61:61
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, ConnectedSelfReq) {NodesManagerClient::connected_self}, val: Value(<ZST>) }
    }

    bb32: {
        _59 = &((*_1).0: node_manager::NodesManagerClient); // scope 8 at cita-network/src/p2p_protocol/mod.rs:66:25: 66:64
        _60 = move _56;                  // scope 8 at cita-network/src/p2p_protocol/mod.rs:66:60: 66:63
        _58 = NodesManagerClient::dialed_error(move _59, move _60) -> [return: bb33, unwind: bb148]; // scope 8 at cita-network/src/p2p_protocol/mod.rs:66:25: 66:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:66:47: 66:59
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, DialedErrorReq) {NodesManagerClient::dialed_error}, val: Value(<ZST>) }
    }

    bb33: {
        _61 = log::Level::Warn;          // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _64 = &_61;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _235 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[5])) }
        _63 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _64, _235) -> [return: bb37, unwind: bb148]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _62 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _66 = &_61;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _68 = log::max_level() -> [return: bb38, unwind: bb148]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _62) -> [0: bb44, otherwise: bb40]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        switchInt(move _63) -> [0: bb34, otherwise: bb35]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _67 = &_68;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _65 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _66, move _67) -> [return: bb39, unwind: bb148]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb39: {
        _62 = move _65;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        _234 = const _;                  // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[4])) }
        _71 = _234 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
        _76 = &_7;                       // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:77: 67:84
        _75 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_76) -> [return: bb41, unwind: bb148]; // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:77: 67:84
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:77: 67:84
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb41: {
        _78 = &_6;                       // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:86: 67:91
        _77 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_78) -> [return: bb42, unwind: bb148]; // scope 9 at cita-network/src/p2p_protocol/mod.rs:67:86: 67:91
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:86: 67:91
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb42: {
        _74 = [move _75, move _77];      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = &_74;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _72 = _73 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _70 = Arguments::<'_>::new_v1(move _71, move _72) -> [return: bb43, unwind: bb148]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb43: {
        _233 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[3])) }
        _69 = log::__private_api_log(move _70, _61, _233) -> [return: bb156, unwind: bb148]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb44: {
        drop(_6) -> [return: bb45, unwind: bb149]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:70:13: 70:14
    }

    bb45: {
        drop(_5) -> bb150;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:70:13: 70:14
    }

    bb46: {
        _79 = move ((_3 as ListenError).0: tentacle::parity_multiaddr::Multiaddr); // scope 0 at cita-network/src/p2p_protocol/mod.rs:71:41: 71:48
        _80 = move ((_3 as ListenError).1: tentacle::error::Error); // scope 0 at cita-network/src/p2p_protocol/mod.rs:71:50: 71:55
        _83 = &_79;                      // scope 10 at cita-network/src/p2p_protocol/mod.rs:72:55: 72:63
        _82 = multiaddr_to_socketaddr(_83) -> [return: bb47, unwind: bb146]; // scope 10 at cita-network/src/p2p_protocol/mod.rs:72:31: 72:64
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:72:31: 72:54
                                         // + literal: Const { ty: for<'a> fn(&'a Multiaddr) -> std::option::Option<std::net::SocketAddr> {multiaddr_to_socketaddr}, val: Value(<ZST>) }
    }

    bb47: {
        _81 = std::option::Option::<std::net::SocketAddr>::unwrap(move _82) -> [return: bb48, unwind: bb146]; // scope 10 at cita-network/src/p2p_protocol/mod.rs:72:31: 72:73
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:72:65: 72:71
                                         // + literal: Const { ty: fn(std::option::Option<std::net::SocketAddr>) -> std::net::SocketAddr {std::option::Option::<std::net::SocketAddr>::unwrap}, val: Value(<ZST>) }
    }

    bb48: {
        _84 = log::Level::Warn;          // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _87 = &_84;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _241 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[11])) }
        _86 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _87, _241) -> [return: bb52, unwind: bb146]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb49: {
        _85 = const false;               // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb51;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        _89 = &_84;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _91 = log::max_level() -> [return: bb53, unwind: bb146]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb51: {
        switchInt(move _85) -> [0: bb59, otherwise: bb55]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb52: {
        switchInt(move _86) -> [0: bb49, otherwise: bb50]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        _90 = &_91;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _88 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _89, move _90) -> [return: bb54, unwind: bb146]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb54: {
        _85 = move _88;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb51;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb55: {
        _240 = const _;                  // scope 12 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[10])) }
        _94 = _240 as &[&str] (Pointer(Unsize)); // scope 12 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
        _99 = &_81;                      // scope 12 at cita-network/src/p2p_protocol/mod.rs:75:21: 75:28
        _98 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_99) -> [return: bb56, unwind: bb146]; // scope 12 at cita-network/src/p2p_protocol/mod.rs:75:21: 75:28
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:75:21: 75:28
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb56: {
        _101 = &_80;                     // scope 12 at cita-network/src/p2p_protocol/mod.rs:75:30: 75:35
        _100 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_101) -> [return: bb57, unwind: bb146]; // scope 12 at cita-network/src/p2p_protocol/mod.rs:75:30: 75:35
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:75:30: 75:35
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb57: {
        _97 = [move _98, move _100];     // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _96 = &_97;                      // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _95 = _96 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _93 = Arguments::<'_>::new_v1(move _94, move _95) -> [return: bb58, unwind: bb146]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb58: {
        _239 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[9])) }
        _92 = log::__private_api_log(move _93, _84, _239) -> [return: bb157, unwind: bb146]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb59: {
        drop(_80) -> [return: bb60, unwind: bb147]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:77:13: 77:14
    }

    bb60: {
        drop(_79) -> bb150;              // scope 0 at cita-network/src/p2p_protocol/mod.rs:77:13: 77:14
    }

    bb61: {
        _102 = ((_3 as ProtocolError).0: tentacle::SessionId); // scope 0 at cita-network/src/p2p_protocol/mod.rs:79:17: 79:19
        _103 = ((_3 as ProtocolError).1: tentacle::ProtocolId); // scope 0 at cita-network/src/p2p_protocol/mod.rs:80:17: 80:25
        _104 = move ((_3 as ProtocolError).2: tentacle::error::Error); // scope 0 at cita-network/src/p2p_protocol/mod.rs:81:17: 81:22
        _105 = log::Level::Warn;         // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _108 = &_105;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _244 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[14])) }
        _107 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _108, _244) -> [return: bb65, unwind: bb145]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb62: {
        _106 = const false;              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb64;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb63: {
        _110 = &_105;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _112 = log::max_level() -> [return: bb66, unwind: bb145]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb64: {
        switchInt(move _106) -> [0: bb73, otherwise: bb68]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        switchInt(move _107) -> [0: bb62, otherwise: bb63]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb66: {
        _111 = &_112;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _109 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _110, move _111) -> [return: bb67, unwind: bb145]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb67: {
        _106 = move _109;                // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb64;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb68: {
        _243 = const _;                  // scope 14 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[13])) }
        _115 = _243 as &[&str] (Pointer(Unsize)); // scope 14 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
        _120 = &_102;                    // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:21: 86:23
        _119 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_120) -> [return: bb69, unwind: bb145]; // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:21: 86:23
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:86:21: 86:23
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb69: {
        _122 = &_103;                    // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:25: 86:33
        _121 = core::fmt::ArgumentV1::<'_>::new_debug::<ProtocolId>(_122) -> [return: bb70, unwind: bb145]; // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:25: 86:33
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:86:25: 86:33
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'b> fn(&'b ProtocolId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ProtocolId>}, val: Value(<ZST>) }
    }

    bb70: {
        _124 = &_104;                    // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:35: 86:40
        _123 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_124) -> [return: bb71, unwind: bb145]; // scope 14 at cita-network/src/p2p_protocol/mod.rs:86:35: 86:40
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:86:35: 86:40
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb71: {
        _118 = [move _119, move _121, move _123]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _117 = &_118;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _116 = _117 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _114 = Arguments::<'_>::new_v1(move _115, move _116) -> [return: bb72, unwind: bb145]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb72: {
        _242 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[12])) }
        _113 = log::__private_api_log(move _114, _105, _242) -> [return: bb158, unwind: bb145]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb73: {
        drop(_104) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:88:13: 88:14
    }

    bb74: {
        _125 = move ((_3 as ProtocolSelectError).0: std::option::Option<std::string::String>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:90:17: 90:27
        _126 = move ((_3 as ProtocolSelectError).1: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:91:17: 91:32
        _127 = log::Level::Warn;         // scope 15 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _130 = &_127;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _247 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[17])) }
        _129 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _130, _247) -> [return: bb78, unwind: bb143]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb75: {
        _128 = const false;              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb77;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb76: {
        _132 = &_127;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _134 = log::max_level() -> [return: bb79, unwind: bb143]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb77: {
        switchInt(move _128) -> [0: bb85, otherwise: bb81]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb78: {
        switchInt(move _129) -> [0: bb75, otherwise: bb76]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb79: {
        _133 = &_134;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _131 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _132, move _133) -> [return: bb80, unwind: bb143]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb80: {
        _128 = move _131;                // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb77;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb81: {
        _246 = const _;                  // scope 16 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[16])) }
        _137 = _246 as &[&str] (Pointer(Unsize)); // scope 16 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
        _142 = &_125;                    // scope 16 at cita-network/src/p2p_protocol/mod.rs:96:21: 96:31
        _141 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<std::string::String>>(_142) -> [return: bb82, unwind: bb143]; // scope 16 at cita-network/src/p2p_protocol/mod.rs:96:21: 96:31
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:96:21: 96:31
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<std::string::String>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<std::string::String>>}, val: Value(<ZST>) }
    }

    bb82: {
        _144 = &_126;                    // scope 16 at cita-network/src/p2p_protocol/mod.rs:96:33: 96:48
        _143 = core::fmt::ArgumentV1::<'_>::new_debug::<Arc<SessionContext>>(_144) -> [return: bb83, unwind: bb143]; // scope 16 at cita-network/src/p2p_protocol/mod.rs:96:33: 96:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:96:33: 96:48
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: for<'b> fn(&'b Arc<SessionContext>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Arc<SessionContext>>}, val: Value(<ZST>) }
    }

    bb83: {
        _140 = [move _141, move _143];   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _139 = &_140;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _138 = _139 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _136 = Arguments::<'_>::new_v1(move _137, move _138) -> [return: bb84, unwind: bb143]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb84: {
        _245 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[15])) }
        _135 = log::__private_api_log(move _136, _127, _245) -> [return: bb159, unwind: bb143]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb85: {
        drop(_126) -> [return: bb86, unwind: bb144]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:98:13: 98:14
    }

    bb86: {
        drop(_125) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:98:13: 98:14
    }

    bb87: {
        _145 = move ((_3 as SessionTimeout).0: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:100:44: 100:59
        _146 = log::Level::Warn;         // scope 17 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _149 = &_146;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _250 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[20])) }
        _148 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _149, _250) -> [return: bb91, unwind: bb142]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb88: {
        _147 = const false;              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb90;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb89: {
        _151 = &_146;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _153 = log::max_level() -> [return: bb92, unwind: bb142]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb90: {
        switchInt(move _147) -> [0: bb98, otherwise: bb94]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb91: {
        switchInt(move _148) -> [0: bb88, otherwise: bb89]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb92: {
        _152 = &_153;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _150 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _151, move _152) -> [return: bb93, unwind: bb142]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb93: {
        _147 = move _150;                // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb90;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb94: {
        _249 = const _;                  // scope 18 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[19])) }
        _156 = _249 as &[&str] (Pointer(Unsize)); // scope 18 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
        _163 = &_145;                    // scope 18 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:36
        _162 = <Arc<SessionContext> as Deref>::deref(move _163) -> [return: bb95, unwind: bb142]; // scope 18 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb95: {
        _161 = &((*_162).0: tentacle::SessionId); // scope 18 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
        _160 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_161) -> [return: bb96, unwind: bb142]; // scope 18 at cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:103:21: 103:39
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb96: {
        _159 = [move _160];              // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _158 = &_159;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _157 = _158 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _155 = Arguments::<'_>::new_v1(move _156, move _157) -> [return: bb97, unwind: bb142]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb97: {
        _248 = const _;                  // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[18])) }
        _154 = log::__private_api_log(move _155, _146, _248) -> [return: bb160, unwind: bb142]; // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb98: {
        _167 = &_145;                    // scope 17 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:67
        _166 = <Arc<SessionContext> as Deref>::deref(move _167) -> [return: bb99, unwind: bb142]; // scope 17 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:70
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:105:52: 105:70
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb99: {
        _165 = ((*_166).0: tentacle::SessionId); // scope 17 at cita-network/src/p2p_protocol/mod.rs:105:52: 105:70
        _164 = DelConnectedNodeReq::new(move _165) -> [return: bb100, unwind: bb142]; // scope 17 at cita-network/src/p2p_protocol/mod.rs:105:27: 105:71
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:105:27: 105:51
                                         // + literal: Const { ty: fn(SessionId) -> DelConnectedNodeReq {DelConnectedNodeReq::new}, val: Value(<ZST>) }
    }

    bb100: {
        _169 = &((*_1).0: node_manager::NodesManagerClient); // scope 19 at cita-network/src/p2p_protocol/mod.rs:106:17: 106:62
        _170 = move _164;                // scope 19 at cita-network/src/p2p_protocol/mod.rs:106:58: 106:61
        _168 = NodesManagerClient::del_connected_node(move _169, move _170) -> [return: bb101, unwind: bb142]; // scope 19 at cita-network/src/p2p_protocol/mod.rs:106:17: 106:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:106:39: 106:57
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, DelConnectedNodeReq) {NodesManagerClient::del_connected_node}, val: Value(<ZST>) }
    }

    bb101: {
        drop(_145) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:107:13: 107:14
    }

    bb102: {
        _171 = move ((_3 as MuxerError).0: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:110:17: 110:32
        _172 = move ((_3 as MuxerError).1: tentacle::error::Error); // scope 0 at cita-network/src/p2p_protocol/mod.rs:111:17: 111:22
        _173 = log::Level::Warn;         // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _176 = &_173;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _253 = const _;                  // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[23])) }
        _175 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _176, _253) -> [return: bb106, unwind: bb140]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb103: {
        _174 = const false;              // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb105;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb104: {
        _178 = &_173;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _180 = log::max_level() -> [return: bb107, unwind: bb140]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb105: {
        switchInt(move _174) -> [0: bb114, otherwise: bb109]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb106: {
        switchInt(move _175) -> [0: bb103, otherwise: bb104]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb107: {
        _179 = &_180;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _177 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _178, move _179) -> [return: bb108, unwind: bb140]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb108: {
        _174 = move _177;                // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb105;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb109: {
        _252 = const _;                  // scope 21 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[22])) }
        _183 = _252 as &[&str] (Pointer(Unsize)); // scope 21 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
        _190 = &_171;                    // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:36
        _189 = <Arc<SessionContext> as Deref>::deref(move _190) -> [return: bb110, unwind: bb140]; // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb110: {
        _188 = &((*_189).0: tentacle::SessionId); // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
        _187 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_188) -> [return: bb111, unwind: bb140]; // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:115:21: 115:39
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb111: {
        _192 = &_172;                    // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:41: 115:46
        _191 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_192) -> [return: bb112, unwind: bb140]; // scope 21 at cita-network/src/p2p_protocol/mod.rs:115:41: 115:46
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:115:41: 115:46
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb112: {
        _186 = [move _187, move _191];   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _185 = &_186;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _184 = _185 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _182 = Arguments::<'_>::new_v1(move _183, move _184) -> [return: bb113, unwind: bb140]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb113: {
        _251 = const _;                  // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[21])) }
        _181 = log::__private_api_log(move _182, _173, _251) -> [return: bb161, unwind: bb140]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb114: {
        drop(_172) -> [return: bb115, unwind: bb141]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:117:13: 117:14
    }

    bb115: {
        drop(_171) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:117:13: 117:14
    }

    bb116: {
        _193 = move ((_3 as ProtocolHandleError).0: tentacle::error::Error); // scope 0 at cita-network/src/p2p_protocol/mod.rs:119:49: 119:54
        _194 = ((_3 as ProtocolHandleError).1: tentacle::ProtocolId); // scope 0 at cita-network/src/p2p_protocol/mod.rs:119:56: 119:64
        _195 = log::Level::Warn;         // scope 22 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _198 = &_195;                    // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _256 = const _;                  // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[26])) }
        _197 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _198, _256) -> [return: bb120, unwind: bb139]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb117: {
        _196 = const false;              // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb119;                   // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb118: {
        _200 = &_195;                    // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _202 = log::max_level() -> [return: bb121, unwind: bb139]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb119: {
        switchInt(move _196) -> [0: bb127, otherwise: bb123]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb120: {
        switchInt(move _197) -> [0: bb117, otherwise: bb118]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb121: {
        _201 = &_202;                    // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _199 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _200, move _201) -> [return: bb122, unwind: bb139]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb122: {
        _196 = move _199;                // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb119;                   // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb123: {
        _255 = const _;                  // scope 23 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[25])) }
        _205 = _255 as &[&str] (Pointer(Unsize)); // scope 23 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
        _210 = &_194;                    // scope 23 at cita-network/src/p2p_protocol/mod.rs:122:21: 122:29
        _209 = core::fmt::ArgumentV1::<'_>::new_debug::<ProtocolId>(_210) -> [return: bb124, unwind: bb139]; // scope 23 at cita-network/src/p2p_protocol/mod.rs:122:21: 122:29
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:122:21: 122:29
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: for<'b> fn(&'b ProtocolId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ProtocolId>}, val: Value(<ZST>) }
    }

    bb124: {
        _212 = &_193;                    // scope 23 at cita-network/src/p2p_protocol/mod.rs:122:31: 122:36
        _211 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>(_212) -> [return: bb125, unwind: bb139]; // scope 23 at cita-network/src/p2p_protocol/mod.rs:122:31: 122:36
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:122:31: 122:36
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::error::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::error::Error>}, val: Value(<ZST>) }
    }

    bb125: {
        _208 = [move _209, move _211];   // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _207 = &_208;                    // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _206 = _207 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _204 = Arguments::<'_>::new_v1(move _205, move _206) -> [return: bb126, unwind: bb139]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(23)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb126: {
        _254 = const _;                  // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[24])) }
        _203 = log::__private_api_log(move _204, _195, _254) -> [return: bb162, unwind: bb139]; // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb127: {
        drop(_193) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:124:13: 124:14
    }

    bb128: {
        _215 = const false;              // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb129: {
        _219 = &_214;                    // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _221 = log::max_level() -> [return: bb132, unwind: bb138]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb130: {
        switchInt(move _215) -> [0: bb137, otherwise: bb134]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb131: {
        switchInt(move _216) -> [0: bb128, otherwise: bb129]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb132: {
        _220 = &_221;                    // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _218 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _219, move _220) -> [return: bb133, unwind: bb138]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb133: {
        _215 = move _218;                // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb134: {
        _258 = const _;                  // scope 25 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[28])) }
        _224 = _258 as &[&str] (Pointer(Unsize)); // scope 25 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
        _229 = &_213;                    // scope 25 at cita-network/src/p2p_protocol/mod.rs:128:21: 128:36
        _228 = core::fmt::ArgumentV1::<'_>::new_debug::<Arc<SessionContext>>(_229) -> [return: bb135, unwind: bb138]; // scope 25 at cita-network/src/p2p_protocol/mod.rs:128:21: 128:36
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:128:21: 128:36
                                         // + user_ty: UserType(27)
                                         // + literal: Const { ty: for<'b> fn(&'b Arc<SessionContext>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Arc<SessionContext>>}, val: Value(<ZST>) }
    }

    bb135: {
        _227 = [move _228];              // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _226 = &_227;                    // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _225 = _226 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _223 = Arguments::<'_>::new_v1(move _224, move _225) -> [return: bb136, unwind: bb138]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb136: {
        _257 = const _;                  // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_error, [], Some(promoted[27])) }
        _222 = log::__private_api_log(move _223, _214, _257) -> [return: bb163, unwind: bb138]; // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb137: {
        drop(_213) -> bb150;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:130:13: 130:14
    }

    bb138 (cleanup): {
        drop(_213) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:130:13: 130:14
    }

    bb139 (cleanup): {
        drop(_193) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:124:13: 124:14
    }

    bb140 (cleanup): {
        drop(_172) -> bb141;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:117:13: 117:14
    }

    bb141 (cleanup): {
        drop(_171) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:117:13: 117:14
    }

    bb142 (cleanup): {
        drop(_145) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:107:13: 107:14
    }

    bb143 (cleanup): {
        drop(_126) -> bb144;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:98:13: 98:14
    }

    bb144 (cleanup): {
        drop(_125) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:98:13: 98:14
    }

    bb145 (cleanup): {
        drop(_104) -> bb151;             // scope 0 at cita-network/src/p2p_protocol/mod.rs:88:13: 88:14
    }

    bb146 (cleanup): {
        drop(_80) -> bb147;              // scope 0 at cita-network/src/p2p_protocol/mod.rs:77:13: 77:14
    }

    bb147 (cleanup): {
        drop(_79) -> bb151;              // scope 0 at cita-network/src/p2p_protocol/mod.rs:77:13: 77:14
    }

    bb148 (cleanup): {
        drop(_6) -> bb149;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:70:13: 70:14
    }

    bb149 (cleanup): {
        drop(_5) -> bb151;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:70:13: 70:14
    }

    bb150: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:132:6: 132:6
    }

    bb151 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:42:5: 132:6
    }

    bb152: {
        goto -> bb18;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb153: {
        goto -> bb44;                    // scope 5 at cita-network/src/p2p_protocol/mod.rs:56:25: 56:69
    }

    bb154: {
        goto -> bb30;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb155: {
        goto -> bb44;                    // scope 7 at cita-network/src/p2p_protocol/mod.rs:61:25: 61:66
    }

    bb156: {
        goto -> bb44;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb157: {
        goto -> bb59;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb158: {
        goto -> bb73;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb159: {
        goto -> bb85;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb160: {
        goto -> bb98;                    // scope 18 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb161: {
        goto -> bb114;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb162: {
        goto -> bb127;                   // scope 23 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb163: {
        goto -> bb137;                   // scope 25 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:25: 59:90
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:25: 59:90

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:59:25: 59:90
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:59:25: 59:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:59:25: 59:90
        _1 = (move _2, move _4, move _6, const 59_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80

    bb0: {
        _1 = [const "[P2pProtocol] Connected to self, address: ", const "."]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:59:31: 59:80
    }
}

promoted[2] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:25: 67:92
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:25: 67:92

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:67:25: 67:92
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:25: 67:92
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:67:25: 67:92
        _1 = (move _2, move _4, move _6, const 67_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75

    bb0: {
        _1 = [const "[P2pProtocol] Dialed Error in ", const " : ", const "."]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:67:31: 67:75
    }
}

promoted[5] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:51:25: 54:26
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:51:25: 54:26

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:51:25: 54:26
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:51:25: 54:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:51:25: 54:26
        _1 = (move _2, move _4, move _6, const 51_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96

    bb0: {
        _1 = [const "[P2pProtocol] Connected to the same node : ", const ", session id: "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:52:29: 52:96
    }
}

promoted[8] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:73:17: 76:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:73:17: 76:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:73:17: 76:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:73:17: 76:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:73:17: 76:18
        _1 = (move _2, move _4, move _6, const 73_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75

    bb0: {
        _1 = [const "[P2pProtocol] Listen error on ", const ", error info: "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:74:21: 74:75
    }
}

promoted[11] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:84:17: 87:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:84:17: 87:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:84:17: 87:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:84:17: 87:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:84:17: 87:18
        _1 = (move _2, move _4, move _6, const 84_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100

    bb0: {
        _1 = [const "[P2pProtocol] Protocol Error, stream id: ", const ", protocol id: ", const ", error: "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:85:21: 85:100
    }
}

promoted[14] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[15] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:94:17: 97:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:94:17: 97:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:94:17: 97:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:94:17: 97:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:94:17: 97:18
        _1 = (move _2, move _4, move _6, const 94_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[16] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99

    bb0: {
        _1 = [const "[P2pProtocol] Protocol SelectError, proto_name: ", const ", session_context: ", const "."]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:95:21: 95:99
    }
}

promoted[17] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[18] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:101:17: 104:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:101:17: 104:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:101:17: 104:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:101:17: 104:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:101:17: 104:18
        _1 = (move _2, move _4, move _6, const 101_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[19] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67

    bb0: {
        _1 = [const "[P2pProtocol] SessionTimeout Sessionid ", const " "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:102:21: 102:67
    }
}

promoted[20] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[21] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:113:17: 116:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:113:17: 116:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:113:17: 116:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:113:17: 116:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:113:17: 116:18
        _1 = (move _2, move _4, move _6, const 113_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[22] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82

    bb0: {
        _1 = [const "[P2pProtocol] ServiceError::MuxerError Sessionid ", const "--"]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:114:21: 114:82
    }
}

promoted[23] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[24] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:120:17: 123:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:120:17: 123:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:120:17: 123:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:120:17: 123:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:120:17: 123:18
        _1 = (move _2, move _4, move _6, const 120_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[25] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90

    bb0: {
        _1 = [const "[P2pProtocol] ServiceError::ProtocolHandleError proto_id ", const "--"]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:121:21: 121:90
    }
}

promoted[26] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[27] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:126:17: 129:18
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:126:17: 129:18

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:126:17: 129:18
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:126:17: 129:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:126:17: 129:18
        _1 = (move _2, move _4, move _6, const 126_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[28] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86

    bb0: {
        _1 = [const "[P2pProtocol] ServiceError::SessionBlocked session_context "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:127:21: 127:86
    }
}

promoted[29] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_error: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event(_1: &mut SHandle, _2: &mut ServiceContext, _3: ServiceEvent) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:134:21: 134:30
    debug _env => _2;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:134:32: 134:36
    debug event => _3;                   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:134:59: 134:64
    let mut _0: ();                      // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:134:80: 134:80
    let mut _4: isize;                   // in scope 0 at cita-network/src/p2p_protocol/mod.rs:136:13: 136:58
    let _5: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:136:41: 136:56
    let mut _6: std::option::Option<std::net::SocketAddr>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:137:42: 137:91
    let _7: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:137:66: 137:90
    let _8: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:137:67: 137:90
    let mut _9: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:137:67: 137:82
    let mut _10: isize;                  // in scope 0 at cita-network/src/p2p_protocol/mod.rs:137:24: 137:39
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:27: 139:36
    let _27: &std::net::SocketAddr;      // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:27: 139:36
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
    let _29: &tentacle::SessionId;       // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
    let _30: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
    let mut _31: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:53
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
    let _33: &tentacle::service::SessionType; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
    let _34: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
    let mut _35: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:73
    let mut _36: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
    let _37: &std::option::Option<tentacle::tentacle_secio::PublicKey>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
    let _38: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
    let mut _39: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:93
    let mut _41: tentacle::SessionId;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:43
    let mut _42: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:43
    let mut _43: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:40
    let mut _44: tentacle::service::SessionType; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:43
    let mut _45: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:43
    let mut _46: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:40
    let _47: ();                         // in scope 0 at cita-network/src/p2p_protocol/mod.rs:145:21: 145:70
    let mut _48: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:145:21: 145:70
    let mut _49: node_manager::PendingConnectedNodeReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:145:66: 145:69
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _55: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _56: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _57: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _59: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _60: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
    let mut _61: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _62: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _63: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _64: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
    let _65: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
    let _66: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
    let mut _67: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:40
    let _68: std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:153:42: 153:57
    let mut _70: tentacle::SessionId;    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:70
    let mut _71: &tentacle::context::SessionContext; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:70
    let mut _72: &std::sync::Arc<tentacle::context::SessionContext>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:67
    let _73: ();                         // in scope 0 at cita-network/src/p2p_protocol/mod.rs:155:17: 155:62
    let mut _74: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:155:17: 155:62
    let mut _75: node_manager::DelConnectedNodeReq; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:155:58: 155:61
    let _76: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:157:41: 157:48
    let mut _78: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _79: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _80: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _81: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _82: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _83: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _84: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _85: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _86: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _87: &[&str];                // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
    let mut _88: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _89: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _90: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _91: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:52: 158:59
    let _92: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:52: 158:59
    let _93: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:161:43: 161:50
    let mut _95: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _96: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _97: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _98: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _99: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _100: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _101: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _102: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _103: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _104: &[&str];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
    let mut _105: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _106: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _107: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _108: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:54: 162:61
    let _109: &tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:54: 162:61
    scope 1 {
        debug session_context => _5;     // in scope 1 at cita-network/src/p2p_protocol/mod.rs:136:41: 136:56
        let _50: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug sock_addr => _11;      // in scope 2 at cita-network/src/p2p_protocol/mod.rs:137:29: 137:38
            let _11: std::net::SocketAddr; // in scope 2 at cita-network/src/p2p_protocol/mod.rs:137:29: 137:38
            let _12: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _40: node_manager::PendingConnectedNodeReq; // in scope 2 at cita-network/src/p2p_protocol/mod.rs:140:25: 140:28
            scope 3 {
                debug lvl => _12;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _116: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _117: &[&str; 4]; // in scope 3 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                let mut _118: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug req => _40;        // in scope 4 at cita-network/src/p2p_protocol/mod.rs:140:25: 140:28
            }
        }
        scope 5 {
            debug lvl => _50;            // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _119: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _120: &[&str; 2];    // in scope 5 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
            let mut _121: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 6 {
        debug session_context => _68;    // in scope 6 at cita-network/src/p2p_protocol/mod.rs:153:42: 153:57
        let _69: node_manager::DelConnectedNodeReq; // in scope 6 at cita-network/src/p2p_protocol/mod.rs:154:21: 154:24
        scope 7 {
            debug req => _69;            // in scope 7 at cita-network/src/p2p_protocol/mod.rs:154:21: 154:24
        }
    }
    scope 8 {
        debug address => _76;            // in scope 8 at cita-network/src/p2p_protocol/mod.rs:157:41: 157:48
        let _77: log::Level;             // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 9 {
            debug lvl => _77;            // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _110: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _111: &[&str; 1];    // in scope 9 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
            let mut _112: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }
    scope 10 {
        debug address => _93;            // in scope 10 at cita-network/src/p2p_protocol/mod.rs:161:43: 161:50
        let _94: log::Level;             // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 11 {
            debug lvl => _94;            // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _113: &(&str, &str, &str, u32); // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _114: &[&str; 1];    // in scope 11 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
            let mut _115: &log::LevelFilter; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = discriminant(_3);           // scope 0 at cita-network/src/p2p_protocol/mod.rs:135:15: 135:20
        switchInt(move _4) -> [0: bb38, 1: bb3, 2: bb42, 3: bb1, otherwise: bb2]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:135:9: 135:20
    }

    bb1: {
        _93 = move ((_3 as ListenStarted).0: tentacle::parity_multiaddr::Multiaddr); // scope 0 at cita-network/src/p2p_protocol/mod.rs:161:43: 161:50
        _94 = log::Level::Info;          // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _97 = &_94;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _115 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[5])) }
        _96 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _97, _115) -> [return: bb56, unwind: bb63]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:135:15: 135:20
    }

    bb3: {
        _5 = move ((_3 as SessionOpen).0: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:136:41: 136:56
        _9 = &_5;                        // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:67: 137:82
        _8 = <Arc<SessionContext> as Deref>::deref(move _9) -> [return: bb4, unwind: bb66]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:67: 137:90
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:137:67: 137:90
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = &((*_8).1: tentacle::parity_multiaddr::Multiaddr); // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:66: 137:90
        _6 = multiaddr_to_socketaddr(_7) -> [return: bb5, unwind: bb66]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:42: 137:91
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:137:42: 137:65
                                         // + literal: Const { ty: for<'a> fn(&'a Multiaddr) -> std::option::Option<std::net::SocketAddr> {multiaddr_to_socketaddr}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = discriminant(_6);          // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:24: 137:39
        switchInt(move _10) -> [1: bb6, otherwise: bb26]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:24: 137:39
    }

    bb6: {
        _11 = ((_6 as Some).0: std::net::SocketAddr); // scope 2 at cita-network/src/p2p_protocol/mod.rs:137:29: 137:38
        _12 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _15 = &_12;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _118 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[8])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _118) -> [return: bb10, unwind: bb66]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _13 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _17 = &_12;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> [return: bb11, unwind: bb66]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _13) -> [0: bb22, otherwise: bb13]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        switchInt(move _14) -> [0: bb7, otherwise: bb8]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _18 = &_19;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> [return: bb12, unwind: bb66]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _13 = move _16;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _117 = const _;                  // scope 3 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[7])) }
        _22 = _117 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
        _27 = &_11;                      // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:27: 139:36
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>(_27) -> [return: bb14, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:27: 139:36
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:27: 139:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::net::SocketAddr>}, val: Value(<ZST>) }
    }

    bb14: {
        _31 = &_5;                       // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:53
        _30 = <Arc<SessionContext> as Deref>::deref(move _31) -> [return: bb15, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = &((*_30).0: tentacle::SessionId); // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>(_29) -> [return: bb16, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:38: 139:56
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b SessionId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<SessionId>}, val: Value(<ZST>) }
    }

    bb16: {
        _35 = &_5;                       // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:73
        _34 = <Arc<SessionContext> as Deref>::deref(move _35) -> [return: bb17, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb17: {
        _33 = &((*_34).2: tentacle::service::SessionType); // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
        _32 = core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::service::SessionType>(_33) -> [return: bb18, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:58: 139:76
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b tentacle::service::SessionType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<tentacle::service::SessionType>}, val: Value(<ZST>) }
    }

    bb18: {
        _39 = &_5;                       // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:93
        _38 = <Arc<SessionContext> as Deref>::deref(move _39) -> [return: bb19, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb19: {
        _37 = &((*_38).3: std::option::Option<tentacle::tentacle_secio::PublicKey>); // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
        _36 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<PublicKey>>(_37) -> [return: bb20, unwind: bb66]; // scope 3 at cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:139:78: 139:107
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<PublicKey>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<PublicKey>>}, val: Value(<ZST>) }
    }

    bb20: {
        _25 = [move _26, move _28, move _32, move _36]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = &_25;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> [return: bb21, unwind: bb66]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        _116 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[6])) }
        _20 = log::__private_api_log(move _21, _12, _116) -> [return: bb69, unwind: bb66]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb22: {
        _43 = &_5;                       // scope 2 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:40
        _42 = <Arc<SessionContext> as Deref>::deref(move _43) -> [return: bb23, unwind: bb66]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:43
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:141:25: 141:43
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb23: {
        _41 = ((*_42).0: tentacle::SessionId); // scope 2 at cita-network/src/p2p_protocol/mod.rs:141:25: 141:43
        _46 = &_5;                       // scope 2 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:40
        _45 = <Arc<SessionContext> as Deref>::deref(move _46) -> [return: bb24, unwind: bb66]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:43
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:143:25: 143:43
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb24: {
        _44 = ((*_45).2: tentacle::service::SessionType); // scope 2 at cita-network/src/p2p_protocol/mod.rs:143:25: 143:43
        _40 = PendingConnectedNodeReq::new(move _41, _11, move _44) -> [return: bb25, unwind: bb66]; // scope 2 at cita-network/src/p2p_protocol/mod.rs:140:31: 144:22
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:140:31: 140:59
                                         // + literal: Const { ty: fn(SessionId, std::net::SocketAddr, tentacle::service::SessionType) -> PendingConnectedNodeReq {PendingConnectedNodeReq::new}, val: Value(<ZST>) }
    }

    bb25: {
        _48 = &((*_1).0: node_manager::NodesManagerClient); // scope 4 at cita-network/src/p2p_protocol/mod.rs:145:21: 145:70
        _49 = move _40;                  // scope 4 at cita-network/src/p2p_protocol/mod.rs:145:66: 145:69
        _47 = NodesManagerClient::pending_connected_node(move _48, move _49) -> [return: bb70, unwind: bb66]; // scope 4 at cita-network/src/p2p_protocol/mod.rs:145:21: 145:70
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:145:43: 145:65
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, PendingConnectedNodeReq) {NodesManagerClient::pending_connected_node}, val: Value(<ZST>) }
    }

    bb26: {
        _50 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _53 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _121 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[11])) }
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, _121) -> [return: bb30, unwind: bb66]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb27: {
        _51 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb29;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _55 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _57 = log::max_level() -> [return: bb31, unwind: bb66]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb29: {
        switchInt(move _51) -> [0: bb37, otherwise: bb33]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        switchInt(move _52) -> [0: bb27, otherwise: bb28]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        _56 = &_57;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _54 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _55, move _56) -> [return: bb32, unwind: bb66]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb32: {
        _51 = move _54;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb29;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _120 = const _;                  // scope 5 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[10])) }
        _60 = _120 as &[&str] (Pointer(Unsize)); // scope 5 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
        _67 = &_5;                       // scope 5 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:40
        _66 = <Arc<SessionContext> as Deref>::deref(move _67) -> [return: bb34, unwind: bb66]; // scope 5 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb34: {
        _65 = &((*_66).1: tentacle::parity_multiaddr::Multiaddr); // scope 5 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
        _64 = core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>(_65) -> [return: bb35, unwind: bb66]; // scope 5 at cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:149:25: 149:48
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b Multiaddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>}, val: Value(<ZST>) }
    }

    bb35: {
        _63 = [move _64];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _62 = &_63;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _61 = _62 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _59 = Arguments::<'_>::new_v1(move _60, move _61) -> [return: bb36, unwind: bb66]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _119 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[9])) }
        _58 = log::__private_api_log(move _59, _50, _119) -> [return: bb71, unwind: bb66]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb37: {
        drop(_5) -> bb67;                // scope 0 at cita-network/src/p2p_protocol/mod.rs:152:13: 152:14
    }

    bb38: {
        _68 = move ((_3 as SessionClose).0: std::sync::Arc<tentacle::context::SessionContext>); // scope 0 at cita-network/src/p2p_protocol/mod.rs:153:42: 153:57
        _72 = &_68;                      // scope 6 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:67
        _71 = <Arc<SessionContext> as Deref>::deref(move _72) -> [return: bb39, unwind: bb65]; // scope 6 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:70
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:154:52: 154:70
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<SessionContext>) -> &'a <Arc<SessionContext> as Deref>::Target {<Arc<SessionContext> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb39: {
        _70 = ((*_71).0: tentacle::SessionId); // scope 6 at cita-network/src/p2p_protocol/mod.rs:154:52: 154:70
        _69 = DelConnectedNodeReq::new(move _70) -> [return: bb40, unwind: bb65]; // scope 6 at cita-network/src/p2p_protocol/mod.rs:154:27: 154:71
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:154:27: 154:51
                                         // + literal: Const { ty: fn(SessionId) -> DelConnectedNodeReq {DelConnectedNodeReq::new}, val: Value(<ZST>) }
    }

    bb40: {
        _74 = &((*_1).0: node_manager::NodesManagerClient); // scope 7 at cita-network/src/p2p_protocol/mod.rs:155:17: 155:62
        _75 = move _69;                  // scope 7 at cita-network/src/p2p_protocol/mod.rs:155:58: 155:61
        _73 = NodesManagerClient::del_connected_node(move _74, move _75) -> [return: bb41, unwind: bb65]; // scope 7 at cita-network/src/p2p_protocol/mod.rs:155:17: 155:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:155:39: 155:57
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, DelConnectedNodeReq) {NodesManagerClient::del_connected_node}, val: Value(<ZST>) }
    }

    bb41: {
        drop(_68) -> bb67;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:156:13: 156:14
    }

    bb42: {
        _76 = move ((_3 as ListenClose).0: tentacle::parity_multiaddr::Multiaddr); // scope 0 at cita-network/src/p2p_protocol/mod.rs:157:41: 157:48
        _77 = log::Level::Warn;          // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _80 = &_77;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _112 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[2])) }
        _79 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _80, _112) -> [return: bb46, unwind: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb43: {
        _78 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        _82 = &_77;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _84 = log::max_level() -> [return: bb47, unwind: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb45: {
        switchInt(move _78) -> [0: bb52, otherwise: bb49]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb46: {
        switchInt(move _79) -> [0: bb43, otherwise: bb44]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _83 = &_84;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _81 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _82, move _83) -> [return: bb48, unwind: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb48: {
        _78 = move _81;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb45;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb49: {
        _111 = const _;                  // scope 9 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[1])) }
        _87 = _111 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
        _92 = &_76;                      // scope 9 at cita-network/src/p2p_protocol/mod.rs:158:52: 158:59
        _91 = core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>(_92) -> [return: bb50, unwind: bb64]; // scope 9 at cita-network/src/p2p_protocol/mod.rs:158:52: 158:59
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:158:52: 158:59
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b Multiaddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>}, val: Value(<ZST>) }
    }

    bb50: {
        _90 = [move _91];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _89 = &_90;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _88 = _89 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _86 = Arguments::<'_>::new_v1(move _87, move _88) -> [return: bb51, unwind: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb51: {
        _110 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[0])) }
        _85 = log::__private_api_log(move _86, _77, _110) -> [return: bb72, unwind: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb52: {
        drop(_76) -> bb67;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:159:13: 159:14
    }

    bb53: {
        _95 = const false;               // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb55;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb54: {
        _99 = &_94;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _101 = log::max_level() -> [return: bb57, unwind: bb63]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb55: {
        switchInt(move _95) -> [0: bb62, otherwise: bb59]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb56: {
        switchInt(move _96) -> [0: bb53, otherwise: bb54]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb57: {
        _100 = &_101;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _98 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _99, move _100) -> [return: bb58, unwind: bb63]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb58: {
        _95 = move _98;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb55;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        _114 = const _;                  // scope 11 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[4])) }
        _104 = _114 as &[&str] (Pointer(Unsize)); // scope 11 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
        _109 = &_93;                     // scope 11 at cita-network/src/p2p_protocol/mod.rs:162:54: 162:61
        _108 = core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>(_109) -> [return: bb60, unwind: bb63]; // scope 11 at cita-network/src/p2p_protocol/mod.rs:162:54: 162:61
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:162:54: 162:61
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b Multiaddr) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Multiaddr>}, val: Value(<ZST>) }
    }

    bb60: {
        _107 = [move _108];              // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _106 = &_107;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _105 = _106 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _103 = Arguments::<'_>::new_v1(move _104, move _105) -> [return: bb61, unwind: bb63]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb61: {
        _113 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(<SHandle as ServiceHandle>::handle_event, [], Some(promoted[3])) }
        _102 = log::__private_api_log(move _103, _94, _113) -> [return: bb73, unwind: bb63]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb62: {
        drop(_93) -> bb67;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:163:13: 163:14
    }

    bb63 (cleanup): {
        drop(_93) -> bb68;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:163:13: 163:14
    }

    bb64 (cleanup): {
        drop(_76) -> bb68;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:159:13: 159:14
    }

    bb65 (cleanup): {
        drop(_68) -> bb68;               // scope 0 at cita-network/src/p2p_protocol/mod.rs:156:13: 156:14
    }

    bb66 (cleanup): {
        drop(_5) -> bb68;                // scope 0 at cita-network/src/p2p_protocol/mod.rs:152:13: 152:14
    }

    bb67: {
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:165:6: 165:6
    }

    bb68 (cleanup): {
        resume;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:134:5: 165:6
    }

    bb69: {
        goto -> bb22;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb70: {
        goto -> bb37;                    // scope 4 at cita-network/src/p2p_protocol/mod.rs:145:21: 145:70
    }

    bb71: {
        goto -> bb37;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb72: {
        goto -> bb52;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb73: {
        goto -> bb62;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:17: 158:60
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:17: 158:60

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:158:17: 158:60
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:158:17: 158:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:158:17: 158:60
        _1 = (move _2, move _4, move _6, const 158_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50

    bb0: {
        _1 = [const "ListenClose, address "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:158:23: 158:50
    }
}

promoted[2] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:17: 162:62
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:17: 162:62

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:162:17: 162:62
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:162:17: 162:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:162:17: 162:62
        _1 = (move _2, move _4, move _6, const 162_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52

    bb0: {
        _1 = [const "ListenStarted, address "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:162:23: 162:52
    }
}

promoted[5] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:138:21: 139:108
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:138:21: 139:108

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:138:21: 139:108
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:21: 139:108
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:138:21: 139:108
        _1 = (move _2, move _4, move _6, const 138_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111

    bb0: {
        _1 = [const "[P2pProtocol] Service open on : ", const ", session id: ", const ", ty: ", const ", public_key: "]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:138:27: 138:111
    }
}

promoted[8] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:147:21: 150:22
    let mut _7: &str;                    // in scope 0 at cita-network/src/p2p_protocol/mod.rs:147:21: 150:22

    bb0: {
        _3 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::p2p_protocol"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/p2p_protocol/mod.rs"; // scope 0 at cita-network/src/p2p_protocol/mod.rs:147:21: 150:22
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:147:21: 150:22
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/p2p_protocol/mod.rs:147:21: 150:22
        _1 = (move _2, move _4, move _6, const 147_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85

    bb0: {
        _1 = [const "[P2pProtocol] Service open multiaddr ", const " transform failed"]; // scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
        return;                          // scope 0 at cita-network/src/p2p_protocol/mod.rs:148:25: 148:85
    }
}

promoted[11] in p2p_protocol::<impl at cita-network/src/p2p_protocol/mod.rs:41:1: 41:31>::handle_event: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

const SYNC_STEP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at cita-network/src/synchronizer.rs:30:18: 30:21

    bb0: {
        _0 = const 20_u64;               // scope 0 at cita-network/src/synchronizer.rs:30:24: 30:26
        return;                          // scope 0 at cita-network/src/synchronizer.rs:30:1: 30:27
    }
}

const SYNC_TIME_OUT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at cita-network/src/synchronizer.rs:31:22: 31:25

    bb0: {
        _0 = const 9_u64;                // scope 0 at cita-network/src/synchronizer.rs:31:28: 31:29
        return;                          // scope 0 at cita-network/src/synchronizer.rs:31:1: 31:30
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::new(_1: MqAgentClient, _2: NodesManagerClient) -> synchronizer::Synchronizer {
    debug mq_client => _1;               // in scope 0 at cita-network/src/synchronizer.rs:56:16: 56:25
    debug nodes_mgr_client => _2;        // in scope 0 at cita-network/src/synchronizer.rs:56:42: 56:58
    let mut _0: synchronizer::Synchronizer; // return place in scope 0 at cita-network/src/synchronizer.rs:56:83: 56:87
    let _3: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:57:14: 57:16
    let _4: pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:57:18: 57:20
    let mut _5: (pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>, pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>); // in scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
    let mut _7: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:58:46: 58:48
    let mut _8: mq_agent::MqAgentClient; // in scope 0 at cita-network/src/synchronizer.rs:60:13: 60:22
    let mut _9: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/synchronizer.rs:61:13: 61:29
    let mut _10: libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:62:29: 62:42
    let mut _11: libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:63:28: 63:41
    let mut _12: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:64:34: 64:49
    let mut _13: std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:67:26: 67:41
    let mut _14: rand::ThreadRng;        // in scope 0 at cita-network/src/synchronizer.rs:68:19: 68:31
    let mut _15: std::time::Instant;     // in scope 0 at cita-network/src/synchronizer.rs:69:35: 69:88
    let mut _16: std::time::Instant;     // in scope 0 at cita-network/src/synchronizer.rs:69:36: 69:50
    let mut _17: std::time::Duration;    // in scope 0 at cita-network/src/synchronizer.rs:69:53: 69:87
    let mut _18: synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/synchronizer.rs:71:26: 71:32
    let mut _19: pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:72:27: 72:29
    let mut _20: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    let mut _21: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    let mut _22: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    scope 1 {
        debug tx => _3;                  // in scope 1 at cita-network/src/synchronizer.rs:57:14: 57:16
        debug rx => _4;                  // in scope 1 at cita-network/src/synchronizer.rs:57:18: 57:20
        let _6: synchronizer::SynchronizerClient; // in scope 1 at cita-network/src/synchronizer.rs:58:13: 58:19
        scope 2 {
            debug client => _6;          // in scope 2 at cita-network/src/synchronizer.rs:58:13: 58:19
        }
    }

    bb0: {
        _22 = const false;               // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
        _21 = const false;               // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
        _20 = const false;               // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
        _22 = const true;                // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
        _21 = const true;                // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
        _5 = pubsub::crossbeam_channel::unbounded::<SynchronizerMessage>() -> [return: bb1, unwind: bb25]; // scope 0 at cita-network/src/synchronizer.rs:57:24: 57:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:57:24: 57:33
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<SynchronizerMessage>, pubsub::crossbeam_channel::Receiver<SynchronizerMessage>) {pubsub::crossbeam_channel::unbounded::<SynchronizerMessage>}, val: Value(<ZST>) }
    }

    bb1: {
        _20 = const true;                // scope 0 at cita-network/src/synchronizer.rs:57:14: 57:16
        _3 = move (_5.0: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>); // scope 0 at cita-network/src/synchronizer.rs:57:14: 57:16
        _4 = move (_5.1: pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>); // scope 0 at cita-network/src/synchronizer.rs:57:18: 57:20
        _20 = const false;               // scope 1 at cita-network/src/synchronizer.rs:58:46: 58:48
        _7 = move _3;                    // scope 1 at cita-network/src/synchronizer.rs:58:46: 58:48
        _6 = SynchronizerClient::new(move _7) -> [return: bb2, unwind: bb19]; // scope 1 at cita-network/src/synchronizer.rs:58:22: 58:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:58:22: 58:45
                                         // + literal: Const { ty: fn(pubsub::crossbeam_channel::Sender<SynchronizerMessage>) -> SynchronizerClient {SynchronizerClient::new}, val: Value(<ZST>) }
    }

    bb2: {
        _22 = const false;               // scope 2 at cita-network/src/synchronizer.rs:60:13: 60:22
        _8 = move _1;                    // scope 2 at cita-network/src/synchronizer.rs:60:13: 60:22
        _21 = const false;               // scope 2 at cita-network/src/synchronizer.rs:61:13: 61:29
        _9 = move _2;                    // scope 2 at cita-network/src/synchronizer.rs:61:13: 61:29
        _10 = libproto::Status::new() -> [return: bb3, unwind: bb16]; // scope 2 at cita-network/src/synchronizer.rs:62:29: 62:42
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:62:29: 62:40
                                         // + literal: Const { ty: fn() -> libproto::Status {libproto::Status::new}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = libproto::Status::new() -> [return: bb4, unwind: bb15]; // scope 2 at cita-network/src/synchronizer.rs:63:28: 63:41
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:63:28: 63:39
                                         // + literal: Const { ty: fn() -> libproto::Status {libproto::Status::new}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = BTreeMap::<u64, VecDeque<u32>>::new() -> [return: bb5, unwind: bb14]; // scope 2 at cita-network/src/synchronizer.rs:64:34: 64:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:64:34: 64:47
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> BTreeMap<u64, VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::new}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = BTreeMap::<u64, libproto::Block>::new() -> [return: bb6, unwind: bb13]; // scope 2 at cita-network/src/synchronizer.rs:67:26: 67:41
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:67:26: 67:39
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> BTreeMap<u64, libproto::Block> {BTreeMap::<u64, libproto::Block>::new}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = thread_rng() -> [return: bb7, unwind: bb12]; // scope 2 at cita-network/src/synchronizer.rs:68:19: 68:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:68:19: 68:29
                                         // + literal: Const { ty: fn() -> ThreadRng {thread_rng}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = Instant::now() -> [return: bb8, unwind: bb11]; // scope 2 at cita-network/src/synchronizer.rs:69:36: 69:50
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:69:36: 69:48
                                         // + literal: Const { ty: fn() -> Instant {Instant::now}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = Duration::from_secs(const _) -> [return: bb9, unwind: bb11]; // scope 2 at cita-network/src/synchronizer.rs:69:53: 69:87
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:69:53: 69:72
                                         // + literal: Const { ty: fn(u64) -> Duration {Duration::from_secs}, val: Value(<ZST>) }
    }

    bb9: {
        _15 = <Instant as Sub<Duration>>::sub(move _16, move _17) -> [return: bb10, unwind: bb11]; // scope 2 at cita-network/src/synchronizer.rs:69:35: 69:88
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:69:35: 69:88
                                         // + literal: Const { ty: fn(Instant, Duration) -> <Instant as Sub<Duration>>::Output {<Instant as Sub<Duration>>::sub}, val: Value(<ZST>) }
    }

    bb10: {
        _18 = move _6;                   // scope 2 at cita-network/src/synchronizer.rs:71:26: 71:32
        _19 = move _4;                   // scope 2 at cita-network/src/synchronizer.rs:72:27: 72:29
        _0 = synchronizer::Synchronizer { mq_client: move _8, nodes_mgr_client: move _9, current_status: move _10, global_status: move _11, sync_end_height: const 0_u64, is_synchronizing: const false, latest_status_lists: move _12, block_lists: move _13, rand: move _14, remote_sync_time_out: move _15, local_sync_count: const 0_u8, sync_client: move _18, msg_receiver: move _19 }; // scope 2 at cita-network/src/synchronizer.rs:59:9: 73:10
        _20 = const false;               // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
        return;                          // scope 0 at cita-network/src/synchronizer.rs:74:6: 74:6
    }

    bb11 (cleanup): {
        drop(_14) -> bb12;               // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb12 (cleanup): {
        drop(_13) -> bb13;               // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb13 (cleanup): {
        drop(_12) -> bb14;               // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb14 (cleanup): {
        drop(_11) -> bb15;               // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb15 (cleanup): {
        drop(_10) -> bb16;               // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb16 (cleanup): {
        drop(_9) -> bb17;                // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb17 (cleanup): {
        drop(_8) -> bb18;                // scope 2 at cita-network/src/synchronizer.rs:73:9: 73:10
    }

    bb18 (cleanup): {
        drop(_6) -> bb19;                // scope 1 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb19 (cleanup): {
        drop(_4) -> bb23;                // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb20 (cleanup): {
        switchInt(_22) -> [0: bb21, otherwise: bb26]; // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:56:5: 74:6
    }

    bb22 (cleanup): {
        drop(_3) -> bb25;                // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb23 (cleanup): {
        switchInt(_20) -> [0: bb25, otherwise: bb22]; // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb24 (cleanup): {
        drop(_2) -> bb20;                // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb25 (cleanup): {
        switchInt(_21) -> [0: bb20, otherwise: bb24]; // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }

    bb26 (cleanup): {
        drop(_1) -> bb21;                // scope 0 at cita-network/src/synchronizer.rs:74:5: 74:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::run(_1: &mut synchronizer::Synchronizer) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:76:16: 76:25
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:76:27: 76:27
    let mut _2: std::result::Result<synchronizer::SynchronizerMessage, pubsub::crossbeam_channel::RecvError>; // in scope 0 at cita-network/src/synchronizer.rs:78:30: 78:54
    let mut _3: &pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:78:30: 78:54
    let mut _4: isize;                   // in scope 0 at cita-network/src/synchronizer.rs:78:20: 78:27
    let _6: ();                          // in scope 0 at cita-network/src/synchronizer.rs:79:17: 79:33
    let mut _7: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
    let mut _8: isize;                   // in scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
    scope 1 {
        debug msg => _5;                 // in scope 1 at cita-network/src/synchronizer.rs:78:23: 78:26
        let _5: synchronizer::SynchronizerMessage; // in scope 1 at cita-network/src/synchronizer.rs:78:23: 78:26
    }

    bb0: {
        _7 = const false;                // scope 0 at cita-network/src/synchronizer.rs:77:9: 81:10
        goto -> bb1;                     // scope 0 at cita-network/src/synchronizer.rs:77:9: 81:10
    }

    bb1: {
        _3 = &((*_1).12: pubsub::crossbeam_channel::Receiver<synchronizer::SynchronizerMessage>); // scope 1 at cita-network/src/synchronizer.rs:78:30: 78:54
        _7 = const true;                 // scope 1 at cita-network/src/synchronizer.rs:78:30: 78:54
        _2 = pubsub::crossbeam_channel::Receiver::<SynchronizerMessage>::recv(move _3) -> bb2; // scope 1 at cita-network/src/synchronizer.rs:78:30: 78:54
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:78:48: 78:52
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<SynchronizerMessage>) -> Result<SynchronizerMessage, pubsub::crossbeam_channel::RecvError> {pubsub::crossbeam_channel::Receiver::<SynchronizerMessage>::recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = discriminant(_2);           // scope 1 at cita-network/src/synchronizer.rs:78:20: 78:27
        switchInt(move _4) -> [0: bb3, otherwise: bb7]; // scope 1 at cita-network/src/synchronizer.rs:78:20: 78:27
    }

    bb3: {
        _7 = const false;                // scope 1 at cita-network/src/synchronizer.rs:78:23: 78:26
        _5 = move ((_2 as Ok).0: synchronizer::SynchronizerMessage); // scope 1 at cita-network/src/synchronizer.rs:78:23: 78:26
        _6 = SynchronizerMessage::handle(move _5, _1) -> bb7; // scope 1 at cita-network/src/synchronizer.rs:79:17: 79:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:79:21: 79:27
                                         // + literal: Const { ty: for<'a> fn(SynchronizerMessage, &'a mut synchronizer::Synchronizer) {SynchronizerMessage::handle}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = const false;                // scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
        goto -> bb1;                     // scope 0 at cita-network/src/synchronizer.rs:77:9: 81:10
    }

    bb5: {
        switchInt(_7) -> [0: bb4, otherwise: bb6]; // scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
    }

    bb6: {
        drop(((_2 as Ok).0: synchronizer::SynchronizerMessage)) -> bb4; // scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
    }

    bb7: {
        _8 = discriminant(_2);           // scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
        switchInt(move _8) -> [0: bb5, otherwise: bb4]; // scope 0 at cita-network/src/synchronizer.rs:81:9: 81:10
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::client(_1: &synchronizer::Synchronizer) -> SynchronizerClient {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:84:19: 84:24
    let mut _0: synchronizer::SynchronizerClient; // return place in scope 0 at cita-network/src/synchronizer.rs:84:29: 84:47
    let mut _2: &synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/synchronizer.rs:85:9: 85:33

    bb0: {
        _2 = &((*_1).11: synchronizer::SynchronizerClient); // scope 0 at cita-network/src/synchronizer.rs:85:9: 85:33
        _0 = <SynchronizerClient as Clone>::clone(move _2) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:85:9: 85:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:85:26: 85:31
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient) -> SynchronizerClient {<SynchronizerClient as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:86:6: 86:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status(_1: &mut synchronizer::Synchronizer, _2: libproto::Status) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:101:34: 101:43
    debug latest_status => _2;           // in scope 0 at cita-network/src/synchronizer.rs:101:45: 101:58
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:101:68: 101:68
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:106:13: 106:39
    let _18: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:106:13: 106:39
    let _19: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:106:13: 106:39
    let mut _20: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:106:13: 106:39
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:107:13: 107:45
    let _22: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:107:13: 107:45
    let _23: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:107:13: 107:45
    let mut _24: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:107:13: 107:45
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:108:13: 108:33
    let _26: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:108:13: 108:33
    let _27: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:110:13: 110:23
    let mut _28: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:110:26: 110:58
    let mut _30: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:111:26: 111:52
    let mut _31: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:113:12: 113:36
    let mut _32: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:113:12: 113:22
    let mut _33: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:113:26: 113:36
    let mut _34: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:114:16: 114:47
    let mut _35: u8;                     // in scope 0 at cita-network/src/synchronizer.rs:114:16: 114:37
    let mut _36: (u8, bool);             // in scope 0 at cita-network/src/synchronizer.rs:116:17: 116:43
    let mut _37: std::time::Instant;     // in scope 0 at cita-network/src/synchronizer.rs:120:41: 120:55
    let mut _38: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:123:36: 125:58
    let mut _39: &mut std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:123:36: 125:58
    let _40: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:125:24: 125:57
    let _41: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:125:25: 125:57
    let mut _42: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:125:26: 125:52
    let mut _43: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:125:26: 125:52
    let mut _44: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:125:25: 125:57
    let mut _45: libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:126:31: 126:44
    let _46: ();                         // in scope 0 at cita-network/src/synchronizer.rs:127:9: 127:32
    let _47: ();                         // in scope 0 at cita-network/src/synchronizer.rs:128:9: 128:52
    let mut _48: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:128:37: 128:51
    let mut _49: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:128:37: 128:47
    let mut _50: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:128:37: 128:51
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _53: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _54: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _55: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _56: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _57: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _59: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _60: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _61: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62
    let mut _62: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _63: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _64: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _65: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:132:13: 132:23
    let _66: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:132:13: 132:23
    let mut _67: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:133:13: 133:33
    let _68: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:133:13: 133:33
    let mut _69: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:134:13: 134:44
    let _70: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:134:13: 134:44
    let _71: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:134:13: 134:44
    let mut _72: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:134:13: 134:44
    let mut _73: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:135:13: 135:34
    let _74: &bool;                      // in scope 0 at cita-network/src/synchronizer.rs:135:13: 135:34
    let mut _75: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:138:12: 138:35
    let mut _76: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:138:12: 138:22
    let mut _77: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:138:25: 138:35
    let mut _79: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:140:32: 140:42
    let mut _80: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:140:32: 140:46
    let mut _81: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:142:16: 142:92
    let mut _82: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:142:16: 142:60
    let mut _83: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:142:16: 142:60
    let _84: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:142:46: 142:59
    let mut _85: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:142:64: 142:92
    let mut _86: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:142:65: 142:92
    let mut _87: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:142:65: 142:92
    let _88: ();                         // in scope 0 at cita-network/src/synchronizer.rs:143:17: 143:37
    let _89: ();                         // in scope 0 at cita-network/src/synchronizer.rs:145:17: 145:50
    let mut _90: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:147:19: 147:52
    let mut _91: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:147:19: 147:29
    let mut _92: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:147:32: 147:52
    let mut _94: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _95: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _96: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _97: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _98: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _99: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _100: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _101: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _102: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _103: &[&str];               // in scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84
    let mut _104: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _105: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _106: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _107: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:151:17: 151:27
    let _108: &u64;                      // in scope 0 at cita-network/src/synchronizer.rs:151:17: 151:27
    let mut _109: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:152:17: 152:39
    let _110: &usize;                    // in scope 0 at cita-network/src/synchronizer.rs:152:17: 152:39
    let _111: usize;                     // in scope 0 at cita-network/src/synchronizer.rs:152:17: 152:39
    let mut _112: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:152:17: 152:39
    let mut _113: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:155:16: 157:46
    let mut _114: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:155:16: 156:53
    let mut _115: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:155:16: 155:44
    let mut _116: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:155:17: 155:44
    let mut _117: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:155:17: 155:44
    let mut _118: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:156:20: 156:53
    let mut _119: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:156:20: 156:30
    let mut _120: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:156:33: 156:53
    let mut _121: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:157:20: 157:46
    let mut _122: u8;                    // in scope 0 at cita-network/src/synchronizer.rs:157:20: 157:41
    let _123: ();                        // in scope 0 at cita-network/src/synchronizer.rs:162:17: 162:41
    let mut _124: &mut std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:162:17: 162:41
    let _125: ();                        // in scope 0 at cita-network/src/synchronizer.rs:163:17: 163:52
    let mut _126: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:163:37: 163:51
    let mut _127: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:163:37: 163:47
    let mut _128: (u64, bool);           // in scope 0 at cita-network/src/synchronizer.rs:163:37: 163:51
    let mut _130: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _131: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _132: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _133: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _134: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _135: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _136: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _137: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _138: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _139: &[&str];               // in scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59
    let mut _140: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:168:19: 168:64
    let mut _141: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:168:19: 168:29
    let mut _142: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:168:33: 168:64
    let mut _143: &libproto::Status;     // in scope 0 at cita-network/src/synchronizer.rs:168:33: 168:64
    let mut _144: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:169:16: 169:37
    let _145: ();                        // in scope 0 at cita-network/src/synchronizer.rs:172:17: 172:41
    let mut _146: &mut std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:172:17: 172:41
    let mut _147: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:174:19: 174:63
    let mut _148: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:174:19: 174:29
    let mut _149: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:174:32: 174:63
    let mut _150: &libproto::Status;     // in scope 0 at cita-network/src/synchronizer.rs:174:32: 174:63
    let mut _151: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:177:16: 177:37
    let mut _153: std::option::Option<(&u64, &libproto::Block)>; // in scope 0 at cita-network/src/synchronizer.rs:178:35: 178:65
    let mut _154: std::collections::btree_map::Iter<'_, u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:178:35: 178:58
    let mut _155: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:178:35: 178:58
    let mut _156: isize;                 // in scope 0 at cita-network/src/synchronizer.rs:179:21: 179:38
    let mut _158: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:179:42: 179:49
    let mut _159: (u64, bool);           // in scope 0 at cita-network/src/synchronizer.rs:179:42: 179:53
    let mut _160: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:180:29: 180:39
    let mut _161: (u64, bool);           // in scope 0 at cita-network/src/synchronizer.rs:180:29: 180:43
    let _162: ();                        // in scope 0 at cita-network/src/synchronizer.rs:182:17: 182:43
    let mut _163: u64;                   // in scope 0 at cita-network/src/synchronizer.rs:182:37: 182:42
    let mut _165: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _166: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _167: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _168: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _169: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _170: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _171: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _172: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _173: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _174: &[&str];               // in scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40
    let mut _190: bool;                  // in scope 0 at cita-network/src/synchronizer.rs:187:5: 187:6
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _187: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _188: &[&str; 3];        // in scope 1 at cita-network/src/synchronizer.rs:103:13: 105:35
        let mut _189: &log::LevelFilter; // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug old_height => _27;         // in scope 2 at cita-network/src/synchronizer.rs:110:13: 110:23
        let _29: u64;                    // in scope 2 at cita-network/src/synchronizer.rs:111:13: 111:23
        scope 3 {
            debug new_height => _29;     // in scope 3 at cita-network/src/synchronizer.rs:111:13: 111:23
            let _51: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _78: u64;                // in scope 3 at cita-network/src/synchronizer.rs:140:17: 140:29
            let _93: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _129: log::Level;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _152: u64;               // in scope 3 at cita-network/src/synchronizer.rs:178:21: 178:26
            let _157: &u64;              // in scope 3 at cita-network/src/synchronizer.rs:179:27: 179:33
            let _164: log::Level;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 4 {
                debug lvl => _51;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _184: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _185: &[&str; 4]; // in scope 4 at cita-network/src/synchronizer.rs:131:13: 131:62
                let mut _186: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug start_height => _78; // in scope 5 at cita-network/src/synchronizer.rs:140:17: 140:29
            }
            scope 6 {
                debug lvl => _93;        // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _181: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _182: &[&str; 2]; // in scope 6 at cita-network/src/synchronizer.rs:150:17: 150:84
                let mut _183: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 7 {
                debug lvl => _129;       // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _178: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _179: &[&str; 1]; // in scope 7 at cita-network/src/synchronizer.rs:164:23: 164:59
                let mut _180: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 8 {
                debug start => _152;     // in scope 8 at cita-network/src/synchronizer.rs:178:21: 178:26
            }
            scope 9 {
                debug height => _157;    // in scope 9 at cita-network/src/synchronizer.rs:179:27: 179:33
            }
            scope 10 {
                debug lvl => _164;       // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _175: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _176: &[&str; 1]; // in scope 10 at cita-network/src/synchronizer.rs:185:19: 185:40
                let mut _177: &log::LevelFilter; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _190 = const false;              // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _190 = const true;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _3 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _189 = const _;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[14])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _189) -> [return: bb4, unwind: bb118]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> [return: bb5, unwind: bb118]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb14, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> [return: bb6, unwind: bb118]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _188 = const _;                  // scope 1 at cita-network/src/synchronizer.rs:103:13: 105:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:103:13: 105:35
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[13])) }
        _13 = _188 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:103:13: 105:35
        _20 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:106:13: 106:39
        _19 = libproto::Status::get_height(move _20) -> [return: bb8, unwind: bb118]; // scope 1 at cita-network/src/synchronizer.rs:106:13: 106:39
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:106:27: 106:37
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb8: {
        _18 = &_19;                      // scope 1 at cita-network/src/synchronizer.rs:106:13: 106:39
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_18) -> [return: bb9, unwind: bb118]; // scope 1 at cita-network/src/synchronizer.rs:106:13: 106:39
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:106:13: 106:39
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:107:13: 107:45
        _23 = libproto::Status::get_height(move _24) -> [return: bb10, unwind: bb118]; // scope 1 at cita-network/src/synchronizer.rs:107:13: 107:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:107:33: 107:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = &_23;                      // scope 1 at cita-network/src/synchronizer.rs:107:13: 107:45
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_22) -> [return: bb11, unwind: bb118]; // scope 1 at cita-network/src/synchronizer.rs:107:13: 107:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:107:13: 107:45
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = &((*_1).4: u64);           // scope 1 at cita-network/src/synchronizer.rs:108:13: 108:33
        _25 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_26) -> [return: bb12, unwind: bb118]; // scope 1 at cita-network/src/synchronizer.rs:108:13: 108:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:108:13: 108:33
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb12: {
        _16 = [move _17, move _21, move _25]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb13, unwind: bb118]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _187 = const _;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[12])) }
        _11 = log::__private_api_log(move _12, _3, _187) -> [return: bb119, unwind: bb118]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _28 = &((*_1).2: libproto::Status); // scope 0 at cita-network/src/synchronizer.rs:110:26: 110:58
        _27 = libproto::Status::get_height(move _28) -> [return: bb15, unwind: bb118]; // scope 0 at cita-network/src/synchronizer.rs:110:26: 110:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:110:46: 110:56
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb15: {
        _30 = &_2;                       // scope 2 at cita-network/src/synchronizer.rs:111:26: 111:52
        _29 = libproto::Status::get_height(move _30) -> [return: bb16, unwind: bb118]; // scope 2 at cita-network/src/synchronizer.rs:111:26: 111:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:111:40: 111:50
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb16: {
        _32 = _29;                       // scope 3 at cita-network/src/synchronizer.rs:113:12: 113:22
        _33 = _27;                       // scope 3 at cita-network/src/synchronizer.rs:113:26: 113:36
        _31 = Eq(move _32, move _33);    // scope 3 at cita-network/src/synchronizer.rs:113:12: 113:36
        switchInt(move _31) -> [0: bb20, otherwise: bb17]; // scope 3 at cita-network/src/synchronizer.rs:113:12: 113:36
    }

    bb17: {
        _35 = ((*_1).10: u8);            // scope 3 at cita-network/src/synchronizer.rs:114:16: 114:37
        _34 = Lt(move _35, const _);     // scope 3 at cita-network/src/synchronizer.rs:114:16: 114:47
        switchInt(move _34) -> [0: bb22, otherwise: bb18]; // scope 3 at cita-network/src/synchronizer.rs:114:16: 114:47
    }

    bb18: {
        _36 = CheckedAdd(((*_1).10: u8), const 1_u8); // scope 3 at cita-network/src/synchronizer.rs:116:17: 116:43
        assert(!move (_36.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).10: u8), const 1_u8) -> [success: bb19, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:116:17: 116:43
    }

    bb19: {
        ((*_1).10: u8) = move (_36.0: u8); // scope 3 at cita-network/src/synchronizer.rs:116:17: 116:43
        goto -> bb22;                    // scope 3 at cita-network/src/synchronizer.rs:114:13: 117:14
    }

    bb20: {
        ((*_1).10: u8) = const 0_u8;     // scope 3 at cita-network/src/synchronizer.rs:119:13: 119:38
        _37 = Instant::now() -> [return: bb21, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:120:41: 120:55
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:120:41: 120:53
                                         // + literal: Const { ty: fn() -> Instant {Instant::now}, val: Value(<ZST>) }
    }

    bb21: {
        ((*_1).9: std::time::Instant) = move _37; // scope 3 at cita-network/src/synchronizer.rs:120:13: 120:55
        goto -> bb22;                    // scope 3 at cita-network/src/synchronizer.rs:113:9: 121:10
    }

    bb22: {
        _39 = &mut ((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>); // scope 3 at cita-network/src/synchronizer.rs:123:36: 125:58
        _43 = &_2;                       // scope 3 at cita-network/src/synchronizer.rs:125:26: 125:52
        _42 = libproto::Status::get_height(move _43) -> [return: bb23, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:125:26: 125:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:125:40: 125:50
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb23: {
        _44 = CheckedAdd(_42, const 1_u64); // scope 3 at cita-network/src/synchronizer.rs:125:25: 125:57
        assert(!move (_44.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, const 1_u64) -> [success: bb24, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:125:25: 125:57
    }

    bb24: {
        _41 = move (_44.0: u64);         // scope 3 at cita-network/src/synchronizer.rs:125:25: 125:57
        _40 = &_41;                      // scope 3 at cita-network/src/synchronizer.rs:125:24: 125:57
        _38 = BTreeMap::<u64, VecDeque<u32>>::split_off::<u64>(move _39, _40) -> [return: bb25, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:123:36: 125:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:125:14: 125:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<u64, VecDeque<u32>>, &'b u64) -> BTreeMap<u64, VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::split_off::<u64>}, val: Value(<ZST>) }
    }

    bb25: {
        drop(((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>)) -> [return: bb26, unwind: bb27]; // scope 3 at cita-network/src/synchronizer.rs:123:9: 123:33
    }

    bb26: {
        ((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>) = move _38; // scope 3 at cita-network/src/synchronizer.rs:123:9: 123:33
        _190 = const false;              // scope 3 at cita-network/src/synchronizer.rs:126:31: 126:44
        _45 = move _2;                   // scope 3 at cita-network/src/synchronizer.rs:126:31: 126:44
        drop(((*_1).2: libproto::Status)) -> [return: bb28, unwind: bb29]; // scope 3 at cita-network/src/synchronizer.rs:126:9: 126:28
    }

    bb27 (cleanup): {
        ((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>) = move _38; // scope 3 at cita-network/src/synchronizer.rs:123:9: 123:33
        goto -> bb118;                   // scope 3 at cita-network/src/synchronizer.rs:125:57: 125:58
    }

    bb28: {
        ((*_1).2: libproto::Status) = move _45; // scope 3 at cita-network/src/synchronizer.rs:126:9: 126:28
        _46 = synchronizer::Synchronizer::broadcast_status(_1) -> [return: bb30, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:127:9: 127:32
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:127:14: 127:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer) {synchronizer::Synchronizer::broadcast_status}, val: Value(<ZST>) }
    }

    bb29 (cleanup): {
        ((*_1).2: libproto::Status) = move _45; // scope 3 at cita-network/src/synchronizer.rs:126:9: 126:28
        goto -> bb118;                   // scope 3 at cita-network/src/synchronizer.rs:126:43: 126:44
    }

    bb30: {
        _49 = _29;                       // scope 3 at cita-network/src/synchronizer.rs:128:37: 128:47
        _50 = CheckedAdd(_49, const 1_u64); // scope 3 at cita-network/src/synchronizer.rs:128:37: 128:51
        assert(!move (_50.1: bool), "attempt to compute `{} + {}`, which would overflow", move _49, const 1_u64) -> [success: bb31, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:128:37: 128:51
    }

    bb31: {
        _48 = move (_50.0: u64);         // scope 3 at cita-network/src/synchronizer.rs:128:37: 128:51
        _47 = synchronizer::Synchronizer::prune_block_list_cache(_1, move _48) -> [return: bb32, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:128:9: 128:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:128:14: 128:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::prune_block_list_cache}, val: Value(<ZST>) }
    }

    bb32: {
        _51 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _54 = &_51;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _186 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[11])) }
        _53 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _54, _186) -> [return: bb36, unwind: bb118]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _52 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _56 = &_51;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _58 = log::max_level() -> [return: bb37, unwind: bb118]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _52) -> [0: bb46, otherwise: bb39]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        switchInt(move _53) -> [0: bb33, otherwise: bb34]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        _57 = &_58;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _55 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _56, move _57) -> [return: bb38, unwind: bb118]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb38: {
        _52 = move _55;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _185 = const _;                  // scope 4 at cita-network/src/synchronizer.rs:131:13: 131:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:131:13: 131:62
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[10])) }
        _61 = _185 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/synchronizer.rs:131:13: 131:62
        _66 = &_29;                      // scope 4 at cita-network/src/synchronizer.rs:132:13: 132:23
        _65 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_66) -> [return: bb40, unwind: bb118]; // scope 4 at cita-network/src/synchronizer.rs:132:13: 132:23
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:132:13: 132:23
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb40: {
        _68 = &((*_1).4: u64);           // scope 4 at cita-network/src/synchronizer.rs:133:13: 133:33
        _67 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_68) -> [return: bb41, unwind: bb118]; // scope 4 at cita-network/src/synchronizer.rs:133:13: 133:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:133:13: 133:33
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb41: {
        _72 = &((*_1).3: libproto::Status); // scope 4 at cita-network/src/synchronizer.rs:134:13: 134:44
        _71 = libproto::Status::get_height(move _72) -> [return: bb42, unwind: bb118]; // scope 4 at cita-network/src/synchronizer.rs:134:13: 134:44
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:134:32: 134:42
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb42: {
        _70 = &_71;                      // scope 4 at cita-network/src/synchronizer.rs:134:13: 134:44
        _69 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_70) -> [return: bb43, unwind: bb118]; // scope 4 at cita-network/src/synchronizer.rs:134:13: 134:44
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:134:13: 134:44
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb43: {
        _74 = &((*_1).5: bool);          // scope 4 at cita-network/src/synchronizer.rs:135:13: 135:34
        _73 = core::fmt::ArgumentV1::<'_>::new_display::<bool>(_74) -> [return: bb44, unwind: bb118]; // scope 4 at cita-network/src/synchronizer.rs:135:13: 135:34
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:135:13: 135:34
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b bool) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<bool>}, val: Value(<ZST>) }
    }

    bb44: {
        _64 = [move _65, move _67, move _69, move _73]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _63 = &_64;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _62 = _63 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _60 = Arguments::<'_>::new_v1(move _61, move _62) -> [return: bb45, unwind: bb118]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb45: {
        _184 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[9])) }
        _59 = log::__private_api_log(move _60, _51, _184) -> [return: bb120, unwind: bb118]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb46: {
        _76 = _29;                       // scope 3 at cita-network/src/synchronizer.rs:138:12: 138:22
        _77 = _27;                       // scope 3 at cita-network/src/synchronizer.rs:138:25: 138:35
        _75 = Lt(move _76, move _77);    // scope 3 at cita-network/src/synchronizer.rs:138:12: 138:35
        switchInt(move _75) -> [0: bb56, otherwise: bb47]; // scope 3 at cita-network/src/synchronizer.rs:138:12: 138:35
    }

    bb47: {
        _79 = _29;                       // scope 3 at cita-network/src/synchronizer.rs:140:32: 140:42
        _80 = CheckedAdd(_79, const 1_u64); // scope 3 at cita-network/src/synchronizer.rs:140:32: 140:46
        assert(!move (_80.1: bool), "attempt to compute `{} + {}`, which would overflow", move _79, const 1_u64) -> [success: bb48, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:140:32: 140:46
    }

    bb48: {
        _78 = move (_80.0: u64);         // scope 3 at cita-network/src/synchronizer.rs:140:32: 140:46
        _83 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:60
        _84 = &_78;                      // scope 5 at cita-network/src/synchronizer.rs:142:46: 142:59
        _82 = BTreeMap::<u64, libproto::Block>::contains_key::<u64>(move _83, _84) -> [return: bb52, unwind: bb118]; // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:60
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:142:33: 142:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<u64, libproto::Block>, &'b u64) -> bool {BTreeMap::<u64, libproto::Block>::contains_key::<u64>}, val: Value(<ZST>) }
    }

    bb49: {
        _81 = const false;               // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
        goto -> bb51;                    // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
    }

    bb50: {
        _87 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 5 at cita-network/src/synchronizer.rs:142:65: 142:92
        _86 = BTreeMap::<u64, libproto::Block>::is_empty(move _87) -> [return: bb53, unwind: bb118]; // scope 5 at cita-network/src/synchronizer.rs:142:65: 142:92
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:142:82: 142:90
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, libproto::Block>) -> bool {BTreeMap::<u64, libproto::Block>::is_empty}, val: Value(<ZST>) }
    }

    bb51: {
        switchInt(move _81) -> [0: bb55, otherwise: bb54]; // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
    }

    bb52: {
        switchInt(move _82) -> [0: bb49, otherwise: bb50]; // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
    }

    bb53: {
        _85 = Not(move _86);             // scope 5 at cita-network/src/synchronizer.rs:142:64: 142:92
        _81 = move _85;                  // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
        goto -> bb51;                    // scope 5 at cita-network/src/synchronizer.rs:142:16: 142:92
    }

    bb54: {
        _88 = synchronizer::Synchronizer::submit_blocks(_1) -> [return: bb121, unwind: bb118]; // scope 5 at cita-network/src/synchronizer.rs:143:17: 143:37
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:143:22: 143:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer) {synchronizer::Synchronizer::submit_blocks}, val: Value(<ZST>) }
    }

    bb55: {
        _89 = synchronizer::Synchronizer::start_sync_req(_1, _78) -> [return: bb122, unwind: bb118]; // scope 5 at cita-network/src/synchronizer.rs:145:17: 145:50
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:145:22: 145:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::start_sync_req}, val: Value(<ZST>) }
    }

    bb56: {
        _91 = _29;                       // scope 3 at cita-network/src/synchronizer.rs:147:19: 147:29
        _92 = ((*_1).4: u64);            // scope 3 at cita-network/src/synchronizer.rs:147:32: 147:52
        _90 = Lt(move _91, move _92);    // scope 3 at cita-network/src/synchronizer.rs:147:19: 147:52
        switchInt(move _90) -> [0: bb90, otherwise: bb57]; // scope 3 at cita-network/src/synchronizer.rs:147:19: 147:52
    }

    bb57: {
        _93 = log::Level::Debug;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _96 = &_93;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _183 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[8])) }
        _95 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _96, _183) -> [return: bb61, unwind: bb118]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb58: {
        _94 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        _98 = &_93;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _100 = log::max_level() -> [return: bb62, unwind: bb118]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb60: {
        switchInt(move _94) -> [0: bb69, otherwise: bb64]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb61: {
        switchInt(move _95) -> [0: bb58, otherwise: bb59]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _99 = &_100;                     // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _97 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _98, move _99) -> [return: bb63, unwind: bb118]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb63: {
        _94 = move _97;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb64: {
        _182 = const _;                  // scope 6 at cita-network/src/synchronizer.rs:150:17: 150:84
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:150:17: 150:84
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[7])) }
        _103 = _182 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/synchronizer.rs:150:17: 150:84
        _108 = &_29;                     // scope 6 at cita-network/src/synchronizer.rs:151:17: 151:27
        _107 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_108) -> [return: bb65, unwind: bb118]; // scope 6 at cita-network/src/synchronizer.rs:151:17: 151:27
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:151:17: 151:27
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb65: {
        _112 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 6 at cita-network/src/synchronizer.rs:152:17: 152:39
        _111 = BTreeMap::<u64, libproto::Block>::len(move _112) -> [return: bb66, unwind: bb118]; // scope 6 at cita-network/src/synchronizer.rs:152:17: 152:39
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:152:34: 152:37
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, libproto::Block>) -> usize {BTreeMap::<u64, libproto::Block>::len}, val: Value(<ZST>) }
    }

    bb66: {
        _110 = &_111;                    // scope 6 at cita-network/src/synchronizer.rs:152:17: 152:39
        _109 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_110) -> [return: bb67, unwind: bb118]; // scope 6 at cita-network/src/synchronizer.rs:152:17: 152:39
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:152:17: 152:39
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb67: {
        _106 = [move _107, move _109];   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _105 = &_106;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _104 = _105 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _102 = Arguments::<'_>::new_v1(move _103, move _104) -> [return: bb68, unwind: bb118]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb68: {
        _181 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[6])) }
        _101 = log::__private_api_log(move _102, _93, _181) -> [return: bb123, unwind: bb118]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb69: {
        _117 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 3 at cita-network/src/synchronizer.rs:155:17: 155:44
        _116 = BTreeMap::<u64, libproto::Block>::is_empty(move _117) -> [return: bb76, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:155:17: 155:44
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:155:34: 155:42
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, libproto::Block>) -> bool {BTreeMap::<u64, libproto::Block>::is_empty}, val: Value(<ZST>) }
    }

    bb70: {
        _113 = const false;              // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
        goto -> bb72;                    // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
    }

    bb71: {
        _122 = ((*_1).10: u8);           // scope 3 at cita-network/src/synchronizer.rs:157:20: 157:41
        _121 = Ge(move _122, const 3_u8); // scope 3 at cita-network/src/synchronizer.rs:157:20: 157:46
        _113 = move _121;                // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
        goto -> bb72;                    // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
    }

    bb72: {
        switchInt(move _113) -> [0: bb89, otherwise: bb77]; // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
    }

    bb73: {
        _114 = const false;              // scope 3 at cita-network/src/synchronizer.rs:155:16: 156:53
        goto -> bb75;                    // scope 3 at cita-network/src/synchronizer.rs:155:16: 156:53
    }

    bb74: {
        _119 = _29;                      // scope 3 at cita-network/src/synchronizer.rs:156:20: 156:30
        _120 = ((*_1).4: u64);           // scope 3 at cita-network/src/synchronizer.rs:156:33: 156:53
        _118 = Lt(move _119, move _120); // scope 3 at cita-network/src/synchronizer.rs:156:20: 156:53
        _114 = move _118;                // scope 3 at cita-network/src/synchronizer.rs:155:16: 156:53
        goto -> bb75;                    // scope 3 at cita-network/src/synchronizer.rs:155:16: 156:53
    }

    bb75: {
        switchInt(move _114) -> [0: bb70, otherwise: bb71]; // scope 3 at cita-network/src/synchronizer.rs:155:16: 157:46
    }

    bb76: {
        _115 = Not(move _116);           // scope 3 at cita-network/src/synchronizer.rs:155:16: 155:44
        switchInt(move _115) -> [0: bb73, otherwise: bb74]; // scope 3 at cita-network/src/synchronizer.rs:155:16: 156:53
    }

    bb77: {
        ((*_1).10: u8) = const 0_u8;     // scope 3 at cita-network/src/synchronizer.rs:161:17: 161:42
        _124 = &mut ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 3 at cita-network/src/synchronizer.rs:162:17: 162:41
        _123 = BTreeMap::<u64, libproto::Block>::clear(move _124) -> [return: bb78, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:162:17: 162:41
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:162:34: 162:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, libproto::Block>) {BTreeMap::<u64, libproto::Block>::clear}, val: Value(<ZST>) }
    }

    bb78: {
        _127 = _29;                      // scope 3 at cita-network/src/synchronizer.rs:163:37: 163:47
        _128 = CheckedAdd(_127, const 1_u64); // scope 3 at cita-network/src/synchronizer.rs:163:37: 163:51
        assert(!move (_128.1: bool), "attempt to compute `{} + {}`, which would overflow", move _127, const 1_u64) -> [success: bb79, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:163:37: 163:51
    }

    bb79: {
        _126 = move (_128.0: u64);       // scope 3 at cita-network/src/synchronizer.rs:163:37: 163:51
        _125 = synchronizer::Synchronizer::start_sync_req(_1, move _126) -> [return: bb80, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:163:17: 163:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:163:22: 163:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::start_sync_req}, val: Value(<ZST>) }
    }

    bb80: {
        _129 = log::Level::Info;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _132 = &_129;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _180 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[5])) }
        _131 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _132, _180) -> [return: bb84, unwind: bb118]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb81: {
        _130 = const false;              // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb83;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb82: {
        _134 = &_129;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _136 = log::max_level() -> [return: bb85, unwind: bb118]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb83: {
        switchInt(move _130) -> [0: bb89, otherwise: bb87]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb84: {
        switchInt(move _131) -> [0: bb81, otherwise: bb82]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb85: {
        _135 = &_136;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _133 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _134, move _135) -> [return: bb86, unwind: bb118]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb86: {
        _130 = move _133;                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb83;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb87: {
        _179 = const _;                  // scope 7 at cita-network/src/synchronizer.rs:164:23: 164:59
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:164:23: 164:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[4])) }
        _139 = _179 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/synchronizer.rs:164:23: 164:59
        _138 = Arguments::<'_>::new_const(move _139) -> [return: bb88, unwind: bb118]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb88: {
        _178 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[3])) }
        _137 = log::__private_api_log(move _138, _129, _178) -> [return: bb124, unwind: bb118]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb89: {
        ((*_1).5: bool) = const true;    // scope 3 at cita-network/src/synchronizer.rs:167:13: 167:41
        goto -> bb115;                   // scope 3 at cita-network/src/synchronizer.rs:147:16: 186:10
    }

    bb90: {
        _141 = _29;                      // scope 3 at cita-network/src/synchronizer.rs:168:19: 168:29
        _143 = &((*_1).3: libproto::Status); // scope 3 at cita-network/src/synchronizer.rs:168:33: 168:64
        _142 = libproto::Status::get_height(move _143) -> [return: bb91, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:168:33: 168:64
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:168:52: 168:62
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb91: {
        _140 = Ge(move _141, move _142); // scope 3 at cita-network/src/synchronizer.rs:168:19: 168:64
        switchInt(move _140) -> [0: bb94, otherwise: bb92]; // scope 3 at cita-network/src/synchronizer.rs:168:19: 168:64
    }

    bb92: {
        _144 = ((*_1).5: bool);          // scope 3 at cita-network/src/synchronizer.rs:169:16: 169:37
        switchInt(move _144) -> [0: bb115, otherwise: bb93]; // scope 3 at cita-network/src/synchronizer.rs:169:16: 169:37
    }

    bb93: {
        ((*_1).5: bool) = const false;   // scope 3 at cita-network/src/synchronizer.rs:170:17: 170:46
        ((*_1).4: u64) = const 0_u64;    // scope 3 at cita-network/src/synchronizer.rs:171:17: 171:41
        _146 = &mut ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 3 at cita-network/src/synchronizer.rs:172:17: 172:41
        _145 = BTreeMap::<u64, libproto::Block>::clear(move _146) -> [return: bb125, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:172:17: 172:41
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:172:34: 172:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, libproto::Block>) {BTreeMap::<u64, libproto::Block>::clear}, val: Value(<ZST>) }
    }

    bb94: {
        _148 = _29;                      // scope 3 at cita-network/src/synchronizer.rs:174:19: 174:29
        _150 = &((*_1).3: libproto::Status); // scope 3 at cita-network/src/synchronizer.rs:174:32: 174:63
        _149 = libproto::Status::get_height(move _150) -> [return: bb95, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:174:32: 174:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:174:51: 174:61
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb95: {
        _147 = Lt(move _148, move _149); // scope 3 at cita-network/src/synchronizer.rs:174:19: 174:63
        switchInt(move _147) -> [0: bb106, otherwise: bb96]; // scope 3 at cita-network/src/synchronizer.rs:174:19: 174:63
    }

    bb96: {
        _151 = ((*_1).5: bool);          // scope 3 at cita-network/src/synchronizer.rs:177:16: 177:37
        switchInt(move _151) -> [0: bb115, otherwise: bb97]; // scope 3 at cita-network/src/synchronizer.rs:177:16: 177:37
    }

    bb97: {
        _155 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 3 at cita-network/src/synchronizer.rs:178:35: 178:58
        _154 = BTreeMap::<u64, libproto::Block>::iter(move _155) -> [return: bb98, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:178:35: 178:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:178:52: 178:56
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, libproto::Block>) -> std::collections::btree_map::Iter<'a, u64, libproto::Block> {BTreeMap::<u64, libproto::Block>::iter}, val: Value(<ZST>) }
    }

    bb98: {
        _153 = <std::collections::btree_map::Iter<'_, u64, libproto::Block> as Iterator>::last(move _154) -> [return: bb99, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:178:35: 178:65
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:178:59: 178:63
                                         // + literal: Const { ty: fn(std::collections::btree_map::Iter<'_, u64, libproto::Block>) -> std::option::Option<<std::collections::btree_map::Iter<'_, u64, libproto::Block> as Iterator>::Item> {<std::collections::btree_map::Iter<'_, u64, libproto::Block> as Iterator>::last}, val: Value(<ZST>) }
    }

    bb99: {
        _156 = discriminant(_153);       // scope 3 at cita-network/src/synchronizer.rs:178:35: 178:65
        switchInt(move _156) -> [0: bb100, 1: bb102, otherwise: bb101]; // scope 3 at cita-network/src/synchronizer.rs:178:29: 178:65
    }

    bb100: {
        _160 = _29;                      // scope 3 at cita-network/src/synchronizer.rs:180:29: 180:39
        _161 = CheckedAdd(_160, const 1_u64); // scope 3 at cita-network/src/synchronizer.rs:180:29: 180:43
        assert(!move (_161.1: bool), "attempt to compute `{} + {}`, which would overflow", move _160, const 1_u64) -> [success: bb104, unwind: bb118]; // scope 3 at cita-network/src/synchronizer.rs:180:29: 180:43
    }

    bb101: {
        unreachable;                     // scope 3 at cita-network/src/synchronizer.rs:178:35: 178:65
    }

    bb102: {
        _157 = (((_153 as Some).0: (&u64, &libproto::Block)).0: &u64); // scope 3 at cita-network/src/synchronizer.rs:179:27: 179:33
        _158 = (*_157);                  // scope 9 at cita-network/src/synchronizer.rs:179:42: 179:49
        _159 = CheckedAdd(_158, const 1_u64); // scope 9 at cita-network/src/synchronizer.rs:179:42: 179:53
        assert(!move (_159.1: bool), "attempt to compute `{} + {}`, which would overflow", move _158, const 1_u64) -> [success: bb103, unwind: bb118]; // scope 9 at cita-network/src/synchronizer.rs:179:42: 179:53
    }

    bb103: {
        _152 = move (_159.0: u64);       // scope 9 at cita-network/src/synchronizer.rs:179:42: 179:53
        goto -> bb105;                   // scope 3 at cita-network/src/synchronizer.rs:179:52: 179:53
    }

    bb104: {
        _152 = move (_161.0: u64);       // scope 3 at cita-network/src/synchronizer.rs:180:29: 180:43
        goto -> bb105;                   // scope 3 at cita-network/src/synchronizer.rs:180:42: 180:43
    }

    bb105: {
        _163 = _152;                     // scope 8 at cita-network/src/synchronizer.rs:182:37: 182:42
        _162 = synchronizer::Synchronizer::start_sync_req(_1, move _163) -> [return: bb126, unwind: bb118]; // scope 8 at cita-network/src/synchronizer.rs:182:17: 182:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:182:22: 182:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::start_sync_req}, val: Value(<ZST>) }
    }

    bb106: {
        _164 = log::Level::Info;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _167 = &_164;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _177 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[2])) }
        _166 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _167, _177) -> [return: bb110, unwind: bb118]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb107: {
        _165 = const false;              // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb109;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb108: {
        _169 = &_164;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _171 = log::max_level() -> [return: bb111, unwind: bb118]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb109: {
        switchInt(move _165) -> [0: bb115, otherwise: bb113]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb110: {
        switchInt(move _166) -> [0: bb107, otherwise: bb108]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb111: {
        _170 = &_171;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _168 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _169, move _170) -> [return: bb112, unwind: bb118]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb112: {
        _165 = move _168;                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb109;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb113: {
        _176 = const _;                  // scope 10 at cita-network/src/synchronizer.rs:185:19: 185:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:185:19: 185:40
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[1])) }
        _174 = _176 as &[&str] (Pointer(Unsize)); // scope 10 at cita-network/src/synchronizer.rs:185:19: 185:40
        _173 = Arguments::<'_>::new_const(move _174) -> [return: bb114, unwind: bb118]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb114: {
        _175 = const _;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_current_status, [], Some(promoted[0])) }
        _172 = log::__private_api_log(move _173, _164, _175) -> [return: bb127, unwind: bb118]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb115: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:187:6: 187:6
    }

    bb116 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:101:5: 187:6
    }

    bb117 (cleanup): {
        drop(_2) -> bb116;               // scope 0 at cita-network/src/synchronizer.rs:187:5: 187:6
    }

    bb118 (cleanup): {
        switchInt(_190) -> [0: bb116, otherwise: bb117]; // scope 0 at cita-network/src/synchronizer.rs:187:5: 187:6
    }

    bb119: {
        goto -> bb14;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb120: {
        goto -> bb46;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb121: {
        goto -> bb115;                   // scope 5 at cita-network/src/synchronizer.rs:143:17: 143:37
    }

    bb122: {
        goto -> bb115;                   // scope 5 at cita-network/src/synchronizer.rs:145:17: 145:50
    }

    bb123: {
        goto -> bb69;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb124: {
        goto -> bb89;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb125: {
        goto -> bb115;                   // scope 3 at cita-network/src/synchronizer.rs:172:17: 172:41
    }

    bb126: {
        goto -> bb115;                   // scope 8 at cita-network/src/synchronizer.rs:182:17: 182:43
    }

    bb127: {
        goto -> bb115;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:185:13: 185:41
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:185:13: 185:41

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:185:13: 185:41
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:185:13: 185:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:185:13: 185:41
        _1 = (move _2, move _4, move _6, const 185_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40

    bb0: {
        _1 = [const "...Can't reach this"]; // scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:185:19: 185:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40
        return;                          // scope 0 at cita-network/src/synchronizer.rs:185:19: 185:40
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:164:17: 164:60
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:164:17: 164:60

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:164:17: 164:60
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:164:17: 164:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:164:17: 164:60
        _1 = (move _2, move _4, move _6, const 164_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59

    bb0: {
        _1 = [const "More than 3 times, clear the cache"]; // scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:164:23: 164:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59
        return;                          // scope 0 at cita-network/src/synchronizer.rs:164:23: 164:59
    }
}

promoted[5] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:149:13: 153:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:149:13: 153:14

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:149:13: 153:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:149:13: 153:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:149:13: 153:14
        _1 = (move _2, move _4, move _6, const 149_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84

    bb0: {
        _1 = [const "Syncing: update_current_status: height = ", const ", block_lists len = "]; // scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:150:17: 150:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:150:17: 150:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84
        return;                          // scope 0 at cita-network/src/synchronizer.rs:150:17: 150:84
    }
}

promoted[8] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:130:9: 136:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:130:9: 136:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:130:9: 136:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:130:9: 136:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:130:9: 136:10
        _1 = (move _2, move _4, move _6, const 130_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62

    bb0: {
        _1 = [const "current: ", const ", sync_end: ", const ", global: ", const ", sync: "]; // scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:131:13: 131:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:131:13: 131:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:131:13: 131:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:131:13: 131:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62
        return;                          // scope 0 at cita-network/src/synchronizer.rs:131:13: 131:62
    }
}

promoted[11] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:102:9: 109:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:102:9: 109:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:102:9: 109:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:102:9: 109:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:102:9: 109:10
        _1 = (move _2, move _4, move _6, const 102_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35

    bb0: {
        _1 = [const "sync: update_current_status: current height = ", const ", before height = ", const ", sync_end_height = "]; // scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:103:13: 105:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:103:13: 105:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:103:13: 105:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35
        return;                          // scope 0 at cita-network/src/synchronizer.rs:103:13: 105:35
    }
}

promoted[14] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_current_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_global_status(_1: &mut synchronizer::Synchronizer, _2: &libproto::Status, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:193:33: 193:42
    debug status => _2;                  // in scope 0 at cita-network/src/synchronizer.rs:193:44: 193:50
    debug origin => _3;                  // in scope 0 at cita-network/src/synchronizer.rs:193:61: 193:67
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:193:74: 193:74
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:196:13: 196:45
    let _19: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:196:13: 196:45
    let _20: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:196:13: 196:45
    let mut _21: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:196:13: 196:45
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:197:13: 197:19
    let _23: &u32;                       // in scope 0 at cita-network/src/synchronizer.rs:197:13: 197:19
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:198:13: 198:32
    let _25: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:198:13: 198:32
    let _26: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:198:13: 198:32
    let _27: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:200:13: 200:27
    let mut _28: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:200:30: 200:62
    let mut _29: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:201:12: 201:65
    let mut _30: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:201:12: 201:43
    let mut _31: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:201:12: 201:43
    let mut _32: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:201:46: 201:65
    let mut _33: libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:202:34: 202:48
    let mut _34: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:205:12: 205:52
    let mut _35: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:205:12: 205:31
    let mut _36: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:205:34: 205:52
    let mut _37: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:205:34: 205:48
    let mut _38: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:205:34: 205:52
    let mut _39: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:207:19: 207:60
    let mut _40: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:207:19: 207:38
    let mut _41: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:207:42: 207:60
    let mut _42: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:207:42: 207:56
    let mut _43: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:207:42: 207:60
    let _44: ();                         // in scope 0 at cita-network/src/synchronizer.rs:209:13: 209:68
    let mut _45: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:209:40: 209:59
    let mut _46: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:211:16: 212:42
    let mut _47: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:211:16: 211:77
    let mut _48: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:211:16: 211:61
    let mut _49: &std::time::Duration;   // in scope 0 at cita-network/src/synchronizer.rs:211:16: 211:61
    let _50: std::time::Duration;        // in scope 0 at cita-network/src/synchronizer.rs:211:16: 211:51
    let mut _51: &std::time::Instant;    // in scope 0 at cita-network/src/synchronizer.rs:211:16: 211:51
    let mut _52: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:212:20: 212:42
    let mut _53: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:212:21: 212:42
    let _54: ();                         // in scope 0 at cita-network/src/synchronizer.rs:214:17: 214:56
    let mut _55: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:214:37: 214:55
    let mut _56: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:214:37: 214:51
    let mut _57: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:214:37: 214:55
    let _58: ();                         // in scope 0 at cita-network/src/synchronizer.rs:218:13: 218:68
    let mut _59: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:218:40: 218:59
    let mut _60: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:220:16: 221:42
    let mut _61: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:220:16: 220:77
    let mut _62: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:220:16: 220:61
    let mut _63: &std::time::Duration;   // in scope 0 at cita-network/src/synchronizer.rs:220:16: 220:61
    let _64: std::time::Duration;        // in scope 0 at cita-network/src/synchronizer.rs:220:16: 220:51
    let mut _65: &std::time::Instant;    // in scope 0 at cita-network/src/synchronizer.rs:220:16: 220:51
    let mut _66: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:221:20: 221:42
    let mut _67: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:221:21: 221:42
    let _68: ();                         // in scope 0 at cita-network/src/synchronizer.rs:223:17: 223:56
    let mut _69: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:223:37: 223:55
    let mut _70: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:223:37: 223:51
    let mut _71: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:223:37: 223:55
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _72: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _73: &[&str; 3];         // in scope 1 at cita-network/src/synchronizer.rs:195:13: 195:91
        let mut _74: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug current_height => _27;     // in scope 2 at cita-network/src/synchronizer.rs:200:13: 200:27
    }

    bb0: {
        _4 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _74 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::update_global_status, [], Some(promoted[2])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _74) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _5) -> [0: bb14, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _6) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _73 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:195:13: 195:91
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:195:13: 195:91
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(synchronizer::Synchronizer::update_global_status, [], Some(promoted[1])) }
        _14 = _73 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:195:13: 195:91
        _21 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:196:13: 196:45
        _20 = libproto::Status::get_height(move _21) -> bb8; // scope 1 at cita-network/src/synchronizer.rs:196:13: 196:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:196:33: 196:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = &_20;                      // scope 1 at cita-network/src/synchronizer.rs:196:13: 196:45
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_19) -> bb9; // scope 1 at cita-network/src/synchronizer.rs:196:13: 196:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:196:13: 196:45
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _23 = &_3;                       // scope 1 at cita-network/src/synchronizer.rs:197:13: 197:19
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_23) -> bb10; // scope 1 at cita-network/src/synchronizer.rs:197:13: 197:19
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:197:13: 197:19
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = libproto::Status::get_height(_2) -> bb11; // scope 1 at cita-network/src/synchronizer.rs:198:13: 198:32
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:198:20: 198:30
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = &_26;                      // scope 1 at cita-network/src/synchronizer.rs:198:13: 198:32
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_25) -> bb12; // scope 1 at cita-network/src/synchronizer.rs:198:13: 198:32
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:198:13: 198:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb12: {
        _17 = [move _18, move _22, move _24]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _72 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::update_global_status, [], Some(promoted[0])) }
        _12 = log::__private_api_log(move _13, _4, _72) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _28 = &((*_1).2: libproto::Status); // scope 0 at cita-network/src/synchronizer.rs:200:30: 200:62
        _27 = libproto::Status::get_height(move _28) -> bb15; // scope 0 at cita-network/src/synchronizer.rs:200:30: 200:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:200:50: 200:60
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = &((*_1).3: libproto::Status); // scope 2 at cita-network/src/synchronizer.rs:201:12: 201:43
        _30 = libproto::Status::get_height(move _31) -> bb16; // scope 2 at cita-network/src/synchronizer.rs:201:12: 201:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:201:31: 201:41
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb16: {
        _32 = libproto::Status::get_height(_2) -> bb17; // scope 2 at cita-network/src/synchronizer.rs:201:46: 201:65
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:201:53: 201:63
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb17: {
        _29 = Lt(move _30, move _32);    // scope 2 at cita-network/src/synchronizer.rs:201:12: 201:65
        switchInt(move _29) -> [0: bb22, otherwise: bb18]; // scope 2 at cita-network/src/synchronizer.rs:201:12: 201:65
    }

    bb18: {
        _33 = <libproto::Status as Clone>::clone(_2) -> bb19; // scope 2 at cita-network/src/synchronizer.rs:202:34: 202:48
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:202:41: 202:46
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> libproto::Status {<libproto::Status as Clone>::clone}, val: Value(<ZST>) }
    }

    bb19: {
        drop(((*_1).3: libproto::Status)) -> [return: bb20, unwind: bb21]; // scope 2 at cita-network/src/synchronizer.rs:202:13: 202:31
    }

    bb20: {
        ((*_1).3: libproto::Status) = move _33; // scope 2 at cita-network/src/synchronizer.rs:202:13: 202:31
        goto -> bb22;                    // scope 2 at cita-network/src/synchronizer.rs:201:9: 203:10
    }

    bb21 (cleanup): {
        ((*_1).3: libproto::Status) = move _33; // scope 2 at cita-network/src/synchronizer.rs:202:13: 202:31
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:193:5: 226:6
    }

    bb22: {
        _35 = libproto::Status::get_height(_2) -> bb23; // scope 2 at cita-network/src/synchronizer.rs:205:12: 205:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:205:19: 205:29
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb23: {
        _37 = _27;                       // scope 2 at cita-network/src/synchronizer.rs:205:34: 205:48
        _38 = CheckedAdd(_37, const 1_u64); // scope 2 at cita-network/src/synchronizer.rs:205:34: 205:52
        assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", move _37, const 1_u64) -> bb24; // scope 2 at cita-network/src/synchronizer.rs:205:34: 205:52
    }

    bb24: {
        _36 = move (_38.0: u64);         // scope 2 at cita-network/src/synchronizer.rs:205:34: 205:52
        _34 = Lt(move _35, move _36);    // scope 2 at cita-network/src/synchronizer.rs:205:12: 205:52
        switchInt(move _34) -> [0: bb25, otherwise: bb48]; // scope 2 at cita-network/src/synchronizer.rs:205:12: 205:52
    }

    bb25: {
        _40 = libproto::Status::get_height(_2) -> bb26; // scope 2 at cita-network/src/synchronizer.rs:207:19: 207:38
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:207:26: 207:36
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb26: {
        _42 = _27;                       // scope 2 at cita-network/src/synchronizer.rs:207:42: 207:56
        _43 = CheckedAdd(_42, const 1_u64); // scope 2 at cita-network/src/synchronizer.rs:207:42: 207:60
        assert(!move (_43.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, const 1_u64) -> bb27; // scope 2 at cita-network/src/synchronizer.rs:207:42: 207:60
    }

    bb27: {
        _41 = move (_43.0: u64);         // scope 2 at cita-network/src/synchronizer.rs:207:42: 207:60
        _39 = Eq(move _40, move _41);    // scope 2 at cita-network/src/synchronizer.rs:207:19: 207:60
        switchInt(move _39) -> [0: bb38, otherwise: bb28]; // scope 2 at cita-network/src/synchronizer.rs:207:19: 207:60
    }

    bb28: {
        _45 = libproto::Status::get_height(_2) -> bb29; // scope 2 at cita-network/src/synchronizer.rs:209:40: 209:59
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:209:47: 209:57
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb29: {
        _44 = synchronizer::Synchronizer::add_latest_sync_lists(_1, move _45, _3) -> bb30; // scope 2 at cita-network/src/synchronizer.rs:209:13: 209:68
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:209:18: 209:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64, u32) {synchronizer::Synchronizer::add_latest_sync_lists}, val: Value(<ZST>) }
    }

    bb30: {
        _51 = &((*_1).9: std::time::Instant); // scope 2 at cita-network/src/synchronizer.rs:211:16: 211:51
        _50 = Instant::elapsed(move _51) -> bb34; // scope 2 at cita-network/src/synchronizer.rs:211:16: 211:51
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:211:42: 211:49
                                         // + literal: Const { ty: for<'a> fn(&'a Instant) -> Duration {Instant::elapsed}, val: Value(<ZST>) }
    }

    bb31: {
        _46 = const false;               // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
        goto -> bb33;                    // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
    }

    bb32: {
        _53 = ((*_1).5: bool);           // scope 2 at cita-network/src/synchronizer.rs:212:21: 212:42
        _52 = Not(move _53);             // scope 2 at cita-network/src/synchronizer.rs:212:20: 212:42
        _46 = move _52;                  // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
        goto -> bb33;                    // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
    }

    bb33: {
        switchInt(move _46) -> [0: bb48, otherwise: bb36]; // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
    }

    bb34: {
        _49 = &_50;                      // scope 2 at cita-network/src/synchronizer.rs:211:16: 211:61
        _48 = Duration::as_secs(move _49) -> bb35; // scope 2 at cita-network/src/synchronizer.rs:211:16: 211:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:211:52: 211:59
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {Duration::as_secs}, val: Value(<ZST>) }
    }

    bb35: {
        _47 = Gt(move _48, const _);     // scope 2 at cita-network/src/synchronizer.rs:211:16: 211:77
        switchInt(move _47) -> [0: bb31, otherwise: bb32]; // scope 2 at cita-network/src/synchronizer.rs:211:16: 212:42
    }

    bb36: {
        _56 = _27;                       // scope 2 at cita-network/src/synchronizer.rs:214:37: 214:51
        _57 = CheckedAdd(_56, const 1_u64); // scope 2 at cita-network/src/synchronizer.rs:214:37: 214:55
        assert(!move (_57.1: bool), "attempt to compute `{} + {}`, which would overflow", move _56, const 1_u64) -> bb37; // scope 2 at cita-network/src/synchronizer.rs:214:37: 214:55
    }

    bb37: {
        _55 = move (_57.0: u64);         // scope 2 at cita-network/src/synchronizer.rs:214:37: 214:55
        _54 = synchronizer::Synchronizer::start_sync_req(_1, move _55) -> bb48; // scope 2 at cita-network/src/synchronizer.rs:214:17: 214:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:214:22: 214:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::start_sync_req}, val: Value(<ZST>) }
    }

    bb38: {
        _59 = libproto::Status::get_height(_2) -> bb39; // scope 2 at cita-network/src/synchronizer.rs:218:40: 218:59
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:218:47: 218:57
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb39: {
        _58 = synchronizer::Synchronizer::add_latest_sync_lists(_1, move _59, _3) -> bb40; // scope 2 at cita-network/src/synchronizer.rs:218:13: 218:68
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:218:18: 218:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64, u32) {synchronizer::Synchronizer::add_latest_sync_lists}, val: Value(<ZST>) }
    }

    bb40: {
        _65 = &((*_1).9: std::time::Instant); // scope 2 at cita-network/src/synchronizer.rs:220:16: 220:51
        _64 = Instant::elapsed(move _65) -> bb44; // scope 2 at cita-network/src/synchronizer.rs:220:16: 220:51
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:220:42: 220:49
                                         // + literal: Const { ty: for<'a> fn(&'a Instant) -> Duration {Instant::elapsed}, val: Value(<ZST>) }
    }

    bb41: {
        _60 = const true;                // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
        goto -> bb43;                    // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
    }

    bb42: {
        _67 = ((*_1).5: bool);           // scope 2 at cita-network/src/synchronizer.rs:221:21: 221:42
        _66 = Not(move _67);             // scope 2 at cita-network/src/synchronizer.rs:221:20: 221:42
        _60 = move _66;                  // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
        goto -> bb43;                    // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
    }

    bb43: {
        switchInt(move _60) -> [0: bb48, otherwise: bb46]; // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
    }

    bb44: {
        _63 = &_64;                      // scope 2 at cita-network/src/synchronizer.rs:220:16: 220:61
        _62 = Duration::as_secs(move _63) -> bb45; // scope 2 at cita-network/src/synchronizer.rs:220:16: 220:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:220:52: 220:59
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {Duration::as_secs}, val: Value(<ZST>) }
    }

    bb45: {
        _61 = Gt(move _62, const _);     // scope 2 at cita-network/src/synchronizer.rs:220:16: 220:77
        switchInt(move _61) -> [0: bb42, otherwise: bb41]; // scope 2 at cita-network/src/synchronizer.rs:220:16: 221:42
    }

    bb46: {
        _70 = _27;                       // scope 2 at cita-network/src/synchronizer.rs:223:37: 223:51
        _71 = CheckedAdd(_70, const 1_u64); // scope 2 at cita-network/src/synchronizer.rs:223:37: 223:55
        assert(!move (_71.1: bool), "attempt to compute `{} + {}`, which would overflow", move _70, const 1_u64) -> bb47; // scope 2 at cita-network/src/synchronizer.rs:223:37: 223:55
    }

    bb47: {
        _69 = move (_71.0: u64);         // scope 2 at cita-network/src/synchronizer.rs:223:37: 223:55
        _68 = synchronizer::Synchronizer::start_sync_req(_1, move _69) -> bb48; // scope 2 at cita-network/src/synchronizer.rs:223:17: 223:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:223:22: 223:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, u64) {synchronizer::Synchronizer::start_sync_req}, val: Value(<ZST>) }
    }

    bb48: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:226:6: 226:6
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_global_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:194:9: 199:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:194:9: 199:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:194:9: 199:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:194:9: 199:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:194:9: 199:10
        _1 = (move _2, move _4, move _6, const 194_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_global_status: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91

    bb0: {
        _1 = [const "sync: update_global_status: current height = ", const ", from node = ", const ", height = "]; // scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:195:13: 195:91
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:195:13: 195:91
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:195:13: 195:91
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91
        return;                          // scope 0 at cita-network/src/synchronizer.rs:195:13: 195:91
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::update_global_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::is_synchronizing(_1: &synchronizer::Synchronizer) -> bool {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:228:29: 228:34
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/synchronizer.rs:228:39: 228:43

    bb0: {
        _0 = ((*_1).5: bool);            // scope 0 at cita-network/src/synchronizer.rs:229:9: 229:30
        return;                          // scope 0 at cita-network/src/synchronizer.rs:230:6: 230:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync(_1: &mut synchronizer::Synchronizer, _2: libproto::SyncResponse) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:232:25: 232:34
    debug blocks => _2;                  // in scope 0 at cita-network/src/synchronizer.rs:232:36: 232:46
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:232:62: 232:62
    let _3: protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:233:13: 233:19
    let mut _4: &mut libproto::SyncResponse; // in scope 0 at cita-network/src/synchronizer.rs:233:22: 233:42
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:234:55: 234:67
    let _20: &usize;                     // in scope 0 at cita-network/src/synchronizer.rs:234:55: 234:67
    let _21: usize;                      // in scope 0 at cita-network/src/synchronizer.rs:234:55: 234:67
    let mut _22: &protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:234:55: 234:67
    let mut _24: std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:237:22: 237:40
    let mut _25: std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:237:22: 237:40
    let mut _26: protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:237:22: 237:28
    let mut _28: std::option::Option<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:237:22: 237:40
    let mut _29: &mut std::vec::IntoIter<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:237:22: 237:40
    let mut _30: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:237:9: 241:10
    let _32: ();                         // in scope 0 at cita-network/src/synchronizer.rs:238:13: 238:58
    let mut _33: &mut std::vec::Vec<u64>; // in scope 0 at cita-network/src/synchronizer.rs:238:13: 238:58
    let mut _34: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:238:26: 238:57
    let mut _35: &libproto::BlockHeader; // in scope 0 at cita-network/src/synchronizer.rs:238:26: 238:57
    let _36: &libproto::BlockHeader;     // in scope 0 at cita-network/src/synchronizer.rs:238:26: 238:44
    let mut _37: &libproto::Block;       // in scope 0 at cita-network/src/synchronizer.rs:238:26: 238:44
    let _38: std::option::Option<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:239:13: 240:64
    let mut _39: &mut std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:239:13: 240:64
    let mut _40: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:240:25: 240:56
    let mut _41: &libproto::BlockHeader; // in scope 0 at cita-network/src/synchronizer.rs:240:25: 240:56
    let _42: &libproto::BlockHeader;     // in scope 0 at cita-network/src/synchronizer.rs:240:25: 240:43
    let mut _43: &libproto::Block;       // in scope 0 at cita-network/src/synchronizer.rs:240:25: 240:43
    let mut _44: libproto::Block;        // in scope 0 at cita-network/src/synchronizer.rs:240:58: 240:63
    let mut _46: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _48: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _49: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _50: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _51: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _52: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _53: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _54: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _55: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52
    let mut _56: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _57: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _58: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _59: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:243:54: 243:61
    let _60: &std::vec::Vec<u64>;        // in scope 0 at cita-network/src/synchronizer.rs:243:54: 243:61
    let _61: ();                         // in scope 0 at cita-network/src/synchronizer.rs:244:9: 244:29
    let mut _68: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:241:9: 241:10
    let mut _69: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
    scope 1 {
        debug blocks => _3;              // in scope 1 at cita-network/src/synchronizer.rs:233:13: 233:19
        let _5: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _23: std::vec::Vec<u64>; // in scope 1 at cita-network/src/synchronizer.rs:236:13: 236:24
        scope 2 {
            debug lvl => _5;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _65: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _66: &[&str; 1];     // in scope 2 at cita-network/src/synchronizer.rs:234:16: 234:53
            let mut _67: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug heights => _23;        // in scope 3 at cita-network/src/synchronizer.rs:236:13: 236:24
            let mut _27: std::vec::IntoIter<libproto::Block>; // in scope 3 at cita-network/src/synchronizer.rs:237:22: 237:40
            let _45: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 4 {
                debug iter => _27;       // in scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
                let _31: libproto::Block; // in scope 4 at cita-network/src/synchronizer.rs:237:13: 237:18
                scope 5 {
                    debug block => _31;  // in scope 5 at cita-network/src/synchronizer.rs:237:13: 237:18
                }
            }
            scope 6 {
                debug lvl => _45;        // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _62: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _63: &[&str; 1]; // in scope 6 at cita-network/src/synchronizer.rs:243:16: 243:52
                let mut _64: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _68 = const false;               // scope 0 at cita-network/src/synchronizer.rs:233:13: 233:19
        _69 = const false;               // scope 0 at cita-network/src/synchronizer.rs:233:13: 233:19
        _4 = &mut _2;                    // scope 0 at cita-network/src/synchronizer.rs:233:22: 233:42
        _3 = libproto::SyncResponse::take_blocks(move _4) -> [return: bb1, unwind: bb44]; // scope 0 at cita-network/src/synchronizer.rs:233:22: 233:42
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:233:29: 233:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncResponse) -> protobuf::repeated::RepeatedField<libproto::Block> {libproto::SyncResponse::take_blocks}, val: Value(<ZST>) }
    }

    bb1: {
        _69 = const true;                // scope 0 at cita-network/src/synchronizer.rs:233:41: 233:42
        _5 = log::Level::Debug;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _8 = &_5;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _67 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[5])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _67) -> [return: bb5, unwind: bb49]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _10 = &_5;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> [return: bb6, unwind: bb49]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _6) -> [0: bb12, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _7) -> [0: bb2, otherwise: bb3]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> [return: bb7, unwind: bb49]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = move _9;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _66 = const _;                   // scope 2 at cita-network/src/synchronizer.rs:234:16: 234:53
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:234:16: 234:53
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[4])) }
        _15 = _66 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/synchronizer.rs:234:16: 234:53
        _22 = &_3;                       // scope 2 at cita-network/src/synchronizer.rs:234:55: 234:67
        _21 = protobuf::repeated::RepeatedField::<libproto::Block>::len(move _22) -> [return: bb9, unwind: bb49]; // scope 2 at cita-network/src/synchronizer.rs:234:55: 234:67
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:234:62: 234:65
                                         // + literal: Const { ty: for<'a> fn(&'a protobuf::repeated::RepeatedField<libproto::Block>) -> usize {protobuf::repeated::RepeatedField::<libproto::Block>::len}, val: Value(<ZST>) }
    }

    bb9: {
        _20 = &_21;                      // scope 2 at cita-network/src/synchronizer.rs:234:55: 234:67
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_20) -> [return: bb10, unwind: bb49]; // scope 2 at cita-network/src/synchronizer.rs:234:55: 234:67
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:234:55: 234:67
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb10: {
        _18 = [move _19];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> [return: bb11, unwind: bb49]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _65 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[3])) }
        _13 = log::__private_api_log(move _14, _5, _65) -> [return: bb50, unwind: bb49]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = Vec::<u64>::new() -> [return: bb13, unwind: bb49]; // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> Vec<u64> {Vec::<u64>::new}, val: Value(<ZST>) }
    }

    bb13: {
        _69 = const false;               // scope 3 at cita-network/src/synchronizer.rs:237:22: 237:28
        _26 = move _3;                   // scope 3 at cita-network/src/synchronizer.rs:237:22: 237:28
        _25 = protobuf::repeated::RepeatedField::<libproto::Block>::into_iter(move _26) -> [return: bb14, unwind: bb43]; // scope 3 at cita-network/src/synchronizer.rs:237:22: 237:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:237:29: 237:38
                                         // + literal: Const { ty: fn(protobuf::repeated::RepeatedField<libproto::Block>) -> std::vec::IntoIter<libproto::Block> {protobuf::repeated::RepeatedField::<libproto::Block>::into_iter}, val: Value(<ZST>) }
    }

    bb14: {
        _24 = <std::vec::IntoIter<libproto::Block> as IntoIterator>::into_iter(move _25) -> [return: bb15, unwind: bb43]; // scope 3 at cita-network/src/synchronizer.rs:237:22: 237:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:237:22: 237:40
                                         // + literal: Const { ty: fn(std::vec::IntoIter<libproto::Block>) -> <std::vec::IntoIter<libproto::Block> as IntoIterator>::IntoIter {<std::vec::IntoIter<libproto::Block> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb15: {
        _27 = move _24;                  // scope 3 at cita-network/src/synchronizer.rs:237:22: 237:40
        goto -> bb16;                    // scope 4 at cita-network/src/synchronizer.rs:237:9: 241:10
    }

    bb16: {
        _29 = &mut _27;                  // scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
        _28 = <std::vec::IntoIter<libproto::Block> as Iterator>::next(_29) -> [return: bb17, unwind: bb42]; // scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:237:22: 237:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<libproto::Block>) -> std::option::Option<<std::vec::IntoIter<libproto::Block> as Iterator>::Item> {<std::vec::IntoIter<libproto::Block> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb17: {
        _30 = discriminant(_28);         // scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
        switchInt(move _30) -> [0: bb20, 1: bb18, otherwise: bb19]; // scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
    }

    bb18: {
        _68 = const true;                // scope 4 at cita-network/src/synchronizer.rs:237:13: 237:18
        _31 = move ((_28 as Some).0: libproto::Block); // scope 4 at cita-network/src/synchronizer.rs:237:13: 237:18
        _33 = &mut _23;                  // scope 5 at cita-network/src/synchronizer.rs:238:13: 238:58
        _37 = &_31;                      // scope 5 at cita-network/src/synchronizer.rs:238:26: 238:44
        _36 = libproto::Block::get_header(move _37) -> [return: bb21, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:238:26: 238:44
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:238:32: 238:42
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> &'a libproto::BlockHeader {libproto::Block::get_header}, val: Value(<ZST>) }
    }

    bb19: {
        unreachable;                     // scope 4 at cita-network/src/synchronizer.rs:237:22: 237:40
    }

    bb20: {
        drop(_27) -> [return: bb28, unwind: bb43]; // scope 3 at cita-network/src/synchronizer.rs:241:9: 241:10
    }

    bb21: {
        _35 = _36;                       // scope 5 at cita-network/src/synchronizer.rs:238:26: 238:57
        _34 = libproto::BlockHeader::get_height(move _35) -> [return: bb22, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:238:26: 238:57
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:238:45: 238:55
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockHeader) -> u64 {libproto::BlockHeader::get_height}, val: Value(<ZST>) }
    }

    bb22: {
        _32 = Vec::<u64>::push(move _33, move _34) -> [return: bb23, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:238:13: 238:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:238:21: 238:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u64>, u64) {Vec::<u64>::push}, val: Value(<ZST>) }
    }

    bb23: {
        _39 = &mut ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 5 at cita-network/src/synchronizer.rs:239:13: 240:64
        _43 = &_31;                      // scope 5 at cita-network/src/synchronizer.rs:240:25: 240:43
        _42 = libproto::Block::get_header(move _43) -> [return: bb24, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:240:25: 240:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:240:31: 240:41
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> &'a libproto::BlockHeader {libproto::Block::get_header}, val: Value(<ZST>) }
    }

    bb24: {
        _41 = _42;                       // scope 5 at cita-network/src/synchronizer.rs:240:25: 240:56
        _40 = libproto::BlockHeader::get_height(move _41) -> [return: bb25, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:240:25: 240:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:240:44: 240:54
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockHeader) -> u64 {libproto::BlockHeader::get_height}, val: Value(<ZST>) }
    }

    bb25: {
        _68 = const false;               // scope 5 at cita-network/src/synchronizer.rs:240:58: 240:63
        _44 = move _31;                  // scope 5 at cita-network/src/synchronizer.rs:240:58: 240:63
        _38 = BTreeMap::<u64, libproto::Block>::insert(move _39, move _40, move _44) -> [return: bb26, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:239:13: 240:64
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:240:18: 240:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, libproto::Block>, u64, libproto::Block) -> std::option::Option<libproto::Block> {BTreeMap::<u64, libproto::Block>::insert}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_38) -> [return: bb27, unwind: bb47]; // scope 5 at cita-network/src/synchronizer.rs:240:64: 240:65
    }

    bb27: {
        _68 = const false;               // scope 4 at cita-network/src/synchronizer.rs:241:9: 241:10
        goto -> bb16;                    // scope 4 at cita-network/src/synchronizer.rs:237:9: 241:10
    }

    bb28: {
        _45 = log::Level::Debug;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _48 = &_45;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _64 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[2])) }
        _47 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _48, _64) -> [return: bb32, unwind: bb43]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _46 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _50 = &_45;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _52 = log::max_level() -> [return: bb33, unwind: bb43]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _46) -> [0: bb38, otherwise: bb35]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        switchInt(move _47) -> [0: bb29, otherwise: bb30]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _51 = &_52;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _49 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _50, move _51) -> [return: bb34, unwind: bb43]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _46 = move _49;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb31;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _63 = const _;                   // scope 6 at cita-network/src/synchronizer.rs:243:16: 243:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:243:16: 243:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[1])) }
        _55 = _63 as &[&str] (Pointer(Unsize)); // scope 6 at cita-network/src/synchronizer.rs:243:16: 243:52
        _60 = &_23;                      // scope 6 at cita-network/src/synchronizer.rs:243:54: 243:61
        _59 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>(_60) -> [return: bb36, unwind: bb43]; // scope 6 at cita-network/src/synchronizer.rs:243:54: 243:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:243:54: 243:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<u64>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>}, val: Value(<ZST>) }
    }

    bb36: {
        _58 = [move _59];                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _57 = &_58;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _56 = _57 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _54 = Arguments::<'_>::new_v1(move _55, move _56) -> [return: bb37, unwind: bb43]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb37: {
        _62 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::process_sync, [], Some(promoted[0])) }
        _53 = log::__private_api_log(move _54, _45, _62) -> [return: bb51, unwind: bb43]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb38: {
        _61 = synchronizer::Synchronizer::submit_blocks(_1) -> [return: bb39, unwind: bb43]; // scope 3 at cita-network/src/synchronizer.rs:244:9: 244:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:244:14: 244:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer) {synchronizer::Synchronizer::submit_blocks}, val: Value(<ZST>) }
    }

    bb39: {
        drop(_23) -> [return: bb40, unwind: bb49]; // scope 1 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb40: {
        _69 = const false;               // scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
        drop(_2) -> bb41;                // scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb41: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:245:6: 245:6
    }

    bb42 (cleanup): {
        drop(_27) -> bb43;               // scope 3 at cita-network/src/synchronizer.rs:241:9: 241:10
    }

    bb43 (cleanup): {
        drop(_23) -> bb49;               // scope 1 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb44 (cleanup): {
        drop(_2) -> bb45;                // scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb45 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:232:5: 245:6
    }

    bb46 (cleanup): {
        drop(_31) -> bb42;               // scope 4 at cita-network/src/synchronizer.rs:241:9: 241:10
    }

    bb47 (cleanup): {
        switchInt(_68) -> [0: bb42, otherwise: bb46]; // scope 4 at cita-network/src/synchronizer.rs:241:9: 241:10
    }

    bb48 (cleanup): {
        drop(_3) -> bb44;                // scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb49 (cleanup): {
        switchInt(_69) -> [0: bb44, otherwise: bb48]; // scope 0 at cita-network/src/synchronizer.rs:245:5: 245:6
    }

    bb50: {
        goto -> bb12;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb51: {
        goto -> bb38;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:243:9: 243:62
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:243:9: 243:62

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:243:9: 243:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:243:9: 243:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:243:9: 243:62
        _1 = (move _2, move _4, move _6, const 243_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52

    bb0: {
        _1 = [const "sync: process_sync: heights = "]; // scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:243:16: 243:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52
        return;                          // scope 0 at cita-network/src/synchronizer.rs:243:16: 243:52
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:234:9: 234:68
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:234:9: 234:68

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:234:9: 234:68
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:234:9: 234:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:234:9: 234:68
        _1 = (move _2, move _4, move _6, const 234_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53

    bb0: {
        _1 = [const "sync: process_sync: blocks len = "]; // scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:234:16: 234:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53
        return;                          // scope 0 at cita-network/src/synchronizer.rs:234:16: 234:53
    }
}

promoted[5] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::process_sync: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req(_1: &mut synchronizer::Synchronizer, _2: u64) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:248:23: 248:32
    debug start_height => _2;            // in scope 0 at cita-network/src/synchronizer.rs:248:34: 248:46
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:248:53: 248:53
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:251:13: 251:25
    let _18: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:251:13: 251:25
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:252:13: 252:45
    let _20: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:252:13: 252:45
    let _21: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:252:13: 252:45
    let mut _22: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:252:13: 252:45
    let mut _23: u32;                    // in scope 0 at cita-network/src/synchronizer.rs:254:13: 254:23
    let mut _27: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:257:30: 257:62
    let mut _28: std::option::Option<(&u64, &std::collections::VecDeque<u32>)>; // in scope 0 at cita-network/src/synchronizer.rs:259:42: 262:56
    let mut _29: &mut std::collections::btree_map::Iter<'_, u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:259:42: 262:56
    let mut _30: std::collections::btree_map::Iter<'_, u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:259:42: 261:20
    let mut _31: &std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:259:42: 261:20
    let mut _32: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:259:16: 259:39
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _37: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _38: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _39: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _40: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _41: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _42: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _43: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _44: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68
    let mut _46: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _47: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _48: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _49: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:266:17: 266:23
    let _50: &&u64;                      // in scope 0 at cita-network/src/synchronizer.rs:266:17: 266:23
    let mut _51: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:266:25: 266:32
    let _52: &&std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:266:25: 266:32
    let mut _53: std::option::Option<&std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:268:36: 268:72
    let mut _54: &std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:268:36: 268:72
    let mut _55: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:268:20: 268:33
    let mut _57: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:269:20: 269:44
    let mut _58: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:269:20: 269:27
    let mut _59: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:269:30: 269:44
    let mut _60: u32;                    // in scope 0 at cita-network/src/synchronizer.rs:270:30: 270:76
    let mut _61: &u32;                   // in scope 0 at cita-network/src/synchronizer.rs:270:30: 270:76
    let mut _62: usize;                  // in scope 0 at cita-network/src/synchronizer.rs:270:38: 270:75
    let mut _63: &mut rand::ThreadRng;   // in scope 0 at cita-network/src/synchronizer.rs:270:38: 270:75
    let mut _64: usize;                  // in scope 0 at cita-network/src/synchronizer.rs:270:61: 270:74
    let mut _65: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:271:34: 271:48
    let mut _66: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:271:34: 271:60
    let mut _67: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:277:12: 277:19
    let _68: ();                         // in scope 0 at cita-network/src/synchronizer.rs:278:13: 278:65
    let mut _69: &synchronizer::Synchronizer; // in scope 0 at cita-network/src/synchronizer.rs:278:13: 278:65
    let mut _70: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:278:46: 278:56
    let mut _71: u32;                    // in scope 0 at cita-network/src/synchronizer.rs:278:58: 278:64
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _75: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _76: &[&str; 2];         // in scope 1 at cita-network/src/synchronizer.rs:250:13: 250:75
        let mut _77: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug origin => _23;             // in scope 2 at cita-network/src/synchronizer.rs:254:13: 254:23
        let mut _24: u64;                // in scope 2 at cita-network/src/synchronizer.rs:255:13: 255:27
        scope 3 {
            debug end_height => _24;     // in scope 3 at cita-network/src/synchronizer.rs:255:13: 255:27
            let mut _25: bool;           // in scope 3 at cita-network/src/synchronizer.rs:256:13: 256:24
            scope 4 {
                debug is_send => _25;    // in scope 4 at cita-network/src/synchronizer.rs:256:13: 256:24
                let _26: u64;            // in scope 4 at cita-network/src/synchronizer.rs:257:13: 257:27
                scope 5 {
                    debug current_height => _26; // in scope 5 at cita-network/src/synchronizer.rs:257:13: 257:27
                    scope 6 {
                        debug height => _33; // in scope 6 at cita-network/src/synchronizer.rs:259:22: 259:28
                        debug origins => _34; // in scope 6 at cita-network/src/synchronizer.rs:259:30: 259:37
                        let _33: &u64;   // in scope 6 at cita-network/src/synchronizer.rs:259:22: 259:28
                        let _34: &std::collections::VecDeque<u32>; // in scope 6 at cita-network/src/synchronizer.rs:259:30: 259:37
                        let _35: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        scope 7 {
                            debug lvl => _35; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _72: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _73: &[&str; 2]; // in scope 7 at cita-network/src/synchronizer.rs:265:17: 265:68
                            let mut _74: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 8 {
                            debug origins => _56; // in scope 8 at cita-network/src/synchronizer.rs:268:25: 268:32
                            let _56: &std::collections::VecDeque<u32>; // in scope 8 at cita-network/src/synchronizer.rs:268:25: 268:32
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _77 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[5])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _77) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb12, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _76 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:250:13: 250:75
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:250:13: 250:75
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[4])) }
        _13 = _76 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:250:13: 250:75
        _18 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:251:13: 251:25
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_18) -> bb8; // scope 1 at cita-network/src/synchronizer.rs:251:13: 251:25
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:251:13: 251:25
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb8: {
        _22 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:252:13: 252:45
        _21 = libproto::Status::get_height(move _22) -> bb9; // scope 1 at cita-network/src/synchronizer.rs:252:13: 252:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:252:33: 252:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb9: {
        _20 = &_21;                      // scope 1 at cita-network/src/synchronizer.rs:252:13: 252:45
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_20) -> bb10; // scope 1 at cita-network/src/synchronizer.rs:252:13: 252:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:252:13: 252:45
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = [move _17, move _19];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _75 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[3])) }
        _11 = log::__private_api_log(move _12, _3, _75) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = const 0_u32;               // scope 0 at cita-network/src/synchronizer.rs:254:26: 254:27
        _24 = _2;                        // scope 2 at cita-network/src/synchronizer.rs:255:30: 255:42
        _25 = const false;               // scope 3 at cita-network/src/synchronizer.rs:256:27: 256:32
        _27 = &((*_1).2: libproto::Status); // scope 4 at cita-network/src/synchronizer.rs:257:30: 257:62
        _26 = libproto::Status::get_height(move _27) -> bb13; // scope 4 at cita-network/src/synchronizer.rs:257:30: 257:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:257:50: 257:60
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = &((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>); // scope 6 at cita-network/src/synchronizer.rs:259:42: 261:20
        _30 = BTreeMap::<u64, VecDeque<u32>>::iter(move _31) -> bb14; // scope 6 at cita-network/src/synchronizer.rs:259:42: 261:20
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:261:14: 261:18
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, VecDeque<u32>>) -> std::collections::btree_map::Iter<'a, u64, VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::iter}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = &mut _30;                  // scope 6 at cita-network/src/synchronizer.rs:259:42: 262:56
        _28 = <std::collections::btree_map::Iter<'_, u64, VecDeque<u32>> as DoubleEndedIterator>::rfind::<[closure@cita-network/src/synchronizer.rs:262:20: 262:35]>(move _29, const ZeroSized: [closure@cita-network/src/synchronizer.rs:262:20: 262:35]) -> bb15; // scope 6 at cita-network/src/synchronizer.rs:259:42: 262:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:262:14: 262:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::btree_map::Iter<'_, u64, VecDeque<u32>>, [closure@cita-network/src/synchronizer.rs:262:20: 262:35]) -> std::option::Option<<std::collections::btree_map::Iter<'_, u64, VecDeque<u32>> as Iterator>::Item> {<std::collections::btree_map::Iter<'_, u64, VecDeque<u32>> as DoubleEndedIterator>::rfind::<[closure@cita-network/src/synchronizer.rs:262:20: 262:35]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/synchronizer.rs:262:20: 262:35], val: Value(<ZST>) }
    }

    bb15: {
        _32 = discriminant(_28);         // scope 6 at cita-network/src/synchronizer.rs:259:16: 259:39
        switchInt(move _32) -> [1: bb16, otherwise: bb35]; // scope 6 at cita-network/src/synchronizer.rs:259:16: 259:39
    }

    bb16: {
        _33 = (((_28 as Some).0: (&u64, &std::collections::VecDeque<u32>)).0: &u64); // scope 6 at cita-network/src/synchronizer.rs:259:22: 259:28
        _34 = (((_28 as Some).0: (&u64, &std::collections::VecDeque<u32>)).1: &std::collections::VecDeque<u32>); // scope 6 at cita-network/src/synchronizer.rs:259:30: 259:37
        _35 = log::Level::Debug;         // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _38 = &_35;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _74 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[2])) }
        _37 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _38, _74) -> bb20; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb17: {
        _36 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb19;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        _40 = &_35;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _42 = log::max_level() -> bb21;  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb19: {
        switchInt(move _36) -> [0: bb27, otherwise: bb23]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        switchInt(move _37) -> [0: bb17, otherwise: bb18]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        _41 = &_42;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _39 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _40, move _41) -> bb22; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        _36 = move _39;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb19;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _73 = const _;                   // scope 7 at cita-network/src/synchronizer.rs:265:17: 265:68
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:265:17: 265:68
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[1])) }
        _45 = _73 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/synchronizer.rs:265:17: 265:68
        _50 = &_33;                      // scope 7 at cita-network/src/synchronizer.rs:266:17: 266:23
        _49 = core::fmt::ArgumentV1::<'_>::new_display::<&u64>(_50) -> bb24; // scope 7 at cita-network/src/synchronizer.rs:266:17: 266:23
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:266:17: 266:23
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b &u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&u64>}, val: Value(<ZST>) }
    }

    bb24: {
        _52 = &_34;                      // scope 7 at cita-network/src/synchronizer.rs:266:25: 266:32
        _51 = core::fmt::ArgumentV1::<'_>::new_debug::<&VecDeque<u32>>(_52) -> bb25; // scope 7 at cita-network/src/synchronizer.rs:266:25: 266:32
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:266:25: 266:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b &VecDeque<u32>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&VecDeque<u32>>}, val: Value(<ZST>) }
    }

    bb25: {
        _48 = [move _49, move _51];      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _47 = &_48;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _46 = _47 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = Arguments::<'_>::new_v1(move _45, move _46) -> bb26; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb26: {
        _72 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::start_sync_req, [], Some(promoted[0])) }
        _43 = log::__private_api_log(move _44, _35, _72) -> bb27; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        _54 = &((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>); // scope 8 at cita-network/src/synchronizer.rs:268:36: 268:72
        _53 = BTreeMap::<u64, VecDeque<u32>>::get::<u64>(move _54, _33) -> bb28; // scope 8 at cita-network/src/synchronizer.rs:268:36: 268:72
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:268:61: 268:64
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<u64, VecDeque<u32>>, &'b u64) -> std::option::Option<&'a VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::get::<u64>}, val: Value(<ZST>) }
    }

    bb28: {
        _55 = discriminant(_53);         // scope 8 at cita-network/src/synchronizer.rs:268:20: 268:33
        switchInt(move _55) -> [1: bb29, otherwise: bb35]; // scope 8 at cita-network/src/synchronizer.rs:268:20: 268:33
    }

    bb29: {
        _56 = ((_53 as Some).0: &std::collections::VecDeque<u32>); // scope 8 at cita-network/src/synchronizer.rs:268:25: 268:32
        _58 = (*_33);                    // scope 8 at cita-network/src/synchronizer.rs:269:20: 269:27
        _59 = _26;                       // scope 8 at cita-network/src/synchronizer.rs:269:30: 269:44
        _57 = Gt(move _58, move _59);    // scope 8 at cita-network/src/synchronizer.rs:269:20: 269:44
        switchInt(move _57) -> [0: bb35, otherwise: bb30]; // scope 8 at cita-network/src/synchronizer.rs:269:20: 269:44
    }

    bb30: {
        _63 = &mut ((*_1).8: rand::ThreadRng); // scope 8 at cita-network/src/synchronizer.rs:270:38: 270:75
        _64 = VecDeque::<u32>::len(_56) -> bb31; // scope 8 at cita-network/src/synchronizer.rs:270:61: 270:74
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:270:69: 270:72
                                         // + literal: Const { ty: for<'a> fn(&'a VecDeque<u32>) -> usize {VecDeque::<u32>::len}, val: Value(<ZST>) }
    }

    bb31: {
        _62 = <ThreadRng as Rng>::gen_range::<usize>(move _63, const 0_usize, move _64) -> bb32; // scope 8 at cita-network/src/synchronizer.rs:270:38: 270:75
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:270:48: 270:57
                                         // + literal: Const { ty: for<'a> fn(&'a mut ThreadRng, usize, usize) -> usize {<ThreadRng as Rng>::gen_range::<usize>}, val: Value(<ZST>) }
    }

    bb32: {
        _61 = <VecDeque<u32> as std::ops::Index<usize>>::index(_56, move _62) -> bb33; // scope 8 at cita-network/src/synchronizer.rs:270:30: 270:76
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:270:30: 270:76
                                         // + literal: Const { ty: for<'a> fn(&'a VecDeque<u32>, usize) -> &'a <VecDeque<u32> as std::ops::Index<usize>>::Output {<VecDeque<u32> as std::ops::Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb33: {
        _60 = (*_61);                    // scope 8 at cita-network/src/synchronizer.rs:270:30: 270:76
        _23 = move _60;                  // scope 8 at cita-network/src/synchronizer.rs:270:21: 270:76
        _65 = _26;                       // scope 8 at cita-network/src/synchronizer.rs:271:34: 271:48
        _66 = CheckedAdd(_65, const _);  // scope 8 at cita-network/src/synchronizer.rs:271:34: 271:60
        assert(!move (_66.1: bool), "attempt to compute `{} + {}`, which would overflow", move _65, const _) -> bb34; // scope 8 at cita-network/src/synchronizer.rs:271:34: 271:60
    }

    bb34: {
        _24 = move (_66.0: u64);         // scope 8 at cita-network/src/synchronizer.rs:271:21: 271:60
        _25 = const true;                // scope 8 at cita-network/src/synchronizer.rs:272:21: 272:35
        goto -> bb35;                    // scope 8 at cita-network/src/synchronizer.rs:269:17: 273:18
    }

    bb35: {
        _67 = _25;                       // scope 5 at cita-network/src/synchronizer.rs:277:12: 277:19
        switchInt(move _67) -> [0: bb37, otherwise: bb36]; // scope 5 at cita-network/src/synchronizer.rs:277:12: 277:19
    }

    bb36: {
        _69 = &(*_1);                    // scope 5 at cita-network/src/synchronizer.rs:278:13: 278:65
        _70 = _24;                       // scope 5 at cita-network/src/synchronizer.rs:278:46: 278:56
        _71 = _23;                       // scope 5 at cita-network/src/synchronizer.rs:278:58: 278:64
        _68 = synchronizer::Synchronizer::sync_strategy(move _69, _2, move _70, move _71) -> bb37; // scope 5 at cita-network/src/synchronizer.rs:278:13: 278:65
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:278:18: 278:31
                                         // + literal: Const { ty: for<'a> fn(&'a synchronizer::Synchronizer, u64, u64, u32) {synchronizer::Synchronizer::sync_strategy}, val: Value(<ZST>) }
    }

    bb37: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:280:6: 280:6
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:264:13: 267:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:264:13: 267:14

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:264:13: 267:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:264:13: 267:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:264:13: 267:14
        _1 = (move _2, move _4, move _6, const 264_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68

    bb0: {
        _1 = [const "sync: start_sync_req: height = ", const ", origins = "]; // scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:265:17: 265:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:265:17: 265:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68
        return;                          // scope 0 at cita-network/src/synchronizer.rs:265:17: 265:68
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:249:9: 253:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:249:9: 253:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:249:9: 253:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:249:9: 253:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:249:9: 253:10
        _1 = (move _2, move _4, move _6, const 249_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75
    let mut _1: [&str; 2];               // in scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75

    bb0: {
        _1 = [const "sync: start_sync_req: start_height = ", const ", current height = "]; // scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:250:13: 250:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:250:13: 250:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75
        return;                          // scope 0 at cita-network/src/synchronizer.rs:250:13: 250:75
    }
}

promoted[5] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::start_sync_req::{closure#0}(_1: &mut [closure@cita-network/src/synchronizer.rs:262:20: 262:35], _2: &(&u64, &VecDeque<u32>)) -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-network/src/synchronizer.rs:262:36: 262:36
    let _3: &std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:262:26: 262:33
    let mut _4: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:262:37: 262:55
    scope 1 {
        debug origins => _3;             // in scope 1 at cita-network/src/synchronizer.rs:262:26: 262:33
    }

    bb0: {
        _3 = ((*_2).1: &std::collections::VecDeque<u32>); // scope 0 at cita-network/src/synchronizer.rs:262:26: 262:33
        _4 = VecDeque::<u32>::is_empty(_3) -> bb1; // scope 1 at cita-network/src/synchronizer.rs:262:37: 262:55
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:262:45: 262:53
                                         // + literal: Const { ty: for<'a> fn(&'a VecDeque<u32>) -> bool {VecDeque::<u32>::is_empty}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Not(move _4);               // scope 1 at cita-network/src/synchronizer.rs:262:36: 262:55
        return;                          // scope 0 at cita-network/src/synchronizer.rs:262:55: 262:55
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::sync_strategy(_1: &synchronizer::Synchronizer, _2: u64, _3: u64, _4: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:282:22: 282:27
    debug start_height => _2;            // in scope 0 at cita-network/src/synchronizer.rs:282:29: 282:41
    debug end_height => _3;              // in scope 0 at cita-network/src/synchronizer.rs:282:48: 282:58
    debug origin => _4;                  // in scope 0 at cita-network/src/synchronizer.rs:282:65: 282:71
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:282:78: 282:78
    let _5: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:289:13: 289:45
    let _20: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:289:13: 289:45
    let _21: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:289:13: 289:45
    let mut _22: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:289:13: 289:45
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:290:13: 290:25
    let _24: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:290:13: 290:25
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:291:13: 291:23
    let _26: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:291:13: 291:23
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:292:13: 292:19
    let _28: &u32;                       // in scope 0 at cita-network/src/synchronizer.rs:292:13: 292:19
    let mut _29: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
    let mut _30: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:294:12: 294:60
    let mut _31: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:294:28: 294:60
    let mut _32: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:294:28: 294:60
    let mut _33: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:294:64: 294:90
    let mut _34: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:295:17: 295:33
    let mut _37: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:299:19: 299:45
    let mut _38: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:299:19: 299:31
    let mut _39: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:300:20: 300:28
    let _40: ();                         // in scope 0 at cita-network/src/synchronizer.rs:302:21: 302:56
    let mut _41: std::vec::Vec<u64>;     // in scope 0 at cita-network/src/synchronizer.rs:302:40: 302:47
    let mut _42: std::vec::Vec<u64>;     // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
    let _43: ();                         // in scope 0 at cita-network/src/synchronizer.rs:305:17: 305:43
    let mut _44: &mut std::vec::Vec<u64>; // in scope 0 at cita-network/src/synchronizer.rs:305:17: 305:43
    let mut _45: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:305:30: 305:42
    let mut _46: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:307:17: 307:30
    let mut _47: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:308:17: 308:34
    let _48: ();                         // in scope 0 at cita-network/src/synchronizer.rs:310:13: 310:48
    let mut _49: std::vec::Vec<u64>;     // in scope 0 at cita-network/src/synchronizer.rs:310:32: 310:39
    let mut _53: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:311:9: 311:10
    scope 1 {
        debug lvl => _5;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _50: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _51: &[&str; 4];         // in scope 1 at cita-network/src/synchronizer.rs:285:13: 288:29
        let mut _52: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug start_height => _34;       // in scope 2 at cita-network/src/synchronizer.rs:295:17: 295:33
        let mut _35: u64;                // in scope 2 at cita-network/src/synchronizer.rs:296:17: 296:29
        scope 3 {
            debug step_sum => _35;       // in scope 3 at cita-network/src/synchronizer.rs:296:17: 296:29
            let mut _36: std::vec::Vec<u64>; // in scope 3 at cita-network/src/synchronizer.rs:297:17: 297:28
            scope 4 {
                debug heights => _36;    // in scope 4 at cita-network/src/synchronizer.rs:297:17: 297:28
            }
        }
    }

    bb0: {
        _53 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _5 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _8 = &_5;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _52 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::sync_strategy, [], Some(promoted[2])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _52) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _10 = &_5;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _6) -> [0: bb14, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _7) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _11 = &_12;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = move _9;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _51 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:285:13: 288:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:285:13: 288:29
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(synchronizer::Synchronizer::sync_strategy, [], Some(promoted[1])) }
        _15 = _51 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:285:13: 288:29
        _22 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:289:13: 289:45
        _21 = libproto::Status::get_height(move _22) -> bb8; // scope 1 at cita-network/src/synchronizer.rs:289:13: 289:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:289:33: 289:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &_21;                      // scope 1 at cita-network/src/synchronizer.rs:289:13: 289:45
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_20) -> bb9; // scope 1 at cita-network/src/synchronizer.rs:289:13: 289:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:289:13: 289:45
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:290:13: 290:25
        _23 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_24) -> bb10; // scope 1 at cita-network/src/synchronizer.rs:290:13: 290:25
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:290:13: 290:25
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = &_3;                       // scope 1 at cita-network/src/synchronizer.rs:291:13: 291:23
        _25 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_26) -> bb11; // scope 1 at cita-network/src/synchronizer.rs:291:13: 291:23
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:291:13: 291:23
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _28 = &_4;                       // scope 1 at cita-network/src/synchronizer.rs:292:13: 292:19
        _27 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_28) -> bb12; // scope 1 at cita-network/src/synchronizer.rs:292:13: 292:19
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:292:13: 292:19
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb12: {
        _18 = [move _19, move _23, move _25, move _27]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _50 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::sync_strategy, [], Some(promoted[0])) }
        _13 = log::__private_api_log(move _14, _5, _50) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _32 = &((*_1).2: libproto::Status); // scope 0 at cita-network/src/synchronizer.rs:294:28: 294:60
        _31 = libproto::Status::get_height(move _32) -> bb18; // scope 0 at cita-network/src/synchronizer.rs:294:28: 294:60
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:294:48: 294:58
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = const false;               // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
        goto -> bb17;                    // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
    }

    bb16: {
        _33 = Le(_2, _3);                // scope 0 at cita-network/src/synchronizer.rs:294:64: 294:90
        _29 = move _33;                  // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
        goto -> bb17;                    // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
    }

    bb17: {
        switchInt(move _29) -> [0: bb31, otherwise: bb19]; // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
    }

    bb18: {
        _30 = Ge(_2, move _31);          // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:60
        switchInt(move _30) -> [0: bb15, otherwise: bb16]; // scope 0 at cita-network/src/synchronizer.rs:294:12: 294:90
    }

    bb19: {
        _34 = _2;                        // scope 0 at cita-network/src/synchronizer.rs:295:36: 295:48
        _35 = const _;                   // scope 2 at cita-network/src/synchronizer.rs:296:32: 296:41
        _53 = const true;                // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
        _36 = Vec::<u64>::new() -> bb20; // scope 3 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> Vec<u64> {Vec::<u64>::new}, val: Value(<ZST>) }
    }

    bb20: {
        _38 = _34;                       // scope 4 at cita-network/src/synchronizer.rs:299:19: 299:31
        _37 = Le(move _38, _3);          // scope 4 at cita-network/src/synchronizer.rs:299:19: 299:45
        switchInt(move _37) -> [0: bb29, otherwise: bb21]; // scope 4 at cita-network/src/synchronizer.rs:299:19: 299:45
    }

    bb21: {
        _39 = _35;                       // scope 4 at cita-network/src/synchronizer.rs:300:20: 300:28
        switchInt(move _39) -> [0: bb22, otherwise: bb25]; // scope 4 at cita-network/src/synchronizer.rs:300:20: 300:33
    }

    bb22: {
        _35 = const _;                   // scope 4 at cita-network/src/synchronizer.rs:301:21: 301:41
        _53 = const false;               // scope 4 at cita-network/src/synchronizer.rs:302:40: 302:47
        _41 = move _36;                  // scope 4 at cita-network/src/synchronizer.rs:302:40: 302:47
        _40 = synchronizer::Synchronizer::send_sync_req(_1, move _41, _4) -> [return: bb23, unwind: bb34]; // scope 4 at cita-network/src/synchronizer.rs:302:21: 302:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:302:26: 302:39
                                         // + literal: Const { ty: for<'a> fn(&'a synchronizer::Synchronizer, Vec<u64>, u32) {synchronizer::Synchronizer::send_sync_req}, val: Value(<ZST>) }
    }

    bb23: {
        _42 = Vec::<u64>::new() -> [return: bb24, unwind: bb34]; // scope 4 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn() -> Vec<u64> {Vec::<u64>::new}, val: Value(<ZST>) }
    }

    bb24: {
        _53 = const true;                // scope 4 at cita-network/src/synchronizer.rs:303:21: 303:28
        _36 = move _42;                  // scope 4 at cita-network/src/synchronizer.rs:303:21: 303:28
        goto -> bb25;                    // scope 4 at cita-network/src/synchronizer.rs:300:17: 304:18
    }

    bb25: {
        _44 = &mut _36;                  // scope 4 at cita-network/src/synchronizer.rs:305:17: 305:43
        _45 = _34;                       // scope 4 at cita-network/src/synchronizer.rs:305:30: 305:42
        _43 = Vec::<u64>::push(move _44, move _45) -> [return: bb26, unwind: bb34]; // scope 4 at cita-network/src/synchronizer.rs:305:17: 305:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:305:25: 305:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<u64>, u64) {Vec::<u64>::push}, val: Value(<ZST>) }
    }

    bb26: {
        _46 = CheckedSub(_35, const 1_u64); // scope 4 at cita-network/src/synchronizer.rs:307:17: 307:30
        assert(!move (_46.1: bool), "attempt to compute `{} - {}`, which would overflow", _35, const 1_u64) -> [success: bb27, unwind: bb34]; // scope 4 at cita-network/src/synchronizer.rs:307:17: 307:30
    }

    bb27: {
        _35 = move (_46.0: u64);         // scope 4 at cita-network/src/synchronizer.rs:307:17: 307:30
        _47 = CheckedAdd(_34, const 1_u64); // scope 4 at cita-network/src/synchronizer.rs:308:17: 308:34
        assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", _34, const 1_u64) -> [success: bb28, unwind: bb34]; // scope 4 at cita-network/src/synchronizer.rs:308:17: 308:34
    }

    bb28: {
        _34 = move (_47.0: u64);         // scope 4 at cita-network/src/synchronizer.rs:308:17: 308:34
        goto -> bb20;                    // scope 4 at cita-network/src/synchronizer.rs:299:13: 309:14
    }

    bb29: {
        _53 = const false;               // scope 4 at cita-network/src/synchronizer.rs:310:32: 310:39
        _49 = move _36;                  // scope 4 at cita-network/src/synchronizer.rs:310:32: 310:39
        _48 = synchronizer::Synchronizer::send_sync_req(_1, move _49, _4) -> [return: bb30, unwind: bb34]; // scope 4 at cita-network/src/synchronizer.rs:310:13: 310:48
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:310:18: 310:31
                                         // + literal: Const { ty: for<'a> fn(&'a synchronizer::Synchronizer, Vec<u64>, u32) {synchronizer::Synchronizer::send_sync_req}, val: Value(<ZST>) }
    }

    bb30: {
        _53 = const false;               // scope 3 at cita-network/src/synchronizer.rs:311:9: 311:10
        goto -> bb31;                    // scope 0 at cita-network/src/synchronizer.rs:294:9: 311:10
    }

    bb31: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:312:6: 312:6
    }

    bb32 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:282:5: 312:6
    }

    bb33 (cleanup): {
        drop(_36) -> bb32;               // scope 3 at cita-network/src/synchronizer.rs:311:9: 311:10
    }

    bb34 (cleanup): {
        switchInt(_53) -> [0: bb32, otherwise: bb33]; // scope 3 at cita-network/src/synchronizer.rs:311:9: 311:10
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::sync_strategy: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:284:9: 293:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:284:9: 293:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:284:9: 293:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:284:9: 293:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:284:9: 293:10
        _1 = (move _2, move _4, move _6, const 284_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::sync_strategy: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29

    bb0: {
        _1 = [const "sync: sync_strategy: current height = ", const ", start_height = ", const ", end height = ", const ", to origin = "]; // scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:285:13: 288:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:285:13: 288:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:285:13: 288:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:285:13: 288:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29
        return;                          // scope 0 at cita-network/src/synchronizer.rs:285:13: 288:29
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::sync_strategy: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::send_sync_req(_1: &synchronizer::Synchronizer, _2: Vec<u64>, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:314:22: 314:27
    debug heights => _2;                 // in scope 0 at cita-network/src/synchronizer.rs:314:29: 314:36
    debug origin => _3;                  // in scope 0 at cita-network/src/synchronizer.rs:314:48: 314:54
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:314:61: 314:61
    let mut _4: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
    let mut _5: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:315:13: 315:31
    let mut _6: &std::vec::Vec<u64>;     // in scope 0 at cita-network/src/synchronizer.rs:315:13: 315:31
    let _7: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:321:17: 321:49
    let _22: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:321:17: 321:49
    let _23: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:321:17: 321:49
    let mut _24: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:321:17: 321:49
    let mut _25: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:322:17: 322:24
    let _26: &std::vec::Vec<u64>;        // in scope 0 at cita-network/src/synchronizer.rs:322:17: 322:24
    let mut _27: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:323:17: 323:23
    let _28: &u32;                       // in scope 0 at cita-network/src/synchronizer.rs:323:17: 323:23
    let mut _29: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36
    let mut _30: libproto::SyncRequest;  // in scope 0 at cita-network/src/synchronizer.rs:326:17: 326:29
    let _31: ();                         // in scope 0 at cita-network/src/synchronizer.rs:327:13: 327:42
    let mut _32: &mut libproto::SyncRequest; // in scope 0 at cita-network/src/synchronizer.rs:327:13: 327:42
    let mut _33: std::vec::Vec<u64>;     // in scope 0 at cita-network/src/synchronizer.rs:327:34: 327:41
    let mut _35: libproto::OperateType;  // in scope 0 at cita-network/src/synchronizer.rs:328:37: 328:56
    let mut _36: libproto::MsgClass;     // in scope 0 at cita-network/src/synchronizer.rs:328:66: 328:81
    let mut _37: libproto::SyncRequest;  // in scope 0 at cita-network/src/synchronizer.rs:328:66: 328:74
    let _38: ();                         // in scope 0 at cita-network/src/synchronizer.rs:330:13: 334:15
    let mut _39: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/synchronizer.rs:330:13: 334:15
    let mut _40: node_manager::SingleTxReq; // in scope 0 at cita-network/src/synchronizer.rs:330:48: 334:14
    let mut _41: tentacle::SessionId;    // in scope 0 at cita-network/src/synchronizer.rs:331:17: 331:49
    let mut _42: usize;                  // in scope 0 at cita-network/src/synchronizer.rs:331:33: 331:48
    let mut _43: std::string::String;    // in scope 0 at cita-network/src/synchronizer.rs:332:17: 332:65
    let mut _44: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _45: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _46: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _47: libproto::Message;      // in scope 0 at cita-network/src/synchronizer.rs:333:17: 333:20
    let mut _52: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:336:5: 336:6
    let mut _53: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:335:9: 335:10
    let mut _54: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:335:9: 335:10
    scope 1 {
        debug lvl => _7;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _48: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _49: &libproto::OperateType; // in scope 1 at cita-network/src/synchronizer.rs:324:17: 324:36
        let mut _50: &[&str; 4];         // in scope 1 at cita-network/src/synchronizer.rs:317:17: 320:47
        let mut _51: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug sync_req => _30;           // in scope 2 at cita-network/src/synchronizer.rs:326:17: 326:29
        let _34: libproto::Message;      // in scope 2 at cita-network/src/synchronizer.rs:328:17: 328:20
        scope 3 {
            debug msg => _34;            // in scope 3 at cita-network/src/synchronizer.rs:328:17: 328:20
        }
    }

    bb0: {
        _53 = const false;               // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
        _52 = const false;               // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
        _54 = const false;               // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
        _52 = const true;                // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
        _6 = &_2;                        // scope 0 at cita-network/src/synchronizer.rs:315:13: 315:31
        _5 = Vec::<u64>::is_empty(move _6) -> [return: bb1, unwind: bb34]; // scope 0 at cita-network/src/synchronizer.rs:315:13: 315:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:315:21: 315:29
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u64>) -> bool {Vec::<u64>::is_empty}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Not(move _5);               // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
        switchInt(move _4) -> [0: bb25, otherwise: bb2]; // scope 0 at cita-network/src/synchronizer.rs:315:12: 315:31
    }

    bb2: {
        _7 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _10 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _51 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::send_sync_req, [], Some(promoted[3])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _51) -> [return: bb6, unwind: bb34]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _12 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> [return: bb7, unwind: bb34]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _8) -> [0: bb16, otherwise: bb9]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _9) -> [0: bb3, otherwise: bb4]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _13 = &_14;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> [return: bb8, unwind: bb34]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _8 = move _11;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _50 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:317:17: 320:47
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:317:17: 320:47
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(synchronizer::Synchronizer::send_sync_req, [], Some(promoted[2])) }
        _17 = _50 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:317:17: 320:47
        _24 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:321:17: 321:49
        _23 = libproto::Status::get_height(move _24) -> [return: bb10, unwind: bb34]; // scope 1 at cita-network/src/synchronizer.rs:321:17: 321:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:321:37: 321:47
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb10: {
        _22 = &_23;                      // scope 1 at cita-network/src/synchronizer.rs:321:17: 321:49
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_22) -> [return: bb11, unwind: bb34]; // scope 1 at cita-network/src/synchronizer.rs:321:17: 321:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:321:17: 321:49
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:322:17: 322:24
        _25 = core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>(_26) -> [return: bb12, unwind: bb34]; // scope 1 at cita-network/src/synchronizer.rs:322:17: 322:24
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:322:17: 322:24
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b Vec<u64>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Vec<u64>>}, val: Value(<ZST>) }
    }

    bb12: {
        _28 = &_3;                       // scope 1 at cita-network/src/synchronizer.rs:323:17: 323:23
        _27 = core::fmt::ArgumentV1::<'_>::new_debug::<u32>(_28) -> [return: bb13, unwind: bb34]; // scope 1 at cita-network/src/synchronizer.rs:323:17: 323:23
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:323:17: 323:23
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u32>}, val: Value(<ZST>) }
    }

    bb13: {
        _49 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:324:17: 324:36
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:324:17: 324:36
                                         // + literal: Const { ty: &OperateType, val: Unevaluated(synchronizer::Synchronizer::send_sync_req, [], Some(promoted[1])) }
        _29 = core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>(_49) -> [return: bb14, unwind: bb34]; // scope 1 at cita-network/src/synchronizer.rs:324:17: 324:36
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:324:17: 324:36
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b OperateType) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<OperateType>}, val: Value(<ZST>) }
    }

    bb14: {
        _20 = [move _21, move _25, move _27, move _29]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = &_20;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = Arguments::<'_>::new_v1(move _17, move _18) -> [return: bb15, unwind: bb34]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _48 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::send_sync_req, [], Some(promoted[0])) }
        _15 = log::__private_api_log(move _16, _7, _48) -> [return: bb35, unwind: bb34]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = libproto::SyncRequest::new() -> [return: bb17, unwind: bb34]; // scope 0 at cita-network/src/synchronizer.rs:326:32: 326:50
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:326:32: 326:48
                                         // + literal: Const { ty: fn() -> libproto::SyncRequest {libproto::SyncRequest::new}, val: Value(<ZST>) }
    }

    bb17: {
        _54 = const true;                // scope 2 at cita-network/src/synchronizer.rs:327:13: 327:42
        _32 = &mut _30;                  // scope 2 at cita-network/src/synchronizer.rs:327:13: 327:42
        _52 = const false;               // scope 2 at cita-network/src/synchronizer.rs:327:34: 327:41
        _33 = move _2;                   // scope 2 at cita-network/src/synchronizer.rs:327:34: 327:41
        _31 = libproto::SyncRequest::set_heights(move _32, move _33) -> [return: bb18, unwind: bb32]; // scope 2 at cita-network/src/synchronizer.rs:327:13: 327:42
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:327:22: 327:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncRequest, Vec<u64>) {libproto::SyncRequest::set_heights}, val: Value(<ZST>) }
    }

    bb18: {
        _35 = const libproto::OperateType::Single; // scope 2 at cita-network/src/synchronizer.rs:328:37: 328:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _54 = const false;               // scope 2 at cita-network/src/synchronizer.rs:328:66: 328:74
        _37 = move _30;                  // scope 2 at cita-network/src/synchronizer.rs:328:66: 328:74
        _36 = <libproto::SyncRequest as Into<InnerMessage_oneof_content>>::into(move _37) -> [return: bb19, unwind: bb32]; // scope 2 at cita-network/src/synchronizer.rs:328:66: 328:81
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:328:75: 328:79
                                         // + literal: Const { ty: fn(libproto::SyncRequest) -> InnerMessage_oneof_content {<libproto::SyncRequest as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb19: {
        _34 = libproto::Message::init(move _35, _3, move _36) -> [return: bb20, unwind: bb32]; // scope 2 at cita-network/src/synchronizer.rs:328:23: 328:82
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:328:23: 328:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb20: {
        _53 = const true;                // scope 2 at cita-network/src/synchronizer.rs:328:81: 328:82
        _39 = &((*_1).1: node_manager::NodesManagerClient); // scope 3 at cita-network/src/synchronizer.rs:330:13: 334:15
        _42 = _3 as usize (IntToInt);    // scope 3 at cita-network/src/synchronizer.rs:331:33: 331:48
        _41 = <SessionId as From<usize>>::from(move _42) -> [return: bb21, unwind: bb30]; // scope 3 at cita-network/src/synchronizer.rs:331:17: 331:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:331:17: 331:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(usize) -> SessionId {<SessionId as From<usize>>::from}, val: Value(<ZST>) }
    }

    bb21: {
        _45 = const libproto::router::SubModules::Synchronizer; // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x06)) }
        _46 = const libproto::router::MsgType::SyncRequest; // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x03)) }
        _44 = RoutingKey(move _45, move _46); // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _43 = <RoutingKey as Into<std::string::String>>::into(move _44) -> [return: bb22, unwind: bb30]; // scope 3 at cita-network/src/synchronizer.rs:332:17: 332:65
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:332:59: 332:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb22: {
        _53 = const false;               // scope 3 at cita-network/src/synchronizer.rs:333:17: 333:20
        _47 = move _34;                  // scope 3 at cita-network/src/synchronizer.rs:333:17: 333:20
        _40 = SingleTxReq::new(move _41, move _43, move _47) -> [return: bb23, unwind: bb30]; // scope 3 at cita-network/src/synchronizer.rs:330:48: 334:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:330:48: 330:64
                                         // + literal: Const { ty: fn(SessionId, std::string::String, libproto::Message) -> SingleTxReq {SingleTxReq::new}, val: Value(<ZST>) }
    }

    bb23: {
        _38 = NodesManagerClient::send_message(move _39, move _40) -> [return: bb24, unwind: bb30]; // scope 3 at cita-network/src/synchronizer.rs:330:13: 334:15
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:330:35: 330:47
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, SingleTxReq) {NodesManagerClient::send_message}, val: Value(<ZST>) }
    }

    bb24: {
        _53 = const false;               // scope 2 at cita-network/src/synchronizer.rs:335:9: 335:10
        _54 = const false;               // scope 0 at cita-network/src/synchronizer.rs:335:9: 335:10
        goto -> bb25;                    // scope 0 at cita-network/src/synchronizer.rs:315:9: 335:10
    }

    bb25: {
        switchInt(_52) -> [0: bb26, otherwise: bb28]; // scope 0 at cita-network/src/synchronizer.rs:336:5: 336:6
    }

    bb26: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:336:6: 336:6
    }

    bb27 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:314:5: 336:6
    }

    bb28: {
        drop(_2) -> bb26;                // scope 0 at cita-network/src/synchronizer.rs:336:5: 336:6
    }

    bb29 (cleanup): {
        drop(_34) -> bb32;               // scope 2 at cita-network/src/synchronizer.rs:335:9: 335:10
    }

    bb30 (cleanup): {
        switchInt(_53) -> [0: bb32, otherwise: bb29]; // scope 2 at cita-network/src/synchronizer.rs:335:9: 335:10
    }

    bb31 (cleanup): {
        drop(_30) -> bb34;               // scope 0 at cita-network/src/synchronizer.rs:335:9: 335:10
    }

    bb32 (cleanup): {
        switchInt(_54) -> [0: bb34, otherwise: bb31]; // scope 0 at cita-network/src/synchronizer.rs:335:9: 335:10
    }

    bb33 (cleanup): {
        drop(_2) -> bb27;                // scope 0 at cita-network/src/synchronizer.rs:336:5: 336:6
    }

    bb34 (cleanup): {
        switchInt(_52) -> [0: bb27, otherwise: bb33]; // scope 0 at cita-network/src/synchronizer.rs:336:5: 336:6
    }

    bb35: {
        goto -> bb16;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::send_sync_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:316:13: 325:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:316:13: 325:14

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:316:13: 325:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:316:13: 325:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:316:13: 325:14
        _1 = (move _2, move _4, move _6, const 316_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::send_sync_req: &OperateType = {
    let mut _0: &libproto::OperateType;  // return place in scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36
    let mut _1: libproto::OperateType;   // in scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36

    bb0: {
        _1 = libproto::OperateType::Single; // scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36
        return;                          // scope 0 at cita-network/src/synchronizer.rs:324:17: 324:36
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::send_sync_req: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47

    bb0: {
        _1 = [const "sync: send_sync_req:current height = ", const ", heights = ", const ", origin ", const ", chain.sync: OperateType "]; // scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:317:17: 320:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:317:17: 320:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:317:17: 320:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:317:17: 320:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47
        return;                          // scope 0 at cita-network/src/synchronizer.rs:317:17: 320:47
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::send_sync_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::broadcast_status(_1: &mut synchronizer::Synchronizer) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:338:25: 338:34
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:338:36: 338:36
    let _2: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _3: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _5: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _8: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _9: log::LevelFilter;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _11: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _12: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _14: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:341:13: 341:45
    let _17: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:341:13: 341:45
    let _18: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:341:13: 341:45
    let mut _19: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:341:13: 341:45
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:342:13: 342:43
    let _21: &&[u8];                     // in scope 0 at cita-network/src/synchronizer.rs:342:13: 342:43
    let _22: &[u8];                      // in scope 0 at cita-network/src/synchronizer.rs:342:13: 342:43
    let mut _23: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:342:13: 342:43
    let _24: libproto::Message;          // in scope 0 at cita-network/src/synchronizer.rs:344:13: 344:16
    let mut _25: libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:344:28: 344:55
    let mut _26: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:344:28: 344:55
    let _27: ();                         // in scope 0 at cita-network/src/synchronizer.rs:346:9: 349:11
    let mut _28: &node_manager::NodesManagerClient; // in scope 0 at cita-network/src/synchronizer.rs:346:9: 349:11
    let mut _29: node_manager::BroadcastReq; // in scope 0 at cita-network/src/synchronizer.rs:346:41: 349:10
    let mut _30: std::string::String;    // in scope 0 at cita-network/src/synchronizer.rs:347:13: 347:56
    let mut _31: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _32: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _33: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _34: libproto::Message;      // in scope 0 at cita-network/src/synchronizer.rs:348:13: 348:16
    let mut _38: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:350:5: 350:6
    scope 1 {
        debug lvl => _2;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _35: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _36: &[&str; 3];         // in scope 1 at cita-network/src/synchronizer.rs:340:13: 340:63
        let mut _37: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug msg => _24;                // in scope 2 at cita-network/src/synchronizer.rs:344:13: 344:16
    }

    bb0: {
        _38 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _2 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _5 = &_2;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _37 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::broadcast_status, [], Some(promoted[2])) }
        _4 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _5, _37) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _7 = &_2;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _9 = log::max_level() -> bb5;    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _3) -> [0: bb13, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _4) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _8 = &_9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, move _8) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _3 = move _6;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _36 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:340:13: 340:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:340:13: 340:63
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(synchronizer::Synchronizer::broadcast_status, [], Some(promoted[1])) }
        _12 = _36 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:340:13: 340:63
        _19 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:341:13: 341:45
        _18 = libproto::Status::get_height(move _19) -> bb8; // scope 1 at cita-network/src/synchronizer.rs:341:13: 341:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:341:33: 341:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = &_18;                      // scope 1 at cita-network/src/synchronizer.rs:341:13: 341:45
        _16 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_17) -> bb9; // scope 1 at cita-network/src/synchronizer.rs:341:13: 341:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:341:13: 341:45
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _23 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:342:13: 342:43
        _22 = libproto::Status::get_hash(move _23) -> bb10; // scope 1 at cita-network/src/synchronizer.rs:342:13: 342:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:342:33: 342:41
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> &'a [u8] {libproto::Status::get_hash}, val: Value(<ZST>) }
    }

    bb10: {
        _21 = &_22;                      // scope 1 at cita-network/src/synchronizer.rs:342:13: 342:43
        _20 = core::fmt::ArgumentV1::<'_>::new_debug::<&[u8]>(_21) -> bb11; // scope 1 at cita-network/src/synchronizer.rs:342:13: 342:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:342:13: 342:43
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b &[u8]) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&[u8]>}, val: Value(<ZST>) }
    }

    bb11: {
        _15 = [move _16, move _20];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = &_15;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _11 = Arguments::<'_>::new_v1(move _12, move _13) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _35 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::broadcast_status, [], Some(promoted[0])) }
        _10 = log::__private_api_log(move _11, _2, _35) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _26 = &((*_1).2: libproto::Status); // scope 0 at cita-network/src/synchronizer.rs:344:28: 344:55
        _25 = <libproto::Status as Clone>::clone(move _26) -> bb14; // scope 0 at cita-network/src/synchronizer.rs:344:28: 344:55
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:344:48: 344:53
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> libproto::Status {<libproto::Status as Clone>::clone}, val: Value(<ZST>) }
    }

    bb14: {
        _24 = <libproto::Status as Into<libproto::Message>>::into(move _25) -> bb15; // scope 0 at cita-network/src/synchronizer.rs:344:28: 344:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:344:56: 344:60
                                         // + literal: Const { ty: fn(libproto::Status) -> libproto::Message {<libproto::Status as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb15: {
        _38 = const true;                // scope 0 at cita-network/src/synchronizer.rs:344:61: 344:62
        _28 = &((*_1).1: node_manager::NodesManagerClient); // scope 2 at cita-network/src/synchronizer.rs:346:9: 349:11
        _32 = const libproto::router::SubModules::Synchronizer; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x06)) }
        _33 = const libproto::router::MsgType::Status; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x05)) }
        _31 = RoutingKey(move _32, move _33); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _30 = <RoutingKey as Into<std::string::String>>::into(move _31) -> [return: bb16, unwind: bb21]; // scope 2 at cita-network/src/synchronizer.rs:347:13: 347:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:347:50: 347:54
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb16: {
        _38 = const false;               // scope 2 at cita-network/src/synchronizer.rs:348:13: 348:16
        _34 = move _24;                  // scope 2 at cita-network/src/synchronizer.rs:348:13: 348:16
        _29 = BroadcastReq::new(move _30, move _34) -> [return: bb17, unwind: bb21]; // scope 2 at cita-network/src/synchronizer.rs:346:41: 349:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:346:41: 346:58
                                         // + literal: Const { ty: fn(std::string::String, libproto::Message) -> BroadcastReq {BroadcastReq::new}, val: Value(<ZST>) }
    }

    bb17: {
        _27 = NodesManagerClient::broadcast(move _28, move _29) -> [return: bb18, unwind: bb21]; // scope 2 at cita-network/src/synchronizer.rs:346:9: 349:11
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:346:31: 346:40
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManagerClient, BroadcastReq) {NodesManagerClient::broadcast}, val: Value(<ZST>) }
    }

    bb18: {
        _38 = const false;               // scope 0 at cita-network/src/synchronizer.rs:350:5: 350:6
        return;                          // scope 0 at cita-network/src/synchronizer.rs:350:6: 350:6
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:338:5: 350:6
    }

    bb20 (cleanup): {
        drop(_24) -> bb19;               // scope 0 at cita-network/src/synchronizer.rs:350:5: 350:6
    }

    bb21 (cleanup): {
        switchInt(_38) -> [0: bb19, otherwise: bb20]; // scope 0 at cita-network/src/synchronizer.rs:350:5: 350:6
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::broadcast_status: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:339:9: 343:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:339:9: 343:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:339:9: 343:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:339:9: 343:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:339:9: 343:10
        _1 = (move _2, move _4, move _6, const 339_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::broadcast_status: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63

    bb0: {
        _1 = [const "sync: broadcast status ", const ", ", const " to other nodes"]; // scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:340:13: 340:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:340:13: 340:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:340:13: 340:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63
        return;                          // scope 0 at cita-network/src/synchronizer.rs:340:13: 340:63
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::broadcast_status: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks(_1: &mut synchronizer::Synchronizer) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:353:22: 353:31
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:353:33: 353:33
    let mut _2: u64;                     // in scope 0 at cita-network/src/synchronizer.rs:354:13: 354:23
    let mut _3: u64;                     // in scope 0 at cita-network/src/synchronizer.rs:354:26: 354:58
    let mut _4: &libproto::Status;       // in scope 0 at cita-network/src/synchronizer.rs:354:26: 354:58
    let mut _5: (u64, bool);             // in scope 0 at cita-network/src/synchronizer.rs:354:26: 354:62
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: &[core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: [core::fmt::ArgumentV1<'_>; 4]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:360:13: 360:19
    let _21: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:360:13: 360:19
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:361:13: 361:45
    let _23: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:361:13: 361:45
    let _24: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:361:13: 361:45
    let mut _25: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:361:13: 361:45
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:362:13: 362:33
    let _27: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:362:13: 362:33
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:363:13: 363:35
    let _29: &usize;                     // in scope 0 at cita-network/src/synchronizer.rs:363:13: 363:35
    let _30: usize;                      // in scope 0 at cita-network/src/synchronizer.rs:363:13: 363:35
    let mut _31: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:363:13: 363:35
    let mut _34: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:366:26: 366:32
    let mut _35: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:366:26: 366:44
    let mut _36: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:369:16: 369:36
    let mut _37: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:369:16: 369:22
    let mut _38: std::option::Option<&libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:370:38: 370:67
    let mut _39: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:370:38: 370:67
    let _40: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:370:59: 370:66
    let mut _41: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:370:24: 370:35
    let _43: ();                         // in scope 0 at cita-network/src/synchronizer.rs:371:21: 371:50
    let mut _44: &mut std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:371:21: 371:50
    let mut _45: libproto::Block;        // in scope 0 at cita-network/src/synchronizer.rs:371:33: 371:49
    let mut _46: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:378:13: 378:24
    let mut _47: std::option::Option<&libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:381:30: 381:43
    let mut _48: &[libproto::Block];     // in scope 0 at cita-network/src/synchronizer.rs:381:30: 381:43
    let _49: &[libproto::Block];         // in scope 0 at cita-network/src/synchronizer.rs:381:30: 381:43
    let mut _50: &std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:381:30: 381:43
    let mut _51: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:381:16: 381:27
    let mut _53: std::option::Option<&libproto::BlockHeader>; // in scope 0 at cita-network/src/synchronizer.rs:382:35: 382:56
    let mut _54: &protobuf::singular::SingularPtrField<libproto::BlockHeader>; // in scope 0 at cita-network/src/synchronizer.rs:382:35: 382:56
    let mut _55: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:382:20: 382:32
    let mut _58: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:383:30: 383:49
    let mut _59: (u64, bool);            // in scope 0 at cita-network/src/synchronizer.rs:383:30: 383:53
    let mut _60: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:385:20: 385:49
    let mut _61: u64;                    // in scope 0 at cita-network/src/synchronizer.rs:385:29: 385:49
    let mut _62: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:391:12: 391:59
    let mut _63: &std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:391:12: 391:59
    let _64: ();                         // in scope 0 at cita-network/src/synchronizer.rs:392:13: 392:76
    let mut _65: &mut std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:392:13: 392:76
    let mut _66: libproto::Block;        // in scope 0 at cita-network/src/synchronizer.rs:392:25: 392:75
    let mut _67: std::option::Option<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:392:25: 392:66
    let mut _68: &mut std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:392:25: 392:66
    let _69: ();                         // in scope 0 at cita-network/src/synchronizer.rs:395:9: 395:32
    let mut _70: std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:395:25: 395:31
    let mut _71: std::time::Instant;     // in scope 0 at cita-network/src/synchronizer.rs:397:37: 397:51
    let mut _77: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:398:5: 398:6
    scope 1 {
        debug height => _2;              // in scope 1 at cita-network/src/synchronizer.rs:354:13: 354:23
        let _6: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _32: std::vec::Vec<libproto::Block>; // in scope 1 at cita-network/src/synchronizer.rs:365:13: 365:23
        scope 2 {
            debug lvl => _6;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _74: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _75: &[&str; 4];     // in scope 2 at cita-network/src/synchronizer.rs:356:13: 359:31
            let mut _76: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug blocks => _32;         // in scope 3 at cita-network/src/synchronizer.rs:365:13: 365:23
            let _33: u64;                // in scope 3 at cita-network/src/synchronizer.rs:366:13: 366:23
            scope 4 {
                debug end_height => _33; // in scope 4 at cita-network/src/synchronizer.rs:366:13: 366:23
                let mut _72: &u64;       // in scope 4 at cita-network/src/synchronizer.rs:392:49: 392:65
                let mut _73: &u64;       // in scope 4 at cita-network/src/synchronizer.rs:391:42: 391:58
                scope 5 {
                    debug block => _42;  // in scope 5 at cita-network/src/synchronizer.rs:370:29: 370:34
                    let _42: &libproto::Block; // in scope 5 at cita-network/src/synchronizer.rs:370:29: 370:34
                }
                scope 6 {
                    debug block => _52;  // in scope 6 at cita-network/src/synchronizer.rs:381:21: 381:26
                    let _52: &libproto::Block; // in scope 6 at cita-network/src/synchronizer.rs:381:21: 381:26
                    scope 7 {
                        debug header => _56; // in scope 7 at cita-network/src/synchronizer.rs:382:25: 382:31
                        let _56: &libproto::BlockHeader; // in scope 7 at cita-network/src/synchronizer.rs:382:25: 382:31
                        let _57: u64;    // in scope 7 at cita-network/src/synchronizer.rs:383:21: 383:27
                        scope 8 {
                            debug height => _57; // in scope 8 at cita-network/src/synchronizer.rs:383:21: 383:27
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _77 = const false;               // scope 0 at cita-network/src/synchronizer.rs:354:13: 354:23
        _4 = &((*_1).2: libproto::Status); // scope 0 at cita-network/src/synchronizer.rs:354:26: 354:58
        _3 = libproto::Status::get_height(move _4) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:354:26: 354:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:354:46: 354:56
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = CheckedAdd(_3, const 1_u64); // scope 0 at cita-network/src/synchronizer.rs:354:26: 354:62
        assert(!move (_5.1: bool), "attempt to compute `{} + {}`, which would overflow", move _3, const 1_u64) -> bb2; // scope 0 at cita-network/src/synchronizer.rs:354:26: 354:62
    }

    bb2: {
        _2 = move (_5.0: u64);           // scope 0 at cita-network/src/synchronizer.rs:354:26: 354:62
        _6 = log::Level::Debug;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _9 = &_6;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _76 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::submit_blocks, [], Some(promoted[4])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _76) -> bb6; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _11 = &_6;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> bb7;   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _7) -> [0: bb17, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _8) -> [0: bb3, otherwise: bb4]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _12 = &_13;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> bb8; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _7 = move _10;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _75 = const _;                   // scope 2 at cita-network/src/synchronizer.rs:356:13: 359:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:356:13: 359:31
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(synchronizer::Synchronizer::submit_blocks, [], Some(promoted[3])) }
        _16 = _75 as &[&str] (Pointer(Unsize)); // scope 2 at cita-network/src/synchronizer.rs:356:13: 359:31
        _21 = &_2;                       // scope 2 at cita-network/src/synchronizer.rs:360:13: 360:19
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_21) -> bb10; // scope 2 at cita-network/src/synchronizer.rs:360:13: 360:19
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:360:13: 360:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _25 = &((*_1).2: libproto::Status); // scope 2 at cita-network/src/synchronizer.rs:361:13: 361:45
        _24 = libproto::Status::get_height(move _25) -> bb11; // scope 2 at cita-network/src/synchronizer.rs:361:13: 361:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:361:33: 361:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb11: {
        _23 = &_24;                      // scope 2 at cita-network/src/synchronizer.rs:361:13: 361:45
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_23) -> bb12; // scope 2 at cita-network/src/synchronizer.rs:361:13: 361:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:361:13: 361:45
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb12: {
        _27 = &((*_1).4: u64);           // scope 2 at cita-network/src/synchronizer.rs:362:13: 362:33
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_27) -> bb13; // scope 2 at cita-network/src/synchronizer.rs:362:13: 362:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:362:13: 362:33
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 2 at cita-network/src/synchronizer.rs:363:13: 363:35
        _30 = BTreeMap::<u64, libproto::Block>::len(move _31) -> bb14; // scope 2 at cita-network/src/synchronizer.rs:363:13: 363:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:363:30: 363:33
                                         // + literal: Const { ty: for<'a> fn(&'a BTreeMap<u64, libproto::Block>) -> usize {BTreeMap::<u64, libproto::Block>::len}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = &_30;                      // scope 2 at cita-network/src/synchronizer.rs:363:13: 363:35
        _28 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_29) -> bb15; // scope 2 at cita-network/src/synchronizer.rs:363:13: 363:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:363:13: 363:35
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb15: {
        _19 = [move _20, move _22, move _26, move _28]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = &_19;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = Arguments::<'_>::new_v1(move _16, move _17) -> bb16; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _74 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::submit_blocks, [], Some(promoted[2])) }
        _14 = log::__private_api_log(move _15, _6, _74) -> bb17; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb17: {
        _77 = const true;                // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
        _32 = Vec::<libproto::Block>::new() -> bb18; // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:59
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:44:36: 44:57
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> Vec<libproto::Block> {Vec::<libproto::Block>::new}, val: Value(<ZST>) }
    }

    bb18: {
        _34 = _2;                        // scope 3 at cita-network/src/synchronizer.rs:366:26: 366:32
        _35 = CheckedAdd(_34, const _);  // scope 3 at cita-network/src/synchronizer.rs:366:26: 366:44
        assert(!move (_35.1: bool), "attempt to compute `{} + {}`, which would overflow", move _34, const _) -> [success: bb19, unwind: bb46]; // scope 3 at cita-network/src/synchronizer.rs:366:26: 366:44
    }

    bb19: {
        _33 = move (_35.0: u64);         // scope 3 at cita-network/src/synchronizer.rs:366:26: 366:44
        goto -> bb20;                    // scope 4 at cita-network/src/synchronizer.rs:368:9: 379:10
    }

    bb20: {
        _37 = _2;                        // scope 4 at cita-network/src/synchronizer.rs:369:16: 369:22
        _36 = Le(move _37, _33);         // scope 4 at cita-network/src/synchronizer.rs:369:16: 369:36
        switchInt(move _36) -> [0: bb27, otherwise: bb21]; // scope 4 at cita-network/src/synchronizer.rs:369:16: 369:36
    }

    bb21: {
        _39 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 5 at cita-network/src/synchronizer.rs:370:38: 370:67
        _40 = &_2;                       // scope 5 at cita-network/src/synchronizer.rs:370:59: 370:66
        _38 = BTreeMap::<u64, libproto::Block>::get::<u64>(move _39, _40) -> [return: bb22, unwind: bb46]; // scope 5 at cita-network/src/synchronizer.rs:370:38: 370:67
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:370:55: 370:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<u64, libproto::Block>, &'b u64) -> std::option::Option<&'a libproto::Block> {BTreeMap::<u64, libproto::Block>::get::<u64>}, val: Value(<ZST>) }
    }

    bb22: {
        _41 = discriminant(_38);         // scope 5 at cita-network/src/synchronizer.rs:370:24: 370:35
        switchInt(move _41) -> [1: bb23, otherwise: bb27]; // scope 5 at cita-network/src/synchronizer.rs:370:24: 370:35
    }

    bb23: {
        _42 = ((_38 as Some).0: &libproto::Block); // scope 5 at cita-network/src/synchronizer.rs:370:29: 370:34
        _44 = &mut _32;                  // scope 5 at cita-network/src/synchronizer.rs:371:21: 371:50
        _45 = <libproto::Block as ToOwned>::to_owned(_42) -> [return: bb24, unwind: bb46]; // scope 5 at cita-network/src/synchronizer.rs:371:33: 371:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:371:39: 371:47
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Block) -> <libproto::Block as ToOwned>::Owned {<libproto::Block as ToOwned>::to_owned}, val: Value(<ZST>) }
    }

    bb24: {
        _43 = Vec::<libproto::Block>::push(move _44, move _45) -> [return: bb25, unwind: bb46]; // scope 5 at cita-network/src/synchronizer.rs:371:21: 371:50
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:371:28: 371:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<libproto::Block>, libproto::Block) {Vec::<libproto::Block>::push}, val: Value(<ZST>) }
    }

    bb25: {
        _46 = CheckedAdd(_2, const 1_u64); // scope 4 at cita-network/src/synchronizer.rs:378:13: 378:24
        assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_u64) -> [success: bb26, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:378:13: 378:24
    }

    bb26: {
        _2 = move (_46.0: u64);          // scope 4 at cita-network/src/synchronizer.rs:378:13: 378:24
        goto -> bb20;                    // scope 4 at cita-network/src/synchronizer.rs:368:9: 379:10
    }

    bb27: {
        _50 = &_32;                      // scope 6 at cita-network/src/synchronizer.rs:381:30: 381:43
        _49 = <Vec<libproto::Block> as Deref>::deref(move _50) -> [return: bb28, unwind: bb46]; // scope 6 at cita-network/src/synchronizer.rs:381:30: 381:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:381:30: 381:43
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Block>) -> &'a <Vec<libproto::Block> as Deref>::Target {<Vec<libproto::Block> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb28: {
        _48 = _49;                       // scope 6 at cita-network/src/synchronizer.rs:381:30: 381:43
        _47 = core::slice::<impl [libproto::Block]>::last(move _48) -> [return: bb29, unwind: bb46]; // scope 6 at cita-network/src/synchronizer.rs:381:30: 381:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:381:37: 381:41
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Block]) -> std::option::Option<&'a libproto::Block> {core::slice::<impl [libproto::Block]>::last}, val: Value(<ZST>) }
    }

    bb29: {
        _51 = discriminant(_47);         // scope 6 at cita-network/src/synchronizer.rs:381:16: 381:27
        switchInt(move _51) -> [1: bb30, otherwise: bb36]; // scope 6 at cita-network/src/synchronizer.rs:381:16: 381:27
    }

    bb30: {
        _52 = ((_47 as Some).0: &libproto::Block); // scope 6 at cita-network/src/synchronizer.rs:381:21: 381:26
        _54 = &((*_52).1: protobuf::singular::SingularPtrField<libproto::BlockHeader>); // scope 7 at cita-network/src/synchronizer.rs:382:35: 382:56
        _53 = protobuf::singular::SingularPtrField::<libproto::BlockHeader>::as_ref(move _54) -> [return: bb31, unwind: bb46]; // scope 7 at cita-network/src/synchronizer.rs:382:35: 382:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:382:48: 382:54
                                         // + literal: Const { ty: for<'a> fn(&'a protobuf::singular::SingularPtrField<libproto::BlockHeader>) -> std::option::Option<&'a libproto::BlockHeader> {protobuf::singular::SingularPtrField::<libproto::BlockHeader>::as_ref}, val: Value(<ZST>) }
    }

    bb31: {
        _55 = discriminant(_53);         // scope 7 at cita-network/src/synchronizer.rs:382:20: 382:32
        switchInt(move _55) -> [1: bb32, otherwise: bb36]; // scope 7 at cita-network/src/synchronizer.rs:382:20: 382:32
    }

    bb32: {
        _56 = ((_53 as Some).0: &libproto::BlockHeader); // scope 7 at cita-network/src/synchronizer.rs:382:25: 382:31
        _58 = libproto::BlockHeader::get_height(_56) -> [return: bb33, unwind: bb46]; // scope 7 at cita-network/src/synchronizer.rs:383:30: 383:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:383:37: 383:47
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockHeader) -> u64 {libproto::BlockHeader::get_height}, val: Value(<ZST>) }
    }

    bb33: {
        _59 = CheckedSub(_58, const 1_u64); // scope 7 at cita-network/src/synchronizer.rs:383:30: 383:53
        assert(!move (_59.1: bool), "attempt to compute `{} - {}`, which would overflow", move _58, const 1_u64) -> [success: bb34, unwind: bb46]; // scope 7 at cita-network/src/synchronizer.rs:383:30: 383:53
    }

    bb34: {
        _57 = move (_59.0: u64);         // scope 7 at cita-network/src/synchronizer.rs:383:30: 383:53
        _61 = ((*_1).4: u64);            // scope 8 at cita-network/src/synchronizer.rs:385:29: 385:49
        _60 = Gt(_57, move _61);         // scope 8 at cita-network/src/synchronizer.rs:385:20: 385:49
        switchInt(move _60) -> [0: bb36, otherwise: bb35]; // scope 8 at cita-network/src/synchronizer.rs:385:20: 385:49
    }

    bb35: {
        ((*_1).4: u64) = _57;            // scope 8 at cita-network/src/synchronizer.rs:386:21: 386:50
        goto -> bb36;                    // scope 8 at cita-network/src/synchronizer.rs:385:17: 387:18
    }

    bb36: {
        _63 = &((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 4 at cita-network/src/synchronizer.rs:391:12: 391:59
        _73 = const _;                   // scope 4 at cita-network/src/synchronizer.rs:391:42: 391:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:391:42: 391:58
                                         // + literal: Const { ty: &u64, val: Unevaluated(synchronizer::Synchronizer::submit_blocks, [], Some(promoted[1])) }
        _62 = BTreeMap::<u64, libproto::Block>::contains_key::<u64>(move _63, _73) -> [return: bb37, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:391:12: 391:59
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:391:29: 391:41
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BTreeMap<u64, libproto::Block>, &'b u64) -> bool {BTreeMap::<u64, libproto::Block>::contains_key::<u64>}, val: Value(<ZST>) }
    }

    bb37: {
        switchInt(move _62) -> [0: bb41, otherwise: bb38]; // scope 4 at cita-network/src/synchronizer.rs:391:12: 391:59
    }

    bb38: {
        _65 = &mut _32;                  // scope 4 at cita-network/src/synchronizer.rs:392:13: 392:76
        _68 = &mut ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 4 at cita-network/src/synchronizer.rs:392:25: 392:66
        _72 = const _;                   // scope 4 at cita-network/src/synchronizer.rs:392:49: 392:65
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:392:49: 392:65
                                         // + literal: Const { ty: &u64, val: Unevaluated(synchronizer::Synchronizer::submit_blocks, [], Some(promoted[0])) }
        _67 = BTreeMap::<u64, libproto::Block>::remove::<u64>(move _68, _72) -> [return: bb39, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:392:25: 392:66
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:392:42: 392:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<u64, libproto::Block>, &'b u64) -> std::option::Option<libproto::Block> {BTreeMap::<u64, libproto::Block>::remove::<u64>}, val: Value(<ZST>) }
    }

    bb39: {
        _66 = std::option::Option::<libproto::Block>::unwrap(move _67) -> [return: bb40, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:392:25: 392:75
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:392:67: 392:73
                                         // + literal: Const { ty: fn(std::option::Option<libproto::Block>) -> libproto::Block {std::option::Option::<libproto::Block>::unwrap}, val: Value(<ZST>) }
    }

    bb40: {
        _64 = Vec::<libproto::Block>::push(move _65, move _66) -> [return: bb47, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:392:13: 392:76
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:392:20: 392:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<libproto::Block>, libproto::Block) {Vec::<libproto::Block>::push}, val: Value(<ZST>) }
    }

    bb41: {
        _77 = const false;               // scope 4 at cita-network/src/synchronizer.rs:395:25: 395:31
        _70 = move _32;                  // scope 4 at cita-network/src/synchronizer.rs:395:25: 395:31
        _69 = synchronizer::Synchronizer::pub_blocks(_1, move _70) -> [return: bb42, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:395:9: 395:32
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:395:14: 395:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, Vec<libproto::Block>) {synchronizer::Synchronizer::pub_blocks}, val: Value(<ZST>) }
    }

    bb42: {
        ((*_1).5: bool) = const true;    // scope 4 at cita-network/src/synchronizer.rs:396:9: 396:37
        _71 = Instant::now() -> [return: bb43, unwind: bb46]; // scope 4 at cita-network/src/synchronizer.rs:397:37: 397:51
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:397:37: 397:49
                                         // + literal: Const { ty: fn() -> Instant {Instant::now}, val: Value(<ZST>) }
    }

    bb43: {
        ((*_1).9: std::time::Instant) = move _71; // scope 4 at cita-network/src/synchronizer.rs:397:9: 397:51
        _77 = const false;               // scope 1 at cita-network/src/synchronizer.rs:398:5: 398:6
        return;                          // scope 0 at cita-network/src/synchronizer.rs:398:6: 398:6
    }

    bb44 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:353:5: 398:6
    }

    bb45 (cleanup): {
        drop(_32) -> bb44;               // scope 1 at cita-network/src/synchronizer.rs:398:5: 398:6
    }

    bb46 (cleanup): {
        switchInt(_77) -> [0: bb44, otherwise: bb45]; // scope 1 at cita-network/src/synchronizer.rs:398:5: 398:6
    }

    bb47: {
        goto -> bb41;                    // scope 4 at cita-network/src/synchronizer.rs:392:13: 392:76
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks: &u64 = {
    let mut _0: &u64;                    // return place in scope 0 at cita-network/src/synchronizer.rs:392:49: 392:65
    let mut _1: u64;                     // in scope 0 at cita-network/src/synchronizer.rs:392:50: 392:65

    bb0: {
        _1 = const _;                    // scope 0 at cita-network/src/synchronizer.rs:392:50: 392:65
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:392:49: 392:65
        return;                          // scope 0 at cita-network/src/synchronizer.rs:392:49: 392:65
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks: &u64 = {
    let mut _0: &u64;                    // return place in scope 0 at cita-network/src/synchronizer.rs:391:42: 391:58
    let mut _1: u64;                     // in scope 0 at cita-network/src/synchronizer.rs:391:43: 391:58

    bb0: {
        _1 = const _;                    // scope 0 at cita-network/src/synchronizer.rs:391:43: 391:58
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:391:42: 391:58
        return;                          // scope 0 at cita-network/src/synchronizer.rs:391:42: 391:58
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:355:9: 364:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:355:9: 364:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:355:9: 364:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:355:9: 364:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:355:9: 364:10
        _1 = (move _2, move _4, move _6, const 355_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31

    bb0: {
        _1 = [const "sync: submit_blocks:submit_height = ", const ",current height = ", const ",sync_end_height = ", const ",block_lists = "]; // scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:356:13: 359:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:356:13: 359:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:356:13: 359:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:356:13: 359:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31
        return;                          // scope 0 at cita-network/src/synchronizer.rs:356:13: 359:31
    }
}

promoted[4] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::submit_blocks: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::pub_blocks(_1: &mut synchronizer::Synchronizer, _2: Vec<libproto::Block>) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:400:19: 400:28
    debug blocks => _2;                  // in scope 0 at cita-network/src/synchronizer.rs:400:30: 400:36
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:400:50: 400:50
    let mut _3: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
    let mut _4: bool;                    // in scope 0 at cita-network/src/synchronizer.rs:401:13: 401:30
    let mut _5: &std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:401:13: 401:30
    let _6: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:406:17: 406:49
    let _21: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:406:17: 406:49
    let _22: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:406:17: 406:49
    let mut _23: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:406:17: 406:49
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:407:17: 407:37
    let _25: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:407:17: 407:37
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:408:17: 408:29
    let _27: &usize;                     // in scope 0 at cita-network/src/synchronizer.rs:408:17: 408:29
    let _28: usize;                      // in scope 0 at cita-network/src/synchronizer.rs:408:17: 408:29
    let mut _29: &std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:408:17: 408:29
    let mut _30: libproto::SyncResponse; // in scope 0 at cita-network/src/synchronizer.rs:410:17: 410:29
    let _31: ();                         // in scope 0 at cita-network/src/synchronizer.rs:411:13: 411:47
    let mut _32: &mut libproto::SyncResponse; // in scope 0 at cita-network/src/synchronizer.rs:411:13: 411:47
    let mut _33: protobuf::repeated::RepeatedField<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:411:33: 411:46
    let mut _34: std::vec::Vec<libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:411:33: 411:39
    let mut _36: libproto::SyncResponse; // in scope 0 at cita-network/src/synchronizer.rs:412:32: 412:40
    let _37: ();                         // in scope 0 at cita-network/src/synchronizer.rs:413:13: 416:15
    let mut _38: &mq_agent::MqAgentClient; // in scope 0 at cita-network/src/synchronizer.rs:413:13: 416:15
    let mut _39: mq_agent::PubMessage;   // in scope 0 at cita-network/src/synchronizer.rs:413:44: 416:14
    let mut _40: std::string::String;    // in scope 0 at cita-network/src/synchronizer.rs:414:17: 414:57
    let mut _41: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _42: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _43: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _44: std::vec::Vec<u8>;      // in scope 0 at cita-network/src/synchronizer.rs:415:17: 415:40
    let mut _45: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-network/src/synchronizer.rs:415:17: 415:31
    let mut _46: libproto::Message;      // in scope 0 at cita-network/src/synchronizer.rs:415:17: 415:20
    let mut _50: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:418:5: 418:6
    let mut _51: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:416:13: 416:14
    let mut _52: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:417:9: 417:10
    let mut _53: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:417:9: 417:10
    scope 1 {
        debug lvl => _6;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _47: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _48: &[&str; 4];         // in scope 1 at cita-network/src/synchronizer.rs:403:17: 405:29
        let mut _49: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug sync_res => _30;           // in scope 2 at cita-network/src/synchronizer.rs:410:17: 410:29
        let _35: libproto::Message;      // in scope 2 at cita-network/src/synchronizer.rs:412:17: 412:20
        scope 3 {
            debug msg => _35;            // in scope 3 at cita-network/src/synchronizer.rs:412:17: 412:20
        }
    }

    bb0: {
        _50 = const false;               // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        _52 = const false;               // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        _51 = const false;               // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        _53 = const false;               // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        _50 = const true;                // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        _5 = &_2;                        // scope 0 at cita-network/src/synchronizer.rs:401:13: 401:30
        _4 = Vec::<libproto::Block>::is_empty(move _5) -> [return: bb1, unwind: bb37]; // scope 0 at cita-network/src/synchronizer.rs:401:13: 401:30
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:401:20: 401:28
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Block>) -> bool {Vec::<libproto::Block>::is_empty}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Not(move _4);               // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
        switchInt(move _3) -> [0: bb26, otherwise: bb2]; // scope 0 at cita-network/src/synchronizer.rs:401:12: 401:30
    }

    bb2: {
        _6 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _9 = &_6;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _49 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::pub_blocks, [], Some(promoted[2])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _49) -> [return: bb6, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        _11 = &_6;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> [return: bb7, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _7) -> [0: bb16, otherwise: bb9]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        switchInt(move _8) -> [0: bb3, otherwise: bb4]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _12 = &_13;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> [return: bb8, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _7 = move _10;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb5;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _48 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:403:17: 405:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:403:17: 405:29
                                         // + literal: Const { ty: &[&str; 4], val: Unevaluated(synchronizer::Synchronizer::pub_blocks, [], Some(promoted[1])) }
        _16 = _48 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:403:17: 405:29
        _23 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:406:17: 406:49
        _22 = libproto::Status::get_height(move _23) -> [return: bb10, unwind: bb37]; // scope 1 at cita-network/src/synchronizer.rs:406:17: 406:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:406:37: 406:47
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb10: {
        _21 = &_22;                      // scope 1 at cita-network/src/synchronizer.rs:406:17: 406:49
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_21) -> [return: bb11, unwind: bb37]; // scope 1 at cita-network/src/synchronizer.rs:406:17: 406:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:406:17: 406:49
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = &((*_1).4: u64);           // scope 1 at cita-network/src/synchronizer.rs:407:17: 407:37
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_25) -> [return: bb12, unwind: bb37]; // scope 1 at cita-network/src/synchronizer.rs:407:17: 407:37
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:407:17: 407:37
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb12: {
        _29 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:408:17: 408:29
        _28 = Vec::<libproto::Block>::len(move _29) -> [return: bb13, unwind: bb37]; // scope 1 at cita-network/src/synchronizer.rs:408:17: 408:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:408:24: 408:27
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Block>) -> usize {Vec::<libproto::Block>::len}, val: Value(<ZST>) }
    }

    bb13: {
        _27 = &_28;                      // scope 1 at cita-network/src/synchronizer.rs:408:17: 408:29
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_27) -> [return: bb14, unwind: bb37]; // scope 1 at cita-network/src/synchronizer.rs:408:17: 408:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:408:17: 408:29
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb14: {
        _19 = [move _20, move _24, move _26]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = &_19;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = Arguments::<'_>::new_v1(move _16, move _17) -> [return: bb15, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _47 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::pub_blocks, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _47) -> [return: bb38, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = libproto::SyncResponse::new() -> [return: bb17, unwind: bb37]; // scope 0 at cita-network/src/synchronizer.rs:410:32: 410:51
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:410:32: 410:49
                                         // + literal: Const { ty: fn() -> libproto::SyncResponse {libproto::SyncResponse::new}, val: Value(<ZST>) }
    }

    bb17: {
        _53 = const true;                // scope 2 at cita-network/src/synchronizer.rs:411:13: 411:47
        _32 = &mut _30;                  // scope 2 at cita-network/src/synchronizer.rs:411:13: 411:47
        _50 = const false;               // scope 2 at cita-network/src/synchronizer.rs:411:33: 411:39
        _34 = move _2;                   // scope 2 at cita-network/src/synchronizer.rs:411:33: 411:39
        _33 = <Vec<libproto::Block> as Into<protobuf::repeated::RepeatedField<libproto::Block>>>::into(move _34) -> [return: bb18, unwind: bb35]; // scope 2 at cita-network/src/synchronizer.rs:411:33: 411:46
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:411:40: 411:44
                                         // + literal: Const { ty: fn(Vec<libproto::Block>) -> protobuf::repeated::RepeatedField<libproto::Block> {<Vec<libproto::Block> as Into<protobuf::repeated::RepeatedField<libproto::Block>>>::into}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = libproto::SyncResponse::set_blocks(move _32, move _33) -> [return: bb19, unwind: bb35]; // scope 2 at cita-network/src/synchronizer.rs:411:13: 411:47
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:411:22: 411:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SyncResponse, protobuf::repeated::RepeatedField<libproto::Block>) {libproto::SyncResponse::set_blocks}, val: Value(<ZST>) }
    }

    bb19: {
        _53 = const false;               // scope 2 at cita-network/src/synchronizer.rs:412:32: 412:40
        _36 = move _30;                  // scope 2 at cita-network/src/synchronizer.rs:412:32: 412:40
        _35 = <libproto::SyncResponse as Into<libproto::Message>>::into(move _36) -> [return: bb20, unwind: bb35]; // scope 2 at cita-network/src/synchronizer.rs:412:32: 412:47
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:412:41: 412:45
                                         // + literal: Const { ty: fn(libproto::SyncResponse) -> libproto::Message {<libproto::SyncResponse as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb20: {
        _52 = const true;                // scope 2 at cita-network/src/synchronizer.rs:412:46: 412:47
        _38 = &((*_1).0: mq_agent::MqAgentClient); // scope 3 at cita-network/src/synchronizer.rs:413:13: 416:15
        _42 = const Net;                 // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _43 = const libproto::router::MsgType::SyncResponse; // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x04)) }
        _41 = RoutingKey(move _42, move _43); // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _40 = <RoutingKey as Into<std::string::String>>::into(move _41) -> [return: bb21, unwind: bb33]; // scope 3 at cita-network/src/synchronizer.rs:414:17: 414:57
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:414:51: 414:55
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb21: {
        _51 = const true;                // scope 3 at cita-network/src/synchronizer.rs:414:56: 414:57
        _52 = const false;               // scope 3 at cita-network/src/synchronizer.rs:415:17: 415:20
        _46 = move _35;                  // scope 3 at cita-network/src/synchronizer.rs:415:17: 415:20
        _45 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _46) -> [return: bb22, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:415:17: 415:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:415:21: 415:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb22: {
        _44 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _45) -> [return: bb23, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:415:17: 415:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:415:32: 415:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb23: {
        _51 = const false;               // scope 3 at cita-network/src/synchronizer.rs:413:44: 416:14
        _39 = PubMessage::new(move _40, move _44) -> [return: bb24, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:413:44: 416:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:413:44: 413:59
                                         // + literal: Const { ty: fn(std::string::String, Vec<u8>) -> PubMessage {PubMessage::new}, val: Value(<ZST>) }
    }

    bb24: {
        _51 = const false;               // scope 3 at cita-network/src/synchronizer.rs:416:13: 416:14
        _37 = MqAgentClient::pub_sync_blocks(move _38, move _39) -> [return: bb25, unwind: bb33]; // scope 3 at cita-network/src/synchronizer.rs:413:13: 416:15
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:413:28: 413:43
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgentClient, PubMessage) {MqAgentClient::pub_sync_blocks}, val: Value(<ZST>) }
    }

    bb25: {
        _52 = const false;               // scope 2 at cita-network/src/synchronizer.rs:417:9: 417:10
        _53 = const false;               // scope 0 at cita-network/src/synchronizer.rs:417:9: 417:10
        goto -> bb26;                    // scope 0 at cita-network/src/synchronizer.rs:401:9: 417:10
    }

    bb26: {
        switchInt(_50) -> [0: bb27, otherwise: bb29]; // scope 0 at cita-network/src/synchronizer.rs:418:5: 418:6
    }

    bb27: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:418:6: 418:6
    }

    bb28 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:400:5: 418:6
    }

    bb29: {
        drop(_2) -> bb27;                // scope 0 at cita-network/src/synchronizer.rs:418:5: 418:6
    }

    bb30 (cleanup): {
        drop(_40) -> bb33;               // scope 3 at cita-network/src/synchronizer.rs:416:13: 416:14
    }

    bb31 (cleanup): {
        switchInt(_51) -> [0: bb33, otherwise: bb30]; // scope 3 at cita-network/src/synchronizer.rs:416:13: 416:14
    }

    bb32 (cleanup): {
        drop(_35) -> bb35;               // scope 2 at cita-network/src/synchronizer.rs:417:9: 417:10
    }

    bb33 (cleanup): {
        switchInt(_52) -> [0: bb35, otherwise: bb32]; // scope 2 at cita-network/src/synchronizer.rs:417:9: 417:10
    }

    bb34 (cleanup): {
        drop(_30) -> bb37;               // scope 0 at cita-network/src/synchronizer.rs:417:9: 417:10
    }

    bb35 (cleanup): {
        switchInt(_53) -> [0: bb37, otherwise: bb34]; // scope 0 at cita-network/src/synchronizer.rs:417:9: 417:10
    }

    bb36 (cleanup): {
        drop(_2) -> bb28;                // scope 0 at cita-network/src/synchronizer.rs:418:5: 418:6
    }

    bb37 (cleanup): {
        switchInt(_50) -> [0: bb28, otherwise: bb36]; // scope 0 at cita-network/src/synchronizer.rs:418:5: 418:6
    }

    bb38: {
        goto -> bb16;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::pub_blocks: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:402:13: 409:14
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:402:13: 409:14

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:402:13: 409:14
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:402:13: 409:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:402:13: 409:14
        _1 = (move _2, move _4, move _6, const 402_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::pub_blocks: &[&str; 4] = {
    let mut _0: &[&str; 4];              // return place in scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29
    let mut _1: [&str; 4];               // in scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29

    bb0: {
        _1 = [const "sync: pub_blocks: current height = ", const ", sync_end_height = ", const ", len = ", const ", "]; // scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:403:17: 405:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:403:17: 405:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:403:17: 405:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:403:17: 405:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29
        return;                          // scope 0 at cita-network/src/synchronizer.rs:403:17: 405:29
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::pub_blocks: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::add_latest_sync_lists(_1: &mut synchronizer::Synchronizer, _2: u64, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:420:30: 420:39
    debug height => _2;                  // in scope 0 at cita-network/src/synchronizer.rs:420:41: 420:47
    debug origin => _3;                  // in scope 0 at cita-network/src/synchronizer.rs:420:54: 420:60
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:420:67: 420:67
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 3]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:425:13: 425:45
    let _19: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:425:13: 425:45
    let _20: u64;                        // in scope 0 at cita-network/src/synchronizer.rs:425:13: 425:45
    let mut _21: &libproto::Status;      // in scope 0 at cita-network/src/synchronizer.rs:425:13: 425:45
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:426:13: 426:19
    let _23: &u32;                       // in scope 0 at cita-network/src/synchronizer.rs:426:13: 426:19
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:427:13: 427:19
    let _25: &u64;                       // in scope 0 at cita-network/src/synchronizer.rs:427:13: 427:19
    let _26: bool;                       // in scope 0 at cita-network/src/synchronizer.rs:429:13: 429:25
    let mut _27: &mut std::collections::HashSet<&u32>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 438:29
    let mut _28: std::collections::HashSet<&u32>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 437:15
    let mut _29: std::collections::vec_deque::Iter<'_, u32>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 433:20
    let mut _30: &std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 433:20
    let _31: &mut std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 432:43
    let mut _32: std::collections::btree_map::Entry<'_, u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 431:27
    let mut _33: &mut std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:429:28: 431:27
    let mut _34: std::collections::HashSet<&u32>; // in scope 0 at cita-network/src/synchronizer.rs:434:19: 434:33
    let _35: &u32;                       // in scope 0 at cita-network/src/synchronizer.rs:438:21: 438:28
    let mut _36: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:439:12: 439:24
    let _37: ();                         // in scope 0 at cita-network/src/synchronizer.rs:440:13: 443:35
    let mut _38: &mut std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:440:13: 443:35
    let mut _39: &mut std::collections::VecDeque<u32>; // in scope 0 at cita-network/src/synchronizer.rs:440:13: 442:47
    let mut _40: std::collections::btree_map::Entry<'_, u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:440:13: 441:31
    let mut _41: &mut std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>; // in scope 0 at cita-network/src/synchronizer.rs:440:13: 441:31
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _42: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _43: &[&str; 3];         // in scope 1 at cita-network/src/synchronizer.rs:422:13: 424:26
        let mut _44: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug insert_is_ok => _26;       // in scope 2 at cita-network/src/synchronizer.rs:429:13: 429:25
    }

    bb0: {
        _4 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _44 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(synchronizer::Synchronizer::add_latest_sync_lists, [], Some(promoted[2])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _44) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _5) -> [0: bb13, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _6) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _43 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:422:13: 424:26
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:422:13: 424:26
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(synchronizer::Synchronizer::add_latest_sync_lists, [], Some(promoted[1])) }
        _14 = _43 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:422:13: 424:26
        _21 = &((*_1).2: libproto::Status); // scope 1 at cita-network/src/synchronizer.rs:425:13: 425:45
        _20 = libproto::Status::get_height(move _21) -> bb8; // scope 1 at cita-network/src/synchronizer.rs:425:13: 425:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:425:33: 425:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Status) -> u64 {libproto::Status::get_height}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = &_20;                      // scope 1 at cita-network/src/synchronizer.rs:425:13: 425:45
        _18 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_19) -> bb9; // scope 1 at cita-network/src/synchronizer.rs:425:13: 425:45
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:425:13: 425:45
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _23 = &_3;                       // scope 1 at cita-network/src/synchronizer.rs:426:13: 426:19
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_23) -> bb10; // scope 1 at cita-network/src/synchronizer.rs:426:13: 426:19
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:426:13: 426:19
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb10: {
        _25 = &_2;                       // scope 1 at cita-network/src/synchronizer.rs:427:13: 427:19
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_25) -> bb11; // scope 1 at cita-network/src/synchronizer.rs:427:13: 427:19
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:427:13: 427:19
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb11: {
        _17 = [move _18, move _22, move _24]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _42 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(synchronizer::Synchronizer::add_latest_sync_lists, [], Some(promoted[0])) }
        _12 = log::__private_api_log(move _13, _4, _42) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _33 = &mut ((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>); // scope 0 at cita-network/src/synchronizer.rs:429:28: 431:27
        _32 = BTreeMap::<u64, VecDeque<u32>>::entry(move _33, _2) -> bb14; // scope 0 at cita-network/src/synchronizer.rs:429:28: 431:27
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:431:14: 431:19
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, VecDeque<u32>>, u64) -> std::collections::btree_map::Entry<'a, u64, VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::entry}, val: Value(<ZST>) }
    }

    bb14: {
        _31 = std::collections::btree_map::Entry::<'_, u64, VecDeque<u32>>::or_insert_with::<fn() -> VecDeque<u32> {VecDeque::<u32>::new}>(move _32, VecDeque::<u32>::new) -> bb15; // scope 0 at cita-network/src/synchronizer.rs:429:28: 432:43
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:432:14: 432:28
                                         // + literal: Const { ty: fn(std::collections::btree_map::Entry<'_, u64, VecDeque<u32>>, fn() -> VecDeque<u32> {VecDeque::<u32>::new}) -> &mut VecDeque<u32> {std::collections::btree_map::Entry::<'_, u64, VecDeque<u32>>::or_insert_with::<fn() -> VecDeque<u32> {VecDeque::<u32>::new}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:432:29: 432:42
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> VecDeque<u32> {VecDeque::<u32>::new}, val: Value(<ZST>) }
    }

    bb15: {
        _30 = &(*_31);                   // scope 0 at cita-network/src/synchronizer.rs:429:28: 433:20
        _29 = VecDeque::<u32>::iter(move _30) -> bb16; // scope 0 at cita-network/src/synchronizer.rs:429:28: 433:20
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:433:14: 433:18
                                         // + literal: Const { ty: for<'a> fn(&'a VecDeque<u32>) -> std::collections::vec_deque::Iter<'a, u32> {VecDeque::<u32>::iter}, val: Value(<ZST>) }
    }

    bb16: {
        _34 = HashSet::<&u32>::new() -> bb17; // scope 0 at cita-network/src/synchronizer.rs:434:19: 434:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:434:19: 434:31
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> HashSet<&u32> {HashSet::<&u32>::new}, val: Value(<ZST>) }
    }

    bb17: {
        _28 = <std::collections::vec_deque::Iter<'_, u32> as Iterator>::fold::<HashSet<&u32>, [closure@cita-network/src/synchronizer.rs:434:35: 434:50]>(move _29, move _34, const ZeroSized: [closure@cita-network/src/synchronizer.rs:434:35: 434:50]) -> bb18; // scope 0 at cita-network/src/synchronizer.rs:429:28: 437:15
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:434:14: 434:18
                                         // + literal: Const { ty: fn(std::collections::vec_deque::Iter<'_, u32>, HashSet<&u32>, [closure@cita-network/src/synchronizer.rs:434:35: 434:50]) -> HashSet<&u32> {<std::collections::vec_deque::Iter<'_, u32> as Iterator>::fold::<HashSet<&u32>, [closure@cita-network/src/synchronizer.rs:434:35: 434:50]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/synchronizer.rs:434:35: 434:50], val: Value(<ZST>) }
    }

    bb18: {
        _27 = &mut _28;                  // scope 0 at cita-network/src/synchronizer.rs:429:28: 438:29
        _35 = &_3;                       // scope 0 at cita-network/src/synchronizer.rs:438:21: 438:28
        _26 = HashSet::<&u32>::insert(move _27, _35) -> [return: bb19, unwind: bb25]; // scope 0 at cita-network/src/synchronizer.rs:429:28: 438:29
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:438:14: 438:20
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<&u32>, &u32) -> bool {HashSet::<&u32>::insert}, val: Value(<ZST>) }
    }

    bb19: {
        drop(_28) -> bb20;               // scope 0 at cita-network/src/synchronizer.rs:438:29: 438:30
    }

    bb20: {
        _36 = _26;                       // scope 2 at cita-network/src/synchronizer.rs:439:12: 439:24
        switchInt(move _36) -> [0: bb24, otherwise: bb21]; // scope 2 at cita-network/src/synchronizer.rs:439:12: 439:24
    }

    bb21: {
        _41 = &mut ((*_1).6: std::collections::BTreeMap<u64, std::collections::VecDeque<u32>>); // scope 2 at cita-network/src/synchronizer.rs:440:13: 441:31
        _40 = BTreeMap::<u64, VecDeque<u32>>::entry(move _41, _2) -> bb22; // scope 2 at cita-network/src/synchronizer.rs:440:13: 441:31
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:441:18: 441:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut BTreeMap<u64, VecDeque<u32>>, u64) -> std::collections::btree_map::Entry<'a, u64, VecDeque<u32>> {BTreeMap::<u64, VecDeque<u32>>::entry}, val: Value(<ZST>) }
    }

    bb22: {
        _39 = std::collections::btree_map::Entry::<'_, u64, VecDeque<u32>>::or_insert_with::<fn() -> VecDeque<u32> {VecDeque::<u32>::new}>(move _40, VecDeque::<u32>::new) -> bb23; // scope 2 at cita-network/src/synchronizer.rs:440:13: 442:47
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:442:18: 442:32
                                         // + literal: Const { ty: fn(std::collections::btree_map::Entry<'_, u64, VecDeque<u32>>, fn() -> VecDeque<u32> {VecDeque::<u32>::new}) -> &mut VecDeque<u32> {std::collections::btree_map::Entry::<'_, u64, VecDeque<u32>>::or_insert_with::<fn() -> VecDeque<u32> {VecDeque::<u32>::new}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:442:33: 442:46
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn() -> VecDeque<u32> {VecDeque::<u32>::new}, val: Value(<ZST>) }
    }

    bb23: {
        _38 = _39;                       // scope 2 at cita-network/src/synchronizer.rs:440:13: 443:35
        _37 = VecDeque::<u32>::push_back(move _38, _3) -> bb24; // scope 2 at cita-network/src/synchronizer.rs:440:13: 443:35
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:443:18: 443:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut VecDeque<u32>, u32) {VecDeque::<u32>::push_back}, val: Value(<ZST>) }
    }

    bb24: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:445:6: 445:6
    }

    bb25 (cleanup): {
        drop(_28) -> bb26;               // scope 0 at cita-network/src/synchronizer.rs:438:29: 438:30
    }

    bb26 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:420:5: 445:6
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::add_latest_sync_lists: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:421:9: 428:10
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:421:9: 428:10

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:421:9: 428:10
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:421:9: 428:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:421:9: 428:10
        _1 = (move _2, move _4, move _6, const 421_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::add_latest_sync_lists: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26
    let mut _1: [&str; 3];               // in scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26

    bb0: {
        _1 = [const "sync: add_sync_lists: current height = ", const ", from node = ", const ", height = "]; // scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:422:13: 424:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:422:13: 424:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:422:13: 424:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26
        return;                          // scope 0 at cita-network/src/synchronizer.rs:422:13: 424:26
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::add_latest_sync_lists: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::add_latest_sync_lists::{closure#0}(_1: &mut [closure@cita-network/src/synchronizer.rs:434:35: 434:50], _2: HashSet<&u32>, _3: &u32) -> HashSet<&u32> {
    debug set => _2;                     // in scope 0 at cita-network/src/synchronizer.rs:434:36: 434:43
    debug item => _3;                    // in scope 0 at cita-network/src/synchronizer.rs:434:45: 434:49
    let mut _0: std::collections::HashSet<&u32>; // return place in scope 0 at cita-network/src/synchronizer.rs:434:51: 434:51
    let _4: bool;                        // in scope 0 at cita-network/src/synchronizer.rs:435:17: 435:33
    let mut _5: &mut std::collections::HashSet<&u32>; // in scope 0 at cita-network/src/synchronizer.rs:435:17: 435:33

    bb0: {
        _5 = &mut _2;                    // scope 0 at cita-network/src/synchronizer.rs:435:17: 435:33
        _4 = HashSet::<&u32>::insert(move _5, _3) -> [return: bb1, unwind: bb2]; // scope 0 at cita-network/src/synchronizer.rs:435:17: 435:33
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:435:21: 435:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<&u32>, &u32) -> bool {HashSet::<&u32>::insert}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = move _2;                    // scope 0 at cita-network/src/synchronizer.rs:436:17: 436:20
        return;                          // scope 0 at cita-network/src/synchronizer.rs:437:14: 437:14
    }

    bb2 (cleanup): {
        drop(_2) -> bb3;                 // scope 0 at cita-network/src/synchronizer.rs:437:13: 437:14
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:434:35: 437:14
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:55:1: 55:18>::prune_block_list_cache(_1: &mut synchronizer::Synchronizer, _2: u64) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:448:31: 448:40
    debug height => _2;                  // in scope 0 at cita-network/src/synchronizer.rs:448:42: 448:48
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:448:55: 448:55
    let mut _3: std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:449:28: 449:63
    let mut _4: &mut std::collections::BTreeMap<u64, libproto::Block>; // in scope 0 at cita-network/src/synchronizer.rs:449:28: 449:63
    let _5: &u64;                        // in scope 0 at cita-network/src/synchronizer.rs:449:55: 449:62

    bb0: {
        _4 = &mut ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>); // scope 0 at cita-network/src/synchronizer.rs:449:28: 449:63
        _5 = &_2;                        // scope 0 at cita-network/src/synchronizer.rs:449:55: 449:62
        _3 = BTreeMap::<u64, libproto::Block>::split_off::<u64>(move _4, _5) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:449:28: 449:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:449:45: 449:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BTreeMap<u64, libproto::Block>, &'b u64) -> BTreeMap<u64, libproto::Block> {BTreeMap::<u64, libproto::Block>::split_off::<u64>}, val: Value(<ZST>) }
    }

    bb1: {
        drop(((*_1).7: std::collections::BTreeMap<u64, libproto::Block>)) -> [return: bb2, unwind: bb3]; // scope 0 at cita-network/src/synchronizer.rs:449:9: 449:25
    }

    bb2: {
        ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>) = move _3; // scope 0 at cita-network/src/synchronizer.rs:449:9: 449:25
        return;                          // scope 0 at cita-network/src/synchronizer.rs:450:6: 450:6
    }

    bb3 (cleanup): {
        ((*_1).7: std::collections::BTreeMap<u64, libproto::Block>) = move _3; // scope 0 at cita-network/src/synchronizer.rs:449:9: 449:25
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:448:5: 450:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:453:10: 453:15>::clone(_1: &SynchronizerClient) -> SynchronizerClient {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:453:10: 453:15
    let mut _0: synchronizer::SynchronizerClient; // return place in scope 0 at cita-network/src/synchronizer.rs:453:10: 453:15
    let mut _2: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:455:5: 455:40
    let _3: &pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:455:5: 455:40

    bb0: {
        _3 = &((*_1).0: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>); // scope 0 at cita-network/src/synchronizer.rs:455:5: 455:40
        _2 = <pubsub::crossbeam_channel::Sender<SynchronizerMessage> as Clone>::clone(_3) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:455:5: 455:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:455:5: 455:40
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<SynchronizerMessage>) -> pubsub::crossbeam_channel::Sender<SynchronizerMessage> {<pubsub::crossbeam_channel::Sender<SynchronizerMessage> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = SynchronizerClient { sender: move _2 }; // scope 0 at cita-network/src/synchronizer.rs:453:10: 453:15
        return;                          // scope 0 at cita-network/src/synchronizer.rs:453:15: 453:15
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::new(_1: pubsub::crossbeam_channel::Sender<SynchronizerMessage>) -> SynchronizerClient {
    debug sender => _1;                  // in scope 0 at cita-network/src/synchronizer.rs:459:16: 459:22
    let mut _0: synchronizer::SynchronizerClient; // return place in scope 0 at cita-network/src/synchronizer.rs:459:56: 459:60

    bb0: {
        _0 = SynchronizerClient { sender: move _1 }; // scope 0 at cita-network/src/synchronizer.rs:460:9: 460:38
        return;                          // scope 0 at cita-network/src/synchronizer.rs:461:6: 461:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::handle_local_status(_1: &SynchronizerClient, _2: SynchronizerMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:463:32: 463:37
    debug msg => _2;                     // in scope 0 at cita-network/src/synchronizer.rs:463:39: 463:42
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:463:65: 463:65
    let _3: ();                          // in scope 0 at cita-network/src/synchronizer.rs:464:9: 464:27

    bb0: {
        _3 = SynchronizerClient::send_msg(_1, move _2) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:464:9: 464:27
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:464:14: 464:22
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::send_msg}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:465:6: 465:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::handle_remote_status(_1: &SynchronizerClient, _2: SynchronizerMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:467:33: 467:38
    debug msg => _2;                     // in scope 0 at cita-network/src/synchronizer.rs:467:40: 467:43
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:467:66: 467:66
    let _3: ();                          // in scope 0 at cita-network/src/synchronizer.rs:468:9: 468:27

    bb0: {
        _3 = SynchronizerClient::send_msg(_1, move _2) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:468:9: 468:27
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:468:14: 468:22
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::send_msg}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:469:6: 469:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::handle_remote_response(_1: &SynchronizerClient, _2: SynchronizerMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:471:35: 471:40
    debug msg => _2;                     // in scope 0 at cita-network/src/synchronizer.rs:471:42: 471:45
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:471:68: 471:68
    let _3: ();                          // in scope 0 at cita-network/src/synchronizer.rs:472:9: 472:27

    bb0: {
        _3 = SynchronizerClient::send_msg(_1, move _2) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:472:9: 472:27
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:472:14: 472:22
                                         // + literal: Const { ty: for<'a> fn(&'a SynchronizerClient, SynchronizerMessage) {SynchronizerClient::send_msg}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:473:6: 473:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg(_1: &SynchronizerClient, _2: SynchronizerMessage) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:475:17: 475:22
    debug msg => _2;                     // in scope 0 at cita-network/src/synchronizer.rs:475:24: 475:27
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:475:50: 475:50
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::TrySendError<synchronizer::SynchronizerMessage>>; // in scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
    let mut _4: &pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
    let mut _5: isize;                   // in scope 0 at cita-network/src/synchronizer.rs:477:13: 477:18
    let _6: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62
    let _17: pubsub::crossbeam_channel::TrySendError<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:480:17: 480:20
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _21: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _24: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _25: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _26: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _27: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _28: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67
    let mut _29: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _30: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _31: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:481:69: 481:72
    let _33: &pubsub::crossbeam_channel::TrySendError<synchronizer::SynchronizerMessage>; // in scope 0 at cita-network/src/synchronizer.rs:481:69: 481:72
    scope 1 {
        debug lvl => _6;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _34: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _35: &[&str; 1];         // in scope 1 at cita-network/src/synchronizer.rs:478:24: 478:62
        let mut _36: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug err => _17;                // in scope 2 at cita-network/src/synchronizer.rs:480:17: 480:20
        let _18: log::Level;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 3 {
            debug lvl => _18;            // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _37: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _38: &[&str; 1];     // in scope 3 at cita-network/src/synchronizer.rs:481:23: 481:67
            let mut _39: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = &((*_1).0: pubsub::crossbeam_channel::Sender<synchronizer::SynchronizerMessage>); // scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
        _3 = pubsub::crossbeam_channel::Sender::<SynchronizerMessage>::try_send(move _4, move _2) -> bb1; // scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:476:27: 476:35
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<SynchronizerMessage>, SynchronizerMessage) -> Result<(), pubsub::crossbeam_channel::TrySendError<SynchronizerMessage>> {pubsub::crossbeam_channel::Sender::<SynchronizerMessage>::try_send}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = discriminant(_3);           // scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
        switchInt(move _5) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at cita-network/src/synchronizer.rs:476:9: 476:40
    }

    bb2: {
        _17 = move ((_3 as Err).0: pubsub::crossbeam_channel::TrySendError<synchronizer::SynchronizerMessage>); // scope 0 at cita-network/src/synchronizer.rs:480:17: 480:20
        _18 = log::Level::Warn;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _21 = &_18;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _39 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[5])) }
        _20 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _21, _39) -> [return: bb16, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb3: {
        unreachable;                     // scope 0 at cita-network/src/synchronizer.rs:476:15: 476:40
    }

    bb4: {
        _6 = log::Level::Debug;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _9 = &_6;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _36 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[2])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _36) -> bb8; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_6;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> bb9;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _7) -> [0: bb25, otherwise: bb11]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        switchInt(move _8) -> [0: bb5, otherwise: bb6]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _12 = &_13;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _7 = move _10;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _35 = const _;                   // scope 1 at cita-network/src/synchronizer.rs:478:24: 478:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:478:24: 478:62
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[1])) }
        _16 = _35 as &[&str] (Pointer(Unsize)); // scope 1 at cita-network/src/synchronizer.rs:478:24: 478:62
        _15 = Arguments::<'_>::new_const(move _16) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb12: {
        _34 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _34) -> bb25; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _19 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _23 = &_18;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _25 = log::max_level() -> [return: bb17, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _19) -> [0: bb22, otherwise: bb19]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        switchInt(move _20) -> [0: bb13, otherwise: bb14]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _24 = &_25;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, move _24) -> [return: bb18, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb18: {
        _19 = move _22;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb15;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _38 = const _;                   // scope 3 at cita-network/src/synchronizer.rs:481:23: 481:67
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:481:23: 481:67
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[4])) }
        _28 = _38 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/synchronizer.rs:481:23: 481:67
        _33 = &_17;                      // scope 3 at cita-network/src/synchronizer.rs:481:69: 481:72
        _32 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<SynchronizerMessage>>(_33) -> [return: bb20, unwind: bb23]; // scope 3 at cita-network/src/synchronizer.rs:481:69: 481:72
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:481:69: 481:72
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::TrySendError<SynchronizerMessage>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::TrySendError<SynchronizerMessage>>}, val: Value(<ZST>) }
    }

    bb20: {
        _31 = [move _32];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _30 = &_31;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _29 = _30 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _27 = Arguments::<'_>::new_v1(move _28, move _29) -> [return: bb21, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb21: {
        _37 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(SynchronizerClient::send_msg, [], Some(promoted[3])) }
        _26 = log::__private_api_log(move _27, _18, _37) -> [return: bb26, unwind: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb22: {
        drop(_17) -> bb25;               // scope 0 at cita-network/src/synchronizer.rs:482:13: 482:14
    }

    bb23 (cleanup): {
        drop(_17) -> bb24;               // scope 0 at cita-network/src/synchronizer.rs:482:13: 482:14
    }

    bb24 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:475:5: 484:6
    }

    bb25: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:484:6: 484:6
    }

    bb26: {
        goto -> bb22;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:478:17: 478:63
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:478:17: 478:63

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:478:17: 478:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:478:17: 478:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:478:17: 478:63
        _1 = (move _2, move _4, move _6, const 478_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62

    bb0: {
        _1 = [const "Send message to Synchronizer Success"]; // scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:478:24: 478:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62
        return;                          // scope 0 at cita-network/src/synchronizer.rs:478:24: 478:62
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:481:17: 481:73
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:481:17: 481:73

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:481:17: 481:73
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:481:17: 481:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:481:17: 481:73
        _1 = (move _2, move _4, move _6, const 481_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67

    bb0: {
        _1 = [const "Send message to Synchronizer failed : "]; // scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:481:23: 481:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67
        return;                          // scope 0 at cita-network/src/synchronizer.rs:481:23: 481:67
    }
}

promoted[5] in synchronizer::<impl at cita-network/src/synchronizer.rs:458:1: 458:24>::send_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:492:1: 492:25>::new(_1: std::string::String, _2: Vec<u8>) -> SynchronizerMessage {
    debug key => _1;                     // in scope 0 at cita-network/src/synchronizer.rs:493:16: 493:19
    debug data => _2;                    // in scope 0 at cita-network/src/synchronizer.rs:493:29: 493:33
    let mut _0: synchronizer::SynchronizerMessage; // return place in scope 0 at cita-network/src/synchronizer.rs:493:47: 493:51

    bb0: {
        _0 = SynchronizerMessage { key: move _1, data: move _2 }; // scope 0 at cita-network/src/synchronizer.rs:494:9: 494:42
        return;                          // scope 0 at cita-network/src/synchronizer.rs:495:6: 495:6
    }
}

fn synchronizer::<impl at cita-network/src/synchronizer.rs:492:1: 492:25>::handle(_1: SynchronizerMessage, _2: &mut synchronizer::Synchronizer) -> () {
    debug self => _1;                    // in scope 0 at cita-network/src/synchronizer.rs:497:19: 497:23
    debug service => _2;                 // in scope 0 at cita-network/src/synchronizer.rs:497:25: 497:32
    let mut _0: ();                      // return place in scope 0 at cita-network/src/synchronizer.rs:497:53: 497:53
    let mut _3: libproto::Message;       // in scope 0 at cita-network/src/synchronizer.rs:498:13: 498:20
    let mut _4: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-network/src/synchronizer.rs:498:23: 498:52
    let mut _5: &std::vec::Vec<u8>;      // in scope 0 at cita-network/src/synchronizer.rs:498:41: 498:51
    let mut _7: &libproto::Message;      // in scope 0 at cita-network/src/synchronizer.rs:499:22: 499:38
    let mut _9: &std::string::String;    // in scope 0 at cita-network/src/synchronizer.rs:500:39: 500:48
    let mut _10: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _11: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _12: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _13: std::option::Option<libproto::Status>; // in scope 0 at cita-network/src/synchronizer.rs:503:39: 503:56
    let mut _14: &mut libproto::Message; // in scope 0 at cita-network/src/synchronizer.rs:503:39: 503:56
    let mut _15: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:503:24: 503:36
    let _17: ();                         // in scope 0 at cita-network/src/synchronizer.rs:504:21: 504:58
    let mut _18: std::option::Option<libproto::Status>; // in scope 0 at cita-network/src/synchronizer.rs:508:39: 508:56
    let mut _19: &mut libproto::Message; // in scope 0 at cita-network/src/synchronizer.rs:508:39: 508:56
    let mut _20: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:508:24: 508:36
    let _22: ();                         // in scope 0 at cita-network/src/synchronizer.rs:509:21: 509:66
    let _23: &libproto::Status;          // in scope 0 at cita-network/src/synchronizer.rs:509:50: 509:57
    let mut _24: u32;                    // in scope 0 at cita-network/src/synchronizer.rs:509:59: 509:65
    let mut _25: std::option::Option<libproto::SyncResponse>; // in scope 0 at cita-network/src/synchronizer.rs:513:39: 513:63
    let mut _26: &mut libproto::Message; // in scope 0 at cita-network/src/synchronizer.rs:513:39: 513:63
    let mut _27: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:513:24: 513:36
    let _29: ();                         // in scope 0 at cita-network/src/synchronizer.rs:514:21: 514:49
    let mut _31: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _32: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _33: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _34: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _35: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _36: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _37: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _38: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _39: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _40: &[&str];                // in scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61
    let mut _41: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _42: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _43: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _44: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/synchronizer.rs:518:63: 518:71
    let _45: &std::string::String;       // in scope 0 at cita-network/src/synchronizer.rs:518:63: 518:71
    let mut _49: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:505:18: 505:19
    let mut _50: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:510:18: 510:19
    let mut _51: bool;                   // in scope 0 at cita-network/src/synchronizer.rs:515:18: 515:19
    let mut _52: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:505:18: 505:19
    let mut _53: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:510:18: 510:19
    let mut _54: isize;                  // in scope 0 at cita-network/src/synchronizer.rs:515:18: 515:19
    scope 1 {
        debug msg => _3;                 // in scope 1 at cita-network/src/synchronizer.rs:498:13: 498:20
        let _6: u32;                     // in scope 1 at cita-network/src/synchronizer.rs:499:13: 499:19
        scope 2 {
            debug origin => _6;          // in scope 2 at cita-network/src/synchronizer.rs:499:13: 499:19
            let _8: libproto::router::RoutingKey; // in scope 2 at cita-network/src/synchronizer.rs:500:13: 500:19
            scope 3 {
                debug rt_key => _8;      // in scope 3 at cita-network/src/synchronizer.rs:500:13: 500:19
                let _30: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 4 {
                    debug status => _16; // in scope 4 at cita-network/src/synchronizer.rs:503:29: 503:35
                    let _16: libproto::Status; // in scope 4 at cita-network/src/synchronizer.rs:503:29: 503:35
                }
                scope 5 {
                    debug status => _21; // in scope 5 at cita-network/src/synchronizer.rs:508:29: 508:35
                    let _21: libproto::Status; // in scope 5 at cita-network/src/synchronizer.rs:508:29: 508:35
                }
                scope 6 {
                    debug blocks => _28; // in scope 6 at cita-network/src/synchronizer.rs:513:29: 513:35
                    let _28: libproto::SyncResponse; // in scope 6 at cita-network/src/synchronizer.rs:513:29: 513:35
                }
                scope 7 {
                    debug lvl => _30;    // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _46: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _47: &[&str; 1]; // in scope 7 at cita-network/src/synchronizer.rs:518:24: 518:61
                    let mut _48: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _49 = const false;               // scope 0 at cita-network/src/synchronizer.rs:498:13: 498:20
        _51 = const false;               // scope 0 at cita-network/src/synchronizer.rs:498:13: 498:20
        _50 = const false;               // scope 0 at cita-network/src/synchronizer.rs:498:13: 498:20
        _5 = &(_1.1: std::vec::Vec<u8>); // scope 0 at cita-network/src/synchronizer.rs:498:41: 498:51
        _4 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _5) -> [return: bb1, unwind: bb32]; // scope 0 at cita-network/src/synchronizer.rs:498:23: 498:52
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:498:23: 498:40
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _4) -> [return: bb2, unwind: bb32]; // scope 0 at cita-network/src/synchronizer.rs:498:23: 498:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:498:53: 498:59
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &_3;                        // scope 1 at cita-network/src/synchronizer.rs:499:22: 499:38
        _6 = libproto::Message::get_origin(move _7) -> [return: bb3, unwind: bb31]; // scope 1 at cita-network/src/synchronizer.rs:499:22: 499:38
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:499:26: 499:36
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = &(_1.0: std::string::String); // scope 2 at cita-network/src/synchronizer.rs:500:39: 500:48
        _8 = <RoutingKey as From<&std::string::String>>::from(move _9) -> [return: bb4, unwind: bb31]; // scope 2 at cita-network/src/synchronizer.rs:500:22: 500:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:500:22: 500:38
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&std::string::String) -> RoutingKey {<RoutingKey as From<&std::string::String>>::from}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = discriminant((_8.0: libproto::router::SubModules)); // scope 3 at cita-network/src/synchronizer.rs:501:15: 501:21
        switchInt(move _12) -> [2: bb6, 6: bb7, otherwise: bb5]; // scope 3 at cita-network/src/synchronizer.rs:501:9: 501:21
    }

    bb5: {
        _30 = log::Level::Error;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _33 = &_30;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _48 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(SynchronizerMessage::handle, [], Some(promoted[2])) }
        _32 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _33, _48) -> [return: bb21, unwind: bb31]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _10 = discriminant((_8.1: libproto::router::MsgType)); // scope 3 at cita-network/src/synchronizer.rs:501:15: 501:21
        switchInt(move _10) -> [5: bb8, otherwise: bb5]; // scope 3 at cita-network/src/synchronizer.rs:501:9: 501:21
    }

    bb7: {
        _11 = discriminant((_8.1: libproto::router::MsgType)); // scope 3 at cita-network/src/synchronizer.rs:501:15: 501:21
        switchInt(move _11) -> [4: bb15, 5: bb11, otherwise: bb5]; // scope 3 at cita-network/src/synchronizer.rs:501:9: 501:21
    }

    bb8: {
        _14 = &mut _3;                   // scope 4 at cita-network/src/synchronizer.rs:503:39: 503:56
        _13 = libproto::Message::take_status(move _14) -> [return: bb9, unwind: bb31]; // scope 4 at cita-network/src/synchronizer.rs:503:39: 503:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:503:43: 503:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Status> {libproto::Message::take_status}, val: Value(<ZST>) }
    }

    bb9: {
        _49 = const true;                // scope 4 at cita-network/src/synchronizer.rs:503:55: 503:56
        _15 = discriminant(_13);         // scope 4 at cita-network/src/synchronizer.rs:503:24: 503:36
        switchInt(move _15) -> [1: bb10, otherwise: bb37]; // scope 4 at cita-network/src/synchronizer.rs:503:24: 503:36
    }

    bb10: {
        _49 = const false;               // scope 4 at cita-network/src/synchronizer.rs:503:29: 503:35
        _16 = move ((_13 as Some).0: libproto::Status); // scope 4 at cita-network/src/synchronizer.rs:503:29: 503:35
        _17 = synchronizer::Synchronizer::update_current_status(_2, move _16) -> [return: bb46, unwind: bb31]; // scope 4 at cita-network/src/synchronizer.rs:504:21: 504:58
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:504:29: 504:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, libproto::Status) {synchronizer::Synchronizer::update_current_status}, val: Value(<ZST>) }
    }

    bb11: {
        _19 = &mut _3;                   // scope 5 at cita-network/src/synchronizer.rs:508:39: 508:56
        _18 = libproto::Message::take_status(move _19) -> [return: bb12, unwind: bb31]; // scope 5 at cita-network/src/synchronizer.rs:508:39: 508:56
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:508:43: 508:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Status> {libproto::Message::take_status}, val: Value(<ZST>) }
    }

    bb12: {
        _50 = const true;                // scope 5 at cita-network/src/synchronizer.rs:508:55: 508:56
        _20 = discriminant(_18);         // scope 5 at cita-network/src/synchronizer.rs:508:24: 508:36
        switchInt(move _20) -> [1: bb13, otherwise: bb41]; // scope 5 at cita-network/src/synchronizer.rs:508:24: 508:36
    }

    bb13: {
        _50 = const false;               // scope 5 at cita-network/src/synchronizer.rs:508:29: 508:35
        _21 = move ((_18 as Some).0: libproto::Status); // scope 5 at cita-network/src/synchronizer.rs:508:29: 508:35
        _23 = &_21;                      // scope 5 at cita-network/src/synchronizer.rs:509:50: 509:57
        _24 = _6;                        // scope 5 at cita-network/src/synchronizer.rs:509:59: 509:65
        _22 = synchronizer::Synchronizer::update_global_status(_2, _23, move _24) -> [return: bb14, unwind: bb30]; // scope 5 at cita-network/src/synchronizer.rs:509:21: 509:66
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:509:29: 509:49
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut synchronizer::Synchronizer, &'b libproto::Status, u32) {synchronizer::Synchronizer::update_global_status}, val: Value(<ZST>) }
    }

    bb14: {
        drop(_21) -> [return: bb41, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:510:17: 510:18
    }

    bb15: {
        _26 = &mut _3;                   // scope 6 at cita-network/src/synchronizer.rs:513:39: 513:63
        _25 = libproto::Message::take_sync_response(move _26) -> [return: bb16, unwind: bb31]; // scope 6 at cita-network/src/synchronizer.rs:513:39: 513:63
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:513:43: 513:61
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::SyncResponse> {libproto::Message::take_sync_response}, val: Value(<ZST>) }
    }

    bb16: {
        _51 = const true;                // scope 6 at cita-network/src/synchronizer.rs:513:62: 513:63
        _27 = discriminant(_25);         // scope 6 at cita-network/src/synchronizer.rs:513:24: 513:36
        switchInt(move _27) -> [1: bb17, otherwise: bb45]; // scope 6 at cita-network/src/synchronizer.rs:513:24: 513:36
    }

    bb17: {
        _51 = const false;               // scope 6 at cita-network/src/synchronizer.rs:513:29: 513:35
        _28 = move ((_25 as Some).0: libproto::SyncResponse); // scope 6 at cita-network/src/synchronizer.rs:513:29: 513:35
        _29 = synchronizer::Synchronizer::process_sync(_2, move _28) -> [return: bb47, unwind: bb31]; // scope 6 at cita-network/src/synchronizer.rs:514:21: 514:49
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:514:29: 514:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer, libproto::SyncResponse) {synchronizer::Synchronizer::process_sync}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _35 = &_30;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _37 = log::max_level() -> [return: bb22, unwind: bb31]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _31) -> [0: bb27, otherwise: bb24]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        switchInt(move _32) -> [0: bb18, otherwise: bb19]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _36 = &_37;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _34 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _35, move _36) -> [return: bb23, unwind: bb31]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _31 = move _34;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb20;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _47 = const _;                   // scope 7 at cita-network/src/synchronizer.rs:518:24: 518:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:518:24: 518:61
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(SynchronizerMessage::handle, [], Some(promoted[1])) }
        _40 = _47 as &[&str] (Pointer(Unsize)); // scope 7 at cita-network/src/synchronizer.rs:518:24: 518:61
        _45 = &(_1.0: std::string::String); // scope 7 at cita-network/src/synchronizer.rs:518:63: 518:71
        _44 = core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>(_45) -> [return: bb25, unwind: bb31]; // scope 7 at cita-network/src/synchronizer.rs:518:63: 518:71
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:518:63: 518:71
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb25: {
        _43 = [move _44];                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _42 = &_43;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = _42 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _39 = Arguments::<'_>::new_v1(move _40, move _41) -> [return: bb26, unwind: bb31]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb26: {
        _46 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(SynchronizerMessage::handle, [], Some(promoted[0])) }
        _38 = log::__private_api_log(move _39, _30, _46) -> [return: bb48, unwind: bb31]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        drop(_3) -> [return: bb28, unwind: bb32]; // scope 0 at cita-network/src/synchronizer.rs:521:5: 521:6
    }

    bb28: {
        drop(_1) -> bb29;                // scope 0 at cita-network/src/synchronizer.rs:521:5: 521:6
    }

    bb29: {
        return;                          // scope 0 at cita-network/src/synchronizer.rs:521:6: 521:6
    }

    bb30 (cleanup): {
        drop(_21) -> bb31;               // scope 3 at cita-network/src/synchronizer.rs:510:17: 510:18
    }

    bb31 (cleanup): {
        drop(_3) -> bb32;                // scope 0 at cita-network/src/synchronizer.rs:521:5: 521:6
    }

    bb32 (cleanup): {
        drop(_1) -> bb33;                // scope 0 at cita-network/src/synchronizer.rs:521:5: 521:6
    }

    bb33 (cleanup): {
        resume;                          // scope 0 at cita-network/src/synchronizer.rs:497:5: 521:6
    }

    bb34: {
        _49 = const false;               // scope 3 at cita-network/src/synchronizer.rs:505:18: 505:19
        goto -> bb27;                    // scope 3 at cita-network/src/synchronizer.rs:502:46: 506:14
    }

    bb35: {
        switchInt(_49) -> [0: bb34, otherwise: bb36]; // scope 3 at cita-network/src/synchronizer.rs:505:18: 505:19
    }

    bb36: {
        drop(((_13 as Some).0: libproto::Status)) -> [return: bb34, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:505:18: 505:19
    }

    bb37: {
        _52 = discriminant(_13);         // scope 3 at cita-network/src/synchronizer.rs:505:18: 505:19
        switchInt(move _52) -> [1: bb35, otherwise: bb34]; // scope 3 at cita-network/src/synchronizer.rs:505:18: 505:19
    }

    bb38: {
        _50 = const false;               // scope 3 at cita-network/src/synchronizer.rs:510:18: 510:19
        goto -> bb27;                    // scope 3 at cita-network/src/synchronizer.rs:507:53: 511:14
    }

    bb39: {
        switchInt(_50) -> [0: bb38, otherwise: bb40]; // scope 3 at cita-network/src/synchronizer.rs:510:18: 510:19
    }

    bb40: {
        drop(((_18 as Some).0: libproto::Status)) -> [return: bb38, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:510:18: 510:19
    }

    bb41: {
        _53 = discriminant(_18);         // scope 3 at cita-network/src/synchronizer.rs:510:18: 510:19
        switchInt(move _53) -> [1: bb39, otherwise: bb38]; // scope 3 at cita-network/src/synchronizer.rs:510:18: 510:19
    }

    bb42: {
        _51 = const false;               // scope 3 at cita-network/src/synchronizer.rs:515:18: 515:19
        goto -> bb27;                    // scope 3 at cita-network/src/synchronizer.rs:512:59: 516:14
    }

    bb43: {
        switchInt(_51) -> [0: bb42, otherwise: bb44]; // scope 3 at cita-network/src/synchronizer.rs:515:18: 515:19
    }

    bb44: {
        drop(((_25 as Some).0: libproto::SyncResponse)) -> [return: bb42, unwind: bb31]; // scope 3 at cita-network/src/synchronizer.rs:515:18: 515:19
    }

    bb45: {
        _54 = discriminant(_25);         // scope 3 at cita-network/src/synchronizer.rs:515:18: 515:19
        switchInt(move _54) -> [1: bb43, otherwise: bb42]; // scope 3 at cita-network/src/synchronizer.rs:515:18: 515:19
    }

    bb46: {
        goto -> bb37;                    // scope 4 at cita-network/src/synchronizer.rs:504:21: 504:58
    }

    bb47: {
        goto -> bb45;                    // scope 6 at cita-network/src/synchronizer.rs:514:21: 514:49
    }

    bb48: {
        goto -> bb27;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in synchronizer::<impl at cita-network/src/synchronizer.rs:492:1: 492:25>::handle: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:518:17: 518:72
    let mut _7: &str;                    // in scope 0 at cita-network/src/synchronizer.rs:518:17: 518:72

    bb0: {
        _3 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network::synchronizer"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/synchronizer.rs"; // scope 0 at cita-network/src/synchronizer.rs:518:17: 518:72
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:518:17: 518:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/synchronizer.rs:518:17: 518:72
        _1 = (move _2, move _4, move _6, const 518_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in synchronizer::<impl at cita-network/src/synchronizer.rs:492:1: 492:25>::handle: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61

    bb0: {
        _1 = [const "receive: unexpected data key = "]; // scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61
                                         // mir::Constant
                                         // + span: cita-network/src/synchronizer.rs:518:24: 518:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61
        return;                          // scope 0 at cita-network/src/synchronizer.rs:518:24: 518:61
    }
}

promoted[2] in synchronizer::<impl at cita-network/src/synchronizer.rs:492:1: 492:25>::handle: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn get_build_info_str(_1: bool) -> &str {
    debug short => _1;                   // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:4:35: 4:40
    let mut _0: &str;                    // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:4:51: 4:63

    bb0: {
        switchInt(_1) -> [0: bb2, otherwise: bb1]; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:15: 5:20
    }

    bb1: {
        _0 = const "20.2.0-unknown";     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:23: 5:39
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:23: 5:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:12: 5:2490
    }

    bb2: {
        _0 = const "20.2.0-unknown\n(rustc 1.70.0-nightly-2023-03-18)\n\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n"; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:49: 5:2488
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:49: 5:2488
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:5:12: 5:2490
    }

    bb3: {
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:6:10: 6:10
    }
}

fn get_build_info() -> (&str, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, (u64, u64, u64), std::option::Option<&str>, std::option::Option<&str>) {
    let mut _0: (&str, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, (u64, u64, u64), std::option::Option<&str>, std::option::Option<&str>); // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:10:36: 19:10
    let mut _1: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2403: 20:2407
    let mut _2: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2409: 20:2413
    let mut _3: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2415: 20:2419
    let mut _4: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2421: 20:2425
    let mut _5: (u64, u64, u64);         // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2427: 20:2437
    let mut _6: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2439: 20:2454
    let _7: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2444: 20:2453
    let mut _8: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2456: 20:2474
    let _9: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2461: 20:2473

    bb0: {
        _1 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2403: 20:2407
        _2 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2409: 20:2413
        _3 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2415: 20:2419
        _4 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2421: 20:2425
        _5 = (const 1_u64, const 70_u64, const 0_u64); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2427: 20:2437
        _7 = const "nightly";            // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2444: 20:2453
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2444: 20:2453
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = std::option::Option::<&str>::Some(_7); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2439: 20:2454
        _9 = const "2023-03-18";         // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2461: 20:2473
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2461: 20:2473
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = std::option::Option::<&str>::Some(_9); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:2456: 20:2474
        _0 = (const "\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n", move _1, move _2, move _3, move _4, move _5, move _6, move _8); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:12: 20:2475
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:20:13: 20:2401
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-network-063c3dcbfde71dea/out/build_info.rs:21:10: 21:10
    }
}

const NOTIFY_DELAY_SECS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at cita-network/src/main.rs:112:26: 112:29

    bb0: {
        _0 = const 1_u64;                // scope 0 at cita-network/src/main.rs:112:32: 112:33
        return;                          // scope 0 at cita-network/src/main.rs:112:1: 112:34
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at cita-network/src/main.rs:114:11: 114:11
    let _1: clap::ArgMatches<'_>;        // in scope 0 at cita-network/src/main.rs:116:9: 116:16
    let mut _2: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 125:10
    let mut _3: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 120:56
    let mut _4: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 119:28
    let mut _5: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 118:49
    let mut _6: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 117:43
    let mut _7: clap::App<'_, '_>;       // in scope 0 at cita-network/src/main.rs:116:19: 116:38
    let mut _8: &str;                    // in scope 0 at cita-network/src/main.rs:117:18: 117:42
    let mut _9: &str;                    // in scope 0 at cita-network/src/main.rs:118:23: 118:48
    let _10: &str;                       // in scope 0 at cita-network/src/main.rs:122:13: 124:55
    let mut _12: &clap::ArgMatches<'_>;  // in scope 0 at cita-network/src/main.rs:128:18: 128:46
    let _13: std::option::Option<std::path::PathBuf>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
    let mut _14: std::result::Result<std::path::PathBuf, dotenv::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
    let _16: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
    let mut _17: bool;                   // in scope 0 at cita-network/src/main.rs:129:57: 129:63
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    let _19: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _24: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _25: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _26: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _27: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _28: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _29: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _30: &[&str];                // in scope 0 at cita-network/src/main.rs:129:41: 129:55
    let mut _32: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _34: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _36: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _37: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _38: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: &[&str];                // in scope 0 at cita-network/src/main.rs:130:11: 130:24
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/main.rs:130:26: 130:50
    let _46: &&str;                      // in scope 0 at cita-network/src/main.rs:130:26: 130:50
    let _47: &str;                       // in scope 0 at cita-network/src/main.rs:130:26: 130:50
    let mut _49: std::option::Option<&str>; // in scope 0 at cita-network/src/main.rs:132:23: 132:49
    let mut _50: &clap::ArgMatches<'_>;  // in scope 0 at cita-network/src/main.rs:132:23: 132:49
    let _51: &str;                       // in scope 0 at cita-network/src/main.rs:132:60: 132:74
    let mut _53: &str;                   // in scope 0 at cita-network/src/main.rs:134:33: 134:44
    let mut _55: std::option::Option<&str>; // in scope 0 at cita-network/src/main.rs:135:19: 138:18
    let mut _56: &std::path::Path;       // in scope 0 at cita-network/src/main.rs:135:19: 138:18
    let _57: &std::path::Path;           // in scope 0 at cita-network/src/main.rs:135:19: 137:42
    let mut _58: std::option::Option<&std::path::Path>; // in scope 0 at cita-network/src/main.rs:135:19: 136:18
    let mut _59: &std::path::Path;       // in scope 0 at cita-network/src/main.rs:135:19: 136:18
    let mut _60: bool;                   // in scope 0 at cita-network/src/main.rs:140:8: 140:22
    let mut _61: &str;                   // in scope 0 at cita-network/src/main.rs:140:8: 140:22
    let _62: &str;                       // in scope 0 at cita-network/src/main.rs:141:15: 141:18
    let mut _64: &std::string::String;   // in scope 0 at cita-network/src/main.rs:143:17: 149:17
    let _65: std::string::String;        // in scope 0 at cita-network/src/main.rs:143:17: 148:21
    let mut _66: &str;                   // in scope 0 at cita-network/src/main.rs:143:17: 148:21
    let _67: &str;                       // in scope 0 at cita-network/src/main.rs:143:17: 147:18
    let mut _68: std::option::Option<&str>; // in scope 0 at cita-network/src/main.rs:143:17: 146:18
    let mut _69: &std::ffi::OsStr;       // in scope 0 at cita-network/src/main.rs:143:17: 146:18
    let _70: &std::ffi::OsStr;           // in scope 0 at cita-network/src/main.rs:143:17: 145:37
    let mut _71: std::option::Option<&std::ffi::OsStr>; // in scope 0 at cita-network/src/main.rs:143:17: 144:21
    let mut _72: &std::path::Path;       // in scope 0 at cita-network/src/main.rs:143:17: 144:21
    let _73: &str;                       // in scope 0 at cita-network/src/main.rs:145:17: 145:36
    let mut _75: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _76: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _77: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _78: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _79: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _80: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _81: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _82: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _83: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _84: &[&str];                // in scope 0 at cita-network/src/main.rs:152:12: 152:30
    let mut _85: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _86: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _87: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _88: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/main.rs:152:32: 152:43
    let _89: &&std::path::Path;          // in scope 0 at cita-network/src/main.rs:152:32: 152:43
    let _91: &&str;                      // in scope 0 at cita-network/src/main.rs:153:33: 153:45
    let mut _93: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _94: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _95: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _96: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _97: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _98: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _99: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _100: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _101: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _102: &[&str];               // in scope 0 at cita-network/src/main.rs:154:12: 154:36
    let mut _103: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _104: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _105: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _106: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/main.rs:154:38: 154:49
    let _107: &&str;                     // in scope 0 at cita-network/src/main.rs:154:38: 154:49
    let mut _109: std::option::Option<&str>; // in scope 0 at cita-network/src/main.rs:156:21: 156:48
    let mut _110: &clap::ArgMatches<'_>; // in scope 0 at cita-network/src/main.rs:156:21: 156:48
    let _111: &str;                      // in scope 0 at cita-network/src/main.rs:156:59: 156:68
    let _113: &&str;                     // in scope 0 at cita-network/src/main.rs:157:39: 157:49
    let mut _115: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _116: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _117: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _118: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _119: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _120: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _121: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _122: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _123: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _124: &[&str];               // in scope 0 at cita-network/src/main.rs:158:12: 158:34
    let mut _125: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _126: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _127: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _128: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/main.rs:158:36: 158:49
    let _129: &cita_types::H160;         // in scope 0 at cita-network/src/main.rs:158:36: 158:49
    let mut _131: config::NetConfig;     // in scope 0 at cita-network/src/main.rs:161:51: 161:65
    let mut _132: &config::NetConfig;    // in scope 0 at cita-network/src/main.rs:161:51: 161:65
    let mut _133: cita_types::H160;      // in scope 0 at cita-network/src/main.rs:161:67: 161:80
    let mut _136: mq_agent::MqAgentClient; // in scope 0 at cita-network/src/main.rs:163:50: 163:67
    let mut _137: &mq_agent::MqAgent;    // in scope 0 at cita-network/src/main.rs:163:50: 163:67
    let mut _138: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:163:69: 163:87
    let mut _139: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:163:69: 163:87
    let mut _141: mq_agent::MqAgentClient; // in scope 0 at cita-network/src/main.rs:165:9: 165:26
    let mut _142: &mq_agent::MqAgent;    // in scope 0 at cita-network/src/main.rs:165:9: 165:26
    let mut _143: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:166:9: 166:27
    let mut _144: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:166:9: 166:27
    let mut _145: synchronizer::SynchronizerClient; // in scope 0 at cita-network/src/main.rs:167:9: 167:34
    let mut _146: &synchronizer::Synchronizer; // in scope 0 at cita-network/src/main.rs:167:9: 167:34
    let _147: ();                        // in scope 0 at cita-network/src/main.rs:169:5: 169:54
    let mut _148: &mut mq_agent::MqAgent; // in scope 0 at cita-network/src/main.rs:169:5: 169:54
    let mut _149: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:169:35: 169:53
    let mut _150: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:169:35: 169:53
    let _151: ();                        // in scope 0 at cita-network/src/main.rs:170:5: 170:54
    let mut _152: &mut mq_agent::MqAgent; // in scope 0 at cita-network/src/main.rs:170:5: 170:54
    let mut _153: network::NetworkClient; // in scope 0 at cita-network/src/main.rs:170:33: 170:53
    let mut _154: &network::Network;     // in scope 0 at cita-network/src/main.rs:170:33: 170:53
    let mut _156: network::NetworkClient; // in scope 0 at cita-network/src/main.rs:173:30: 173:50
    let mut _157: &network::Network;     // in scope 0 at cita-network/src/main.rs:173:30: 173:50
    let mut _158: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:173:52: 173:70
    let mut _159: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:173:52: 173:70
    let mut _160: cita_types::H160;      // in scope 0 at cita-network/src/main.rs:173:72: 173:85
    let mut _162: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:174:27: 175:40
    let mut _163: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:174:27: 174:52
    let mut _164: tentacle::service::ProtocolMeta; // in scope 0 at cita-network/src/main.rs:175:26: 175:39
    let mut _166: std::option::Option<bool>; // in scope 0 at cita-network/src/main.rs:178:26: 178:49
    let mut _169: (std::sync::mpsc::Sender<notify::DebouncedEvent>, std::sync::mpsc::Receiver<notify::DebouncedEvent>); // in scope 0 at cita-network/src/main.rs:179:20: 179:29
    let mut _171: std::result::Result<notify::INotifyWatcher, notify::Error>; // in scope 0 at cita-network/src/main.rs:181:9: 181:76
    let mut _172: std::sync::mpsc::Sender<notify::DebouncedEvent>; // in scope 0 at cita-network/src/main.rs:181:22: 181:24
    let mut _173: std::time::Duration;   // in scope 0 at cita-network/src/main.rs:181:26: 181:75
    let mut _174: bool;                  // in scope 0 at cita-network/src/main.rs:182:8: 182:22
    let mut _176: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:183:52: 183:70
    let mut _177: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:183:52: 183:70
    let mut _178: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:184:23: 184:66
    let mut _179: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:184:23: 184:34
    let mut _180: tentacle::service::ProtocolMeta; // in scope 0 at cita-network/src/main.rs:184:51: 184:65
    let mut _181: bool;                  // in scope 0 at cita-network/src/main.rs:185:15: 185:70
    let mut _182: &std::result::Result<(), notify::Error>; // in scope 0 at cita-network/src/main.rs:185:15: 185:70
    let _183: std::result::Result<(), notify::Error>; // in scope 0 at cita-network/src/main.rs:185:15: 185:62
    let mut _184: &mut notify::INotifyWatcher; // in scope 0 at cita-network/src/main.rs:185:15: 185:62
    let mut _185: &str;                  // in scope 0 at cita-network/src/main.rs:185:29: 185:32
    let mut _186: notify::RecursiveMode; // in scope 0 at cita-network/src/main.rs:185:34: 185:61
    let mut _188: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:186:29: 186:47
    let _189: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/main.rs:187:9: 189:11
    let mut _190: [closure@cita-network/src/main.rs:187:23: 187:30]; // in scope 0 at cita-network/src/main.rs:187:23: 189:10
    let mut _191: bool;                  // in scope 0 at cita-network/src/main.rs:192:8: 192:42
    let mut _192: std::option::Option<bool>; // in scope 0 at cita-network/src/main.rs:192:8: 192:25
    let mut _193: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:193:23: 193:80
    let mut _194: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:193:23: 193:34
    let mut _195: tentacle::tentacle_secio::SecioKeyPair; // in scope 0 at cita-network/src/main.rs:193:44: 193:79
    let mut _197: tentacle::builder::ServiceBuilder; // in scope 0 at cita-network/src/main.rs:195:23: 195:34
    let mut _198: p2p_protocol::SHandle; // in scope 0 at cita-network/src/main.rs:195:41: 195:73
    let mut _199: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:195:54: 195:72
    let mut _200: &node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:195:54: 195:72
    let mut _203: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _204: &[&str];               // in scope 0 at cita-network/src/main.rs:197:24: 197:45
    let mut _205: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _206: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _207: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _208: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-network/src/main.rs:197:47: 197:82
    let _209: &usize;                    // in scope 0 at cita-network/src/main.rs:197:47: 197:82
    let _210: usize;                     // in scope 0 at cita-network/src/main.rs:197:47: 197:82
    let mut _211: std::option::Option<usize>; // in scope 0 at cita-network/src/main.rs:197:47: 197:58
    let mut _212: std::result::Result<tentacle::parity_multiaddr::Multiaddr, std::io::Error>; // in scope 0 at cita-network/src/main.rs:198:13: 198:50
    let mut _213: &mut tentacle::service::Service<p2p_protocol::SHandle>; // in scope 0 at cita-network/src/main.rs:198:13: 198:50
    let mut _214: tentacle::parity_multiaddr::Multiaddr; // in scope 0 at cita-network/src/main.rs:198:28: 198:49
    let mut _215: std::result::Result<tentacle::parity_multiaddr::Multiaddr, tentacle::parity_multiaddr::Error>; // in scope 0 at cita-network/src/main.rs:198:28: 198:40
    let mut _216: &str;                  // in scope 0 at cita-network/src/main.rs:198:28: 198:40
    let _217: &str;                      // in scope 0 at cita-network/src/main.rs:198:28: 198:40
    let mut _218: &std::string::String;  // in scope 0 at cita-network/src/main.rs:198:28: 198:40
    let _219: ();                        // in scope 0 at cita-network/src/main.rs:199:5: 199:65
    let mut _220: &mut node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:199:5: 199:65
    let mut _221: tentacle::service::ServiceControl; // in scope 0 at cita-network/src/main.rs:199:39: 199:64
    let mut _222: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/main.rs:199:39: 199:64
    let _223: &tentacle::service::ServiceControl; // in scope 0 at cita-network/src/main.rs:199:39: 199:56
    let mut _224: &tentacle::service::Service<p2p_protocol::SHandle>; // in scope 0 at cita-network/src/main.rs:199:39: 199:56
    let _225: ();                        // in scope 0 at cita-network/src/main.rs:203:5: 203:19
    let mut _226: &mq_agent::MqAgent;    // in scope 0 at cita-network/src/main.rs:203:5: 203:19
    let _227: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/main.rs:204:5: 204:43
    let mut _228: [closure@cita-network/src/main.rs:204:19: 204:26]; // in scope 0 at cita-network/src/main.rs:204:19: 204:42
    let _229: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/main.rs:205:5: 205:45
    let mut _230: [closure@cita-network/src/main.rs:205:19: 205:26]; // in scope 0 at cita-network/src/main.rs:205:19: 205:44
    let _231: std::thread::JoinHandle<()>; // in scope 0 at cita-network/src/main.rs:206:5: 206:50
    let mut _232: [closure@cita-network/src/main.rs:206:19: 206:26]; // in scope 0 at cita-network/src/main.rs:206:19: 206:49
    let _233: ();                        // in scope 0 at cita-network/src/main.rs:207:5: 207:45
    let mut _234: futures::stream::ForEach<tentacle::service::Service<p2p_protocol::SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36], std::result::Result<(), ()>>; // in scope 0 at cita-network/src/main.rs:207:16: 207:44
    let mut _235: tentacle::service::Service<p2p_protocol::SHandle>; // in scope 0 at cita-network/src/main.rs:207:16: 207:23
    let mut _254: &str;                  // in scope 0 at cita-network/src/main.rs:153:33: 153:45
    let mut _255: &str;                  // in scope 0 at cita-network/src/main.rs:157:39: 157:49
    let mut _256: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _257: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _258: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _259: bool;                  // in scope 0 at cita-network/src/main.rs:195:73: 195:74
    let mut _260: bool;                  // in scope 0 at cita-network/src/main.rs:193:79: 193:80
    let mut _261: bool;                  // in scope 0 at cita-network/src/main.rs:181:75: 181:76
    let mut _262: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _263: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _264: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _265: bool;                  // in scope 0 at cita-network/src/main.rs:173:85: 173:86
    let mut _266: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _267: bool;                  // in scope 0 at cita-network/src/main.rs:168:5: 168:6
    let mut _268: bool;                  // in scope 0 at cita-network/src/main.rs:168:5: 168:6
    let mut _269: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _270: bool;                  // in scope 0 at cita-network/src/main.rs:163:87: 163:88
    let mut _271: bool;                  // in scope 0 at cita-network/src/main.rs:209:1: 209:2
    let mut _272: bool;                  // in scope 0 at cita-network/src/main.rs:118:48: 118:49
    let mut _273: bool;                  // in scope 0 at cita-network/src/main.rs:117:42: 117:43
    scope 1 {
        debug matches => _1;             // in scope 1 at cita-network/src/main.rs:116:9: 116:16
        let _11: bool;                   // in scope 1 at cita-network/src/main.rs:128:9: 128:15
        scope 2 {
            debug stdout => _11;         // in scope 2 at cita-network/src/main.rs:128:9: 128:15
            let _20: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _31: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _48: &str;               // in scope 2 at cita-network/src/main.rs:132:9: 132:20
            let mut _252: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
            let mut _253: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
            scope 3 {
                debug lvl => _20;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _249: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _250: &[&str; 1]; // in scope 3 at cita-network/src/main.rs:129:41: 129:55
                let mut _251: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug lvl => _31;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _246: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _247: &[&str; 1]; // in scope 4 at cita-network/src/main.rs:130:11: 130:24
                let mut _248: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug config_file => _48; // in scope 5 at cita-network/src/main.rs:132:9: 132:20
                let _52: &std::path::Path; // in scope 5 at cita-network/src/main.rs:134:9: 134:20
                scope 6 {
                    debug config_path => _52; // in scope 6 at cita-network/src/main.rs:134:9: 134:20
                    let mut _54: &str;   // in scope 6 at cita-network/src/main.rs:135:9: 135:16
                    scope 7 {
                        debug dir => _54; // in scope 7 at cita-network/src/main.rs:135:9: 135:16
                        let _63: std::string::String; // in scope 7 at cita-network/src/main.rs:143:9: 143:14
                        scope 8 {
                            debug fname => _63; // in scope 8 at cita-network/src/main.rs:143:9: 143:14
                            let _74: log::Level; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let _90: config::NetConfig; // in scope 8 at cita-network/src/main.rs:153:9: 153:15
                            scope 9 {
                                debug lvl => _74; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _243: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _244: &[&str; 1]; // in scope 9 at cita-network/src/main.rs:152:12: 152:30
                                let mut _245: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                            scope 10 {
                                debug config => _90; // in scope 10 at cita-network/src/main.rs:153:9: 153:15
                                let _92: log::Level; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let _108: &str; // in scope 10 at cita-network/src/main.rs:156:9: 156:18
                                scope 11 {
                                    debug lvl => _92; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let mut _240: &(&str, &str, &str, u32); // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                    let mut _241: &[&str; 1]; // in scope 11 at cita-network/src/main.rs:154:12: 154:36
                                    let mut _242: &log::LevelFilter; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                }
                                scope 12 {
                                    debug addr_path => _108; // in scope 12 at cita-network/src/main.rs:156:9: 156:18
                                    let _112: config::AddressConfig; // in scope 12 at cita-network/src/main.rs:157:9: 157:17
                                    scope 13 {
                                        debug own_addr => _112; // in scope 13 at cita-network/src/main.rs:157:9: 157:17
                                        let _114: log::Level; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                        let mut _130: node_manager::NodesManager; // in scope 13 at cita-network/src/main.rs:161:9: 161:22
                                        scope 14 {
                                            debug lvl => _114; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                            let mut _237: &(&str, &str, &str, u32); // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                            let mut _238: &[&str; 1]; // in scope 14 at cita-network/src/main.rs:158:12: 158:34
                                            let mut _239: &log::LevelFilter; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                        }
                                        scope 15 {
                                            debug nodes_mgr => _130; // in scope 15 at cita-network/src/main.rs:161:9: 161:22
                                            let mut _134: mq_agent::MqAgent; // in scope 15 at cita-network/src/main.rs:162:9: 162:21
                                            scope 16 {
                                                debug mq_agent => _134; // in scope 16 at cita-network/src/main.rs:162:9: 162:21
                                                let mut _135: synchronizer::Synchronizer; // in scope 16 at cita-network/src/main.rs:163:9: 163:29
                                                scope 17 {
                                                    debug synchronizer_mgr => _135; // in scope 17 at cita-network/src/main.rs:163:9: 163:29
                                                    let mut _140: network::Network; // in scope 17 at cita-network/src/main.rs:164:9: 164:24
                                                    scope 18 {
                                                        debug network_mgr => _140; // in scope 18 at cita-network/src/main.rs:164:9: 164:24
                                                        let _155: tentacle::service::ProtocolMeta; // in scope 18 at cita-network/src/main.rs:172:9: 172:22
                                                        scope 19 {
                                                            debug transfer_meta => _155; // in scope 19 at cita-network/src/main.rs:172:9: 172:22
                                                            let mut _161: tentacle::builder::ServiceBuilder; // in scope 19 at cita-network/src/main.rs:174:9: 174:24
                                                            scope 20 {
                                                                debug service_cfg => _161; // in scope 20 at cita-network/src/main.rs:174:9: 174:24
                                                                let _165: bool; // in scope 20 at cita-network/src/main.rs:178:9: 178:23
                                                                scope 21 {
                                                                    debug discovery_flag => _165; // in scope 21 at cita-network/src/main.rs:178:9: 178:23
                                                                    let _167: std::sync::mpsc::Sender<notify::DebouncedEvent>; // in scope 21 at cita-network/src/main.rs:179:10: 179:12
                                                                    let _168: std::sync::mpsc::Receiver<notify::DebouncedEvent>; // in scope 21 at cita-network/src/main.rs:179:14: 179:16
                                                                    scope 22 {
                                                                        debug tx => _167; // in scope 22 at cita-network/src/main.rs:179:10: 179:12
                                                                        debug rx => _168; // in scope 22 at cita-network/src/main.rs:179:14: 179:16
                                                                        let mut _170: notify::INotifyWatcher; // in scope 22 at cita-network/src/main.rs:180:9: 180:20
                                                                        scope 23 {
                                                                            debug watcher => _170; // in scope 23 at cita-network/src/main.rs:180:9: 180:20
                                                                            let _175: tentacle::service::ProtocolMeta; // in scope 23 at cita-network/src/main.rs:183:13: 183:27
                                                                            let _187: node_manager::NodesManagerClient; // in scope 23 at cita-network/src/main.rs:186:13: 186:26
                                                                            let mut _196: tentacle::service::Service<p2p_protocol::SHandle>; // in scope 23 at cita-network/src/main.rs:195:9: 195:20
                                                                            scope 24 {
                                                                                debug discovery_meta => _175; // in scope 24 at cita-network/src/main.rs:183:13: 183:27
                                                                            }
                                                                            scope 25 {
                                                                                debug notify_client => _187; // in scope 25 at cita-network/src/main.rs:186:13: 186:26
                                                                            }
                                                                            scope 26 {
                                                                                debug service => _196; // in scope 26 at cita-network/src/main.rs:195:9: 195:20
                                                                                let _201: std::string::String; // in scope 26 at cita-network/src/main.rs:197:9: 197:13
                                                                                let _202: std::string::String; // in scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                                                                                let mut _236: &[&str; 1]; // in scope 26 at cita-network/src/main.rs:197:24: 197:45
                                                                                scope 27 {
                                                                                    debug addr => _201; // in scope 27 at cita-network/src/main.rs:197:9: 197:13
                                                                                    scope 29 {
                                                                                    }
                                                                                }
                                                                                scope 28 {
                                                                                    debug res => _202; // in scope 28 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _256 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _257 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _270 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _271 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _265 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _268 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _259 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _260 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _263 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _269 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _264 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _262 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _273 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _267 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _261 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _266 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _258 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _272 = const false;              // scope 0 at cita-network/src/main.rs:116:9: 116:16
        _273 = const true;               // scope 0 at cita-network/src/main.rs:116:19: 116:38
        _7 = App::<'_, '_>::new::<&str>(const "network") -> bb1; // scope 0 at cita-network/src/main.rs:116:19: 116:38
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:116:19: 116:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> App<'_, '_> {App::<'_, '_>::new::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:116:28: 116:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        _8 = get_build_info_str(const true) -> [return: bb2, unwind: bb208]; // scope 0 at cita-network/src/main.rs:117:18: 117:42
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:117:18: 117:36
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb2: {
        _273 = const false;              // scope 0 at cita-network/src/main.rs:116:19: 117:43
        _6 = App::<'_, '_>::version::<&str>(move _7, move _8) -> [return: bb3, unwind: bb208]; // scope 0 at cita-network/src/main.rs:116:19: 117:43
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:117:10: 117:17
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::version::<&str>}, val: Value(<ZST>) }
    }

    bb3: {
        _272 = const true;               // scope 0 at cita-network/src/main.rs:117:42: 117:43
        _273 = const false;              // scope 0 at cita-network/src/main.rs:117:42: 117:43
        _9 = get_build_info_str(const false) -> [return: bb4, unwind: bb206]; // scope 0 at cita-network/src/main.rs:118:23: 118:48
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:118:23: 118:41
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb4: {
        _272 = const false;              // scope 0 at cita-network/src/main.rs:116:19: 118:49
        _5 = App::<'_, '_>::long_version::<&str>(move _6, move _9) -> [return: bb5, unwind: bb206]; // scope 0 at cita-network/src/main.rs:116:19: 118:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:118:10: 118:22
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::long_version::<&str>}, val: Value(<ZST>) }
    }

    bb5: {
        _272 = const false;              // scope 0 at cita-network/src/main.rs:118:48: 118:49
        _4 = App::<'_, '_>::author::<&str>(move _5, const "Rivtower") -> bb6; // scope 0 at cita-network/src/main.rs:116:19: 119:28
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:119:10: 119:16
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::author::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:119:17: 119:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _3 = App::<'_, '_>::about::<&str>(move _4, const "CITA Block Chain Node powered by Rust") -> bb7; // scope 0 at cita-network/src/main.rs:116:19: 120:56
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:120:10: 120:15
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::about::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:120:16: 120:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _10 = const "-c, --config=[FILE] 'Sets a custom config file'\n                        -a, --address=[FILE] 'Sets an address file'\n                        -s, --stdout 'Log to console'"; // scope 0 at cita-network/src/main.rs:122:13: 124:55
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:122:13: 124:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = App::<'_, '_>::args_from_usage(move _3, _10) -> bb8; // scope 0 at cita-network/src/main.rs:116:19: 125:10
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:121:10: 121:25
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::args_from_usage}, val: Value(<ZST>) }
    }

    bb8: {
        _1 = App::<'_, '_>::get_matches(move _2) -> bb9; // scope 0 at cita-network/src/main.rs:116:19: 126:23
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:126:10: 126:21
                                         // + literal: Const { ty: fn(App<'_, '_>) -> ArgMatches<'_> {App::<'_, '_>::get_matches}, val: Value(<ZST>) }
    }

    bb9: {
        _12 = &_1;                       // scope 1 at cita-network/src/main.rs:128:18: 128:46
        _11 = ArgMatches::<'_>::is_present::<&str>(move _12, const "stdout") -> [return: bb10, unwind: bb170]; // scope 1 at cita-network/src/main.rs:128:18: 128:46
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:128:26: 128:36
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> bool {ArgMatches::<'_>::is_present::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:128:37: 128:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb10: {
        _14 = dotenv() -> [return: bb11, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:23
                                         // + literal: Const { ty: fn() -> Result<PathBuf, dotenv::Error> {dotenv}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = Result::<PathBuf, dotenv::Error>::ok(move _14) -> [return: bb12, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:26: 21:28
                                         // + literal: Const { ty: fn(Result<PathBuf, dotenv::Error>) -> std::option::Option<PathBuf> {Result::<PathBuf, dotenv::Error>::ok}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_13) -> [return: bb13, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:30: 21:31
    }

    bb13: {
        _15 = set_var::<&str, &str>(const "RUST_BACKTRACE", const "full") -> [return: bb14, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:28
                                         // + literal: Const { ty: fn(&str, &str) {set_var::<&str, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:29: 23:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:47: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb14: {
        _16 = set_panic_handler() -> [return: bb15, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:26
                                         // + literal: Const { ty: fn() {set_panic_handler}, val: Value(<ZST>) }
    }

    bb15: {
        _17 = _11;                       // scope 2 at cita-network/src/main.rs:129:57: 129:63
        switchInt(move _17) -> [0: bb17, otherwise: bb16]; // scope 2 at cita-network/src/main.rs:129:57: 129:63
    }

    bb16: {
        _253 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[17])) }
        _18 = init_config(_253) -> [return: bb209, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb17: {
        _252 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[16])) }
        _19 = init_config(_252) -> [return: bb210, unwind: bb170]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb18: {
        _20 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _23 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _251 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[15])) }
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, _251) -> [return: bb22, unwind: bb170]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _21 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _25 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _27 = log::max_level() -> [return: bb23, unwind: bb170]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _21) -> [0: bb27, otherwise: bb25]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        switchInt(move _22) -> [0: bb19, otherwise: bb20]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _26 = &_27;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _24 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _25, move _26) -> [return: bb24, unwind: bb170]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb24: {
        _21 = move _24;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _250 = const _;                  // scope 3 at cita-network/src/main.rs:129:41: 129:55
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:129:41: 129:55
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[14])) }
        _30 = _250 as &[&str] (Pointer(Unsize)); // scope 3 at cita-network/src/main.rs:129:41: 129:55
        _29 = Arguments::<'_>::new_const(move _30) -> [return: bb26, unwind: bb170]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb26: {
        _249 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[13])) }
        _28 = log::__private_api_log(move _29, _20, _249) -> [return: bb211, unwind: bb170]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        _31 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _34 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _248 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[12])) }
        _33 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _34, _248) -> [return: bb31, unwind: bb170]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb28: {
        _32 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _36 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _38 = log::max_level() -> [return: bb32, unwind: bb170]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _32) -> [0: bb38, otherwise: bb34]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        switchInt(move _33) -> [0: bb28, otherwise: bb29]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _37 = &_38;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _35 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _36, move _37) -> [return: bb33, unwind: bb170]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _32 = move _35;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _247 = const _;                  // scope 4 at cita-network/src/main.rs:130:11: 130:24
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:130:11: 130:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[11])) }
        _41 = _247 as &[&str] (Pointer(Unsize)); // scope 4 at cita-network/src/main.rs:130:11: 130:24
        _47 = get_build_info_str(const true) -> [return: bb35, unwind: bb170]; // scope 4 at cita-network/src/main.rs:130:26: 130:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:130:26: 130:44
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb35: {
        _46 = &_47;                      // scope 4 at cita-network/src/main.rs:130:26: 130:50
        _45 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_46) -> [return: bb36, unwind: bb170]; // scope 4 at cita-network/src/main.rs:130:26: 130:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:130:26: 130:50
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb36: {
        _44 = [move _45];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = &_44;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _42 = _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _40 = Arguments::<'_>::new_v1(move _41, move _42) -> [return: bb37, unwind: bb170]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb37: {
        _246 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[10])) }
        _39 = log::__private_api_log(move _40, _31, _246) -> [return: bb212, unwind: bb170]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb38: {
        _50 = &_1;                       // scope 2 at cita-network/src/main.rs:132:23: 132:49
        _49 = ArgMatches::<'_>::value_of::<&str>(move _50, const "config") -> [return: bb39, unwind: bb170]; // scope 2 at cita-network/src/main.rs:132:23: 132:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:132:31: 132:39
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> std::option::Option<&'a str> {ArgMatches::<'_>::value_of::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:132:40: 132:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _51 = const "network.toml";      // scope 2 at cita-network/src/main.rs:132:60: 132:74
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:132:60: 132:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _48 = std::option::Option::<&str>::unwrap_or(move _49, _51) -> [return: bb40, unwind: bb170]; // scope 2 at cita-network/src/main.rs:132:23: 132:75
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:132:50: 132:59
                                         // + literal: Const { ty: fn(std::option::Option<&str>, &str) -> &str {std::option::Option::<&str>::unwrap_or}, val: Value(<ZST>) }
    }

    bb40: {
        _53 = _48;                       // scope 5 at cita-network/src/main.rs:134:33: 134:44
        _52 = Path::new::<str>(move _53) -> [return: bb41, unwind: bb170]; // scope 5 at cita-network/src/main.rs:134:23: 134:45
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:134:23: 134:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a Path {Path::new::<str>}, val: Value(<ZST>) }
    }

    bb41: {
        _59 = _52;                       // scope 6 at cita-network/src/main.rs:135:19: 136:18
        _58 = Path::parent(move _59) -> [return: bb42, unwind: bb170]; // scope 6 at cita-network/src/main.rs:135:19: 136:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:136:10: 136:16
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> std::option::Option<&'a Path> {Path::parent}, val: Value(<ZST>) }
    }

    bb42: {
        _57 = std::option::Option::<&Path>::unwrap_or_else::<[closure@cita-network/src/main.rs:137:25: 137:27]>(move _58, const ZeroSized: [closure@cita-network/src/main.rs:137:25: 137:27]) -> [return: bb43, unwind: bb170]; // scope 6 at cita-network/src/main.rs:135:19: 137:42
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:137:10: 137:24
                                         // + literal: Const { ty: fn(std::option::Option<&Path>, [closure@cita-network/src/main.rs:137:25: 137:27]) -> &Path {std::option::Option::<&Path>::unwrap_or_else::<[closure@cita-network/src/main.rs:137:25: 137:27]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/main.rs:137:25: 137:27], val: Value(<ZST>) }
    }

    bb43: {
        _56 = _57;                       // scope 6 at cita-network/src/main.rs:135:19: 138:18
        _55 = Path::to_str(move _56) -> [return: bb44, unwind: bb170]; // scope 6 at cita-network/src/main.rs:135:19: 138:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:138:10: 138:16
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> std::option::Option<&'a str> {Path::to_str}, val: Value(<ZST>) }
    }

    bb44: {
        _54 = std::option::Option::<&str>::unwrap(move _55) -> [return: bb45, unwind: bb170]; // scope 6 at cita-network/src/main.rs:135:19: 139:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:139:10: 139:16
                                         // + literal: Const { ty: fn(std::option::Option<&str>) -> &str {std::option::Option::<&str>::unwrap}, val: Value(<ZST>) }
    }

    bb45: {
        _61 = _54;                       // scope 7 at cita-network/src/main.rs:140:8: 140:22
        _60 = core::str::<impl str>::is_empty(move _61) -> [return: bb46, unwind: bb170]; // scope 7 at cita-network/src/main.rs:140:8: 140:22
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:140:12: 140:20
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> bool {core::str::<impl str>::is_empty}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _60) -> [0: bb48, otherwise: bb47]; // scope 7 at cita-network/src/main.rs:140:8: 140:22
    }

    bb47: {
        _62 = const ".";                 // scope 7 at cita-network/src/main.rs:141:15: 141:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:141:15: 141:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _54 = _62;                       // scope 7 at cita-network/src/main.rs:141:9: 141:18
        goto -> bb48;                    // scope 7 at cita-network/src/main.rs:140:5: 142:6
    }

    bb48: {
        _72 = _52;                       // scope 7 at cita-network/src/main.rs:143:17: 144:21
        _71 = Path::file_name(move _72) -> [return: bb49, unwind: bb170]; // scope 7 at cita-network/src/main.rs:143:17: 144:21
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:144:10: 144:19
                                         // + literal: Const { ty: for<'a> fn(&'a Path) -> std::option::Option<&'a OsStr> {Path::file_name}, val: Value(<ZST>) }
    }

    bb49: {
        _73 = const "Wrong config file"; // scope 7 at cita-network/src/main.rs:145:17: 145:36
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:145:17: 145:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _70 = std::option::Option::<&OsStr>::expect(move _71, _73) -> [return: bb50, unwind: bb170]; // scope 7 at cita-network/src/main.rs:143:17: 145:37
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:145:10: 145:16
                                         // + literal: Const { ty: for<'a> fn(std::option::Option<&OsStr>, &'a str) -> &OsStr {std::option::Option::<&OsStr>::expect}, val: Value(<ZST>) }
    }

    bb50: {
        _69 = _70;                       // scope 7 at cita-network/src/main.rs:143:17: 146:18
        _68 = OsStr::to_str(move _69) -> [return: bb51, unwind: bb170]; // scope 7 at cita-network/src/main.rs:143:17: 146:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:146:10: 146:16
                                         // + literal: Const { ty: for<'a> fn(&'a OsStr) -> std::option::Option<&'a str> {OsStr::to_str}, val: Value(<ZST>) }
    }

    bb51: {
        _67 = std::option::Option::<&str>::unwrap(move _68) -> [return: bb52, unwind: bb170]; // scope 7 at cita-network/src/main.rs:143:17: 147:18
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:147:10: 147:16
                                         // + literal: Const { ty: fn(std::option::Option<&str>) -> &str {std::option::Option::<&str>::unwrap}, val: Value(<ZST>) }
    }

    bb52: {
        _66 = _67;                       // scope 7 at cita-network/src/main.rs:143:17: 148:21
        _65 = <str as ToString>::to_string(move _66) -> [return: bb53, unwind: bb170]; // scope 7 at cita-network/src/main.rs:143:17: 148:21
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:148:10: 148:19
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::string::String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb53: {
        _64 = &_65;                      // scope 7 at cita-network/src/main.rs:143:17: 149:17
        _63 = <std::string::String as Clone>::clone(move _64) -> [return: bb54, unwind: bb169]; // scope 7 at cita-network/src/main.rs:143:17: 149:17
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:149:10: 149:15
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as Clone>::clone}, val: Value(<ZST>) }
    }

    bb54: {
        _257 = const true;               // scope 7 at cita-network/src/main.rs:149:16: 149:17
        drop(_65) -> [return: bb55, unwind: bb204]; // scope 7 at cita-network/src/main.rs:149:17: 149:18
    }

    bb55: {
        _74 = log::Level::Debug;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _77 = &_74;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _245 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[9])) }
        _76 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _77, _245) -> [return: bb59, unwind: bb204]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb56: {
        _75 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb58;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb57: {
        _79 = &_74;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _81 = log::max_level() -> [return: bb60, unwind: bb204]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb58: {
        switchInt(move _75) -> [0: bb65, otherwise: bb62]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        switchInt(move _76) -> [0: bb56, otherwise: bb57]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb60: {
        _80 = &_81;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _78 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _79, move _80) -> [return: bb61, unwind: bb204]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb61: {
        _75 = move _78;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb58;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _244 = const _;                  // scope 9 at cita-network/src/main.rs:152:12: 152:30
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:152:12: 152:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[8])) }
        _84 = _244 as &[&str] (Pointer(Unsize)); // scope 9 at cita-network/src/main.rs:152:12: 152:30
        _89 = &_52;                      // scope 9 at cita-network/src/main.rs:152:32: 152:43
        _88 = core::fmt::ArgumentV1::<'_>::new_debug::<&Path>(_89) -> [return: bb63, unwind: bb204]; // scope 9 at cita-network/src/main.rs:152:32: 152:43
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:152:32: 152:43
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b &Path) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&Path>}, val: Value(<ZST>) }
    }

    bb63: {
        _87 = [move _88];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _86 = &_87;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _85 = _86 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _83 = Arguments::<'_>::new_v1(move _84, move _85) -> [return: bb64, unwind: bb204]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb64: {
        _243 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[7])) }
        _82 = log::__private_api_log(move _83, _74, _243) -> [return: bb213, unwind: bb204]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb65: {
        _91 = &_48;                      // scope 8 at cita-network/src/main.rs:153:33: 153:45
        _254 = deref_copy (*_91);        // scope 8 at cita-network/src/main.rs:153:33: 153:45
        _90 = NetConfig::new(_254) -> [return: bb66, unwind: bb204]; // scope 8 at cita-network/src/main.rs:153:18: 153:46
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:153:18: 153:32
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> NetConfig {NetConfig::new}, val: Value(<ZST>) }
    }

    bb66: {
        _92 = log::Level::Debug;         // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _95 = &_92;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _242 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[6])) }
        _94 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _95, _242) -> [return: bb70, unwind: bb168]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb67: {
        _93 = const false;               // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb69;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb68: {
        _97 = &_92;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _99 = log::max_level() -> [return: bb71, unwind: bb168]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb69: {
        switchInt(move _93) -> [0: bb76, otherwise: bb73]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb70: {
        switchInt(move _94) -> [0: bb67, otherwise: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb71: {
        _98 = &_99;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _96 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _97, move _98) -> [return: bb72, unwind: bb168]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb72: {
        _93 = move _96;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb69;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb73: {
        _241 = const _;                  // scope 11 at cita-network/src/main.rs:154:12: 154:36
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:154:12: 154:36
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[5])) }
        _102 = _241 as &[&str] (Pointer(Unsize)); // scope 11 at cita-network/src/main.rs:154:12: 154:36
        _107 = &_48;                     // scope 11 at cita-network/src/main.rs:154:38: 154:49
        _106 = core::fmt::ArgumentV1::<'_>::new_debug::<&str>(_107) -> [return: bb74, unwind: bb168]; // scope 11 at cita-network/src/main.rs:154:38: 154:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:154:38: 154:49
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&str>}, val: Value(<ZST>) }
    }

    bb74: {
        _105 = [move _106];              // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _104 = &_105;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _103 = _104 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _101 = Arguments::<'_>::new_v1(move _102, move _103) -> [return: bb75, unwind: bb168]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb75: {
        _240 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[4])) }
        _100 = log::__private_api_log(move _101, _92, _240) -> [return: bb214, unwind: bb168]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb76: {
        _110 = &_1;                      // scope 10 at cita-network/src/main.rs:156:21: 156:48
        _109 = ArgMatches::<'_>::value_of::<&str>(move _110, const "address") -> [return: bb77, unwind: bb168]; // scope 10 at cita-network/src/main.rs:156:21: 156:48
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:156:29: 156:37
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> std::option::Option<&'a str> {ArgMatches::<'_>::value_of::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:156:38: 156:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb77: {
        _111 = const "address";          // scope 10 at cita-network/src/main.rs:156:59: 156:68
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:156:59: 156:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _108 = std::option::Option::<&str>::unwrap_or(move _109, _111) -> [return: bb78, unwind: bb168]; // scope 10 at cita-network/src/main.rs:156:21: 156:69
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:156:49: 156:58
                                         // + literal: Const { ty: fn(std::option::Option<&str>, &str) -> &str {std::option::Option::<&str>::unwrap_or}, val: Value(<ZST>) }
    }

    bb78: {
        _113 = &_108;                    // scope 12 at cita-network/src/main.rs:157:39: 157:49
        _255 = deref_copy (*_113);       // scope 12 at cita-network/src/main.rs:157:39: 157:49
        _112 = AddressConfig::new(_255) -> [return: bb79, unwind: bb168]; // scope 12 at cita-network/src/main.rs:157:20: 157:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:157:20: 157:38
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> AddressConfig {AddressConfig::new}, val: Value(<ZST>) }
    }

    bb79: {
        _114 = log::Level::Debug;        // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _117 = &_114;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _239 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[3])) }
        _116 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _117, _239) -> [return: bb83, unwind: bb168]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb80: {
        _115 = const false;              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb82;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb81: {
        _119 = &_114;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _121 = log::max_level() -> [return: bb84, unwind: bb168]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb82: {
        switchInt(move _115) -> [0: bb89, otherwise: bb86]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb83: {
        switchInt(move _116) -> [0: bb80, otherwise: bb81]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb84: {
        _120 = &_121;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _118 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _119, move _120) -> [return: bb85, unwind: bb168]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb85: {
        _115 = move _118;                // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb82;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb86: {
        _238 = const _;                  // scope 14 at cita-network/src/main.rs:158:12: 158:34
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:158:12: 158:34
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[2])) }
        _124 = _238 as &[&str] (Pointer(Unsize)); // scope 14 at cita-network/src/main.rs:158:12: 158:34
        _129 = &(_112.0: cita_types::H160); // scope 14 at cita-network/src/main.rs:158:36: 158:49
        _128 = core::fmt::ArgumentV1::<'_>::new_debug::<H160>(_129) -> [return: bb87, unwind: bb168]; // scope 14 at cita-network/src/main.rs:158:36: 158:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:158:36: 158:49
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b H160) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<H160>}, val: Value(<ZST>) }
    }

    bb87: {
        _127 = [move _128];              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _126 = &_127;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _125 = _126 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _123 = Arguments::<'_>::new_v1(move _124, move _125) -> [return: bb88, unwind: bb168]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb88: {
        _237 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[1])) }
        _122 = log::__private_api_log(move _123, _114, _237) -> [return: bb215, unwind: bb168]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb89: {
        _132 = &_90;                     // scope 13 at cita-network/src/main.rs:161:51: 161:65
        _131 = <NetConfig as Clone>::clone(move _132) -> [return: bb90, unwind: bb168]; // scope 13 at cita-network/src/main.rs:161:51: 161:65
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:161:58: 161:63
                                         // + literal: Const { ty: for<'a> fn(&'a NetConfig) -> NetConfig {<NetConfig as Clone>::clone}, val: Value(<ZST>) }
    }

    bb90: {
        _133 = (_112.0: cita_types::H160); // scope 13 at cita-network/src/main.rs:161:67: 161:80
        _130 = NodesManager::from_config(move _131, move _133) -> [return: bb91, unwind: bb168]; // scope 13 at cita-network/src/main.rs:161:25: 161:81
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:161:25: 161:50
                                         // + literal: Const { ty: fn(NetConfig, H160) -> NodesManager {NodesManager::from_config}, val: Value(<ZST>) }
    }

    bb91: {
        _271 = const true;               // scope 13 at cita-network/src/main.rs:161:80: 161:81
        _134 = <MqAgent as Default>::default() -> [return: bb92, unwind: bb202]; // scope 15 at cita-network/src/main.rs:162:24: 162:42
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:162:24: 162:40
                                         // + literal: Const { ty: fn() -> MqAgent {<MqAgent as Default>::default}, val: Value(<ZST>) }
    }

    bb92: {
        _137 = &_134;                    // scope 16 at cita-network/src/main.rs:163:50: 163:67
        _136 = MqAgent::client(move _137) -> [return: bb93, unwind: bb167]; // scope 16 at cita-network/src/main.rs:163:50: 163:67
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:163:59: 163:65
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgent) -> MqAgentClient {MqAgent::client}, val: Value(<ZST>) }
    }

    bb93: {
        _270 = const true;               // scope 16 at cita-network/src/main.rs:163:66: 163:67
        _139 = &_130;                    // scope 16 at cita-network/src/main.rs:163:69: 163:87
        _138 = NodesManager::client(move _139) -> [return: bb94, unwind: bb200]; // scope 16 at cita-network/src/main.rs:163:69: 163:87
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:163:79: 163:85
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb94: {
        _270 = const false;              // scope 16 at cita-network/src/main.rs:163:32: 163:88
        _135 = synchronizer::Synchronizer::new(move _136, move _138) -> [return: bb95, unwind: bb200]; // scope 16 at cita-network/src/main.rs:163:32: 163:88
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:163:32: 163:49
                                         // + literal: Const { ty: fn(MqAgentClient, NodesManagerClient) -> synchronizer::Synchronizer {synchronizer::Synchronizer::new}, val: Value(<ZST>) }
    }

    bb95: {
        _269 = const true;               // scope 16 at cita-network/src/main.rs:163:87: 163:88
        _270 = const false;              // scope 16 at cita-network/src/main.rs:163:87: 163:88
        _142 = &_134;                    // scope 17 at cita-network/src/main.rs:165:9: 165:26
        _141 = MqAgent::client(move _142) -> [return: bb96, unwind: bb198]; // scope 17 at cita-network/src/main.rs:165:9: 165:26
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:165:18: 165:24
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgent) -> MqAgentClient {MqAgent::client}, val: Value(<ZST>) }
    }

    bb96: {
        _268 = const true;               // scope 17 at cita-network/src/main.rs:165:25: 165:26
        _144 = &_130;                    // scope 17 at cita-network/src/main.rs:166:9: 166:27
        _143 = NodesManager::client(move _144) -> [return: bb97, unwind: bb196]; // scope 17 at cita-network/src/main.rs:166:9: 166:27
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:166:19: 166:25
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb97: {
        _267 = const true;               // scope 17 at cita-network/src/main.rs:166:26: 166:27
        _146 = &_135;                    // scope 17 at cita-network/src/main.rs:167:9: 167:34
        _145 = synchronizer::Synchronizer::client(move _146) -> [return: bb98, unwind: bb194]; // scope 17 at cita-network/src/main.rs:167:9: 167:34
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:167:26: 167:32
                                         // + literal: Const { ty: for<'a> fn(&'a synchronizer::Synchronizer) -> SynchronizerClient {synchronizer::Synchronizer::client}, val: Value(<ZST>) }
    }

    bb98: {
        _268 = const false;              // scope 17 at cita-network/src/main.rs:164:27: 168:6
        _267 = const false;              // scope 17 at cita-network/src/main.rs:164:27: 168:6
        _140 = Network::new(move _141, move _143, move _145) -> [return: bb99, unwind: bb194]; // scope 17 at cita-network/src/main.rs:164:27: 168:6
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:164:27: 164:39
                                         // + literal: Const { ty: fn(MqAgentClient, NodesManagerClient, SynchronizerClient) -> Network {Network::new}, val: Value(<ZST>) }
    }

    bb99: {
        _266 = const true;               // scope 17 at cita-network/src/main.rs:168:5: 168:6
        _267 = const false;              // scope 17 at cita-network/src/main.rs:168:5: 168:6
        _268 = const false;              // scope 17 at cita-network/src/main.rs:168:5: 168:6
        _148 = &mut _134;                // scope 18 at cita-network/src/main.rs:169:5: 169:54
        _150 = &_130;                    // scope 18 at cita-network/src/main.rs:169:35: 169:53
        _149 = NodesManager::client(move _150) -> [return: bb100, unwind: bb192]; // scope 18 at cita-network/src/main.rs:169:35: 169:53
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:169:45: 169:51
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb100: {
        _147 = MqAgent::set_nodes_mgr_client(move _148, move _149) -> [return: bb101, unwind: bb192]; // scope 18 at cita-network/src/main.rs:169:5: 169:54
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:169:14: 169:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut MqAgent, NodesManagerClient) {MqAgent::set_nodes_mgr_client}, val: Value(<ZST>) }
    }

    bb101: {
        _152 = &mut _134;                // scope 18 at cita-network/src/main.rs:170:5: 170:54
        _154 = &_140;                    // scope 18 at cita-network/src/main.rs:170:33: 170:53
        _153 = Network::client(move _154) -> [return: bb102, unwind: bb192]; // scope 18 at cita-network/src/main.rs:170:33: 170:53
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:170:45: 170:51
                                         // + literal: Const { ty: for<'a> fn(&'a Network) -> NetworkClient {Network::client}, val: Value(<ZST>) }
    }

    bb102: {
        _151 = MqAgent::set_network_client(move _152, move _153) -> [return: bb103, unwind: bb192]; // scope 18 at cita-network/src/main.rs:170:5: 170:54
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:170:14: 170:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut MqAgent, NetworkClient) {MqAgent::set_network_client}, val: Value(<ZST>) }
    }

    bb103: {
        _157 = &_140;                    // scope 18 at cita-network/src/main.rs:173:30: 173:50
        _156 = Network::client(move _157) -> [return: bb104, unwind: bb192]; // scope 18 at cita-network/src/main.rs:173:30: 173:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:173:42: 173:48
                                         // + literal: Const { ty: for<'a> fn(&'a Network) -> NetworkClient {Network::client}, val: Value(<ZST>) }
    }

    bb104: {
        _265 = const true;               // scope 18 at cita-network/src/main.rs:173:49: 173:50
        _159 = &_130;                    // scope 18 at cita-network/src/main.rs:173:52: 173:70
        _158 = NodesManager::client(move _159) -> [return: bb105, unwind: bb190]; // scope 18 at cita-network/src/main.rs:173:52: 173:70
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:173:62: 173:68
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb105: {
        _160 = (_112.0: cita_types::H160); // scope 18 at cita-network/src/main.rs:173:72: 173:85
        _265 = const false;              // scope 18 at cita-network/src/main.rs:173:9: 173:86
        _155 = create_transfer_meta(move _156, move _158, move _160) -> [return: bb106, unwind: bb190]; // scope 18 at cita-network/src/main.rs:173:9: 173:86
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:173:9: 173:29
                                         // + literal: Const { ty: fn(NetworkClient, NodesManagerClient, H160) -> ProtocolMeta {create_transfer_meta}, val: Value(<ZST>) }
    }

    bb106: {
        _264 = const true;               // scope 18 at cita-network/src/main.rs:173:85: 173:86
        _265 = const false;              // scope 18 at cita-network/src/main.rs:173:85: 173:86
        _163 = <ServiceBuilder as Default>::default() -> [return: bb107, unwind: bb188]; // scope 19 at cita-network/src/main.rs:174:27: 174:52
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:174:27: 174:50
                                         // + literal: Const { ty: fn() -> ServiceBuilder {<ServiceBuilder as Default>::default}, val: Value(<ZST>) }
    }

    bb107: {
        _264 = const false;              // scope 19 at cita-network/src/main.rs:175:26: 175:39
        _164 = move _155;                // scope 19 at cita-network/src/main.rs:175:26: 175:39
        _162 = ServiceBuilder::insert_protocol(move _163, move _164) -> [return: bb108, unwind: bb188]; // scope 19 at cita-network/src/main.rs:174:27: 175:40
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:175:10: 175:25
                                         // + literal: Const { ty: fn(ServiceBuilder, ProtocolMeta) -> ServiceBuilder {ServiceBuilder::insert_protocol}, val: Value(<ZST>) }
    }

    bb108: {
        _161 = ServiceBuilder::forever(move _162, const true) -> [return: bb109, unwind: bb188]; // scope 19 at cita-network/src/main.rs:174:27: 176:23
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:176:10: 176:17
                                         // + literal: Const { ty: fn(ServiceBuilder, bool) -> ServiceBuilder {ServiceBuilder::forever}, val: Value(<ZST>) }
    }

    bb109: {
        _263 = const true;               // scope 19 at cita-network/src/main.rs:176:22: 176:23
        _166 = (_90.4: std::option::Option<bool>); // scope 20 at cita-network/src/main.rs:178:26: 178:49
        _165 = std::option::Option::<bool>::unwrap_or(move _166, const true) -> [return: bb110, unwind: bb186]; // scope 20 at cita-network/src/main.rs:178:26: 178:65
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:178:50: 178:59
                                         // + literal: Const { ty: fn(std::option::Option<bool>, bool) -> bool {std::option::Option::<bool>::unwrap_or}, val: Value(<ZST>) }
    }

    bb110: {
        _169 = std::sync::mpsc::channel::<DebouncedEvent>() -> [return: bb111, unwind: bb186]; // scope 21 at cita-network/src/main.rs:179:20: 179:29
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:179:20: 179:27
                                         // + literal: Const { ty: fn() -> (std::sync::mpsc::Sender<DebouncedEvent>, std::sync::mpsc::Receiver<DebouncedEvent>) {std::sync::mpsc::channel::<DebouncedEvent>}, val: Value(<ZST>) }
    }

    bb111: {
        _262 = const true;               // scope 21 at cita-network/src/main.rs:179:10: 179:12
        _167 = move (_169.0: std::sync::mpsc::Sender<notify::DebouncedEvent>); // scope 21 at cita-network/src/main.rs:179:10: 179:12
        _256 = const true;               // scope 21 at cita-network/src/main.rs:179:14: 179:16
        _168 = move (_169.1: std::sync::mpsc::Receiver<notify::DebouncedEvent>); // scope 21 at cita-network/src/main.rs:179:14: 179:16
        _262 = const false;              // scope 22 at cita-network/src/main.rs:181:22: 181:24
        _261 = const true;               // scope 22 at cita-network/src/main.rs:181:22: 181:24
        _172 = move _167;                // scope 22 at cita-network/src/main.rs:181:22: 181:24
        _173 = Duration::from_secs(const _) -> [return: bb112, unwind: bb181]; // scope 22 at cita-network/src/main.rs:181:26: 181:75
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:181:26: 181:56
                                         // + literal: Const { ty: fn(u64) -> Duration {Duration::from_secs}, val: Value(<ZST>) }
    }

    bb112: {
        _261 = const false;              // scope 22 at cita-network/src/main.rs:181:9: 181:76
        _171 = <INotifyWatcher as Watcher>::new(move _172, move _173) -> [return: bb113, unwind: bb181]; // scope 22 at cita-network/src/main.rs:181:9: 181:76
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:181:9: 181:21
                                         // + literal: Const { ty: fn(std::sync::mpsc::Sender<DebouncedEvent>, Duration) -> Result<INotifyWatcher, notify::Error> {<INotifyWatcher as Watcher>::new}, val: Value(<ZST>) }
    }

    bb113: {
        _261 = const false;              // scope 22 at cita-network/src/main.rs:181:75: 181:76
        _170 = Result::<INotifyWatcher, notify::Error>::unwrap(move _171) -> [return: bb114, unwind: bb183]; // scope 22 at cita-network/src/main.rs:181:9: 181:85
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:181:77: 181:83
                                         // + literal: Const { ty: fn(Result<INotifyWatcher, notify::Error>) -> INotifyWatcher {Result::<INotifyWatcher, notify::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb114: {
        _174 = _165;                     // scope 23 at cita-network/src/main.rs:182:8: 182:22
        switchInt(move _174) -> [0: bb119, otherwise: bb115]; // scope 23 at cita-network/src/main.rs:182:8: 182:22
    }

    bb115: {
        _177 = &_130;                    // scope 23 at cita-network/src/main.rs:183:52: 183:70
        _176 = NodesManager::client(move _177) -> [return: bb116, unwind: bb165]; // scope 23 at cita-network/src/main.rs:183:52: 183:70
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:183:62: 183:68
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb116: {
        _175 = create_discovery_meta(move _176) -> [return: bb117, unwind: bb165]; // scope 23 at cita-network/src/main.rs:183:30: 183:71
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:183:30: 183:51
                                         // + literal: Const { ty: fn(NodesManagerClient) -> ProtocolMeta {create_discovery_meta}, val: Value(<ZST>) }
    }

    bb117: {
        _263 = const false;              // scope 24 at cita-network/src/main.rs:184:23: 184:34
        _179 = move _161;                // scope 24 at cita-network/src/main.rs:184:23: 184:34
        _180 = move _175;                // scope 24 at cita-network/src/main.rs:184:51: 184:65
        _178 = ServiceBuilder::insert_protocol(move _179, move _180) -> [return: bb118, unwind: bb165]; // scope 24 at cita-network/src/main.rs:184:23: 184:66
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:184:35: 184:50
                                         // + literal: Const { ty: fn(ServiceBuilder, ProtocolMeta) -> ServiceBuilder {ServiceBuilder::insert_protocol}, val: Value(<ZST>) }
    }

    bb118: {
        _263 = const true;               // scope 24 at cita-network/src/main.rs:184:9: 184:20
        _161 = move _178;                // scope 24 at cita-network/src/main.rs:184:9: 184:20
        goto -> bb126;                   // scope 23 at cita-network/src/main.rs:182:5: 190:6
    }

    bb119: {
        _184 = &mut _170;                // scope 23 at cita-network/src/main.rs:185:15: 185:62
        _185 = _54;                      // scope 23 at cita-network/src/main.rs:185:29: 185:32
        _186 = const NonRecursive;       // scope 23 at cita-network/src/main.rs:185:34: 185:61
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RecursiveMode, val: Value(Scalar(0x01)) }
        _183 = <INotifyWatcher as Watcher>::watch::<&str>(move _184, move _185, move _186) -> [return: bb120, unwind: bb165]; // scope 23 at cita-network/src/main.rs:185:15: 185:62
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:185:23: 185:28
                                         // + literal: Const { ty: for<'a> fn(&'a mut INotifyWatcher, &str, RecursiveMode) -> Result<(), notify::Error> {<INotifyWatcher as Watcher>::watch::<&str>}, val: Value(<ZST>) }
    }

    bb120: {
        _182 = &_183;                    // scope 23 at cita-network/src/main.rs:185:15: 185:70
        _181 = Result::<(), notify::Error>::is_ok(move _182) -> [return: bb121, unwind: bb164]; // scope 23 at cita-network/src/main.rs:185:15: 185:70
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:185:63: 185:68
                                         // + literal: Const { ty: for<'a> fn(&'a Result<(), notify::Error>) -> bool {Result::<(), notify::Error>::is_ok}, val: Value(<ZST>) }
    }

    bb121: {
        drop(_183) -> [return: bb122, unwind: bb165]; // scope 23 at cita-network/src/main.rs:185:69: 185:70
    }

    bb122: {
        switchInt(move _181) -> [0: bb126, otherwise: bb123]; // scope 23 at cita-network/src/main.rs:185:15: 185:70
    }

    bb123: {
        _188 = &_130;                    // scope 23 at cita-network/src/main.rs:186:29: 186:47
        _187 = NodesManager::client(move _188) -> [return: bb124, unwind: bb165]; // scope 23 at cita-network/src/main.rs:186:29: 186:47
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:186:39: 186:45
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb124: {
        _256 = const false;              // scope 25 at cita-network/src/main.rs:187:23: 189:10
        _257 = const false;              // scope 25 at cita-network/src/main.rs:187:23: 189:10
        _190 = [closure@cita-network/src/main.rs:187:23: 187:30] { rx: move _168, notify_client: move _187, fname: move _63 }; // scope 25 at cita-network/src/main.rs:187:23: 189:10
                                         // closure
                                         // + def_id: DefId(0:674 ~ cita_network[da60]::main::{closure#1})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (std::sync::mpsc::Receiver<notify::DebouncedEvent>, node_manager::NodesManagerClient, std::string::String),
                                         // ]
        _189 = std::thread::spawn::<[closure@cita-network/src/main.rs:187:23: 187:30], ()>(move _190) -> [return: bb125, unwind: bb165]; // scope 25 at cita-network/src/main.rs:187:9: 189:11
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:187:9: 187:22
                                         // + literal: Const { ty: fn([closure@cita-network/src/main.rs:187:23: 187:30]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/main.rs:187:23: 187:30], ()>}, val: Value(<ZST>) }
    }

    bb125: {
        drop(_189) -> [return: bb126, unwind: bb165]; // scope 25 at cita-network/src/main.rs:189:11: 189:12
    }

    bb126: {
        _192 = (_90.3: std::option::Option<bool>); // scope 23 at cita-network/src/main.rs:192:8: 192:25
        _191 = std::option::Option::<bool>::unwrap_or(move _192, const false) -> [return: bb127, unwind: bb165]; // scope 23 at cita-network/src/main.rs:192:8: 192:42
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:192:26: 192:35
                                         // + literal: Const { ty: fn(std::option::Option<bool>, bool) -> bool {std::option::Option::<bool>::unwrap_or}, val: Value(<ZST>) }
    }

    bb127: {
        switchInt(move _191) -> [0: bb131, otherwise: bb128]; // scope 23 at cita-network/src/main.rs:192:8: 192:42
    }

    bb128: {
        _263 = const false;              // scope 23 at cita-network/src/main.rs:193:23: 193:34
        _260 = const true;               // scope 23 at cita-network/src/main.rs:193:23: 193:34
        _194 = move _161;                // scope 23 at cita-network/src/main.rs:193:23: 193:34
        _195 = SecioKeyPair::secp256k1_generated() -> [return: bb129, unwind: bb179]; // scope 23 at cita-network/src/main.rs:193:44: 193:79
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:193:44: 193:77
                                         // + literal: Const { ty: fn() -> SecioKeyPair {SecioKeyPair::secp256k1_generated}, val: Value(<ZST>) }
    }

    bb129: {
        _260 = const false;              // scope 23 at cita-network/src/main.rs:193:23: 193:80
        _193 = ServiceBuilder::key_pair(move _194, move _195) -> [return: bb130, unwind: bb179]; // scope 23 at cita-network/src/main.rs:193:23: 193:80
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:193:35: 193:43
                                         // + literal: Const { ty: fn(ServiceBuilder, SecioKeyPair) -> ServiceBuilder {ServiceBuilder::key_pair}, val: Value(<ZST>) }
    }

    bb130: {
        _260 = const false;              // scope 23 at cita-network/src/main.rs:193:79: 193:80
        _263 = const true;               // scope 23 at cita-network/src/main.rs:193:9: 193:20
        _161 = move _193;                // scope 23 at cita-network/src/main.rs:193:9: 193:20
        goto -> bb131;                   // scope 23 at cita-network/src/main.rs:192:5: 194:6
    }

    bb131: {
        _263 = const false;              // scope 23 at cita-network/src/main.rs:195:23: 195:34
        _259 = const true;               // scope 23 at cita-network/src/main.rs:195:23: 195:34
        _197 = move _161;                // scope 23 at cita-network/src/main.rs:195:23: 195:34
        _200 = &_130;                    // scope 23 at cita-network/src/main.rs:195:54: 195:72
        _199 = NodesManager::client(move _200) -> [return: bb132, unwind: bb177]; // scope 23 at cita-network/src/main.rs:195:54: 195:72
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:195:64: 195:70
                                         // + literal: Const { ty: for<'a> fn(&'a NodesManager) -> NodesManagerClient {NodesManager::client}, val: Value(<ZST>) }
    }

    bb132: {
        _198 = SHandle::new(move _199) -> [return: bb133, unwind: bb177]; // scope 23 at cita-network/src/main.rs:195:41: 195:73
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:195:41: 195:53
                                         // + literal: Const { ty: fn(NodesManagerClient) -> SHandle {SHandle::new}, val: Value(<ZST>) }
    }

    bb133: {
        _259 = const false;              // scope 23 at cita-network/src/main.rs:195:23: 195:74
        _196 = ServiceBuilder::build::<SHandle>(move _197, move _198) -> [return: bb134, unwind: bb177]; // scope 23 at cita-network/src/main.rs:195:23: 195:74
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:195:35: 195:40
                                         // + literal: Const { ty: fn(ServiceBuilder, SHandle) -> Service<SHandle> {ServiceBuilder::build::<SHandle>}, val: Value(<ZST>) }
    }

    bb134: {
        _258 = const true;               // scope 23 at cita-network/src/main.rs:195:73: 195:74
        _259 = const false;              // scope 23 at cita-network/src/main.rs:195:73: 195:74
        _236 = const _;                  // scope 26 at cita-network/src/main.rs:197:24: 197:45
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:197:24: 197:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[0])) }
        _204 = _236 as &[&str] (Pointer(Unsize)); // scope 26 at cita-network/src/main.rs:197:24: 197:45
        _211 = (_90.0: std::option::Option<usize>); // scope 26 at cita-network/src/main.rs:197:47: 197:58
        _210 = std::option::Option::<usize>::unwrap_or(move _211, const _) -> [return: bb135, unwind: bb175]; // scope 26 at cita-network/src/main.rs:197:47: 197:82
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:197:59: 197:68
                                         // + literal: Const { ty: fn(std::option::Option<usize>, usize) -> usize {std::option::Option::<usize>::unwrap_or}, val: Value(<ZST>) }
    }

    bb135: {
        _209 = &_210;                    // scope 26 at cita-network/src/main.rs:197:47: 197:82
        _208 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_209) -> [return: bb136, unwind: bb175]; // scope 26 at cita-network/src/main.rs:197:47: 197:82
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:197:47: 197:82
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb136: {
        _207 = [move _208];              // scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _206 = &_207;                    // scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _205 = _206 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _203 = Arguments::<'_>::new_v1(move _204, move _205) -> [return: bb137, unwind: bb175]; // scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb137: {
        _202 = format(move _203) -> [return: bb138, unwind: bb175]; // scope 26 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb138: {
        _201 = move _202;                // scope 28 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _213 = &mut _196;                // scope 27 at cita-network/src/main.rs:198:13: 198:50
        _218 = &_201;                    // scope 27 at cita-network/src/main.rs:198:28: 198:40
        _217 = <std::string::String as Deref>::deref(move _218) -> [return: bb139, unwind: bb163]; // scope 27 at cita-network/src/main.rs:198:28: 198:40
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:198:28: 198:40
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb139: {
        _216 = _217;                     // scope 27 at cita-network/src/main.rs:198:28: 198:40
        _215 = core::str::<impl str>::parse::<Multiaddr>(move _216) -> [return: bb140, unwind: bb163]; // scope 27 at cita-network/src/main.rs:198:28: 198:40
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:198:33: 198:38
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Result<Multiaddr, <Multiaddr as FromStr>::Err> {core::str::<impl str>::parse::<Multiaddr>}, val: Value(<ZST>) }
    }

    bb140: {
        _214 = Result::<Multiaddr, tentacle::parity_multiaddr::Error>::unwrap(move _215) -> [return: bb141, unwind: bb163]; // scope 27 at cita-network/src/main.rs:198:28: 198:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:198:41: 198:47
                                         // + literal: Const { ty: fn(Result<Multiaddr, tentacle::parity_multiaddr::Error>) -> Multiaddr {Result::<Multiaddr, tentacle::parity_multiaddr::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb141: {
        _212 = Service::<SHandle>::listen(move _213, move _214) -> [return: bb142, unwind: bb163]; // scope 27 at cita-network/src/main.rs:198:13: 198:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:198:21: 198:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut Service<SHandle>, Multiaddr) -> Result<Multiaddr, std::io::Error> {Service::<SHandle>::listen}, val: Value(<ZST>) }
    }

    bb142: {
        drop(_212) -> [return: bb143, unwind: bb163]; // scope 27 at cita-network/src/main.rs:198:50: 198:51
    }

    bb143: {
        _220 = &mut _130;                // scope 29 at cita-network/src/main.rs:199:5: 199:65
        _224 = &_196;                    // scope 29 at cita-network/src/main.rs:199:39: 199:56
        _223 = Service::<SHandle>::control(move _224) -> [return: bb144, unwind: bb163]; // scope 29 at cita-network/src/main.rs:199:39: 199:56
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:199:47: 199:54
                                         // + literal: Const { ty: for<'a> fn(&'a Service<SHandle>) -> &'a ServiceControl {Service::<SHandle>::control}, val: Value(<ZST>) }
    }

    bb144: {
        _222 = _223;                     // scope 29 at cita-network/src/main.rs:199:39: 199:64
        _221 = <ServiceControl as Clone>::clone(move _222) -> [return: bb145, unwind: bb163]; // scope 29 at cita-network/src/main.rs:199:39: 199:64
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:199:57: 199:62
                                         // + literal: Const { ty: for<'a> fn(&'a ServiceControl) -> ServiceControl {<ServiceControl as Clone>::clone}, val: Value(<ZST>) }
    }

    bb145: {
        _219 = NodesManager::set_service_task_sender(move _220, move _221) -> [return: bb146, unwind: bb163]; // scope 29 at cita-network/src/main.rs:199:5: 199:65
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:199:15: 199:38
                                         // + literal: Const { ty: for<'a> fn(&'a mut NodesManager, ServiceControl) {NodesManager::set_service_task_sender}, val: Value(<ZST>) }
    }

    bb146: {
        _226 = &_134;                    // scope 29 at cita-network/src/main.rs:203:5: 203:19
        _225 = MqAgent::run(move _226) -> [return: bb147, unwind: bb163]; // scope 29 at cita-network/src/main.rs:203:5: 203:19
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:203:14: 203:17
                                         // + literal: Const { ty: for<'a> fn(&'a MqAgent) {MqAgent::run}, val: Value(<ZST>) }
    }

    bb147: {
        _271 = const false;              // scope 29 at cita-network/src/main.rs:204:19: 204:42
        _228 = [closure@cita-network/src/main.rs:204:19: 204:26] { nodes_mgr: move _130 }; // scope 29 at cita-network/src/main.rs:204:19: 204:42
                                         // closure
                                         // + def_id: DefId(0:675 ~ cita_network[da60]::main::{closure#2})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (node_manager::NodesManager,),
                                         // ]
        _227 = std::thread::spawn::<[closure@cita-network/src/main.rs:204:19: 204:26], ()>(move _228) -> [return: bb148, unwind: bb163]; // scope 29 at cita-network/src/main.rs:204:5: 204:43
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:204:5: 204:18
                                         // + literal: Const { ty: fn([closure@cita-network/src/main.rs:204:19: 204:26]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/main.rs:204:19: 204:26], ()>}, val: Value(<ZST>) }
    }

    bb148: {
        drop(_227) -> [return: bb149, unwind: bb163]; // scope 29 at cita-network/src/main.rs:204:43: 204:44
    }

    bb149: {
        _266 = const false;              // scope 29 at cita-network/src/main.rs:205:19: 205:44
        _230 = [closure@cita-network/src/main.rs:205:19: 205:26] { network_mgr: move _140 }; // scope 29 at cita-network/src/main.rs:205:19: 205:44
                                         // closure
                                         // + def_id: DefId(0:676 ~ cita_network[da60]::main::{closure#3})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (network::Network,),
                                         // ]
        _229 = std::thread::spawn::<[closure@cita-network/src/main.rs:205:19: 205:26], ()>(move _230) -> [return: bb150, unwind: bb163]; // scope 29 at cita-network/src/main.rs:205:5: 205:45
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:205:5: 205:18
                                         // + literal: Const { ty: fn([closure@cita-network/src/main.rs:205:19: 205:26]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/main.rs:205:19: 205:26], ()>}, val: Value(<ZST>) }
    }

    bb150: {
        drop(_229) -> [return: bb151, unwind: bb163]; // scope 29 at cita-network/src/main.rs:205:45: 205:46
    }

    bb151: {
        _269 = const false;              // scope 29 at cita-network/src/main.rs:206:19: 206:49
        _232 = [closure@cita-network/src/main.rs:206:19: 206:26] { synchronizer_mgr: move _135 }; // scope 29 at cita-network/src/main.rs:206:19: 206:49
                                         // closure
                                         // + def_id: DefId(0:677 ~ cita_network[da60]::main::{closure#4})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (synchronizer::Synchronizer,),
                                         // ]
        _231 = std::thread::spawn::<[closure@cita-network/src/main.rs:206:19: 206:26], ()>(move _232) -> [return: bb152, unwind: bb163]; // scope 29 at cita-network/src/main.rs:206:5: 206:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:206:5: 206:18
                                         // + literal: Const { ty: fn([closure@cita-network/src/main.rs:206:19: 206:26]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-network/src/main.rs:206:19: 206:26], ()>}, val: Value(<ZST>) }
    }

    bb152: {
        drop(_231) -> [return: bb153, unwind: bb163]; // scope 29 at cita-network/src/main.rs:206:50: 206:51
    }

    bb153: {
        _258 = const false;              // scope 29 at cita-network/src/main.rs:207:16: 207:23
        _235 = move _196;                // scope 29 at cita-network/src/main.rs:207:16: 207:23
        _234 = <Service<SHandle> as futures::Stream>::for_each::<[closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>>(move _235, const ZeroSized: [closure@cita-network/src/main.rs:207:33: 207:36]) -> [return: bb154, unwind: bb163]; // scope 29 at cita-network/src/main.rs:207:16: 207:44
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:207:24: 207:32
                                         // + literal: Const { ty: fn(Service<SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36]) -> ForEach<Service<SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>> {<Service<SHandle> as futures::Stream>::for_each::<[closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-network/src/main.rs:207:33: 207:36], val: Value(<ZST>) }
    }

    bb154: {
        _233 = tokio::run::<ForEach<Service<SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>>>(move _234) -> [return: bb155, unwind: bb163]; // scope 29 at cita-network/src/main.rs:207:5: 207:45
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:207:5: 207:15
                                         // + literal: Const { ty: fn(ForEach<Service<SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>>) {tokio::run::<ForEach<Service<SHandle>, [closure@cita-network/src/main.rs:207:33: 207:36], Result<(), ()>>>}, val: Value(<ZST>) }
    }

    bb155: {
        drop(_201) -> [return: bb156, unwind: bb175]; // scope 26 at cita-network/src/main.rs:209:1: 209:2
    }

    bb156: {
        _258 = const false;              // scope 23 at cita-network/src/main.rs:209:1: 209:2
        drop(_170) -> [return: bb157, unwind: bb183]; // scope 22 at cita-network/src/main.rs:209:1: 209:2
    }

    bb157: {
        switchInt(_256) -> [0: bb158, otherwise: bb172]; // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb158: {
        _256 = const false;              // scope 21 at cita-network/src/main.rs:209:1: 209:2
        _262 = const false;              // scope 21 at cita-network/src/main.rs:209:1: 209:2
        _263 = const false;              // scope 19 at cita-network/src/main.rs:209:1: 209:2
        _264 = const false;              // scope 18 at cita-network/src/main.rs:209:1: 209:2
        _266 = const false;              // scope 17 at cita-network/src/main.rs:209:1: 209:2
        _269 = const false;              // scope 16 at cita-network/src/main.rs:209:1: 209:2
        drop(_134) -> [return: bb159, unwind: bb202]; // scope 15 at cita-network/src/main.rs:209:1: 209:2
    }

    bb159: {
        _271 = const false;              // scope 13 at cita-network/src/main.rs:209:1: 209:2
        drop(_90) -> [return: bb160, unwind: bb204]; // scope 8 at cita-network/src/main.rs:209:1: 209:2
    }

    bb160: {
        switchInt(_257) -> [0: bb161, otherwise: bb173]; // scope 7 at cita-network/src/main.rs:209:1: 209:2
    }

    bb161: {
        _257 = const false;              // scope 7 at cita-network/src/main.rs:209:1: 209:2
        drop(_1) -> bb162;               // scope 0 at cita-network/src/main.rs:209:1: 209:2
    }

    bb162: {
        return;                          // scope 0 at cita-network/src/main.rs:209:2: 209:2
    }

    bb163 (cleanup): {
        drop(_201) -> bb175;             // scope 26 at cita-network/src/main.rs:209:1: 209:2
    }

    bb164 (cleanup): {
        drop(_183) -> bb165;             // scope 23 at cita-network/src/main.rs:185:69: 185:70
    }

    bb165 (cleanup): {
        drop(_170) -> bb183;             // scope 22 at cita-network/src/main.rs:209:1: 209:2
    }

    bb166 (cleanup): {
        switchInt(_262) -> [0: bb186, otherwise: bb184]; // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb167 (cleanup): {
        drop(_134) -> bb202;             // scope 15 at cita-network/src/main.rs:209:1: 209:2
    }

    bb168 (cleanup): {
        drop(_90) -> bb204;              // scope 8 at cita-network/src/main.rs:209:1: 209:2
    }

    bb169 (cleanup): {
        drop(_65) -> bb170;              // scope 7 at cita-network/src/main.rs:149:17: 149:18
    }

    bb170 (cleanup): {
        drop(_1) -> bb171;               // scope 0 at cita-network/src/main.rs:209:1: 209:2
    }

    bb171 (cleanup): {
        resume;                          // scope 0 at cita-network/src/main.rs:114:1: 209:2
    }

    bb172: {
        drop(_168) -> [return: bb158, unwind: bb166]; // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb173: {
        drop(_63) -> [return: bb161, unwind: bb170]; // scope 7 at cita-network/src/main.rs:209:1: 209:2
    }

    bb174 (cleanup): {
        drop(_196) -> bb165;             // scope 23 at cita-network/src/main.rs:209:1: 209:2
    }

    bb175 (cleanup): {
        switchInt(_258) -> [0: bb165, otherwise: bb174]; // scope 23 at cita-network/src/main.rs:209:1: 209:2
    }

    bb176 (cleanup): {
        drop(_197) -> bb165;             // scope 23 at cita-network/src/main.rs:195:73: 195:74
    }

    bb177 (cleanup): {
        switchInt(_259) -> [0: bb165, otherwise: bb176]; // scope 23 at cita-network/src/main.rs:195:73: 195:74
    }

    bb178 (cleanup): {
        drop(_194) -> bb165;             // scope 23 at cita-network/src/main.rs:193:79: 193:80
    }

    bb179 (cleanup): {
        switchInt(_260) -> [0: bb165, otherwise: bb178]; // scope 23 at cita-network/src/main.rs:193:79: 193:80
    }

    bb180 (cleanup): {
        drop(_172) -> bb183;             // scope 22 at cita-network/src/main.rs:181:75: 181:76
    }

    bb181 (cleanup): {
        switchInt(_261) -> [0: bb183, otherwise: bb180]; // scope 22 at cita-network/src/main.rs:181:75: 181:76
    }

    bb182 (cleanup): {
        drop(_168) -> bb166;             // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb183 (cleanup): {
        switchInt(_256) -> [0: bb166, otherwise: bb182]; // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb184 (cleanup): {
        drop(_167) -> bb186;             // scope 21 at cita-network/src/main.rs:209:1: 209:2
    }

    bb185 (cleanup): {
        drop(_161) -> bb188;             // scope 19 at cita-network/src/main.rs:209:1: 209:2
    }

    bb186 (cleanup): {
        switchInt(_263) -> [0: bb188, otherwise: bb185]; // scope 19 at cita-network/src/main.rs:209:1: 209:2
    }

    bb187 (cleanup): {
        drop(_155) -> bb192;             // scope 18 at cita-network/src/main.rs:209:1: 209:2
    }

    bb188 (cleanup): {
        switchInt(_264) -> [0: bb192, otherwise: bb187]; // scope 18 at cita-network/src/main.rs:209:1: 209:2
    }

    bb189 (cleanup): {
        drop(_156) -> bb192;             // scope 18 at cita-network/src/main.rs:173:85: 173:86
    }

    bb190 (cleanup): {
        switchInt(_265) -> [0: bb192, otherwise: bb189]; // scope 18 at cita-network/src/main.rs:173:85: 173:86
    }

    bb191 (cleanup): {
        drop(_140) -> bb198;             // scope 17 at cita-network/src/main.rs:209:1: 209:2
    }

    bb192 (cleanup): {
        switchInt(_266) -> [0: bb198, otherwise: bb191]; // scope 17 at cita-network/src/main.rs:209:1: 209:2
    }

    bb193 (cleanup): {
        drop(_143) -> bb196;             // scope 17 at cita-network/src/main.rs:168:5: 168:6
    }

    bb194 (cleanup): {
        switchInt(_267) -> [0: bb196, otherwise: bb193]; // scope 17 at cita-network/src/main.rs:168:5: 168:6
    }

    bb195 (cleanup): {
        drop(_141) -> bb198;             // scope 17 at cita-network/src/main.rs:168:5: 168:6
    }

    bb196 (cleanup): {
        switchInt(_268) -> [0: bb198, otherwise: bb195]; // scope 17 at cita-network/src/main.rs:168:5: 168:6
    }

    bb197 (cleanup): {
        drop(_135) -> bb167;             // scope 16 at cita-network/src/main.rs:209:1: 209:2
    }

    bb198 (cleanup): {
        switchInt(_269) -> [0: bb167, otherwise: bb197]; // scope 16 at cita-network/src/main.rs:209:1: 209:2
    }

    bb199 (cleanup): {
        drop(_136) -> bb167;             // scope 16 at cita-network/src/main.rs:163:87: 163:88
    }

    bb200 (cleanup): {
        switchInt(_270) -> [0: bb167, otherwise: bb199]; // scope 16 at cita-network/src/main.rs:163:87: 163:88
    }

    bb201 (cleanup): {
        drop(_130) -> bb168;             // scope 13 at cita-network/src/main.rs:209:1: 209:2
    }

    bb202 (cleanup): {
        switchInt(_271) -> [0: bb168, otherwise: bb201]; // scope 13 at cita-network/src/main.rs:209:1: 209:2
    }

    bb203 (cleanup): {
        drop(_63) -> bb170;              // scope 7 at cita-network/src/main.rs:209:1: 209:2
    }

    bb204 (cleanup): {
        switchInt(_257) -> [0: bb170, otherwise: bb203]; // scope 7 at cita-network/src/main.rs:209:1: 209:2
    }

    bb205 (cleanup): {
        drop(_6) -> bb171;               // scope 0 at cita-network/src/main.rs:118:48: 118:49
    }

    bb206 (cleanup): {
        switchInt(_272) -> [0: bb171, otherwise: bb205]; // scope 0 at cita-network/src/main.rs:118:48: 118:49
    }

    bb207 (cleanup): {
        drop(_7) -> bb171;               // scope 0 at cita-network/src/main.rs:117:42: 117:43
    }

    bb208 (cleanup): {
        switchInt(_273) -> [0: bb171, otherwise: bb207]; // scope 0 at cita-network/src/main.rs:117:42: 117:43
    }

    bb209: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    }

    bb210: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    }

    bb211: {
        goto -> bb27;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb212: {
        goto -> bb38;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb213: {
        goto -> bb65;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb214: {
        goto -> bb76;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb215: {
        goto -> bb89;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:197:24: 197:45
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:197:24: 197:45

    bb0: {
        _1 = [const "/ip4/0.0.0.0/tcp/"]; // scope 0 at cita-network/src/main.rs:197:24: 197:45
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:197:24: 197:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:197:24: 197:45
        return;                          // scope 0 at cita-network/src/main.rs:197:24: 197:45
    }
}

promoted[1] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/main.rs:158:5: 158:50
    let mut _7: &str;                    // in scope 0 at cita-network/src/main.rs:158:5: 158:50

    bb0: {
        _3 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/main.rs"; // scope 0 at cita-network/src/main.rs:158:5: 158:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:158:5: 158:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/main.rs:158:5: 158:50
        _1 = (move _2, move _4, move _6, const 158_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[2] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:158:12: 158:34
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:158:12: 158:34

    bb0: {
        _1 = [const "Node address is "]; // scope 0 at cita-network/src/main.rs:158:12: 158:34
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:158:12: 158:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:158:12: 158:34
        return;                          // scope 0 at cita-network/src/main.rs:158:12: 158:34
    }
}

promoted[3] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[4] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/main.rs:154:5: 154:50
    let mut _7: &str;                    // in scope 0 at cita-network/src/main.rs:154:5: 154:50

    bb0: {
        _3 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/main.rs"; // scope 0 at cita-network/src/main.rs:154:5: 154:50
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:154:5: 154:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/main.rs:154:5: 154:50
        _1 = (move _2, move _4, move _6, const 154_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:154:12: 154:36
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:154:12: 154:36

    bb0: {
        _1 = [const "Network config is "]; // scope 0 at cita-network/src/main.rs:154:12: 154:36
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:154:12: 154:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:154:12: 154:36
        return;                          // scope 0 at cita-network/src/main.rs:154:12: 154:36
    }
}

promoted[6] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[7] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/main.rs:152:5: 152:44
    let mut _7: &str;                    // in scope 0 at cita-network/src/main.rs:152:5: 152:44

    bb0: {
        _3 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/main.rs"; // scope 0 at cita-network/src/main.rs:152:5: 152:44
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:152:5: 152:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/main.rs:152:5: 152:44
        _1 = (move _2, move _4, move _6, const 152_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[8] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:152:12: 152:30
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:152:12: 152:30

    bb0: {
        _1 = [const "Config path "];     // scope 0 at cita-network/src/main.rs:152:12: 152:30
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:152:12: 152:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:152:12: 152:30
        return;                          // scope 0 at cita-network/src/main.rs:152:12: 152:30
    }
}

promoted[9] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[10] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/main.rs:130:5: 130:51
    let mut _7: &str;                    // in scope 0 at cita-network/src/main.rs:130:5: 130:51

    bb0: {
        _3 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/main.rs"; // scope 0 at cita-network/src/main.rs:130:5: 130:51
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:130:5: 130:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/main.rs:130:5: 130:51
        _1 = (move _2, move _4, move _6, const 130_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[11] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:130:11: 130:24
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:130:11: 130:24

    bb0: {
        _1 = [const "Version: "];        // scope 0 at cita-network/src/main.rs:130:11: 130:24
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:130:11: 130:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:130:11: 130:24
        return;                          // scope 0 at cita-network/src/main.rs:130:11: 130:24
    }
}

promoted[12] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[13] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-network/src/main.rs:129:5: 129:64
    let mut _7: &str;                    // in scope 0 at cita-network/src/main.rs:129:5: 129:64

    bb0: {
        _3 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_network";       // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-network/src/main.rs"; // scope 0 at cita-network/src/main.rs:129:5: 129:64
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:129:5: 129:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-network/src/main.rs:129:5: 129:64
        _1 = (move _2, move _4, move _6, const 129_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[14] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-network/src/main.rs:129:41: 129:55
    let mut _1: [&str; 1];               // in scope 0 at cita-network/src/main.rs:129:41: 129:55

    bb0: {
        _1 = [const "CITA:network"];     // scope 0 at cita-network/src/main.rs:129:41: 129:55
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:129:41: 129:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-network/src/main.rs:129:41: 129:55
        return;                          // scope 0 at cita-network/src/main.rs:129:41: 129:55
    }
}

promoted[15] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[16] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
    let mut _2: &str;                    // in scope 0 at cita-network/src/main.rs:129:25: 129:39
    let mut _3: &str;                    // in scope 0 at cita-network/src/main.rs:129:25: 129:39

    bb0: {
        _3 = const "cita-network";       // scope 0 at cita-network/src/main.rs:129:25: 129:39
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:129:25: 129:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-network/src/main.rs:129:25: 129:39
        _1 = LogFavour::<'_>::File(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    }
}

promoted[17] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
    let mut _2: &str;                    // in scope 0 at cita-network/src/main.rs:129:25: 129:39
    let mut _3: &str;                    // in scope 0 at cita-network/src/main.rs:129:25: 129:39

    bb0: {
        _3 = const "cita-network";       // scope 0 at cita-network/src/main.rs:129:25: 129:39
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:129:25: 129:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-network/src/main.rs:129:25: 129:39
        _1 = LogFavour::<'_>::Stdout(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    }
}

fn main::{closure#0}(_1: [closure@cita-network/src/main.rs:137:25: 137:27]) -> &Path {
    let mut _0: &std::path::Path;        // return place in scope 0 at cita-network/src/main.rs:137:28: 137:41
    let _2: &str;                        // in scope 0 at cita-network/src/main.rs:137:38: 137:40

    bb0: {
        _2 = const "";                   // scope 0 at cita-network/src/main.rs:137:38: 137:40
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:137:38: 137:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = Path::new::<str>(_2) -> bb1; // scope 0 at cita-network/src/main.rs:137:28: 137:41
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:137:28: 137:37
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a Path {Path::new::<str>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/main.rs:137:41: 137:41
    }
}

fn main::{closure#1}(_1: [closure@cita-network/src/main.rs:187:23: 187:30]) -> () {
    debug rx => (_1.0: std::sync::mpsc::Receiver<notify::DebouncedEvent>); // in scope 0 at cita-network/src/main.rs:179:14: 179:16
    debug notify_client => (_1.1: node_manager::NodesManagerClient); // in scope 0 at cita-network/src/main.rs:186:13: 186:26
    debug fname => (_1.2: std::string::String); // in scope 0 at cita-network/src/main.rs:143:9: 143:14
    let mut _0: ();                      // return place in scope 0 at cita-network/src/main.rs:187:31: 187:31
    let _2: ();                          // in scope 0 at cita-network/src/main.rs:188:13: 188:73
    let mut _3: std::sync::mpsc::Receiver<notify::DebouncedEvent>; // in scope 0 at cita-network/src/main.rs:188:48: 188:50
    let mut _4: node_manager::NodesManagerClient; // in scope 0 at cita-network/src/main.rs:188:52: 188:65
    let mut _5: std::string::String;     // in scope 0 at cita-network/src/main.rs:188:67: 188:72

    bb0: {
        _3 = move (_1.0: std::sync::mpsc::Receiver<notify::DebouncedEvent>); // scope 0 at cita-network/src/main.rs:188:48: 188:50
        _4 = move (_1.1: node_manager::NodesManagerClient); // scope 0 at cita-network/src/main.rs:188:52: 188:65
        _5 = move (_1.2: std::string::String); // scope 0 at cita-network/src/main.rs:188:67: 188:72
        _2 = NodesManager::notify_config_change(move _3, move _4, move _5) -> bb1; // scope 0 at cita-network/src/main.rs:188:13: 188:73
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:188:13: 188:47
                                         // + literal: Const { ty: fn(std::sync::mpsc::Receiver<DebouncedEvent>, NodesManagerClient, std::string::String) {NodesManager::notify_config_change}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-network/src/main.rs:189:10: 189:10
    }
}

fn main::{closure#2}(_1: [closure@cita-network/src/main.rs:204:19: 204:26]) -> () {
    debug nodes_mgr => (_1.0: node_manager::NodesManager); // in scope 0 at cita-network/src/main.rs:161:13: 161:22
    let mut _0: ();                      // return place in scope 0 at cita-network/src/main.rs:204:27: 204:27
    let mut _2: &mut node_manager::NodesManager; // in scope 0 at cita-network/src/main.rs:204:27: 204:42

    bb0: {
        _2 = &mut (_1.0: node_manager::NodesManager); // scope 0 at cita-network/src/main.rs:204:27: 204:42
        _0 = NodesManager::run(move _2) -> [return: bb1, unwind: bb3]; // scope 0 at cita-network/src/main.rs:204:27: 204:42
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:204:37: 204:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut NodesManager) {NodesManager::run}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at cita-network/src/main.rs:204:41: 204:42
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/main.rs:204:42: 204:42
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at cita-network/src/main.rs:204:41: 204:42
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/main.rs:204:19: 204:42
    }
}

fn main::{closure#3}(_1: [closure@cita-network/src/main.rs:205:19: 205:26]) -> () {
    debug network_mgr => (_1.0: network::Network); // in scope 0 at cita-network/src/main.rs:164:13: 164:24
    let mut _0: ();                      // return place in scope 0 at cita-network/src/main.rs:205:27: 205:27
    let mut _2: &mut network::Network;   // in scope 0 at cita-network/src/main.rs:205:27: 205:44

    bb0: {
        _2 = &mut (_1.0: network::Network); // scope 0 at cita-network/src/main.rs:205:27: 205:44
        _0 = Network::run(move _2) -> [return: bb1, unwind: bb3]; // scope 0 at cita-network/src/main.rs:205:27: 205:44
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:205:39: 205:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut Network) {Network::run}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at cita-network/src/main.rs:205:43: 205:44
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/main.rs:205:44: 205:44
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at cita-network/src/main.rs:205:43: 205:44
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/main.rs:205:19: 205:44
    }
}

fn main::{closure#4}(_1: [closure@cita-network/src/main.rs:206:19: 206:26]) -> () {
    debug synchronizer_mgr => (_1.0: synchronizer::Synchronizer); // in scope 0 at cita-network/src/main.rs:163:13: 163:29
    let mut _0: ();                      // return place in scope 0 at cita-network/src/main.rs:206:27: 206:27
    let mut _2: &mut synchronizer::Synchronizer; // in scope 0 at cita-network/src/main.rs:206:27: 206:49

    bb0: {
        _2 = &mut (_1.0: synchronizer::Synchronizer); // scope 0 at cita-network/src/main.rs:206:27: 206:49
        _0 = synchronizer::Synchronizer::run(move _2) -> [return: bb1, unwind: bb3]; // scope 0 at cita-network/src/main.rs:206:27: 206:49
                                         // mir::Constant
                                         // + span: cita-network/src/main.rs:206:44: 206:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut synchronizer::Synchronizer) {synchronizer::Synchronizer::run}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_1) -> bb2;                 // scope 0 at cita-network/src/main.rs:206:48: 206:49
    }

    bb2: {
        return;                          // scope 0 at cita-network/src/main.rs:206:49: 206:49
    }

    bb3 (cleanup): {
        drop(_1) -> bb4;                 // scope 0 at cita-network/src/main.rs:206:48: 206:49
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-network/src/main.rs:206:19: 206:49
    }
}

fn main::{closure#5}(_1: &mut [closure@cita-network/src/main.rs:207:33: 207:36], _2: ()) -> Result<(), ()> {
    let mut _0: std::result::Result<(), ()>; // return place in scope 0 at cita-network/src/main.rs:207:37: 207:37

    bb0: {
        _0 = const Result::<(), ()>::Ok(()); // scope 0 at cita-network/src/main.rs:207:37: 207:43
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), ()>, val: Value(Scalar(0x00)) }
        return;                          // scope 0 at cita-network/src/main.rs:207:43: 207:43
    }
}

fn NetworkMessage::LocalMessage(_1: LocalMessage) -> NetworkMessage {
    let mut _0: network::NetworkMessage; // return place in scope 0 at cita-network/src/network.rs:100:5: 100:17

    bb0: {
        _0 = NetworkMessage::LocalMessage(move _1); // scope 0 at cita-network/src/network.rs:100:5: 100:17
        return;                          // scope 0 at cita-network/src/network.rs:100:5: 100:17
    }
}

// MIR FOR CTFE
fn NetworkMessage::LocalMessage(_1: LocalMessage) -> NetworkMessage {
    let mut _0: network::NetworkMessage; // return place in scope 0 at cita-network/src/network.rs:100:5: 100:17

    bb0: {
        _0 = NetworkMessage::LocalMessage(move _1); // scope 0 at cita-network/src/network.rs:100:5: 100:17
        return;                          // scope 0 at cita-network/src/network.rs:100:5: 100:17
    }
}

fn NetworkMessage::RemoteMessage(_1: RemoteMessage) -> NetworkMessage {
    let mut _0: network::NetworkMessage; // return place in scope 0 at cita-network/src/network.rs:101:5: 101:18

    bb0: {
        _0 = NetworkMessage::RemoteMessage(move _1); // scope 0 at cita-network/src/network.rs:101:5: 101:18
        return;                          // scope 0 at cita-network/src/network.rs:101:5: 101:18
    }
}

// MIR FOR CTFE
fn NetworkMessage::RemoteMessage(_1: RemoteMessage) -> NetworkMessage {
    let mut _0: network::NetworkMessage; // return place in scope 0 at cita-network/src/network.rs:101:5: 101:18

    bb0: {
        _0 = NetworkMessage::RemoteMessage(move _1); // scope 0 at cita-network/src/network.rs:101:5: 101:18
        return;                          // scope 0 at cita-network/src/network.rs:101:5: 101:18
    }
}

fn NodesManagerMessage::AddNodeReq(_1: AddNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:522:5: 522:15

    bb0: {
        _0 = NodesManagerMessage::AddNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:522:5: 522:15
        return;                          // scope 0 at cita-network/src/node_manager.rs:522:5: 522:15
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::AddNodeReq(_1: AddNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:522:5: 522:15

    bb0: {
        _0 = NodesManagerMessage::AddNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:522:5: 522:15
        return;                          // scope 0 at cita-network/src/node_manager.rs:522:5: 522:15
    }
}

fn NodesManagerMessage::DialedErrorReq(_1: DialedErrorReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:523:5: 523:19

    bb0: {
        _0 = NodesManagerMessage::DialedErrorReq(move _1); // scope 0 at cita-network/src/node_manager.rs:523:5: 523:19
        return;                          // scope 0 at cita-network/src/node_manager.rs:523:5: 523:19
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::DialedErrorReq(_1: DialedErrorReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:523:5: 523:19

    bb0: {
        _0 = NodesManagerMessage::DialedErrorReq(move _1); // scope 0 at cita-network/src/node_manager.rs:523:5: 523:19
        return;                          // scope 0 at cita-network/src/node_manager.rs:523:5: 523:19
    }
}

fn NodesManagerMessage::GetRandomNodesReq(_1: GetRandomNodesReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:524:5: 524:22

    bb0: {
        _0 = NodesManagerMessage::GetRandomNodesReq(move _1); // scope 0 at cita-network/src/node_manager.rs:524:5: 524:22
        return;                          // scope 0 at cita-network/src/node_manager.rs:524:5: 524:22
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::GetRandomNodesReq(_1: GetRandomNodesReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:524:5: 524:22

    bb0: {
        _0 = NodesManagerMessage::GetRandomNodesReq(move _1); // scope 0 at cita-network/src/node_manager.rs:524:5: 524:22
        return;                          // scope 0 at cita-network/src/node_manager.rs:524:5: 524:22
    }
}

fn NodesManagerMessage::PendingConnectedNodeReq(_1: PendingConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:525:5: 525:28

    bb0: {
        _0 = NodesManagerMessage::PendingConnectedNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:525:5: 525:28
        return;                          // scope 0 at cita-network/src/node_manager.rs:525:5: 525:28
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::PendingConnectedNodeReq(_1: PendingConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:525:5: 525:28

    bb0: {
        _0 = NodesManagerMessage::PendingConnectedNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:525:5: 525:28
        return;                          // scope 0 at cita-network/src/node_manager.rs:525:5: 525:28
    }
}

fn NodesManagerMessage::DelConnectedNodeReq(_1: DelConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:526:5: 526:24

    bb0: {
        _0 = NodesManagerMessage::DelConnectedNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:526:5: 526:24
        return;                          // scope 0 at cita-network/src/node_manager.rs:526:5: 526:24
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::DelConnectedNodeReq(_1: DelConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:526:5: 526:24

    bb0: {
        _0 = NodesManagerMessage::DelConnectedNodeReq(move _1); // scope 0 at cita-network/src/node_manager.rs:526:5: 526:24
        return;                          // scope 0 at cita-network/src/node_manager.rs:526:5: 526:24
    }
}

fn NodesManagerMessage::Broadcast(_1: BroadcastReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:527:5: 527:14

    bb0: {
        _0 = NodesManagerMessage::Broadcast(move _1); // scope 0 at cita-network/src/node_manager.rs:527:5: 527:14
        return;                          // scope 0 at cita-network/src/node_manager.rs:527:5: 527:14
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::Broadcast(_1: BroadcastReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:527:5: 527:14

    bb0: {
        _0 = NodesManagerMessage::Broadcast(move _1); // scope 0 at cita-network/src/node_manager.rs:527:5: 527:14
        return;                          // scope 0 at cita-network/src/node_manager.rs:527:5: 527:14
    }
}

fn NodesManagerMessage::RetransNetMsg(_1: RetransNetMsgReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:528:5: 528:18

    bb0: {
        _0 = NodesManagerMessage::RetransNetMsg(move _1); // scope 0 at cita-network/src/node_manager.rs:528:5: 528:18
        return;                          // scope 0 at cita-network/src/node_manager.rs:528:5: 528:18
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::RetransNetMsg(_1: RetransNetMsgReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:528:5: 528:18

    bb0: {
        _0 = NodesManagerMessage::RetransNetMsg(move _1); // scope 0 at cita-network/src/node_manager.rs:528:5: 528:18
        return;                          // scope 0 at cita-network/src/node_manager.rs:528:5: 528:18
    }
}

fn NodesManagerMessage::SingleTxReq(_1: SingleTxReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:529:5: 529:16

    bb0: {
        _0 = NodesManagerMessage::SingleTxReq(move _1); // scope 0 at cita-network/src/node_manager.rs:529:5: 529:16
        return;                          // scope 0 at cita-network/src/node_manager.rs:529:5: 529:16
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::SingleTxReq(_1: SingleTxReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:529:5: 529:16

    bb0: {
        _0 = NodesManagerMessage::SingleTxReq(move _1); // scope 0 at cita-network/src/node_manager.rs:529:5: 529:16
        return;                          // scope 0 at cita-network/src/node_manager.rs:529:5: 529:16
    }
}

fn NodesManagerMessage::GetPeerCount(_1: GetPeerCountReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:530:5: 530:17

    bb0: {
        _0 = NodesManagerMessage::GetPeerCount(move _1); // scope 0 at cita-network/src/node_manager.rs:530:5: 530:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:530:5: 530:17
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::GetPeerCount(_1: GetPeerCountReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:530:5: 530:17

    bb0: {
        _0 = NodesManagerMessage::GetPeerCount(move _1); // scope 0 at cita-network/src/node_manager.rs:530:5: 530:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:530:5: 530:17
    }
}

fn NodesManagerMessage::NetworkInit(_1: NetworkInitReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:531:5: 531:16

    bb0: {
        _0 = NodesManagerMessage::NetworkInit(move _1); // scope 0 at cita-network/src/node_manager.rs:531:5: 531:16
        return;                          // scope 0 at cita-network/src/node_manager.rs:531:5: 531:16
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::NetworkInit(_1: NetworkInitReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:531:5: 531:16

    bb0: {
        _0 = NodesManagerMessage::NetworkInit(move _1); // scope 0 at cita-network/src/node_manager.rs:531:5: 531:16
        return;                          // scope 0 at cita-network/src/node_manager.rs:531:5: 531:16
    }
}

fn NodesManagerMessage::AddConnectedNode(_1: AddConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:532:5: 532:21

    bb0: {
        _0 = NodesManagerMessage::AddConnectedNode(move _1); // scope 0 at cita-network/src/node_manager.rs:532:5: 532:21
        return;                          // scope 0 at cita-network/src/node_manager.rs:532:5: 532:21
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::AddConnectedNode(_1: AddConnectedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:532:5: 532:21

    bb0: {
        _0 = NodesManagerMessage::AddConnectedNode(move _1); // scope 0 at cita-network/src/node_manager.rs:532:5: 532:21
        return;                          // scope 0 at cita-network/src/node_manager.rs:532:5: 532:21
    }
}

fn NodesManagerMessage::AddRepeatedNode(_1: AddRepeatedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:533:5: 533:20

    bb0: {
        _0 = NodesManagerMessage::AddRepeatedNode(move _1); // scope 0 at cita-network/src/node_manager.rs:533:5: 533:20
        return;                          // scope 0 at cita-network/src/node_manager.rs:533:5: 533:20
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::AddRepeatedNode(_1: AddRepeatedNodeReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:533:5: 533:20

    bb0: {
        _0 = NodesManagerMessage::AddRepeatedNode(move _1); // scope 0 at cita-network/src/node_manager.rs:533:5: 533:20
        return;                          // scope 0 at cita-network/src/node_manager.rs:533:5: 533:20
    }
}

fn NodesManagerMessage::ConnectedSelf(_1: ConnectedSelfReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:534:5: 534:18

    bb0: {
        _0 = NodesManagerMessage::ConnectedSelf(move _1); // scope 0 at cita-network/src/node_manager.rs:534:5: 534:18
        return;                          // scope 0 at cita-network/src/node_manager.rs:534:5: 534:18
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::ConnectedSelf(_1: ConnectedSelfReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:534:5: 534:18

    bb0: {
        _0 = NodesManagerMessage::ConnectedSelf(move _1); // scope 0 at cita-network/src/node_manager.rs:534:5: 534:18
        return;                          // scope 0 at cita-network/src/node_manager.rs:534:5: 534:18
    }
}

fn NodesManagerMessage::GetPeersInfo(_1: GetPeersInfoReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:535:5: 535:17

    bb0: {
        _0 = NodesManagerMessage::GetPeersInfo(move _1); // scope 0 at cita-network/src/node_manager.rs:535:5: 535:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:535:5: 535:17
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::GetPeersInfo(_1: GetPeersInfoReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:535:5: 535:17

    bb0: {
        _0 = NodesManagerMessage::GetPeersInfo(move _1); // scope 0 at cita-network/src/node_manager.rs:535:5: 535:17
        return;                          // scope 0 at cita-network/src/node_manager.rs:535:5: 535:17
    }
}

fn NodesManagerMessage::ModifiedConfigPeers(_1: ModifiedConfigPeersReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:536:5: 536:24

    bb0: {
        _0 = NodesManagerMessage::ModifiedConfigPeers(move _1); // scope 0 at cita-network/src/node_manager.rs:536:5: 536:24
        return;                          // scope 0 at cita-network/src/node_manager.rs:536:5: 536:24
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::ModifiedConfigPeers(_1: ModifiedConfigPeersReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:536:5: 536:24

    bb0: {
        _0 = NodesManagerMessage::ModifiedConfigPeers(move _1); // scope 0 at cita-network/src/node_manager.rs:536:5: 536:24
        return;                          // scope 0 at cita-network/src/node_manager.rs:536:5: 536:24
    }
}

fn NodesManagerMessage::DealRichStatus(_1: DealRichStatusReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:537:5: 537:19

    bb0: {
        _0 = NodesManagerMessage::DealRichStatus(move _1); // scope 0 at cita-network/src/node_manager.rs:537:5: 537:19
        return;                          // scope 0 at cita-network/src/node_manager.rs:537:5: 537:19
    }
}

// MIR FOR CTFE
fn NodesManagerMessage::DealRichStatus(_1: DealRichStatusReq) -> NodesManagerMessage {
    let mut _0: node_manager::NodesManagerMessage; // return place in scope 0 at cita-network/src/node_manager.rs:537:5: 537:19

    bb0: {
        _0 = NodesManagerMessage::DealRichStatus(move _1); // scope 0 at cita-network/src/node_manager.rs:537:5: 537:19
        return;                          // scope 0 at cita-network/src/node_manager.rs:537:5: 537:19
    }
}
