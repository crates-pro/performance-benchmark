// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const HUGETLB_FLAG_ENCODE_1GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:36: 604:43
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:46: 604:77

    bb0: {
        _1 = CheckedShl(const 30_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:46: 604:77
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:46: 604:77
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:46: 604:77
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:604:1: 604:78
    }
}

const linux_like::LC_COLLATE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:574:28: 574:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:574:38: 574:53

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_COLLATE); // scope 0 at src/unix/linux_like/mod.rs:574:38: 574:53
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_COLLATE) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:574:38: 574:53
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:574:38: 574:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:574:1: 574:54
    }
}

const EPOLLOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1036:21: 1036:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1036:31: 1036:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1036:1: 1036:35
    }
}

const PARODD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:661:19: 661:29

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:661:32: 661:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:661:1: 661:43
    }
}

const MSG_EXCEPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1568:23: 1568:30

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1568:33: 1568:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1568:1: 1568:41
    }
}

const SYS_seccomp: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:396:24: 396:32

    bb0: {
        _0 = const 317_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:396:35: 396:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:396:1: 396:39
    }
}

const POSIX_SPAWN_RESETIDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2053:33: 2053:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2053:43: 2053:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2053:1: 2053:48
    }
}

const NETLINK_CAP_ACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2512:28: 2512:35

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2512:38: 2512:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2512:1: 2512:41
    }
}

const REL_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2994:20: 2994:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:44
        _1 = const REL_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2994:28: 2994:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2994:47: 2994:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2994:1: 2994:49
    }
}

const MON_7: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1103:26: 1103:35

    bb0: {
        _0 = const 131104_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1103:38: 1103:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1103:9: 1103:46
    }
}

const IFNAMSIZ: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/mod.rs:241:29: 241:37

    bb0: {
        _0 = const IF_NAMESIZE;          // scope 0 at src/unix/mod.rs:241:40: 241:51
        return;                          // scope 0 at src/unix/mod.rs:241:9: 241:52
    }
}

const GENL_ID_PMCRAID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:28: 932:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:38: 932:58

    bb0: {
        _1 = CheckedAdd(const linux::NLMSG_MIN_TYPE, const 2_i32); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:38: 932:58
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const linux::NLMSG_MIN_TYPE, const 2_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:38: 932:58
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:38: 932:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:932:1: 932:59
    }
}

const IPPROTO_ESP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:865:24: 865:31

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/mod.rs:865:34: 865:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:865:1: 865:37
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::timex) -> gnu::timex {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::timex; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ARPHRD_SLIP6: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1330:25: 1330:28

    bb0: {
        _0 = const 258_u16;              // scope 0 at src/unix/linux_like/mod.rs:1330:31: 1330:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1330:1: 1330:35
    }
}

const SIGPROF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:510:20: 510:27

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:510:30: 510:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:510:1: 510:33
    }
}

const TCP_REPAIR_WINDOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1000:38: 1000:45

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/mod.rs:1000:48: 1000:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1000:9: 1000:51
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::statvfs64) -> b64::x86_64::statvfs64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::statvfs64; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFLA_PRIORITY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1395:26: 1395:36

    bb0: {
        _0 = const 9_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1395:39: 1395:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1395:1: 1395:41
    }
}

const SYS_fsetxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:269:26: 269:34

    bb0: {
        _0 = const 190_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:269:37: 269:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:269:1: 269:41
    }
}

const BPF_LEN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1912:20: 1912:27

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1912:30: 1912:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1912:1: 1912:35
    }
}

const SO_TIMESTAMPNS_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:100:39: 100:46

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:100:49: 100:51
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:100:9: 100:52
    }
}

const SIOCSIFENCAP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2366:25: 2366:34

    bb0: {
        _0 = const 35110_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2366:37: 2366:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2366:1: 2366:48
    }
}

const NFT_GOTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2829:21: 2829:28

    bb0: {
        _0 = const -4_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2829:31: 2829:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2829:1: 2829:34
    }
}

const LOG_LOCAL2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:265:23: 265:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:265:33: 265:40

    bb0: {
        _1 = CheckedShl(const 18_i32, const 3_i32); // scope 0 at src/unix/mod.rs:265:33: 265:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:265:33: 265:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:265:33: 265:40
        return;                          // scope 0 at src/unix/mod.rs:265:1: 265:41
    }
}

const _SC_T_IOV_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:770:26: 770:33

    bb0: {
        _0 = const 66_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:770:36: 770:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:770:1: 770:39
    }
}

const AF_TIPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:712:20: 712:27

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/mod.rs:712:30: 712:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:712:1: 712:33
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__exit_status) -> __exit_status {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::__exit_status; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_O_EXITKILL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1171:30: 1171:37

    bb0: {
        _0 = const 1048576_i32;          // scope 0 at src/unix/linux_like/mod.rs:1171:40: 1171:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1171:1: 1171:51
    }
}

fn b64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &semid_ds) -> semid_ds {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::semid_ds; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_XBS5_LPBIG_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1252:34: 1252:41

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1252:44: 1252:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1252:1: 1252:48
    }
}

const SYS_uname: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:142:22: 142:30

    bb0: {
        _0 = const 63_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:142:33: 142:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:142:1: 142:36
    }
}

const PR_SET_MM_MAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1749:26: 1749:33

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1749:36: 1749:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1749:1: 1749:39
    }
}

const SO_MAX_PACING_RATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:74:31: 74:38

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:74:41: 74:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:74:1: 74:44
    }
}

const GENL_MAX_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2212:24: 2212:31

    bb0: {
        _0 = const 1023_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2212:34: 2212:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2212:1: 2212:39
    }
}

const ARPD_FLUSH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2648:23: 2648:33

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2648:36: 2648:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2648:1: 2648:41
    }
}

const ETXTBSY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3146:20: 3146:27

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3146:30: 3146:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3146:1: 3146:33
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &arpd_request) -> arpd_request {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::arpd_request; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const HUGETLB_FLAG_ENCODE_32MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:37: 601:44
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:47: 601:78

    bb0: {
        _1 = CheckedShl(const 25_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:47: 601:78
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:47: 601:78
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:47: 601:78
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:601:1: 601:79
    }
}

const linux_like::LC_CTYPE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:571:26: 571:33
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:571:36: 571:49

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_CTYPE); // scope 0 at src/unix/linux_like/mod.rs:571:36: 571:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_CTYPE) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:571:36: 571:49
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:571:36: 571:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:571:1: 571:50
    }
}

const FD_SETSIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1032:23: 1032:28

    bb0: {
        _0 = const 1024_usize;           // scope 0 at src/unix/linux_like/mod.rs:1032:31: 1032:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1032:1: 1032:36
    }
}

const CSTOPB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:658:19: 658:29

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:658:32: 658:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:658:1: 658:43
    }
}

const MSG_STAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1564:21: 1564:28

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1564:31: 1564:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1564:1: 1564:34
    }
}

const SYS_sched_setattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:393:30: 393:38

    bb0: {
        _0 = const 314_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:393:41: 393:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:393:1: 393:45
    }
}

const ETH_P_PHONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2049:25: 2049:32

    bb0: {
        _0 = const 245_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2049:35: 2049:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2049:1: 2049:42
    }
}

const NETLINK_TX_RING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2509:28: 2509:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2509:38: 2509:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2509:1: 2509:40
    }
}

const KEY_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2991:20: 2991:27

    bb0: {
        _0 = const 767_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2991:30: 2991:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2991:1: 2991:36
    }
}

const MON_4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1100:26: 1100:35

    bb0: {
        _0 = const 131101_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1100:38: 1100:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1100:9: 1100:46
    }
}

const MAX_LINKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:927:22: 927:29

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:927:32: 927:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:927:1: 927:35
    }
}

const IPPROTO_FRAGMENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:859:29: 859:36

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/mod.rs:859:39: 859:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:859:1: 859:42
    }
}

const ARPHRD_INFINIBAND: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1326:30: 1326:33

    bb0: {
        _0 = const 32_u16;               // scope 0 at src/unix/linux_like/mod.rs:1326:36: 1326:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1326:1: 1326:39
    }
}

const SIGXCPU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:507:20: 507:27

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:507:30: 507:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:507:1: 507:33
    }
}

const LC_MESSAGES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:566:32: 566:39

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:566:42: 566:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:566:9: 566:44
    }
}

b64::x86_64::statfs64::f_spare::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:129:37: 129:38

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:129:37: 129:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:129:37: 129:38
    }
}

const IFLA_QDISC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1392:23: 1392:33

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1392:36: 1392:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1392:1: 1392:38
    }
}

const SYS_readahead: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:266:26: 266:34

    bb0: {
        _0 = const 187_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:266:37: 266:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:266:1: 266:41
    }
}

const BPF_ABS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1909:20: 1909:27

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1909:30: 1909:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1909:1: 1909:35
    }
}

const SIOCSIFMTU: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2363:23: 2363:32

    bb0: {
        _0 = const 35106_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2363:35: 2363:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2363:1: 2363:46
    }
}

const NFT_CONTINUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2826:25: 2826:32

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2826:35: 2826:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2826:1: 2826:38
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_envelope) -> ff_envelope {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_envelope; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LOG_UUCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:262:21: 262:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:262:31: 262:37

    bb0: {
        _1 = CheckedShl(const 8_i32, const 3_i32); // scope 0 at src/unix/mod.rs:262:31: 262:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:262:31: 262:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:262:31: 262:37
        return;                          // scope 0 at src/unix/mod.rs:262:1: 262:38
    }
}

const _SC_PII_OSI_COTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:767:29: 767:36

    bb0: {
        _0 = const 63_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:767:39: 767:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:767:1: 767:42
    }
}

const AF_WANPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:709:23: 709:30

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/mod.rs:709:33: 709:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:709:1: 709:36
    }
}

gnu::aiocb::__glibc_reserved::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:65:38: 65:40

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:65:38: 65:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:65:38: 65:40
    }
}

const PTRACE_O_TRACEEXIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1168:31: 1168:38

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/mod.rs:1168:41: 1168:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1168:1: 1168:52
    }
}

const _SC_XBS5_ILP32_OFF32: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1249:33: 1249:40

    bb0: {
        _0 = const 125_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1249:43: 1249:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1249:1: 1249:47
    }
}

const SYS_exit: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:139:21: 139:29

    bb0: {
        _0 = const 60_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:139:32: 139:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:139:1: 139:35
    }
}

const PR_SET_MM_ENV_END: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1746:30: 1746:37

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1746:40: 1746:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1746:1: 1746:43
    }
}

const SO_LOCK_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:71:27: 71:34

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:71:37: 71:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:71:1: 71:40
    }
}

const NFQA_SKB_CSUM_NOTVERIFIED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2207:38: 2207:45

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2207:48: 2207:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2207:1: 2207:55
    }
}

const linux::MAX_ADDR_LEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2645:25: 2645:30

    bb0: {
        _0 = const 7_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:2645:33: 2645:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2645:1: 2645:35
    }
}

const ENFILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3143:19: 3143:26

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3143:29: 3143:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3143:1: 3143:32
    }
}

const HUGETLB_FLAG_ENCODE_2MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:36: 598:43
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:46: 598:77

    bb0: {
        _1 = CheckedShl(const 21_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:46: 598:77
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:46: 598:77
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:46: 598:77
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:598:1: 598:78
    }
}

const PROT_EXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:554:22: 554:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:554:32: 554:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:554:1: 554:34
    }
}

const REG_ERPAREN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1108:24: 1108:31

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1108:34: 1108:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1108:1: 1108:37
    }
}

const SS_DISABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1026:23: 1026:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1026:33: 1026:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1026:1: 1026:35
    }
}

const CS6: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:655:16: 655:26

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:655:29: 655:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:655:1: 655:40
    }
}

const IPC_SET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1561:20: 1561:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1561:30: 1561:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1561:1: 1561:32
    }
}

const SYS_process_vm_writev: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:390:34: 390:42

    bb0: {
        _0 = const 311_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:390:45: 390:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:390:1: 390:49
    }
}

const ETH_P_ARCNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2046:25: 2046:32

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2046:35: 2046:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2046:1: 2046:42
    }
}

const NETLINK_BROADCAST_ERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2506:36: 2506:43

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2506:46: 2506:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2506:1: 2506:48
    }
}

const EV_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2988:19: 2988:24
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:42
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:46

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:42
        _1 = const EV_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:42
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:46
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:46
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2988:27: 2988:46
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2988:45: 2988:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2988:1: 2988:47
    }
}

const MON_1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1097:26: 1097:35

    bb0: {
        _0 = const 131098_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1097:38: 1097:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1097:9: 1097:46
    }
}

const IFA_F_NOPREFIXROUTE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:923:32: 923:35

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:923:38: 923:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:923:1: 923:44
    }
}

const IPPROTO_TP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:852:23: 852:30

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/mod.rs:852:33: 852:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:852:1: 852:36
    }
}

const ARPHRD_METRICOM: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1323:28: 1323:31

    bb0: {
        _0 = const 23_u16;               // scope 0 at src/unix/linux_like/mod.rs:1323:34: 1323:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1323:1: 1323:37
    }
}

const SA_NOCLDWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:503:25: 503:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:503:35: 503:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:503:1: 503:46
    }
}

const LC_TIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:563:28: 563:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:563:38: 563:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:563:9: 563:40
    }
}

const IFLA_IFNAME: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1389:24: 1389:34

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1389:37: 1389:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1389:1: 1389:39
    }
}

const SYS_tuxcall: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:263:24: 263:32

    bb0: {
        _0 = const 184_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:263:35: 263:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:263:1: 263:39
    }
}

const BPF_H: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1906:18: 1906:25

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1906:28: 1906:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1906:1: 1906:33
    }
}

const SIOCGIFMEM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2360:23: 2360:32

    bb0: {
        _0 = const 35103_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2360:35: 2360:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2360:1: 2360:46
    }
}

const NFT_REG32_15: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2821:25: 2821:32

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2821:35: 2821:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2821:1: 2821:38
    }
}

const LOG_SYSLOG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:259:23: 259:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:259:33: 259:39

    bb0: {
        _1 = CheckedShl(const 5_i32, const 3_i32); // scope 0 at src/unix/mod.rs:259:33: 259:39
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:259:33: 259:39
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:259:33: 259:39
        return;                          // scope 0 at src/unix/mod.rs:259:1: 259:40
    }
}

const _SC_SELECT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:764:23: 764:30

    bb0: {
        _0 = const 59_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:764:33: 764:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:764:1: 764:36
    }
}

const AF_SNA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:706:19: 706:26

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/mod.rs:706:29: 706:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:706:1: 706:32
    }
}

const PTRACE_O_TRACECLONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1165:32: 1165:39

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:1165:42: 1165:52
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1165:1: 1165:53
    }
}

const _SC_XOPEN_XPG3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1246:27: 1246:34

    bb0: {
        _0 = const 99_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1246:37: 1246:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1246:1: 1246:40
    }
}

const SYS_fork: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:136:21: 136:29

    bb0: {
        _0 = const 57_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:136:32: 136:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:136:1: 136:35
    }
}

const PR_SET_MM_ARG_START: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1743:32: 1743:39

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1743:42: 1743:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1743:1: 1743:44
    }
}

const SCM_WIFI_STATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:68:28: 68:35

    bb0: {
        _0 = const SO_WIFI_STATUS;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:68:38: 68:52
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:68:1: 68:53
    }
}

const NFQA_CFG_F_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2203:27: 2203:34

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2203:37: 2203:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2203:1: 2203:44
    }
}

const RTMSG_DELRULE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2641:26: 2641:29

    bb0: {
        _0 = const 50_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2641:32: 2641:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2641:1: 2641:37
    }
}

const ENOTDIR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3140:20: 3140:27

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3140:30: 3140:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3140:1: 3140:33
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &in6_pktinfo) -> in6_pktinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::in6_pktinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const HUGETLB_FLAG_ENCODE_64KB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:37: 595:44
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:47: 595:78

    bb0: {
        _1 = CheckedShl(const 16_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:47: 595:78
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:47: 595:78
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:47: 595:78
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:595:1: 595:79
    }
}

const PROT_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:551:22: 551:29

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:551:32: 551:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:551:1: 551:34
    }
}

const REG_STARTEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1104:25: 1104:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1104:35: 1104:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1104:1: 1104:37
    }
}

const LOCK_NB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1022:20: 1022:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1022:30: 1022:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1022:1: 1022:32
    }
}

const IXOFF: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:652:18: 652:28

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:652:31: 652:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:652:1: 652:42
    }
}

const IPC_EXCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1557:21: 1557:28

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1557:31: 1557:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1557:1: 1557:38
    }
}

const SYS_setns: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:387:22: 387:30

    bb0: {
        _0 = const 308_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:387:33: 387:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:387:1: 387:37
    }
}

const ETH_P_IRDA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2043:23: 2043:30

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2043:33: 2043:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2043:1: 2043:40
    }
}

const NETLINK_ADD_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2503:35: 2503:42

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2503:45: 2503:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2503:1: 2503:47
    }
}

const INPUT_PROP_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2985:27: 2985:34

    bb0: {
        _0 = const 31_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2985:37: 2985:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2985:1: 2985:42
    }
}

const ABMON_10: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1093:29: 1093:38

    bb0: {
        _0 = const 131095_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1093:41: 1093:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1093:9: 1093:49
    }
}

const FDPIC_FUNCPTRS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:917:27: 917:34

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:917:37: 917:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:917:1: 917:47
    }
}

const IPPROTO_EGP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:845:24: 845:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:845:34: 845:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:845:1: 845:36
    }
}

const ARPHRD_APPLETLK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1320:28: 1320:31

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/mod.rs:1320:34: 1320:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1320:1: 1320:36
    }
}

const SOCK_DGRAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:499:23: 499:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:499:33: 499:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:499:1: 499:35
    }
}

const ULONG_SIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:445:27: 445:32

    bb0: {
        _0 = const 64_usize;             // scope 0 at src/unix/linux_like/mod.rs:445:35: 445:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:445:9: 445:38
    }
}

const IFLA_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1386:24: 1386:34

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1386:37: 1386:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1386:1: 1386:39
    }
}

const SYS_getpmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:260:24: 260:32

    bb0: {
        _0 = const 181_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:260:35: 260:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:260:1: 260:39
    }
}

const BPF_RET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1903:20: 1903:27

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1903:30: 1903:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1903:1: 1903:35
    }
}

const SIOCSIFNETMASK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2357:27: 2357:36

    bb0: {
        _0 = const 35100_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2357:39: 2357:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2357:1: 2357:50
    }
}

const NFT_REG32_12: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2818:25: 2818:32

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2818:35: 2818:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2818:1: 2818:38
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_trigger) -> ff_trigger {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_trigger; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LOG_MAIL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:256:21: 256:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:256:31: 256:37

    bb0: {
        _1 = CheckedShl(const 2_i32, const 3_i32); // scope 0 at src/unix/mod.rs:256:31: 256:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:256:31: 256:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:256:31: 256:37
        return;                          // scope 0 at src/unix/mod.rs:256:1: 256:38
    }
}

const _SC_PII_INTERNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:761:29: 761:36

    bb0: {
        _0 = const 56_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:761:39: 761:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:761:1: 761:42
    }
}

const AF_ECONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:703:22: 703:29

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/mod.rs:703:32: 703:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:703:1: 703:35
    }
}

const PTRACE_O_TRACESYSGOOD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1162:34: 1162:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1162:44: 1162:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1162:1: 1162:55
    }
}

const SECCOMP_SET_MODE_FILTER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:783:36: 783:44

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:783:47: 783:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:783:1: 783:49
    }
}

const _SC_2_CHAR_TERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1243:28: 1243:35

    bb0: {
        _0 = const 95_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1243:38: 1243:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1243:1: 1243:41
    }
}

const SYS_setsockopt: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:133:27: 133:35

    bb0: {
        _0 = const 54_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:133:38: 133:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:133:1: 133:41
    }
}

const PR_SET_MM_START_STACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1740:34: 1740:41

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1740:44: 1740:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1740:1: 1740:46
    }
}

const SO_DOMAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:65:22: 65:29

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:65:32: 65:34
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:65:1: 65:35
    }
}

const NFQA_CFG_F_GSO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2200:27: 2200:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2200:37: 2200:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2200:1: 2200:44
    }
}

const RTMSG_NEWROUTE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2638:27: 2638:30

    bb0: {
        _0 = const 33_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2638:33: 2638:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2638:1: 2638:38
    }
}

const EEXIST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3137:19: 3137:26

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3137:29: 3137:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3137:1: 3137:32
    }
}

const SIGPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:547:20: 547:27

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/mod.rs:547:30: 547:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:547:1: 547:33
    }
}

const TIME_BAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1080:21: 1080:28

    bb0: {
        _0 = const TIME_ERROR;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1080:31: 1080:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1080:1: 1080:42
    }
}

const SHUT_RDWR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1018:22: 1018:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1018:32: 1018:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1018:1: 1018:34
    }
}

const VDISCARD: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:649:21: 649:26

    bb0: {
        _0 = const 13_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:649:29: 649:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:649:1: 649:32
    }
}

const IPPROTO_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1551:24: 1551:31

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1551:34: 1551:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1551:1: 1551:38
    }
}

const SYS_clock_adjtime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:384:30: 384:38

    bb0: {
        _0 = const 305_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:384:41: 384:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:384:1: 384:45
    }
}

const ETH_P_TR_802_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2040:27: 2040:34

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2040:37: 2040:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2040:1: 2040:44
    }
}

const NLM_F_EXCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2499:23: 2499:30

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2499:33: 2499:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2499:1: 2499:39
    }
}

const NFT_NG_RANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2978:26: 2978:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2978:36: 2978:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2978:1: 2978:38
    }
}

const ABMON_7: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1090:28: 1090:37

    bb0: {
        _0 = const 131092_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1090:40: 1090:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1090:9: 1090:48
    }
}

const NDA_LINK_NETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:912:29: 912:39

    bb0: {
        _0 = const 10_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:912:42: 912:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:912:1: 912:45
    }
}

const IPPROTO_HOPOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:837:28: 837:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:837:38: 837:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:837:1: 837:40
    }
}

const ARPHRD_CHAOS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1317:25: 1317:28

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/mod.rs:1317:31: 1317:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1317:1: 1317:33
    }
}

const EHWPOISON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:495:22: 495:29

    bb0: {
        _0 = const 133_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:495:32: 495:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:495:1: 495:36
    }
}

const IFA_F_DEPRECATED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1381:29: 1381:32

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1381:35: 1381:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1381:1: 1381:40
    }
}

const SYS_query_module: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:257:29: 257:37

    bb0: {
        _0 = const 178_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:257:40: 257:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:257:1: 257:44
    }
}

const BPF_STX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1900:20: 1900:27

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1900:30: 1900:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1900:1: 1900:35
    }
}

fn generic::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &termios2) -> termios2 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::arch::generic::termios2; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SIOCGIFBRDADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2354:27: 2354:36

    bb0: {
        _0 = const 35097_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2354:39: 2354:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2354:1: 2354:50
    }
}

const NFT_REG32_09: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2815:25: 2815:32

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2815:35: 2815:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2815:1: 2815:38
    }
}

const LOG_DEBUG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:252:22: 252:29

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/mod.rs:252:32: 252:33
        return;                          // scope 0 at src/unix/mod.rs:252:1: 252:34
    }
}

const _SC_PII: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:758:20: 758:27

    bb0: {
        _0 = const 53_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:758:30: 758:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:758:1: 758:33
    }
}

const AF_ROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:700:21: 700:28

    bb0: {
        _0 = const AF_NETLINK;           // scope 0 at src/unix/linux_like/mod.rs:700:31: 700:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:700:1: 700:42
    }
}

const WHOLE_SECONDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1157:26: 1157:33

    bb0: {
        _0 = const 33554432_i32;         // scope 0 at src/unix/linux_like/mod.rs:1157:36: 1157:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1157:1: 1157:46
    }
}

const REG_OLDMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:779:24: 779:31

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:779:34: 779:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:779:1: 779:37
    }
}

const _SC_XOPEN_CRYPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1240:28: 1240:35

    bb0: {
        _0 = const 92_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1240:38: 1240:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1240:1: 1240:41
    }
}

const SYS_getsockname: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:130:28: 130:36

    bb0: {
        _0 = const 51_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:130:39: 130:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:130:1: 130:42
    }
}

const PR_SET_MM_END_CODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1737:31: 1737:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1737:41: 1737:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1737:1: 1737:43
    }
}

const SO_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:61:20: 61:27

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:61:30: 61:32
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:61:1: 61:33
    }
}

const NFQA_CFG_FLAGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2196:27: 2196:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2196:37: 2196:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2196:1: 2196:39
    }
}

const RTMSG_OVERRUN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2635:26: 2635:29

    bb0: {
        _0 = const linux::NLMSG_OVERRUN as u32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2635:32: 2635:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2635:1: 2635:55
    }
}

const EFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3134:19: 3134:26

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3134:29: 3134:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3134:1: 3134:32
    }
}

const SIGFPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:544:19: 544:26

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:544:29: 544:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:544:1: 544:31
    }
}

const TIME_OOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1077:21: 1077:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1077:31: 1077:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1077:1: 1077:33
    }
}

const SO_DEBUG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1014:21: 1014:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1014:31: 1014:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1014:1: 1014:33
    }
}

__c_anonymous_ptrace_syscall_info_seccomp::args::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:340:29: 340:30

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:340:29: 340:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:340:29: 340:30
    }
}

const VSUSP: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:646:18: 646:23

    bb0: {
        _0 = const 10_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:646:26: 646:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:646:1: 646:29
    }
}

const SCHED_RESET_ON_FORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1536:32: 1536:39

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1536:42: 1536:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1536:1: 1536:53
    }
}

const SYS_prlimit64: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:381:26: 381:34

    bb0: {
        _0 = const 302_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:381:37: 381:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:381:1: 381:41
    }
}

const ETH_P_LOCALTALK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2037:28: 2037:35

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2037:38: 2037:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2037:1: 2037:45
    }
}

const NLM_F_ATOMIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2495:25: 2495:32

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2495:35: 2495:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2495:1: 2495:41
    }
}

const NFT_TRACETYPE_RETURN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2974:33: 2974:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2974:43: 2974:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2974:1: 2974:45
    }
}

Elf64_Ehdr::e_ident::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:362:34: 362:36

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:362:34: 362:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:362:34: 362:36
    }
}

const ABMON_4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1087:28: 1087:37

    bb0: {
        _0 = const 131089_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1087:40: 1087:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1087:9: 1087:48
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &servent) -> servent {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::servent;           // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const NTF_EXT_LEARNED: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:908:28: 908:30

    bb0: {
        _0 = const 16_u8;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:908:33: 908:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:908:1: 908:38
    }
}

const IP_PMTUDISC_PROBE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:831:30: 831:37

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:831:40: 831:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:831:1: 831:42
    }
}

const ARPHRD_EETHER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1314:26: 1314:29

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/mod.rs:1314:32: 1314:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1314:1: 1314:34
    }
}

const EKEYREJECTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:492:25: 492:32

    bb0: {
        _0 = const 129_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:492:35: 492:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:492:1: 492:39
    }
}

const IFA_F_OPTIMISTIC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1378:29: 1378:32

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1378:35: 1378:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1378:1: 1378:40
    }
}

const SYS_init_module: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:254:28: 254:36

    bb0: {
        _0 = const 175_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:254:39: 254:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:254:1: 254:43
    }
}

const BPF_LD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1897:19: 1897:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1897:29: 1897:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1897:1: 1897:34
    }
}

const SIOCSIFADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2351:24: 2351:33

    bb0: {
        _0 = const 35094_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2351:36: 2351:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2351:1: 2351:47
    }
}

const NFT_REG32_06: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2812:25: 2812:32

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2812:35: 2812:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2812:1: 2812:38
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_replay) -> ff_replay {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_replay; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LOG_WARNING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:249:24: 249:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/mod.rs:249:34: 249:35
        return;                          // scope 0 at src/unix/mod.rs:249:1: 249:36
    }
}

const POSIX_MADV_DONTNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:755:32: 755:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:755:42: 755:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:755:1: 755:44
    }
}

const AF_SECURITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:697:24: 697:31

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/mod.rs:697:34: 697:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:697:1: 697:37
    }
}

const READ_IMPLIES_EXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1154:30: 1154:37

    bb0: {
        _0 = const 4194304_i32;          // scope 0 at src/unix/linux_like/mod.rs:1154:40: 1154:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1154:1: 1154:50
    }
}

fn b64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::msqid_ds) -> b64::msqid_ds {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::msqid_ds; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const REG_CSGSFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:776:23: 776:30

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:776:33: 776:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:776:1: 776:36
    }
}

const _SC_XOPEN_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1237:30: 1237:37

    bb0: {
        _0 = const 89_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1237:40: 1237:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1237:1: 1237:43
    }
}

const SYS_shutdown: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:127:25: 127:33

    bb0: {
        _0 = const 48_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:127:36: 127:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:127:1: 127:39
    }
}

const PR_MCE_KILL_GET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1733:28: 1733:35

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1733:38: 1733:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1733:1: 1733:41
    }
}

const SO_RCVBUFFORCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:57:27: 57:34

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:57:37: 57:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:57:1: 57:40
    }
}

const NFQA_CFG_PARAMS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2193:28: 2193:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2193:38: 2193:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2193:1: 2193:40
    }
}

const RT_TABLE_DEFAULT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2631:29: 2631:38

    bb0: {
        _0 = const 253_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2631:41: 2631:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2631:1: 2631:45
    }
}

const EAGAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3131:19: 3131:26

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3131:29: 3131:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3131:1: 3131:32
    }
}

const SIGQUIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:541:20: 541:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:541:30: 541:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:541:1: 541:32
    }
}

const TIME_OK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1074:20: 1074:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1074:30: 1074:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1074:1: 1074:32
    }
}

const TCP_CC_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:993:24: 993:31

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/mod.rs:993:34: 993:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:993:1: 993:37
    }
}

const VT1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:643:16: 643:26

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:643:29: 643:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:643:1: 643:40
    }
}

const SCHED_RR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1532:21: 1532:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1532:31: 1532:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1532:1: 1532:33
    }
}

const SYS_recvmmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:378:25: 378:33

    bb0: {
        _0 = const 299_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:378:36: 378:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:378:1: 378:40
    }
}

const ETH_P_DDCMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2034:24: 2034:31

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2034:34: 2034:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2034:1: 2034:41
    }
}

const NLM_F_DUMP_FILTERED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2491:32: 2491:39

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2491:42: 2491:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2491:1: 2491:45
    }
}

const NFT_NAT_DNAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2970:25: 2970:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2970:35: 2970:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2970:1: 2970:37
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf64_Ehdr) -> Elf64_Ehdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf64_Ehdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ABMON_1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1084:28: 1084:37

    bb0: {
        _0 = const 131086_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1084:40: 1084:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1084:9: 1084:48
    }
}

const RTA_PAD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:903:20: 903:30

    bb0: {
        _0 = const 24_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:903:33: 903:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:903:1: 903:36
    }
}

const IP_PMTUDISC_DONT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:828:29: 828:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:828:39: 828:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:828:1: 828:41
    }
}

const ATF_DONTPUB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1310:24: 1310:31

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/mod.rs:1310:34: 1310:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1310:1: 1310:39
    }
}

const ENOKEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:489:19: 489:26

    bb0: {
        _0 = const 126_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:489:29: 489:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:489:1: 489:33
    }
}

const IFA_F_SECONDARY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1375:28: 1375:31

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1375:34: 1375:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1375:1: 1375:39
    }
}

const SYS_iopl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:251:21: 251:29

    bb0: {
        _0 = const 172_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:251:32: 251:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:251:1: 251:36
    }
}

const BPF_LL_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1892:23: 1892:30

    bb0: {
        _0 = const SKF_LL_OFF;           // scope 0 at src/unix/linux_like/linux/mod.rs:1892:33: 1892:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1892:1: 1892:44
    }
}

const BOTHER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:219:19: 219:28

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:219:31: 219:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:219:1: 219:40
    }
}

const SIOCGIFFLAGS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2348:25: 2348:34

    bb0: {
        _0 = const 35091_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2348:37: 2348:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2348:1: 2348:48
    }
}

const NFT_REG32_03: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2809:25: 2809:32

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2809:35: 2809:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2809:1: 2809:38
    }
}

const LOG_ALERT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:246:22: 246:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/mod.rs:246:32: 246:33
        return;                          // scope 0 at src/unix/mod.rs:246:1: 246:34
    }
}

const TMP_MAX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:752:20: 752:28

    bb0: {
        _0 = const 238328_u32;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:752:31: 752:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:752:1: 752:38
    }
}

const AF_ROSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:694:20: 694:27

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:694:30: 694:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:694:1: 694:33
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::aiocb) -> gnu::aiocb {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::aiocb; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ADDR_NO_RANDOMIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1151:30: 1151:37

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/mod.rs:1151:40: 1151:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1151:1: 1151:50
    }
}

b64::sysinfo::_f::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:51:28: 51:29

    bb0: {
        _0 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:51:28: 51:29
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:51:28: 51:29
    }
}

const REG_RSP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:773:20: 773:27

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:773:30: 773:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:773:1: 773:33
    }
}

const _SC_AVPHYS_PAGES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1234:29: 1234:36

    bb0: {
        _0 = const 86_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1234:39: 1234:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1234:1: 1234:42
    }
}

const SYS_recvfrom: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:124:25: 124:33

    bb0: {
        _0 = const 45_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:124:36: 124:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:124:1: 124:39
    }
}

const PR_MCE_KILL_LATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1729:29: 1729:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1729:39: 1729:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1729:1: 1729:41
    }
}

const SO_ACCEPTCONN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:54:26: 54:33

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:54:36: 54:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:54:1: 54:39
    }
}

const NFQNL_COPY_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2189:30: 2189:37

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2189:40: 2189:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2189:1: 2189:42
    }
}

const RT_SCOPE_NOWHERE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2627:29: 2627:38

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/linux/mod.rs:2627:41: 2627:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2627:1: 2627:45
    }
}

const ENOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3128:20: 3128:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3128:30: 3128:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3128:1: 3128:32
    }
}

const STDERR_FILENO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:538:26: 538:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:538:36: 538:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:538:1: 538:38
    }
}

const STA_CLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1064:20: 1064:27

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1064:30: 1064:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1064:1: 1064:37
    }
}

const TCP_FASTOPEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:990:25: 990:32

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/mod.rs:990:35: 990:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:990:1: 990:38
    }
}

const CR3: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:640:16: 640:26

    bb0: {
        _0 = const 1536_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:640:29: 640:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:640:1: 640:40
    }
}

const RENAME_WHITEOUT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1528:28: 1528:36

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1528:39: 1528:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1528:1: 1528:41
    }
}

const SYS_pwritev: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:375:24: 375:32

    bb0: {
        _0 = const 296_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:375:35: 375:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:375:1: 375:39
    }
}

const ETH_P_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2031:22: 2031:29

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2031:32: 2031:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2031:1: 2031:39
    }
}

const NLM_F_ACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2488:22: 2488:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2488:32: 2488:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2488:1: 2488:34
    }
}

const NFT_REJECT_ICMPX_HOST_UNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2966:42: 2966:49

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2966:52: 2966:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2966:1: 2966:54
    }
}

const DAY_5: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1080:26: 1080:35

    bb0: {
        _0 = const 131083_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1080:38: 1080:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1080:9: 1080:46
    }
}

const RTA_ENCAP_TYPE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:900:27: 900:37

    bb0: {
        _0 = const 21_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:900:40: 900:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:900:1: 900:43
    }
}

const IP_UNICAST_IF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:823:26: 823:33

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/mod.rs:823:36: 823:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:823:1: 823:39
    }
}

const ARPOP_InREPLY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1306:26: 1306:29

    bb0: {
        _0 = const 9_u16;                // scope 0 at src/unix/linux_like/mod.rs:1306:32: 1306:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1306:1: 1306:34
    }
}

const ENOMEDIUM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:486:22: 486:29

    bb0: {
        _0 = const 123_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:486:32: 486:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:486:1: 486:36
    }
}

const IFA_ANYCAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1371:24: 1371:34

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1371:37: 1371:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1371:1: 1371:39
    }
}

const SYS_reboot: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:248:23: 248:31

    bb0: {
        _0 = const 169_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:248:34: 248:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:248:1: 248:38
    }
}

const SKF_NET_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1889:24: 1889:31

    bb0: {
        _0 = const -1048576_i32;         // scope 0 at src/unix/linux_like/linux/mod.rs:1889:34: 1889:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1889:1: 1889:44
    }
}

const TIOCM_RNG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:215:22: 215:29

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:215:32: 215:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:215:1: 215:38
    }
}

const SIOCGIFNAME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2345:24: 2345:33

    bb0: {
        _0 = const 35088_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2345:36: 2345:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2345:1: 2345:47
    }
}

const NFT_REG32_00: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2806:25: 2806:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2806:35: 2806:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2806:1: 2806:37
    }
}

const S_ISGID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:234:20: 234:28

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/mod.rs:234:31: 234:36
        return;                          // scope 0 at src/unix/mod.rs:234:1: 234:37
    }
}

const DCCP_SERVICE_LIST_MAX_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:747:38: 747:45

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:747:48: 747:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:747:1: 747:51
    }
}

const AF_ATMPVC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:691:22: 691:29

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:691:32: 691:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:691:1: 691:34
    }
}

gnu::statx_timestamp::__statx_timestamp_pad1::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:47:43: 47:44

    bb0: {
        _0 = const 1_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:47:43: 47:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:47:43: 47:44
    }
}

const WEXITED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1146:20: 1146:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1146:30: 1146:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1146:1: 1146:41
    }
}

const REG_RDX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:770:20: 770:27

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:770:30: 770:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:770:1: 770:33
    }
}

const _SC_NPROCESSORS_CONF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1231:33: 1231:40

    bb0: {
        _0 = const 83_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1231:43: 1231:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1231:1: 1231:46
    }
}

const SYS_connect: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:121:24: 121:32

    bb0: {
        _0 = const 42_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:121:35: 121:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:121:1: 121:38
    }
}

const PR_MCE_KILL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1725:24: 1725:31

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1725:34: 1725:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1725:1: 1725:37
    }
}

const SO_GET_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:50:26: 50:33

    bb0: {
        _0 = const SO_ATTACH_FILTER;     // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:50:36: 50:52
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:50:1: 50:53
    }
}

const NFQNL_CFG_CMD_PF_UNBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2185:36: 2185:43

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2185:46: 2185:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2185:1: 2185:48
    }
}

const RT_SCOPE_SITE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2624:26: 2624:35

    bb0: {
        _0 = const 200_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2624:38: 2624:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2624:1: 2624:42
    }
}

const EIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3125:16: 3125:23

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3125:26: 3125:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3125:1: 3125:28
    }
}

const X_OK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:535:17: 535:24

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:535:27: 535:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:535:1: 535:29
    }
}

const STA_CLOCKERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1061:25: 1061:32

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1061:35: 1061:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1061:1: 1061:42
    }
}

const TCP_REPAIR_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:987:29: 987:36

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/mod.rs:987:39: 987:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:987:1: 987:42
    }
}

const TAB3: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:637:17: 637:27

    bb0: {
        _0 = const 6144_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:637:30: 637:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:637:1: 637:41
    }
}

user::u_comm::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:226:32: 226:34

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:226:32: 226:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:226:32: 226:34
    }
}

const linux::__SIZEOF_PTHREAD_COND_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1524:36: 1524:41

    bb0: {
        _0 = const 48_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:1524:44: 1524:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1524:1: 1524:47
    }
}

const SYS_pipe2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:372:22: 372:30

    bb0: {
        _0 = const 293_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:372:33: 372:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:372:1: 372:37
    }
}

const ETH_P_802_3_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2026:28: 2026:35

    bb0: {
        _0 = const 1536_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2026:38: 2026:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2026:1: 2026:45
    }
}

const NETLINK_INET_DIAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2484:30: 2484:37

    bb0: {
        _0 = const NETLINK_SOCK_DIAG;    // scope 0 at src/unix/linux_like/linux/mod.rs:2484:40: 2484:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2484:1: 2484:58
    }
}

const NFT_REJECT_ICMPX_UNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2962:37: 2962:44

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2962:47: 2962:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2962:1: 2962:49
    }
}

const DAY_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1077:26: 1077:35

    bb0: {
        _0 = const 131080_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1077:38: 1077:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1077:9: 1077:46
    }
}

const RTA_VIA: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:897:20: 897:30

    bb0: {
        _0 = const 18_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:897:33: 897:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:897:1: 897:36
    }
}

const IP_DROP_SOURCE_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:820:38: 820:45

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/mod.rs:820:48: 820:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:820:1: 820:51
    }
}

const ARPOP_RREQUEST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1303:27: 1303:30

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/mod.rs:1303:33: 1303:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1303:1: 1303:35
    }
}

const EINPROGRESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:483:24: 483:31

    bb0: {
        _0 = const 115_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:483:34: 483:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:483:1: 483:38
    }
}

linux_like::utsname::version::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:245:33: 245:35

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:245:33: 245:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:245:33: 245:35
    }
}

const IFA_LOCAL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1368:22: 1368:32

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1368:35: 1368:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1368:1: 1368:37
    }
}

const SYS_umount2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:245:24: 245:32

    bb0: {
        _0 = const 166_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:245:35: 245:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:245:1: 245:39
    }
}

const SKF_AD_RANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1886:26: 1886:33

    bb0: {
        _0 = const 56_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1886:36: 1886:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1886:1: 1886:39
    }
}

const TIOCM_CTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:212:22: 212:29

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:212:32: 212:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:212:1: 212:38
    }
}

const IP6T_SO_ORIGINAL_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2341:33: 2341:40

    bb0: {
        _0 = const 80_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2341:43: 2341:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2341:1: 2341:46
    }
}

const NFT_REG_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2803:22: 2803:29

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2803:32: 2803:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2803:1: 2803:34
    }
}

const GRPQUOTA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:229:21: 229:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/mod.rs:229:31: 229:32
        return;                          // scope 0 at src/unix/mod.rs:229:1: 229:33
    }
}

const DCCP_SOCKOPT_QPOLICY_TXQLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:742:40: 742:47

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:742:50: 742:52
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:742:1: 742:53
    }
}

const AF_APPLETALK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:688:25: 688:32

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:688:35: 688:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:688:1: 688:37
    }
}

const WNOHANG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1143:20: 1143:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1143:30: 1143:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1143:1: 1143:41
    }
}

const REG_RSI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:767:20: 767:27

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:767:30: 767:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:767:1: 767:32
    }
}

const _SC_THREAD_PRIO_INHERIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1228:36: 1228:43

    bb0: {
        _0 = const 80_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1228:46: 1228:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1228:1: 1228:49
    }
}

const SYS_getpid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:118:23: 118:31

    bb0: {
        _0 = const 39_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:118:34: 118:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:118:1: 118:37
    }
}

const PR_GET_TIMERSLACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1720:30: 1720:37

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1720:40: 1720:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1720:1: 1720:43
    }
}

const SO_BINDTODEVICE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:47:28: 47:35

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:47:38: 47:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:47:1: 47:41
    }
}

const NFQNL_CFG_CMD_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2182:31: 2182:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2182:41: 2182:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2182:1: 2182:43
    }
}

const RTPROT_BOOT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2620:24: 2620:33

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2620:36: 2620:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2620:1: 2620:38
    }
}

const ENOENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3122:19: 3122:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3122:29: 3122:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3122:1: 3122:31
    }
}

const F_OK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:532:17: 532:24

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:532:27: 532:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:532:1: 532:29
    }
}

const STA_PPSJITTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1058:26: 1058:33

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1058:36: 1058:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1058:1: 1058:43
    }
}

const TCP_THIN_DUPACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:984:28: 984:35

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:984:38: 984:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:984:1: 984:41
    }
}

const CBAUD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:634:18: 634:28

    bb0: {
        _0 = const 4111_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:634:31: 634:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:634:1: 634:41
    }
}

const PTHREAD_MUTEX_ROBUST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1521:33: 1521:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1521:43: 1521:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1521:1: 1521:45
    }
}

const SYS_eventfd2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:369:25: 369:33

    bb0: {
        _0 = const 290_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:369:36: 369:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:369:1: 369:40
    }
}

const ETH_P_QINQ3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2022:24: 2022:31

    bb0: {
        _0 = const 37632_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2022:34: 2022:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2022:1: 2022:41
    }
}

const NETLINK_ECRYPTFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2481:29: 2481:36

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2481:39: 2481:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2481:1: 2481:42
    }
}

const NFT_QUOTA_F_INV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2958:28: 2958:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2958:38: 2958:44

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2958:38: 2958:44
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2958:38: 2958:44
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2958:38: 2958:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2958:1: 2958:45
    }
}

const ABDAY_6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1073:28: 1073:37

    bb0: {
        _0 = const 131077_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1073:40: 1073:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1073:9: 1073:48
    }
}

const RTM_NEWCACHEREPORT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:892:31: 892:34

    bb0: {
        _0 = const 96_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:892:37: 892:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:892:1: 892:40
    }
}

const IP_UNBLOCK_SOURCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:817:30: 817:37

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/mod.rs:817:40: 817:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:817:1: 817:43
    }
}

const IPOPT_TS_TSONLY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1299:28: 1299:30

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1299:33: 1299:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1299:1: 1299:35
    }
}

const EHOSTDOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:480:22: 480:29

    bb0: {
        _0 = const 112_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:480:32: 480:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:480:1: 480:36
    }
}

const IFF_ECHO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1363:21: 1363:28

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1363:31: 1363:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1363:1: 1363:39
    }
}

const SYS_acct: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:242:21: 242:29

    bb0: {
        _0 = const 163_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:242:32: 242:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:242:1: 242:36
    }
}

const SKF_AD_VLAN_TAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1883:28: 1883:35

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1883:38: 1883:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1883:1: 1883:41
    }
}

const TIOCM_RTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:209:22: 209:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:209:32: 209:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:209:1: 209:38
    }
}

const NF_IP6_PRI_SELINUX_LAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2336:36: 2336:43

    bb0: {
        _0 = const 225_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2336:46: 2336:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2336:1: 2336:50
    }
}

const NFT_REG_VERDICT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2800:28: 2800:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2800:38: 2800:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2800:1: 2800:40
    }
}

const DT_LNK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:219:19: 219:21

    bb0: {
        _0 = const 10_u8;                // scope 0 at src/unix/mod.rs:219:24: 219:26
        return;                          // scope 0 at src/unix/mod.rs:219:1: 219:27
    }
}

const DCCP_SOCKOPT_TX_CCID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:739:33: 739:40

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:739:43: 739:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:739:1: 739:46
    }
}

const AF_INET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:685:20: 685:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:685:30: 685:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:685:1: 685:32
    }
}

const CLONE_NEWPID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1139:25: 1139:32

    bb0: {
        _0 = const 536870912_i32;        // scope 0 at src/unix/linux_like/mod.rs:1139:35: 1139:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1139:1: 1139:46
    }
}

const REG_R14: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:764:20: 764:27

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:764:30: 764:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:764:1: 764:32
    }
}

const _SC_THREAD_ATTR_STACKADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1225:38: 1225:45

    bb0: {
        _0 = const 77_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1225:48: 1225:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1225:1: 1225:51
    }
}

const SYS_getitimer: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:115:26: 115:34

    bb0: {
        _0 = const 36_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:115:37: 115:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:115:1: 115:40
    }
}

const PR_GET_SECUREBITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1716:30: 1716:37

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1716:40: 1716:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1716:1: 1716:43
    }
}

const SO_SECURITY_AUTHENTICATION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:44:39: 44:46

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:44:49: 44:51
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:44:1: 44:52
    }
}

const NFQA_GID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2166:21: 2166:28

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2166:31: 2166:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2166:1: 2166:34
    }
}

const RTPROT_UNSPEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2617:26: 2617:35

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2617:38: 2617:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2617:1: 2617:40
    }
}

const SO_EE_ORIGIN_TXSTATUS: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3117:34: 3117:36

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3117:39: 3117:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3117:1: 3117:41
    }
}

const S_IXOTH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:529:20: 529:28

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:529:31: 529:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:529:1: 529:33
    }
}

const STA_UNSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1055:23: 1055:30

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1055:33: 1055:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1055:1: 1055:40
    }
}

const TCP_CONGESTION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:975:27: 975:34

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/mod.rs:975:37: 975:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:975:1: 975:40
    }
}

const MCL_FUTURE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:630:23: 630:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:630:33: 630:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:630:1: 630:40
    }
}

const PTHREAD_MUTEX_ERRORCHECK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1518:37: 1518:44

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1518:47: 1518:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1518:1: 1518:49
    }
}

const SYS_timerfd_gettime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:366:32: 366:40

    bb0: {
        _0 = const 287_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:366:43: 366:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:366:1: 366:47
    }
}

const ETH_P_LOOPBACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2019:27: 2019:34

    bb0: {
        _0 = const 36864_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2019:37: 2019:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2019:1: 2019:44
    }
}

const NETLINK_KOBJECT_UEVENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2478:35: 2478:42

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2478:45: 2478:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2478:1: 2478:48
    }
}

const NFT_QUEUE_FLAG_BYPASS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2954:34: 2954:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2954:44: 2954:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2954:1: 2954:49
    }
}

const ABDAY_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1070:28: 1070:37

    bb0: {
        _0 = const 131074_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1070:40: 1070:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1070:9: 1070:48
    }
}

const RTM_DELNETCONF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:889:27: 889:30

    bb0: {
        _0 = const 81_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:889:33: 889:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:889:1: 889:36
    }
}

const IP_MULTICAST_LOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:814:30: 814:37

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/mod.rs:814:40: 814:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:814:1: 814:43
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nl_mmap_hdr) -> nl_mmap_hdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::nl_mmap_hdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPOPT_NOP: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1296:22: 1296:24

    bb0: {
        _0 = const IPOPT_NOOP;           // scope 0 at src/unix/linux_like/mod.rs:1296:27: 1296:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1296:1: 1296:38
    }
}

const ETOOMANYREFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:477:25: 477:32

    bb0: {
        _0 = const 109_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:477:35: 477:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:477:1: 477:39
    }
}

linux_like::utsname::sysname::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:242:33: 242:35

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:242:33: 242:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:242:33: 242:35
    }
}

const F_SEAL_FUTURE_WRITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1359:32: 1359:39

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1359:42: 1359:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1359:1: 1359:49
    }
}

const SYS_setrlimit: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:239:26: 239:34

    bb0: {
        _0 = const 160_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:239:37: 239:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:239:1: 239:41
    }
}

const SKF_AD_RXHASH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1880:26: 1880:33

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1880:36: 1880:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1880:1: 1880:39
    }
}

const BLKPBSZGET: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:196:23: 196:30

    bb0: {
        _0 = const 4731_u64;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:196:33: 196:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:196:1: 196:40
    }
}

const NF_IP6_PRI_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2333:30: 2333:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2333:40: 2333:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2333:1: 2333:42
    }
}

const NFT_SET_MAXNAMELEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2796:31: 2796:38

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2796:41: 2796:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2796:1: 2796:45
    }
}

const DT_DIR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:216:19: 216:21

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/mod.rs:216:24: 216:25
        return;                          // scope 0 at src/unix/mod.rs:216:1: 216:26
    }
}

const DCCP_SOCKOPT_RECV_CSCOV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:736:36: 736:43

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:736:46: 736:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:736:1: 736:49
    }
}

const AF_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:682:22: 682:29

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:682:32: 682:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:682:1: 682:34
    }
}

const CLONE_NEWUTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1136:25: 1136:32

    bb0: {
        _0 = const 67108864_i32;         // scope 0 at src/unix/linux_like/mod.rs:1136:35: 1136:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1136:1: 1136:46
    }
}

const REG_R11: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:761:20: 761:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:761:30: 761:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:761:1: 761:32
    }
}

const _SC_THREAD_KEYS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1222:32: 1222:39

    bb0: {
        _0 = const 74_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1222:42: 1222:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1222:1: 1222:45
    }
}

const SYS_dup2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:112:21: 112:29

    bb0: {
        _0 = const 33_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:112:32: 112:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:112:1: 112:35
    }
}

const PR_SET_TSC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1712:23: 1712:30

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1712:33: 1712:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1712:1: 1712:36
    }
}

const SO_SNDLOWAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:39:24: 39:31

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:39:34: 39:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:39:1: 39:37
    }
}

const NFQA_SKB_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2163:26: 2163:33

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2163:36: 2163:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2163:1: 2163:39
    }
}

const RTN_THROW: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2613:22: 2613:31

    bb0: {
        _0 = const 9_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2613:34: 2613:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2613:1: 2613:36
    }
}

const SO_EE_ORIGIN_LOCAL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3114:31: 3114:33

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3114:36: 3114:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3114:1: 3114:38
    }
}

const S_IWGRP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:526:20: 526:28

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/mod.rs:526:31: 526:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:526:1: 526:34
    }
}

const STA_FLL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1052:20: 1052:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1052:30: 1052:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1052:1: 1052:37
    }
}

const TCP_WINDOW_CLAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:972:29: 972:36

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/mod.rs:972:39: 972:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:972:1: 972:42
    }
}

const PTRACE_SYSEMU: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:626:26: 626:34

    bb0: {
        _0 = const 31_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:626:37: 626:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:626:1: 626:40
    }
}

const MPOL_F_STATIC_NODES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1503:32: 1503:39
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1503:42: 1503:49

    bb0: {
        _1 = CheckedShl(const 1_i32, const 15_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1503:42: 1503:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 15_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1503:42: 1503:49
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1503:42: 1503:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1503:1: 1503:50
    }
}

const SYS_eventfd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:363:24: 363:32

    bb0: {
        _0 = const 284_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:363:35: 363:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:363:1: 363:39
    }
}

const ETH_P_TDLS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2016:23: 2016:30

    bb0: {
        _0 = const 35085_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2016:33: 2016:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2016:1: 2016:40
    }
}

canfd_frame::data::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:144:32: 144:46

    bb0: {
        _0 = const CANFD_MAX_DLEN;       // scope 0 at src/unix/linux_like/linux/align.rs:144:32: 144:46
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:144:32: 144:46
    }
}

const NETLINK_NETFILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2475:30: 2475:37

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2475:40: 2475:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2475:1: 2475:43
    }
}

const NFT_LIMIT_PKTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2949:27: 2949:34

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2949:37: 2949:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2949:1: 2949:39
    }
}

const TCA_DUMP_INVISIBLE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:885:31: 885:41

    bb0: {
        _0 = const 10_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:885:44: 885:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:885:1: 885:47
    }
}

const IP_BIND_ADDRESS_NO_PORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:811:36: 811:43

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/mod.rs:811:46: 811:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:811:1: 811:49
    }
}

const IPOPT_OFFSET: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1293:25: 1293:27

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1293:30: 1293:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1293:1: 1293:32
    }
}

const EISCONN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:474:20: 474:27

    bb0: {
        _0 = const 106_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:474:30: 474:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:474:1: 474:34
    }
}

fn linux_like::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux_like::utsname) -> linux_like::utsname {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::utsname; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const F_TEST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1355:19: 1355:26

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1355:29: 1355:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1355:1: 1355:31
    }
}

const SYS_prctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:236:22: 236:30

    bb0: {
        _0 = const 157_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:236:33: 236:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:236:1: 236:37
    }
}

const SKF_AD_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1877:24: 1877:31

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1877:34: 1877:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1877:1: 1877:37
    }
}

const BLKIOMIN: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:193:21: 193:28

    bb0: {
        _0 = const 4728_u64;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:193:31: 193:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:193:1: 193:38
    }
}

const NF_IP6_PRI_CONNTRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2330:33: 2330:40

    bb0: {
        _0 = const -200_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2330:43: 2330:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2330:1: 2330:48
    }
}

const IN_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2791:24: 2791:31

    bb0: {
        _0 = const b64::x86_64::O_NONBLOCK; // scope 0 at src/unix/linux_like/linux/mod.rs:2791:34: 2791:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2791:1: 2791:45
    }
}

const DT_UNKNOWN: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:213:23: 213:25

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/mod.rs:213:28: 213:29
        return;                          // scope 0 at src/unix/mod.rs:213:1: 213:30
    }
}

const DCCP_SOCKOPT_GET_CUR_MPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:733:37: 733:44

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:733:47: 733:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:733:1: 733:49
    }
}

const SOL_TIPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:678:21: 678:28

    bb0: {
        _0 = const 271_i32;              // scope 0 at src/unix/linux_like/mod.rs:678:31: 678:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:678:1: 678:35
    }
}

const CLONE_UNTRACED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1133:27: 1133:34

    bb0: {
        _0 = const 8388608_i32;          // scope 0 at src/unix/linux_like/mod.rs:1133:37: 1133:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1133:1: 1133:46
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::sched_param) -> linux_like::sched_param {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::sched_param; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const REG_R8: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:758:19: 758:26

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:758:29: 758:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:758:1: 758:31
    }
}

const _SC_LOGIN_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1219:31: 1219:38

    bb0: {
        _0 = const 71_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1219:41: 1219:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1219:1: 1219:44
    }
}

const SYS_shmat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:109:22: 109:30

    bb0: {
        _0 = const 30_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:109:33: 109:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:109:1: 109:36
    }
}

const PR_CAPBSET_READ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1708:28: 1708:35

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1708:38: 1708:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1708:1: 1708:41
    }
}

const SO_PASSCRED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:36:24: 36:31

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:36:34: 36:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:36:1: 36:37
    }
}

const NFQA_CT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2160:20: 2160:27

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2160:30: 2160:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2160:1: 2160:33
    }
}

const RTN_BLACKHOLE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2610:26: 2610:35

    bb0: {
        _0 = const 6_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2610:38: 2610:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2610:1: 2610:40
    }
}

const REG_ESPACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3109:23: 3109:30

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3109:33: 3109:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3109:1: 3109:36
    }
}

const S_IRUSR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:523:20: 523:28

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/mod.rs:523:31: 523:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:523:1: 523:35
    }
}

const STA_PLL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1049:20: 1049:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1049:30: 1049:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1049:1: 1049:37
    }
}

const TCP_SYNCNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:969:23: 969:30

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:969:33: 969:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:969:1: 969:35
    }
}

const PTRACE_GETREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:623:27: 623:35

    bb0: {
        _0 = const 12_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:623:38: 623:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:623:1: 623:41
    }
}

const MPOL_LOCAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1500:23: 1500:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1500:33: 1500:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1500:1: 1500:35
    }
}

const SYS_epoll_pwait: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:360:28: 360:36

    bb0: {
        _0 = const 281_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:360:39: 360:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:360:1: 360:43
    }
}

const ETH_P_1588: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2013:23: 2013:30

    bb0: {
        _0 = const 35063_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2013:33: 2013:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2013:1: 2013:40
    }
}

const NETLINK_AUDIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2472:26: 2472:33

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2472:36: 2472:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2472:1: 2472:38
    }
}

const NFT_CT_LABELS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2945:26: 2945:33

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2945:36: 2945:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2945:1: 2945:39
    }
}

const RWF_NOWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:880:23: 880:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:880:33: 880:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:880:1: 880:44
    }
}

const IP_MINTTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:808:22: 808:29

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/mod.rs:808:32: 808:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:808:1: 808:35
    }
}

const IPDEFTTL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1290:21: 1290:23

    bb0: {
        _0 = const 64_u8;                // scope 0 at src/unix/linux_like/mod.rs:1290:26: 1290:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1290:1: 1290:29
    }
}

const ECONNABORTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:471:25: 471:32

    bb0: {
        _0 = const 103_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:471:35: 471:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:471:1: 471:39
    }
}

sockaddr_storage::__ss_pad2::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
    let mut _3: (usize, bool);           // in scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
        _2 = CheckedMul(const 2_usize, const 8_usize); // scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
        assert(!move (_2.1: bool), "attempt to compute `{} * {}`, which would overflow", const 2_usize, const 8_usize) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
    }

    bb1: {
        _1 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/mod.rs:238:31: 238:36
        _3 = CheckedSub(const 128_usize, _1); // scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36
        assert(!move (_3.1: bool), "attempt to compute `{} - {}`, which would overflow", const 128_usize, move _1) -> bb2; // scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36
    }

    bb2: {
        _0 = move (_3.0: usize);         // scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:238:35: 238:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:238:25: 238:36
    }
}

const S_IWRITE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1351:21: 1351:27

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1351:30: 1351:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1351:1: 1351:34
    }
}

const SYS_modify_ldt: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:233:27: 233:35

    bb0: {
        _0 = const 154_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:233:38: 233:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:233:1: 233:42
    }
}

const SKF_AD_IFINDEX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1874:27: 1874:34

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1874:37: 1874:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1874:1: 1874:39
    }
}

const TIOCSERSETMULTI: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:190:28: 190:35

    bb0: {
        _0 = const 21595_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:190:38: 190:44
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:190:1: 190:45
    }
}

const NF_IP6_PRI_CONNTRACK_DEFRAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2327:40: 2327:47

    bb0: {
        _0 = const -400_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2327:50: 2327:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2327:1: 2327:55
    }
}

const IN_ONESHOT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2775:23: 2775:26

    bb0: {
        _0 = const 2147483648_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2775:29: 2775:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2775:1: 2775:41
    }
}

const SIG_DFL: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/mod.rs:209:20: 209:32

    bb0: {
        _0 = const 0_usize;              // scope 0 at src/unix/mod.rs:209:35: 209:36
        return;                          // scope 0 at src/unix/mod.rs:209:1: 209:53
    }
}

const DCCP_SOCKOPT_SERVICE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:730:33: 730:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:730:43: 730:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:730:1: 730:45
    }
}

const SOL_LLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:675:20: 675:27

    bb0: {
        _0 = const 268_i32;              // scope 0 at src/unix/linux_like/mod.rs:675:30: 675:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:675:1: 675:34
    }
}

const CLONE_PARENT_SETTID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1130:32: 1130:39

    bb0: {
        _0 = const 1048576_i32;          // scope 0 at src/unix/linux_like/mod.rs:1130:42: 1130:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1130:1: 1130:51
    }
}

const ES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:753:15: 753:22

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:753:25: 753:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:753:1: 753:28
    }
}

const _SC_THREAD_SAFE_FUNCTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1216:38: 1216:45

    bb0: {
        _0 = const 68_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1216:48: 1216:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1216:1: 1216:51
    }
}

const SYS_mincore: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:106:24: 106:32

    bb0: {
        _0 = const 27_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:106:35: 106:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:106:1: 106:38
    }
}

const PR_ENDIAN_PPC_LITTLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1703:33: 1703:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1703:43: 1703:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1703:1: 1703:45
    }
}

const SO_LINGER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:33:22: 33:29

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:33:32: 33:34
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:33:1: 33:35
    }
}

const NFQA_IFINDEX_PHYSOUTDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2157:36: 2157:43

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2157:46: 2157:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2157:1: 2157:48
    }
}

const RTN_BROADCAST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2607:26: 2607:35

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2607:38: 2607:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2607:1: 2607:40
    }
}

const REG_EBRACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3106:23: 3106:30

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3106:33: 3106:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3106:1: 3106:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::spwd) -> linux::spwd {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::spwd; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const S_IRWXU: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:520:20: 520:28

    bb0: {
        _0 = const 448_u32;              // scope 0 at src/unix/linux_like/mod.rs:520:31: 520:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:520:1: 520:35
    }
}

const MOD_TAI: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1046:20: 1046:28

    bb0: {
        _0 = const ADJ_TAI;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1046:31: 1046:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1046:1: 1046:39
    }
}

const TCP_KEEPIDLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:966:25: 966:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:966:35: 966:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:966:1: 966:37
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ptrace_peeksiginfo_args) -> ptrace_peeksiginfo_args {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::ptrace_peeksiginfo_args; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_SETFPREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:620:29: 620:37

    bb0: {
        _0 = const 15_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:620:40: 620:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:620:1: 620:43
    }
}

const MPOL_PREFERRED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1497:27: 1497:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1497:37: 1497:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1497:1: 1497:39
    }
}

const SYS_vmsplice: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:357:25: 357:33

    bb0: {
        _0 = const 278_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:357:36: 357:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:357:1: 357:40
    }
}

const ETH_P_MACSEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2010:25: 2010:32

    bb0: {
        _0 = const 35045_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2010:35: 2010:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2010:1: 2010:42
    }
}

const NETLINK_XFRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2469:25: 2469:32

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2469:35: 2469:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2469:1: 2469:37
    }
}

const NFT_CT_PROTOCOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2942:28: 2942:35

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2942:38: 2942:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2942:1: 2942:41
    }
}

const RWF_HIPRI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:877:22: 877:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:877:32: 877:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:877:1: 877:43
    }
}

const IP_TRANSPARENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:805:27: 805:34

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/mod.rs:805:37: 805:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:805:1: 805:40
    }
}

const IPOPT_RA: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1287:21: 1287:23
    let mut _1: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1287:26: 1287:44

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1287:26: 1287:44
        _1 = BitOr(const 20_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1287:26: 1287:44
        _0 = BitOr(move _1, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1287:26: 1287:57
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1287:56: 1287:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1287:1: 1287:58
    }
}

const ENETDOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:468:21: 468:28

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:468:31: 468:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:468:1: 468:35
    }
}

const POSIX_MADV_WILLNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1347:32: 1347:39

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1347:42: 1347:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1347:1: 1347:44
    }
}

const SYS_mlockall: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:230:25: 230:33

    bb0: {
        _0 = const 151_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:230:36: 230:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:230:1: 230:40
    }
}

const SKF_AD_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1871:23: 1871:30

    bb0: {
        _0 = const -4096_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1871:33: 1871:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1871:1: 1871:41
    }
}

const TIOCSERGSTRUCT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:187:27: 187:34

    bb0: {
        _0 = const 21592_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:187:37: 187:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:187:1: 187:44
    }
}

const NF_IP6_POST_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2323:32: 2323:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2323:42: 2323:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2323:1: 2323:44
    }
}

const KEYCTL_INVALIDATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2769:30: 2769:33

    bb0: {
        _0 = const 21_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2769:36: 2769:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2769:1: 2769:39
    }
}

const PF_VSOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:725:21: 725:28

    bb0: {
        _0 = const AF_VSOCK;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:725:31: 725:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:725:1: 725:40
    }
}

const SOL_AAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:672:20: 672:27

    bb0: {
        _0 = const 265_i32;              // scope 0 at src/unix/linux_like/mod.rs:672:30: 672:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:672:1: 672:34
    }
}

const CLONE_NEWNS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1127:24: 1127:31

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/mod.rs:1127:34: 1127:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1127:1: 1127:42
    }
}

const FS_BASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:750:20: 750:27

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:750:30: 750:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:750:1: 750:33
    }
}

const _SC_UIO_MAXIOV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1213:27: 1213:34

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1213:37: 1213:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1213:1: 1213:40
    }
}

const SYS_sched_yield: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:103:28: 103:36

    bb0: {
        _0 = const 24_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:103:39: 103:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:103:1: 103:42
    }
}

const PR_SET_ENDIAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1700:26: 1700:33

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1700:36: 1700:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1700:1: 1700:39
    }
}

const SO_OOBINLINE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:30:25: 30:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:30:35: 30:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:30:1: 30:38
    }
}

const NFQA_IFINDEX_INDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2154:31: 2154:38

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2154:41: 2154:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2154:1: 2154:43
    }
}

const RTN_UNSPEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2604:23: 2604:32

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2604:35: 2604:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2604:1: 2604:37
    }
}

const REG_ESUBREG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3103:24: 3103:31

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3103:34: 3103:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3103:1: 3103:36
    }
}

const S_IFLNK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:517:20: 517:28

    bb0: {
        _0 = const 40960_u32;            // scope 0 at src/unix/linux_like/mod.rs:517:31: 517:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:517:1: 517:37
    }
}

const MOD_TIMECONST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1043:26: 1043:34

    bb0: {
        _0 = const ADJ_TIMECONST;        // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1043:37: 1043:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1043:1: 1043:51
    }
}

const TCP_NODELAY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:963:24: 963:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:963:34: 963:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:963:1: 963:36
    }
}

const EISNAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:616:19: 616:26

    bb0: {
        _0 = const 120_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:616:29: 616:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:616:1: 616:33
    }
}

fn IPOPT_CLASS(_1: u8) -> u8 {
    debug o => _1;                       // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1598:42: 1598:44
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1599:9: 1599:10

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1599:9: 1599:10
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1599:9: 1599:10
        _0 = BitAnd(move _2, const IPOPT_CLASS_MASK); // scope 0 at src/unix/linux_like/mod.rs:1599:9: 1599:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1599:28: 1599:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const RTLD_NOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1491:21: 1491:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1491:31: 1491:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1491:1: 1491:35
    }
}

const SYS_splice: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:354:23: 354:31

    bb0: {
        _0 = const 275_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:354:34: 354:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:354:1: 354:38
    }
}

const ETH_P_8021AD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2007:25: 2007:32

    bb0: {
        _0 = const 34984_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2007:35: 2007:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2007:1: 2007:42
    }
}

const NETLINK_FIREWALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2466:29: 2466:36

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2466:39: 2466:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2466:1: 2466:41
    }
}

const NFT_CT_L3PROTOCOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2939:30: 2939:37

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2939:40: 2939:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2939:1: 2939:42
    }
}

const PTRACE_LISTEN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:870:26: 870:34

    bb0: {
        _0 = const 16904_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:870:37: 870:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:870:1: 870:44
    }
}

const IP_IPSEC_POLICY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:802:28: 802:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:802:38: 802:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:802:1: 802:41
    }
}

const IPOPT_RR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1284:21: 1284:23

    bb0: {
        _0 = BitOr(const 7_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1284:26: 1284:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1284:1: 1284:44
    }
}

const EAFNOSUPPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:465:25: 465:32

    bb0: {
        _0 = const 97_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:465:35: 465:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:465:1: 465:38
    }
}

const POSIX_MADV_NORMAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1344:30: 1344:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1344:40: 1344:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1344:1: 1344:42
    }
}

const SYS_sched_rr_get_interval: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:227:38: 227:46

    bb0: {
        _0 = const 148_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:227:49: 227:52
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:227:1: 227:53
    }
}

const MFD_HUGE_SHIFT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1864:27: 1864:35

    bb0: {
        _0 = const 26_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1864:38: 1864:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1864:1: 1864:41
    }
}

const TIOCSERSWILD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:184:25: 184:32

    bb0: {
        _0 = const 21589_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:184:35: 184:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:184:1: 184:42
    }
}

const NF_IP6_LOCAL_IN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2320:28: 2320:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2320:38: 2320:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2320:1: 2320:40
    }
}

const KEYCTL_SESSION_TO_PARENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2766:37: 2766:40

    bb0: {
        _0 = const 18_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2766:43: 2766:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2766:1: 2766:46
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &input_absinfo) -> input_absinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::input_absinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PF_IB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:722:18: 722:25

    bb0: {
        _0 = const AF_IB;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:722:28: 722:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:722:1: 722:34
    }
}

const SOL_X25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:669:20: 669:27

    bb0: {
        _0 = const 262_i32;              // scope 0 at src/unix/linux_like/mod.rs:669:30: 669:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:669:1: 669:34
    }
}

const CLONE_VFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1124:24: 1124:31

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/mod.rs:1124:34: 1124:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1124:1: 1124:41
    }
}

const EFLAGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:747:19: 747:26

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:747:29: 747:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:747:1: 747:32
    }
}

const _SC_2_FORT_RUN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1210:27: 1210:34

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1210:37: 1210:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1210:1: 1210:40
    }
}

const SYS_access: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:100:23: 100:31

    bb0: {
        _0 = const 21_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:100:34: 100:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:100:1: 100:37
    }
}

const PR_SET_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1696:24: 1696:31

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1696:34: 1696:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1696:1: 1696:37
    }
}

const SO_SNDBUF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:27:22: 27:29

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:27:32: 27:33
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:27:1: 27:34
    }
}

const NFQA_VERDICT_HDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2151:29: 2151:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2151:39: 2151:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2151:1: 2151:41
    }
}

const RTA_TABLE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2600:22: 2600:32

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2600:35: 2600:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2600:1: 2600:38
    }
}

const REG_ECOLLATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3100:25: 3100:32

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3100:35: 3100:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3100:1: 3100:37
    }
}

const S_IFBLK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:514:20: 514:28

    bb0: {
        _0 = const 24576_u32;            // scope 0 at src/unix/linux_like/mod.rs:514:31: 514:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:514:1: 514:37
    }
}

const MOD_MAXERROR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1040:25: 1040:33

    bb0: {
        _0 = const ADJ_MAXERROR;         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1040:36: 1040:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1040:1: 1040:49
    }
}

const IPV6_PMTUDISC_PROBE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:959:32: 959:39

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:959:42: 959:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:959:1: 959:44
    }
}

const EUCLEAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:613:20: 613:27

    bb0: {
        _0 = const 117_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:613:30: 613:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:613:1: 613:34
    }
}

fn W_STOPCODE(_1: i32) -> i32 {
    debug sig => _1;                     // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1586:48: 1586:55
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1587:9: 1587:19
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1587:10: 1587:13

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1587:9: 1587:19
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1587:10: 1587:13
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1587:10: 1587:13
        _2 = Shl(move _3, const 8_i32);  // scope 0 at src/unix/linux_like/mod.rs:1587:9: 1587:19
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1587:18: 1587:19
        _0 = BitOr(move _2, const 127_i32); // scope 0 at src/unix/linux_like/mod.rs:1587:9: 1587:26
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1587:25: 1587:26
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const RTLD_NEXT: *mut core::ffi::c_void = {
    let mut _0: *mut core::ffi::c_void;  // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1488:22: 1488:35

    bb0: {
        _0 = const -1_i64 as *mut core::ffi::c_void (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1488:38: 1488:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1488:1: 1488:61
    }
}

const SYS_unshare: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:351:24: 351:32

    bb0: {
        _0 = const 272_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:351:35: 351:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:351:1: 351:39
    }
}

const ETH_P_ATMFATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2004:26: 2004:33

    bb0: {
        _0 = const 34948_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2004:36: 2004:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2004:1: 2004:43
    }
}

const NETLINK_ROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2463:26: 2463:33

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2463:36: 2463:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2463:1: 2463:38
    }
}

const NFT_CT_SECMARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2936:27: 2936:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2936:37: 2936:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2936:1: 2936:39
    }
}

const PTRACE_SETREGSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:867:29: 867:37

    bb0: {
        _0 = const 16901_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:867:40: 867:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:867:1: 867:47
    }
}

const IP_RECVTOS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:799:23: 799:30

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/mod.rs:799:33: 799:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:799:1: 799:36
    }
}

const IPOPT_SEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1281:22: 1281:24
    let mut _1: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1281:27: 1281:44

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1281:27: 1281:44
        _1 = BitOr(const 2_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1281:27: 1281:44
        _0 = BitOr(move _1, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1281:27: 1281:57
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1281:56: 1281:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1281:1: 1281:58
    }
}

const ESOCKTNOSUPPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:462:28: 462:35

    bb0: {
        _0 = const 94_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:462:38: 462:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:462:1: 462:41
    }
}

const GLOB_NOSPACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1340:25: 1340:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1340:35: 1340:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1340:1: 1340:37
    }
}

const SYS_sched_getscheduler: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:224:35: 224:43

    bb0: {
        _0 = const 145_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:224:46: 224:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:224:1: 224:50
    }
}

const MFD_HUGE_2GB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1861:25: 1861:33

    bb0: {
        _0 = const 2080374784_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1861:36: 1861:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1861:1: 1861:47
    }
}

const FIOASYNC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:181:21: 181:28

    bb0: {
        _0 = const 21586_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:181:31: 181:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:181:1: 181:38
    }
}

const NF_IP_PRI_CONNTRACK_CONFIRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2315:40: 2315:47

    bb0: {
        _0 = const unix::INT_MAX;        // scope 0 at src/unix/linux_like/linux/mod.rs:2315:50: 2315:59
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2315:1: 2315:60
    }
}

const KEYCTL_SET_TIMEOUT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2763:31: 2763:34

    bb0: {
        _0 = const 15_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2763:37: 2763:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2763:1: 2763:40
    }
}

const AF_NFC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:719:19: 719:26

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:719:29: 719:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:719:1: 719:32
    }
}

const SOL_ICMPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:666:23: 666:30

    bb0: {
        _0 = const 58_i32;               // scope 0 at src/unix/linux_like/mod.rs:666:33: 666:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:666:1: 666:36
    }
}

statx::__statx_pad1::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:26:29: 26:30

    bb0: {
        _0 = const 1_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:26:29: 26:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:26:29: 26:30
    }
}

const CLONE_FILES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1121:24: 1121:31

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:1121:34: 1121:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1121:1: 1121:40
    }
}

const ORIG_RAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:744:21: 744:28

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:744:31: 744:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:744:1: 744:34
    }
}

const _SC_2_C_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1207:25: 1207:32

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1207:35: 1207:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1207:1: 1207:38
    }
}

const SYS_pwrite64: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:97:25: 97:33

    bb0: {
        _0 = const 18_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:97:36: 97:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:97:1: 97:39
    }
}

const PR_SET_TIMING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1692:26: 1692:33

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1692:36: 1692:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1692:1: 1692:39
    }
}

const SO_ERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:24:21: 24:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:24:31: 24:32
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:24:1: 24:33
    }
}

const NFQNL_MSG_VERDICT_BATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2147:36: 2147:43

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2147:46: 2147:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2147:1: 2147:48
    }
}

const RTA_CACHEINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2597:26: 2597:36

    bb0: {
        _0 = const 12_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2597:39: 2597:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2597:1: 2597:42
    }
}

const REG_ENOSYS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3097:23: 3097:30

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3097:33: 3097:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3097:1: 3097:36
    }
}

const SOCK_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:510:25: 510:32

    bb0: {
        _0 = const b64::x86_64::O_CLOEXEC; // scope 0 at src/unix/linux_like/mod.rs:510:35: 510:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:510:1: 510:45
    }
}

const ADJ_OFFSET_SS_READ: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1037:31: 1037:39

    bb0: {
        _0 = const 40961_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1037:42: 1037:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1037:1: 1037:49
    }
}

const IPV6_PMTUDISC_DONT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:956:31: 956:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:956:41: 956:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:956:1: 956:43
    }
}

const MAP_STACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:609:22: 609:29

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:609:32: 609:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:609:1: 609:41
    }
}

fn WEXITSTATUS(_1: i32) -> i32 {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1574:52: 1574:59
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1575:9: 1575:22
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1575:10: 1575:16

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1575:9: 1575:22
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1575:10: 1575:16
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1575:10: 1575:16
        _2 = Shr(move _3, const 8_i32);  // scope 0 at src/unix/linux_like/mod.rs:1575:9: 1575:22
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1575:21: 1575:22
        _0 = BitAnd(move _2, const 255_i32); // scope 0 at src/unix/linux_like/mod.rs:1575:9: 1575:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1575:28: 1575:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_IMMUTABLE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1484:25: 1484:34

    bb0: {
        _0 = const 512_u64;              // scope 0 at src/unix/linux_like/linux/mod.rs:1484:37: 1484:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1484:1: 1484:41
    }
}

const SYS_faccessat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:348:26: 348:34

    bb0: {
        _0 = const 269_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:348:37: 348:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:348:1: 348:41
    }
}

const ETH_P_PPP_DISC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2001:27: 2001:34

    bb0: {
        _0 = const 34915_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2001:37: 2001:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2001:1: 2001:44
    }
}

const NDA_VNI: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2457:20: 2457:30

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2457:33: 2457:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2457:1: 2457:35
    }
}

const NFT_CT_DIRECTION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2933:29: 2933:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2933:39: 2933:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2933:1: 2933:41
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::winsize) -> unix::winsize {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::winsize;           // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_GETSIGINFO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:864:30: 864:38

    bb0: {
        _0 = const 16898_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:864:41: 864:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:864:1: 864:48
    }
}

const IP_MTU_DISCOVER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:796:28: 796:35

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/mod.rs:796:38: 796:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:796:1: 796:41
    }
}

const IPOPT_RESERVED2: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1278:28: 1278:30

    bb0: {
        _0 = const 96_u8;                // scope 0 at src/unix/linux_like/mod.rs:1278:33: 1278:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1278:1: 1278:38
    }
}

const EPROTOTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:459:23: 459:30

    bb0: {
        _0 = const 91_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:459:33: 459:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:459:1: 459:36
    }
}

fn linux_like::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sockaddr_un) -> sockaddr_un {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::sockaddr_un; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const GLOB_NOCHECK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1336:25: 1336:32
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1336:35: 1336:41

    bb0: {
        _1 = CheckedShl(const 1_i32, const 4_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1336:35: 1336:41
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 4_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1336:35: 1336:41
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1336:35: 1336:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1336:1: 1336:42
    }
}

const SYS_sched_setparam: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:221:31: 221:39

    bb0: {
        _0 = const 142_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:221:42: 221:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:221:1: 221:46
    }
}

const MFD_HUGE_256MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1858:27: 1858:35

    bb0: {
        _0 = const 1879048192_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1858:38: 1858:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1858:1: 1858:49
    }
}

const TIOCGPTPEER: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:176:24: 176:31

    bb0: {
        _0 = const 21569_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:176:34: 176:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:176:1: 176:41
    }
}

const NF_IP_PRI_NAT_SRC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2312:30: 2312:37

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2312:40: 2312:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2312:1: 2312:44
    }
}

const KEYCTL_INSTANTIATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2760:31: 2760:34

    bb0: {
        _0 = const 12_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2760:37: 2760:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2760:1: 2760:40
    }
}

const FAN_MARK_FILESYSTEM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:715:32: 715:40

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:715:43: 715:54
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:715:1: 715:55
    }
}

const SOL_TCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:663:20: 663:27

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:663:30: 663:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:663:1: 663:32
    }
}

const OFDEL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1117:18: 1117:28

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/mod.rs:1117:31: 1117:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1117:1: 1117:40
    }
}

const O_LARGEFILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:94:24: 94:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:94:34: 94:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:94:1: 94:36
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::tm) -> linux_like::tm {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::tm;    // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RDX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:741:16: 741:23

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:741:26: 741:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:741:1: 741:29
    }
}

const _SC_LINE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1204:25: 1204:32

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1204:35: 1204:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1204:1: 1204:38
    }
}

const SYS_rt_sigreturn: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:94:29: 94:37

    bb0: {
        _0 = const 15_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:94:40: 94:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:94:1: 94:43
    }
}

const PR_FP_EXC_ASYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1688:28: 1688:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1688:38: 1688:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1688:1: 1688:40
    }
}

const SOL_SOCKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:18:23: 18:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:18:33: 18:34
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:18:1: 18:35
    }
}

const NFQNL_MSG_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2144:29: 2144:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2144:39: 2144:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2144:1: 2144:41
    }
}

const RTA_MULTIPATH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2594:26: 2594:36

    bb0: {
        _0 = const 9_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2594:39: 2594:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2594:1: 2594:41
    }
}

const REG_NOSUB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3092:22: 3092:29

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3092:32: 3092:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3092:1: 3092:34
    }
}

fn BPF_MISCOP(_1: u32) -> u32 {
    debug code => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3375:41: 3375:48
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3376:9: 3376:13

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3376:9: 3376:13
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3376:9: 3376:13
        _0 = BitAnd(move _2, const 248_u32); // scope 0 at src/unix/linux_like/linux/mod.rs:3376:9: 3376:20
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3376:19: 3376:20
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const O_RDONLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:506:21: 506:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:506:31: 506:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:506:1: 506:33
    }
}

const ADJ_NANO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1034:21: 1034:29

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1034:32: 1034:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1034:1: 1034:39
    }
}

const IPV6_PREFER_SRC_HOME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:952:33: 952:40

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:952:43: 952:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:952:1: 952:50
    }
}

const MAP_EXECUTABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:606:27: 606:34

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:606:37: 606:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:606:1: 606:45
    }
}

fn WIFSIGNALED(_1: i32) -> bool {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1562:52: 1562:56
    let mut _2: i8;                      // in scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:36
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:30
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1563:10: 1563:25
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1563:11: 1563:17

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:36
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:30
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1563:10: 1563:25
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1563:11: 1563:17
        _5 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1563:11: 1563:17
        _4 = BitAnd(move _5, const 127_i32); // scope 0 at src/unix/linux_like/mod.rs:1563:10: 1563:25
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1563:24: 1563:25
        _3 = Add(move _4, const 1_i32);  // scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:30
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1563:29: 1563:30
        _2 = move _3 as i8 (Misc);       // scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:36
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1563:35: 1563:36
        _0 = Ge(move _2, const 2_i8);    // scope 0 at src/unix/linux_like/mod.rs:1563:9: 1563:41
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1563:40: 1563:41
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_MANDLOCK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1481:24: 1481:33

    bb0: {
        _0 = const 64_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1481:36: 1481:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1481:1: 1481:39
    }
}

const SYS_symlinkat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:345:26: 345:34

    bb0: {
        _0 = const 266_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:345:37: 345:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:345:1: 345:41
    }
}

const ETH_P_MPLS_UC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1998:26: 1998:33

    bb0: {
        _0 = const 34887_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1998:36: 1998:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1998:1: 1998:43
    }
}

const NDA_PROBES: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2454:23: 2454:33

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2454:36: 2454:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2454:1: 2454:38
    }
}

const NFT_META_CGROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2929:28: 2929:35

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2929:38: 2929:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2929:1: 2929:41
    }
}

const PTRACE_SYSCALL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:861:27: 861:35

    bb0: {
        _0 = const 24_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:861:38: 861:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:861:1: 861:41
    }
}

const IP_RETOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:793:23: 793:30

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:793:33: 793:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:793:1: 793:35
    }
}

const IPOPT_CONTROL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1275:26: 1275:28

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1275:31: 1275:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1275:1: 1275:36
    }
}

const ENOTSOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:456:21: 456:28

    bb0: {
        _0 = const 88_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:456:31: 456:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:456:1: 456:34
    }
}

const GLOB_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1333:22: 1333:29
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1333:32: 1333:38

    bb0: {
        _1 = CheckedShl(const 1_i32, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1333:32: 1333:38
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1333:32: 1333:38
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1333:32: 1333:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1333:1: 1333:39
    }
}

const SYS_sysfs: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:218:22: 218:30

    bb0: {
        _0 = const 139_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:218:33: 218:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:218:1: 218:37
    }
}

const MFD_HUGE_8MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1855:25: 1855:33

    bb0: {
        _0 = const 1543503872_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1855:36: 1855:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1855:1: 1855:47
    }
}

const TIOCGPKT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:173:21: 173:28

    bb0: {
        _0 = const 2147767352_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:173:31: 173:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:173:1: 173:42
    }
}

const NF_IP_PRI_NAT_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2309:30: 2309:37

    bb0: {
        _0 = const -100_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2309:40: 2309:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2309:1: 2309:45
    }
}

const KEYCTL_UNLINK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2757:26: 2757:29

    bb0: {
        _0 = const 9_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2757:32: 2757:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2757:1: 2757:34
    }
}

const SOCK_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:710:24: 710:31

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:710:34: 710:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:710:1: 710:37
    }
}

const IFF_AUTOMEDIA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:659:26: 659:33

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/mod.rs:659:36: 659:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:659:1: 659:43
    }
}

const ONOCR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1114:18: 1114:28

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/mod.rs:1114:31: 1114:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1114:1: 1114:40
    }
}

linux_like::fd_set::fds_bits::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54
    let mut _1: bool;                    // in scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54

    bb0: {
        _1 = Eq(const ULONG_SIZE, const 0_usize); // scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54
        assert(!move _1, "attempt to divide `{}` by zero", const FD_SETSIZE) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54
    }

    bb1: {
        _0 = Div(const FD_SETSIZE, const ULONG_SIZE); // scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:92:31: 92:54
    }
}

const R8: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:738:15: 738:22

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:738:25: 738:26
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:738:1: 738:27
    }
}

const _SC_BC_STRING_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1201:30: 1201:37

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1201:40: 1201:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1201:1: 1201:43
    }
}

const SYS_brk: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:91:20: 91:28

    bb0: {
        _0 = const 12_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:91:31: 91:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:91:1: 91:34
    }
}

const PR_FP_EXC_INV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1685:26: 1685:33

    bb0: {
        _0 = const 1048576_i32;          // scope 0 at src/unix/linux_like/linux/mod.rs:1685:36: 1685:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1685:1: 1685:45
    }
}

const NFULNL_CFG_F_SEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2139:29: 2139:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2139:39: 2139:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2139:1: 2139:46
    }
}

const RTA_PRIORITY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2591:25: 2591:35

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2591:38: 2591:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2591:1: 2591:40
    }
}

const REG_EXTENDED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3089:25: 3089:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3089:35: 3089:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3089:1: 3089:37
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ucred) -> ucred {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ucred; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn RT_LOCALADDR(_1: u32) -> bool {
    debug flags => _1;                   // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3363:40: 3363:44
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3364:9: 3364:36
    let mut _3: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3364:10: 3364:15
    let mut _4: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3364:40: 3364:67

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:9: 3364:36
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:10: 3364:15
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3364:10: 3364:15
        _2 = BitAnd(move _3, const RTF_ADDRCLASSMASK); // scope 0 at src/unix/linux_like/linux/mod.rs:3364:9: 3364:36
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:35: 3364:36
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:40: 3364:67
        _4 = const 3221225472_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3364:40: 3364:67
        _0 = Eq(move _2, move _4);       // scope 0 at src/unix/linux_like/linux/mod.rs:3364:9: 3364:67
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:66: 3364:67
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3364:66: 3364:67
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_TAI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:501:22: 501:33

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:501:36: 501:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:501:1: 501:39
    }
}

const ADJ_TAI: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1031:20: 1031:28

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1031:31: 1031:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1031:1: 1031:38
    }
}

const IPV6_PREFER_SRC_PUBLIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:949:35: 949:42

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:949:45: 949:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:949:1: 949:52
    }
}

const MAP_ANON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:603:21: 603:28

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:603:31: 603:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:603:1: 603:38
    }
}

fn WIFSTOPPED(_1: i32) -> bool {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1550:51: 1550:55
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1551:9: 1551:24
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1551:10: 1551:16

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1551:9: 1551:24
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1551:10: 1551:16
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1551:10: 1551:16
        _2 = BitAnd(move _3, const 255_i32); // scope 0 at src/unix/linux_like/mod.rs:1551:9: 1551:24
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1551:23: 1551:24
        _0 = Eq(move _2, const 127_i32); // scope 0 at src/unix/linux_like/mod.rs:1551:9: 1551:32
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1551:31: 1551:32
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_NODEV: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1478:21: 1478:30

    bb0: {
        _0 = const 4_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1478:33: 1478:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1478:1: 1478:35
    }
}

const SYS_unlinkat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:342:25: 342:33

    bb0: {
        _0 = const 263_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:342:36: 342:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:342:1: 342:40
    }
}

const ETH_P_PAUSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1995:24: 1995:31

    bb0: {
        _0 = const 34824_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1995:34: 1995:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1995:1: 1995:41
    }
}

const NDA_DST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2451:20: 2451:30

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2451:33: 2451:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2451:1: 2451:35
    }
}

const NFT_META_CPU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2926:25: 2926:32

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2926:35: 2926:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2926:1: 2926:38
    }
}

const PTRACE_KILL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:858:24: 858:32

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:858:35: 858:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:858:1: 858:37
    }
}

const IP_OPTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:790:23: 790:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:790:33: 790:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:790:1: 790:35
    }
}

const IPOPT_COPY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1271:23: 1271:25

    bb0: {
        _0 = const 128_u8;               // scope 0 at src/unix/linux_like/mod.rs:1271:28: 1271:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1271:1: 1271:33
    }
}

const ERESTART: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:453:21: 453:28

    bb0: {
        _0 = const 85_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:453:31: 453:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:453:1: 453:34
    }
}

fn linux_like::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux_like::epoll_event) -> linux_like::epoll_event {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::epoll_event; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const AT_HWCAP2: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1328:22: 1328:31

    bb0: {
        _0 = const 26_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1328:34: 1328:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1328:1: 1328:37
    }
}

const SYS_ustat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:215:22: 215:30

    bb0: {
        _0 = const 136_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:215:33: 215:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:215:1: 215:37
    }
}

const MFD_HUGE_512KB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1852:27: 1852:35

    bb0: {
        _0 = const 1275068416_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1852:38: 1852:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1852:1: 1852:49
    }
}

const TCSETXW: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:170:20: 170:27

    bb0: {
        _0 = const 21557_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:170:30: 170:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:170:1: 170:37
    }
}

const NF_IP_PRI_SELINUX_FIRST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2306:36: 2306:43

    bb0: {
        _0 = const -225_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2306:46: 2306:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2306:1: 2306:51
    }
}

const KEYCTL_DESCRIBE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2754:28: 2754:31

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2754:34: 2754:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2754:1: 2754:36
    }
}

const J1939_EE_INFO_RX_ABORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3243:35: 3243:42

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3243:45: 3243:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3243:1: 3243:47
    }
}

const ENOTSUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:706:20: 706:27

    bb0: {
        _0 = const b64::x86_64::EOPNOTSUPP; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:706:30: 706:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:706:1: 706:41
    }
}

const IFF_SLAVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:656:22: 656:29

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/mod.rs:656:32: 656:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:656:1: 656:38
    }
}

const CRTSCTS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1111:20: 1111:30

    bb0: {
        _0 = const 2147483648_u32;       // scope 0 at src/unix/linux_like/mod.rs:1111:33: 1111:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1111:1: 1111:44
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::fd_set) -> linux_like::fd_set {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::fd_set; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const R11: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:735:16: 735:23

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:735:26: 735:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:735:1: 735:28
    }
}

const _SC_BC_BASE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1198:28: 1198:35

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1198:38: 1198:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1198:1: 1198:41
    }
}

const SYS_mmap: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:88:21: 88:29

    bb0: {
        _0 = const 9_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:88:32: 88:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:88:1: 88:34
    }
}

const PR_FP_EXC_OVF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1682:26: 1682:33

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1682:36: 1682:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1682:1: 1682:45
    }
}

const NFULNL_COPY_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2135:29: 2135:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2135:39: 2135:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2135:1: 2135:44
    }
}

const RTA_IIF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2588:20: 2588:30

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2588:33: 2588:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2588:1: 2588:35
    }
}

const LINUX_REBOOT_CMD_RESTART2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3085:38: 3085:45

    bb0: {
        _0 = const -1582119980_i32;      // scope 0 at src/unix/linux_like/linux/mod.rs:3085:48: 3085:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3085:1: 3085:59
    }
}

fn IPTOS_PREC(_1: u8) -> u8 {
    debug tos => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3351:35: 3351:37
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3352:9: 3352:12

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3352:9: 3352:12
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3352:9: 3352:12
        _0 = BitAnd(move _2, const IPTOS_PREC_MASK); // scope 0 at src/unix/linux_like/linux/mod.rs:3352:9: 3352:30
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3352:29: 3352:30
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_BOOTTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:498:27: 498:38

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:498:41: 498:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:498:1: 498:43
    }
}

const ADJ_ESTERROR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1028:25: 1028:33

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1028:36: 1028:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1028:1: 1028:43
    }
}

const IPV6_TRANSPARENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:946:29: 946:36

    bb0: {
        _0 = const 75_i32;               // scope 0 at src/unix/linux_like/mod.rs:946:39: 946:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:946:1: 946:42
    }
}

const MAP_LOCKED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:600:23: 600:30

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:600:33: 600:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:600:1: 600:41
    }
}

fn FD_ZERO(_1: *mut linux_like::fd_set) -> () {
    debug set => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/mod.rs:1534:41: 1534:43
    let mut _2: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _3: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _4: &mut [u64];              // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
    let mut _5: &mut [u64; 16];          // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
    let mut _6: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _8: core::option::Option<&mut u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _9: &mut core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _10: &mut core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    let mut _11: isize;                  // in scope 0 at src/unix/linux_like/mod.rs:1535:13: 1535:17
    let mut _13: &mut u64;               // in scope 0 at src/unix/linux_like/mod.rs:1535:13: 1535:17
    scope 1 {
        debug iter => _6;                // in scope 1 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        let mut _7: &mut u64;            // in scope 1 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        scope 2 {
            debug __next => _7;          // in scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
            let _12: &mut u64;           // in scope 2 at src/unix/linux_like/mod.rs:1535:13: 1535:17
            let _14: &mut u64;           // in scope 2 at src/unix/linux_like/mod.rs:1535:13: 1535:17
            scope 3 {
                debug val => _12;        // in scope 3 at src/unix/linux_like/mod.rs:1535:13: 1535:17
            }
            scope 4 {
                debug slot => _14;       // in scope 4 at src/unix/linux_like/mod.rs:1535:13: 1535:17
            }
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
        _5 = &mut ((*_1).0: [u64; 16]);  // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
        _4 = move _5 as &mut [u64] (Pointer(Unsize)); // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:36
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1535:35: 1535:36
        _3 = slice::<impl [u64]>::iter_mut(move _4) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1535:37: 1535:45
                                         // + literal: Const { ty: for<'r> fn(&'r mut [u64]) -> core::slice::IterMut<'r, u64> {core::slice::<impl [u64]>::iter_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        _2 = <core::slice::IterMut<u64> as IntoIterator>::into_iter(move _3) -> bb2; // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1535:21: 1535:47
                                         // + literal: Const { ty: fn(core::slice::IterMut<u64>) -> <core::slice::IterMut<u64> as core::iter::IntoIterator>::IntoIter {<core::slice::IterMut<u64> as core::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        _6 = move _2;                    // scope 0 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        goto -> bb3;                     // scope 1 at src/unix/linux_like/mod.rs:1535:9: 1537:10
    }

    bb3: {
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        StorageLive(_8);                 // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        StorageLive(_9);                 // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        StorageLive(_10);                // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        _10 = &mut _6;                   // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        _9 = &mut (*_10);                // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        _8 = <core::slice::IterMut<u64> as Iterator>::next(move _9) -> bb4; // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1535:21: 1535:47
                                         // + literal: Const { ty: for<'r> fn(&'r mut core::slice::IterMut<u64>) -> core::option::Option<<core::slice::IterMut<u64> as core::iter::Iterator>::Item> {<core::slice::IterMut<u64> as core::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_9);                 // scope 2 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        _11 = discriminant(_8);          // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        switchInt(move _11) -> [0_isize: bb5, 1_isize: bb7, otherwise: bb6]; // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    }

    bb5: {
        StorageDead(_10);                // scope 2 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1537:9: 1537:10
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1537:9: 1537:10
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }

    bb6: {
        unreachable;                     // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
    }

    bb7: {
        StorageLive(_12);                // scope 2 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        _12 = move ((_8 as Some).0: &mut u64); // scope 2 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        StorageLive(_13);                // scope 3 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        _13 = move _12;                  // scope 3 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        _7 = move _13;                   // scope 3 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        StorageDead(_13);                // scope 3 at src/unix/linux_like/mod.rs:1535:16: 1535:17
        StorageDead(_12);                // scope 2 at src/unix/linux_like/mod.rs:1535:16: 1535:17
        StorageDead(_10);                // scope 2 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/mod.rs:1535:46: 1535:47
        StorageLive(_14);                // scope 2 at src/unix/linux_like/mod.rs:1535:13: 1535:17
        _14 = move _7;                   // scope 2 at src/unix/linux_like/mod.rs:1535:21: 1535:47
        (*_14) = const 0_u64;            // scope 4 at src/unix/linux_like/mod.rs:1536:13: 1536:22
        StorageDead(_14);                // scope 2 at src/unix/linux_like/mod.rs:1537:9: 1537:10
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1537:9: 1537:10
        goto -> bb3;                     // scope 1 at src/unix/linux_like/mod.rs:1535:9: 1537:10
    }
}

const SEEK_HOLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1474:22: 1474:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1474:32: 1474:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1474:1: 1474:34
    }
}

const SYS_fchownat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:339:25: 339:33

    bb0: {
        _0 = const 260_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:339:36: 339:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:339:1: 339:40
    }
}

const ETH_P_8021Q: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1992:24: 1992:31

    bb0: {
        _0 = const 33024_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1992:34: 1992:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1992:1: 1992:41
    }
}

const NTF_PROXY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2447:22: 2447:24

    bb0: {
        _0 = const 8_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2447:27: 2447:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2447:1: 2447:32
    }
}

const NFT_META_BRI_IIFNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2923:33: 2923:40

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2923:43: 2923:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2923:1: 2923:46
    }
}

const PTRACE_POKEDATA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:855:28: 855:36

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:855:39: 855:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:855:1: 855:41
    }
}

const IP_TOS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:787:19: 787:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:787:29: 787:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:787:1: 787:31
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::mallinfo2) -> gnu::mallinfo2 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::mallinfo2; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPTOS_ECN_ECT1: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1267:27: 1267:29

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1267:32: 1267:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1267:1: 1267:37
    }
}

const ELIBMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:450:20: 450:27

    bb0: {
        _0 = const 82_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:450:30: 450:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:450:1: 450:33
    }
}

const AT_SECURE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1325:22: 1325:31

    bb0: {
        _0 = const 23_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1325:34: 1325:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1325:1: 1325:37
    }
}

const SYS_mknod: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:212:22: 212:30

    bb0: {
        _0 = const 133_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:212:33: 212:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:212:1: 212:37
    }
}

const MFD_ALLOW_SEALING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1849:30: 1849:38

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1849:41: 1849:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1849:1: 1849:48
    }
}

const TCGETX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:167:19: 167:26

    bb0: {
        _0 = const 21554_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:167:29: 167:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:167:1: 167:36
    }
}

const NF_IP_PRI_FIRST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2303:28: 2303:35

    bb0: {
        _0 = const unix::INT_MIN;        // scope 0 at src/unix/linux_like/linux/mod.rs:2303:38: 2303:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2303:1: 2303:48
    }
}

const KEYCTL_REVOKE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2751:26: 2751:29

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2751:32: 2751:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2751:1: 2751:34
    }
}

const J1939_EE_INFO_TX_ABORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3240:35: 3240:42

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3240:45: 3240:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3240:1: 3240:47
    }
}

const LC_MEASUREMENT_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:32: 691:39
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:42: 691:61

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_MEASUREMENT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:42: 691:61
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_MEASUREMENT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:42: 691:61
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:42: 691:61
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:691:1: 691:62
    }
}

const IFF_PROMISC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:653:24: 653:31

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:653:34: 653:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:653:1: 653:40
    }
}

const IMAXBEL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1108:20: 1108:30

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/mod.rs:1108:33: 1108:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1108:1: 1108:44
    }
}

sockaddr_ll::sll_addr::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:88:35: 88:36

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/mod.rs:88:35: 88:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:88:35: 88:36
    }
}

const R12: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:732:16: 732:23

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:732:26: 732:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:732:1: 732:28
    }
}

const _SC_SEM_VALUE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1195:30: 1195:37

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1195:40: 1195:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1195:1: 1195:43
    }
}

const SYS_lstat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:85:22: 85:30

    bb0: {
        _0 = const 6_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:85:33: 85:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:85:1: 85:35
    }
}

const PR_SET_FPEXC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1679:25: 1679:32

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1679:35: 1679:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1679:1: 1679:38
    }
}

const NFULA_CFG_TIMEOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2131:30: 2131:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2131:40: 2131:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2131:1: 2131:42
    }
}

const RTA_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2585:23: 2585:33

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2585:36: 2585:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2585:1: 2585:38
    }
}

const LINUX_REBOOT_CMD_CAD_ON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3082:36: 3082:43

    bb0: {
        _0 = const -1985229329_i32;      // scope 0 at src/unix/linux_like/linux/mod.rs:3082:46: 3082:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3082:1: 3082:57
    }
}

fn minor(_1: u64) -> u32 {
    debug dev => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3329:35: 3329:43
    let mut _2: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3330:13: 3330:22
    let mut _3: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:49
    let mut _4: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:44
    let mut _5: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3331:19: 3331:22
    let mut _6: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:50
    let mut _7: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:44
    let mut _8: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3332:19: 3332:22
    let mut _9: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3333:9: 3333:14
    scope 1 {
        debug minor => _2;               // in scope 1 at src/unix/linux_like/linux/mod.rs:3330:13: 3330:22
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3330:13: 3330:22
        _2 = const 0_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3330:25: 3330:26
        StorageLive(_3);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:49
        StorageLive(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:44
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:19: 3331:22
        _5 = _1;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3331:19: 3331:22
        _4 = BitAnd(move _5, const 255_u64); // scope 1 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:44
        StorageDead(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:43: 3331:44
        _3 = Shr(move _4, const 0_i32);  // scope 1 at src/unix/linux_like/linux/mod.rs:3331:18: 3331:49
        StorageDead(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:48: 3331:49
        _2 = BitOr(_2, move _3);         // scope 1 at src/unix/linux_like/linux/mod.rs:3331:9: 3331:49
        StorageDead(_3);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3331:48: 3331:49
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:50
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:44
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:19: 3332:22
        _8 = _1;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3332:19: 3332:22
        _7 = BitAnd(move _8, const 17592184995840_u64); // scope 1 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:44
        StorageDead(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:43: 3332:44
        _6 = Shr(move _7, const 12_i32); // scope 1 at src/unix/linux_like/linux/mod.rs:3332:18: 3332:50
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:49: 3332:50
        _2 = BitOr(_2, move _6);         // scope 1 at src/unix/linux_like/linux/mod.rs:3332:9: 3332:50
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3332:49: 3332:50
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3333:9: 3333:14
        _9 = _2;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3333:9: 3333:14
        _0 = move _9 as u32 (Misc);      // scope 1 at src/unix/linux_like/linux/mod.rs:3333:9: 3333:26
        StorageDead(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3333:25: 3333:26
        StorageDead(_2);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_MONOTONIC_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:495:32: 495:43

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:495:46: 495:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:495:1: 495:48
    }
}

const ADJ_OFFSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1025:23: 1025:31

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1025:34: 1025:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1025:1: 1025:41
    }
}

const IPV6_MINHOPCOUNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:943:29: 943:36

    bb0: {
        _0 = const 73_i32;               // scope 0 at src/unix/linux_like/mod.rs:943:39: 943:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:943:1: 943:42
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf32_Chdr) -> Elf32_Chdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::Elf32_Chdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const O_DIRECTORY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:596:24: 596:31

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:596:34: 596:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:596:1: 596:42
    }
}

fn FD_CLR(_1: i32, _2: *mut linux_like::fd_set) -> () {
    debug fd => _1;                      // in scope 0 at src/macros.rs:243:43: 243:47
    debug set => _2;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/mod.rs:1514:53: 1514:55
    let _3: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1515:13: 1515:15
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1515:18: 1515:20
    let mut _6: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1516:20: 1516:59
    let mut _7: &u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1516:39: 1516:58
    let _8: &u64;                        // in scope 0 at src/unix/linux_like/mod.rs:1516:39: 1516:58
    let _9: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1516:56: 1516:57
    let mut _10: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1517:39: 1517:58
    let mut _11: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1517:40: 1517:58
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:46: 1517:57
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:47: 1517:49
    let mut _14: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:52: 1517:56
    let mut _15: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1517:46: 1517:57
    let _16: usize;                      // in scope 0 at src/unix/linux_like/mod.rs:1517:25: 1517:34
    let mut _17: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:25: 1517:27
    let mut _18: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:30: 1517:34
    let mut _19: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1517:25: 1517:34
    let mut _20: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1517:9: 1517:35
    let mut _21: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1517:9: 1517:35
    scope 1 {
        debug fd => _3;                  // in scope 1 at src/unix/linux_like/mod.rs:1515:13: 1515:15
        let _5: usize;                   // in scope 1 at src/unix/linux_like/mod.rs:1516:13: 1516:17
        scope 2 {
            debug size => _5;            // in scope 2 at src/unix/linux_like/mod.rs:1516:13: 1516:17
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1515:13: 1515:15
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1515:18: 1515:20
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1515:18: 1515:20
        _3 = move _4 as usize (Misc);    // scope 0 at src/unix/linux_like/mod.rs:1515:18: 1515:29
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1515:28: 1515:29
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/mod.rs:1516:13: 1516:17
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1516:20: 1516:59
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1516:39: 1516:58
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1516:39: 1516:58
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1516:56: 1516:57
        _9 = const 0_usize;              // scope 1 at src/unix/linux_like/mod.rs:1516:56: 1516:57
        _8 = &((*_2).0: [u64; 16])[_9];  // scope 1 at src/unix/linux_like/mod.rs:1516:39: 1516:58
        _7 = _8;                         // scope 1 at src/unix/linux_like/mod.rs:1516:39: 1516:58
        _6 = core::mem::size_of_val::<u64>(move _7) -> bb1; // scope 1 at src/unix/linux_like/mod.rs:1516:20: 1516:59
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1516:20: 1516:38
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1516:58: 1516:59
        _5 = Mul(move _6, const 8_usize); // scope 1 at src/unix/linux_like/mod.rs:1516:20: 1516:63
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1516:62: 1516:63
        StorageDead(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1516:62: 1516:63
        StorageDead(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1516:62: 1516:63
        StorageLive(_10);                // scope 2 at src/unix/linux_like/mod.rs:1517:39: 1517:58
        StorageLive(_11);                // scope 2 at src/unix/linux_like/mod.rs:1517:40: 1517:58
        StorageLive(_12);                // scope 2 at src/unix/linux_like/mod.rs:1517:46: 1517:57
        StorageLive(_13);                // scope 2 at src/unix/linux_like/mod.rs:1517:47: 1517:49
        _13 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1517:47: 1517:49
        StorageLive(_14);                // scope 2 at src/unix/linux_like/mod.rs:1517:52: 1517:56
        _14 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1517:52: 1517:56
        _15 = Eq(_14, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1517:46: 1517:57
        assert(!move _15, "attempt to calculate the remainder of `{}` with a divisor of zero", _13) -> bb2; // scope 2 at src/unix/linux_like/mod.rs:1517:46: 1517:57
    }

    bb2: {
        _12 = Rem(move _13, move _14);   // scope 2 at src/unix/linux_like/mod.rs:1517:46: 1517:57
        StorageDead(_14);                // scope 2 at src/unix/linux_like/mod.rs:1517:56: 1517:57
        StorageDead(_13);                // scope 2 at src/unix/linux_like/mod.rs:1517:56: 1517:57
        _11 = Shl(const 1_u64, move _12); // scope 2 at src/unix/linux_like/mod.rs:1517:40: 1517:58
        StorageDead(_12);                // scope 2 at src/unix/linux_like/mod.rs:1517:57: 1517:58
        _10 = Not(move _11);             // scope 2 at src/unix/linux_like/mod.rs:1517:39: 1517:58
        StorageDead(_11);                // scope 2 at src/unix/linux_like/mod.rs:1517:57: 1517:58
        StorageLive(_16);                // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:34
        StorageLive(_17);                // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:27
        _17 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:27
        StorageLive(_18);                // scope 2 at src/unix/linux_like/mod.rs:1517:30: 1517:34
        _18 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1517:30: 1517:34
        _19 = Eq(_18, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:34
        assert(!move _19, "attempt to divide `{}` by zero", _17) -> bb3; // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:34
    }

    bb3: {
        _16 = Div(move _17, move _18);   // scope 2 at src/unix/linux_like/mod.rs:1517:25: 1517:34
        StorageDead(_18);                // scope 2 at src/unix/linux_like/mod.rs:1517:33: 1517:34
        StorageDead(_17);                // scope 2 at src/unix/linux_like/mod.rs:1517:33: 1517:34
        _20 = const 16_usize;            // scope 2 at src/unix/linux_like/mod.rs:1517:9: 1517:35
        _21 = Lt(_16, _20);              // scope 2 at src/unix/linux_like/mod.rs:1517:9: 1517:35
        assert(move _21, "index out of bounds: the length is {} but the index is {}", move _20, _16) -> bb4; // scope 2 at src/unix/linux_like/mod.rs:1517:9: 1517:35
    }

    bb4: {
        ((*_2).0: [u64; 16])[_16] = BitAnd(((*_2).0: [u64; 16])[_16], move _10); // scope 2 at src/unix/linux_like/mod.rs:1517:9: 1517:58
        StorageDead(_10);                // scope 2 at src/unix/linux_like/mod.rs:1517:57: 1517:58
        StorageDead(_16);                // scope 2 at src/unix/linux_like/mod.rs:1517:57: 1517:58
        StorageDead(_5);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_PERSIST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1469:24: 1469:31

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1469:34: 1469:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1469:1: 1469:41
    }
}

const SYS_openat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:336:23: 336:31

    bb0: {
        _0 = const 257_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:336:34: 336:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:336:1: 336:38
    }
}

const ETH_P_RARP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1989:23: 1989:30

    bb0: {
        _0 = const 32821_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1989:33: 1989:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1989:1: 1989:40
    }
}

const NTF_USE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2444:20: 2444:22

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2444:25: 2444:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2444:1: 2444:30
    }
}

const NFT_META_SECMARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2920:29: 2920:36

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2920:39: 2920:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2920:1: 2920:42
    }
}

const PTRACE_PEEKDATA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:852:28: 852:36

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:852:39: 852:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:852:1: 852:41
    }
}

const SCM_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:783:26: 783:33

    bb0: {
        _0 = const generic::SO_TIMESTAMP; // scope 0 at src/unix/linux_like/mod.rs:783:36: 783:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:783:1: 783:49
    }
}

const IPTOS_PREC_PRIORITY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1263:32: 1263:34

    bb0: {
        _0 = const 32_u8;                // scope 0 at src/unix/linux_like/mod.rs:1263:37: 1263:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1263:1: 1263:42
    }
}

const ELIBACC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:447:20: 447:27

    bb0: {
        _0 = const 79_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:447:30: 447:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:447:1: 447:33
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::mmsghdr) -> linux_like::mmsghdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::mmsghdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AT_PLATFORM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1321:24: 1321:33

    bb0: {
        _0 = const 15_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1321:36: 1321:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1321:1: 1321:39
    }
}

const SYS_rt_sigsuspend: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:209:30: 209:38

    bb0: {
        _0 = const 130_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:209:41: 209:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:209:1: 209:45
    }
}

const IUTF8: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1844:18: 1844:28

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1844:31: 1844:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1844:1: 1844:42
    }
}

const TIOCGPTN: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:164:21: 164:28

    bb0: {
        _0 = const 2147767344_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:164:31: 164:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:164:1: 164:42
    }
}

const NF_IP_LOCAL_OUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2299:28: 2299:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2299:38: 2299:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2299:1: 2299:40
    }
}

const KEYCTL_GET_KEYRING_ID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2748:34: 2748:37

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2748:40: 2748:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2748:1: 2748:42
    }
}

const J1939_NLA_SRC_ADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3236:31: 3236:38

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3236:41: 3236:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3236:1: 3236:43
    }
}

const LC_NAME_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:25: 688:32
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:35: 688:47

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_NAME); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:35: 688:47
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_NAME) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:35: 688:47
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:35: 688:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:688:1: 688:48
    }
}

const IFF_NOTRAILERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:650:27: 650:34

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:650:37: 650:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:650:1: 650:42
    }
}

const IGNCR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1105:18: 1105:28

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/mod.rs:1105:31: 1105:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1105:1: 1105:42
    }
}

const R15: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:729:16: 729:23

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:729:26: 729:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:729:1: 729:28
    }
}

const _SC_PAGE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1192:26: 1192:33

    bb0: {
        _0 = const _SC_PAGESIZE;         // scope 0 at src/unix/linux_like/linux/mod.rs:1192:36: 1192:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1192:1: 1192:49
    }
}

const SYS_close: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:82:22: 82:30

    bb0: {
        _0 = const 3_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:82:33: 82:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:82:1: 82:35
    }
}

const PR_FPEMU_NOPRINT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1675:29: 1675:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1675:39: 1675:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1675:1: 1675:41
    }
}

const NFULA_CFG_CMD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2128:26: 2128:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2128:36: 2128:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2128:1: 2128:38
    }
}

const RTM_F_CLONED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2581:25: 2581:33

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2581:36: 2581:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2581:1: 2581:42
    }
}

const LINUX_REBOOT_MAGIC2C: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3078:33: 3078:40

    bb0: {
        _0 = const 537993216_i32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3078:43: 3078:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3078:1: 3078:53
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::glob_t) -> linux::glob_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::glob_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn CPU_COUNT(_1: &linux::cpu_set_t) -> i32 {
    debug cpuset => _1;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3314:45: 3314:52
    let mut _2: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3315:21: 3315:50
    let mut _3: &unix::linux_like::linux::cpu_set_t; // in scope 0 at src/unix/linux_like/linux/mod.rs:3315:52: 3315:58

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3315:21: 3315:50
        _2 = core::mem::size_of::<linux::cpu_set_t>() -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3315:21: 3315:50
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3315:21: 3315:48
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::cpu_set_t>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3315:52: 3315:58
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3315:52: 3315:58
        _0 = CPU_COUNT_S(move _2, move _3) -> bb2; // scope 0 at src/unix/linux_like/linux/mod.rs:3315:9: 3315:59
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3315:9: 3315:20
                                         // + literal: Const { ty: for<'r> unsafe extern "C" fn(usize, &'r unix::linux_like::linux::cpu_set_t) -> i32 {unix::linux_like::linux::CPU_COUNT_S}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3315:58: 3315:59
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3315:58: 3315:59
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_MONOTONIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:492:28: 492:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:492:42: 492:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:492:1: 492:44
    }
}

const STATX_ATTR_NODUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1020:30: 1020:37

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1020:40: 1020:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1020:1: 1020:47
    }
}

const IPV6_TCLASS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:940:24: 940:31

    bb0: {
        _0 = const 67_i32;               // scope 0 at src/unix/linux_like/mod.rs:940:34: 940:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:940:1: 940:37
    }
}

const b64::x86_64::__SIZEOF_PTHREAD_CONDATTR_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:592:40: 592:45

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:592:48: 592:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:592:1: 592:50
    }
}

fn CMSG_DATA(_1: *const gnu::cmsghdr) -> *mut u8 {
    debug cmsg => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: *mut u8;                 // return place in scope 0 at src/unix/linux_like/mod.rs:1501:47: 1501:61
    let mut _2: *const unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:23
    let mut _3: *const unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:13

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:23
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:13
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:13
        _2 = ptr::const_ptr::<impl *const gnu::cmsghdr>::offset(move _3, const 1_isize) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:23
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1502:14: 1502:20
                                         // + literal: Const { ty: unsafe fn(*const unix::linux_like::linux::gnu::cmsghdr, isize) -> *const unix::linux_like::linux::gnu::cmsghdr {core::ptr::const_ptr::<impl *const unix::linux_like::linux::gnu::cmsghdr>::offset}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1502:22: 1502:23
        _0 = move _2 as *mut u8 (Misc);  // scope 0 at src/unix/linux_like/mod.rs:1502:9: 1502:41
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1502:40: 1502:41
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_MULTI_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1465:28: 1465:35

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1465:38: 1465:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1465:1: 1465:45
    }
}

const SYS_inotify_add_watch: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:333:34: 333:42

    bb0: {
        _0 = const 254_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:333:45: 333:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:333:1: 333:49
    }
}

const ETH_P_CUST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1986:23: 1986:30

    bb0: {
        _0 = const 24582_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1986:33: 1986:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1986:1: 1986:40
    }
}

const NUD_FAILED: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2440:23: 2440:26

    bb0: {
        _0 = const 32_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2440:29: 2440:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2440:1: 2440:34
    }
}

const NFT_META_SKGID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2917:27: 2917:34

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2917:37: 2917:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2917:1: 2917:40
    }
}

const CPU_SETSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:848:24: 848:31

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:848:34: 848:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:848:1: 848:40
    }
}

const MSG_WAITFORONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:779:27: 779:34

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/mod.rs:779:37: 779:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:779:1: 779:45
    }
}

const IPTOS_PREC_FLASHOVERRIDE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1260:37: 1260:39

    bb0: {
        _0 = const 128_u8;               // scope 0 at src/unix/linux_like/mod.rs:1260:42: 1260:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1260:1: 1260:47
    }
}

const EBADFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:444:19: 444:26

    bb0: {
        _0 = const 77_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:444:29: 444:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:444:1: 444:32
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::stat) -> b64::x86_64::stat {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::stat; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AT_EUID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1318:20: 1318:29

    bb0: {
        _0 = const 12_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1318:32: 1318:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1318:1: 1318:35
    }
}

const SYS_rt_sigpending: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:206:30: 206:38

    bb0: {
        _0 = const 127_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:206:41: 206:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:206:1: 206:45
    }
}

const IPV6_FLOWINFO_PRIORITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1839:35: 1839:42

    bb0: {
        _0 = const 267386880_i32;        // scope 0 at src/unix/linux_like/linux/mod.rs:1839:45: 1839:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1839:1: 1839:56
    }
}

const TCSETSF2: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:161:21: 161:28

    bb0: {
        _0 = const 1076646957_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:161:31: 161:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:161:1: 161:42
    }
}

const NF_IP_PRE_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2296:30: 2296:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2296:40: 2296:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2296:1: 2296:42
    }
}

const KEY_REQKEY_DEFL_USER_SESSION_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2744:49: 2744:52

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2744:55: 2744:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2744:1: 2744:57
    }
}

const J1939_NLA_PGN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3233:26: 3233:33

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3233:36: 3233:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3233:1: 3233:38
    }
}

const LC_MEASUREMENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:685:27: 685:34

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:685:37: 685:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:685:1: 685:40
    }
}

const IFF_DEBUG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:647:22: 647:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:647:32: 647:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:647:1: 647:36
    }
}

const INPCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1102:18: 1102:28

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/mod.rs:1102:31: 1102:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1102:1: 1102:42
    }
}

const KEYCTL_CAPS1_NS_KEYRING_NAME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:979:49: 979:52

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:979:55: 979:59
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:979:9: 979:60
    }
}

const TOSTOP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:724:19: 724:29

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:724:32: 724:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:724:1: 724:43
    }
}

const _SC_MQ_PRIO_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1189:28: 1189:35

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1189:38: 1189:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1189:1: 1189:41
    }
}

const SYS_read: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:79:21: 79:29

    bb0: {
        _0 = const 0_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:79:32: 79:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:79:1: 79:34
    }
}

const PR_SET_KEEPCAPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1671:28: 1671:35

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1671:38: 1671:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1671:1: 1671:40
    }
}

const NFULNL_CFG_CMD_PF_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2124:35: 2124:42

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2124:45: 2124:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2124:1: 2124:47
    }
}

const RTM_DELNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2577:24: 2577:27

    bb0: {
        _0 = const 89_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2577:30: 2577:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2577:1: 2577:33
    }
}

const LINUX_REBOOT_MAGIC2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3075:32: 3075:39

    bb0: {
        _0 = const 672274793_i32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3075:42: 3075:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3075:1: 3075:52
    }
}

fn CPU_CLR(_1: usize, _2: &mut linux::cpu_set_t) -> () {
    debug cpu => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    debug cpuset => _2;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3291:59: 3291:61
    let _3: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3292:13: 3292:25
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3293:19: 3293:54
    let mut _5: &u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
    let _6: &u64;                        // in scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
    let _7: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3293:51: 3293:52
    let mut _10: (usize, usize);         // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:29: 3294:69
    let mut _11: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:33
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:36: 3294:48
    let mut _14: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
    let mut _15: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:53
    let mut _17: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:56: 3294:68
    let mut _18: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
    let mut _19: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:29: 3295:43
    let mut _20: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:30: 3295:43
    let mut _21: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:36: 3295:42
    let _22: usize;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:21: 3295:24
    let mut _23: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:25
    let mut _24: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:25
    scope 1 {
        debug size_in_bits => _3;        // in scope 1 at src/unix/linux_like/linux/mod.rs:3292:13: 3292:25
        let _8: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3294:14: 3294:17
        let _9: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3294:19: 3294:25
        scope 2 {
            debug idx => _8;             // in scope 2 at src/unix/linux_like/linux/mod.rs:3294:14: 3294:17
            debug offset => _9;          // in scope 2 at src/unix/linux_like/linux/mod.rs:3294:19: 3294:25
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3292:13: 3292:25
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:19: 3293:54
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:51: 3293:52
        _7 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:3293:51: 3293:52
        _6 = &((*_2).0: [u64; 16])[_7];  // scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
        _5 = _6;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3293:38: 3293:53
        _4 = core::mem::size_of_val::<u64>(move _5) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3293:19: 3293:54
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3293:19: 3293:37
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:53: 3293:54
        _3 = Mul(const 8_usize, move _4); // scope 0 at src/unix/linux_like/linux/mod.rs:3293:15: 3293:54
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:53: 3293:54
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:53: 3293:54
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3293:53: 3293:54
        StorageLive(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:29: 3294:69
        StorageLive(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
        StorageLive(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:33
        _12 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:33
        StorageLive(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:36: 3294:48
        _13 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3294:36: 3294:48
        _14 = Eq(_13, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
        assert(!move _14, "attempt to divide `{}` by zero", _12) -> bb2; // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
    }

    bb2: {
        _11 = Div(move _12, move _13);   // scope 1 at src/unix/linux_like/linux/mod.rs:3294:30: 3294:48
        StorageDead(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:47: 3294:48
        StorageDead(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:47: 3294:48
        StorageLive(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
        StorageLive(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:53
        _16 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:53
        StorageLive(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:56: 3294:68
        _17 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3294:56: 3294:68
        _18 = Eq(_17, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
        assert(!move _18, "attempt to calculate the remainder of `{}` with a divisor of zero", _16) -> bb3; // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
    }

    bb3: {
        _15 = Rem(move _16, move _17);   // scope 1 at src/unix/linux_like/linux/mod.rs:3294:50: 3294:68
        StorageDead(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:67: 3294:68
        StorageDead(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:67: 3294:68
        (_10.0: usize) = move _11;       // scope 1 at src/unix/linux_like/linux/mod.rs:3294:29: 3294:69
        (_10.1: usize) = move _15;       // scope 1 at src/unix/linux_like/linux/mod.rs:3294:29: 3294:69
        StorageDead(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:68: 3294:69
        StorageDead(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:68: 3294:69
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3294:14: 3294:17
        _8 = (_10.0: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3294:14: 3294:17
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3294:19: 3294:25
        _9 = (_10.1: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3294:19: 3294:25
        StorageDead(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3294:68: 3294:69
        StorageLive(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:29: 3295:43
        StorageLive(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:30: 3295:43
        StorageLive(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:36: 3295:42
        _21 = _9;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3295:36: 3295:42
        _20 = Shl(const 1_u64, move _21); // scope 2 at src/unix/linux_like/linux/mod.rs:3295:30: 3295:43
        StorageDead(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:42: 3295:43
        _19 = Not(move _20);             // scope 2 at src/unix/linux_like/linux/mod.rs:3295:29: 3295:43
        StorageDead(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:42: 3295:43
        StorageLive(_22);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:21: 3295:24
        _22 = _8;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3295:21: 3295:24
        _23 = const 16_usize;            // scope 2 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:25
        _24 = Lt(_22, _23);              // scope 2 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:25
        assert(move _24, "index out of bounds: the length is {} but the index is {}", move _23, _22) -> bb4; // scope 2 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:25
    }

    bb4: {
        ((*_2).0: [u64; 16])[_22] = BitAnd(((*_2).0: [u64; 16])[_22], move _19); // scope 2 at src/unix/linux_like/linux/mod.rs:3295:9: 3295:43
        StorageDead(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:42: 3295:43
        StorageDead(_22);                // scope 2 at src/unix/linux_like/linux/mod.rs:3295:42: 3295:43
        StorageDead(_9);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_8);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const PTHREAD_CREATE_JOINABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:488:36: 488:43

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:488:46: 488:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:488:1: 488:48
    }
}

const STATX_ATTR_COMPRESSED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1017:34: 1017:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1017:44: 1017:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1017:1: 1017:51
    }
}

const IPV6_PATHMTU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:937:25: 937:32

    bb0: {
        _0 = const 61_i32;               // scope 0 at src/unix/linux_like/mod.rs:937:35: 937:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:937:1: 937:38
    }
}

const SA_NOCLDSTOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:586:25: 586:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:586:35: 586:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:586:1: 586:46
    }
}

const XENFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1429:38: 1429:46

    bb0: {
        _0 = const 2881100148_i64;       // scope 0 at src/unix/linux_like/mod.rs:1429:49: 1429:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1429:9: 1429:60
    }
}

const IFF_ONE_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1462:26: 1462:33

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1462:36: 1462:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1462:1: 1462:43
    }
}

const SYS_ioprio_set: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:330:27: 330:35

    bb0: {
        _0 = const 251_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:330:38: 330:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:330:1: 330:42
    }
}

const ETH_P_DNA_RT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1983:25: 1983:32

    bb0: {
        _0 = const 24579_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1983:35: 1983:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1983:1: 1983:42
    }
}

const NUD_STALE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2437:22: 2437:25

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2437:28: 2437:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2437:1: 2437:33
    }
}

const NFT_META_IIFTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2914:29: 2914:36

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2914:39: 2914:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2914:1: 2914:41
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &af_alg_iv) -> af_alg_iv {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::af_alg_iv; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const O_ACCMODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:831:22: 831:29

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:831:32: 831:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:831:1: 831:34
    }
}

const MSG_ERRQUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:776:25: 776:32

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/mod.rs:776:35: 776:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:776:1: 776:42
    }
}

const IPTOS_PREC_NETCONTROL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1257:34: 1257:36

    bb0: {
        _0 = const 224_u8;               // scope 0 at src/unix/linux_like/mod.rs:1257:39: 1257:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1257:1: 1257:44
    }
}

const EMULTIHOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:441:22: 441:29

    bb0: {
        _0 = const 72_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:441:32: 441:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:441:1: 441:35
    }
}

const AT_ENTRY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1315:21: 1315:30

    bb0: {
        _0 = const 9_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1315:33: 1315:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1315:1: 1315:35
    }
}

const SYS_getsid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:203:23: 203:31

    bb0: {
        _0 = const 124_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:203:34: 203:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:203:1: 203:38
    }
}

const IPV6_RECVFRAGSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1836:30: 1836:37

    bb0: {
        _0 = const 77_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1836:40: 1836:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1836:1: 1836:43
    }
}

const TCGETS2: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:158:20: 158:27

    bb0: {
        _0 = const 2150388778_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:158:30: 158:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:158:1: 158:41
    }
}

const NFPROTO_NETDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2290:27: 2290:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2290:37: 2290:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2290:1: 2290:39
    }
}

const KEY_REQKEY_DEFL_PROCESS_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2741:44: 2741:47

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2741:50: 2741:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2741:1: 2741:52
    }
}

const J1939_NLA_PAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3230:26: 3230:33

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3230:36: 3230:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3230:1: 3230:38
    }
}

const LC_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:682:20: 682:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:682:30: 682:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:682:1: 682:32
    }
}

const MADV_HWPOISON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:643:26: 643:33

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/mod.rs:643:36: 643:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:643:1: 643:40
    }
}

const BRKINT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1099:19: 1099:29

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/mod.rs:1099:32: 1099:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1099:1: 1099:43
    }
}

const KEYCTL_CAPS0_INVALIDATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:976:44: 976:47

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:976:50: 976:54
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:976:9: 976:55
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sockaddr_ll) -> sockaddr_ll {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::sockaddr_ll; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const VEOL2: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:721:18: 721:23

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:721:26: 721:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:721:1: 721:29
    }
}

const _SC_AIO_PRIO_DELTA_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1186:35: 1186:42

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1186:45: 1186:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1186:1: 1186:48
    }
}

const PR_UNALIGN_NOPRINT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1667:31: 1667:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1667:41: 1667:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1667:1: 1667:43
    }
}

const PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP: linux::pthread_mutex_t = {
    let mut _0: unix::linux_like::linux::pthread_mutex_t; // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:44:54: 44:71
    let mut _1: [u8; 40];                // in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:46:19: 49:14

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:46:19: 49:14
        _1 = [const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 3_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8]; // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:46:19: 49:14
        (_0.0: [u8; 40]) = move _1;      // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const NFULNL_CFG_CMD_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2121:32: 2121:39

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2121:42: 2121:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2121:1: 2121:44
    }
}

const RTM_DELMDB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2574:23: 2574:26

    bb0: {
        _0 = const 85_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2574:29: 2574:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2574:1: 2574:32
    }
}

const FUTEX_CLOCK_REALTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3070:33: 3070:40

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3070:43: 3070:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3070:1: 3070:47
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::rlimit64) -> linux::rlimit64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::rlimit64; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn CPU_ALLOC_SIZE(_1: i32) -> usize {
    debug count => _1;                   // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3271:46: 3271:54
    let _2: unix::linux_like::linux::cpu_set_t; // in scope 0 at src/unix/linux_like/linux/mod.rs:3272:13: 3272:19
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3273:32: 3273:67
    let mut _5: &u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
    let _6: &u64;                        // in scope 0 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
    let _7: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3273:64: 3273:65
    let mut _8: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3274:10: 3274:48
    let mut _9: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:43
    let mut _10: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:28
    let mut _11: i32;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:16
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3274:31: 3274:43
    scope 1 {
        debug _dummy => _2;              // in scope 1 at src/unix/linux_like/linux/mod.rs:3272:13: 3272:19
        let _3: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3273:13: 3273:25
        scope 2 {
            debug size_in_bits => _3;    // in scope 2 at src/unix/linux_like/linux/mod.rs:3273:13: 3273:25
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3272:13: 3272:19
        _2 = zeroed::<linux::cpu_set_t>() -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3272:33: 3272:48
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3272:33: 3272:46
                                         // + literal: Const { ty: unsafe fn() -> unix::linux_like::linux::cpu_set_t {core::mem::zeroed::<unix::linux_like::linux::cpu_set_t>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageLive(_3);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:13: 3273:25
        StorageLive(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:32: 3273:67
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:64: 3273:65
        _7 = const 0_usize;              // scope 1 at src/unix/linux_like/linux/mod.rs:3273:64: 3273:65
        _6 = &(_2.0: [u64; 16])[_7];     // scope 1 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
        _5 = _6;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3273:51: 3273:66
        _4 = core::mem::size_of_val::<u64>(move _5) -> bb2; // scope 1 at src/unix/linux_like/linux/mod.rs:3273:32: 3273:67
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3273:32: 3273:50
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:66: 3273:67
        _3 = Mul(const 8_usize, move _4); // scope 1 at src/unix/linux_like/linux/mod.rs:3273:28: 3273:67
        StorageDead(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:66: 3273:67
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:66: 3273:67
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3273:66: 3273:67
        StorageLive(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3274:10: 3274:48
        StorageLive(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:43
        StorageLive(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:28
        StorageLive(_11);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:16
        _11 = _1;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:16
        _10 = move _11 as usize (Misc);  // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:28
        StorageDead(_11);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:27: 3274:28
        StorageLive(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:31: 3274:43
        _12 = _3;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3274:31: 3274:43
        _9 = Add(move _10, move _12);    // scope 2 at src/unix/linux_like/linux/mod.rs:3274:11: 3274:43
        StorageDead(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:42: 3274:43
        StorageDead(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3274:42: 3274:43
        _8 = Sub(move _9, const 1_usize); // scope 2 at src/unix/linux_like/linux/mod.rs:3274:10: 3274:48
        StorageDead(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3274:47: 3274:48
        _0 = Div(move _8, const 8_usize); // scope 2 at src/unix/linux_like/linux/mod.rs:3274:9: 3274:53
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3274:52: 3274:53
        StorageDead(_3);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_2);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const F_SEAL_GROW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:481:24: 481:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:481:34: 481:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:481:1: 481:41
    }
}

const STATX_MNT_ID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1014:25: 1014:33

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1014:36: 1014:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1014:1: 1014:43
    }
}

const IPV6_RECVDSTOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:934:29: 934:36

    bb0: {
        _0 = const 58_i32;               // scope 0 at src/unix/linux_like/mod.rs:934:39: 934:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:934:1: 934:42
    }
}

const SA_NODEFER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:583:23: 583:30

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:583:33: 583:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:583:1: 583:44
    }
}

const TRACEFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1426:34: 1426:42

    bb0: {
        _0 = const 1953653091_i64;       // scope 0 at src/unix/linux_like/mod.rs:1426:45: 1426:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1426:9: 1426:56
    }
}

const TUN_TUN_DEV: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1458:24: 1458:33

    bb0: {
        _0 = const linux::IFF_TUN as i16 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1458:36: 1458:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1458:1: 1458:59
    }
}

const SYS_add_key: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:327:24: 327:32

    bb0: {
        _0 = const 248_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:327:35: 327:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:327:1: 327:39
    }
}

const ETH_P_DEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1980:22: 1980:29

    bb0: {
        _0 = const 24576_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1980:32: 1980:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1980:1: 1980:39
    }
}

const NUD_NONE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2434:21: 2434:24

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2434:27: 2434:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2434:1: 2434:32
    }
}

const NFT_META_OIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2911:25: 2911:32

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2911:35: 2911:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2911:1: 2911:37
    }
}

uinput_user_dev::absflat::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:646:32: 646:39

    bb0: {
        _0 = const ABS_CNT;              // scope 0 at src/unix/linux_like/linux/mod.rs:646:32: 646:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:646:32: 646:39
    }
}

const _SC_LEVEL4_CACHE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:828:34: 828:41

    bb0: {
        _0 = const 197_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:828:44: 828:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:828:1: 828:48
    }
}

const MSG_SYN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:773:20: 773:27

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:773:30: 773:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:773:1: 773:36
    }
}

const IPTOS_THROUGHPUT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1253:29: 1253:31

    bb0: {
        _0 = const 8_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1253:34: 1253:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1253:1: 1253:39
    }
}

const ENOANO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:438:19: 438:26

    bb0: {
        _0 = const 55_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:438:29: 438:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:438:1: 438:32
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &arphdr) -> arphdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::arphdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AT_PAGESZ: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1312:22: 1312:31

    bb0: {
        _0 = const 6_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1312:34: 1312:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1312:1: 1312:36
    }
}

const SYS_getpgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:200:24: 200:32

    bb0: {
        _0 = const 121_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:200:35: 200:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:200:1: 200:39
    }
}

const IPV6_FLOWINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1833:26: 1833:33

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1833:36: 1833:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1833:1: 1833:39
    }
}

const TIOCSBRK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:155:21: 155:28

    bb0: {
        _0 = const 21543_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:155:31: 155:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:155:1: 155:38
    }
}

const NFPROTO_DECNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2287:27: 2287:34

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2287:37: 2287:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2287:1: 2287:40
    }
}

const KEY_REQKEY_DEFL_NO_CHANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2738:38: 2738:41

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2738:44: 2738:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2738:1: 2738:47
    }
}

const SCM_J1939_DEST_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3226:32: 3226:39

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3226:42: 3226:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3226:1: 3226:44
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__c_anonymous_sockaddr_can_j1939) -> __c_anonymous_sockaddr_can_j1939 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SOL_XDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:677:20: 677:27

    bb0: {
        _0 = const 283_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:677:30: 677:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:677:1: 677:34
    }
}

const MADV_NOHUGEPAGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:640:28: 640:35

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:640:38: 640:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:640:1: 640:41
    }
}

const VQUIT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1096:18: 1096:23

    bb0: {
        _0 = const 1_usize;              // scope 0 at src/unix/linux_like/mod.rs:1096:26: 1096:27
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1096:1: 1096:28
    }
}

const KEYCTL_CAPS0_DIFFIE_HELLMAN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:973:48: 973:51

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:973:54: 973:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:973:9: 973:59
    }
}

const B3500000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:717:21: 717:30

    bb0: {
        _0 = const 4110_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:717:33: 717:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:717:1: 717:42
    }
}

const _SC_SHARED_MEMORY_OBJECTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1183:38: 1183:45

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1183:48: 1183:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1183:1: 1183:51
    }
}

const PR_SET_DUMPABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1663:28: 1663:35

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1663:38: 1663:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1663:1: 1663:40
    }
}

not_x32::statvfs::__f_spare::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:19:30: 19:31

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:19:30: 19:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:19:30: 19:31
    }
}

const NFULA_HWLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2117:24: 2117:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2117:34: 2117:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2117:1: 2117:37
    }
}

const RTM_NEWNETCONF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2571:27: 2571:30

    bb0: {
        _0 = const 80_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2571:33: 2571:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2571:1: 2571:36
    }
}

const FUTEX_WAIT_REQUEUE_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3066:34: 3066:41

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3066:44: 3066:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3066:1: 3066:47
    }
}

const CANFD_MTU: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3179:30: 3179:35

    bb0: {
        _0 = core::mem::size_of::<canfd_frame>() -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3179:38: 3179:69
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3179:38: 3179:67
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::canfd_frame>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3179:9: 3179:70
    }
}

const F_GET_SEALS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:477:24: 477:31

    bb0: {
        _0 = const 1034_i32;             // scope 0 at src/unix/linux_like/mod.rs:477:34: 477:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:477:1: 477:39
    }
}

const STATX_BLOCKS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1011:25: 1011:33

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1011:36: 1011:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1011:1: 1011:43
    }
}

const IPV6_RTHDRDSTOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:931:30: 931:37

    bb0: {
        _0 = const 55_i32;               // scope 0 at src/unix/linux_like/mod.rs:931:40: 931:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:931:1: 931:43
    }
}

const ECOMM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:579:18: 579:25

    bb0: {
        _0 = const 70_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:579:28: 579:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:579:1: 579:31
    }
}

const SMB_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1423:36: 1423:44

    bb0: {
        _0 = const 20859_i64;            // scope 0 at src/unix/linux_like/mod.rs:1423:47: 1423:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1423:9: 1423:58
    }
}

const linux::IFF_TAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1453:20: 1453:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1453:30: 1453:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1453:1: 1453:37
    }
}

const SYS_mq_getsetattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:324:30: 324:38

    bb0: {
        _0 = const 245_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:324:41: 324:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:324:1: 324:45
    }
}

const ETH_P_IEEEPUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1977:26: 1977:33

    bb0: {
        _0 = const 2560_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1977:36: 1977:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1977:1: 1977:43
    }
}

const RT_CLASS_MAIN: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2429:26: 2429:28

    bb0: {
        _0 = const 254_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2429:31: 2429:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2429:1: 2429:35
    }
}

const NFT_META_PRIORITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2908:30: 2908:37

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2908:40: 2908:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2908:1: 2908:42
    }
}

const _SC_LEVEL3_CACHE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:825:34: 825:41

    bb0: {
        _0 = const 194_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:825:44: 825:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:825:1: 825:48
    }
}

const MSG_EOR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:770:20: 770:27

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/mod.rs:770:30: 770:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:770:1: 770:35
    }
}

const POLLRDBAND: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1246:23: 1246:32

    bb0: {
        _0 = const 128_i16;              // scope 0 at src/unix/linux_like/mod.rs:1246:35: 1246:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1246:1: 1246:41
    }
}

const EBADE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:435:18: 435:25

    bb0: {
        _0 = const 52_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:435:28: 435:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:435:1: 435:31
    }
}

const AT_PHDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1309:20: 1309:29

    bb0: {
        _0 = const 3_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1309:32: 1309:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1309:1: 1309:34
    }
}

const SYS_getresuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:197:26: 197:34

    bb0: {
        _0 = const 118_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:197:37: 197:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:197:1: 197:41
    }
}

const ENOATTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1827:20: 1827:27

    bb0: {
        _0 = const b64::x86_64::ENODATA; // scope 0 at src/unix/linux_like/linux/mod.rs:1827:30: 1827:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1827:1: 1827:40
    }
}

const TIOCSETD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:152:21: 152:28

    bb0: {
        _0 = const 21539_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:152:31: 152:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:152:1: 152:38
    }
}

const NFPROTO_ARP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2284:24: 2284:31

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2284:34: 2284:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2284:1: 2284:36
    }
}

const KEY_SPEC_GROUP_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2734:35: 2734:38

    bb0: {
        _0 = const -6_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2734:41: 2734:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2734:1: 2734:44
    }
}

const SO_J1939_SEND_PRIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3222:31: 3222:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3222:41: 3222:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3222:1: 3222:43
    }
}

const SOL_IUCV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:674:21: 674:28

    bb0: {
        _0 = const 277_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:674:31: 674:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:674:1: 674:35
    }
}

const MADV_MERGEABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:637:27: 637:34

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/mod.rs:637:37: 637:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:637:1: 637:40
    }
}

const VERASE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1093:19: 1093:24

    bb0: {
        _0 = const 2_usize;              // scope 0 at src/unix/linux_like/mod.rs:1093:27: 1093:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1093:1: 1093:29
    }
}

const KEYCTL_CAPABILITIES: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:969:40: 969:43

    bb0: {
        _0 = const 31_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:969:46: 969:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:969:9: 969:49
    }
}

const B2000000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:714:21: 714:30

    bb0: {
        _0 = const 4107_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:714:33: 714:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:714:1: 714:42
    }
}

const _SC_MEMORY_PROTECTION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1180:34: 1180:41

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1180:44: 1180:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1180:1: 1180:47
    }
}

ucontext_t::__private::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:291:25: 291:28

    bb0: {
        _0 = const 512_usize;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:291:25: 291:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:291:25: 291:28
    }
}

const PR_SET_PDEATHSIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1659:29: 1659:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1659:39: 1659:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1659:1: 1659:41
    }
}

const NFULA_GID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2114:22: 2114:29

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2114:32: 2114:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2114:1: 2114:35
    }
}

const RTM_GETADDRLABEL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2568:29: 2568:32

    bb0: {
        _0 = const 74_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2568:35: 2568:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2568:1: 2568:38
    }
}

const FUTEX_TRYLOCK_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3063:29: 3063:36

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3063:39: 3063:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3063:1: 3063:41
    }
}

const NFT_MSG_DELOBJ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2854:35: 2854:42

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2854:45: 2854:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2854:9: 2854:48
    }
}

const F_SETPIPE_SZ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:474:25: 474:32

    bb0: {
        _0 = const 1031_i32;             // scope 0 at src/unix/linux_like/mod.rs:474:35: 474:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:474:1: 474:40
    }
}

const STATX_CTIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1008:24: 1008:32

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1008:35: 1008:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1008:1: 1008:42
    }
}

const IPV6_HOPLIMIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:928:26: 928:33

    bb0: {
        _0 = const 52_i32;               // scope 0 at src/unix/linux_like/mod.rs:928:36: 928:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:928:1: 928:39
    }
}

const ENOLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:576:20: 576:27

    bb0: {
        _0 = const 67_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:576:30: 576:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:576:1: 576:33
    }
}

const SECURITYFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1420:37: 1420:45

    bb0: {
        _0 = const 1935894131_i64;       // scope 0 at src/unix/linux_like/mod.rs:1420:48: 1420:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1420:9: 1420:59
    }
}

const IFLA_INFO_SLAVE_KIND: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1448:33: 1448:43

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1448:46: 1448:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1448:1: 1448:48
    }
}

const SYS_mq_timedsend: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:321:29: 321:37

    bb0: {
        _0 = const 242_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:321:40: 321:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:321:1: 321:44
    }
}

const ETH_P_X25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1974:22: 1974:29

    bb0: {
        _0 = const 2053_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1974:32: 1974:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1974:1: 1974:39
    }
}

const RTF_ADDRCLASSMASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2425:30: 2425:33

    bb0: {
        _0 = const 4160749568_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2425:36: 2425:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2425:1: 2425:47
    }
}

const NFT_PAYLOAD_CSUM_INET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2904:34: 2904:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2904:44: 2904:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2904:1: 2904:46
    }
}

uinput_user_dev::absmax::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:643:31: 643:38

    bb0: {
        _0 = const ABS_CNT;              // scope 0 at src/unix/linux_like/linux/mod.rs:643:31: 643:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:643:31: 643:38
    }
}

const _SC_LEVEL2_CACHE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:822:34: 822:41

    bb0: {
        _0 = const 191_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:822:44: 822:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:822:1: 822:48
    }
}

const MSG_CTRUNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:767:23: 767:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:767:33: 767:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:767:1: 767:35
    }
}

const POLLHUP: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1243:20: 1243:29

    bb0: {
        _0 = const 16_i16;               // scope 0 at src/unix/linux_like/mod.rs:1243:32: 1243:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1243:1: 1243:37
    }
}

const EUNATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:432:20: 432:27

    bb0: {
        _0 = const 49_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:432:30: 432:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:432:1: 432:33
    }
}

b64::x86_64::siginfo_t::_pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:65:29: 65:31

    bb0: {
        _0 = const 29_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:65:29: 65:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:65:29: 65:31
    }
}

const AT_NULL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1306:20: 1306:29

    bb0: {
        _0 = const 0_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1306:32: 1306:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1306:1: 1306:34
    }
}

const SYS_getgroups: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:194:26: 194:34

    bb0: {
        _0 = const 115_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:194:37: 194:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:194:1: 194:41
    }
}

const FALLOC_FL_ZERO_RANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1819:33: 1819:40

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1819:43: 1819:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1819:1: 1819:48
    }
}

const TIOCPKT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:149:20: 149:27

    bb0: {
        _0 = const 21536_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:149:30: 149:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:149:1: 149:37
    }
}

const NF_INET_NUMHOOKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2279:29: 2279:36

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2279:39: 2279:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2279:1: 2279:41
    }
}

const KEY_SPEC_SESSION_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2731:37: 2731:40

    bb0: {
        _0 = const -3_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2731:43: 2731:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2731:1: 2731:46
    }
}

const J1939_NO_PGN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3218:25: 3218:33

    bb0: {
        _0 = const 262144_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:3218:36: 3218:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3218:1: 3218:44
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__c_anonymous_sockaddr_can_tp) -> __c_anonymous_sockaddr_can_tp {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::__c_anonymous_sockaddr_can_tp; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SOL_PPPOL2TP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:671:25: 671:32

    bb0: {
        _0 = const 273_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:671:35: 671:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:671:1: 671:39
    }
}

const MADV_REMOVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:634:24: 634:31

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:634:34: 634:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:634:1: 634:36
    }
}

const FF0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1090:16: 1090:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1090:29: 1090:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1090:1: 1090:40
    }
}

const BINDERFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:840:41: 840:49

    bb0: {
        _0 = const 1819242352_i64;       // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:840:52: 840:62
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:840:9: 840:63
    }
}

const B1000000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:711:21: 711:30

    bb0: {
        _0 = const 4104_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:711:33: 711:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:711:1: 711:42
    }
}

const _SC_MAPPED_FILES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1177:29: 1177:36

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1177:39: 1177:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1177:1: 1177:42
    }
}

const MREMAP_MAYMOVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1655:27: 1655:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1655:37: 1655:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1655:1: 1655:39
    }
}

const NFULA_UID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2111:22: 2111:29

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2111:32: 2111:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2111:1: 2111:35
    }
}

const RTM_NEWNDUSEROPT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2565:29: 2565:32

    bb0: {
        _0 = const 68_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2565:35: 2565:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2565:1: 2565:38
    }
}

const FUTEX_WAKE_OP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3060:26: 3060:33

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3060:36: 3060:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3060:1: 3060:38
    }
}

const SOF_TXTIME_REPORT_ERRORS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2666:45: 2666:48
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2666:51: 2666:57

    bb0: {
        _1 = CheckedShl(const 1_u32, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2666:51: 2666:57
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2666:51: 2666:57
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2666:51: 2666:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2666:9: 2666:58
    }
}

const F_NOTIFY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:471:21: 471:28

    bb0: {
        _0 = const 1026_i32;             // scope 0 at src/unix/linux_like/mod.rs:471:31: 471:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:471:1: 471:36
    }
}

const STATX_GID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1005:22: 1005:30

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1005:33: 1005:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1005:1: 1005:40
    }
}

const IPV6_RECVPKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:925:29: 925:36

    bb0: {
        _0 = const 49_i32;               // scope 0 at src/unix/linux_like/mod.rs:925:39: 925:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:925:1: 925:42
    }
}

const ENONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:573:19: 573:26

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:573:29: 573:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:573:1: 573:32
    }
}

const QNX6_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1417:37: 1417:45

    bb0: {
        _0 = const 1746473250_i64;       // scope 0 at src/unix/linux_like/mod.rs:1417:48: 1417:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1417:9: 1417:59
    }
}

_libc_fpstate::_st::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:173:33: 173:34

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:173:33: 173:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:173:33: 173:34
    }
}

const IFLA_INFO_KIND: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1445:27: 1445:37

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1445:40: 1445:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1445:1: 1445:42
    }
}

const SYS_get_mempolicy: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:318:30: 318:38

    bb0: {
        _0 = const 239_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:318:41: 318:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:318:1: 318:45
    }
}

const ETH_P_PUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1971:22: 1971:29

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1971:32: 1971:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1971:1: 1971:39
    }
}

const RTF_MULTICAST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2422:26: 2422:29

    bb0: {
        _0 = const 536870912_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:2422:32: 2422:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2422:1: 2422:43
    }
}

const NFT_PAYLOAD_NETWORK_HEADER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2900:39: 2900:46

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2900:49: 2900:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2900:1: 2900:51
    }
}

const _SC_LEVEL1_DCACHE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:819:35: 819:42

    bb0: {
        _0 = const 188_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:819:45: 819:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:819:1: 819:49
    }
}

const MSG_OOB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:764:20: 764:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:764:30: 764:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:764:1: 764:32
    }
}

const POLLPRI: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1240:20: 1240:29

    bb0: {
        _0 = const 2_i16;                // scope 0 at src/unix/linux_like/mod.rs:1240:32: 1240:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1240:1: 1240:36
    }
}

const EL3HLT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:429:19: 429:26

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:429:29: 429:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:429:1: 429:32
    }
}

const _SC_THREAD_ROBUST_PRIO_PROTECT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1301:43: 1301:50

    bb0: {
        _0 = const 248_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1301:53: 1301:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1301:1: 1301:57
    }
}

const SYS_setsid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:191:23: 191:31

    bb0: {
        _0 = const 112_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:191:34: 191:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:191:1: 191:38
    }
}

const FALLOC_FL_KEEP_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1816:32: 1816:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1816:42: 1816:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1816:1: 1816:47
    }
}

const TIOCCONS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:146:21: 146:28

    bb0: {
        _0 = const 21533_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:146:31: 146:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:146:1: 146:38
    }
}

const NF_INET_FORWARD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2276:28: 2276:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2276:38: 2276:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2276:1: 2276:40
    }
}

const IN_DONT_FOLLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2725:27: 2725:30

    bb0: {
        _0 = const 33554432_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2725:33: 2725:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2725:1: 2725:45
    }
}

const J1939_PGN_ADDRESS_COMMANDED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3215:40: 3215:48

    bb0: {
        _0 = const 65240_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:3215:51: 3215:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3215:1: 3215:59
    }
}

const SOCK_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:667:26: 667:33

    bb0: {
        _0 = const b64::x86_64::O_NONBLOCK; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:667:36: 667:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:667:1: 667:47
    }
}

const MADV_WILLNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:631:26: 631:33

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:631:36: 631:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:631:1: 631:38
    }
}

const NL1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1087:16: 1087:26

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/mod.rs:1087:29: 1087:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1087:1: 1087:40
    }
}

utmpx::ut_addr_v6::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:488:31: 488:32

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:488:31: 488:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:488:31: 488:32
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::addrinfo) -> linux_like::addrinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::addrinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const B500000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:708:20: 708:29

    bb0: {
        _0 = const 4101_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:708:32: 708:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:708:1: 708:41
    }
}

const _SC_PRIORITIZED_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1174:31: 1174:38

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1174:41: 1174:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1174:1: 1174:44
    }
}

const SYNC_FILE_RANGE_WAIT_BEFORE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1629:40: 1629:48

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1629:51: 1629:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1629:1: 1629:53
    }
}

const NFULA_HWADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2108:25: 2108:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2108:35: 2108:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2108:1: 2108:37
    }
}

const RTM_NEWNEIGHTBL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2562:28: 2562:31

    bb0: {
        _0 = const 64_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2562:34: 2562:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2562:1: 2562:37
    }
}

const FUTEX_FD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3057:21: 3057:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3057:31: 3057:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3057:1: 3057:33
    }
}

const UDP_SEGMENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1650:32: 1650:39

    bb0: {
        _0 = const 103_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1650:42: 1650:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1650:9: 1650:46
    }
}

const F_SETFL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:466:20: 466:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:466:30: 466:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:466:1: 466:32
    }
}

const STATX_MODE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1002:23: 1002:31

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1002:34: 1002:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1002:1: 1002:41
    }
}

const IPV6_IPSEC_POLICY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:922:30: 922:37

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/mod.rs:922:40: 922:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:922:1: 922:43
    }
}

const b64::x86_64::ENODATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:570:20: 570:27

    bb0: {
        _0 = const 61_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:570:30: 570:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:570:1: 570:33
    }
}

const OVERLAYFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1414:42: 1414:50

    bb0: {
        _0 = const 2035054128_i64;       // scope 0 at src/unix/linux_like/mod.rs:1414:53: 1414:63
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1414:9: 1414:64
    }
}

const IFLA_PERM_ADDRESS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1441:30: 1441:40

    bb0: {
        _0 = const 54_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1441:43: 1441:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1441:1: 1441:46
    }
}

const SYS_vserver: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:315:24: 315:32

    bb0: {
        _0 = const 236_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:315:35: 315:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:315:1: 315:39
    }
}

const ETH_FRAME_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1966:26: 1966:33

    bb0: {
        _0 = const 1514_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1966:36: 1966:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1966:1: 1966:41
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &fanotify_event_metadata) -> fanotify_event_metadata {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::fanotify_event_metadata; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTCF_DIRECTSRC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2418:27: 2418:30

    bb0: {
        _0 = const 67108864_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2418:33: 2418:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2418:1: 2418:44
    }
}

const NFT_DYNSET_OP_UPDATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2895:33: 2895:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2895:43: 2895:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2895:1: 2895:45
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_effect) -> ff_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_LEVEL1_ICACHE_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:816:35: 816:42

    bb0: {
        _0 = const 185_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:816:45: 816:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:816:1: 816:49
    }
}

const PF_CAIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:759:20: 759:27

    bb0: {
        _0 = const AF_CAIF;              // scope 0 at src/unix/linux_like/mod.rs:759:30: 759:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:759:1: 759:38
    }
}

const UTIME_OMIT: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1236:23: 1236:29

    bb0: {
        _0 = const 1073741822_i64;       // scope 0 at src/unix/linux_like/mod.rs:1236:32: 1236:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1236:1: 1236:43
    }
}

const EIDRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:426:18: 426:25

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:426:28: 426:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:426:1: 426:31
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::siginfo_t) -> b64::x86_64::siginfo_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_TRACE_USER_EVENT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1298:37: 1298:44

    bb0: {
        _0 = const 245_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1298:47: 1298:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1298:1: 1298:51
    }
}

const SYS_setpgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:188:24: 188:32

    bb0: {
        _0 = const 109_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:188:35: 188:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:188:1: 188:39
    }
}

const TFD_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1811:25: 1811:32

    bb0: {
        _0 = const b64::x86_64::O_NONBLOCK; // scope 0 at src/unix/linux_like/linux/mod.rs:1811:35: 1811:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1811:1: 1811:46
    }
}

const FIONREAD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:143:21: 143:28

    bb0: {
        _0 = const 21531_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:143:31: 143:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:143:1: 143:38
    }
}

const NF_VERDICT_BITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2272:28: 2272:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2272:38: 2272:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2272:1: 2272:41
    }
}

const IN_Q_OVERFLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2722:26: 2722:29

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2722:32: 2722:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2722:1: 2722:44
    }
}

const J1939_NO_NAME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3212:26: 3212:35

    bb0: {
        _0 = const 0_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3212:38: 3212:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3212:1: 3212:40
    }
}

const RTLD_DI_PROFILEOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:663:31: 663:38

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:663:41: 663:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:663:1: 663:43
    }
}

const MADV_NORMAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:628:24: 628:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:628:34: 628:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:628:1: 628:36
    }
}

const TCOFLUSH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1084:21: 1084:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1084:31: 1084:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1084:1: 1084:33
    }
}

const B115200: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:705:20: 705:29

    bb0: {
        _0 = const 4098_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:705:32: 705:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:705:1: 705:41
    }
}

const _SC_PRIORITY_SCHEDULING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1171:36: 1171:43

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1171:46: 1171:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1171:1: 1171:49
    }
}

const NI_NOFQDN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1625:22: 1625:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1625:32: 1625:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1625:1: 1625:34
    }
}

const NFULA_IFINDEX_OUTDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2105:33: 2105:40

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2105:43: 2105:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2105:1: 2105:45
    }
}

const RTM_NEWPREFIX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2559:26: 2559:29

    bb0: {
        _0 = const 52_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2559:32: 2559:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2559:1: 2559:35
    }
}

const FAN_NOFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3053:21: 3053:28

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3053:31: 3053:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3053:1: 3053:34
    }
}

const IPV6_ROUTER_ALERT_ISOLATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1647:46: 1647:53

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1647:56: 1647:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1647:9: 1647:59
    }
}

const F_GETFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:463:20: 463:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:463:30: 463:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:463:1: 463:32
    }
}

const AT_STATX_FORCE_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:999:32: 999:39

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:999:42: 999:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:999:1: 999:49
    }
}

const IPV6_V6ONLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:919:24: 919:31

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/mod.rs:919:34: 919:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:919:1: 919:37
    }
}

const b64::x86_64::O_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:566:22: 566:29

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:566:32: 566:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:566:1: 566:40
    }
}

const NILFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1411:38: 1411:46

    bb0: {
        _0 = const 13364_i64;            // scope 0 at src/unix/linux_like/mod.rs:1411:49: 1411:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1411:9: 1411:56
    }
}

const IFLA_MAX_MTU: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1438:25: 1438:35

    bb0: {
        _0 = const 51_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1438:38: 1438:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1438:1: 1438:41
    }
}

const SYS_epoll_ctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:312:26: 312:34

    bb0: {
        _0 = const 233_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:312:37: 312:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:312:1: 312:41
    }
}

const ETH_HLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1963:21: 1963:28

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1963:31: 1963:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1963:1: 1963:34
    }
}

linux::pthread_condattr_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:42:28: 42:57

    bb0: {
        _0 = const b64::x86_64::__SIZEOF_PTHREAD_CONDATTR_T; // scope 0 at src/unix/linux_like/linux/align.rs:42:28: 42:57
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:42:28: 42:57
    }
}

const RTCF_NAT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2415:21: 2415:24

    bb0: {
        _0 = const 8388608_u32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2415:27: 2415:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2415:1: 2415:38
    }
}

const NFT_RANGE_NEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2890:26: 2890:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2890:36: 2890:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2890:1: 2890:38
    }
}

const _SC_SYSTEM_DATABASE_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:813:34: 813:41

    bb0: {
        _0 = const 163_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:813:44: 813:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:813:1: 813:48
    }
}

const PF_ISDN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:756:20: 756:27

    bb0: {
        _0 = const AF_ISDN;              // scope 0 at src/unix/linux_like/mod.rs:756:30: 756:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:756:1: 756:38
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::termios) -> gnu::termios {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::termios; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const P_ALL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1227:18: 1227:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1227:29: 1227:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1227:1: 1227:31
    }
}

const ENOTEMPTY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:423:22: 423:29

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:423:32: 423:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:423:1: 423:35
    }
}

const _SC_TRACE_EVENT_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1295:37: 1295:44

    bb0: {
        _0 = const 242_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1295:47: 1295:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1295:1: 1295:51
    }
}

const SYS_setgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:185:23: 185:31

    bb0: {
        _0 = const 106_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:185:34: 185:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:185:1: 185:38
    }
}

const ITIMER_VIRTUAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1807:27: 1807:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1807:37: 1807:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1807:1: 1807:39
    }
}

const TIOCMSET: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:140:21: 140:28

    bb0: {
        _0 = const 21528_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:140:31: 140:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:140:1: 140:38
    }
}

const NF_VERDICT_FLAG_QUEUE_BYPASS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2267:41: 2267:48

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2267:51: 2267:61
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2267:1: 2267:62
    }
}

const IN_DELETE_SELF: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2719:27: 2719:30

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2719:33: 2719:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2719:1: 2719:45
    }
}

const J1939_MAX_UNICAST_ADDR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3209:35: 3209:44

    bb0: {
        _0 = const 253_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:3209:47: 3209:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3209:1: 3209:52
    }
}

const RTLD_DI_SERINFOSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:660:32: 660:39

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:660:42: 660:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:660:1: 660:44
    }
}

const PROT_GROWSDOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:623:27: 623:34

    bb0: {
        _0 = const 16777216_i32;         // scope 0 at src/unix/linux_like/mod.rs:623:37: 623:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:623:1: 623:47
    }
}

const TCOOFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1081:19: 1081:26

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1081:29: 1081:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1081:1: 1081:31
    }
}

const EXTA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:702:17: 702:26

    bb0: {
        _0 = const B19200;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:702:29: 702:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:702:1: 702:36
    }
}

const _SC_JOB_CONTROL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1168:28: 1168:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1168:38: 1168:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1168:1: 1168:40
    }
}

const EAI_OVERFLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1621:25: 1621:32

    bb0: {
        _0 = const -12_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1621:35: 1621:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1621:1: 1621:39
    }
}

const NFULA_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2102:23: 2102:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2102:33: 2102:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2102:1: 2102:35
    }
}

const RTM_NEWACTION: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2556:26: 2556:29

    bb0: {
        _0 = const 48_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2556:32: 2556:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2556:1: 2556:35
    }
}

const FANOTIFY_METADATA_VERSION: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3048:38: 3048:40

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3048:43: 3048:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3048:1: 3048:45
    }
}

const MSG_COPY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1644:29: 1644:36

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1644:39: 1644:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1644:9: 1644:47
    }
}

const _IONBF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:459:19: 459:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:459:29: 459:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:459:1: 459:31
    }
}

const M_ARENA_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:995:24: 995:31

    bb0: {
        _0 = const -8_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:995:34: 995:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:995:1: 995:37
    }
}

const IPV6_MTU_DISCOVER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:916:30: 916:37

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/mod.rs:916:40: 916:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:916:1: 916:43
    }
}

const ARPHRD_NONE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1372:24: 1372:27

    bb0: {
        _0 = const 65534_u16;            // scope 0 at src/unix/linux_like/mod.rs:1372:30: 1372:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1372:1: 1372:37
    }
}

const SFD_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:560:24: 560:31

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:560:34: 560:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:560:1: 560:43
    }
}

const MSDOS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1408:38: 1408:46

    bb0: {
        _0 = const 19780_i64;            // scope 0 at src/unix/linux_like/mod.rs:1408:49: 1408:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1408:9: 1408:60
    }
}

const IFLA_CARRIER_DOWN_COUNT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1435:36: 1435:46

    bb0: {
        _0 = const 48_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1435:49: 1435:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1435:1: 1435:52
    }
}

const SYS_clock_nanosleep: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:309:32: 309:40

    bb0: {
        _0 = const 230_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:309:43: 309:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:309:1: 309:47
    }
}

const PT_LOPROC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1958:22: 1958:25

    bb0: {
        _0 = const 1879048192_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1958:28: 1958:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1958:1: 1958:39
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::pthread_condattr_t) -> linux::pthread_condattr_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::pthread_condattr_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTF_POLICY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2411:23: 2411:26

    bb0: {
        _0 = const 67108864_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2411:29: 2411:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2411:1: 2411:40
    }
}

const NFT_CMP_GT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2886:23: 2886:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2886:33: 2886:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2886:1: 2886:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_rumble_effect) -> ff_rumble_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_rumble_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_REGEX_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:810:30: 810:37

    bb0: {
        _0 = const 156_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:810:40: 810:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:810:1: 810:44
    }
}

const PF_BLUETOOTH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:753:25: 753:32

    bb0: {
        _0 = const AF_BLUETOOTH;         // scope 0 at src/unix/linux_like/mod.rs:753:35: 753:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:753:1: 753:48
    }
}

const SIGEV_SIGNAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1223:25: 1223:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1223:35: 1223:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1223:1: 1223:37
    }
}

const ENAMETOOLONG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:420:25: 420:32

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:420:35: 420:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:420:1: 420:38
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &arpreq) -> arpreq {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::arpreq; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_V7_LP64_OFF64: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1292:30: 1292:37

    bb0: {
        _0 = const 239_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1292:40: 1292:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1292:1: 1292:44
    }
}

const SYS_syslog: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:182:23: 182:31

    bb0: {
        _0 = const 103_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:182:34: 182:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:182:1: 182:38
    }
}

const SECCOMP_RET_ACTION: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1803:31: 1803:39

    bb0: {
        _0 = const 2147418112_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1803:42: 1803:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1803:1: 1803:53
    }
}

const TIOCMGET: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:137:21: 137:28

    bb0: {
        _0 = const 21525_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:137:31: 137:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:137:1: 137:38
    }
}

const NF_STOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2263:20: 2263:27

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2263:30: 2263:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2263:1: 2263:32
    }
}

const IN_MOVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2716:20: 2716:23

    bb0: {
        _0 = BitOr(const IN_MOVED_FROM, const IN_MOVED_TO); // scope 0 at src/unix/linux_like/linux/mod.rs:2716:26: 2716:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2716:1: 2716:54
    }
}

const CAN_RAW_FD_FRAMES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3203:30: 3203:37

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3203:40: 3203:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3203:1: 3203:42
    }
}

const RTLD_DI_LINKMAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:657:28: 657:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:657:38: 657:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:657:1: 657:40
    }
}

const MS_MGC_MSK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:618:23: 618:32

    bb0: {
        _0 = const 4294901760_u64;       // scope 0 at src/unix/linux_like/mod.rs:618:35: 618:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:618:1: 618:46
    }
}

const Q_SETQUOTA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1077:23: 1077:30

    bb0: {
        _0 = const 8388616_i32;          // scope 0 at src/unix/linux_like/mod.rs:1077:33: 1077:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1077:1: 1077:42
    }
}

utmpx::ut_id::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:460:31: 460:32

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:460:31: 460:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:460:31: 460:32
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sockaddr_in6) -> sockaddr_in6 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::sockaddr_in6; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const B9600: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:699:18: 699:27

    bb0: {
        _0 = const 13_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:699:30: 699:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:699:1: 699:39
    }
}

const _SC_OPEN_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1165:25: 1165:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1165:35: 1165:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1165:1: 1165:37
    }
}

user_fpregs_struct::st_space::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:280:34: 280:36

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:280:34: 280:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:280:34: 280:36
    }
}

const EAI_SERVICE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1618:24: 1618:31

    bb0: {
        _0 = const -8_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1618:34: 1618:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1618:1: 1618:37
    }
}

const NFULNL_MSG_CONFIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2098:30: 2098:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2098:40: 2098:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2098:1: 2098:42
    }
}

const RTM_NEWTFILTER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2553:27: 2553:30

    bb0: {
        _0 = const 44_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2553:33: 2553:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2553:1: 2553:36
    }
}

const FAN_MARK_IGNORED_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3044:34: 3044:42

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3044:45: 3044:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3044:1: 3044:57
    }
}

const LIO_WAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1641:29: 1641:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1641:39: 1641:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1641:9: 1641:41
    }
}

const SEEK_CUR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:456:21: 456:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:456:31: 456:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:456:1: 456:33
    }
}

const M_CHECK_ACTION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:992:27: 992:34

    bb0: {
        _0 = const -5_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:992:37: 992:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:992:1: 992:40
    }
}

const IPV6_ADD_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:913:32: 913:39

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/mod.rs:913:42: 913:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:913:1: 913:45
    }
}

const ARPHRD_IEEE80211_RADIOTAP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1368:38: 1368:41

    bb0: {
        _0 = const 803_u16;              // scope 0 at src/unix/linux_like/mod.rs:1368:44: 1368:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1368:1: 1368:48
    }
}

const TCSANOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:556:20: 556:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:556:30: 556:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:556:1: 556:32
    }
}

const MINIX3_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1405:39: 1405:47

    bb0: {
        _0 = const 19802_i64;            // scope 0 at src/unix/linux_like/mod.rs:1405:50: 1405:56
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1405:9: 1405:57
    }
}

const IFLA_IF_NETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1432:28: 1432:38

    bb0: {
        _0 = const 46_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1432:41: 1432:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1432:1: 1432:44
    }
}

const SYS_clock_settime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:306:30: 306:38

    bb0: {
        _0 = const 227_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:306:41: 306:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:306:1: 306:45
    }
}

const PT_GNU_STACK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1955:25: 1955:28

    bb0: {
        _0 = const 1685382481_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1955:31: 1955:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1955:1: 1955:42
    }
}

linux::pthread_rwlockattr_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:36:28: 36:59

    bb0: {
        _0 = const b64::__SIZEOF_PTHREAD_RWLOCKATTR_T; // scope 0 at src/unix/linux_like/linux/align.rs:36:28: 36:59
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:36:28: 36:59
    }
}

const RTF_NONEXTHOP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2408:26: 2408:29

    bb0: {
        _0 = const 2097152_u32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2408:32: 2408:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2408:1: 2408:43
    }
}

const NFT_CMP_NEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2883:24: 2883:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2883:34: 2883:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2883:1: 2883:36
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &uinput_setup) -> uinput_setup {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::uinput_setup; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_MULTI_PROCESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:807:30: 807:37

    bb0: {
        _0 = const 150_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:807:40: 807:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:807:1: 807:44
    }
}

const PF_LLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:750:19: 750:26

    bb0: {
        _0 = const AF_LLC;               // scope 0 at src/unix/linux_like/mod.rs:750:29: 750:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:750:1: 750:36
    }
}

const CLD_TRAPPED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1219:24: 1219:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1219:34: 1219:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1219:1: 1219:36
    }
}

const MADV_SOFT_OFFLINE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:416:30: 416:37

    bb0: {
        _0 = const 101_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:416:40: 416:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:416:1: 416:44
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &flock64) -> flock64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::flock64; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_RAW_SOCKETS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1289:28: 1289:35

    bb0: {
        _0 = const 236_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1289:38: 1289:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1289:1: 1289:42
    }
}

const SYS_times: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:179:22: 179:30

    bb0: {
        _0 = const 100_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:179:33: 179:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:179:1: 179:37
    }
}

const SECCOMP_RET_LOG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1799:28: 1799:36

    bb0: {
        _0 = const 2147221504_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1799:39: 1799:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1799:1: 1799:50
    }
}

const TIOCSTI: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:134:20: 134:27

    bb0: {
        _0 = const 21522_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:134:30: 134:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:134:1: 134:37
    }
}

const NF_STOLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2260:22: 2260:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2260:32: 2260:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2260:1: 2260:34
    }
}

const IN_OPEN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2713:20: 2713:23

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2713:26: 2713:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2713:1: 2713:38
    }
}

const CAN_RAW_ERR_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3200:31: 3200:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3200:41: 3200:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3200:1: 3200:43
    }
}

const LM_ID_BASE: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:653:23: 653:31

    bb0: {
        _0 = const 0_i64;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:653:34: 653:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:653:1: 653:36
    }
}

const MS_LAZYTIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:615:24: 615:33

    bb0: {
        _0 = const 33554432_u64;         // scope 0 at src/unix/linux_like/mod.rs:615:36: 615:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:615:1: 615:46
    }
}

const Q_QUOTAON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1074:22: 1074:29

    bb0: {
        _0 = const 8388610_i32;          // scope 0 at src/unix/linux_like/mod.rs:1074:32: 1074:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1074:1: 1074:41
    }
}

sockaddr_in::sin_zero::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:49:28: 49:29

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/mod.rs:49:28: 49:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:49:28: 49:29
    }
}

const B1800: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:696:18: 696:27

    bb0: {
        _0 = const 10_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:696:30: 696:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:696:1: 696:39
    }
}

const _SC_CHILD_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1162:26: 1162:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1162:36: 1162:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1162:1: 1162:38
    }
}

const EAI_NODATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1615:23: 1615:30

    bb0: {
        _0 = const -5_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1615:33: 1615:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1615:1: 1615:36
    }
}

const SYS_epoll_pwait2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:430:29: 430:37

    bb0: {
        _0 = const 441_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:430:40: 430:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:430:1: 430:44
    }
}

const NFNL_MSG_BATCH_BEGIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2093:33: 2093:40

    bb0: {
        _0 = const linux::NLMSG_MIN_TYPE; // scope 0 at src/unix/linux_like/linux/mod.rs:2093:43: 2093:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2093:1: 2093:58
    }
}

const RTM_NEWTCLASS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2550:26: 2550:29

    bb0: {
        _0 = const 40_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2550:32: 2550:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2550:1: 2550:35
    }
}

const FAN_MARK_REMOVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3041:28: 3041:36

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3041:39: 3041:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3041:1: 3041:51
    }
}

const LIO_READ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1638:29: 1638:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1638:39: 1638:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1638:9: 1638:41
    }
}

const RAND_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:453:21: 453:28

    bb0: {
        _0 = const i32::MAX;             // scope 0 at src/unix/linux_like/mod.rs:453:31: 453:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:453:1: 453:42
    }
}

const M_TOP_PAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:989:22: 989:29

    bb0: {
        _0 = const -2_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:989:32: 989:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:989:1: 989:35
    }
}

const IPV6_MULTICAST_IF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:910:30: 910:37

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:910:40: 910:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:910:1: 910:43
    }
}

const ARPHRD_IEEE802_TR: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1365:30: 1365:33

    bb0: {
        _0 = const 800_u16;              // scope 0 at src/unix/linux_like/mod.rs:1365:36: 1365:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1365:1: 1365:40
    }
}

const F_WRLCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:551:20: 551:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:551:30: 551:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:551:1: 551:32
    }
}

const JFFS2_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1402:38: 1402:46

    bb0: {
        _0 = const 29366_i64;            // scope 0 at src/unix/linux_like/mod.rs:1402:49: 1402:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1402:9: 1402:60
    }
}

const IFLA_XDP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1429:21: 1429:31

    bb0: {
        _0 = const 43_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1429:34: 1429:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1429:1: 1429:37
    }
}

const SYS_timer_gettime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:303:30: 303:38

    bb0: {
        _0 = const 224_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:303:41: 303:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:303:1: 303:45
    }
}

const PT_NUM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1952:19: 1952:22

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1952:25: 1952:26
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1952:1: 1952:27
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::pthread_rwlockattr_t) -> linux::pthread_rwlockattr_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::pthread_rwlockattr_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTF_ALLONLINK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2405:26: 2405:29

    bb0: {
        _0 = const 131072_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:2405:32: 2405:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2405:1: 2405:43
    }
}

const NFT_BYTEORDER_NTOH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2879:31: 2879:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2879:41: 2879:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2879:1: 2879:43
    }
}

sockaddr_alg::salg_name::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:630:36: 630:38

    bb0: {
        _0 = const 64_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:630:36: 630:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:630:36: 630:38
    }
}

const _SC_FILE_ATTRIBUTES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:804:32: 804:39

    bb0: {
        _0 = const 146_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:804:42: 804:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:804:1: 804:46
    }
}

const PF_IRDA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:747:20: 747:27

    bb0: {
        _0 = const AF_IRDA;              // scope 0 at src/unix/linux_like/mod.rs:747:30: 747:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:747:1: 747:38
    }
}

const CLD_EXITED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1216:23: 1216:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1216:33: 1216:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1216:1: 1216:35
    }
}

const O_NOATIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:412:22: 412:29

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:412:32: 412:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:412:1: 412:42
    }
}

const _SC_TRACE_INHERIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1286:30: 1286:37

    bb0: {
        _0 = const 183_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1286:40: 1286:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1286:1: 1286:44
    }
}

const SYS_getrlimit: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:176:26: 176:34

    bb0: {
        _0 = const 97_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:176:37: 176:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:176:1: 176:40
    }
}

const SECCOMP_RET_TRAP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1796:29: 1796:37

    bb0: {
        _0 = const 196608_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1796:40: 1796:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1796:1: 1796:51
    }
}

const TIOCGPGRP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:131:22: 131:29

    bb0: {
        _0 = const 21519_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:131:32: 131:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:131:1: 131:39
    }
}

const PACKET_MR_ALLMULTI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2255:31: 2255:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2255:41: 2255:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2255:1: 2255:43
    }
}

const IN_CLOSE_WRITE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2710:27: 2710:30

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2710:33: 2710:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2710:1: 2710:45
    }
}

const CAN_RAW_FILTER_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3195:31: 3195:38

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3195:41: 3195:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3195:1: 3195:45
    }
}

const USER_PROCESS: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:648:25: 648:34

    bb0: {
        _0 = const 7_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:648:37: 648:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:648:1: 648:39
    }
}

const MS_KERNMOUNT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:612:25: 612:34

    bb0: {
        _0 = const 4194304_u64;          // scope 0 at src/unix/linux_like/mod.rs:612:37: 612:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:612:1: 612:46
    }
}

const QIF_TIMES: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1070:22: 1070:25

    bb0: {
        _0 = const 48_u32;               // scope 0 at src/unix/linux_like/mod.rs:1070:28: 1070:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1070:1: 1070:31
    }
}

const B300: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:693:17: 693:26

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:693:29: 693:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:693:1: 693:38
    }
}

const _PC_2_SYMLINKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1157:27: 1157:34

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1157:37: 1157:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1157:1: 1157:40
    }
}

const EAI_NONAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1612:23: 1612:30

    bb0: {
        _0 = const -2_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1612:33: 1612:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1612:1: 1612:36
    }
}

const SYS_pidfd_getfd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:427:28: 427:36

    bb0: {
        _0 = const 438_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:427:39: 427:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:427:1: 427:43
    }
}

const NFNL_SUBSYS_NFTABLES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2089:33: 2089:40

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2089:43: 2089:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2089:1: 2089:46
    }
}

const RTM_NEWQDISC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2547:25: 2547:28

    bb0: {
        _0 = const 36_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2547:31: 2547:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2547:1: 2547:34
    }
}

const FAN_UNLIMITED_QUEUE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3037:32: 3037:40

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3037:43: 3037:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3037:1: 3037:55
    }
}

const AIO_CANCELED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1635:33: 1635:40

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1635:43: 1635:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1635:9: 1635:45
    }
}

fn linux_like::<impl at src/unix/linux_like/mod.rs:12:1: 16:2>::clone(_1: &linux_like::timezone) -> linux_like::timezone {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/mod.rs:13:14: 13:19
    let mut _0: unix::linux_like::timezone; // return place in scope 0 at src/unix/linux_like/mod.rs:13:24: 13:32

    bb0: {
        return;                          // scope 0 at src/unix/linux_like/mod.rs:15:6: 15:6
    }
}

const M_GRAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:986:20: 986:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:986:30: 986:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:986:1: 986:32
    }
}

const IPV6_NEXTHOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:907:25: 907:32

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:907:35: 907:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:907:1: 907:37
    }
}

const ARPHRD_FCAL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1362:24: 1362:27

    bb0: {
        _0 = const 785_u16;              // scope 0 at src/unix/linux_like/mod.rs:1362:30: 1362:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1362:1: 1362:34
    }
}

const F_OFD_SETLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:547:24: 547:31

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:547:34: 547:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:547:1: 547:37
    }
}

const HPFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1399:37: 1399:45

    bb0: {
        _0 = const 4187351113_i64;       // scope 0 at src/unix/linux_like/mod.rs:1399:48: 1399:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1399:9: 1399:59
    }
}

const IFLA_GSO_MAX_SEGS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1426:30: 1426:40

    bb0: {
        _0 = const 40_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1426:43: 1426:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1426:1: 1426:46
    }
}

const SYS_fadvise64: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:300:26: 300:34

    bb0: {
        _0 = const 221_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:300:37: 300:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:300:1: 300:41
    }
}

const PT_SHLIB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1949:21: 1949:24

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1949:27: 1949:28
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1949:1: 1949:29
    }
}

linux::pthread_mutexattr_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:26:28: 26:58

    bb0: {
        _0 = const b64::x86_64::__SIZEOF_PTHREAD_MUTEXATTR_T; // scope 0 at src/unix/linux_like/linux/align.rs:26:28: 26:58
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:26:28: 26:58
    }
}

const RTF_THROW: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2401:22: 2401:32

    bb0: {
        _0 = const 8192_u16;             // scope 0 at src/unix/linux_like/linux/mod.rs:2401:35: 2401:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2401:1: 2401:42
    }
}

const NFT_DATA_VERDICT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2873:29: 2873:37

    bb0: {
        _0 = const 4294967040_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2873:40: 2873:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2873:1: 2873:51
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::rusage) -> unix::rusage {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::rusage;            // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_FD_MGMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:801:24: 801:31

    bb0: {
        _0 = const 143_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:801:34: 801:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:801:1: 801:38
    }
}

const PF_ATMSVC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:744:22: 744:29

    bb0: {
        _0 = const AF_ATMSVC;            // scope 0 at src/unix/linux_like/mod.rs:744:32: 744:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:744:1: 744:42
    }
}

const LOG_PERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1210:23: 1210:30

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:1210:33: 1210:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1210:1: 1210:38
    }
}

const O_RSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:409:20: 409:27

    bb0: {
        _0 = const 1052672_i32;          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:409:30: 409:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:409:1: 409:38
    }
}

const _SC_HOST_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1283:30: 1283:37

    bb0: {
        _0 = const 180_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1283:40: 1283:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1283:1: 1283:44
    }
}

const SYS_lchown: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:173:23: 173:31

    bb0: {
        _0 = const 94_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:173:34: 173:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:173:1: 173:37
    }
}

const SECCOMP_RET_KILL_PROCESS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1793:37: 1793:45

    bb0: {
        _0 = const 2147483648_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1793:48: 1793:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1793:1: 1793:59
    }
}

const TIOCEXCL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:128:21: 128:28

    bb0: {
        _0 = const 21516_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:128:31: 128:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:128:1: 128:38
    }
}

const PACKET_DROP_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2251:35: 2251:42

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2251:45: 2251:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2251:1: 2251:47
    }
}

const IN_ACCESS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2707:22: 2707:25

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2707:28: 2707:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2707:1: 2707:40
    }
}

const CAN_NPROTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3190:23: 3190:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3190:33: 3190:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3190:1: 3190:35
    }
}

const OLD_TIME: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:645:21: 645:30

    bb0: {
        _0 = const 4_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:645:33: 645:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:645:1: 645:35
    }
}

const MS_SLAVE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:609:21: 609:30

    bb0: {
        _0 = const 524288_u64;           // scope 0 at src/unix/linux_like/mod.rs:609:33: 609:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:609:1: 609:42
    }
}

const QIF_ITIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1067:22: 1067:25

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/mod.rs:1067:28: 1067:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1067:1: 1067:31
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sockaddr_in) -> sockaddr_in {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::sockaddr_in; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const B134: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:690:17: 690:26

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:690:29: 690:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:690:1: 690:38
    }
}

const _PC_REC_XFER_ALIGN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1154:31: 1154:38

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1154:41: 1154:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1154:1: 1154:44
    }
}

const AI_ADDRCONFIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1607:26: 1607:33

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1607:36: 1607:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1607:1: 1607:43
    }
}

const SYS_clone3: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:424:23: 424:31

    bb0: {
        _0 = const 435_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:424:34: 424:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:424:1: 424:38
    }
}

const NFNL_SUBSYS_ACCT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2086:29: 2086:36

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2086:39: 2086:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2086:1: 2086:41
    }
}

const RTM_NEWRULE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2544:24: 2544:27

    bb0: {
        _0 = const 32_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2544:30: 2544:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2544:1: 2544:33
    }
}

const FAN_CLASS_NOTIF: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3033:28: 3033:36

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3033:39: 3033:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3033:1: 3033:51
    }
}

PTHREAD_COND_INITIALIZER::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1510:19: 1510:42

    bb0: {
        _0 = const linux::__SIZEOF_PTHREAD_COND_T; // scope 0 at src/unix/linux_like/linux/mod.rs:1510:19: 1510:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1510:19: 1510:42
    }
}

const KEYCTL_SUPPORTS_VERIFY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:965:35: 965:38

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:965:41: 965:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:965:1: 965:46
    }
}

const IPV6_2292PKTOPTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:904:32: 904:39

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:904:42: 904:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:904:1: 904:44
    }
}

const ARPHRD_ECONET: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1359:26: 1359:29

    bb0: {
        _0 = const 782_u16;              // scope 0 at src/unix/linux_like/mod.rs:1359:32: 1359:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1359:1: 1359:36
    }
}

const F_SETLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:544:20: 544:27

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:544:30: 544:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:544:1: 544:32
    }
}

const FUSE_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1396:37: 1396:45

    bb0: {
        _0 = const 1702057286_i64;       // scope 0 at src/unix/linux_like/mod.rs:1396:48: 1396:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1396:9: 1396:59
    }
}

const IFLA_LINK_NETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1423:30: 1423:40

    bb0: {
        _0 = const 37_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1423:43: 1423:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1423:1: 1423:46
    }
}

const SYS_set_tid_address: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:297:32: 297:40

    bb0: {
        _0 = const 218_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:297:43: 297:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:297:1: 297:47
    }
}

const PT_DYNAMIC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1946:23: 1946:26

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1946:29: 1946:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1946:1: 1946:31
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::pthread_mutexattr_t) -> linux::pthread_mutexattr_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::pthread_mutexattr_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTF_STATIC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2398:23: 2398:33

    bb0: {
        _0 = const 1024_u16;             // scope 0 at src/unix/linux_like/linux/mod.rs:2398:36: 2398:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2398:1: 2398:43
    }
}

const NFT_SET_POL_MEMORY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2868:31: 2868:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2868:41: 2868:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2868:1: 2868:43
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_periodic_effect) -> ff_periodic_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_periodic_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_DEVICE_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:798:26: 798:33

    bb0: {
        _0 = const 140_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:798:36: 798:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:798:1: 798:40
    }
}

const PF_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:741:22: 741:29

    bb0: {
        _0 = const AF_PACKET;            // scope 0 at src/unix/linux_like/mod.rs:741:32: 741:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:741:1: 741:42
    }
}

const LOG_CRON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1207:21: 1207:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:1207:31: 1207:37

    bb0: {
        _1 = CheckedShl(const 9_i32, const 3_i32); // scope 0 at src/unix/linux_like/mod.rs:1207:31: 1207:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1207:31: 1207:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:1207:31: 1207:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1207:1: 1207:38
    }
}

const O_NOCTTY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:406:21: 406:28

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:406:31: 406:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:406:1: 406:35
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &flock) -> flock {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::flock; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_V6_ILP32_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1280:32: 1280:39

    bb0: {
        _0 = const 177_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1280:42: 1280:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1280:1: 1280:46
    }
}

const SYS_fchmod: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:170:23: 170:31

    bb0: {
        _0 = const 91_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:170:34: 170:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:170:1: 170:37
    }
}

const SECCOMP_FILTER_FLAG_TSYNC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1789:38: 1789:47

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1789:50: 1789:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1789:1: 1789:52
    }
}

const TCSBRK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:125:19: 125:26

    bb0: {
        _0 = const 21513_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:125:29: 125:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:125:1: 125:36
    }
}

const CTRL_ATTR_MCAST_GRP_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2246:37: 2246:44

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2246:47: 2246:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2246:1: 2246:49
    }
}

const VMADDR_CID_LOCAL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2702:29: 2702:37

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2702:40: 2702:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2702:1: 2702:42
    }
}

const CAN_MCNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3187:22: 3187:29

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3187:32: 3187:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3187:1: 3187:34
    }
}

const RUN_LVL: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:642:20: 642:29

    bb0: {
        _0 = const 1_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:642:32: 642:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:642:1: 642:34
    }
}

const MS_POSIXACL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:606:24: 606:33

    bb0: {
        _0 = const 65536_u64;            // scope 0 at src/unix/linux_like/mod.rs:606:36: 606:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:606:1: 606:45
    }
}

const QIF_ILIMITS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1064:24: 1064:27

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/mod.rs:1064:30: 1064:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1064:1: 1064:32
    }
}

linux_like::sockaddr::sa_data::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:42:33: 42:35

    bb0: {
        _0 = const 14_usize;             // scope 0 at src/unix/linux_like/mod.rs:42:33: 42:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:42:33: 42:35
    }
}

const B50: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:687:16: 687:25

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:687:28: 687:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:687:1: 687:37
    }
}

const _PC_REC_INCR_XFER_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1151:35: 1151:42

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1151:45: 1151:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1151:1: 1151:48
    }
}

const AI_NUMERICHOST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1604:27: 1604:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1604:37: 1604:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1604:1: 1604:44
    }
}

const SYS_fsmount: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:421:24: 421:32

    bb0: {
        _0 = const 432_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:421:35: 421:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:421:1: 421:39
    }
}

const NFNL_SUBSYS_ULOG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2083:29: 2083:36

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2083:39: 2083:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2083:1: 2083:41
    }
}

const RTM_NEWNEIGH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2541:25: 2541:28

    bb0: {
        _0 = const 28_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2541:31: 2541:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2541:1: 2541:34
    }
}

const FAN_CLOSE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3028:22: 3028:25

    bb0: {
        _0 = BitOr(const FAN_CLOSE_WRITE, const FAN_CLOSE_NOWRITE); // scope 0 at src/unix/linux_like/linux/mod.rs:3028:28: 3028:63
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3028:1: 3028:64
    }
}

const PTHREAD_MUTEX_INITIALIZER: linux::pthread_mutex_t = {
    let mut _0: unix::linux_like::linux::pthread_mutex_t; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1506:42: 1506:57
    let mut _1: [u8; _];                 // in scope 0 at src/unix/linux_like/linux/mod.rs:1507:15: 1507:44

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:1507:15: 1507:44
        _1 = [const 0_u8; __SIZEOF_PTHREAD_MUTEX_T]; // scope 0 at src/unix/linux_like/linux/mod.rs:1507:15: 1507:44
        (_0.0: [u8; _]) = move _1;       // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const KEYCTL_SUPPORTS_ENCRYPT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:962:36: 962:39

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:962:42: 962:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:962:1: 962:47
    }
}

const IPV6_2292HOPOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:901:29: 901:36

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:901:39: 901:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:901:1: 901:41
    }
}

const ARPHRD_PIMREG: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1356:26: 1356:29

    bb0: {
        _0 = const 779_u16;              // scope 0 at src/unix/linux_like/mod.rs:1356:32: 1356:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1356:1: 1356:36
    }
}

const F_GETLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:541:20: 541:27

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:541:30: 541:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:541:1: 541:32
    }
}

const EXT3_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1393:37: 1393:45

    bb0: {
        _0 = const 61267_i64;            // scope 0 at src/unix/linux_like/mod.rs:1393:48: 1393:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1393:9: 1393:59
    }
}

const IFLA_PHYS_PORT_ID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1420:30: 1420:40

    bb0: {
        _0 = const 34_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1420:43: 1420:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1420:1: 1420:46
    }
}

const SYS_epoll_wait_old: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:294:31: 294:39

    bb0: {
        _0 = const 215_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:294:42: 294:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:294:1: 294:46
    }
}

const RESOLVE_CACHED: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1939:27: 1939:34

    bb0: {
        _0 = const 32_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1939:37: 1939:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1939:1: 1939:42
    }
}

const RTF_WINDOW: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2395:23: 2395:33

    bb0: {
        _0 = const 128_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2395:36: 2395:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2395:1: 2395:43
    }
}

const NFT_SET_TIMEOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2864:28: 2864:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2864:38: 2864:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2864:1: 2864:43
    }
}

const ATF_USETRAILERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:305:28: 305:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/mod.rs:305:38: 305:42
        return;                          // scope 0 at src/unix/mod.rs:305:1: 305:43
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::rlimit) -> unix::rlimit {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::rlimit;            // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_BASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:795:21: 795:28

    bb0: {
        _0 = const 134_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:795:31: 795:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:795:1: 795:35
    }
}

const PF_KEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:738:19: 738:26

    bb0: {
        _0 = const AF_KEY;               // scope 0 at src/unix/linux_like/mod.rs:738:29: 738:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:738:1: 738:36
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::msghdr) -> gnu::msghdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::msghdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AT_SYMLINK_FOLLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1203:30: 1203:37

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:1203:40: 1203:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1203:1: 1203:46
    }
}

const O_APPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:403:21: 403:28

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:403:31: 403:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:403:1: 403:36
    }
}

b64::x86_64::statfs::f_spare::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:35:33: 35:34

    bb0: {
        _0 = const 5_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:35:33: 35:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:35:33: 35:34
    }
}

const _SC_STREAMS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1277:24: 1277:31

    bb0: {
        _0 = const 174_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1277:34: 1277:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1277:1: 1277:38
    }
}

const SYS_symlink: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:167:24: 167:32

    bb0: {
        _0 = const 88_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:167:35: 167:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:167:1: 167:38
    }
}

const SECCOMP_MODE_DISABLED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1785:34: 1785:42

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1785:45: 1785:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1785:1: 1785:47
    }
}

const TCSETA: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:122:19: 122:26

    bb0: {
        _0 = const 21510_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:122:29: 122:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:122:1: 122:36
    }
}

const CTRL_ATTR_OP_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2242:28: 2242:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2242:38: 2242:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2242:1: 2242:40
    }
}

const VMADDR_CID_ANY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2694:27: 2694:35

    bb0: {
        _0 = const u32::MAX;             // scope 0 at src/unix/linux_like/linux/mod.rs:2694:38: 2694:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2694:1: 2694:49
    }
}

const CAN_BCM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3184:20: 3184:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3184:30: 3184:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3184:1: 3184:32
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sockaddr_vm) -> sockaddr_vm {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::sockaddr_vm; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const __UT_NAMESIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:639:26: 639:31

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:639:34: 639:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:639:1: 639:37
    }
}

const MS_MOVE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:603:20: 603:29

    bb0: {
        _0 = const 8192_u64;             // scope 0 at src/unix/linux_like/mod.rs:603:32: 603:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:603:1: 603:39
    }
}

const Q_SETINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1061:22: 1061:29

    bb0: {
        _0 = const 8388614_i32;          // scope 0 at src/unix/linux_like/mod.rs:1061:32: 1061:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1061:1: 1061:41
    }
}

const VTDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:683:18: 683:28

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:683:31: 683:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:683:1: 683:40
    }
}

const _PC_PRIO_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1148:24: 1148:31

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1148:34: 1148:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1148:1: 1148:37
    }
}

const RB_KEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1600:21: 1600:28

    bb0: {
        _0 = const 1163412803_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1600:31: 1600:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1600:1: 1600:52
    }
}

const SYS_move_mount: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:418:27: 418:35

    bb0: {
        _0 = const 429_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:418:38: 418:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:418:1: 418:42
    }
}

const NFNL_SUBSYS_CTNETLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2080:34: 2080:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2080:44: 2080:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2080:1: 2080:46
    }
}

const RTM_NEWROUTE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2538:25: 2538:28

    bb0: {
        _0 = const 24_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2538:31: 2538:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2538:1: 2538:34
    }
}

const FAN_ACCESS_PERM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3022:28: 3022:31

    bb0: {
        _0 = const 131072_u64;           // scope 0 at src/unix/linux_like/linux/mod.rs:3022:34: 3022:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3022:1: 3022:46
    }
}

const NOEXPR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1129:27: 1129:36

    bb0: {
        _0 = const 327681_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1129:39: 1129:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1129:9: 1129:47
    }
}

const KEYCTL_PKEY_SIGN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:958:29: 958:32

    bb0: {
        _0 = const 27_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:958:35: 958:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:958:1: 958:38
    }
}

const MCAST_MSFILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:897:27: 897:34

    bb0: {
        _0 = const 48_i32;               // scope 0 at src/unix/linux_like/mod.rs:897:37: 897:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:897:1: 897:40
    }
}

const ARPHRD_SIT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1353:23: 1353:26

    bb0: {
        _0 = const 776_u16;              // scope 0 at src/unix/linux_like/mod.rs:1353:29: 1353:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1353:1: 1353:33
    }
}

const O_NDELAY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:535:21: 535:28

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:535:31: 535:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:535:1: 535:37
    }
}

const ECRYPTFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1390:41: 1390:49

    bb0: {
        _0 = const 61791_i64;            // scope 0 at src/unix/linux_like/mod.rs:1390:52: 1390:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1390:9: 1390:59
    }
}

const IFLA_NUM_TX_QUEUES: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1417:31: 1417:41

    bb0: {
        _0 = const 31_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1417:44: 1417:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1417:1: 1417:47
    }
}

const SYS_lookup_dcookie: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:291:31: 291:39

    bb0: {
        _0 = const 212_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:291:42: 291:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:291:1: 291:46
    }
}

const RESOLVE_NO_SYMLINKS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1936:32: 1936:39

    bb0: {
        _0 = const 4_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1936:42: 1936:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1936:1: 1936:47
    }
}

const RLIMIT_NLIMITS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:244:35: 244:56

    bb0: {
        _0 = const RLIM_NLIMITS;         // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:244:59: 244:71
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:244:9: 244:72
    }
}

const RTF_MODIFIED: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2392:25: 2392:35

    bb0: {
        _0 = const 32_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2392:38: 2392:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2392:1: 2392:45
    }
}

const NFT_SET_CONSTANT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2861:29: 2861:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2861:39: 2861:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2861:1: 2861:43
    }
}

const ATF_COM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:302:20: 302:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/mod.rs:302:30: 302:34
        return;                          // scope 0 at src/unix/mod.rs:302:1: 302:35
    }
}

const _SC_NL_NMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:792:24: 792:31

    bb0: {
        _0 = const 122_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:792:34: 792:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:792:1: 792:38
    }
}

const PF_DECnet: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:735:22: 735:29

    bb0: {
        _0 = const AF_DECnet;            // scope 0 at src/unix/linux_like/mod.rs:735:32: 735:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:735:1: 735:42
    }
}

const AT_FDCWD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1200:21: 1200:28

    bb0: {
        _0 = const -100_i32;             // scope 0 at src/unix/linux_like/mod.rs:1200:31: 1200:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1200:1: 1200:36
    }
}

const RTLD_DEEPBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:399:26: 399:33

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:399:36: 399:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:399:1: 399:40
    }
}

const _SC_2_PBS_MESSAGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1274:30: 1274:37

    bb0: {
        _0 = const 171_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1274:40: 1274:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1274:1: 1274:44
    }
}

const SYS_creat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:164:22: 164:30

    bb0: {
        _0 = const 85_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:164:33: 164:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:164:1: 164:36
    }
}

const PR_SET_VMA_ANON_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1780:33: 1780:40

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1780:43: 1780:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1780:1: 1780:45
    }
}

const TCSETSW: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:119:20: 119:27

    bb0: {
        _0 = const 21507_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:119:30: 119:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:119:1: 119:37
    }
}

const CTRL_ATTR_OPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2238:26: 2238:33

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2238:36: 2238:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2238:1: 2238:38
    }
}

const MAP_SHARED_VALIDATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2687:32: 2687:39

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2687:42: 2687:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2687:1: 2687:46
    }
}

const CANFD_BRS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3173:22: 3173:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3173:32: 3173:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3173:1: 3173:37
    }
}

const PRIO_USER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:634:22: 634:42

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:634:45: 634:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:634:1: 634:47
    }
}

const MS_NOATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:600:23: 600:32

    bb0: {
        _0 = const 1024_u64;             // scope 0 at src/unix/linux_like/mod.rs:600:35: 600:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:600:1: 600:42
    }
}

const UMOUNT_NOFOLLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1057:28: 1057:35

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:1057:38: 1057:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1057:1: 1057:42
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::si_utime(_1: &b64::x86_64::siginfo_t) -> i64 {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:432:36: 432:41
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:432:46: 432:54
    let mut _2: &unix::linux_like::linux::gnu::sifields; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:32
    let mut _3: &unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:32
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:21
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:21
        _2 = gnu::<impl b64::x86_64::siginfo_t>::sifields(move _3) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/gnu/mod.rs:433:22: 433:30
                                         // + literal: Const { ty: for<'r> unsafe fn(&'r unix::linux_like::linux::gnu::b64::x86_64::siginfo_t) -> &'r unix::linux_like::linux::gnu::sifields {unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:31: 433:32
        _0 = (((*_2).1: unix::linux_like::linux::gnu::sifields_sigchld).3: i64); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:433:17: 433:49
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:434:13: 434:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:434:14: 434:14
    }
}

const TABDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:680:19: 680:29

    bb0: {
        _0 = const 6144_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:680:32: 680:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:680:1: 680:41
    }
}

const _PC_VDISABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1145:25: 1145:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1145:35: 1145:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1145:1: 1145:37
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &seccomp_notif_sizes) -> seccomp_notif_sizes {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::seccomp_notif_sizes; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RB_DISABLE_CAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1597:27: 1597:34

    bb0: {
        _0 = const 0_u32 as i32 (Misc);  // scope 0 at src/unix/linux_like/linux/mod.rs:1597:37: 1597:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1597:1: 1597:58
    }
}

const SYS_io_uring_enter: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:415:31: 415:39

    bb0: {
        _0 = const 426_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:415:42: 415:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:415:1: 415:46
    }
}

const NFNLGRP_ACCT_QUOTA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2075:31: 2075:38

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2075:41: 2075:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2075:1: 2075:43
    }
}

const RTM_NEWADDR: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2535:24: 2535:27

    bb0: {
        _0 = const 20_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2535:30: 2535:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2535:1: 2535:33
    }
}

const FAN_OPEN: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3017:21: 3017:24

    bb0: {
        _0 = const 32_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:3017:27: 3017:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3017:1: 3017:39
    }
}

const RADIXCHAR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1126:30: 1126:39

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1126:42: 1126:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1126:9: 1126:50
    }
}

const KEYCTL_PKEY_QUERY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:955:30: 955:33

    bb0: {
        _0 = const 24_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:955:36: 955:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:955:1: 955:39
    }
}

const MCAST_LEAVE_GROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:894:30: 894:37

    bb0: {
        _0 = const 45_i32;               // scope 0 at src/unix/linux_like/mod.rs:894:40: 894:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:894:1: 894:43
    }
}

const ARPHRD_LOCALTLK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1350:28: 1350:31

    bb0: {
        _0 = const 773_u16;              // scope 0 at src/unix/linux_like/mod.rs:1350:34: 1350:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1350:1: 1350:38
    }
}

const POLLWRNORM: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:531:23: 531:32

    bb0: {
        _0 = const 256_i16;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:531:35: 531:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:531:1: 531:41
    }
}

const CRAMFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1387:33: 1387:41

    bb0: {
        _0 = const 684539205_i64;        // scope 0 at src/unix/linux_like/mod.rs:1387:44: 1387:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1387:9: 1387:55
    }
}

const IFLA_NET_NS_FD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1414:27: 1414:37

    bb0: {
        _0 = const 28_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1414:40: 1414:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1414:1: 1414:43
    }
}

const SYS_io_submit: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:288:26: 288:34

    bb0: {
        _0 = const 209_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:288:37: 288:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:288:1: 288:41
    }
}

const BPF_X: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1931:18: 1931:25

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1931:28: 1931:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1931:1: 1931:33
    }
}

const RLIMIT_NICE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:241:32: 241:53

    bb0: {
        _0 = const 13_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:241:56: 241:58
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:241:9: 241:59
    }
}

const RTF_HOST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2389:21: 2389:31

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2389:34: 2389:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2389:1: 2389:41
    }
}

const NFT_MSG_TRACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2849:26: 2849:33

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2849:36: 2849:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2849:1: 2849:39
    }
}

const INADDR_NONE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:297:24: 297:33

    bb0: {
        _0 = const u32::MAX;             // scope 0 at src/unix/mod.rs:297:36: 297:46
        return;                          // scope 0 at src/unix/mod.rs:297:1: 297:47
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::timespec) -> unix::timespec {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::timespec;          // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_NL_ARGMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:789:26: 789:33

    bb0: {
        _0 = const 119_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:789:36: 789:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:789:1: 789:40
    }
}

const PF_X25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:732:19: 732:26

    bb0: {
        _0 = const AF_X25;               // scope 0 at src/unix/linux_like/mod.rs:732:29: 732:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:732:1: 732:36
    }
}

const POSIX_FADV_RANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1196:30: 1196:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1196:40: 1196:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1196:1: 1196:42
    }
}

const POSIX_FADV_DONTNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:395:32: 395:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:395:42: 395:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:395:1: 395:44
    }
}

const _SC_2_PBS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1271:22: 1271:29

    bb0: {
        _0 = const 168_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1271:32: 1271:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1271:1: 1271:36
    }
}

const SYS_rename: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:161:23: 161:31

    bb0: {
        _0 = const 82_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:161:34: 161:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:161:1: 161:37
    }
}

const PR_CAP_AMBIENT_LOWER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1776:33: 1776:40

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1776:43: 1776:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1776:1: 1776:45
    }
}

const SCM_TIMESTAMPING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:113:29: 113:36

    bb0: {
        _0 = const SO_TIMESTAMPING;      // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:113:39: 113:54
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:113:1: 113:55
    }
}

const CTRL_ATTR_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2235:30: 2235:37

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2235:40: 2235:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2235:1: 2235:42
    }
}

const UDP_ENCAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2682:22: 2682:29

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2682:32: 2682:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2682:1: 2682:36
    }
}

const CAN_MAX_DLEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3169:25: 3169:30

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:3169:33: 3169:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3169:1: 3169:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &fanotify_response) -> fanotify_response {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::fanotify_response; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MAP_HUGE_16GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:630:26: 630:33

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_16GB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:630:36: 630:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:630:1: 630:61
    }
}

const MS_REMOUNT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:597:23: 597:32

    bb0: {
        _0 = const 32_u64;               // scope 0 at src/unix/linux_like/mod.rs:597:35: 597:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:597:1: 597:40
    }
}

const MNT_FORCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1054:22: 1054:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1054:32: 1054:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1054:1: 1054:36
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::si_pid(_1: &b64::x86_64::siginfo_t) -> i32 {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:420:34: 420:39
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:420:44: 420:51
    let mut _2: &unix::linux_like::linux::gnu::sifields; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:32
    let mut _3: &unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:32
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:21
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:21
        _2 = gnu::<impl b64::x86_64::siginfo_t>::sifields(move _3) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/gnu/mod.rs:421:22: 421:30
                                         // + literal: Const { ty: for<'r> unsafe fn(&'r unix::linux_like::linux::gnu::b64::x86_64::siginfo_t) -> &'r unix::linux_like::linux::gnu::sifields {unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:31: 421:32
        _0 = (((*_2).1: unix::linux_like::linux::gnu::sifields_sigchld).0: i32); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:421:17: 421:47
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:422:13: 422:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:422:14: 422:14
    }
}

const OLCUC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:677:18: 677:28

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:677:31: 677:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:677:1: 677:40
    }
}

const _PC_PIPE_BUF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1142:25: 1142:32

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1142:35: 1142:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1142:1: 1142:37
    }
}

const RB_AUTOBOOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1594:24: 1594:31

    bb0: {
        _0 = const 19088743_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1594:34: 1594:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1594:1: 1594:55
    }
}

const SYS_rseq: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:412:21: 412:29

    bb0: {
        _0 = const 334_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:412:32: 412:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:412:1: 412:36
    }
}

const NFNLGRP_CONNTRACK_EXP_UPDATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2072:41: 2072:48

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2072:51: 2072:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2072:1: 2072:53
    }
}

const RTM_DELLINK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2532:24: 2532:27

    bb0: {
        _0 = const 17_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2532:30: 2532:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2532:1: 2532:33
    }
}

const FAN_MODIFY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3014:23: 3014:26

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3014:29: 3014:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3014:1: 3014:41
    }
}

const ERA_T_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1122:30: 1122:39

    bb0: {
        _0 = const 131121_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1122:42: 1122:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1122:9: 1122:50
    }
}

const NT_LWPSINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:950:24: 950:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:950:34: 950:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:950:1: 950:37
    }
}

const MCAST_JOIN_GROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:891:29: 891:36

    bb0: {
        _0 = const 42_i32;               // scope 0 at src/unix/linux_like/mod.rs:891:39: 891:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:891:1: 891:42
    }
}

const ARPHRD_FRAD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1347:24: 1347:27

    bb0: {
        _0 = const 770_u16;              // scope 0 at src/unix/linux_like/mod.rs:1347:30: 1347:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1347:1: 1347:34
    }
}

const SIG_SETMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:527:24: 527:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:527:34: 527:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:527:1: 527:36
    }
}

const CGROUP2_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1384:40: 1384:48

    bb0: {
        _0 = const 1667723888_i64;       // scope 0 at src/unix/linux_like/mod.rs:1384:51: 1384:61
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1384:9: 1384:62
    }
}

const IFLA_PORT_SELF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1411:27: 1411:37

    bb0: {
        _0 = const 25_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1411:40: 1411:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1411:1: 1411:43
    }
}

const SYS_io_setup: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:285:25: 285:33

    bb0: {
        _0 = const 206_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:285:36: 285:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:285:1: 285:40
    }
}

const BPF_JGE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1928:20: 1928:27

    bb0: {
        _0 = const 48_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1928:30: 1928:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1928:1: 1928:35
    }
}

const RLIMIT_LOCKS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:238:33: 238:54

    bb0: {
        _0 = const 10_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:238:57: 238:59
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:238:9: 238:60
    }
}

const IPTOS_ECN_NOT_ECT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2384:30: 2384:32

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2384:35: 2384:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2384:1: 2384:40
    }
}

const NFT_MSG_DELSETELEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2846:31: 2846:38

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2846:41: 2846:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2846:1: 2846:44
    }
}

const INADDR_LOOPBACK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:294:28: 294:37

    bb0: {
        _0 = const 2130706433_u32;       // scope 0 at src/unix/mod.rs:294:40: 294:50
        return;                          // scope 0 at src/unix/mod.rs:294:1: 294:51
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::dirent64) -> linux::dirent64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::dirent64; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_UINT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:786:25: 786:32

    bb0: {
        _0 = const 116_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:786:35: 786:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:786:1: 786:39
    }
}

const PF_NETROM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:729:22: 729:29

    bb0: {
        _0 = const AF_NETROM;            // scope 0 at src/unix/linux_like/mod.rs:729:32: 729:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:729:1: 729:42
    }
}

const RTLD_LOCAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1192:23: 1192:30

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1192:33: 1192:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1192:1: 1192:35
    }
}

const _SC_THREAD_SPORADIC_SERVER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1268:39: 1268:46

    bb0: {
        _0 = const 161_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1268:49: 1268:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1268:1: 1268:53
    }
}

const SYS_getcwd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:158:23: 158:31

    bb0: {
        _0 = const 79_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:158:34: 158:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:158:1: 158:37
    }
}

const PR_CAP_AMBIENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1773:27: 1773:34

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1773:37: 1773:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1773:1: 1773:40
    }
}

const SCM_TXTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:90:23: 90:30

    bb0: {
        _0 = const SO_TXTIME;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:90:33: 90:42
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:90:1: 90:43
    }
}

const CTRL_ATTR_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2232:29: 2232:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2232:39: 2232:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2232:1: 2232:41
    }
}

const ALG_OP_DECRYPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2677:27: 2677:34

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2677:37: 2677:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2677:1: 2677:39
    }
}

const CAN_SFF_ID_BITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3165:28: 3165:35

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3165:38: 3165:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3165:1: 3165:41
    }
}

const MAP_HUGE_512MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:627:27: 627:34

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_512MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:627:37: 627:62
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:627:1: 627:63
    }
}

const MS_NODEV: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:594:21: 594:30

    bb0: {
        _0 = const 4_u64;                // scope 0 at src/unix/linux_like/mod.rs:594:33: 594:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:594:1: 594:38
    }
}

const EPOLL_CTL_ADD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1050:26: 1050:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1050:36: 1050:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1050:1: 1050:38
    }
}

const CIBAUD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:674:19: 674:29

    bb0: {
        _0 = const 269418496_u32;        // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:674:32: 674:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:674:1: 674:46
    }
}

const _PC_MAX_INPUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1139:26: 1139:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1139:36: 1139:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1139:1: 1139:38
    }
}

const EFD_SEMAPHORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1588:26: 1588:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1588:36: 1588:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1588:1: 1588:40
    }
}

const SYS_pkey_alloc: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:409:27: 409:35

    bb0: {
        _0 = const 330_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:409:38: 409:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:409:1: 409:42
    }
}

const NFNLGRP_CONNTRACK_UPDATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2069:37: 2069:44

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2069:47: 2069:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2069:1: 2069:49
    }
}

const TCA_STATS2: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2528:23: 2528:33

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2528:36: 2528:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2528:1: 2528:38
    }
}

const UINPUT_VERSION: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3009:27: 3009:35

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3009:38: 3009:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3009:1: 3009:40
    }
}

const ERA_D_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1119:30: 1119:39

    bb0: {
        _0 = const 131118_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1119:42: 1119:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1119:9: 1119:50
    }
}

const NT_PRCRED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:947:22: 947:29

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:947:32: 947:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:947:1: 947:35
    }
}

const IPPROTO_MPLS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:887:25: 887:32

    bb0: {
        _0 = const 137_i32;              // scope 0 at src/unix/linux_like/mod.rs:887:35: 887:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:887:1: 887:39
    }
}

const ARPHRD_RAWHDLC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1343:27: 1343:30

    bb0: {
        _0 = const 518_u16;              // scope 0 at src/unix/linux_like/mod.rs:1343:33: 1343:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1343:1: 1343:37
    }
}

const SIGUNUSED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:524:22: 524:29

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:524:32: 524:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:524:1: 524:35
    }
}

const AUTOFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1381:39: 1381:47

    bb0: {
        _0 = const 391_i64;              // scope 0 at src/unix/linux_like/mod.rs:1381:50: 1381:56
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1381:9: 1381:57
    }
}

const IFLA_VFINFO_LIST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1408:29: 1408:39

    bb0: {
        _0 = const 22_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1408:42: 1408:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1408:1: 1408:45
    }
}

const SYS_sched_setaffinity: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:282:34: 282:42

    bb0: {
        _0 = const 203_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:282:45: 282:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:282:1: 282:49
    }
}

const BPF_JA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1925:19: 1925:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1925:29: 1925:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1925:1: 1925:34
    }
}

const RLIMIT_NOFILE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:235:34: 235:55

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:235:58: 235:59
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:235:9: 235:60
    }
}

const SIOCSIFMAP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2379:23: 2379:32

    bb0: {
        _0 = const 35185_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2379:35: 2379:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2379:1: 2379:46
    }
}

const NFT_MSG_DELSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2843:27: 2843:34

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2843:37: 2843:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2843:1: 2843:40
    }
}

const IPPROTO_UDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:290:24: 290:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/mod.rs:290:34: 290:36
        return;                          // scope 0 at src/unix/mod.rs:290:1: 290:37
    }
}

linux::dirent::d_name::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:614:32: 614:35

    bb0: {
        _0 = const 256_usize;            // scope 0 at src/unix/linux_like/linux/mod.rs:614:32: 614:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:614:32: 614:35
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::timeval) -> unix::timeval {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::timeval;           // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_SHRT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:783:25: 783:32

    bb0: {
        _0 = const 113_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:783:35: 783:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:783:1: 783:39
    }
}

const PF_AX25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:726:20: 726:27

    bb0: {
        _0 = const AF_AX25;              // scope 0 at src/unix/linux_like/mod.rs:726:30: 726:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:726:1: 726:38
    }
}

const SPLICE_F_NONBLOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1188:30: 1188:38

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/mod.rs:1188:41: 1188:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1188:1: 1188:46
    }
}

const _SC_SHELL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1265:22: 1265:29

    bb0: {
        _0 = const 157_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1265:32: 1265:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1265:1: 1265:36
    }
}

const SYS_truncate: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:155:25: 155:33

    bb0: {
        _0 = const 76_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:155:36: 155:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:155:1: 155:39
    }
}

const PR_GET_FP_MODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1769:27: 1769:34

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1769:37: 1769:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1769:1: 1769:40
    }
}

const SO_PEERGROUPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:87:26: 87:33

    bb0: {
        _0 = const 59_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:87:36: 87:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:87:1: 87:39
    }
}

const CTRL_CMD_NEWMCAST_GRP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2228:34: 2228:41

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2228:44: 2228:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2228:1: 2228:46
    }
}

const ALG_SET_OP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2673:23: 2673:30

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2673:33: 2673:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2673:1: 2673:35
    }
}

const CAN_SFF_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3161:25: 3161:32

    bb0: {
        _0 = const 2047_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:3161:35: 3161:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3161:1: 3161:46
    }
}

const MAP_HUGE_16MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:624:26: 624:33

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_16MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:624:36: 624:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:624:1: 624:61
    }
}

const MS_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:589:20: 589:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:589:30: 589:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:589:1: 589:37
    }
}

const EPOLLWAKEUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1046:24: 1046:31

    bb0: {
        _0 = const 536870912_i32;        // scope 0 at src/unix/linux_like/mod.rs:1046:34: 1046:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1046:1: 1046:45
    }
}

const ICANON: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:671:19: 671:29

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:671:32: 671:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:671:1: 671:43
    }
}

const L_tmpnam: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1136:21: 1136:29

    bb0: {
        _0 = const 20_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1136:32: 1136:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1136:1: 1136:35
    }
}

const QFMT_VFS_OLD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1584:25: 1584:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1584:35: 1584:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1584:1: 1584:37
    }
}

const SYS_preadv2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:406:24: 406:32

    bb0: {
        _0 = const 327_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:406:35: 406:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:406:1: 406:39
    }
}

const linux::NLMSG_MIN_TYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2064:27: 2064:34

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2064:37: 2064:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2064:1: 2064:42
    }
}

const TCA_XSTATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2525:23: 2525:33

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2525:36: 2525:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2525:1: 2525:38
    }
}

const REP_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3004:20: 3004:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:44
        _1 = const REP_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:3004:28: 3004:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3004:47: 3004:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3004:1: 3004:49
    }
}

const T_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1115:26: 1115:35

    bb0: {
        _0 = const 131114_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1115:38: 1115:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1115:9: 1115:46
    }
}

const NT_ASRS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:944:20: 944:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:944:30: 944:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:944:1: 944:32
    }
}

const IPPROTO_UDPLITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:883:28: 883:35

    bb0: {
        _0 = const 136_i32;              // scope 0 at src/unix/linux_like/mod.rs:883:38: 883:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:883:1: 883:42
    }
}

const ARPHRD_HDLC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1340:24: 1340:27

    bb0: {
        _0 = const ARPHRD_CISCO;         // scope 0 at src/unix/linux_like/mod.rs:1340:30: 1340:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1340:1: 1340:43
    }
}

const SIGIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:520:18: 520:25

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:520:28: 520:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:520:1: 520:31
    }
}

const ADFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1378:37: 1378:45

    bb0: {
        _0 = const 44533_i64;            // scope 0 at src/unix/linux_like/mod.rs:1378:48: 1378:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1378:9: 1378:59
    }
}

const IFLA_NET_NS_PID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1405:28: 1405:38

    bb0: {
        _0 = const 19_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1405:41: 1405:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1405:1: 1405:44
    }
}

const SYS_tkill: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:279:22: 279:30

    bb0: {
        _0 = const 200_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:279:33: 279:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:279:1: 279:37
    }
}

const BPF_NEG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1922:20: 1922:27

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1922:30: 1922:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1922:1: 1922:35
    }
}

const RLIMIT_CORE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:232:32: 232:53

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:232:56: 232:57
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:232:9: 232:58
    }
}

const SIOCGRARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2376:22: 2376:31

    bb0: {
        _0 = const 35169_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2376:34: 2376:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2376:1: 2376:45
    }
}

const NFT_MSG_DELRULE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2840:28: 2840:35

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2840:38: 2840:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2840:1: 2840:40
    }
}

const IPPROTO_ICMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:287:25: 287:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/mod.rs:287:35: 287:36
        return;                          // scope 0 at src/unix/mod.rs:287:1: 287:37
    }
}

const _SC_SSIZE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:780:26: 780:33

    bb0: {
        _0 = const 110_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:780:36: 780:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:780:1: 780:40
    }
}

const PF_UNIX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:723:20: 723:27

    bb0: {
        _0 = const AF_UNIX;              // scope 0 at src/unix/linux_like/mod.rs:723:30: 723:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:723:1: 723:38
    }
}

const __WALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1184:19: 1184:26

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/mod.rs:1184:29: 1184:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1184:1: 1184:40
    }
}

const _SC_READER_WRITER_LOCKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1262:36: 1262:43

    bb0: {
        _0 = const 153_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1262:46: 1262:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1262:1: 1262:50
    }
}

const SYS_flock: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:152:22: 152:30

    bb0: {
        _0 = const 73_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:152:33: 152:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:152:1: 152:36
    }
}

const PR_MPX_ENABLE_MANAGEMENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1765:37: 1765:44

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1765:47: 1765:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1765:1: 1765:50
    }
}

const SO_INCOMING_NAPI_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:84:32: 84:39

    bb0: {
        _0 = const 56_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:84:42: 84:44
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:84:1: 84:45
    }
}

const CTRL_CMD_NEWOPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2225:28: 2225:35

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2225:38: 2225:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2225:1: 2225:40
    }
}

const SOF_TIMESTAMPING_RAW_HARDWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2662:42: 2662:50
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2662:53: 2662:59

    bb0: {
        _1 = CheckedShl(const 1_u32, const 6_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2662:53: 2662:59
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 6_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2662:53: 2662:59
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2662:53: 2662:59
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2662:1: 2662:60
    }
}

const CAN_EFF_FLAG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3158:25: 3158:32

    bb0: {
        _0 = const 2147483648_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3158:35: 3158:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3158:1: 3158:46
    }
}

const MAP_HUGE_1MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:621:25: 621:32

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_1MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:621:35: 621:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:621:1: 621:59
    }
}

const MAP_FAILED: *mut core::ffi::c_void = {
    let mut _0: *mut core::ffi::c_void;  // return place in scope 0 at src/unix/linux_like/mod.rs:584:23: 584:36
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:584:39: 584:41

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:584:39: 584:41
        _1 = Not(const 0_usize);         // scope 0 at src/unix/linux_like/mod.rs:584:39: 584:41
        _0 = move _1 as *mut core::ffi::c_void (Misc); // scope 0 at src/unix/linux_like/mod.rs:584:39: 584:58
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:584:57: 584:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:584:1: 584:59
    }
}

const EPOLLMSG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1043:21: 1043:28

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:1043:31: 1043:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1043:1: 1043:37
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ip_mreqn) -> ip_mreqn {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::ip_mreqn; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ECHOPRT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:668:20: 668:30

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:668:33: 668:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:668:1: 668:44
    }
}

const SHM_UNLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1578:23: 1578:30

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1578:33: 1578:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1578:1: 1578:36
    }
}

const SYS_membarrier: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:403:27: 403:35

    bb0: {
        _0 = const 324_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:403:38: 403:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:403:1: 403:42
    }
}

const NLMSG_ERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2061:24: 2061:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2061:34: 2061:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2061:1: 2061:38
    }
}

const TCA_KIND: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2522:21: 2522:31

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2522:34: 2522:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2522:1: 2522:36
    }
}

const LED_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3001:20: 3001:27

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:3001:30: 3001:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3001:1: 3001:35
    }
}

const PM_STR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1111:27: 1111:36

    bb0: {
        _0 = const 131111_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1111:39: 1111:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1111:9: 1111:47
    }
}

const NT_PLATFORM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:941:24: 941:31

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:941:34: 941:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:941:1: 941:36
    }
}

const IPPROTO_COMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:879:25: 879:32

    bb0: {
        _0 = const 108_i32;              // scope 0 at src/unix/linux_like/mod.rs:879:35: 879:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:879:1: 879:39
    }
}

const ARPHRD_CAN: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1337:23: 1337:26

    bb0: {
        _0 = const 280_u16;              // scope 0 at src/unix/linux_like/mod.rs:1337:29: 1337:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1337:1: 1337:33
    }
}

const SIGSTOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:517:20: 517:27

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:517:30: 517:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:517:1: 517:33
    }
}

const TCP_INQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1007:28: 1007:35

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/mod.rs:1007:38: 1007:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1007:9: 1007:41
    }
}

const IFLA_OPERSTATE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1402:27: 1402:37

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1402:40: 1402:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1402:1: 1402:43
    }
}

const SYS_removexattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:276:28: 276:36

    bb0: {
        _0 = const 197_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:276:39: 276:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:276:1: 276:43
    }
}

const BPF_AND: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1919:20: 1919:27

    bb0: {
        _0 = const 80_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1919:30: 1919:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1919:1: 1919:35
    }
}

const RLIMIT_FSIZE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:229:33: 229:54

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:229:57: 229:58
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:229:9: 229:59
    }
}

const SIOCGARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2373:21: 2373:30

    bb0: {
        _0 = const 35156_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2373:33: 2373:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2373:1: 2373:44
    }
}

const NFT_MSG_DELCHAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2837:29: 2837:36

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2837:39: 2837:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2837:1: 2837:41
    }
}

const LOG_FACMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:282:24: 282:31

    bb0: {
        _0 = const 1016_i32;             // scope 0 at src/unix/mod.rs:282:34: 282:39
        return;                          // scope 0 at src/unix/mod.rs:282:1: 282:40
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &utimbuf) -> utimbuf {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::utimbuf;           // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_LONG_BIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:777:25: 777:32

    bb0: {
        _0 = const 106_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:777:35: 777:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:777:1: 777:39
    }
}

const AF_CAIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:719:20: 719:27

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/mod.rs:719:30: 719:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:719:1: 719:33
    }
}

const PTRACE_EVENT_EXIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1180:30: 1180:37

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:1180:40: 1180:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1180:1: 1180:42
    }
}

const _SC_CPUTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1259:24: 1259:31

    bb0: {
        _0 = const 138_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1259:34: 1259:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1259:1: 1259:38
    }
}

const SYS_msgrcv: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:149:23: 149:31

    bb0: {
        _0 = const 70_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:149:34: 149:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:149:1: 149:37
    }
}

const PR_GET_TID_ADDRESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1760:31: 1760:38

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1760:41: 1760:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1760:1: 1760:44
    }
}

const SO_CNX_ADVICE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:81:26: 81:33

    bb0: {
        _0 = const 53_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:81:36: 81:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:81:1: 81:39
    }
}

const CTRL_CMD_NEWFAMILY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2222:31: 2222:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2222:41: 2222:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2222:1: 2222:43
    }
}

const SOF_TIMESTAMPING_RX_SOFTWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2659:41: 2659:49
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2659:52: 2659:58

    bb0: {
        _1 = CheckedShl(const 1_u32, const 3_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2659:52: 2659:58
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2659:52: 2659:58
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2659:52: 2659:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2659:1: 2659:59
    }
}

const EDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3153:17: 3153:24

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3153:27: 3153:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3153:1: 3153:30
    }
}

const MAP_HUGE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:617:26: 617:33

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_MASK; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:617:36: 617:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:617:1: 617:61
    }
}

const MAP_SHARED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:580:23: 580:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:580:33: 580:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:580:1: 580:40
    }
}

const EPOLLRDBAND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1040:24: 1040:31

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/mod.rs:1040:34: 1040:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1040:1: 1040:39
    }
}

const ECHOE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:665:18: 665:28

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:665:31: 665:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:665:1: 665:42
    }
}

const SHM_RND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1574:20: 1574:27

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1574:30: 1574:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1574:1: 1574:38
    }
}

const SYS_bpf: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:400:20: 400:28

    bb0: {
        _0 = const 321_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:400:31: 400:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:400:1: 400:35
    }
}

const POSIX_SPAWN_SETSCHEDPARAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2057:38: 2057:45

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2057:48: 2057:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2057:1: 2057:53
    }
}

const NLA_F_NET_BYTEORDER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2517:32: 2517:39
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2517:42: 2517:49

    bb0: {
        _1 = CheckedShl(const 1_i32, const 14_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2517:42: 2517:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 14_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2517:42: 2517:49
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2517:42: 2517:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2517:1: 2517:50
    }
}

const SW_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2998:19: 2998:24
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:42
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:46

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:42
        _1 = const SW_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:42
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:46
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:46
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2998:27: 2998:46
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2998:45: 2998:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2998:1: 2998:47
    }
}

const MON_11: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1107:27: 1107:36

    bb0: {
        _0 = const 131108_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1107:39: 1107:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1107:9: 1107:47
    }
}

const LOG_NDELAY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:277:31: 277:38

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/mod.rs:277:41: 277:45
        return;                          // scope 0 at src/unix/mod.rs:277:9: 277:46
    }
}

const NT_PRPSINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:938:24: 938:31

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:938:34: 938:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:938:1: 938:36
    }
}

const IPPROTO_MTP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:873:24: 873:31

    bb0: {
        _0 = const 92_i32;               // scope 0 at src/unix/linux_like/mod.rs:873:34: 873:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:873:1: 873:37
    }
}

const ARPHRD_ROSE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1334:24: 1334:27

    bb0: {
        _0 = const 270_u16;              // scope 0 at src/unix/linux_like/mod.rs:1334:30: 1334:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1334:1: 1334:34
    }
}

const SIGUSR1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:514:20: 514:27

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:514:30: 514:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:514:1: 514:33
    }
}

const TCP_FASTOPEN_KEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1004:37: 1004:44

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/mod.rs:1004:47: 1004:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1004:9: 1004:50
    }
}

const IFLA_TXQLEN: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1399:24: 1399:34

    bb0: {
        _0 = const 13_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1399:37: 1399:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1399:1: 1399:40
    }
}

const SYS_listxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:273:26: 273:34

    bb0: {
        _0 = const 194_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:273:37: 273:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:273:1: 273:41
    }
}

const BPF_MUL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1916:20: 1916:27

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1916:30: 1916:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1916:1: 1916:35
    }
}

const SO_DETACH_REUSEPORT_BPF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:104:44: 104:51

    bb0: {
        _0 = const 68_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:104:54: 104:56
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:104:9: 104:57
    }
}

const SIOCADDMULTI: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2370:25: 2370:34

    bb0: {
        _0 = const 35121_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2370:37: 2370:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2370:1: 2370:48
    }
}

const NFT_MSG_DELTABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2834:29: 2834:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2834:39: 2834:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2834:1: 2834:41
    }
}

const LOG_LOCAL6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:269:23: 269:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:269:33: 269:40

    bb0: {
        _1 = CheckedShl(const 22_i32, const 3_i32); // scope 0 at src/unix/mod.rs:269:33: 269:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:269:33: 269:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:269:33: 269:40
        return;                          // scope 0 at src/unix/mod.rs:269:1: 269:41
    }
}

const _SC_CHAR_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:774:25: 774:32

    bb0: {
        _0 = const 103_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:774:35: 774:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:774:1: 774:39
    }
}

const AF_ISDN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:716:20: 716:27

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/mod.rs:716:30: 716:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:716:1: 716:33
    }
}

const PTRACE_EVENT_CLONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1177:31: 1177:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:1177:41: 1177:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1177:1: 1177:43
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::sigaction) -> b64::x86_64::sigaction {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::sigaction; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_ADVISORY_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1256:30: 1256:37

    bb0: {
        _0 = const 132_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1256:40: 1256:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1256:1: 1256:44
    }
}

const SYS_shmdt: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:146:22: 146:30

    bb0: {
        _0 = const 67_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:146:33: 146:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:146:1: 146:36
    }
}

const PR_GET_CHILD_SUBREAPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1755:35: 1755:42

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1755:45: 1755:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1755:1: 1755:48
    }
}

const SO_DETACH_BPF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:78:26: 78:33

    bb0: {
        _0 = const SO_DETACH_FILTER;     // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:78:36: 78:52
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:78:1: 78:53
    }
}

const GENL_CMD_CAP_HASPOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2217:32: 2217:39

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2217:42: 2217:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2217:1: 2217:47
    }
}

const SOF_TIMESTAMPING_TX_HARDWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2656:41: 2656:49
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2656:52: 2656:58

    bb0: {
        _1 = CheckedShl(const 1_u32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2656:52: 2656:58
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2656:52: 2656:58
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2656:52: 2656:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2656:1: 2656:59
    }
}

const EROFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3150:18: 3150:25

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3150:28: 3150:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3150:1: 3150:31
    }
}

const HUGETLB_FLAG_ENCODE_2GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:36: 605:43
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:46: 605:77

    bb0: {
        _1 = CheckedShl(const 31_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:46: 605:77
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:46: 605:77
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:46: 605:77
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:605:1: 605:78
    }
}

const linux_like::LC_MONETARY_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:575:29: 575:36
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:575:39: 575:55

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_MONETARY); // scope 0 at src/unix/linux_like/mod.rs:575:39: 575:55
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_MONETARY) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:575:39: 575:55
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:575:39: 575:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:575:1: 575:56
    }
}

const EPOLLERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1037:21: 1037:28

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:1037:31: 1037:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1037:1: 1037:35
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ip_mreq) -> ip_mreq {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::ip_mreq; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const HUPCL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:662:18: 662:28

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:662:31: 662:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:662:1: 662:42
    }
}

const SHM_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1570:18: 1570:25

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1570:28: 1570:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1570:1: 1570:34
    }
}

const SYS_getrandom: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:397:26: 397:34

    bb0: {
        _0 = const 318_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:397:37: 397:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:397:1: 397:41
    }
}

const POSIX_SPAWN_SETPGROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2054:34: 2054:41

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2054:44: 2054:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2054:1: 2054:49
    }
}

const NETLINK_EXT_ACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2513:28: 2513:35

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2513:38: 2513:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2513:1: 2513:41
    }
}

const ABS_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2995:20: 2995:27

    bb0: {
        _0 = const 63_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2995:30: 2995:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2995:1: 2995:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf32_Sym) -> Elf32_Sym {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf32_Sym; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MON_8: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1104:26: 1104:35

    bb0: {
        _0 = const 131105_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1104:38: 1104:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1104:9: 1104:46
    }
}

const LOG_PID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:274:28: 274:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/mod.rs:274:38: 274:42
        return;                          // scope 0 at src/unix/mod.rs:274:9: 274:43
    }
}

const NT_PRSTATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:935:24: 935:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:935:34: 935:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:935:1: 935:36
    }
}

const IPPROTO_AH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:867:23: 867:30

    bb0: {
        _0 = const 51_i32;               // scope 0 at src/unix/linux_like/mod.rs:867:33: 867:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:867:1: 867:36
    }
}

const ARPHRD_CSLIP6: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1331:26: 1331:29

    bb0: {
        _0 = const 259_u16;              // scope 0 at src/unix/linux_like/mod.rs:1331:32: 1331:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1331:1: 1331:36
    }
}

const SIGWINCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:511:21: 511:28

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:511:31: 511:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:511:1: 511:34
    }
}

const TCP_FASTOPEN_CONNECT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1001:41: 1001:48

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/mod.rs:1001:51: 1001:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1001:9: 1001:54
    }
}

const IFLA_MASTER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1396:24: 1396:34

    bb0: {
        _0 = const 10_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1396:37: 1396:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1396:1: 1396:40
    }
}

const SYS_getxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:270:25: 270:33

    bb0: {
        _0 = const 191_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:270:36: 270:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:270:1: 270:40
    }
}

const BPF_MSH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1913:20: 1913:27

    bb0: {
        _0 = const 160_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1913:30: 1913:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1913:1: 1913:35
    }
}

const SO_TIMESTAMPING_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:101:40: 101:47

    bb0: {
        _0 = const 65_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:101:50: 101:52
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:101:9: 101:53
    }
}

const SIOCGIFHWADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2367:26: 2367:35

    bb0: {
        _0 = const 35111_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2367:38: 2367:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2367:1: 2367:49
    }
}

const NFT_RETURN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2830:23: 2830:30

    bb0: {
        _0 = const -5_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2830:33: 2830:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2830:1: 2830:36
    }
}

const LOG_LOCAL3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:266:23: 266:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:266:33: 266:40

    bb0: {
        _1 = CheckedShl(const 19_i32, const 3_i32); // scope 0 at src/unix/mod.rs:266:33: 266:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:266:33: 266:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:266:33: 266:40
        return;                          // scope 0 at src/unix/mod.rs:266:1: 266:41
    }
}

const _SC_2_C_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:771:28: 771:35

    bb0: {
        _0 = const 96_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:771:38: 771:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:771:1: 771:41
    }
}

const AF_BLUETOOTH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:713:25: 713:32

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/mod.rs:713:35: 713:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:713:1: 713:38
    }
}

const PTRACE_O_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1172:26: 1172:33

    bb0: {
        _0 = const 3145983_i32;          // scope 0 at src/unix/linux_like/mod.rs:1172:36: 1172:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1172:1: 1172:47
    }
}

const _SC_XOPEN_LEGACY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1253:29: 1253:36

    bb0: {
        _0 = const 129_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1253:39: 1253:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1253:1: 1253:43
    }
}

const SYS_semget: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:143:23: 143:31

    bb0: {
        _0 = const 64_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:143:34: 143:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:143:1: 143:37
    }
}

const PR_SET_MM_MAP_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1750:31: 1750:38

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1750:41: 1750:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1750:1: 1750:44
    }
}

const SO_BPF_EXTENSIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:75:30: 75:37

    bb0: {
        _0 = const 48_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:75:40: 75:42
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:75:1: 75:43
    }
}

const GENL_ADMIN_PERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2214:28: 2214:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2214:38: 2214:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2214:1: 2214:43
    }
}

const ATF_MAGIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2649:22: 2649:29

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2649:32: 2649:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2649:1: 2649:37
    }
}

const EFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3147:18: 3147:25

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3147:28: 3147:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3147:1: 3147:31
    }
}

const HUGETLB_FLAG_ENCODE_256MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:38: 602:45
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:48: 602:79

    bb0: {
        _1 = CheckedShl(const 28_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:48: 602:79
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:48: 602:79
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:48: 602:79
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:602:1: 602:80
    }
}

const linux_like::LC_NUMERIC_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:572:28: 572:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:572:38: 572:53

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_NUMERIC); // scope 0 at src/unix/linux_like/mod.rs:572:38: 572:53
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_NUMERIC) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:572:38: 572:53
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:572:38: 572:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:572:1: 572:54
    }
}

const EPOLLIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1034:20: 1034:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1034:30: 1034:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1034:1: 1034:34
    }
}

const CREAD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:659:18: 659:28

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:659:31: 659:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:659:1: 659:42
    }
}

const MSG_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1565:21: 1565:28

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1565:31: 1565:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1565:1: 1565:34
    }
}

const SYS_sched_getattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:394:30: 394:38

    bb0: {
        _0 = const 315_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:394:41: 394:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:394:1: 394:45
    }
}

const ETH_P_IEEE802154: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2050:29: 2050:36

    bb0: {
        _0 = const 246_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2050:39: 2050:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2050:1: 2050:46
    }
}

const NETLINK_LISTEN_ALL_NSID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2510:36: 2510:43

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2510:46: 2510:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2510:1: 2510:48
    }
}

const KEY_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2992:20: 2992:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:44
        _1 = const KEY_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2992:28: 2992:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2992:47: 2992:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2992:1: 2992:49
    }
}

const MON_5: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1101:26: 1101:35

    bb0: {
        _0 = const 131102_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1101:38: 1101:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1101:9: 1101:46
    }
}

const FD_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:224:31: 224:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/mod.rs:224:41: 224:44
        return;                          // scope 0 at src/unix/mod.rs:224:9: 224:45
    }
}

const GENL_UNS_ADMIN_PERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:929:32: 929:39

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:929:42: 929:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:929:1: 929:47
    }
}

const IPPROTO_RSVP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:861:25: 861:32

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/mod.rs:861:35: 861:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:861:1: 861:38
    }
}

const ARPHRD_SLIP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1328:24: 1328:27

    bb0: {
        _0 = const 256_u16;              // scope 0 at src/unix/linux_like/mod.rs:1328:30: 1328:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1328:1: 1328:34
    }
}

const SIGXFSZ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:508:20: 508:27

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:508:30: 508:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:508:1: 508:33
    }
}

const LC_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:567:27: 567:34

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:567:37: 567:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:567:9: 567:39
    }
}

const IFLA_STATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1393:23: 1393:33

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1393:36: 1393:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1393:1: 1393:38
    }
}

const SYS_setxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:267:25: 267:33

    bb0: {
        _0 = const 188_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:267:36: 267:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:267:1: 267:40
    }
}

const BPF_IND: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1910:20: 1910:27

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1910:30: 1910:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1910:1: 1910:35
    }
}

const SIOCSIFHWADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2364:26: 2364:35

    bb0: {
        _0 = const 35108_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2364:38: 2364:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2364:1: 2364:49
    }
}

const NFT_BREAK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2827:22: 2827:29

    bb0: {
        _0 = const -2_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2827:32: 2827:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2827:1: 2827:35
    }
}

const LOG_LOCAL0: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:263:23: 263:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:263:33: 263:40

    bb0: {
        _1 = CheckedShl(const 16_i32, const 3_i32); // scope 0 at src/unix/mod.rs:263:33: 263:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:263:33: 263:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:263:33: 263:40
        return;                          // scope 0 at src/unix/mod.rs:263:1: 263:41
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sockaddr_nl) -> sockaddr_nl {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::sockaddr_nl; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_PII_OSI_CLTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:768:29: 768:36

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:768:39: 768:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:768:1: 768:42
    }
}

const AF_LLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:710:19: 710:26

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/mod.rs:710:29: 710:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:710:1: 710:32
    }
}

const PTRACE_O_TRACESECCOMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1169:34: 1169:41

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/mod.rs:1169:44: 1169:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1169:1: 1169:55
    }
}

const _SC_XBS5_ILP32_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1250:34: 1250:41

    bb0: {
        _0 = const 126_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1250:44: 1250:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1250:1: 1250:48
    }
}

const SYS_wait4: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:140:22: 140:30

    bb0: {
        _0 = const 61_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:140:33: 140:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:140:1: 140:36
    }
}

const PR_SET_MM_AUXV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1747:27: 1747:34

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1747:37: 1747:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1747:1: 1747:40
    }
}

const SO_SELECT_ERR_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:72:32: 72:39

    bb0: {
        _0 = const 45_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:72:42: 72:44
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:72:1: 72:45
    }
}

const GENL_NAMSIZ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2209:24: 2209:31

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2209:34: 2209:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2209:1: 2209:37
    }
}

const ARPD_UPDATE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2646:24: 2646:34

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2646:37: 2646:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2646:1: 2646:42
    }
}

const EMFILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3144:19: 3144:26

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3144:29: 3144:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3144:1: 3144:32
    }
}

const HUGETLB_FLAG_ENCODE_8MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:36: 599:43
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:46: 599:77

    bb0: {
        _1 = CheckedShl(const 23_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:46: 599:77
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:46: 599:77
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:46: 599:77
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:599:1: 599:78
    }
}

const XATTR_CREATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:556:25: 556:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:556:35: 556:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:556:1: 556:39
    }
}

const PATH_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1028:21: 1028:28

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/mod.rs:1028:31: 1028:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1028:1: 1028:36
    }
}

const CS7: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:656:16: 656:26

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:656:29: 656:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:656:1: 656:40
    }
}

const IPC_STAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1562:21: 1562:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1562:31: 1562:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1562:1: 1562:33
    }
}

const SYS_kcmp: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:391:21: 391:29

    bb0: {
        _0 = const 312_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:391:32: 391:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:391:1: 391:36
    }
}

const ETH_P_DSA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2047:22: 2047:29

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2047:32: 2047:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2047:1: 2047:39
    }
}

const NETLINK_NO_ENOBUFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2507:31: 2507:38

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2507:41: 2507:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2507:1: 2507:43
    }
}

const SYN_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2989:20: 2989:27

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2989:30: 2989:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2989:1: 2989:34
    }
}

const MON_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1098:26: 1098:35

    bb0: {
        _0 = const 131099_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1098:38: 1098:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1098:9: 1098:46
    }
}

const IFA_F_MCAUTOJOIN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:924:29: 924:32

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:924:35: 924:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:924:1: 924:41
    }
}

const IPPROTO_DCCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:854:25: 854:32

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/mod.rs:854:35: 854:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:854:1: 854:38
    }
}

const ARPHRD_IEEE1394: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1324:28: 1324:31

    bb0: {
        _0 = const 24_u16;               // scope 0 at src/unix/linux_like/mod.rs:1324:34: 1324:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1324:1: 1324:37
    }
}

const SIGTTIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:505:20: 505:27

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:505:30: 505:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:505:1: 505:33
    }
}

const LC_COLLATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:564:31: 564:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:564:41: 564:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:564:9: 564:43
    }
}

const IFLA_MTU: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1390:21: 1390:31

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1390:34: 1390:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1390:1: 1390:36
    }
}

const SYS_security: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:264:25: 264:33

    bb0: {
        _0 = const 185_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:264:36: 264:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:264:1: 264:40
    }
}

const BPF_B: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1907:18: 1907:25

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1907:28: 1907:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1907:1: 1907:33
    }
}

const SIOCSIFMEM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2361:23: 2361:32

    bb0: {
        _0 = const 35104_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2361:35: 2361:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2361:1: 2361:46
    }
}

const NFT_REG_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2823:25: 2823:32

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2823:35: 2823:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2823:1: 2823:38
    }
}

const LOG_LPR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:260:20: 260:27
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:260:30: 260:36

    bb0: {
        _1 = CheckedShl(const 6_i32, const 3_i32); // scope 0 at src/unix/mod.rs:260:30: 260:36
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:260:30: 260:36
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:260:30: 260:36
        return;                          // scope 0 at src/unix/mod.rs:260:1: 260:37
    }
}

const _SC_PII_INTERNET_STREAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:765:36: 765:43

    bb0: {
        _0 = const 61_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:765:46: 765:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:765:1: 765:49
    }
}

const AF_IRDA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:707:20: 707:27

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/mod.rs:707:30: 707:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:707:1: 707:33
    }
}

const PTRACE_O_TRACEEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1166:31: 1166:38

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:1166:41: 1166:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1166:1: 1166:52
    }
}

const _SC_XOPEN_XPG4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1247:27: 1247:34

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1247:37: 1247:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1247:1: 1247:41
    }
}

const SYS_vfork: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:137:22: 137:30

    bb0: {
        _0 = const 58_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:137:33: 137:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:137:1: 137:36
    }
}

const PR_SET_MM_ARG_END: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1744:30: 1744:37

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1744:40: 1744:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1744:1: 1744:42
    }
}

const SO_PEEK_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:69:24: 69:31

    bb0: {
        _0 = const 42_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:69:34: 69:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:69:1: 69:37
    }
}

const NFQA_SKB_CSUMNOTREADY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2205:34: 2205:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2205:44: 2205:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2205:1: 2205:51
    }
}

const RTMSG_CONTROL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2642:26: 2642:29

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2642:32: 2642:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2642:1: 2642:37
    }
}

const EISDIR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3141:19: 3141:26

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3141:29: 3141:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3141:1: 3141:32
    }
}

const HUGETLB_FLAG_ENCODE_512KB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:38: 596:45
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:48: 596:79

    bb0: {
        _1 = CheckedShl(const 19_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:48: 596:79
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:48: 596:79
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:48: 596:79
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:596:1: 596:80
    }
}

const PROT_READ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:552:22: 552:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:552:32: 552:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:552:1: 552:34
    }
}

const REG_EEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1106:21: 1106:28

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1106:31: 1106:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1106:1: 1106:34
    }
}

const LOCK_UN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1023:20: 1023:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:1023:30: 1023:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1023:1: 1023:32
    }
}

const ONLCR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:653:18: 653:28

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:653:31: 653:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:653:1: 653:35
    }
}

const IPC_NOWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1558:23: 1558:30

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1558:33: 1558:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1558:1: 1558:40
    }
}

const SYS_getcpu: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:388:23: 388:31

    bb0: {
        _0 = const 309_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:388:34: 388:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:388:1: 388:38
    }
}

const ETH_P_ECONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2044:25: 2044:32

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2044:35: 2044:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2044:1: 2044:42
    }
}

const NETLINK_DROP_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2504:36: 2504:43

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2504:46: 2504:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2504:1: 2504:48
    }
}

const INPUT_PROP_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2986:27: 2986:32
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:58
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:62

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:58
        _1 = const INPUT_PROP_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:58
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:62
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:62
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2986:35: 2986:62
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2986:61: 2986:62
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2986:1: 2986:63
    }
}

const ABMON_11: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1094:29: 1094:38

    bb0: {
        _0 = const 131096_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1094:41: 1094:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1094:9: 1094:49
    }
}

const IFA_FLAGS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:920:22: 920:32

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:920:35: 920:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:920:1: 920:37
    }
}

const IPPROTO_PUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:847:24: 847:31

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/mod.rs:847:34: 847:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:847:1: 847:37
    }
}

rtentry::rt_pad4::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:185:34: 185:40

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:185:34: 185:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:185:34: 185:40
    }
}

const ARPHRD_DLCI: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1321:24: 1321:27

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/mod.rs:1321:30: 1321:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1321:1: 1321:33
    }
}

const SA_ONSTACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:501:23: 501:30

    bb0: {
        _0 = const 134217728_i32;        // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:501:33: 501:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:501:1: 501:44
    }
}

const LC_CTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:561:29: 561:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:561:39: 561:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:561:9: 561:41
    }
}

const IFLA_ADDRESS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1387:25: 1387:35

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1387:38: 1387:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1387:1: 1387:40
    }
}

const SYS_putpmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:261:24: 261:32

    bb0: {
        _0 = const 182_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:261:35: 261:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:261:1: 261:39
    }
}

const BPF_MISC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1904:21: 1904:28

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1904:31: 1904:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1904:1: 1904:36
    }
}

const SIOCGIFMETRIC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2358:26: 2358:35

    bb0: {
        _0 = const 35101_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2358:38: 2358:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2358:1: 2358:49
    }
}

const NFT_REG32_13: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2819:25: 2819:32

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2819:35: 2819:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2819:1: 2819:38
    }
}

const LOG_DAEMON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:257:23: 257:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:257:33: 257:39

    bb0: {
        _1 = CheckedShl(const 3_i32, const 3_i32); // scope 0 at src/unix/mod.rs:257:33: 257:39
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:257:33: 257:39
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:257:33: 257:39
        return;                          // scope 0 at src/unix/mod.rs:257:1: 257:40
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nlattr) -> nlattr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::nlattr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_PII_OSI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:762:24: 762:31

    bb0: {
        _0 = const 57_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:762:34: 762:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:762:1: 762:37
    }
}

const AF_ATMSVC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:704:22: 704:29

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/mod.rs:704:32: 704:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:704:1: 704:35
    }
}

const PTRACE_O_TRACEFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1163:31: 1163:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1163:41: 1163:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1163:1: 1163:52
    }
}

const SECCOMP_GET_ACTION_AVAIL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:784:37: 784:45

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:784:48: 784:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:784:1: 784:50
    }
}

const _SC_2_UPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1244:22: 1244:29

    bb0: {
        _0 = const 97_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1244:32: 1244:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1244:1: 1244:35
    }
}

const SYS_getsockopt: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:134:27: 134:35

    bb0: {
        _0 = const 55_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:134:38: 134:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:134:1: 134:41
    }
}

const PR_SET_MM_START_BRK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1741:32: 1741:39

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1741:42: 1741:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1741:1: 1741:44
    }
}

const SO_RXQ_OVFL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:66:24: 66:31

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:66:34: 66:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:66:1: 66:37
    }
}

const NFQA_CFG_F_UID_GID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2201:31: 2201:38

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2201:41: 2201:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2201:1: 2201:48
    }
}

const RTMSG_DELROUTE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2639:27: 2639:30

    bb0: {
        _0 = const 34_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2639:33: 2639:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2639:1: 2639:38
    }
}

const EXDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3138:18: 3138:25

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3138:28: 3138:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3138:1: 3138:31
    }
}

const HUGETLB_FLAG_ENCODE_SHIFT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:592:38: 592:45

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:592:48: 592:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:592:1: 592:51
    }
}

const SIGALRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:548:20: 548:27

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/mod.rs:548:30: 548:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:548:1: 548:33
    }
}

const MAXTC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1081:18: 1081:26

    bb0: {
        _0 = const 6_i64;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1081:29: 1081:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1081:1: 1081:31
    }
}

const LOCK_SH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1020:20: 1020:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1020:30: 1020:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1020:1: 1020:32
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ptrace_syscall_info) -> ptrace_syscall_info {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::ptrace_syscall_info; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const VTIME: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:650:18: 650:23

    bb0: {
        _0 = const 5_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:650:26: 650:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:650:1: 650:28
    }
}

const IPC_PRIVATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1554:24: 1554:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1554:34: 1554:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1554:1: 1554:36
    }
}

const SYS_syncfs: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:385:23: 385:31

    bb0: {
        _0 = const 306_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:385:34: 385:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:385:1: 385:38
    }
}

const ETH_P_MOBITEX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2041:26: 2041:33

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2041:36: 2041:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2041:1: 2041:43
    }
}

const NLM_F_CREATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2500:25: 2500:32

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2500:35: 2500:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2500:1: 2500:41
    }
}

const FF_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2981:19: 2981:26

    bb0: {
        _0 = const 127_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2981:29: 2981:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2981:1: 2981:34
    }
}

const ABMON_8: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1091:28: 1091:37

    bb0: {
        _0 = const 131093_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1091:40: 1091:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1091:9: 1091:48
    }
}

const NDA_SRC_VNI: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:913:24: 913:34

    bb0: {
        _0 = const 11_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:913:37: 913:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:913:1: 913:40
    }
}

const IPPROTO_IGMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:840:25: 840:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:840:35: 840:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:840:1: 840:37
    }
}

const ARPHRD_IEEE802: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1318:27: 1318:30

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/mod.rs:1318:33: 1318:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1318:1: 1318:35
    }
}

const ERFKILL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:496:20: 496:27

    bb0: {
        _0 = const 132_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:496:30: 496:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:496:1: 496:34
    }
}

const IFA_F_TENTATIVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1382:28: 1382:31

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1382:34: 1382:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1382:1: 1382:39
    }
}

const SYS_quotactl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:258:25: 258:33

    bb0: {
        _0 = const 179_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:258:36: 258:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:258:1: 258:40
    }
}

const BPF_ALU: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1901:20: 1901:27

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1901:30: 1901:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1901:1: 1901:35
    }
}

const SIOCSIFBRDADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2355:27: 2355:36

    bb0: {
        _0 = const 35098_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2355:39: 2355:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2355:1: 2355:50
    }
}

const NFT_REG32_10: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2816:25: 2816:32

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2816:35: 2816:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2816:1: 2816:38
    }
}

const LOG_KERN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:254:21: 254:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/mod.rs:254:31: 254:32
        return;                          // scope 0 at src/unix/mod.rs:254:1: 254:33
    }
}

const _SC_PII_XTI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:759:24: 759:31

    bb0: {
        _0 = const 54_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:759:34: 759:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:759:1: 759:37
    }
}

const AF_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:701:22: 701:29

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:701:32: 701:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:701:1: 701:35
    }
}

const STICKY_TIMEOUTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1158:28: 1158:35

    bb0: {
        _0 = const 67108864_i32;         // scope 0 at src/unix/linux_like/mod.rs:1158:38: 1158:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1158:1: 1158:48
    }
}

const REG_CR2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:780:20: 780:27

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:780:30: 780:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:780:1: 780:33
    }
}

const _SC_XOPEN_ENH_I18N: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1241:31: 1241:38

    bb0: {
        _0 = const 93_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1241:41: 1241:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1241:1: 1241:44
    }
}

const SYS_getpeername: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:131:28: 131:36

    bb0: {
        _0 = const 52_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:131:39: 131:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:131:1: 131:42
    }
}

const PR_SET_MM_START_DATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1738:33: 1738:40

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1738:43: 1738:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1738:1: 1738:45
    }
}

const SO_TIMESTAMPING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:62:28: 62:35

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:62:38: 62:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:62:1: 62:41
    }
}

const NFQA_CFG_F_FAIL_OPEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2198:33: 2198:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2198:43: 2198:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2198:1: 2198:50
    }
}

const RTMSG_NEWDEVICE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2636:28: 2636:31

    bb0: {
        _0 = const 17_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2636:34: 2636:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2636:1: 2636:39
    }
}

const ENOTBLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3135:20: 3135:27

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3135:30: 3135:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3135:1: 3135:33
    }
}

const SIGKILL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:545:20: 545:27

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:545:30: 545:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:545:1: 545:32
    }
}

const TIME_WAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1078:22: 1078:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1078:32: 1078:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1078:1: 1078:34
    }
}

const SHUT_RD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1016:20: 1016:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1016:30: 1016:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1016:1: 1016:32
    }
}

const VSTART: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:647:19: 647:24

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:647:27: 647:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:647:1: 647:29
    }
}

const CLONE_PIDFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1538:24: 1538:31

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1538:34: 1538:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1538:1: 1538:41
    }
}

const SYS_name_to_handle_at: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:382:34: 382:42

    bb0: {
        _0 = const 303_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:382:45: 382:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:382:1: 382:49
    }
}

const ETH_P_CANFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2038:24: 2038:31

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2038:34: 2038:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2038:1: 2038:41
    }
}

const NLM_F_DUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2496:23: 2496:30

    bb0: {
        _0 = BitOr(const NLM_F_ROOT, const NLM_F_MATCH); // scope 0 at src/unix/linux_like/linux/mod.rs:2496:33: 2496:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2496:1: 2496:58
    }
}

const NFT_TRACETYPE_RULE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2975:31: 2975:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2975:41: 2975:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2975:1: 2975:43
    }
}

const ABMON_5: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1088:28: 1088:37

    bb0: {
        _0 = const 131090_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1088:40: 1088:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1088:9: 1088:48
    }
}

const NTF_OFFLOADED: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:909:26: 909:28

    bb0: {
        _0 = const 32_u8;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:909:31: 909:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:909:1: 909:36
    }
}

const IP_PMTUDISC_INTERFACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:832:34: 832:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:832:44: 832:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:832:1: 832:46
    }
}

const ARPHRD_AX25: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1315:24: 1315:27

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/mod.rs:1315:30: 1315:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1315:1: 1315:32
    }
}

const EOWNERDEAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:493:23: 493:30

    bb0: {
        _0 = const 130_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:493:33: 493:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:493:1: 493:37
    }
}

const IFA_F_DADFAILED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1379:28: 1379:31

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1379:34: 1379:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1379:1: 1379:39
    }
}

const SYS_delete_module: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:255:30: 255:38

    bb0: {
        _0 = const 176_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:255:41: 255:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:255:1: 255:45
    }
}

const BPF_LDX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1898:20: 1898:27

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1898:30: 1898:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1898:1: 1898:35
    }
}

const SIOCGIFDSTADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2352:27: 2352:36

    bb0: {
        _0 = const 35095_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2352:39: 2352:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2352:1: 2352:50
    }
}

const NFT_REG32_07: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2813:25: 2813:32

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2813:35: 2813:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2813:1: 2813:38
    }
}

const LOG_NOTICE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:250:23: 250:30

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/mod.rs:250:33: 250:34
        return;                          // scope 0 at src/unix/mod.rs:250:1: 250:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nlmsgerr) -> nlmsgerr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::nlmsgerr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_EQUIV_CLASS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:756:32: 756:39

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:756:42: 756:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:756:1: 756:45
    }
}

const AF_KEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:698:19: 698:26

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:698:29: 698:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:698:1: 698:32
    }
}

const ADDR_LIMIT_32BIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1155:29: 1155:36

    bb0: {
        _0 = const 8388608_i32;          // scope 0 at src/unix/linux_like/mod.rs:1155:39: 1155:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1155:1: 1155:49
    }
}

const REG_ERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:777:20: 777:27

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:777:30: 777:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:777:1: 777:33
    }
}

const _SC_XOPEN_XCU_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1238:34: 1238:41

    bb0: {
        _0 = const 90_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1238:44: 1238:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1238:1: 1238:47
    }
}

const SYS_bind: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:128:21: 128:29

    bb0: {
        _0 = const 49_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:128:32: 128:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:128:1: 128:35
    }
}

const PR_SET_MM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1735:22: 1735:29

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1735:32: 1735:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1735:1: 1735:35
    }
}

const SO_PASSSEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:58:23: 58:30

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:58:33: 58:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:58:1: 58:36
    }
}

const NFQA_CFG_QUEUE_MAXLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2194:34: 2194:41

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2194:44: 2194:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2194:1: 2194:46
    }
}

const RT_TABLE_MAIN: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2632:26: 2632:35

    bb0: {
        _0 = const 254_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2632:38: 2632:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2632:1: 2632:42
    }
}

const ENOMEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3132:19: 3132:26

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3132:29: 3132:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3132:1: 3132:32
    }
}

const SIGILL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:542:19: 542:26

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:542:29: 542:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:542:1: 542:31
    }
}

const TIME_INS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1075:21: 1075:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1075:31: 1075:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1075:1: 1075:33
    }
}

const TCP_SAVE_SYN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:994:25: 994:32

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/mod.rs:994:35: 994:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:994:1: 994:38
    }
}

const VWERASE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:644:20: 644:25

    bb0: {
        _0 = const 14_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:644:28: 644:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:644:1: 644:31
    }
}

const SCHED_BATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1533:24: 1533:31

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1533:34: 1533:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1533:1: 1533:36
    }
}

const SYS_fanotify_init: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:379:30: 379:38

    bb0: {
        _0 = const 300_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:379:41: 379:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:379:1: 379:45
    }
}

const ETH_P_WAN_PPP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2035:26: 2035:33

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2035:36: 2035:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2035:1: 2035:43
    }
}

const NLM_F_ROOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2493:23: 2493:30

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2493:33: 2493:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2493:1: 2493:39
    }
}

const NFT_TRACETYPE_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2972:33: 2972:40

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2972:43: 2972:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2972:1: 2972:45
    }
}

const ABMON_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1085:28: 1085:37

    bb0: {
        _0 = const 131087_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1085:40: 1085:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1085:9: 1085:48
    }
}

const RTA_UID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:904:20: 904:30

    bb0: {
        _0 = const 25_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:904:33: 904:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:904:1: 904:36
    }
}

const IP_PMTUDISC_WANT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:829:29: 829:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:829:39: 829:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:829:1: 829:41
    }
}

const ARPHRD_NETROM: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1312:26: 1312:29

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/mod.rs:1312:32: 1312:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1312:1: 1312:34
    }
}

const EKEYEXPIRED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:490:24: 490:31

    bb0: {
        _0 = const 127_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:490:34: 490:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:490:1: 490:38
    }
}

fn linux_like::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux_like::sigevent) -> linux_like::sigevent {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::sigevent; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::statfs64) -> b64::x86_64::statfs64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::statfs64; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFA_F_TEMPORARY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1376:28: 1376:31

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1376:34: 1376:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1376:1: 1376:39
    }
}

const SYS_ioperm: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:252:23: 252:31

    bb0: {
        _0 = const 173_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:252:34: 252:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:252:1: 252:38
    }
}

const BPF_MEMWORDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1893:25: 1893:32

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1893:35: 1893:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1893:1: 1893:38
    }
}

const IBSHIFT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:220:20: 220:30

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:220:33: 220:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:220:1: 220:36
    }
}

const SIOCSIFFLAGS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2349:25: 2349:34

    bb0: {
        _0 = const 35092_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2349:37: 2349:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2349:1: 2349:48
    }
}

const NFT_REG32_04: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2810:25: 2810:32

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2810:35: 2810:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2810:1: 2810:38
    }
}

const LOG_CRIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:247:21: 247:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/mod.rs:247:31: 247:32
        return;                          // scope 0 at src/unix/mod.rs:247:1: 247:33
    }
}

const FOPEN_MAX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:753:22: 753:30

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:753:33: 753:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:753:1: 753:36
    }
}

const AF_DECnet: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:695:22: 695:29

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/mod.rs:695:32: 695:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:695:1: 695:35
    }
}

const MMAP_PAGE_ZERO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1152:27: 1152:34

    bb0: {
        _0 = const 1048576_i32;          // scope 0 at src/unix/linux_like/mod.rs:1152:37: 1152:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1152:1: 1152:47
    }
}

const REG_RIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:774:20: 774:27

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:774:30: 774:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:774:1: 774:33
    }
}

const _SC_ATEXIT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1235:27: 1235:34

    bb0: {
        _0 = const 87_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1235:37: 1235:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1235:1: 1235:40
    }
}

const SYS_sendmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:125:24: 125:32

    bb0: {
        _0 = const 46_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:125:35: 125:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:125:1: 125:38
    }
}

const PR_MCE_KILL_EARLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1730:30: 1730:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1730:40: 1730:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1730:1: 1730:42
    }
}

const SO_PEERSEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:55:23: 55:30

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:55:33: 55:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:55:1: 55:36
    }
}

const NFQA_CFG_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2191:28: 2191:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2191:38: 2191:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2191:1: 2191:40
    }
}

const RT_TABLE_UNSPEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2629:28: 2629:37

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2629:40: 2629:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2629:1: 2629:42
    }
}

const EBADF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3129:18: 3129:25

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3129:28: 3129:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3129:1: 3129:30
    }
}

const SIGHUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:539:19: 539:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:539:29: 539:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:539:1: 539:31
    }
}

const STA_RONLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:22: 1065:29
    let mut _1: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1071:15
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1070:15
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1069:19
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1068:19
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1067:20
    let mut _6: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1066:20

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1071:15
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1070:15
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1069:19
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1068:19
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1067:20
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1066:20
        _6 = BitOr(const STA_PPSSIGNAL, const STA_PPSJITTER); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1066:20
        _5 = BitOr(move _6, const STA_PPSWANDER); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1067:20
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1067:19: 1067:20
        _4 = BitOr(move _5, const STA_PPSERROR); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1068:19
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1068:18: 1068:19
        _3 = BitOr(move _4, const STA_CLOCKERR); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1069:19
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1069:18: 1069:19
        _2 = BitOr(move _3, const STA_NANO); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1070:15
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1070:14: 1070:15
        _1 = BitOr(move _2, const STA_MODE); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1071:15
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1071:14: 1071:15
        _0 = BitOr(move _1, const STA_CLK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:32: 1072:14
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1072:13: 1072:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1065:1: 1072:15
    }
}

const TCP_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:991:26: 991:33

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/mod.rs:991:36: 991:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:991:1: 991:39
    }
}

const FF1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:641:16: 641:26

    bb0: {
        _0 = const 32768_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:641:29: 641:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:641:1: 641:40
    }
}

const SCHED_OTHER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1530:24: 1530:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1530:34: 1530:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1530:1: 1530:36
    }
}

const SYS_rt_tgsigqueueinfo: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:376:34: 376:42

    bb0: {
        _0 = const 297_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:376:45: 376:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:376:1: 376:49
    }
}

const ETH_P_802_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2032:24: 2032:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2032:34: 2032:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2032:1: 2032:41
    }
}

const NLM_F_ECHO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2489:23: 2489:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2489:33: 2489:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2489:1: 2489:35
    }
}

const NFT_REJECT_ICMPX_ADMIN_PROHIBITED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2967:46: 2967:53

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2967:56: 2967:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2967:1: 2967:58
    }
}

const DAY_6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1081:26: 1081:35

    bb0: {
        _0 = const 131084_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1081:38: 1081:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1081:9: 1081:46
    }
}

const RTA_ENCAP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:901:22: 901:32

    bb0: {
        _0 = const 22_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:901:35: 901:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:901:1: 901:38
    }
}

const IP_DEFAULT_MULTICAST_TTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:825:37: 825:44

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:825:47: 825:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:825:1: 825:49
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &rtentry) -> rtentry {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::rtentry; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ARPOP_NAK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1307:22: 1307:25

    bb0: {
        _0 = const 10_u16;               // scope 0 at src/unix/linux_like/mod.rs:1307:28: 1307:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1307:1: 1307:31
    }
}

const EMEDIUMTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:487:24: 487:31

    bb0: {
        _0 = const 124_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:487:34: 487:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:487:1: 487:38
    }
}

linux_like::utsname::domainname::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:247:36: 247:38

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:247:36: 247:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:247:36: 247:38
    }
}

b64::x86_64::stat64::__reserved::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:114:27: 114:28

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:114:27: 114:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:114:27: 114:28
    }
}

const IFA_CACHEINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1372:26: 1372:36

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1372:39: 1372:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1372:1: 1372:41
    }
}

const SYS_sethostname: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:249:28: 249:36

    bb0: {
        _0 = const 170_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:249:39: 249:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:249:1: 249:43
    }
}

const SKF_LL_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1890:23: 1890:30

    bb0: {
        _0 = const -2097152_i32;         // scope 0 at src/unix/linux_like/linux/mod.rs:1890:33: 1890:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1890:1: 1890:43
    }
}

const TIOCM_RI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:216:21: 216:28

    bb0: {
        _0 = const TIOCM_RNG;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:216:31: 216:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:216:1: 216:41
    }
}

const SIOCSIFLINK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2346:24: 2346:33

    bb0: {
        _0 = const 35089_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2346:36: 2346:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2346:1: 2346:47
    }
}

const NFT_REG32_01: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2807:25: 2807:32

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2807:35: 2807:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2807:1: 2807:37
    }
}

const S_ISVTX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:235:20: 235:28

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/mod.rs:235:31: 235:36
        return;                          // scope 0 at src/unix/mod.rs:235:1: 235:37
    }
}

const SIGEV_THREAD_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:749:28: 749:35

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:749:38: 749:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:749:1: 749:40
    }
}

const AF_X25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:692:19: 692:26

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:692:29: 692:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:692:1: 692:31
    }
}

const WCONTINUED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1147:23: 1147:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:1147:33: 1147:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1147:1: 1147:44
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::lconv) -> linux_like::lconv {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::lconv; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const REG_RAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:771:20: 771:27

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:771:30: 771:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:771:1: 771:33
    }
}

const _SC_NPROCESSORS_ONLN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1232:33: 1232:40

    bb0: {
        _0 = const 84_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1232:43: 1232:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1232:1: 1232:46
    }
}

const SYS_accept: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:122:23: 122:31

    bb0: {
        _0 = const 43_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:122:34: 122:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:122:1: 122:37
    }
}

const PR_MCE_KILL_CLEAR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1726:30: 1726:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1726:40: 1726:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1726:1: 1726:42
    }
}

const SO_PEERNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:51:24: 51:31

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:51:34: 51:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:51:1: 51:37
    }
}

const NFQNL_COPY_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2187:28: 2187:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2187:38: 2187:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2187:1: 2187:40
    }
}

const RT_SCOPE_LINK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2625:26: 2625:35

    bb0: {
        _0 = const 253_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2625:38: 2625:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2625:1: 2625:42
    }
}

const ENXIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3126:18: 3126:25

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3126:28: 3126:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3126:1: 3126:30
    }
}

const STDIN_FILENO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:536:25: 536:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:536:35: 536:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:536:1: 536:37
    }
}

const STA_NANO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1062:21: 1062:28

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1062:31: 1062:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1062:1: 1062:38
    }
}

const TCP_QUEUE_SEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:988:26: 988:33

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/mod.rs:988:36: 988:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:988:1: 988:39
    }
}

const CR1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:638:16: 638:26

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:638:29: 638:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:638:1: 638:40
    }
}

const RENAME_NOREPLACE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1526:29: 1526:37

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1526:40: 1526:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1526:1: 1526:42
    }
}

const SYS_inotify_init1: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:373:30: 373:38

    bb0: {
        _0 = const 294_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:373:41: 373:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:373:1: 373:45
    }
}

const ETH_P_802_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2029:24: 2029:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2029:34: 2029:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2029:1: 2029:41
    }
}

const NLM_F_REQUEST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2486:26: 2486:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2486:36: 2486:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2486:1: 2486:38
    }
}

const NFT_REJECT_ICMPX_NO_ROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2964:38: 2964:45

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2964:48: 2964:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2964:1: 2964:50
    }
}

const DAY_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1078:26: 1078:35

    bb0: {
        _0 = const 131081_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1078:38: 1078:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1078:9: 1078:46
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::tms) -> unix::tms {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::tms;               // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTA_NEWDST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:898:23: 898:33

    bb0: {
        _0 = const 19_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:898:36: 898:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:898:1: 898:39
    }
}

const IP_MSFILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:821:24: 821:31

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/linux_like/mod.rs:821:34: 821:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:821:1: 821:37
    }
}

const ARPOP_RREPLY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1304:25: 1304:28

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/mod.rs:1304:31: 1304:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1304:1: 1304:33
    }
}

const ESTALE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:484:19: 484:26

    bb0: {
        _0 = const 116_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:484:29: 484:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:484:1: 484:33
    }
}

const IFA_LABEL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1369:22: 1369:32

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1369:35: 1369:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1369:1: 1369:37
    }
}

const SYS_swapon: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:246:23: 246:31

    bb0: {
        _0 = const 167_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:246:34: 246:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:246:1: 246:38
    }
}

const SKF_AD_VLAN_TPID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1887:29: 1887:36

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1887:39: 1887:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1887:1: 1887:42
    }
}

const TIOCM_CAR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:213:22: 213:29

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:213:32: 213:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:213:1: 213:38
    }
}

const SIOCADDRT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2343:22: 2343:31

    bb0: {
        _0 = const 35083_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2343:34: 2343:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2343:1: 2343:45
    }
}

const NFT_REG_4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2804:22: 2804:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2804:32: 2804:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2804:1: 2804:34
    }
}

const SIGIOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:231:19: 231:26

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/mod.rs:231:29: 231:30
        return;                          // scope 0 at src/unix/mod.rs:231:1: 231:31
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nlmsghdr) -> nlmsghdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::nlmsghdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const DCCP_SOCKOPT_CCID_RX_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:743:38: 743:45

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:743:48: 743:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:743:1: 743:52
    }
}

const AF_NETROM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:689:22: 689:29

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:689:32: 689:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:689:1: 689:34
    }
}

const WUNTRACED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1144:22: 1144:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1144:32: 1144:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1144:1: 1144:43
    }
}

const REG_RBP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:768:20: 768:27

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:768:30: 768:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:768:1: 768:33
    }
}

const _SC_THREAD_PRIO_PROTECT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1229:36: 1229:43

    bb0: {
        _0 = const 81_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1229:46: 1229:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1229:1: 1229:49
    }
}

const SYS_sendfile: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:119:25: 119:33

    bb0: {
        _0 = const 40_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:119:36: 119:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:119:1: 119:39
    }
}

const PR_TASK_PERF_EVENTS_DISABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1722:40: 1722:47

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1722:50: 1722:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1722:1: 1722:53
    }
}

const SO_ATTACH_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:48:29: 48:36

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:48:39: 48:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:48:1: 48:42
    }
}

const NFQNL_CFG_CMD_UNBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2183:33: 2183:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2183:43: 2183:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2183:1: 2183:45
    }
}

const RTPROT_STATIC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2621:26: 2621:35

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2621:38: 2621:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2621:1: 2621:40
    }
}

const ESRCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3123:18: 3123:25

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3123:28: 3123:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3123:1: 3123:30
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &dqblk) -> dqblk {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::dqblk; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const R_OK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:533:17: 533:24

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:533:27: 533:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:533:1: 533:29
    }
}

const STA_PPSWANDER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1059:26: 1059:33

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1059:36: 1059:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1059:1: 1059:43
    }
}

const TCP_USER_TIMEOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:985:29: 985:36

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/mod.rs:985:39: 985:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:985:1: 985:42
    }
}

const TAB1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:635:17: 635:27

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:635:30: 635:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:635:1: 635:41
    }
}

const PTHREAD_PROCESS_PRIVATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1522:36: 1522:43

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1522:46: 1522:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1522:1: 1522:48
    }
}

const SYS_epoll_create1: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:370:30: 370:38

    bb0: {
        _0 = const 291_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:370:41: 370:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:370:1: 370:45
    }
}

const ETH_P_EDSA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2023:23: 2023:30

    bb0: {
        _0 = const 56026_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2023:33: 2023:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2023:1: 2023:40
    }
}

const NETLINK_RDMA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2482:25: 2482:32

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2482:35: 2482:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2482:1: 2482:38
    }
}

const NFT_REJECT_ICMP_UNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2960:36: 2960:43

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2960:46: 2960:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2960:1: 2960:48
    }
}

const ABDAY_7: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1074:28: 1074:37

    bb0: {
        _0 = const 131078_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1074:40: 1074:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1074:9: 1074:48
    }
}

const RTM_F_LOOKUP_TABLE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:894:31: 894:39

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:894:42: 894:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:894:1: 894:49
    }
}

const IP_BLOCK_SOURCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:818:28: 818:35

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/mod.rs:818:38: 818:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:818:1: 818:41
    }
}

const IPOPT_TS_TSANDADDR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1300:31: 1300:33

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1300:36: 1300:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1300:1: 1300:38
    }
}

const EHOSTUNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:481:25: 481:32

    bb0: {
        _0 = const 113_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:481:35: 481:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:481:1: 481:39
    }
}

linux_like::utsname::release::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:244:33: 244:35

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:244:33: 244:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:244:33: 244:35
    }
}

const IFA_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1366:23: 1366:33

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1366:36: 1366:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1366:1: 1366:38
    }
}

const SYS_settimeofday: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:243:29: 243:37

    bb0: {
        _0 = const 164_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:243:40: 243:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:243:1: 243:44
    }
}

const SKF_AD_VLAN_TAG_PRESENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1884:36: 1884:43

    bb0: {
        _0 = const 48_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1884:46: 1884:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1884:1: 1884:49
    }
}

const TIOCM_ST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:210:21: 210:28

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:210:31: 210:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:210:1: 210:37
    }
}

const NF_IP6_PRI_CONNTRACK_HELPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2337:40: 2337:47

    bb0: {
        _0 = const 300_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2337:50: 2337:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2337:1: 2337:54
    }
}

const NFT_REG_1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2801:22: 2801:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2801:32: 2801:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2801:1: 2801:34
    }
}

const DT_SOCK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:220:20: 220:22

    bb0: {
        _0 = const 12_u8;                // scope 0 at src/unix/mod.rs:220:25: 220:27
        return;                          // scope 0 at src/unix/mod.rs:220:1: 220:28
    }
}

seccomp_data::args::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:579:29: 579:30

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:579:29: 579:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:579:29: 579:30
    }
}

const DCCP_SOCKOPT_RX_CCID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:740:33: 740:40

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:740:43: 740:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:740:1: 740:46
    }
}

const AF_AX25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:686:20: 686:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:686:30: 686:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:686:1: 686:32
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::statx_timestamp) -> gnu::statx_timestamp {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::statx_timestamp; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const CLONE_NEWNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1140:25: 1140:32

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/mod.rs:1140:35: 1140:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1140:1: 1140:46
    }
}

const REG_R15: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:765:20: 765:27

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:765:30: 765:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:765:1: 765:32
    }
}

const _SC_THREAD_ATTR_STACKSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1226:38: 1226:45

    bb0: {
        _0 = const 78_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1226:48: 1226:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1226:1: 1226:51
    }
}

const SYS_alarm: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:116:22: 116:30

    bb0: {
        _0 = const 37_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:116:33: 116:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:116:1: 116:36
    }
}

const PR_SET_SECUREBITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1717:30: 1717:37

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1717:40: 1717:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1717:1: 1717:43
    }
}

const SO_SECURITY_ENCRYPTION_TRANSPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:45:45: 45:52

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:45:55: 45:57
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:45:1: 45:58
    }
}

const NFQA_SECCTX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2167:24: 2167:31

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2167:34: 2167:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2167:1: 2167:37
    }
}

const RTPROT_REDIRECT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2618:28: 2618:37

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2618:40: 2618:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2618:1: 2618:42
    }
}

const SO_EE_ORIGIN_TIMESTAMPING: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3118:38: 3118:40

    bb0: {
        _0 = const SO_EE_ORIGIN_TXSTATUS; // scope 0 at src/unix/linux_like/linux/mod.rs:3118:43: 3118:64
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3118:1: 3118:65
    }
}

const S_IWOTH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:530:20: 530:28

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/mod.rs:530:31: 530:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:530:1: 530:33
    }
}

const STA_FREQHOLD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1056:25: 1056:32

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1056:35: 1056:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1056:1: 1056:42
    }
}

const TCP_MD5SIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:976:23: 976:30

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/mod.rs:976:33: 976:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:976:1: 976:36
    }
}

const SIGSTKSZ: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:632:21: 632:29

    bb0: {
        _0 = const 8192_usize;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:632:32: 632:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:632:1: 632:37
    }
}

const PTHREAD_MUTEX_DEFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1519:34: 1519:41

    bb0: {
        _0 = const PTHREAD_MUTEX_NORMAL; // scope 0 at src/unix/linux_like/linux/mod.rs:1519:44: 1519:64
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1519:1: 1519:65
    }
}

const SYS_accept4: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:367:24: 367:32

    bb0: {
        _0 = const 288_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:367:35: 367:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:367:1: 367:39
    }
}

const ETH_P_QINQ1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2020:24: 2020:31

    bb0: {
        _0 = const 37120_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2020:34: 2020:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2020:1: 2020:41
    }
}

const NETLINK_GENERIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2479:28: 2479:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2479:38: 2479:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2479:1: 2479:41
    }
}

const NFT_QUEUE_FLAG_CPU_FANOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2955:38: 2955:45

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2955:48: 2955:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2955:1: 2955:53
    }
}

const ABDAY_4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1071:28: 1071:37

    bb0: {
        _0 = const 131075_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1071:40: 1071:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1071:9: 1071:48
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &itimerval) -> itimerval {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::itimerval;         // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTM_NEWSTATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:890:25: 890:28

    bb0: {
        _0 = const 92_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:890:31: 890:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:890:1: 890:34
    }
}

const IP_ADD_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:815:30: 815:37

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/mod.rs:815:40: 815:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:815:1: 815:43
    }
}

const IPOPT_EOL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1297:22: 1297:24

    bb0: {
        _0 = const IPOPT_END;            // scope 0 at src/unix/linux_like/mod.rs:1297:27: 1297:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1297:1: 1297:37
    }
}

const ETIMEDOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:478:22: 478:29

    bb0: {
        _0 = const 110_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:478:32: 478:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:478:1: 478:36
    }
}

const IFF_LOWER_UP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1361:25: 1361:32

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1361:35: 1361:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1361:1: 1361:43
    }
}

const SYS_chroot: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:240:23: 240:31

    bb0: {
        _0 = const 161_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:240:34: 240:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:240:1: 240:38
    }
}

const SKF_AD_CPU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1881:23: 1881:30

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1881:33: 1881:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1881:1: 1881:36
    }
}

const TIOCM_LE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:207:21: 207:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:207:31: 207:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:207:1: 207:37
    }
}

const NF_IP6_PRI_SECURITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2334:32: 2334:39

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2334:42: 2334:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2334:1: 2334:45
    }
}

const NFT_OBJ_MAXNAMELEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2797:31: 2797:38

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2797:41: 2797:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2797:1: 2797:45
    }
}

const DT_BLK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:217:19: 217:21

    bb0: {
        _0 = const 6_u8;                 // scope 0 at src/unix/mod.rs:217:24: 217:25
        return;                          // scope 0 at src/unix/mod.rs:217:1: 217:26
    }
}

const DCCP_SOCKOPT_AVAILABLE_CCIDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:737:41: 737:48

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:737:51: 737:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:737:1: 737:54
    }
}

const AF_UNIX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:683:20: 683:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:683:30: 683:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:683:1: 683:32
    }
}

statx::__statx_pad3::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:41:29: 41:31

    bb0: {
        _0 = const 12_usize;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:41:29: 41:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:41:29: 41:31
    }
}

const CLONE_NEWIPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1137:25: 1137:32

    bb0: {
        _0 = const 134217728_i32;        // scope 0 at src/unix/linux_like/mod.rs:1137:35: 1137:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1137:1: 1137:46
    }
}

const REG_R12: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:762:20: 762:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:762:30: 762:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:762:1: 762:32
    }
}

const _SC_THREAD_STACK_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1223:33: 1223:40

    bb0: {
        _0 = const 75_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1223:43: 1223:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1223:1: 1223:46
    }
}

const SYS_pause: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:113:22: 113:30

    bb0: {
        _0 = const 34_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:113:33: 113:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:113:1: 113:36
    }
}

const PR_TSC_ENABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1713:26: 1713:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1713:36: 1713:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1713:1: 1713:38
    }
}

const SO_RCVTIMEO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:40:24: 40:31

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:40:34: 40:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:40:1: 40:37
    }
}

const NFQA_EXP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2164:21: 2164:28

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2164:31: 2164:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2164:1: 2164:34
    }
}

const RTN_NAT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2614:20: 2614:29

    bb0: {
        _0 = const 10_u8;                // scope 0 at src/unix/linux_like/linux/mod.rs:2614:32: 2614:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2614:1: 2614:35
    }
}

const SO_EE_ORIGIN_ICMP: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3115:30: 3115:32

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3115:35: 3115:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3115:1: 3115:37
    }
}

const S_IRGRP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:527:20: 527:28

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/mod.rs:527:31: 527:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:527:1: 527:34
    }
}

const STA_INS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1053:20: 1053:27

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1053:30: 1053:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1053:1: 1053:37
    }
}

const TCP_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:973:21: 973:28

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:973:31: 973:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:973:1: 973:34
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__c_anonymous_ptrace_syscall_info_entry) -> __c_anonymous_ptrace_syscall_info_entry {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_SYSEMU_SINGLESTEP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:627:37: 627:45

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:627:48: 627:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:627:1: 627:51
    }
}

const PTHREAD_MUTEX_NORMAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1516:33: 1516:40

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1516:43: 1516:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1516:1: 1516:45
    }
}

const SYS_fallocate: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:364:26: 364:34

    bb0: {
        _0 = const 285_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:364:37: 364:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:364:1: 364:41
    }
}

const ETH_P_FIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2017:22: 2017:29

    bb0: {
        _0 = const 35092_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2017:32: 2017:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2017:1: 2017:39
    }
}

const NETLINK_IP6_FW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2476:27: 2476:34

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2476:37: 2476:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2476:1: 2476:40
    }
}

const NFT_LIMIT_PKT_BYTES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2950:32: 2950:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2950:42: 2950:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2950:1: 2950:44
    }
}

const ABDAY_1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1068:28: 1068:37

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1068:40: 1068:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1068:9: 1068:48
    }
}

const TCA_CHAIN: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:886:22: 886:32

    bb0: {
        _0 = const 11_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:886:35: 886:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:886:1: 886:38
    }
}

const IP_MULTICAST_IF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:812:28: 812:35

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:812:38: 812:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:812:1: 812:41
    }
}

const IPOPT_MINOFF: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1294:25: 1294:27

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1294:30: 1294:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1294:1: 1294:32
    }
}

const ENOTCONN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:475:21: 475:28

    bb0: {
        _0 = const 107_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:475:31: 475:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:475:1: 475:35
    }
}

const F_TLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1356:20: 1356:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1356:30: 1356:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1356:1: 1356:32
    }
}

const SYS_arch_prctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:237:27: 237:35

    bb0: {
        _0 = const 158_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:237:38: 237:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:237:1: 237:42
    }
}

const SKF_AD_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1878:25: 1878:32

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1878:35: 1878:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1878:1: 1878:38
    }
}

const BLKIOOPT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:194:21: 194:28

    bb0: {
        _0 = const 4729_u64;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:194:31: 194:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:194:1: 194:38
    }
}

const NF_IP6_PRI_MANGLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2331:30: 2331:37

    bb0: {
        _0 = const -150_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2331:40: 2331:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2331:1: 2331:45
    }
}

const NFT_TABLE_MAXNAMELEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2794:33: 2794:40

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2794:43: 2794:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2794:1: 2794:47
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &input_keymap_entry) -> input_keymap_entry {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::input_keymap_entry; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const DT_FIFO: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:214:20: 214:22

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/mod.rs:214:25: 214:26
        return;                          // scope 0 at src/unix/mod.rs:214:1: 214:27
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &seccomp_data) -> seccomp_data {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::seccomp_data; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const DCCP_SOCKOPT_SERVER_TIMEWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:734:41: 734:48

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:734:51: 734:52
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:734:1: 734:53
    }
}

const SOL_BLUETOOTH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:679:26: 679:33

    bb0: {
        _0 = const 274_i32;              // scope 0 at src/unix/linux_like/mod.rs:679:36: 679:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:679:1: 679:40
    }
}

const CLONE_CHILD_SETTID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1134:31: 1134:38

    bb0: {
        _0 = const 16777216_i32;         // scope 0 at src/unix/linux_like/mod.rs:1134:41: 1134:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1134:1: 1134:52
    }
}

const REG_R9: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:759:19: 759:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:759:29: 759:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:759:1: 759:31
    }
}

const _SC_TTY_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1220:29: 1220:36

    bb0: {
        _0 = const 72_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1220:39: 1220:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1220:1: 1220:42
    }
}

const SYS_shmctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:110:23: 110:31

    bb0: {
        _0 = const 31_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:110:34: 110:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:110:1: 110:37
    }
}

const PR_CAPBSET_DROP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1709:28: 1709:35

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1709:38: 1709:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1709:1: 1709:41
    }
}

const SO_PEERCRED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:37:24: 37:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:37:34: 37:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:37:1: 37:37
    }
}

const NFQA_CT_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2161:25: 2161:32

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2161:35: 2161:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2161:1: 2161:38
    }
}

const RTN_UNREACHABLE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2611:28: 2611:37

    bb0: {
        _0 = const 7_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2611:40: 2611:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2611:1: 2611:42
    }
}

const REG_BADRPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3110:23: 3110:30

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3110:33: 3110:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3110:1: 3110:36
    }
}

const S_IRWXG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:524:20: 524:28

    bb0: {
        _0 = const 56_u32;               // scope 0 at src/unix/linux_like/mod.rs:524:31: 524:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:524:1: 524:34
    }
}

const STA_PPSFREQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1050:24: 1050:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1050:34: 1050:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1050:1: 1050:41
    }
}

const TCP_LINGER2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:970:24: 970:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:970:34: 970:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:970:1: 970:36
    }
}

const PTRACE_SETREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:624:27: 624:35

    bb0: {
        _0 = const 13_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:624:38: 624:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:624:1: 624:41
    }
}

const MPOL_F_NUMA_BALANCING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1501:34: 1501:41
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1501:44: 1501:51

    bb0: {
        _1 = CheckedShl(const 1_i32, const 13_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1501:44: 1501:51
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 13_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1501:44: 1501:51
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1501:44: 1501:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1501:1: 1501:52
    }
}

const SYS_signalfd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:361:25: 361:33

    bb0: {
        _0 = const 282_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:361:36: 361:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:361:1: 361:40
    }
}

const ETH_P_PRP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2014:22: 2014:29

    bb0: {
        _0 = const 35067_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2014:32: 2014:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2014:1: 2014:39
    }
}

const NETLINK_FIB_LOOKUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2473:31: 2473:38

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2473:41: 2473:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2473:1: 2473:44
    }
}

const NFT_CT_PKTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2946:24: 2946:31

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2946:34: 2946:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2946:1: 2946:37
    }
}

const RWF_APPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:881:23: 881:30

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:881:33: 881:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:881:1: 881:44
    }
}

const IP_NODEFRAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:809:24: 809:31

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/mod.rs:809:34: 809:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:809:1: 809:37
    }
}

const IPOPT_OPTVAL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1291:25: 1291:27

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1291:30: 1291:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1291:1: 1291:32
    }
}

const ECONNRESET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:472:23: 472:30

    bb0: {
        _0 = const 104_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:472:33: 472:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:472:1: 472:37
    }
}

const S_IREAD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1352:20: 1352:26

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1352:29: 1352:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1352:1: 1352:33
    }
}

const SYS_pivot_root: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:234:27: 234:35

    bb0: {
        _0 = const 155_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:234:38: 234:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:234:1: 234:42
    }
}

const SKF_AD_NLATTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1875:26: 1875:33

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1875:36: 1875:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1875:1: 1875:39
    }
}

const TIOCMIWAIT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:191:23: 191:30

    bb0: {
        _0 = const 21596_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:191:33: 191:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:191:1: 191:40
    }
}

const NF_IP6_PRI_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2328:27: 2328:34

    bb0: {
        _0 = const -300_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2328:37: 2328:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2328:1: 2328:42
    }
}

const IN_ALL_EVENTS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2777:26: 2777:29
    let mut _1: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2787:21
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2786:16
    let mut _3: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2785:16
    let mut _4: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2784:18
    let mut _5: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2783:20
    let mut _6: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2782:14
    let mut _7: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2781:23
    let mut _8: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2780:21
    let mut _9: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2779:16
    let mut _10: u32;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2778:16

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2787:21
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2786:16
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2785:16
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2784:18
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2783:20
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2782:14
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2781:23
        StorageLive(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2780:21
        StorageLive(_9);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2779:16
        StorageLive(_10);                // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2778:16
        _10 = BitOr(const IN_ACCESS, const IN_MODIFY); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2778:16
        _9 = BitOr(move _10, const IN_ATTRIB); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2779:16
        StorageDead(_10);                // scope 0 at src/unix/linux_like/linux/mod.rs:2779:15: 2779:16
        _8 = BitOr(move _9, const IN_CLOSE_WRITE); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2780:21
        StorageDead(_9);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2780:20: 2780:21
        _7 = BitOr(move _8, const IN_CLOSE_NOWRITE); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2781:23
        StorageDead(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2781:22: 2781:23
        _6 = BitOr(move _7, const IN_OPEN); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2782:14
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2782:13: 2782:14
        _5 = BitOr(move _6, const IN_MOVED_FROM); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2783:20
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2783:19: 2783:20
        _4 = BitOr(move _5, const IN_MOVED_TO); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2784:18
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2784:17: 2784:18
        _3 = BitOr(move _4, const IN_DELETE); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2785:16
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2785:15: 2785:16
        _2 = BitOr(move _3, const IN_CREATE); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2786:16
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2786:15: 2786:16
        _1 = BitOr(move _2, const IN_DELETE_SELF); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2787:21
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2787:20: 2787:21
        _0 = BitOr(move _1, const IN_MOVE_SELF); // scope 0 at src/unix/linux_like/linux/mod.rs:2777:32: 2788:19
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2788:18: 2788:19
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2777:1: 2788:20
    }
}

const SIG_IGN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/mod.rs:210:20: 210:32

    bb0: {
        _0 = const 1_usize;              // scope 0 at src/unix/mod.rs:210:35: 210:36
        return;                          // scope 0 at src/unix/mod.rs:210:1: 210:53
    }
}

const DCCP_SOCKOPT_CHANGE_L: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:731:34: 731:41

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:731:44: 731:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:731:1: 731:46
    }
}

const SOL_DCCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:676:21: 676:28

    bb0: {
        _0 = const 269_i32;              // scope 0 at src/unix/linux_like/mod.rs:676:31: 676:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:676:1: 676:35
    }
}

const CLONE_CHILD_CLEARTID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1131:33: 1131:40

    bb0: {
        _0 = const 2097152_i32;          // scope 0 at src/unix/linux_like/mod.rs:1131:43: 1131:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1131:1: 1131:52
    }
}

fn b64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::sysinfo) -> b64::sysinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::sysinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const FS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:754:15: 754:22

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:754:25: 754:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:754:1: 754:28
    }
}

const _SC_GETGR_R_SIZE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1217:33: 1217:40

    bb0: {
        _0 = const 69_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1217:43: 1217:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1217:1: 1217:46
    }
}

const SYS_madvise: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:107:24: 107:32

    bb0: {
        _0 = const 28_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:107:35: 107:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:107:1: 107:38
    }
}

const PR_GET_SECCOMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1705:27: 1705:34

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1705:37: 1705:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1705:1: 1705:40
    }
}

const SO_BSDCOMPAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:34:25: 34:32

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:34:35: 34:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:34:1: 34:38
    }
}

const NFQA_HWADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2158:24: 2158:31

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2158:34: 2158:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2158:1: 2158:36
    }
}

const RTN_ANYCAST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2608:24: 2608:33

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2608:36: 2608:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2608:1: 2608:38
    }
}

const REG_BADBR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3107:22: 3107:29

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3107:32: 3107:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3107:1: 3107:35
    }
}

const S_IXUSR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:521:20: 521:28

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/mod.rs:521:31: 521:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:521:1: 521:34
    }
}

const MOD_MICRO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1047:22: 1047:30

    bb0: {
        _0 = const ADJ_MICRO;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1047:33: 1047:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1047:1: 1047:43
    }
}

const TCP_KEEPINTVL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:967:26: 967:33

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:967:36: 967:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:967:1: 967:38
    }
}

const PTRACE_GETFPXREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:621:30: 621:38

    bb0: {
        _0 = const 18_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:621:41: 621:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:621:1: 621:44
    }
}

const MPOL_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1498:22: 1498:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1498:32: 1498:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1498:1: 1498:34
    }
}

const SYS_move_pages: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:358:27: 358:35

    bb0: {
        _0 = const 279_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:358:38: 358:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:358:1: 358:42
    }
}

const ETH_P_8021AH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2011:25: 2011:32

    bb0: {
        _0 = const 35047_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2011:35: 2011:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2011:1: 2011:42
    }
}

const NETLINK_SELINUX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2470:28: 2470:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2470:38: 2470:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2470:1: 2470:40
    }
}

const NFT_CT_PROTO_SRC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2943:29: 2943:36

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2943:39: 2943:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2943:1: 2943:42
    }
}

const RWF_DSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:878:22: 878:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:878:32: 878:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:878:1: 878:43
    }
}

const IP_ORIGDSTADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:806:27: 806:34

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/mod.rs:806:37: 806:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:806:1: 806:40
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nl_mmap_req) -> nl_mmap_req {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::nl_mmap_req; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPVERSION: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1288:22: 1288:24

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1288:27: 1288:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1288:1: 1288:29
    }
}

const ENETUNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:469:24: 469:31

    bb0: {
        _0 = const 101_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:469:34: 469:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:469:1: 469:38
    }
}

const POSIX_SPAWN_USEVFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1348:33: 1348:40

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1348:43: 1348:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1348:1: 1348:46
    }
}

const SYS_munlockall: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:231:27: 231:35

    bb0: {
        _0 = const 152_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:231:38: 231:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:231:1: 231:42
    }
}

const SKF_AD_PROTOCOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1872:28: 1872:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1872:38: 1872:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1872:1: 1872:40
    }
}

const TIOCSERGETLSR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:188:26: 188:33

    bb0: {
        _0 = const 21593_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:188:36: 188:42
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:188:1: 188:43
    }
}

const NF_IP6_NUMHOOKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2324:28: 2324:35

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2324:38: 2324:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2324:1: 2324:40
    }
}

const KEYCTL_GET_PERSISTENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2770:34: 2770:37

    bb0: {
        _0 = const 22_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2770:40: 2770:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2770:1: 2770:43
    }
}

const unix::INT_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:206:20: 206:25

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/mod.rs:206:28: 206:39
        return;                          // scope 0 at src/unix/mod.rs:206:1: 206:40
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sock_fprog) -> sock_fprog {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::sock_fprog; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PF_XDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:726:19: 726:26

    bb0: {
        _0 = const AF_XDP;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:726:29: 726:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:726:1: 726:36
    }
}

const SOL_IRDA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:673:21: 673:28

    bb0: {
        _0 = const 266_i32;              // scope 0 at src/unix/linux_like/mod.rs:673:31: 673:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:673:1: 673:35
    }
}

const CLONE_SYSVSEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1128:26: 1128:33

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/mod.rs:1128:36: 1128:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1128:1: 1128:44
    }
}

b64::sigset_t::__val::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:34:22: 34:24

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:34:22: 34:24
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:34:22: 34:24
    }
}

const GS_BASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:751:20: 751:27

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:751:30: 751:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:751:1: 751:33
    }
}

const _SC_IOV_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1214:24: 1214:31

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1214:34: 1214:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1214:1: 1214:37
    }
}

const SYS_mremap: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:104:23: 104:31

    bb0: {
        _0 = const 25_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:104:34: 104:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:104:1: 104:37
    }
}

const PR_ENDIAN_BIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1701:26: 1701:33

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1701:36: 1701:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1701:1: 1701:38
    }
}

const SO_NO_CHECK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:31:24: 31:31

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:31:34: 31:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:31:1: 31:37
    }
}

const NFQA_IFINDEX_OUTDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2155:32: 2155:39

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2155:42: 2155:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2155:1: 2155:44
    }
}

const RTN_UNICAST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2605:24: 2605:33

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2605:36: 2605:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2605:1: 2605:38
    }
}

const REG_EBRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3104:23: 3104:30

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3104:33: 3104:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3104:1: 3104:35
    }
}

const S_IFSOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:518:21: 518:29

    bb0: {
        _0 = const 49152_u32;            // scope 0 at src/unix/linux_like/mod.rs:518:32: 518:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:518:1: 518:38
    }
}

const MOD_CLKB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1044:21: 1044:29

    bb0: {
        _0 = const ADJ_TICK;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1044:32: 1044:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1044:1: 1044:41
    }
}

const TCP_MAXSEG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:964:23: 964:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:964:33: 964:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:964:1: 964:35
    }
}

const EREMOTEIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:617:22: 617:29

    bb0: {
        _0 = const 121_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:617:32: 617:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:617:1: 617:36
    }
}

fn IPOPT_NUMBER(_1: u8) -> u8 {
    debug o => _1;                       // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1602:43: 1602:45
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1603:9: 1603:10

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1603:9: 1603:10
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1603:9: 1603:10
        _0 = BitAnd(move _2, const IPOPT_NUMBER_MASK); // scope 0 at src/unix/linux_like/mod.rs:1603:9: 1603:30
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1603:29: 1603:30
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const AT_EACCESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1493:23: 1493:30

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1493:33: 1493:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1493:1: 1493:39
    }
}

const SYS_tee: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:355:20: 355:28

    bb0: {
        _0 = const 276_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:355:31: 355:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:355:1: 355:35
    }
}

const ETH_P_802_EX1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2008:26: 2008:33

    bb0: {
        _0 = const 34997_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2008:36: 2008:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2008:1: 2008:43
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &canfd_frame) -> canfd_frame {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::canfd_frame; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NETLINK_SOCK_DIAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2467:30: 2467:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2467:40: 2467:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2467:1: 2467:42
    }
}

const NFT_CT_SRC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2940:23: 2940:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2940:33: 2940:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2940:1: 2940:35
    }
}

const PTRACE_PEEKSIGINFO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:871:31: 871:39

    bb0: {
        _0 = const 16905_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:871:42: 871:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:871:1: 871:49
    }
}

const IP_XFRM_POLICY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:803:27: 803:34

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:803:37: 803:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:803:1: 803:40
    }
}

const IPOPT_SID: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1285:22: 1285:24
    let mut _1: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1285:27: 1285:44

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1285:27: 1285:44
        _1 = BitOr(const 8_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1285:27: 1285:44
        _0 = BitOr(move _1, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1285:27: 1285:57
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1285:56: 1285:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1285:1: 1285:58
    }
}

const EADDRINUSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:466:23: 466:30

    bb0: {
        _0 = const 98_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:466:33: 466:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:466:1: 466:36
    }
}

fn linux_like::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sockaddr_storage) -> sockaddr_storage {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::sockaddr_storage; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const POSIX_MADV_RANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1345:30: 1345:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1345:40: 1345:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1345:1: 1345:42
    }
}

const SYS_mlock: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:228:22: 228:30

    bb0: {
        _0 = const 149_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:228:33: 228:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:228:1: 228:37
    }
}

const CLOSE_RANGE_UNSHARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1867:32: 1867:40
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1867:43: 1867:49

    bb0: {
        _1 = CheckedShl(const 1_u32, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1867:43: 1867:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1867:43: 1867:49
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1867:43: 1867:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1867:1: 1867:50
    }
}

const TIOCGLCKTRMIOS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:185:27: 185:34

    bb0: {
        _0 = const 21590_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:185:37: 185:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:185:1: 185:44
    }
}

const NF_IP6_FORWARD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2321:27: 2321:34

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2321:37: 2321:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2321:1: 2321:39
    }
}

const KEYCTL_REJECT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2767:26: 2767:29

    bb0: {
        _0 = const 19_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2767:32: 2767:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2767:1: 2767:35
    }
}

const PF_MPLS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:723:20: 723:27

    bb0: {
        _0 = const AF_MPLS;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:723:30: 723:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:723:1: 723:38
    }
}

const SOL_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:670:23: 670:30

    bb0: {
        _0 = const 263_i32;              // scope 0 at src/unix/linux_like/mod.rs:670:33: 670:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:670:1: 670:37
    }
}

const CLONE_PARENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1125:25: 1125:32

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/mod.rs:1125:35: 1125:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1125:1: 1125:42
    }
}

fn b64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::sigset_t) -> b64::sigset_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::sigset_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RSP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:748:16: 748:23

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:748:26: 748:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:748:1: 748:29
    }
}

const _SC_2_SW_DEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1211:25: 1211:32

    bb0: {
        _0 = const 51_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1211:35: 1211:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1211:1: 1211:38
    }
}

const SYS_pipe: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:101:21: 101:29

    bb0: {
        _0 = const 22_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:101:32: 101:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:101:1: 101:35
    }
}

const PR_GET_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1697:24: 1697:31

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1697:34: 1697:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1697:1: 1697:37
    }
}

const SO_RCVBUF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:28:22: 28:29

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:28:32: 28:33
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:28:1: 28:34
    }
}

const NFQA_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2152:22: 2152:29

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2152:32: 2152:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2152:1: 2152:34
    }
}

const RTA_MARK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2601:21: 2601:31

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2601:34: 2601:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2601:1: 2601:37
    }
}

const REG_ECTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3101:23: 3101:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3101:33: 3101:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3101:1: 3101:35
    }
}

const S_IFDIR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:515:20: 515:28

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/mod.rs:515:31: 515:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:515:1: 515:37
    }
}

const MOD_ESTERROR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1041:25: 1041:33

    bb0: {
        _0 = const ADJ_ESTERROR;         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1041:36: 1041:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1041:1: 1041:49
    }
}

const IPV6_PMTUDISC_INTERFACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:960:36: 960:43

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:960:46: 960:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:960:1: 960:48
    }
}

const ENOTNAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:614:20: 614:27

    bb0: {
        _0 = const 118_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:614:30: 614:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:614:1: 614:34
    }
}

fn QCMD(_1: i32, _2: i32) -> i32 {
    debug cmd => _1;                     // in scope 0 at src/macros.rs:259:36: 259:40
    debug type_ => _2;                   // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1590:58: 1590:65
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1591:9: 1591:19
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1591:10: 1591:13
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1591:22: 1591:38
    let mut _6: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1591:23: 1591:28

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1591:9: 1591:19
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1591:10: 1591:13
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1591:10: 1591:13
        _3 = Shl(move _4, const 8_i32);  // scope 0 at src/unix/linux_like/mod.rs:1591:9: 1591:19
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1591:18: 1591:19
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1591:22: 1591:38
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1591:23: 1591:28
        _6 = _2;                         // scope 0 at src/unix/linux_like/mod.rs:1591:23: 1591:28
        _5 = BitAnd(move _6, const 255_i32); // scope 0 at src/unix/linux_like/mod.rs:1591:22: 1591:38
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1591:37: 1591:38
        _0 = BitOr(move _3, move _5);    // scope 0 at src/unix/linux_like/mod.rs:1591:9: 1591:38
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1591:37: 1591:38
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1591:37: 1591:38
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const RTLD_DEFAULT: *mut core::ffi::c_void = {
    let mut _0: *mut core::ffi::c_void;  // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1489:25: 1489:38

    bb0: {
        _0 = const 0_i64 as *mut core::ffi::c_void (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1489:41: 1489:62
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1489:1: 1489:63
    }
}

const SYS_set_robust_list: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:352:32: 352:40

    bb0: {
        _0 = const 273_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:352:43: 352:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:352:1: 352:47
    }
}

const ETH_P_PAE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2005:22: 2005:29

    bb0: {
        _0 = const 34958_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2005:32: 2005:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2005:1: 2005:39
    }
}

can_frame::data::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:133:32: 133:44

    bb0: {
        _0 = const CAN_MAX_DLEN;         // scope 0 at src/unix/linux_like/linux/align.rs:133:32: 133:44
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:133:32: 133:44
    }
}

const NETLINK_UNUSED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2464:27: 2464:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2464:37: 2464:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2464:1: 2464:39
    }
}

const NFT_CT_EXPIRATION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2937:30: 2937:37

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2937:40: 2937:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2937:1: 2937:42
    }
}

const PTRACE_SEIZE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:868:25: 868:33

    bb0: {
        _0 = const 16902_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:868:36: 868:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:868:1: 868:43
    }
}

const IP_MTU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:800:19: 800:26

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/mod.rs:800:29: 800:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:800:1: 800:32
    }
}

const IPOPT_LSRR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1282:23: 1282:25
    let mut _1: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1282:28: 1282:45

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1282:28: 1282:45
        _1 = BitOr(const 3_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1282:28: 1282:45
        _0 = BitOr(move _1, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1282:28: 1282:58
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1282:57: 1282:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1282:1: 1282:59
    }
}

const b64::x86_64::EOPNOTSUPP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:463:23: 463:30

    bb0: {
        _0 = const 95_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:463:33: 463:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:463:1: 463:36
    }
}

sockaddr_un::sun_path::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:229:34: 229:37

    bb0: {
        _0 = const 108_usize;            // scope 0 at src/unix/linux_like/mod.rs:229:34: 229:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:229:34: 229:37
    }
}

const GLOB_ABORTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1341:25: 1341:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1341:35: 1341:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1341:1: 1341:37
    }
}

const SYS_sched_get_priority_max: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:225:39: 225:47

    bb0: {
        _0 = const 146_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:225:50: 225:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:225:1: 225:54
    }
}

const MFD_HUGE_16GB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1862:26: 1862:34

    bb0: {
        _0 = const 2281701376_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1862:37: 1862:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1862:1: 1862:48
    }
}

const TIOCSERCONFIG: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:182:26: 182:33

    bb0: {
        _0 = const 21587_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:182:36: 182:42
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:182:1: 182:43
    }
}

const NF_IP_PRI_LAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2316:27: 2316:34

    bb0: {
        _0 = const unix::INT_MAX;        // scope 0 at src/unix/linux_like/linux/mod.rs:2316:37: 2316:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2316:1: 2316:47
    }
}

const KEYCTL_ASSUME_AUTHORITY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2764:36: 2764:39

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2764:42: 2764:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2764:1: 2764:45
    }
}

const AF_VSOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:720:21: 720:28

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:720:31: 720:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:720:1: 720:34
    }
}

const SOL_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:667:20: 667:27

    bb0: {
        _0 = const 255_i32;              // scope 0 at src/unix/linux_like/mod.rs:667:30: 667:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:667:1: 667:34
    }
}

const CLONE_SIGHAND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1122:26: 1122:33

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/mod.rs:1122:36: 1122:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1122:1: 1122:42
    }
}

const RIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:745:16: 745:23

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:745:26: 745:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:745:1: 745:29
    }
}

const _SC_2_C_DEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1208:24: 1208:31

    bb0: {
        _0 = const 48_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1208:34: 1208:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1208:1: 1208:37
    }
}

const SYS_readv: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:98:22: 98:30

    bb0: {
        _0 = const 19_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:98:33: 98:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:98:1: 98:36
    }
}

const PR_TIMING_STATISTICAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1693:34: 1693:41

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1693:44: 1693:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1693:1: 1693:46
    }
}

const SO_DONTROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:25:25: 25:32

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:25:35: 25:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:25:1: 25:37
    }
}

const NFQA_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2149:24: 2149:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2149:34: 2149:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2149:1: 2149:36
    }
}

const RTA_SESSION: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2598:24: 2598:34

    bb0: {
        _0 = const 13_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2598:37: 2598:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2598:1: 2598:40
    }
}

const REG_NOMATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3098:24: 3098:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3098:34: 3098:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3098:1: 3098:36
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::mntent) -> linux::mntent {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::mntent; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const S_IFIFO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:512:20: 512:28

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/mod.rs:512:31: 512:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:512:1: 512:36
    }
}

const MOD_OFFSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1038:23: 1038:31

    bb0: {
        _0 = const ADJ_OFFSET;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1038:34: 1038:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1038:1: 1038:45
    }
}

const IPV6_PMTUDISC_WANT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:957:31: 957:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:957:41: 957:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:957:1: 957:43
    }
}

const MAP_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:610:21: 610:28

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:610:31: 610:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:610:1: 610:40
    }
}

fn WCOREDUMP(_1: i32) -> bool {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1578:50: 1578:54
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1579:9: 1579:24
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1579:10: 1579:16

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1579:9: 1579:24
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1579:10: 1579:16
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1579:10: 1579:16
        _2 = BitAnd(move _3, const 128_i32); // scope 0 at src/unix/linux_like/mod.rs:1579:9: 1579:24
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1579:23: 1579:24
        _0 = Ne(move _2, const 0_i32);   // scope 0 at src/unix/linux_like/mod.rs:1579:9: 1579:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1579:28: 1579:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_NOATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1485:23: 1485:32

    bb0: {
        _0 = const 1024_u64;             // scope 0 at src/unix/linux_like/linux/mod.rs:1485:35: 1485:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1485:1: 1485:40
    }
}

const SYS_pselect6: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:349:25: 349:33

    bb0: {
        _0 = const 270_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:349:36: 349:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:349:1: 349:40
    }
}

const ETH_P_PPP_SES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2002:26: 2002:33

    bb0: {
        _0 = const 34916_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2002:36: 2002:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2002:1: 2002:43
    }
}

const NDA_IFINDEX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2458:24: 2458:34

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2458:37: 2458:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2458:1: 2458:39
    }
}

const NFT_CT_STATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2934:26: 2934:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2934:36: 2934:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2934:1: 2934:38
    }
}

const PTRACE_SETSIGINFO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:865:30: 865:38

    bb0: {
        _0 = const 16899_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:865:41: 865:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:865:1: 865:48
    }
}

const IP_RECVERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:797:23: 797:30

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:797:33: 797:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:797:1: 797:36
    }
}

const IPOPT_END: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1279:22: 1279:24

    bb0: {
        _0 = BitOr(const 0_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1279:27: 1279:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1279:1: 1279:45
    }
}

const ENOPROTOOPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:460:24: 460:31

    bb0: {
        _0 = const 92_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:460:34: 460:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:460:1: 460:37
    }
}

const GLOB_APPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1337:24: 1337:31
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1337:34: 1337:40

    bb0: {
        _1 = CheckedShl(const 1_i32, const 5_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1337:34: 1337:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 5_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1337:34: 1337:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1337:34: 1337:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1337:1: 1337:41
    }
}

const SYS_sched_getparam: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:222:31: 222:39

    bb0: {
        _0 = const 143_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:222:42: 222:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:222:1: 222:46
    }
}

const MFD_HUGE_512MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1859:27: 1859:35

    bb0: {
        _0 = const 1946157056_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1859:38: 1859:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1859:1: 1859:49
    }
}

const FIONCLEX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:179:21: 179:28

    bb0: {
        _0 = const 21584_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:179:31: 179:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:179:1: 179:38
    }
}

const NF_IP_PRI_SELINUX_LAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2313:35: 2313:42

    bb0: {
        _0 = const 225_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2313:45: 2313:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2313:1: 2313:49
    }
}

const KEYCTL_NEGATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2761:26: 2761:29

    bb0: {
        _0 = const 13_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2761:32: 2761:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2761:1: 2761:35
    }
}

const AF_IB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:717:18: 717:25

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:717:28: 717:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:717:1: 717:31
    }
}

const SOL_UDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:664:20: 664:27

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:664:30: 664:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:664:1: 664:33
    }
}

const CLONE_VM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1119:21: 1119:28

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:1119:31: 1119:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1119:1: 1119:37
    }
}

const RSI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:742:16: 742:23

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:742:26: 742:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:742:1: 742:29
    }
}

const _SC_RE_DUP_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1205:27: 1205:34

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1205:37: 1205:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1205:1: 1205:40
    }
}

const SYS_ioctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:95:22: 95:30

    bb0: {
        _0 = const 16_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:95:33: 95:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:95:1: 95:36
    }
}

const PR_FP_EXC_PRECISE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1689:30: 1689:37

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1689:40: 1689:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1689:1: 1689:42
    }
}

const SO_REUSEADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:22:25: 22:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:22:35: 22:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:22:1: 22:37
    }
}

const NFQNL_MSG_VERDICT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2145:30: 2145:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2145:40: 2145:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2145:1: 2145:42
    }
}

const RTA_PROTOINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2595:26: 2595:36

    bb0: {
        _0 = const 10_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2595:39: 2595:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2595:1: 2595:42
    }
}

const REG_NOTBOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3094:23: 3094:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3094:33: 3094:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3094:1: 3094:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::passwd) -> linux::passwd {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::passwd; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn BPF_STMT(_1: u16, _2: u32) -> sock_filter {
    debug code => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    debug k => _2;                       // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: unix::linux_like::linux::sock_filter; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3379:51: 3379:62
    let mut _3: u16;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3380:27: 3380:31
    let mut _4: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3380:50: 3380:51

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3380:27: 3380:31
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3380:27: 3380:31
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3380:50: 3380:51
        _4 = _2;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3380:50: 3380:51
        (_0.0: u16) = move _3;           // scope 0 at src/unix/linux_like/linux/mod.rs:3380:9: 3380:52
        (_0.1: u8) = const 0_u8;         // scope 0 at src/unix/linux_like/linux/mod.rs:3380:9: 3380:52
        (_0.2: u8) = const 0_u8;         // scope 0 at src/unix/linux_like/linux/mod.rs:3380:9: 3380:52
        (_0.3: u32) = move _4;           // scope 0 at src/unix/linux_like/linux/mod.rs:3380:9: 3380:52
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3380:51: 3380:52
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3380:51: 3380:52
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const O_WRONLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:507:21: 507:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:507:31: 507:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:507:1: 507:33
    }
}

const ADJ_TICK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1035:21: 1035:29

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1035:32: 1035:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1035:1: 1035:39
    }
}

const IPV6_PREFER_SRC_CGA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:953:32: 953:39

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:953:42: 953:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:953:1: 953:49
    }
}

const MAP_POPULATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:607:25: 607:32

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:607:35: 607:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:607:1: 607:43
    }
}

fn WTERMSIG(_1: i32) -> i32 {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1566:49: 1566:56
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1567:9: 1567:15

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1567:9: 1567:15
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1567:9: 1567:15
        _0 = BitAnd(move _2, const 127_i32); // scope 0 at src/unix/linux_like/mod.rs:1567:9: 1567:22
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1567:21: 1567:22
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_WRITE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1482:21: 1482:30

    bb0: {
        _0 = const 128_u64;              // scope 0 at src/unix/linux_like/linux/mod.rs:1482:33: 1482:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1482:1: 1482:37
    }
}

const SYS_readlinkat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:346:27: 346:35

    bb0: {
        _0 = const 267_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:346:38: 346:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:346:1: 346:42
    }
}

const ETH_P_MPLS_MC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1999:26: 1999:33

    bb0: {
        _0 = const 34888_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1999:36: 1999:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1999:1: 1999:43
    }
}

const NDA_VLAN: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2455:21: 2455:31

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2455:34: 2455:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2455:1: 2455:36
    }
}

const NFT_META_PRANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2930:29: 2930:36

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2930:39: 2930:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2930:1: 2930:42
    }
}

const PTRACE_SETOPTIONS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:862:30: 862:38

    bb0: {
        _0 = const 16896_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:862:41: 862:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:862:1: 862:48
    }
}

const IP_PKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:794:23: 794:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:794:33: 794:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:794:1: 794:35
    }
}

const IPOPT_RESERVED1: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1276:28: 1276:30

    bb0: {
        _0 = const 32_u8;                // scope 0 at src/unix/linux_like/mod.rs:1276:33: 1276:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1276:1: 1276:38
    }
}

const EDESTADDRREQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:457:25: 457:32

    bb0: {
        _0 = const 89_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:457:35: 457:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:457:1: 457:38
    }
}

const GLOB_NOSORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1334:24: 1334:31
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1334:34: 1334:40

    bb0: {
        _1 = CheckedShl(const 1_i32, const 2_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1334:34: 1334:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 2_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1334:34: 1334:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1334:34: 1334:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1334:1: 1334:41
    }
}

const SYS_getpriority: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:219:28: 219:36

    bb0: {
        _0 = const 140_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:219:39: 219:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:219:1: 219:43
    }
}

const MFD_HUGE_16MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1856:26: 1856:34

    bb0: {
        _0 = const 1610612736_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1856:37: 1856:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1856:1: 1856:48
    }
}

const TIOCGPTLCK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:174:23: 174:30

    bb0: {
        _0 = const 2147767353_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:174:33: 174:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:174:1: 174:44
    }
}

const NF_IP_PRI_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2310:29: 2310:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2310:39: 2310:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2310:1: 2310:41
    }
}

const KEYCTL_SEARCH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2758:26: 2758:29

    bb0: {
        _0 = const 10_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2758:32: 2758:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2758:1: 2758:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &input_id) -> input_id {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::input_id; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const FAN_MARK_INODE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:712:27: 712:35

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:712:38: 712:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:712:1: 712:50
    }
}

const IFF_DYNAMIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:660:24: 660:31

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/mod.rs:660:34: 660:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:660:1: 660:41
    }
}

const ONLRET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1115:19: 1115:29

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/mod.rs:1115:32: 1115:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1115:1: 1115:41
    }
}

const RAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:739:16: 739:23

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:739:26: 739:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:739:1: 739:29
    }
}

const _SC_COLL_WEIGHTS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1202:33: 1202:40

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1202:43: 1202:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1202:1: 1202:46
    }
}

const SYS_rt_sigaction: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:92:29: 92:37

    bb0: {
        _0 = const 13_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:92:40: 92:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:92:1: 92:43
    }
}

const PR_FP_EXC_DISABLED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1686:31: 1686:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1686:41: 1686:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1686:1: 1686:43
    }
}

gnu::align::sem_t::__size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/align.rs:11:28: 11:30

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/align.rs:11:28: 11:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/align.rs:11:28: 11:30
    }
}

const NFULNL_CFG_F_SEQ_GLOBAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2140:36: 2140:43

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2140:46: 2140:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2140:1: 2140:53
    }
}

const RTA_PREFSRC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2592:24: 2592:34

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2592:37: 2592:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2592:1: 2592:39
    }
}

const REG_ICASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3090:22: 3090:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3090:32: 3090:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3090:1: 3090:34
    }
}

fn SO_EE_OFFENDER(_1: *const linux::sock_extended_err) -> *mut linux_like::sockaddr {
    debug ee => _1;                      // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: *mut unix::linux_like::sockaddr; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3367:62: 3367:77
    let mut _2: *const unix::linux_like::linux::sock_extended_err; // in scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:21
    let mut _3: *const unix::linux_like::linux::sock_extended_err; // in scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:11

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:21
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:11
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:11
        _2 = ptr::const_ptr::<impl *const linux::sock_extended_err>::offset(move _3, const 1_isize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:21
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3368:12: 3368:18
                                         // + literal: Const { ty: unsafe fn(*const unix::linux_like::linux::sock_extended_err, isize) -> *const unix::linux_like::linux::sock_extended_err {core::ptr::const_ptr::<impl *const unix::linux_like::linux::sock_extended_err>::offset}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3368:20: 3368:21
        _0 = move _2 as *mut unix::linux_like::sockaddr (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3368:9: 3368:40
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3368:39: 3368:40
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const TIMER_ABSTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:502:26: 502:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:502:36: 502:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:502:1: 502:38
    }
}

const ADJ_SETOFFSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1032:26: 1032:34

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1032:37: 1032:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1032:1: 1032:44
    }
}

const IPV6_PREFER_SRC_PUBTMP_DEFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:950:43: 950:50

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:950:53: 950:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:950:1: 950:60
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &seminfo) -> seminfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::seminfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MAP_ANONYMOUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:604:26: 604:33

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:604:36: 604:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:604:1: 604:43
    }
}

fn WSTOPSIG(_1: i32) -> i32 {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1554:49: 1554:56
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1555:9: 1555:22
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1555:10: 1555:16

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1555:9: 1555:22
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1555:10: 1555:16
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1555:10: 1555:16
        _2 = Shr(move _3, const 8_i32);  // scope 0 at src/unix/linux_like/mod.rs:1555:9: 1555:22
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1555:21: 1555:22
        _0 = BitAnd(move _2, const 255_i32); // scope 0 at src/unix/linux_like/mod.rs:1555:9: 1555:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1555:28: 1555:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_NOEXEC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1479:22: 1479:31

    bb0: {
        _0 = const 8_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1479:34: 1479:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1479:1: 1479:36
    }
}

const SYS_renameat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:343:25: 343:33

    bb0: {
        _0 = const 264_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:343:36: 343:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:343:1: 343:40
    }
}

const ETH_P_SLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1996:23: 1996:30

    bb0: {
        _0 = const 34825_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1996:33: 1996:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1996:1: 1996:40
    }
}

const NDA_LLADDR: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2452:23: 2452:33

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2452:36: 2452:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2452:1: 2452:38
    }
}

const NFT_META_IIFGROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2927:30: 2927:37

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2927:40: 2927:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2927:1: 2927:43
    }
}

const PTRACE_SINGLESTEP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:859:30: 859:38

    bb0: {
        _0 = const 9_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:859:41: 859:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:859:1: 859:43
    }
}

const IP_ROUTER_ALERT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:791:28: 791:35

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:791:38: 791:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:791:1: 791:40
    }
}

const IPOPT_CLASS_MASK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1272:29: 1272:31

    bb0: {
        _0 = const 96_u8;                // scope 0 at src/unix/linux_like/mod.rs:1272:34: 1272:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1272:1: 1272:39
    }
}

const ESTRPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:454:21: 454:28

    bb0: {
        _0 = const 86_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:454:31: 454:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:454:1: 454:34
    }
}

const AT_EXECFN: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1330:22: 1330:31

    bb0: {
        _0 = const 31_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1330:34: 1330:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1330:1: 1330:37
    }
}

const SYS_statfs: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:216:23: 216:31

    bb0: {
        _0 = const 137_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:216:34: 216:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:216:1: 216:38
    }
}

const MFD_HUGE_1MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1853:25: 1853:33

    bb0: {
        _0 = const 1342177280_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1853:36: 1853:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1853:1: 1853:47
    }
}

const TIOCSIG: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:171:20: 171:27

    bb0: {
        _0 = const 1074025526_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:171:30: 171:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:171:1: 171:41
    }
}

const NF_IP_PRI_CONNTRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2307:32: 2307:39

    bb0: {
        _0 = const -200_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2307:42: 2307:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2307:1: 2307:47
    }
}

const KEYCTL_CLEAR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2755:25: 2755:28

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2755:31: 2755:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2755:1: 2755:33
    }
}

const J1939_FILTER_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3245:29: 3245:36

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3245:39: 3245:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3245:1: 3245:43
    }
}

const SOCK_SEQPACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:708:27: 708:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:708:37: 708:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:708:1: 708:39
    }
}

const IFF_MULTICAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:657:26: 657:33

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/mod.rs:657:36: 657:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:657:1: 657:43
    }
}

const ECHO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1112:17: 1112:27

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:1112:30: 1112:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1112:1: 1112:41
    }
}

const R10: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:736:16: 736:23

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:736:26: 736:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:736:1: 736:28
    }
}

const _SC_BC_DIM_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1199:27: 1199:34

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1199:37: 1199:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1199:1: 1199:40
    }
}

const SYS_mprotect: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:89:25: 89:33

    bb0: {
        _0 = const 10_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:89:36: 89:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:89:1: 89:39
    }
}

const PR_FP_EXC_UND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1683:26: 1683:33

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1683:36: 1683:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1683:1: 1683:45
    }
}

fn gnu::align::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::align::sem_t) -> gnu::align::sem_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::align::sem_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const NFULNL_COPY_META: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2136:29: 2136:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2136:39: 2136:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2136:1: 2136:44
    }
}

const RTA_OIF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2589:20: 2589:30

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2589:33: 2589:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2589:1: 2589:35
    }
}

const LINUX_REBOOT_CMD_SW_SUSPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3086:40: 3086:47

    bb0: {
        _0 = const -805241630_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3086:50: 3086:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3086:1: 3086:61
    }
}

fn RT_TOS(_1: u8) -> u8 {
    debug tos => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3355:31: 3355:33
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3356:9: 3356:12

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3356:9: 3356:12
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3356:9: 3356:12
        _0 = BitAnd(move _2, const linux::IPTOS_TOS_MASK); // scope 0 at src/unix/linux_like/linux/mod.rs:3356:9: 3356:31
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3356:30: 3356:31
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_REALTIME_ALARM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:499:33: 499:44

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:499:47: 499:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:499:1: 499:49
    }
}

const ADJ_STATUS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1029:23: 1029:31

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1029:34: 1029:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1029:1: 1029:41
    }
}

const IPV6_UNICAST_IF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:947:28: 947:35

    bb0: {
        _0 = const 76_i32;               // scope 0 at src/unix/linux_like/mod.rs:947:38: 947:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:947:1: 947:41
    }
}

const MAP_NORESERVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:601:26: 601:33

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:601:36: 601:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:601:1: 601:44
    }
}

fn SIGRTMAX() -> i32 {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1542:26: 1542:33
    scope 1 {
    }

    bb0: {
        _0 = linux_like::__libc_current_sigrtmax() -> bb1; // scope 1 at src/unix/linux_like/mod.rs:1543:18: 1543:43
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1543:18: 1543:41
                                         // + literal: Const { ty: unsafe extern "C" fn() -> i32 {unix::linux_like::__libc_current_sigrtmax}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_RDONLY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1476:22: 1476:31

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1476:34: 1476:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1476:1: 1476:36
    }
}

const SYS_futimesat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:340:26: 340:34

    bb0: {
        _0 = const 261_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:340:37: 340:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:340:1: 340:41
    }
}

const ETH_P_IPX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1993:22: 1993:29

    bb0: {
        _0 = const 33079_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1993:32: 1993:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1993:1: 1993:39
    }
}

const NTF_ROUTER: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2448:23: 2448:25

    bb0: {
        _0 = const 128_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2448:28: 2448:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2448:1: 2448:33
    }
}

const NFT_META_BRI_OIFNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2924:33: 2924:40

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2924:43: 2924:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2924:1: 2924:46
    }
}

const PTRACE_POKEUSER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:856:28: 856:36

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:856:39: 856:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:856:1: 856:41
    }
}

const IP_TTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:788:19: 788:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:788:29: 788:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:788:1: 788:31
    }
}

const IPTOS_ECN_ECT0: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1268:27: 1268:29

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1268:32: 1268:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1268:1: 1268:37
    }
}

const ELIBEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:451:21: 451:28

    bb0: {
        _0 = const 83_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:451:31: 451:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:451:1: 451:34
    }
}

const AT_BASE_PLATFORM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1326:29: 1326:38

    bb0: {
        _0 = const 24_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1326:41: 1326:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1326:1: 1326:44
    }
}

const SYS_uselib: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:213:23: 213:31

    bb0: {
        _0 = const 134_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:213:34: 213:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:213:1: 213:38
    }
}

const MFD_HUGETLB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1850:24: 1850:32

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1850:35: 1850:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1850:1: 1850:42
    }
}

const TCSETX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:168:19: 168:26

    bb0: {
        _0 = const 21555_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:168:29: 168:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:168:1: 168:36
    }
}

const NF_IP_PRI_CONNTRACK_DEFRAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2304:39: 2304:46

    bb0: {
        _0 = const -400_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2304:49: 2304:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2304:1: 2304:54
    }
}

const KEYCTL_CHOWN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2752:25: 2752:28

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2752:31: 2752:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2752:1: 2752:33
    }
}

const J1939_EE_INFO_RX_RTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3241:33: 3241:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3241:43: 3241:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3241:1: 3241:45
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &j1939_filter) -> j1939_filter {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::j1939_filter; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LC_IDENTIFICATION_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:35: 692:42
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:45: 692:67

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_IDENTIFICATION); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:45: 692:67
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_IDENTIFICATION) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:45: 692:67
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:45: 692:67
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:692:1: 692:68
    }
}

const IFF_ALLMULTI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:654:25: 654:32

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/mod.rs:654:35: 654:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:654:1: 654:41
    }
}

const OPOST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1109:18: 1109:28

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:1109:31: 1109:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1109:1: 1109:35
    }
}

const RBP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:733:16: 733:23

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:733:26: 733:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:733:1: 733:28
    }
}

const _SC_SIGQUEUE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1196:29: 1196:36

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1196:39: 1196:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1196:1: 1196:42
    }
}

const SYS_poll: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:86:21: 86:29

    bb0: {
        _0 = const 7_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:86:32: 86:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:86:1: 86:34
    }
}

const PR_FP_EXC_SW_ENABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1680:32: 1680:39

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1680:42: 1680:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1680:1: 1680:47
    }
}

const NFULA_CFG_QTHRESH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2132:30: 2132:37

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2132:40: 2132:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2132:1: 2132:42
    }
}

const RTA_DST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2586:20: 2586:30

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2586:33: 2586:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2586:1: 2586:35
    }
}

const LINUX_REBOOT_CMD_CAD_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3083:37: 3083:44

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3083:47: 3083:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3083:1: 3083:58
    }
}

fn makedev(_1: u32, _2: u32) -> u64 {
    debug major => _1;                   // in scope 0 at src/macros.rs:243:43: 243:47
    debug minor => _2;                   // in scope 0 at src/macros.rs:243:43: 243:47
    let _3: u64;                         // in scope 0 at src/unix/linux_like/linux/mod.rs:3337:13: 3337:18
    let mut _4: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3337:21: 3337:26
    let mut _6: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3338:21: 3338:26
    let mut _7: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:41
    let mut _8: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:36
    let mut _9: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3340:17: 3340:22
    let mut _10: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:42
    let mut _11: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:36
    let mut _12: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3341:17: 3341:22
    let mut _13: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:41
    let mut _14: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:36
    let mut _15: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3342:17: 3342:22
    let mut _16: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:42
    let mut _17: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:36
    let mut _18: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3343:17: 3343:22
    scope 1 {
        debug major => _3;               // in scope 1 at src/unix/linux_like/linux/mod.rs:3337:13: 3337:18
        let _5: u64;                     // in scope 1 at src/unix/linux_like/linux/mod.rs:3338:13: 3338:18
        scope 2 {
            debug minor => _5;           // in scope 2 at src/unix/linux_like/linux/mod.rs:3338:13: 3338:18
            let mut _0: u64;             // return place in scope 2 at src/unix/linux_like/linux/mod.rs:3339:13: 3339:20
            scope 3 {
                debug dev => _0;         // in scope 3 at src/unix/linux_like/linux/mod.rs:3339:13: 3339:20
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3337:13: 3337:18
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3337:21: 3337:26
        _4 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3337:21: 3337:26
        _3 = move _4 as u64 (Misc);      // scope 0 at src/unix/linux_like/linux/mod.rs:3337:21: 3337:37
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3337:36: 3337:37
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3338:13: 3338:18
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3338:21: 3338:26
        _6 = _2;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3338:21: 3338:26
        _5 = move _6 as u64 (Misc);      // scope 1 at src/unix/linux_like/linux/mod.rs:3338:21: 3338:37
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3338:36: 3338:37
        _0 = const 0_u64;                // scope 2 at src/unix/linux_like/linux/mod.rs:3339:23: 3339:24
        StorageLive(_7);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:41
        StorageLive(_8);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:36
        StorageLive(_9);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:17: 3340:22
        _9 = _3;                         // scope 3 at src/unix/linux_like/linux/mod.rs:3340:17: 3340:22
        _8 = BitAnd(move _9, const 4095_u64); // scope 3 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:36
        StorageDead(_9);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:35: 3340:36
        _7 = Shl(move _8, const 8_i32);  // scope 3 at src/unix/linux_like/linux/mod.rs:3340:16: 3340:41
        StorageDead(_8);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:40: 3340:41
        _0 = BitOr(_0, move _7);         // scope 3 at src/unix/linux_like/linux/mod.rs:3340:9: 3340:41
        StorageDead(_7);                 // scope 3 at src/unix/linux_like/linux/mod.rs:3340:40: 3340:41
        StorageLive(_10);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:42
        StorageLive(_11);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:36
        StorageLive(_12);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:17: 3341:22
        _12 = _3;                        // scope 3 at src/unix/linux_like/linux/mod.rs:3341:17: 3341:22
        _11 = BitAnd(move _12, const 4294963200_u64); // scope 3 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:36
        StorageDead(_12);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:35: 3341:36
        _10 = Shl(move _11, const 32_i32); // scope 3 at src/unix/linux_like/linux/mod.rs:3341:16: 3341:42
        StorageDead(_11);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:41: 3341:42
        _0 = BitOr(_0, move _10);        // scope 3 at src/unix/linux_like/linux/mod.rs:3341:9: 3341:42
        StorageDead(_10);                // scope 3 at src/unix/linux_like/linux/mod.rs:3341:41: 3341:42
        StorageLive(_13);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:41
        StorageLive(_14);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:36
        StorageLive(_15);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:17: 3342:22
        _15 = _5;                        // scope 3 at src/unix/linux_like/linux/mod.rs:3342:17: 3342:22
        _14 = BitAnd(move _15, const 255_u64); // scope 3 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:36
        StorageDead(_15);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:35: 3342:36
        _13 = Shl(move _14, const 0_i32); // scope 3 at src/unix/linux_like/linux/mod.rs:3342:16: 3342:41
        StorageDead(_14);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:40: 3342:41
        _0 = BitOr(_0, move _13);        // scope 3 at src/unix/linux_like/linux/mod.rs:3342:9: 3342:41
        StorageDead(_13);                // scope 3 at src/unix/linux_like/linux/mod.rs:3342:40: 3342:41
        StorageLive(_16);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:42
        StorageLive(_17);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:36
        StorageLive(_18);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:17: 3343:22
        _18 = _5;                        // scope 3 at src/unix/linux_like/linux/mod.rs:3343:17: 3343:22
        _17 = BitAnd(move _18, const 4294967040_u64); // scope 3 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:36
        StorageDead(_18);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:35: 3343:36
        _16 = Shl(move _17, const 12_i32); // scope 3 at src/unix/linux_like/linux/mod.rs:3343:16: 3343:42
        StorageDead(_17);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:41: 3343:42
        _0 = BitOr(_0, move _16);        // scope 3 at src/unix/linux_like/linux/mod.rs:3343:9: 3343:42
        StorageDead(_16);                // scope 3 at src/unix/linux_like/linux/mod.rs:3343:41: 3343:42
        StorageDead(_5);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_REALTIME_COARSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:496:34: 496:45

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:496:48: 496:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:496:1: 496:50
    }
}

const ADJ_FREQUENCY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1026:26: 1026:34

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1026:37: 1026:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1026:1: 1026:44
    }
}

const IPV6_ORIGDSTADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:944:29: 944:36

    bb0: {
        _0 = const 74_i32;               // scope 0 at src/unix/linux_like/mod.rs:944:39: 944:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:944:1: 944:42
    }
}

const O_NOFOLLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:597:23: 597:30

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:597:33: 597:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:597:1: 597:41
    }
}

fn FD_ISSET(_1: i32, _2: *const linux_like::fd_set) -> bool {
    debug fd => _1;                      // in scope 0 at src/macros.rs:243:43: 243:47
    debug set => _2;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1521:57: 1521:61
    let _3: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1522:13: 1522:15
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1522:18: 1522:20
    let mut _6: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1523:20: 1523:59
    let mut _7: &u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1523:39: 1523:58
    let _8: &u64;                        // in scope 0 at src/unix/linux_like/mod.rs:1523:39: 1523:58
    let _9: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1523:56: 1523:57
    let mut _10: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1524:16: 1524:65
    let mut _11: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1524:17: 1524:43
    let _12: usize;                      // in scope 0 at src/unix/linux_like/mod.rs:1524:33: 1524:42
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:33: 1524:35
    let mut _14: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:38: 1524:42
    let mut _15: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1524:33: 1524:42
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:17: 1524:43
    let mut _17: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1524:17: 1524:43
    let mut _18: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1524:46: 1524:64
    let mut _19: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:52: 1524:63
    let mut _20: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:53: 1524:55
    let mut _21: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1524:58: 1524:62
    let mut _22: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1524:52: 1524:63
    scope 1 {
        debug fd => _3;                  // in scope 1 at src/unix/linux_like/mod.rs:1522:13: 1522:15
        let _5: usize;                   // in scope 1 at src/unix/linux_like/mod.rs:1523:13: 1523:17
        scope 2 {
            debug size => _5;            // in scope 2 at src/unix/linux_like/mod.rs:1523:13: 1523:17
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1522:13: 1522:15
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1522:18: 1522:20
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1522:18: 1522:20
        _3 = move _4 as usize (Misc);    // scope 0 at src/unix/linux_like/mod.rs:1522:18: 1522:29
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1522:28: 1522:29
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/mod.rs:1523:13: 1523:17
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1523:20: 1523:59
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1523:39: 1523:58
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1523:39: 1523:58
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1523:56: 1523:57
        _9 = const 0_usize;              // scope 1 at src/unix/linux_like/mod.rs:1523:56: 1523:57
        _8 = &((*_2).0: [u64; 16])[_9];  // scope 1 at src/unix/linux_like/mod.rs:1523:39: 1523:58
        _7 = _8;                         // scope 1 at src/unix/linux_like/mod.rs:1523:39: 1523:58
        _6 = core::mem::size_of_val::<u64>(move _7) -> bb1; // scope 1 at src/unix/linux_like/mod.rs:1523:20: 1523:59
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1523:20: 1523:38
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1523:58: 1523:59
        _5 = Mul(move _6, const 8_usize); // scope 1 at src/unix/linux_like/mod.rs:1523:20: 1523:63
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1523:62: 1523:63
        StorageDead(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1523:62: 1523:63
        StorageDead(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1523:62: 1523:63
        StorageLive(_10);                // scope 2 at src/unix/linux_like/mod.rs:1524:16: 1524:65
        StorageLive(_11);                // scope 2 at src/unix/linux_like/mod.rs:1524:17: 1524:43
        StorageLive(_12);                // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:42
        StorageLive(_13);                // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:35
        _13 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:35
        StorageLive(_14);                // scope 2 at src/unix/linux_like/mod.rs:1524:38: 1524:42
        _14 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1524:38: 1524:42
        _15 = Eq(_14, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:42
        assert(!move _15, "attempt to divide `{}` by zero", _13) -> bb2; // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:42
    }

    bb2: {
        _12 = Div(move _13, move _14);   // scope 2 at src/unix/linux_like/mod.rs:1524:33: 1524:42
        StorageDead(_14);                // scope 2 at src/unix/linux_like/mod.rs:1524:41: 1524:42
        StorageDead(_13);                // scope 2 at src/unix/linux_like/mod.rs:1524:41: 1524:42
        _16 = const 16_usize;            // scope 2 at src/unix/linux_like/mod.rs:1524:17: 1524:43
        _17 = Lt(_12, _16);              // scope 2 at src/unix/linux_like/mod.rs:1524:17: 1524:43
        assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _12) -> bb3; // scope 2 at src/unix/linux_like/mod.rs:1524:17: 1524:43
    }

    bb3: {
        _11 = ((*_2).0: [u64; 16])[_12]; // scope 2 at src/unix/linux_like/mod.rs:1524:17: 1524:43
        StorageLive(_18);                // scope 2 at src/unix/linux_like/mod.rs:1524:46: 1524:64
        StorageLive(_19);                // scope 2 at src/unix/linux_like/mod.rs:1524:52: 1524:63
        StorageLive(_20);                // scope 2 at src/unix/linux_like/mod.rs:1524:53: 1524:55
        _20 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1524:53: 1524:55
        StorageLive(_21);                // scope 2 at src/unix/linux_like/mod.rs:1524:58: 1524:62
        _21 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1524:58: 1524:62
        _22 = Eq(_21, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1524:52: 1524:63
        assert(!move _22, "attempt to calculate the remainder of `{}` with a divisor of zero", _20) -> bb4; // scope 2 at src/unix/linux_like/mod.rs:1524:52: 1524:63
    }

    bb4: {
        _19 = Rem(move _20, move _21);   // scope 2 at src/unix/linux_like/mod.rs:1524:52: 1524:63
        StorageDead(_21);                // scope 2 at src/unix/linux_like/mod.rs:1524:62: 1524:63
        StorageDead(_20);                // scope 2 at src/unix/linux_like/mod.rs:1524:62: 1524:63
        _18 = Shl(const 1_u64, move _19); // scope 2 at src/unix/linux_like/mod.rs:1524:46: 1524:64
        StorageDead(_19);                // scope 2 at src/unix/linux_like/mod.rs:1524:63: 1524:64
        _10 = BitAnd(move _11, move _18); // scope 2 at src/unix/linux_like/mod.rs:1524:16: 1524:65
        StorageDead(_18);                // scope 2 at src/unix/linux_like/mod.rs:1524:64: 1524:65
        StorageDead(_11);                // scope 2 at src/unix/linux_like/mod.rs:1524:64: 1524:65
        _0 = Ne(move _10, const 0_u64);  // scope 2 at src/unix/linux_like/mod.rs:1524:16: 1524:70
        StorageDead(_10);                // scope 2 at src/unix/linux_like/mod.rs:1524:69: 1524:70
        StorageDead(_5);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        StorageDead(_12);                // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_NOFILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1470:25: 1470:32

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1470:35: 1470:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1470:1: 1470:42
    }
}

const SYS_mkdirat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:337:24: 337:32

    bb0: {
        _0 = const 258_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:337:35: 337:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:337:1: 337:39
    }
}

const ETH_P_ATALK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1990:24: 1990:31

    bb0: {
        _0 = const 32923_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1990:34: 1990:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1990:1: 1990:41
    }
}

const NTF_SELF: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2445:21: 2445:23

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2445:26: 2445:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2445:1: 2445:31
    }
}

const NFT_META_NFPROTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2921:29: 2921:36

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2921:39: 2921:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2921:1: 2921:42
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::mq_attr) -> linux::mq_attr {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::mq_attr; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const PTRACE_PEEKUSER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:853:28: 853:36

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:853:39: 853:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:853:1: 853:41
    }
}

const SOCK_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:785:21: 785:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:785:31: 785:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:785:1: 785:33
    }
}

const IPTOS_PREC_ROUTINE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1264:31: 1264:33

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1264:36: 1264:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1264:1: 1264:41
    }
}

const ELIBBAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:448:20: 448:27

    bb0: {
        _0 = const 80_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:448:30: 448:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:448:1: 448:33
    }
}

const AT_HWCAP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1322:21: 1322:30

    bb0: {
        _0 = const 16_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1322:33: 1322:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1322:1: 1322:36
    }
}

const SYS_sigaltstack: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:210:28: 210:36

    bb0: {
        _0 = const 131_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:210:39: 210:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:210:1: 210:43
    }
}

const CMSPAR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1846:19: 1846:29

    bb0: {
        _0 = const 1073741824_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1846:32: 1846:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1846:1: 1846:46
    }
}

const TIOCSPTLCK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:165:23: 165:30

    bb0: {
        _0 = const 1074025521_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:165:33: 165:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:165:1: 165:44
    }
}

const NF_IP_POST_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2300:31: 2300:38

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2300:41: 2300:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2300:1: 2300:43
    }
}

const KEYCTL_JOIN_SESSION_KEYRING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2749:40: 2749:43

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2749:46: 2749:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2749:1: 2749:48
    }
}

const J1939_NLA_DEST_ADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3237:32: 3237:39

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3237:42: 3237:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3237:1: 3237:44
    }
}

const LC_ADDRESS_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:28: 689:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:38: 689:53

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_ADDRESS); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:38: 689:53
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_ADDRESS) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:38: 689:53
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:38: 689:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:689:1: 689:54
    }
}

const IFF_RUNNING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:651:24: 651:31

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/mod.rs:651:34: 651:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:651:1: 651:39
    }
}

const ICRNL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1106:18: 1106:28

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/mod.rs:1106:31: 1106:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1106:1: 1106:42
    }
}

const R14: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:730:16: 730:23

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:730:26: 730:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:730:1: 730:28
    }
}

const _SC_RTSIG_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1193:26: 1193:33

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1193:36: 1193:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1193:1: 1193:39
    }
}

const SYS_stat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:83:21: 83:29

    bb0: {
        _0 = const 4_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:83:32: 83:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:83:1: 83:34
    }
}

const PR_FPEMU_SIGFPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1676:28: 1676:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1676:38: 1676:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1676:1: 1676:40
    }
}

const NFULA_CFG_MODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2129:27: 2129:34

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2129:37: 2129:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2129:1: 2129:39
    }
}

const RTM_F_EQUALIZE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2582:27: 2582:35

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2582:38: 2582:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2582:1: 2582:44
    }
}

const LINUX_REBOOT_CMD_RESTART: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3080:37: 3080:44

    bb0: {
        _0 = const 19088743_i32;         // scope 0 at src/unix/linux_like/linux/mod.rs:3080:47: 3080:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3080:1: 3080:58
    }
}

fn CPU_EQUAL(_1: &linux::cpu_set_t, _2: &linux::cpu_set_t) -> bool {
    debug set1 => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    debug set2 => _2;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3318:61: 3318:65
    let mut _3: &[u64; 16];              // in scope 0 at src/unix/linux_like/linux/mod.rs:3319:9: 3319:18
    let mut _4: &[u64; 16];              // in scope 0 at src/unix/linux_like/linux/mod.rs:3319:22: 3319:31

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3319:9: 3319:18
        _3 = &((*_1).0: [u64; 16]);      // scope 0 at src/unix/linux_like/linux/mod.rs:3319:9: 3319:18
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3319:22: 3319:31
        _4 = &((*_2).0: [u64; 16]);      // scope 0 at src/unix/linux_like/linux/mod.rs:3319:22: 3319:31
        _0 = <[u64; 16] as PartialEq>::eq(move _3, move _4) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3319:9: 3319:31
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3319:9: 3319:31
                                         // + literal: Const { ty: for<'r, 's> fn(&'r [u64; 16], &'s [u64; 16]) -> bool {<[u64; 16] as core::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3319:30: 3319:31
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3319:30: 3319:31
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_PROCESS_CPUTIME_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:493:37: 493:48

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:493:51: 493:52
        return;                          // scope 0 at src/unix/linux_like/mod.rs:493:1: 493:53
    }
}

const STATX_ATTR_ENCRYPTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1021:33: 1021:40

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1021:43: 1021:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1021:1: 1021:50
    }
}

const IPV6_AUTOFLOWLABEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:941:31: 941:38

    bb0: {
        _0 = const 70_i32;               // scope 0 at src/unix/linux_like/mod.rs:941:41: 941:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:941:1: 941:44
    }
}

const b64::x86_64::__SIZEOF_PTHREAD_MUTEXATTR_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:593:41: 593:46

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:593:49: 593:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:593:1: 593:51
    }
}

fn CMSG_SPACE(_1: u32) -> u32 {
    debug length => _1;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1505:52: 1505:60
    let mut _2: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1506:9: 1506:80
    let mut _3: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1506:10: 1506:37
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:36
    let mut _5: u32;                     // in scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:27
    let mut _6: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1506:40: 1506:79
    let mut _7: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1506:51: 1506:78

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1506:9: 1506:80
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1506:10: 1506:37
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:36
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:27
        _5 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:27
        _4 = move _5 as usize (Misc);    // scope 0 at src/unix/linux_like/mod.rs:1506:21: 1506:36
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1506:35: 1506:36
        _3 = CMSG_ALIGN(move _4) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1506:10: 1506:37
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1506:10: 1506:20
                                         // + literal: Const { ty: fn(usize) -> usize {unix::linux_like::CMSG_ALIGN}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1506:36: 1506:37
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1506:40: 1506:79
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/mod.rs:1506:51: 1506:78
        _7 = core::mem::size_of::<gnu::cmsghdr>() -> bb2; // scope 0 at src/unix/linux_like/mod.rs:1506:51: 1506:78
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1506:51: 1506:76
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::gnu::cmsghdr>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _6 = CMSG_ALIGN(move _7) -> bb3; // scope 0 at src/unix/linux_like/mod.rs:1506:40: 1506:79
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1506:40: 1506:50
                                         // + literal: Const { ty: fn(usize) -> usize {unix::linux_like::CMSG_ALIGN}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/mod.rs:1506:78: 1506:79
        _2 = Add(move _3, move _6);      // scope 0 at src/unix/linux_like/mod.rs:1506:9: 1506:80
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1506:79: 1506:80
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1506:79: 1506:80
        _0 = move _2 as u32 (Misc);      // scope 0 at src/unix/linux_like/mod.rs:1506:9: 1507:24
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1507:23: 1507:24
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_ATTACH_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1466:29: 1466:36

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1466:39: 1466:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1466:1: 1466:46
    }
}

const SYS_inotify_rm_watch: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:334:33: 334:41

    bb0: {
        _0 = const 255_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:334:44: 334:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:334:1: 334:48
    }
}

const ETH_P_SCA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1987:22: 1987:29

    bb0: {
        _0 = const 24583_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1987:32: 1987:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1987:1: 1987:39
    }
}

const NUD_NOARP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2441:22: 2441:25

    bb0: {
        _0 = const 64_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2441:28: 2441:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2441:1: 2441:33
    }
}

const NFT_META_NFTRACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2918:29: 2918:36

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2918:39: 2918:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2918:1: 2918:42
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &uinput_ff_erase) -> uinput_ff_erase {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::uinput_ff_erase; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

af_alg_iv::iv::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:658:29: 658:30

    bb0: {
        _0 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:658:29: 658:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:658:29: 658:30
    }
}

const PTRACE_TRACEME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:850:27: 850:35

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:850:38: 850:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:850:1: 850:40
    }
}

const MSG_FASTOPEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:780:25: 780:32

    bb0: {
        _0 = const 536870912_i32;        // scope 0 at src/unix/linux_like/mod.rs:780:35: 780:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:780:1: 780:46
    }
}

const IPTOS_PREC_FLASH: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1261:29: 1261:31

    bb0: {
        _0 = const 96_u8;                // scope 0 at src/unix/linux_like/mod.rs:1261:34: 1261:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1261:1: 1261:39
    }
}

const EBADMSG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:445:20: 445:27

    bb0: {
        _0 = const 74_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:445:30: 445:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:445:1: 445:33
    }
}

const AT_GID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1319:19: 1319:28

    bb0: {
        _0 = const 13_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1319:31: 1319:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1319:1: 1319:34
    }
}

const SYS_rt_sigtimedwait: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:207:32: 207:40

    bb0: {
        _0 = const 128_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:207:43: 207:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:207:1: 207:47
    }
}

const IPV6_RTHDR_LOOSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1841:29: 1841:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1841:39: 1841:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1841:1: 1841:41
    }
}

const TIOCGRS485: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:162:23: 162:30

    bb0: {
        _0 = const 21550_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:162:33: 162:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:162:1: 162:40
    }
}

const NF_IP_LOCAL_IN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2297:27: 2297:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2297:37: 2297:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2297:1: 2297:39
    }
}

const KEY_REQKEY_DEFL_GROUP_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2745:42: 2745:45

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2745:48: 2745:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2745:1: 2745:50
    }
}

const J1939_NLA_SRC_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3234:31: 3234:38

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3234:41: 3234:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3234:1: 3234:43
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &can_filter) -> can_filter {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::can_filter; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LC_IDENTIFICATION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:686:30: 686:37

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:686:40: 686:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:686:1: 686:43
    }
}

const IFF_LOOPBACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:648:25: 648:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:648:35: 648:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:648:1: 648:39
    }
}

const ISTRIP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1103:19: 1103:29

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/mod.rs:1103:32: 1103:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1103:1: 1103:43
    }
}

const KEYCTL_CAPS1_NS_KEY_TAG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:980:44: 980:47

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:980:50: 980:54
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:980:9: 980:55
    }
}

const FLUSHO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:725:19: 725:29

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:725:32: 725:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:725:1: 725:43
    }
}

const _SC_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1190:24: 1190:31

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1190:34: 1190:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1190:1: 1190:37
    }
}

const SYS_write: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:80:22: 80:30

    bb0: {
        _0 = const 1_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:80:33: 80:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:80:1: 80:35
    }
}

const PR_GET_FPEMU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1673:25: 1673:32

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1673:35: 1673:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1673:1: 1673:37
    }
}

const NFULNL_CFG_CMD_PF_UNBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2125:37: 2125:44

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2125:47: 2125:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2125:1: 2125:49
    }
}

const RTM_GETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2578:24: 2578:27

    bb0: {
        _0 = const 90_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2578:30: 2578:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2578:1: 2578:33
    }
}

const LINUX_REBOOT_MAGIC2A: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3076:33: 3076:40

    bb0: {
        _0 = const 85072278_i32;         // scope 0 at src/unix/linux_like/linux/mod.rs:3076:43: 3076:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3076:1: 3076:52
    }
}

fn CPU_ISSET(_1: usize, _2: &linux::cpu_set_t) -> bool {
    debug cpu => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    debug cpuset => _2;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3299:57: 3299:61
    let _3: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3300:13: 3300:25
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3300:32: 3300:67
    let mut _5: &u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
    let _6: &u64;                        // in scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
    let _7: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3300:64: 3300:65
    let mut _10: (usize, usize);         // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:29: 3301:69
    let mut _11: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:33
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:36: 3301:48
    let mut _14: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
    let mut _15: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:53
    let mut _17: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:56: 3301:68
    let mut _18: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
    let mut _19: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:14: 3302:48
    let mut _20: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
    let _21: usize;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:27: 3302:30
    let mut _22: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
    let mut _23: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
    let mut _24: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:34: 3302:47
    let mut _25: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3302:40: 3302:46
    scope 1 {
        debug size_in_bits => _3;        // in scope 1 at src/unix/linux_like/linux/mod.rs:3300:13: 3300:25
        let _8: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3301:14: 3301:17
        let _9: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3301:19: 3301:25
        scope 2 {
            debug idx => _8;             // in scope 2 at src/unix/linux_like/linux/mod.rs:3301:14: 3301:17
            debug offset => _9;          // in scope 2 at src/unix/linux_like/linux/mod.rs:3301:19: 3301:25
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:13: 3300:25
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:32: 3300:67
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:64: 3300:65
        _7 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:3300:64: 3300:65
        _6 = &((*_2).0: [u64; 16])[_7];  // scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
        _5 = _6;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3300:51: 3300:66
        _4 = core::mem::size_of_val::<u64>(move _5) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3300:32: 3300:67
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3300:32: 3300:50
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:66: 3300:67
        _3 = Mul(const 8_usize, move _4); // scope 0 at src/unix/linux_like/linux/mod.rs:3300:28: 3300:67
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:66: 3300:67
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:66: 3300:67
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3300:66: 3300:67
        StorageLive(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:29: 3301:69
        StorageLive(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
        StorageLive(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:33
        _12 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:33
        StorageLive(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:36: 3301:48
        _13 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3301:36: 3301:48
        _14 = Eq(_13, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
        assert(!move _14, "attempt to divide `{}` by zero", _12) -> bb2; // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
    }

    bb2: {
        _11 = Div(move _12, move _13);   // scope 1 at src/unix/linux_like/linux/mod.rs:3301:30: 3301:48
        StorageDead(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:47: 3301:48
        StorageDead(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:47: 3301:48
        StorageLive(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
        StorageLive(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:53
        _16 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:53
        StorageLive(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:56: 3301:68
        _17 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3301:56: 3301:68
        _18 = Eq(_17, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
        assert(!move _18, "attempt to calculate the remainder of `{}` with a divisor of zero", _16) -> bb3; // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
    }

    bb3: {
        _15 = Rem(move _16, move _17);   // scope 1 at src/unix/linux_like/linux/mod.rs:3301:50: 3301:68
        StorageDead(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:67: 3301:68
        StorageDead(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:67: 3301:68
        (_10.0: usize) = move _11;       // scope 1 at src/unix/linux_like/linux/mod.rs:3301:29: 3301:69
        (_10.1: usize) = move _15;       // scope 1 at src/unix/linux_like/linux/mod.rs:3301:29: 3301:69
        StorageDead(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:68: 3301:69
        StorageDead(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:68: 3301:69
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3301:14: 3301:17
        _8 = (_10.0: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3301:14: 3301:17
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3301:19: 3301:25
        _9 = (_10.1: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3301:19: 3301:25
        StorageDead(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3301:68: 3301:69
        StorageLive(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:14: 3302:48
        StorageLive(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
        StorageLive(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:27: 3302:30
        _21 = _8;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3302:27: 3302:30
        _22 = const 16_usize;            // scope 2 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
        _23 = Lt(_21, _22);              // scope 2 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
        assert(move _23, "index out of bounds: the length is {} but the index is {}", move _22, _21) -> bb4; // scope 2 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
    }

    bb4: {
        _20 = ((*_2).0: [u64; 16])[_21]; // scope 2 at src/unix/linux_like/linux/mod.rs:3302:15: 3302:31
        StorageLive(_24);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:34: 3302:47
        StorageLive(_25);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:40: 3302:46
        _25 = _9;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3302:40: 3302:46
        _24 = Shl(const 1_u64, move _25); // scope 2 at src/unix/linux_like/linux/mod.rs:3302:34: 3302:47
        StorageDead(_25);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:46: 3302:47
        _19 = BitAnd(move _20, move _24); // scope 2 at src/unix/linux_like/linux/mod.rs:3302:14: 3302:48
        StorageDead(_24);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:47: 3302:48
        StorageDead(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:47: 3302:48
        _0 = Ne(const 0_u64, move _19);  // scope 2 at src/unix/linux_like/linux/mod.rs:3302:9: 3302:48
        StorageDead(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3302:47: 3302:48
        StorageDead(_9);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_8);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        StorageDead(_21);                // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const PTHREAD_CREATE_DETACHED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:489:36: 489:43

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:489:46: 489:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:489:1: 489:48
    }
}

const STATX_ATTR_IMMUTABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1018:33: 1018:40

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1018:43: 1018:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1018:1: 1018:50
    }
}

const IPV6_DONTFRAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:938:26: 938:33

    bb0: {
        _0 = const 62_i32;               // scope 0 at src/unix/linux_like/mod.rs:938:36: 938:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:938:1: 938:39
    }
}

const EPOLL_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:588:26: 588:33

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:588:36: 588:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:588:1: 588:44
    }
}

fn CMSG_ALIGN(_1: usize) -> usize {
    debug len => _1;                     // in scope 0 at src/macros.rs:275:25: 275:29
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1487:42: 1487:47
    let mut _2: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:44
    let mut _3: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:40
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:12
    let mut _5: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:15: 1488:40
    let mut _6: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:47: 1488:79
    let mut _7: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:48: 1488:79
    let mut _8: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1488:49: 1488:74

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:44
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:40
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:12
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:12
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1488:15: 1488:40
        _5 = core::mem::size_of::<usize>() -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1488:15: 1488:40
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1488:15: 1488:38
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<usize>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _3 = Add(move _4, move _5);      // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:40
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1488:39: 1488:40
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1488:39: 1488:40
        _2 = Sub(move _3, const 1_usize); // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:44
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1488:43: 1488:44
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1488:47: 1488:79
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/mod.rs:1488:48: 1488:79
        StorageLive(_8);                 // scope 0 at src/unix/linux_like/mod.rs:1488:49: 1488:74
        _8 = core::mem::size_of::<usize>() -> bb2; // scope 0 at src/unix/linux_like/mod.rs:1488:49: 1488:74
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1488:49: 1488:72
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<usize>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _7 = Sub(move _8, const 1_usize); // scope 0 at src/unix/linux_like/mod.rs:1488:48: 1488:79
        StorageDead(_8);                 // scope 0 at src/unix/linux_like/mod.rs:1488:78: 1488:79
        _6 = Not(move _7);               // scope 0 at src/unix/linux_like/mod.rs:1488:47: 1488:79
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/mod.rs:1488:78: 1488:79
        _0 = BitAnd(move _2, move _6);   // scope 0 at src/unix/linux_like/mod.rs:1488:9: 1488:79
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/mod.rs:1488:78: 1488:79
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1488:78: 1488:79
        return;                          // scope 0 at src/macros.rs:278:18: 278:18
    }
}

const IFF_VNET_HDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1463:25: 1463:32

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1463:35: 1463:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1463:1: 1463:42
    }
}

const SYS_ioprio_get: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:331:27: 331:35

    bb0: {
        _0 = const 252_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:331:38: 331:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:331:1: 331:42
    }
}

const ETH_P_LAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1984:22: 1984:29

    bb0: {
        _0 = const 24580_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1984:32: 1984:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1984:1: 1984:39
    }
}

const NUD_DELAY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2438:22: 2438:25

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2438:28: 2438:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2438:1: 2438:33
    }
}

const NFT_META_OIFTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2915:29: 2915:36

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2915:39: 2915:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2915:1: 2915:41
    }
}

const ST_RELATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:832:24: 832:33

    bb0: {
        _0 = const 4096_u64;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:832:36: 832:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:832:1: 832:41
    }
}

const MSG_NOSIGNAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:777:25: 777:32

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/mod.rs:777:35: 777:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:777:1: 777:42
    }
}

const IPTOS_PREC_INTERNETCONTROL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1258:39: 1258:41

    bb0: {
        _0 = const 192_u8;               // scope 0 at src/unix/linux_like/mod.rs:1258:44: 1258:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1258:1: 1258:49
    }
}

const EOVERFLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:442:22: 442:29

    bb0: {
        _0 = const 75_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:442:32: 442:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:442:1: 442:35
    }
}

const AT_NOTELF: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1316:22: 1316:31

    bb0: {
        _0 = const 10_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1316:34: 1316:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1316:1: 1316:37
    }
}

const SYS_capget: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:204:23: 204:31

    bb0: {
        _0 = const 125_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:204:34: 204:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:204:1: 204:38
    }
}

const IPV6_FREEBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1837:26: 1837:33

    bb0: {
        _0 = const 78_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1837:36: 1837:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1837:1: 1837:39
    }
}

const TCSETS2: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:159:20: 159:27

    bb0: {
        _0 = const 1076646955_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:159:30: 159:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:159:1: 159:41
    }
}

const NF_NETDEV_INGRESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2292:30: 2292:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2292:40: 2292:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2292:1: 2292:42
    }
}

const KEY_REQKEY_DEFL_SESSION_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2742:44: 2742:47

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2742:50: 2742:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2742:1: 2742:52
    }
}

const J1939_NLA_BYTES_ACKED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3231:34: 3231:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3231:44: 3231:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3231:1: 3231:46
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::sembuf) -> linux::sembuf {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::sembuf; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LC_ADDRESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:683:23: 683:30

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:683:33: 683:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:683:1: 683:35
    }
}

const IFF_UP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:645:19: 645:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:645:29: 645:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:645:1: 645:33
    }
}

const IGNPAR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1100:19: 1100:29

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/mod.rs:1100:32: 1100:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1100:1: 1100:43
    }
}

const KEYCTL_CAPS0_RESTRICT_KEYRING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:977:50: 977:53

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:977:56: 977:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:977:9: 977:61
    }
}

const VMIN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:722:17: 722:22

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:722:25: 722:26
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:722:1: 722:27
    }
}

const _SC_DELAYTIMER_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1187:31: 1187:38

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1187:41: 1187:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1187:1: 1187:44
    }
}

const not_x32::__SIZEOF_PTHREAD_MUTEX_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:23:37: 23:42

    bb0: {
        _0 = const 40_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:23:45: 23:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:23:1: 23:48
    }
}

const PR_UNALIGN_SIGBUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1668:30: 1668:37

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1668:40: 1668:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1668:1: 1668:42
    }
}

const NFULNL_CFG_CMD_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2122:32: 2122:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2122:42: 2122:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2122:1: 2122:44
    }
}

const RTM_GETMDB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2575:23: 2575:26

    bb0: {
        _0 = const 86_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2575:29: 2575:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2575:1: 2575:32
    }
}

const FUTEX_CMD_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3071:27: 3071:34
    let mut _1: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3071:38: 3071:81

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3071:38: 3071:81
        _1 = BitOr(const FUTEX_PRIVATE_FLAG, const FUTEX_CLOCK_REALTIME); // scope 0 at src/unix/linux_like/linux/mod.rs:3071:38: 3071:81
        _0 = Not(move _1);               // scope 0 at src/unix/linux_like/linux/mod.rs:3071:37: 3071:81
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3071:80: 3071:81
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3071:1: 3071:82
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf64_Shdr) -> Elf64_Shdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf64_Shdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn CPU_ZERO(_1: &mut linux::cpu_set_t) -> () {
    debug cpuset => _1;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3277:48: 3277:50
    let mut _2: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _3: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _4: &mut [u64];              // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
    let mut _5: &mut [u64; 16];          // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
    let mut _6: core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _8: core::option::Option<&mut u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _9: &mut core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _10: &mut core::slice::IterMut<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    let mut _11: isize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
    let mut _13: &mut u64;               // in scope 0 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
    scope 1 {
        debug iter => _6;                // in scope 1 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        let mut _7: &mut u64;            // in scope 1 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        scope 2 {
            debug __next => _7;          // in scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
            let _12: &mut u64;           // in scope 2 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
            let _14: &mut u64;           // in scope 2 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
            scope 3 {
                debug val => _12;        // in scope 3 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
            }
            scope 4 {
                debug slot => _14;       // in scope 4 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
            }
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
        _5 = &mut ((*_1).0: [u64; 16]);  // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
        _4 = move _5 as &mut [u64] (Pointer(Unsize)); // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:32
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:31: 3278:32
        _3 = slice::<impl [u64]>::iter_mut(move _4) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3278:33: 3278:41
                                         // + literal: Const { ty: for<'r> fn(&'r mut [u64]) -> core::slice::IterMut<'r, u64> {core::slice::<impl [u64]>::iter_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        _2 = <core::slice::IterMut<u64> as IntoIterator>::into_iter(move _3) -> bb2; // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
                                         // + literal: Const { ty: fn(core::slice::IterMut<u64>) -> <core::slice::IterMut<u64> as core::iter::IntoIterator>::IntoIter {<core::slice::IterMut<u64> as core::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        _6 = move _2;                    // scope 0 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        goto -> bb3;                     // scope 1 at src/unix/linux_like/linux/mod.rs:3278:9: 3280:10
    }

    bb3: {
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        StorageLive(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        StorageLive(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        StorageLive(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        _10 = &mut _6;                   // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        _9 = &mut (*_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        _8 = <core::slice::IterMut<u64> as Iterator>::next(move _9) -> bb4; // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
                                         // + literal: Const { ty: for<'r> fn(&'r mut core::slice::IterMut<u64>) -> core::option::Option<<core::slice::IterMut<u64> as core::iter::Iterator>::Item> {<core::slice::IterMut<u64> as core::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        _11 = discriminant(_8);          // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        switchInt(move _11) -> [0_isize: bb5, 1_isize: bb7, otherwise: bb6]; // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    }

    bb5: {
        StorageDead(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3280:9: 3280:10
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3280:9: 3280:10
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }

    bb6: {
        unreachable;                     // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
    }

    bb7: {
        StorageLive(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        _12 = move ((_8 as Some).0: &mut u64); // scope 2 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        StorageLive(_13);                // scope 3 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        _13 = move _12;                  // scope 3 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        _7 = move _13;                   // scope 3 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        StorageDead(_13);                // scope 3 at src/unix/linux_like/linux/mod.rs:3278:16: 3278:17
        StorageDead(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:16: 3278:17
        StorageDead(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3278:42: 3278:43
        StorageLive(_14);                // scope 2 at src/unix/linux_like/linux/mod.rs:3278:13: 3278:17
        _14 = move _7;                   // scope 2 at src/unix/linux_like/linux/mod.rs:3278:21: 3278:43
        (*_14) = const 0_u64;            // scope 4 at src/unix/linux_like/linux/mod.rs:3279:13: 3279:22
        StorageDead(_14);                // scope 2 at src/unix/linux_like/linux/mod.rs:3280:9: 3280:10
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3280:9: 3280:10
        goto -> bb3;                     // scope 1 at src/unix/linux_like/linux/mod.rs:3278:9: 3280:10
    }
}

const F_SEAL_WRITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:482:25: 482:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:482:35: 482:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:482:1: 482:42
    }
}

const STATX_ALL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1015:22: 1015:30

    bb0: {
        _0 = const 4095_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1015:33: 1015:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1015:1: 1015:40
    }
}

const IPV6_DSTOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:935:25: 935:32

    bb0: {
        _0 = const 59_i32;               // scope 0 at src/unix/linux_like/mod.rs:935:35: 935:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:935:1: 935:38
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf64_Chdr) -> Elf64_Chdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::Elf64_Chdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SA_RESETHAND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:584:25: 584:32

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:584:35: 584:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:584:1: 584:46
    }
}

const UDF_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1427:36: 1427:44

    bb0: {
        _0 = const 352400198_i64;        // scope 0 at src/unix/linux_like/mod.rs:1427:47: 1427:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1427:9: 1427:58
    }
}

const TUN_TAP_DEV: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1459:24: 1459:33

    bb0: {
        _0 = const linux::IFF_TAP as i16 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1459:36: 1459:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1459:1: 1459:59
    }
}

const SYS_request_key: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:328:28: 328:36

    bb0: {
        _0 = const 249_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:328:39: 328:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:328:1: 328:43
    }
}

const ETH_P_DNA_DL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1981:25: 1981:32

    bb0: {
        _0 = const 24577_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1981:35: 1981:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1981:1: 1981:42
    }
}

const NUD_INCOMPLETE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2435:27: 2435:30

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2435:33: 2435:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2435:1: 2435:38
    }
}

const NFT_META_IIFNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2912:29: 2912:36

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2912:39: 2912:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2912:1: 2912:41
    }
}

const _SC_LEVEL4_CACHE_ASSOC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:829:35: 829:42

    bb0: {
        _0 = const 198_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:829:45: 829:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:829:1: 829:49
    }
}

const MSG_CONFIRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:774:24: 774:31

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/mod.rs:774:34: 774:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:774:1: 774:40
    }
}

const IPTOS_RELIABILITY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1254:30: 1254:32

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1254:35: 1254:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1254:1: 1254:40
    }
}

const EBADRQC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:439:20: 439:27

    bb0: {
        _0 = const 56_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:439:30: 439:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:439:1: 439:33
    }
}

const AT_BASE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1313:20: 1313:29

    bb0: {
        _0 = const 7_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1313:32: 1313:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1313:1: 1313:34
    }
}

const SYS_setfsuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:201:25: 201:33

    bb0: {
        _0 = const 122_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:201:36: 201:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:201:1: 201:40
    }
}

const IPV6_FLOWLABEL_MGR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1834:31: 1834:38

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1834:41: 1834:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1834:1: 1834:44
    }
}

const TIOCCBRK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:156:21: 156:28

    bb0: {
        _0 = const 21544_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:156:31: 156:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:156:1: 156:38
    }
}

const NFPROTO_NUMPROTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2288:29: 2288:36

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2288:39: 2288:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2288:1: 2288:42
    }
}

const KEY_REQKEY_DEFL_DEFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2739:36: 2739:39

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2739:42: 2739:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2739:1: 2739:44
    }
}

const SCM_J1939_PRIO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3227:27: 3227:34

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3227:37: 3227:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3227:1: 3227:39
    }
}

const MSG_TRYHARD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:679:24: 679:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:679:34: 679:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:679:1: 679:36
    }
}

const MADV_DONTDUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:641:26: 641:33

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:641:36: 641:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:641:1: 641:39
    }
}

const VLNEXT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1097:19: 1097:24

    bb0: {
        _0 = const 15_usize;             // scope 0 at src/unix/linux_like/mod.rs:1097:27: 1097:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1097:1: 1097:30
    }
}

const KEYCTL_CAPS0_PUBLIC_KEY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:974:44: 974:47

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:974:50: 974:54
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:974:9: 974:55
    }
}

const B4000000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:718:21: 718:30

    bb0: {
        _0 = const 4111_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:718:33: 718:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:718:1: 718:42
    }
}

const _SC_AIO_LISTIO_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1184:31: 1184:38

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1184:41: 1184:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1184:1: 1184:44
    }
}

const PR_GET_UNALIGN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1665:27: 1665:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1665:37: 1665:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1665:1: 1665:39
    }
}

const PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP: linux::pthread_mutex_t = {
    let mut _0: unix::linux_like::linux::pthread_mutex_t; // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:28:55: 28:72
    let mut _1: [u8; 40];                // in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:30:19: 33:14

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:30:19: 33:14
        _1 = [const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 1_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8]; // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:30:19: 33:14
        (_0.0: [u8; 40]) = move _1;      // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const NFULA_CT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2118:21: 2118:28

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2118:31: 2118:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2118:1: 2118:34
    }
}

const RTM_GETNETCONF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2572:27: 2572:30

    bb0: {
        _0 = const 82_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2572:33: 2572:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2572:1: 2572:36
    }
}

const FUTEX_CMP_REQUEUE_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3067:33: 3067:40

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3067:43: 3067:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3067:1: 3067:46
    }
}

fn NLA_ALIGN(_1: i32) -> i32 {
    debug len => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3248:39: 3248:46
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3249:16: 3249:41
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:36
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:22
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3249:44: 3249:62

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:16: 3249:41
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:36
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:22
        _4 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:22
        _3 = Add(move _4, const NLA_ALIGNTO); // scope 0 at src/unix/linux_like/linux/mod.rs:3249:17: 3249:36
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:35: 3249:36
        _2 = Sub(move _3, const 1_i32);  // scope 0 at src/unix/linux_like/linux/mod.rs:3249:16: 3249:41
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:40: 3249:41
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:44: 3249:62
        _5 = const -4_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3249:44: 3249:62
        _0 = BitAnd(move _2, move _5);   // scope 0 at src/unix/linux_like/linux/mod.rs:3249:16: 3249:62
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:61: 3249:62
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3249:61: 3249:62
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const F_SEAL_SEAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:479:24: 479:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:479:34: 479:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:479:1: 479:41
    }
}

const STATX_BASIC_STATS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1012:30: 1012:38

    bb0: {
        _0 = const 2047_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1012:41: 1012:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1012:1: 1012:48
    }
}

const IPV6_RECVRTHDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:932:27: 932:34

    bb0: {
        _0 = const 56_i32;               // scope 0 at src/unix/linux_like/mod.rs:932:37: 932:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:932:1: 932:40
    }
}

const EPROTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:580:19: 580:26

    bb0: {
        _0 = const 71_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:580:29: 580:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:580:1: 580:32
    }
}

const SYSFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1424:32: 1424:40

    bb0: {
        _0 = const 1650812274_i64;       // scope 0 at src/unix/linux_like/mod.rs:1424:43: 1424:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1424:9: 1424:54
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &user_regs_struct) -> user_regs_struct {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFF_NO_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1454:22: 1454:29

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1454:32: 1454:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1454:1: 1454:39
    }
}

const SYS_kexec_load: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:325:27: 325:35

    bb0: {
        _0 = const 246_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:325:38: 325:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:325:1: 325:42
    }
}

const ETH_P_IEEEPUPAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1978:28: 1978:35

    bb0: {
        _0 = const 2561_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1978:38: 1978:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1978:1: 1978:45
    }
}

const RT_CLASS_LOCAL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2430:27: 2430:29

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/linux/mod.rs:2430:32: 2430:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2430:1: 2430:36
    }
}

const NFT_META_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2909:26: 2909:33

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2909:36: 2909:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2909:1: 2909:38
    }
}

uinput_user_dev::absfuzz::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:645:32: 645:39

    bb0: {
        _0 = const ABS_CNT;              // scope 0 at src/unix/linux_like/linux/mod.rs:645:32: 645:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:645:32: 645:39
    }
}

const _SC_LEVEL3_CACHE_ASSOC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:826:35: 826:42

    bb0: {
        _0 = const 195_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:826:45: 826:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:826:1: 826:49
    }
}

const MSG_WAITALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:771:24: 771:31

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:771:34: 771:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:771:1: 771:40
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::mallinfo) -> gnu::mallinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::mallinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const POLLRDHUP: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1248:22: 1248:31

    bb0: {
        _0 = const 8192_i16;             // scope 0 at src/unix/linux_like/mod.rs:1248:34: 1248:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1248:1: 1248:41
    }
}

const EBADR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:436:18: 436:25

    bb0: {
        _0 = const 53_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:436:28: 436:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:436:1: 436:31
    }
}

const AT_PHENT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1310:21: 1310:30

    bb0: {
        _0 = const 4_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1310:33: 1310:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1310:1: 1310:35
    }
}

const SYS_setresgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:198:26: 198:34

    bb0: {
        _0 = const 119_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:198:37: 198:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:198:1: 198:41
    }
}

const SO_ORIGINAL_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1829:28: 1829:35

    bb0: {
        _0 = const 80_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1829:38: 1829:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1829:1: 1829:41
    }
}

const TIOCGETD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:153:21: 153:28

    bb0: {
        _0 = const 21540_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:153:31: 153:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:153:1: 153:38
    }
}

const NFPROTO_BRIDGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2285:27: 2285:34

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2285:37: 2285:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2285:1: 2285:39
    }
}

const KEY_SPEC_REQKEY_AUTH_KEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2735:37: 2735:40

    bb0: {
        _0 = const -7_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2735:43: 2735:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2735:1: 2735:46
    }
}

const SO_J1939_ERRQUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3223:30: 3223:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3223:40: 3223:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3223:1: 3223:42
    }
}

const SOL_CAIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:675:21: 675:28

    bb0: {
        _0 = const 278_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:675:31: 675:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:675:1: 675:35
    }
}

const MADV_UNMERGEABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:638:29: 638:36

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/mod.rs:638:39: 638:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:638:1: 638:42
    }
}

const VKILL: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1094:18: 1094:23

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/mod.rs:1094:26: 1094:27
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1094:1: 1094:28
    }
}

const KEYCTL_CAPS0_CAPABILITIES: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:971:46: 971:49

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:971:52: 971:56
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:971:9: 971:57
    }
}

const B2500000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:715:21: 715:30

    bb0: {
        _0 = const 4108_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:715:33: 715:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:715:1: 715:42
    }
}

const _SC_MESSAGE_PASSING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1181:32: 1181:39

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1181:42: 1181:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1181:1: 1181:45
    }
}

const PR_GET_PDEATHSIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1660:29: 1660:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1660:39: 1660:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1660:1: 1660:41
    }
}

const NFULA_HWTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2115:25: 2115:32

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2115:35: 2115:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2115:1: 2115:38
    }
}

const RTM_GETDCB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2569:23: 2569:26

    bb0: {
        _0 = const 78_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2569:29: 2569:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2569:1: 2569:32
    }
}

const FUTEX_WAIT_BITSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3064:30: 3064:37

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3064:40: 3064:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3064:1: 3064:42
    }
}

const NFT_MSG_GETOBJ_RESET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2855:41: 2855:48

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2855:51: 2855:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2855:9: 2855:54
    }
}

const F_GETPIPE_SZ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:475:25: 475:32

    bb0: {
        _0 = const 1032_i32;             // scope 0 at src/unix/linux_like/mod.rs:475:35: 475:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:475:1: 475:40
    }
}

const STATX_INO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1009:22: 1009:30

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1009:33: 1009:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1009:1: 1009:40
    }
}

const IPV6_RECVHOPOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:929:29: 929:36

    bb0: {
        _0 = const 53_i32;               // scope 0 at src/unix/linux_like/mod.rs:929:39: 929:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:929:1: 929:42
    }
}

const EADV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:577:17: 577:24

    bb0: {
        _0 = const 68_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:577:27: 577:29
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:577:1: 577:30
    }
}

const SELINUX_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1421:34: 1421:42

    bb0: {
        _0 = const 4185718668_i64;       // scope 0 at src/unix/linux_like/mod.rs:1421:45: 1421:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1421:9: 1421:56
    }
}

_libc_fpstate::__private::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:175:26: 175:28

    bb0: {
        _0 = const 12_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:175:26: 175:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:175:26: 175:28
    }
}

const IFLA_INFO_SLAVE_DATA: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1449:33: 1449:43

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1449:46: 1449:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1449:1: 1449:48
    }
}

const SYS_mq_timedreceive: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:322:32: 322:40

    bb0: {
        _0 = const 243_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:322:43: 322:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:322:1: 322:47
    }
}

const ETH_P_ARP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1975:22: 1975:29

    bb0: {
        _0 = const 2054_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1975:32: 1975:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1975:1: 1975:39
    }
}

const RT_CLASS_UNSPEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2427:28: 2427:30

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2427:33: 2427:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2427:1: 2427:35
    }
}

const NFT_META_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2906:25: 2906:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2906:35: 2906:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2906:1: 2906:37
    }
}

const _SC_LEVEL2_CACHE_ASSOC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:823:35: 823:42

    bb0: {
        _0 = const 192_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:823:45: 823:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:823:1: 823:49
    }
}

const MSG_TRUNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:768:22: 768:29

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:768:32: 768:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:768:1: 768:37
    }
}

const POLLNVAL: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1244:21: 1244:30

    bb0: {
        _0 = const 32_i16;               // scope 0 at src/unix/linux_like/mod.rs:1244:33: 1244:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1244:1: 1244:38
    }
}

const ENOCSI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:433:19: 433:26

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:433:29: 433:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:433:1: 433:32
    }
}

const AT_IGNORE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1307:22: 1307:31

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1307:34: 1307:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1307:1: 1307:36
    }
}

const SYS_setgroups: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:195:26: 195:34

    bb0: {
        _0 = const 116_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:195:37: 195:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:195:1: 195:41
    }
}

const FALLOC_FL_INSERT_RANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1820:35: 1820:42

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1820:45: 1820:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1820:1: 1820:50
    }
}

const FIONBIO: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:150:20: 150:27

    bb0: {
        _0 = const 21537_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:150:30: 150:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:150:1: 150:37
    }
}

const NFPROTO_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2282:27: 2282:34

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2282:37: 2282:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2282:1: 2282:39
    }
}

const KEY_SPEC_USER_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2732:34: 2732:37

    bb0: {
        _0 = const -4_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2732:40: 2732:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2732:1: 2732:43
    }
}

const SO_J1939_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3220:28: 3220:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3220:38: 3220:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3220:1: 3220:40
    }
}

const SOL_PNPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:672:23: 672:30

    bb0: {
        _0 = const 275_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:672:33: 672:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:672:1: 672:37
    }
}

const MADV_DONTFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:635:26: 635:33

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/mod.rs:635:36: 635:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:635:1: 635:39
    }
}

const BS0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1091:16: 1091:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1091:29: 1091:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1091:1: 1091:40
    }
}

const XFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:841:36: 841:44

    bb0: {
        _0 = const 1481003842_i64;       // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:841:47: 841:57
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:841:9: 841:58
    }
}

const B1152000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:712:21: 712:30

    bb0: {
        _0 = const 4105_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:712:33: 712:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:712:1: 712:42
    }
}

const _SC_MEMLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1178:24: 1178:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1178:34: 1178:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1178:1: 1178:37
    }
}

const MREMAP_FIXED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1656:25: 1656:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1656:35: 1656:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1656:1: 1656:37
    }
}

const NFULA_SEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2112:22: 2112:29

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2112:32: 2112:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2112:1: 2112:35
    }
}

const RTM_NEWADDRLABEL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2566:29: 2566:32

    bb0: {
        _0 = const 72_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2566:35: 2566:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2566:1: 2566:38
    }
}

const FUTEX_LOCK_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3061:26: 3061:33

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3061:36: 3061:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3061:1: 3061:38
    }
}

const NFT_MSG_NEWOBJ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2852:35: 2852:42

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2852:45: 2852:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2852:9: 2852:48
    }
}

const F_CANCELLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:472:23: 472:30

    bb0: {
        _0 = const 1029_i32;             // scope 0 at src/unix/linux_like/mod.rs:472:33: 472:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:472:1: 472:38
    }
}

const STATX_ATIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1006:24: 1006:32

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1006:35: 1006:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1006:1: 1006:42
    }
}

const IPV6_PKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:926:25: 926:32

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/mod.rs:926:35: 926:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:926:1: 926:38
    }
}

const ENOPKG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:574:19: 574:26

    bb0: {
        _0 = const 65_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:574:29: 574:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:574:1: 574:32
    }
}

const RDTGROUP_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1418:41: 1418:49

    bb0: {
        _0 = const 124082209_i64;        // scope 0 at src/unix/linux_like/mod.rs:1418:52: 1418:61
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1418:9: 1418:62
    }
}

const IFLA_INFO_DATA: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1446:27: 1446:37

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1446:40: 1446:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1446:1: 1446:42
    }
}

const SYS_mq_open: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:319:24: 319:32

    bb0: {
        _0 = const 240_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:319:35: 319:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:319:1: 319:39
    }
}

const ETH_P_PUPAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1972:24: 1972:31

    bb0: {
        _0 = const 513_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1972:34: 1972:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1972:1: 1972:41
    }
}

const RTF_BROADCAST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2423:26: 2423:29

    bb0: {
        _0 = const 268435456_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:2423:32: 2423:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2423:1: 2423:43
    }
}

const NFT_PAYLOAD_TRANSPORT_HEADER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2901:41: 2901:48

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2901:51: 2901:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2901:1: 2901:53
    }
}

const _SC_LEVEL1_DCACHE_ASSOC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:820:36: 820:43

    bb0: {
        _0 = const 189_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:820:46: 820:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:820:1: 820:50
    }
}

const MSG_PEEK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:765:21: 765:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:765:31: 765:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:765:1: 765:33
    }
}

const POLLOUT: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1241:20: 1241:29

    bb0: {
        _0 = const 4_i16;                // scope 0 at src/unix/linux_like/mod.rs:1241:32: 1241:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1241:1: 1241:36
    }
}

const EL3RST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:430:19: 430:26

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:430:29: 430:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:430:1: 430:32
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &arpreq_old) -> arpreq_old {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::arpreq_old; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RLIM_SAVED_MAX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1303:27: 1303:35

    bb0: {
        _0 = const generic::RLIM_INFINITY; // scope 0 at src/unix/linux_like/linux/mod.rs:1303:38: 1303:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1303:1: 1303:52
    }
}

const SYS_setreuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:192:25: 192:33

    bb0: {
        _0 = const 113_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:192:36: 192:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:192:1: 192:40
    }
}

const FALLOC_FL_PUNCH_HOLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1817:33: 1817:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1817:43: 1817:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1817:1: 1817:48
    }
}

const TIOCGSERIAL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:147:24: 147:31

    bb0: {
        _0 = const 21534_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:147:34: 147:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:147:1: 147:41
    }
}

const NF_INET_LOCAL_OUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2277:30: 2277:37

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2277:40: 2277:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2277:1: 2277:42
    }
}

const KEY_SPEC_THREAD_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2729:36: 2729:39

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2729:42: 2729:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2729:1: 2729:45
    }
}

const J1939_PGN_PDU1_MAX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3216:31: 3216:39

    bb0: {
        _0 = const 261888_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:3216:42: 3216:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3216:1: 3216:50
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &msginfo) -> msginfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::msginfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PIDFD_NONBLOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:668:27: 668:35

    bb0: {
        _0 = const b64::x86_64::O_NONBLOCK as u32 (Misc); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:668:38: 668:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:668:1: 668:61
    }
}

const MADV_DONTNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:632:26: 632:33

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:632:36: 632:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:632:1: 632:38
    }
}

const TAB0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1088:17: 1088:27

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1088:30: 1088:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1088:1: 1088:41
    }
}

const B576000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:709:20: 709:29

    bb0: {
        _0 = const 4102_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:709:32: 709:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:709:1: 709:41
    }
}

const _SC_SYNCHRONIZED_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1175:32: 1175:39

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1175:42: 1175:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1175:1: 1175:45
    }
}

const SYNC_FILE_RANGE_WRITE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1630:34: 1630:42

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1630:45: 1630:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1630:1: 1630:47
    }
}

const NFULA_PAYLOAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2109:26: 2109:33

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2109:36: 2109:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2109:1: 2109:38
    }
}

const RTM_GETNEIGHTBL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2563:28: 2563:31

    bb0: {
        _0 = const 66_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2563:34: 2563:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2563:1: 2563:37
    }
}

const FUTEX_REQUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3058:26: 3058:33

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3058:36: 3058:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3058:1: 3058:38
    }
}

const UDP_GRO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1651:28: 1651:35

    bb0: {
        _0 = const 104_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1651:38: 1651:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1651:9: 1651:42
    }
}

const F_SETLEASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:469:23: 469:30

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:469:33: 469:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:469:1: 469:38
    }
}

const STATX_NLINK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1003:24: 1003:32

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1003:35: 1003:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1003:1: 1003:42
    }
}

const IPV6_XFRM_POLICY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:923:29: 923:36

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/mod.rs:923:39: 923:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:923:1: 923:42
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::regex_t) -> gnu::regex_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::regex_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ETIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:571:18: 571:25

    bb0: {
        _0 = const 62_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:571:28: 571:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:571:1: 571:31
    }
}

const PROC_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1415:37: 1415:45

    bb0: {
        _0 = const 40864_i64;            // scope 0 at src/unix/linux_like/mod.rs:1415:48: 1415:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1415:9: 1415:59
    }
}

const IFLA_PROTO_DOWN_REASON: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1442:35: 1442:45

    bb0: {
        _0 = const 55_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1442:48: 1442:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1442:1: 1442:51
    }
}

const SYS_mbind: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:316:22: 316:30

    bb0: {
        _0 = const 237_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:316:33: 316:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:316:1: 316:37
    }
}

const ETH_FCS_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1967:24: 1967:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1967:34: 1967:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1967:1: 1967:36
    }
}

const RTF_LOCAL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2420:22: 2420:25

    bb0: {
        _0 = const 2147483648_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2420:28: 2420:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2420:1: 2420:39
    }
}

const NFT_DYNSET_F_INV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2897:29: 2897:36
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2897:39: 2897:45

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2897:39: 2897:45
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2897:39: 2897:45
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2897:39: 2897:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2897:1: 2897:46
    }
}

const _SC_LEVEL1_ICACHE_ASSOC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:817:36: 817:43

    bb0: {
        _0 = const 186_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:817:46: 817:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:817:1: 817:50
    }
}

const PF_ALG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:760:19: 760:26

    bb0: {
        _0 = const AF_ALG;               // scope 0 at src/unix/linux_like/mod.rs:760:29: 760:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:760:1: 760:36
    }
}

const UTIME_NOW: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1237:22: 1237:28

    bb0: {
        _0 = const 1073741823_i64;       // scope 0 at src/unix/linux_like/mod.rs:1237:31: 1237:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1237:1: 1237:42
    }
}

const ECHRNG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:427:19: 427:26

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:427:29: 427:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:427:1: 427:32
    }
}

arpreq::arp_dev::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:189:33: 189:35

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/mod.rs:189:33: 189:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:189:33: 189:35
    }
}

const _SC_XOPEN_STREAMS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1299:30: 1299:37

    bb0: {
        _0 = const 246_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1299:40: 1299:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1299:1: 1299:44
    }
}

const SYS_getppid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:189:24: 189:32

    bb0: {
        _0 = const 110_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:189:35: 189:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:189:1: 189:39
    }
}

const TFD_TIMER_ABSTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1812:30: 1812:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1812:40: 1812:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1812:1: 1812:42
    }
}

const TIOCINQ: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:144:20: 144:27

    bb0: {
        _0 = const FIONREAD;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:144:30: 144:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:144:1: 144:39
    }
}

const NF_INET_PRE_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2274:32: 2274:39

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2274:42: 2274:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2274:1: 2274:44
    }
}

const IN_IGNORED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2723:23: 2723:26

    bb0: {
        _0 = const 32768_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2723:29: 2723:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2723:1: 2723:41
    }
}

const J1939_PGN_REQUEST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3213:30: 3213:38

    bb0: {
        _0 = const 59904_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:3213:41: 3213:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3213:1: 3213:49
    }
}

const RTLD_DI_TLS_MODID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:664:30: 664:37

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:664:40: 664:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:664:1: 664:42
    }
}

const MADV_RANDOM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:629:24: 629:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:629:34: 629:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:629:1: 629:36
    }
}

const TCIOFLUSH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1085:22: 1085:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1085:32: 1085:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1085:1: 1085:34
    }
}

const B230400: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:706:20: 706:29

    bb0: {
        _0 = const 4099_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:706:32: 706:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:706:1: 706:41
    }
}

const _SC_TIMERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1172:23: 1172:30

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1172:33: 1172:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1172:1: 1172:36
    }
}

fn b64::x86_64::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &ucontext_t) -> ucontext_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::ucontext_t; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NI_NAMEREQD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1626:24: 1626:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1626:34: 1626:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1626:1: 1626:36
    }
}

const NFULA_IFINDEX_PHYSINDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2106:36: 2106:43

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2106:46: 2106:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2106:1: 2106:48
    }
}

const RTM_GETMULTICAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2560:29: 2560:32

    bb0: {
        _0 = const 58_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2560:35: 2560:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2560:1: 2560:38
    }
}

const FUTEX_WAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3055:23: 3055:30

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3055:33: 3055:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3055:1: 3055:35
    }
}

const PACKET_MR_UNICAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1648:38: 1648:45

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1648:48: 1648:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1648:9: 1648:50
    }
}

const F_SETFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:464:20: 464:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:464:30: 464:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:464:1: 464:32
    }
}

const AT_STATX_DONT_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1000:31: 1000:38

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1000:41: 1000:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1000:1: 1000:48
    }
}

const IPV6_JOIN_ANYCAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:920:30: 920:37

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/mod.rs:920:40: 920:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:920:1: 920:43
    }
}

const EBFONT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:568:19: 568:26

    bb0: {
        _0 = const 59_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:568:29: 568:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:568:1: 568:32
    }
}

const OCFS2_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1412:38: 1412:46

    bb0: {
        _0 = const 1952539503_i64;       // scope 0 at src/unix/linux_like/mod.rs:1412:49: 1412:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1412:9: 1412:60
    }
}

const IFLA_PROP_LIST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1439:27: 1439:37

    bb0: {
        _0 = const 52_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1439:40: 1439:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1439:1: 1439:43
    }
}

const SYS_tgkill: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:313:23: 313:31

    bb0: {
        _0 = const 234_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:313:34: 313:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:313:1: 313:38
    }
}

const ETH_ZLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1964:21: 1964:28

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1964:31: 1964:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1964:1: 1964:34
    }
}

const RTCF_DOREDIRECT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2416:28: 2416:31

    bb0: {
        _0 = const 16777216_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2416:34: 2416:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2416:1: 2416:45
    }
}

const NFT_LOOKUP_F_INV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2892:29: 2892:36
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2892:39: 2892:45

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2892:39: 2892:45
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2892:39: 2892:45
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2892:39: 2892:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2892:1: 2892:46
    }
}

const _SC_USER_GROUPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:814:28: 814:35

    bb0: {
        _0 = const 166_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:814:38: 814:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:814:1: 814:42
    }
}

const PF_PHONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:757:22: 757:29

    bb0: {
        _0 = const AF_PHONET;            // scope 0 at src/unix/linux_like/mod.rs:757:32: 757:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:757:1: 757:42
    }
}

const P_PID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1228:18: 1228:26

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:1228:29: 1228:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1228:1: 1228:31
    }
}

const ELOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:424:18: 424:25

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:424:28: 424:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:424:1: 424:31
    }
}

const _SC_TRACE_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1296:31: 1296:38

    bb0: {
        _0 = const 243_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1296:41: 1296:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1296:1: 1296:45
    }
}

const SYS_geteuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:186:24: 186:32

    bb0: {
        _0 = const 107_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:186:35: 186:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:186:1: 186:39
    }
}

const ITIMER_PROF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1808:24: 1808:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1808:34: 1808:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1808:1: 1808:36
    }
}

const TIOCGSOFTCAR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:141:25: 141:32

    bb0: {
        _0 = const 21529_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:141:35: 141:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:141:1: 141:42
    }
}

const NF_VERDICT_QMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2269:29: 2269:36

    bb0: {
        _0 = const -65536_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:2269:39: 2269:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2269:1: 2269:50
    }
}

const IN_MOVE_SELF: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2720:25: 2720:28

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2720:31: 2720:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2720:1: 2720:43
    }
}

const J1939_IDLE_ADDR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3210:28: 3210:37

    bb0: {
        _0 = const 254_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:3210:40: 3210:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3210:1: 3210:45
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &if_nameindex) -> if_nameindex {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::if_nameindex; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTLD_DI_ORIGIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:661:27: 661:34

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:661:37: 661:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:661:1: 661:39
    }
}

const PROT_GROWSUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:624:25: 624:32

    bb0: {
        _0 = const 33554432_i32;         // scope 0 at src/unix/linux_like/mod.rs:624:35: 624:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:624:1: 624:45
    }
}

const TCOON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1082:18: 1082:25

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1082:28: 1082:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1082:1: 1082:30
    }
}

utmpx::ut_host::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:463:33: 463:46

    bb0: {
        _0 = const __UT_HOSTSIZE;        // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:463:33: 463:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:463:33: 463:46
    }
}

const EXTB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:703:17: 703:26

    bb0: {
        _0 = const B38400;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:703:29: 703:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:703:1: 703:36
    }
}

const _SC_SAVED_IDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1169:26: 1169:33

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1169:36: 1169:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1169:1: 1169:38
    }
}

user_fpregs_struct::padding::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:282:29: 282:31

    bb0: {
        _0 = const 24_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:282:29: 282:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:282:29: 282:31
    }
}

const NI_NUMERICHOST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1623:27: 1623:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1623:37: 1623:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1623:1: 1623:39
    }
}

fn not_x32::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &not_x32::statvfs) -> not_x32::statvfs {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const NFULA_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2103:28: 2103:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2103:38: 2103:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2103:1: 2103:40
    }
}

const RTM_DELACTION: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2557:26: 2557:29

    bb0: {
        _0 = const 49_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2557:32: 2557:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2557:1: 2557:35
    }
}

const FAN_ALLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3050:22: 3050:25

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3050:28: 3050:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3050:1: 3050:33
    }
}

const SHM_EXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1645:29: 1645:36

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1645:39: 1645:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1645:9: 1645:48
    }
}

const _IOLBF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:460:19: 460:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:460:29: 460:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:460:1: 460:31
    }
}

const AT_STATX_SYNC_TYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:997:31: 997:38

    bb0: {
        _0 = const 24576_i32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:997:41: 997:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:997:1: 997:48
    }
}

const IPV6_MTU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:917:21: 917:28

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/mod.rs:917:31: 917:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:917:1: 917:34
    }
}

const b64::x86_64::NCCS: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:562:17: 562:22

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:562:25: 562:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:562:1: 562:28
    }
}

const NCP_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1409:36: 1409:44

    bb0: {
        _0 = const 22092_i64;            // scope 0 at src/unix/linux_like/mod.rs:1409:47: 1409:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1409:9: 1409:58
    }
}

const IFLA_NEW_IFINDEX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1436:29: 1436:39

    bb0: {
        _0 = const 49_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1436:42: 1436:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1436:1: 1436:45
    }
}

const SYS_exit_group: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:310:27: 310:35

    bb0: {
        _0 = const 231_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:310:38: 310:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:310:1: 310:42
    }
}

const PT_HIPROC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1959:22: 1959:25

    bb0: {
        _0 = const 2147483647_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1959:28: 1959:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1959:1: 1959:39
    }
}

const RTCF_VALVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2413:23: 2413:26

    bb0: {
        _0 = const 2097152_u32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2413:29: 2413:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2413:1: 2413:40
    }
}

const NFT_CMP_GTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2887:24: 2887:31

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2887:34: 2887:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2887:1: 2887:36
    }
}

uinput_setup::name::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:635:30: 635:50

    bb0: {
        _0 = const UINPUT_MAX_NAME_SIZE; // scope 0 at src/unix/linux_like/linux/mod.rs:635:30: 635:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:635:30: 635:50
    }
}

const _SC_SIGNALS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:811:24: 811:31

    bb0: {
        _0 = const 158_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:811:34: 811:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:811:1: 811:38
    }
}

const PF_IUCV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:754:20: 754:27

    bb0: {
        _0 = const AF_IUCV;              // scope 0 at src/unix/linux_like/mod.rs:754:30: 754:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:754:1: 754:38
    }
}

const SIGEV_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1224:23: 1224:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1224:33: 1224:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1224:1: 1224:35
    }
}

const ENOLCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:421:19: 421:26

    bb0: {
        _0 = const 37_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:421:29: 421:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:421:1: 421:32
    }
}

const _SC_V7_LPBIG_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1293:32: 1293:39

    bb0: {
        _0 = const 240_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1293:42: 1293:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1293:1: 1293:46
    }
}

const SYS_getgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:183:23: 183:31

    bb0: {
        _0 = const 104_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:183:34: 183:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:183:1: 183:38
    }
}

const SECCOMP_RET_DATA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1804:29: 1804:37

    bb0: {
        _0 = const 65535_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1804:40: 1804:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1804:1: 1804:51
    }
}

const TIOCMBIS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:138:21: 138:28

    bb0: {
        _0 = const 21526_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:138:31: 138:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:138:1: 138:38
    }
}

const NF_MAX_VERDICT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2264:27: 2264:34

    bb0: {
        _0 = const NF_STOP;              // scope 0 at src/unix/linux_like/linux/mod.rs:2264:37: 2264:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2264:1: 2264:45
    }
}

const IN_CREATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2717:22: 2717:25

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2717:28: 2717:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2717:1: 2717:40
    }
}

const CAN_RAW_JOIN_FILTERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3204:33: 3204:40

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3204:43: 3204:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3204:1: 3204:45
    }
}

linux::cpu_set_t::bits::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:160:21: 160:23

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:160:21: 160:23
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:160:21: 160:23
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::sock_extended_err) -> linux::sock_extended_err {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::sock_extended_err; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const RTLD_DI_CONFIGADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:658:31: 658:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:658:41: 658:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:658:1: 658:43
    }
}

const SCM_RIGHTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:620:23: 620:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:620:33: 620:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:620:1: 620:38
    }
}

const TCIOFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1079:19: 1079:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1079:29: 1079:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1079:1: 1079:31
    }
}

const B19200: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:700:19: 700:28

    bb0: {
        _0 = const 14_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:700:31: 700:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:700:1: 700:40
    }
}

const _SC_STREAM_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1166:27: 1166:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1166:37: 1166:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1166:1: 1166:39
    }
}

const EAI_MEMORY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1619:23: 1619:30

    bb0: {
        _0 = const -10_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1619:33: 1619:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1619:1: 1619:37
    }
}

const NFULA_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2100:25: 2100:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2100:35: 2100:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2100:1: 2100:37
    }
}

const RTM_DELTFILTER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2554:27: 2554:30

    bb0: {
        _0 = const 45_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2554:33: 2554:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2554:1: 2554:36
    }
}

const FAN_MARK_IGNORED_SURV_MODIFY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3045:41: 3045:49

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3045:52: 3045:63
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3045:1: 3045:64
    }
}

const LIO_NOWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1642:31: 1642:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1642:41: 1642:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1642:9: 1642:43
    }
}

const SEEK_END: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:457:21: 457:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:457:31: 457:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:457:1: 457:33
    }
}

const M_PERTURB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:993:22: 993:29

    bb0: {
        _0 = const -6_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:993:32: 993:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:993:1: 993:35
    }
}

const IPV6_DROP_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:914:33: 914:40

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/mod.rs:914:43: 914:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:914:1: 914:46
    }
}

const ARPHRD_IEEE802154: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1369:30: 1369:33

    bb0: {
        _0 = const 804_u16;              // scope 0 at src/unix/linux_like/mod.rs:1369:36: 1369:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1369:1: 1369:40
    }
}

const TCSADRAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:557:22: 557:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:557:32: 557:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:557:1: 557:34
    }
}

const MINIX_SUPER_MAGIC2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1406:39: 1406:47

    bb0: {
        _0 = const 5007_i64;             // scope 0 at src/unix/linux_like/mod.rs:1406:50: 1406:60
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1406:9: 1406:61
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &_libc_fpstate) -> _libc_fpstate {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFLA_TARGET_NETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1433:32: 1433:42

    bb0: {
        _0 = const IFLA_IF_NETNSID;      // scope 0 at src/unix/linux_like/linux/mod.rs:1433:45: 1433:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1433:1: 1433:61
    }
}

const SYS_clock_gettime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:307:30: 307:38

    bb0: {
        _0 = const 228_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:307:41: 307:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:307:1: 307:45
    }
}

const PT_GNU_RELRO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1956:25: 1956:28

    bb0: {
        _0 = const 1685382482_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1956:31: 1956:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1956:1: 1956:42
    }
}

const RTF_CACHE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2409:22: 2409:25

    bb0: {
        _0 = const 16777216_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2409:28: 2409:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2409:1: 2409:39
    }
}

const NFT_CMP_LT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2884:23: 2884:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2884:33: 2884:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2884:1: 2884:35
    }
}

const _SC_SINGLE_PROCESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:808:31: 808:38

    bb0: {
        _0 = const 151_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:808:41: 808:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:808:1: 808:45
    }
}

const PF_CAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:751:19: 751:26

    bb0: {
        _0 = const AF_CAN;               // scope 0 at src/unix/linux_like/mod.rs:751:29: 751:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:751:1: 751:36
    }
}

const CLD_STOPPED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1220:24: 1220:31

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:1220:34: 1220:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1220:1: 1220:36
    }
}

const MAP_GROWSDOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:417:26: 417:33

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:417:36: 417:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:417:1: 417:43
    }
}

const _SC_V7_ILP32_OFF32: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1290:31: 1290:38

    bb0: {
        _0 = const 237_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1290:41: 1290:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1290:1: 1290:45
    }
}

const SYS_ptrace: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:180:23: 180:31

    bb0: {
        _0 = const 101_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:180:34: 180:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:180:1: 180:38
    }
}

const SECCOMP_RET_ALLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1800:30: 1800:38

    bb0: {
        _0 = const 2147418112_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1800:41: 1800:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1800:1: 1800:52
    }
}

const TIOCGWINSZ: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:135:23: 135:30

    bb0: {
        _0 = const 21523_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:135:33: 135:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:135:1: 135:40
    }
}

const NF_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2261:21: 2261:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2261:31: 2261:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2261:1: 2261:33
    }
}

const IN_MOVED_FROM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2714:26: 2714:29

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2714:32: 2714:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2714:1: 2714:44
    }
}

const CAN_RAW_LOOPBACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3201:29: 3201:36

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3201:39: 3201:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3201:1: 3201:41
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::cpu_set_t) -> linux::cpu_set_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::cpu_set_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LM_ID_NEWLM: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:654:24: 654:32

    bb0: {
        _0 = const -1_i64;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:654:35: 654:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:654:1: 654:38
    }
}

const MS_ACTIVE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:616:22: 616:31

    bb0: {
        _0 = const 1073741824_u64;       // scope 0 at src/unix/linux_like/mod.rs:616:34: 616:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:616:1: 616:45
    }
}

const Q_QUOTAOFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1075:23: 1075:30

    bb0: {
        _0 = const 8388611_i32;          // scope 0 at src/unix/linux_like/mod.rs:1075:33: 1075:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1075:1: 1075:42
    }
}

utmpx::ut_line::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:459:33: 459:46

    bb0: {
        _0 = const __UT_LINESIZE;        // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:459:33: 459:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:459:33: 459:46
    }
}

const B2400: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:697:18: 697:27

    bb0: {
        _0 = const 11_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:697:30: 697:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:697:1: 697:39
    }
}

const _SC_CLK_TCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1163:24: 1163:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1163:34: 1163:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1163:1: 1163:36
    }
}

const EAI_FAMILY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1616:23: 1616:30

    bb0: {
        _0 = const -6_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1616:33: 1616:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1616:1: 1616:36
    }
}

const SYS_mount_setattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:431:30: 431:38

    bb0: {
        _0 = const 442_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:431:41: 431:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:431:1: 431:45
    }
}

const NFNL_MSG_BATCH_END: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2094:31: 2094:38
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2094:41: 2094:59

    bb0: {
        _1 = CheckedAdd(const linux::NLMSG_MIN_TYPE, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2094:41: 2094:59
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const linux::NLMSG_MIN_TYPE, const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2094:41: 2094:59
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2094:41: 2094:59
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2094:1: 2094:60
    }
}

const RTM_DELTCLASS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2551:26: 2551:29

    bb0: {
        _0 = const 41_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2551:32: 2551:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2551:1: 2551:35
    }
}

const FAN_MARK_DONT_FOLLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3042:33: 3042:41

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3042:44: 3042:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3042:1: 3042:56
    }
}

const LIO_WRITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1639:30: 1639:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1639:40: 1639:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1639:9: 1639:42
    }
}

const EOF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:454:16: 454:23

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/mod.rs:454:26: 454:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:454:1: 454:29
    }
}

const M_MMAP_THRESHOLD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:990:29: 990:36

    bb0: {
        _0 = const -3_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:990:39: 990:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:990:1: 990:42
    }
}

const IPV6_MULTICAST_HOPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:911:32: 911:39

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/mod.rs:911:42: 911:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:911:1: 911:45
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ntptimeval) -> ntptimeval {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::ntptimeval; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const ARPHRD_IEEE80211: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1366:29: 1366:32

    bb0: {
        _0 = const 801_u16;              // scope 0 at src/unix/linux_like/mod.rs:1366:35: 1366:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1366:1: 1366:39
    }
}

const F_UNLCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:552:20: 552:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:552:30: 552:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:552:1: 552:32
    }
}

const MINIX2_SUPER_MAGIC2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1403:40: 1403:48

    bb0: {
        _0 = const 9336_i64;             // scope 0 at src/unix/linux_like/mod.rs:1403:51: 1403:61
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1403:9: 1403:62
    }
}

_libc_xmmreg::element::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:161:28: 161:29

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:161:28: 161:29
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:161:28: 161:29
    }
}

const IFLA_EVENT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1430:23: 1430:33

    bb0: {
        _0 = const 44_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1430:36: 1430:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1430:1: 1430:39
    }
}

const SYS_timer_getoverrun: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:304:33: 304:41

    bb0: {
        _0 = const 225_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:304:44: 304:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:304:1: 304:48
    }
}

const PT_LOOS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1953:20: 1953:23

    bb0: {
        _0 = const 1610612736_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1953:26: 1953:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1953:1: 1953:37
    }
}

const RTF_ADDRCONF: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2406:25: 2406:28

    bb0: {
        _0 = const 262144_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:2406:31: 2406:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2406:1: 2406:42
    }
}

const NFT_BYTEORDER_HTON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2880:31: 2880:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2880:41: 2880:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2880:1: 2880:43
    }
}

const _SC_FILE_LOCKING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:805:29: 805:36

    bb0: {
        _0 = const 147_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:805:39: 805:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:805:1: 805:43
    }
}

const PF_PPPOX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:748:21: 748:28

    bb0: {
        _0 = const AF_PPPOX;             // scope 0 at src/unix/linux_like/mod.rs:748:31: 748:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:748:1: 748:40
    }
}

const CLD_KILLED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1217:23: 1217:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1217:33: 1217:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1217:1: 1217:35
    }
}

const O_PATH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:413:19: 413:26

    bb0: {
        _0 = const 2097152_i32;          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:413:29: 413:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:413:1: 413:40
    }
}

const _SC_TRACE_LOG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1287:26: 1287:33

    bb0: {
        _0 = const 184_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1287:36: 1287:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1287:1: 1287:40
    }
}

const SYS_getrusage: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:177:26: 177:34

    bb0: {
        _0 = const 98_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:177:37: 177:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:177:1: 177:40
    }
}

const SECCOMP_RET_ERRNO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1797:30: 1797:38

    bb0: {
        _0 = const 327680_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1797:41: 1797:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1797:1: 1797:52
    }
}

const TIOCSPGRP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:132:22: 132:29

    bb0: {
        _0 = const 21520_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:132:32: 132:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:132:1: 132:39
    }
}

const NF_DROP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2258:20: 2258:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2258:30: 2258:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2258:1: 2258:32
    }
}

const IN_CLOSE_NOWRITE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2711:29: 2711:32

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2711:35: 2711:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2711:1: 2711:47
    }
}

const SOL_CAN_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3198:24: 3198:31
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:3198:34: 3198:56

    bb0: {
        _1 = CheckedAdd(const SOL_CAN_BASE, const CAN_RAW); // scope 0 at src/unix/linux_like/linux/mod.rs:3198:34: 3198:56
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const SOL_CAN_BASE, const CAN_RAW) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3198:34: 3198:56
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:3198:34: 3198:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3198:1: 3198:57
    }
}

packet_mreq::mr_address::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:151:37: 151:38

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:151:37: 151:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:151:37: 151:38
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &regmatch_t) -> regmatch_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::regmatch_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const DEAD_PROCESS: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:649:25: 649:34

    bb0: {
        _0 = const 8_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:649:37: 649:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:649:1: 649:39
    }
}

const MS_I_VERSION: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:613:25: 613:34

    bb0: {
        _0 = const 8388608_u64;          // scope 0 at src/unix/linux_like/mod.rs:613:37: 613:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:613:1: 613:46
    }
}

const QIF_ALL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1071:20: 1071:23

    bb0: {
        _0 = const 63_u32;               // scope 0 at src/unix/linux_like/mod.rs:1071:26: 1071:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1071:1: 1071:29
    }
}

const B600: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:694:17: 694:26

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:694:29: 694:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:694:1: 694:38
    }
}

const MS_NOUSER: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1159:22: 1159:31

    bb0: {
        _0 = const 18446744071562067968_u64; // scope 0 at src/unix/linux_like/linux/mod.rs:1159:34: 1159:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1159:1: 1159:53
    }
}

const EAI_AGAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1613:22: 1613:29

    bb0: {
        _0 = const -3_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1613:32: 1613:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1613:1: 1613:35
    }
}

const SYS_faccessat2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:428:27: 428:35

    bb0: {
        _0 = const 439_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:428:38: 428:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:428:1: 428:42
    }
}

const NFNL_SUBSYS_NFT_COMPAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2090:35: 2090:42

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2090:45: 2090:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2090:1: 2090:48
    }
}

const RTM_DELQDISC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2548:25: 2548:28

    bb0: {
        _0 = const 37_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2548:31: 2548:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2548:1: 2548:34
    }
}

const FAN_UNLIMITED_MARKS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3038:32: 3038:40

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3038:43: 3038:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3038:1: 3038:55
    }
}

const AIO_NOTCANCELED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1636:36: 1636:43

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1636:46: 1636:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1636:9: 1636:48
    }
}

const EXIT_FAILURE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:451:25: 451:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:451:35: 451:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:451:1: 451:37
    }
}

const M_KEEP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:987:19: 987:26

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:987:29: 987:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:987:1: 987:31
    }
}

const IPV6_AUTHHDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:908:25: 908:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/mod.rs:908:35: 908:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:908:1: 908:38
    }
}

const ARPHRD_FCPL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1363:24: 1363:27

    bb0: {
        _0 = const 786_u16;              // scope 0 at src/unix/linux_like/mod.rs:1363:30: 1363:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1363:1: 1363:34
    }
}

const F_OFD_SETLKW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:548:25: 548:32

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:548:35: 548:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:548:1: 548:38
    }
}

const HUGETLBFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1400:36: 1400:44

    bb0: {
        _0 = const 2508478710_i64;       // scope 0 at src/unix/linux_like/mod.rs:1400:47: 1400:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1400:9: 1400:58
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &_libc_xmmreg) -> _libc_xmmreg {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFLA_GSO_MAX_SIZE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1427:30: 1427:40

    bb0: {
        _0 = const 41_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1427:43: 1427:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1427:1: 1427:46
    }
}

const SYS_timer_create: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:301:29: 301:37

    bb0: {
        _0 = const 222_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:301:40: 301:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:301:1: 301:44
    }
}

const PT_PHDR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1950:20: 1950:23

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1950:26: 1950:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1950:1: 1950:28
    }
}

const RTF_NOPMTUDISC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2402:27: 2402:37

    bb0: {
        _0 = const 16384_u16;            // scope 0 at src/unix/linux_like/linux/mod.rs:2402:40: 2402:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2402:1: 2402:47
    }
}

const NFT_DATA_RESERVED_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2875:35: 2875:43

    bb0: {
        _0 = const 4294967040_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2875:46: 2875:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2875:1: 2875:57
    }
}

const _SC_FIFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:802:21: 802:28

    bb0: {
        _0 = const 144_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:802:31: 802:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:802:1: 802:35
    }
}

const PF_RDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:745:19: 745:26

    bb0: {
        _0 = const AF_RDS;               // scope 0 at src/unix/linux_like/mod.rs:745:29: 745:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:745:1: 745:36
    }
}

const PIPE_BUF: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1212:21: 1212:26

    bb0: {
        _0 = const 4096_usize;           // scope 0 at src/unix/linux_like/mod.rs:1212:29: 1212:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1212:1: 1212:34
    }
}

const O_DSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:410:20: 410:27

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:410:30: 410:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:410:1: 410:35
    }
}

const _SC_TRACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1284:22: 1284:29

    bb0: {
        _0 = const 181_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1284:32: 1284:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1284:1: 1284:36
    }
}

const SYS_umask: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:174:22: 174:30

    bb0: {
        _0 = const 95_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:174:33: 174:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:174:1: 174:36
    }
}

const SECCOMP_RET_KILL_THREAD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1794:36: 1794:44

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1794:47: 1794:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1794:1: 1794:58
    }
}

const TIOCNXCL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:129:21: 129:28

    bb0: {
        _0 = const 21517_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:129:31: 129:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:129:1: 129:38
    }
}

const PACKET_MR_MULTICAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2253:32: 2253:39

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2253:42: 2253:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2253:1: 2253:44
    }
}

const IN_MODIFY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2708:22: 2708:25

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2708:28: 2708:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2708:1: 2708:40
    }
}

const SOL_CAN_BASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3192:25: 3192:32

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3192:35: 3192:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3192:1: 3192:39
    }
}

sockaddr_vm::svm_zero::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:516:28: 516:29

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:516:28: 516:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:516:28: 516:29
    }
}

const INIT_PROCESS: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:646:25: 646:34

    bb0: {
        _0 = const 5_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:646:37: 646:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:646:1: 646:39
    }
}

const MS_SHARED: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:610:22: 610:31

    bb0: {
        _0 = const 1048576_u64;          // scope 0 at src/unix/linux_like/mod.rs:610:34: 610:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:610:1: 610:43
    }
}

const QIF_LIMITS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1068:23: 1068:26

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/mod.rs:1068:29: 1068:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1068:1: 1068:31
    }
}

const B150: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:691:17: 691:26

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:691:29: 691:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:691:1: 691:38
    }
}

const _PC_ALLOC_SIZE_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1155:31: 1155:38

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1155:41: 1155:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1155:1: 1155:44
    }
}

const AI_NUMERICSERV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1609:27: 1609:34

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1609:37: 1609:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1609:1: 1609:44
    }
}

const SYS_close_range: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:425:28: 425:36

    bb0: {
        _0 = const 436_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:425:39: 425:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:425:1: 425:43
    }
}

const NFNL_SUBSYS_CTNETLINK_TIMEOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2087:42: 2087:49

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2087:52: 2087:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2087:1: 2087:54
    }
}

const RTM_DELRULE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2545:24: 2545:27

    bb0: {
        _0 = const 33_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2545:30: 2545:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2545:1: 2545:33
    }
}

const FAN_CLASS_CONTENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3034:30: 3034:38

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3034:41: 3034:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3034:1: 3034:53
    }
}

const PTHREAD_RWLOCK_INITIALIZER: linux::pthread_rwlock_t = {
    let mut _0: unix::linux_like::linux::pthread_rwlock_t; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1512:43: 1512:59
    let mut _1: [u8; _];                 // in scope 0 at src/unix/linux_like/linux/mod.rs:1513:15: 1513:45

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:1513:15: 1513:45
        _1 = [const 0_u8; __SIZEOF_PTHREAD_RWLOCK_T]; // scope 0 at src/unix/linux_like/linux/mod.rs:1513:15: 1513:45
        (_0.0: [u8; _]) = move _1;       // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const M_MXFAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:984:21: 984:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:984:31: 984:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:984:1: 984:33
    }
}

const IPV6_CHECKSUM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:905:26: 905:33

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:905:36: 905:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:905:1: 905:38
    }
}

const ARPHRD_IRDA: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1360:24: 1360:27

    bb0: {
        _0 = const 783_u16;              // scope 0 at src/unix/linux_like/mod.rs:1360:30: 1360:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1360:1: 1360:34
    }
}

const F_SETLKW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:545:21: 545:28

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:545:31: 545:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:545:1: 545:33
    }
}

const FUTEXFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1397:40: 1397:48

    bb0: {
        _0 = const 195894762_i64;        // scope 0 at src/unix/linux_like/mod.rs:1397:51: 1397:60
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1397:9: 1397:61
    }
}

_libc_fpxreg::__private::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:157:26: 157:27

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:157:26: 157:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:157:26: 157:27
    }
}

const IFLA_PHYS_PORT_NAME: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1424:32: 1424:42

    bb0: {
        _0 = const 38_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1424:45: 1424:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1424:1: 1424:48
    }
}

const SYS_restart_syscall: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:298:32: 298:40

    bb0: {
        _0 = const 219_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:298:43: 298:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:298:1: 298:47
    }
}

const PT_INTERP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1947:22: 1947:25

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1947:28: 1947:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1947:1: 1947:30
    }
}

const RTF_XRESOLVE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2399:25: 2399:35

    bb0: {
        _0 = const 2048_u16;             // scope 0 at src/unix/linux_like/linux/mod.rs:2399:38: 2399:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2399:1: 2399:45
    }
}

const NFT_SET_ELEM_INTERVAL_END: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2870:38: 2870:45

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2870:48: 2870:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2870:1: 2870:52
    }
}

fn unix::<impl at src/unix/mod.rs:401:1: 405:2>::clone(_1: &unix::FILE) -> unix::FILE {
    debug self => _1;                    // in scope 0 at src/unix/mod.rs:402:14: 402:19
    let mut _0: unix::FILE;              // return place in scope 0 at src/unix/mod.rs:402:24: 402:28

    bb0: {
        return;                          // scope 0 at src/unix/mod.rs:404:6: 404:6
    }
}

const _SC_DEVICE_SPECIFIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:799:32: 799:39

    bb0: {
        _0 = const 141_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:799:42: 799:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:799:1: 799:46
    }
}

const PF_ASH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:742:19: 742:26

    bb0: {
        _0 = const AF_ASH;               // scope 0 at src/unix/linux_like/mod.rs:742:29: 742:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:742:1: 742:36
    }
}

const LOG_AUTHPRIV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1208:25: 1208:32
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:1208:35: 1208:42

    bb0: {
        _1 = CheckedShl(const 10_i32, const 3_i32); // scope 0 at src/unix/linux_like/mod.rs:1208:35: 1208:42
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1208:35: 1208:42
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:1208:35: 1208:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1208:1: 1208:43
    }
}

const b64::x86_64::O_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:407:23: 407:30

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:407:33: 407:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:407:1: 407:38
    }
}

const _SC_V6_LP64_OFF64: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1281:30: 1281:37

    bb0: {
        _0 = const 178_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1281:40: 1281:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1281:1: 1281:44
    }
}

const SYS_chown: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:171:22: 171:30

    bb0: {
        _0 = const 92_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:171:33: 171:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:171:1: 171:36
    }
}

const SECCOMP_FILTER_FLAG_LOG: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1790:36: 1790:45

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1790:48: 1790:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1790:1: 1790:50
    }
}

const TCXONC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:126:19: 126:26

    bb0: {
        _0 = const 21514_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:126:29: 126:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:126:1: 126:36
    }
}

const CTRL_ATTR_MCAST_GRP_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2247:35: 2247:42

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2247:45: 2247:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2247:1: 2247:47
    }
}

const VMADDR_CID_HOST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2703:28: 2703:36

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2703:39: 2703:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2703:1: 2703:41
    }
}

const CAN_ISOTP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3188:22: 3188:29

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3188:32: 3188:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3188:1: 3188:34
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &packet_mreq) -> packet_mreq {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::packet_mreq; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const BOOT_TIME: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:643:22: 643:31

    bb0: {
        _0 = const 2_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:643:34: 643:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:643:1: 643:36
    }
}

const MS_UNBINDABLE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:607:26: 607:35

    bb0: {
        _0 = const 131072_u64;           // scope 0 at src/unix/linux_like/mod.rs:607:38: 607:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:607:1: 607:47
    }
}

const QIF_INODES: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1065:23: 1065:26

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:1065:29: 1065:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1065:1: 1065:31
    }
}

const B75: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:688:16: 688:25

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:688:28: 688:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:688:1: 688:37
    }
}

const _PC_REC_MAX_XFER_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1152:34: 1152:41

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1152:44: 1152:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1152:1: 1152:47
    }
}

fn b64::x86_64::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &user_fpregs_struct) -> user_fpregs_struct {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const AI_V4MAPPED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1605:24: 1605:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1605:34: 1605:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1605:1: 1605:41
    }
}

const SYS_fspick: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:422:23: 422:31

    bb0: {
        _0 = const 433_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:422:34: 422:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:422:1: 422:38
    }
}

const NFNL_SUBSYS_OSF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2084:28: 2084:35

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2084:38: 2084:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2084:1: 2084:40
    }
}

const RTM_DELNEIGH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2542:25: 2542:28

    bb0: {
        _0 = const 29_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2542:31: 2542:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2542:1: 2542:34
    }
}

const FAN_CLOEXEC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3030:24: 3030:32

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3030:35: 3030:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3030:1: 3030:47
    }
}

PTHREAD_MUTEX_INITIALIZER::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1507:19: 1507:43

    bb0: {
        _0 = const not_x32::__SIZEOF_PTHREAD_MUTEX_T; // scope 0 at src/unix/linux_like/linux/mod.rs:1507:19: 1507:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1507:19: 1507:43
    }
}

const KEYCTL_SUPPORTS_DECRYPT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:963:36: 963:39

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:963:42: 963:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:963:1: 963:47
    }
}

const IPV6_2292DSTOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:902:29: 902:36

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:902:39: 902:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:902:1: 902:41
    }
}

const ARPHRD_HIPPI: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1357:25: 1357:28

    bb0: {
        _0 = const 780_u16;              // scope 0 at src/unix/linux_like/mod.rs:1357:31: 1357:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1357:1: 1357:35
    }
}

const F_GETOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:542:21: 542:28

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:542:31: 542:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:542:1: 542:33
    }
}

const EXT4_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1394:37: 1394:45

    bb0: {
        _0 = const 61267_i64;            // scope 0 at src/unix/linux_like/mod.rs:1394:48: 1394:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1394:9: 1394:59
    }
}

_libc_fpxreg::significand::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:155:32: 155:33

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:155:32: 155:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:155:32: 155:33
    }
}

const IFLA_CARRIER_CHANGES: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1421:33: 1421:43

    bb0: {
        _0 = const 35_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1421:46: 1421:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1421:1: 1421:49
    }
}

const SYS_remap_file_pages: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:295:33: 295:41

    bb0: {
        _0 = const 216_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:295:44: 295:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:295:1: 295:48
    }
}

const PT_NULL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1944:20: 1944:23

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1944:26: 1944:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1944:1: 1944:28
    }
}

const RTF_IRTT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2396:21: 2396:31

    bb0: {
        _0 = const 256_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2396:34: 2396:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2396:1: 2396:41
    }
}

const NFT_SET_EVAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2865:25: 2865:32

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2865:35: 2865:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2865:1: 2865:40
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sockaddr_alg) -> sockaddr_alg {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::sockaddr_alg; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_C_LANG_SUPPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:796:31: 796:38

    bb0: {
        _0 = const 135_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:796:41: 796:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:796:1: 796:45
    }
}

const PF_NETLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:739:23: 739:30

    bb0: {
        _0 = const AF_NETLINK;           // scope 0 at src/unix/linux_like/mod.rs:739:33: 739:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:739:1: 739:44
    }
}

const AT_NO_AUTOMOUNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1204:28: 1204:35

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/mod.rs:1204:38: 1204:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1204:1: 1204:44
    }
}

const O_CREAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:404:20: 404:27

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:404:30: 404:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:404:1: 404:33
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &in6_rtmsg) -> in6_rtmsg {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::in6_rtmsg; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_2_PBS_CHECKPOINT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1278:33: 1278:40

    bb0: {
        _0 = const 175_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1278:43: 1278:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1278:1: 1278:47
    }
}

const SYS_readlink: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:168:25: 168:33

    bb0: {
        _0 = const 89_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:168:36: 168:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:168:1: 168:39
    }
}

const SECCOMP_MODE_STRICT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1786:32: 1786:40

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1786:43: 1786:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1786:1: 1786:45
    }
}

const TCSETAW: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:123:20: 123:27

    bb0: {
        _0 = const 21511_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:123:30: 123:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:123:1: 123:37
    }
}

const CTRL_ATTR_OP_FLAGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2243:31: 2243:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2243:41: 2243:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2243:1: 2243:43
    }
}

const VMADDR_CID_HYPERVISOR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2695:34: 2695:42

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2695:45: 2695:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2695:1: 2695:47
    }
}

const CAN_TP16: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3185:21: 3185:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3185:31: 3185:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3185:1: 3185:33
    }
}

linux::fsid_t::__val::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:144:26: 144:27

    bb0: {
        _0 = const 2_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:144:26: 144:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:144:26: 144:27
    }
}

const __UT_HOSTSIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:640:26: 640:31

    bb0: {
        _0 = const 256_usize;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:640:34: 640:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:640:1: 640:38
    }
}

const MS_REC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:604:19: 604:28

    bb0: {
        _0 = const 16384_u64;            // scope 0 at src/unix/linux_like/mod.rs:604:31: 604:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:604:1: 604:38
    }
}

const QIF_BLIMITS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1062:24: 1062:27

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:1062:30: 1062:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1062:1: 1062:32
    }
}

const XTABS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:684:18: 684:28

    bb0: {
        _0 = const 6144_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:684:31: 684:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:684:1: 684:40
    }
}

const _PC_SOCK_MAXBUF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1149:28: 1149:35

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1149:38: 1149:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1149:1: 1149:41
    }
}

const AI_PASSIVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1602:23: 1602:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1602:33: 1602:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1602:1: 1602:40
    }
}

const SYS_fsopen: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:419:23: 419:31

    bb0: {
        _0 = const 430_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:419:34: 419:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:419:1: 419:38
    }
}

const NFNL_SUBSYS_CTNETLINK_EXP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2081:38: 2081:45

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2081:48: 2081:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2081:1: 2081:50
    }
}

const RTM_DELROUTE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2539:25: 2539:28

    bb0: {
        _0 = const 25_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2539:31: 2539:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2539:1: 2539:34
    }
}

const FAN_ONDIR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3024:22: 3024:25

    bb0: {
        _0 = const 1073741824_u64;       // scope 0 at src/unix/linux_like/linux/mod.rs:3024:28: 3024:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3024:1: 3024:40
    }
}

const YESSTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1130:27: 1130:36

    bb0: {
        _0 = const 327682_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1130:39: 1130:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1130:9: 1130:47
    }
}

const KEYCTL_PKEY_VERIFY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:959:31: 959:34

    bb0: {
        _0 = const 28_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:959:37: 959:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:959:1: 959:40
    }
}

const IPV6_ADDRFORM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:899:26: 899:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:899:36: 899:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:899:1: 899:38
    }
}

const ARPHRD_IPDDP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1354:25: 1354:28

    bb0: {
        _0 = const 777_u16;              // scope 0 at src/unix/linux_like/mod.rs:1354:31: 1354:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1354:1: 1354:35
    }
}

const PTRACE_DETACH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:537:26: 537:34

    bb0: {
        _0 = const 17_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:537:37: 537:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:537:1: 537:40
    }
}

const EFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1391:36: 1391:44

    bb0: {
        _0 = const 4278867_i64;          // scope 0 at src/unix/linux_like/mod.rs:1391:47: 1391:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1391:9: 1391:58
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &_libc_fpxreg) -> _libc_fpxreg {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFLA_NUM_RX_QUEUES: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1418:31: 1418:41

    bb0: {
        _0 = const 32_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1418:44: 1418:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1418:1: 1418:47
    }
}

const SYS_epoll_create: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:292:29: 292:37

    bb0: {
        _0 = const 213_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:292:40: 292:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:292:1: 292:44
    }
}

const RESOLVE_BENEATH: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1937:28: 1937:35

    bb0: {
        _0 = const 8_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1937:38: 1937:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1937:1: 1937:43
    }
}

const RLIM_NLIMITS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:271:33: 271:54

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:271:57: 271:59
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:271:9: 271:60
    }
}

const RTF_MTU: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2393:20: 2393:30

    bb0: {
        _0 = const 64_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2393:33: 2393:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2393:1: 2393:40
    }
}

const NFT_SET_INTERVAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2862:29: 2862:36

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2862:39: 2862:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2862:1: 2862:43
    }
}

const ATF_PERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:303:21: 303:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/mod.rs:303:31: 303:35
        return;                          // scope 0 at src/unix/mod.rs:303:1: 303:36
    }
}

linux::dirent64::d_name::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:622:32: 622:35

    bb0: {
        _0 = const 256_usize;            // scope 0 at src/unix/linux_like/linux/mod.rs:622:32: 622:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:622:32: 622:35
    }
}

const _SC_NL_SETMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:793:26: 793:33

    bb0: {
        _0 = const 123_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:793:36: 793:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:793:1: 793:40
    }
}

const PF_NETBEUI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:736:23: 736:30

    bb0: {
        _0 = const AF_NETBEUI;           // scope 0 at src/unix/linux_like/mod.rs:736:33: 736:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:736:1: 736:44
    }
}

const AT_SYMLINK_NOFOLLOW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1201:32: 1201:39

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:1201:42: 1201:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1201:1: 1201:48
    }
}

const RTLD_GLOBAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:400:24: 400:31

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:400:34: 400:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:400:1: 400:40
    }
}

const _SC_2_PBS_TRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1275:28: 1275:35

    bb0: {
        _0 = const 172_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1275:38: 1275:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1275:1: 1275:42
    }
}

const SYS_link: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:165:21: 165:29

    bb0: {
        _0 = const 86_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:165:32: 165:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:165:1: 165:35
    }
}

const GRND_NONBLOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1782:26: 1782:34

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1782:37: 1782:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1782:1: 1782:44
    }
}

const TCSETSF: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:120:20: 120:27

    bb0: {
        _0 = const 21508_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:120:30: 120:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:120:1: 120:37
    }
}

const CTRL_ATTR_MCAST_GROUPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2239:35: 2239:42

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2239:45: 2239:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2239:1: 2239:47
    }
}

const MAP_FIXED_NOREPLACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2690:32: 2690:39

    bb0: {
        _0 = const 1048576_i32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2690:42: 2690:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2690:1: 2690:51
    }
}

const CANFD_ESI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3174:22: 3174:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3174:32: 3174:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3174:1: 3174:37
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::fsid_t) -> linux::fsid_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::fsid_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MS_RMT_MASK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:636:24: 636:33

    bb0: {
        _0 = const 41943121_u64;         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:636:36: 636:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:636:1: 636:47
    }
}

const MS_NODIRATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:601:26: 601:35

    bb0: {
        _0 = const 2048_u64;             // scope 0 at src/unix/linux_like/mod.rs:601:38: 601:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:601:1: 601:45
    }
}

const Q_GETFMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1059:21: 1059:28

    bb0: {
        _0 = const 8388612_i32;          // scope 0 at src/unix/linux_like/mod.rs:1059:31: 1059:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1059:1: 1059:40
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::si_stime(_1: &b64::x86_64::siginfo_t) -> i64 {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:436:36: 436:41
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:436:46: 436:54
    let mut _2: &unix::linux_like::linux::gnu::sifields; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:32
    let mut _3: &unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:32
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:21
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:21
        _2 = gnu::<impl b64::x86_64::siginfo_t>::sifields(move _3) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/gnu/mod.rs:437:22: 437:30
                                         // + literal: Const { ty: for<'r> unsafe fn(&'r unix::linux_like::linux::gnu::b64::x86_64::siginfo_t) -> &'r unix::linux_like::linux::gnu::sifields {unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:31: 437:32
        _0 = (((*_2).1: unix::linux_like::linux::gnu::sifields_sigchld).4: i64); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:437:17: 437:49
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:438:13: 438:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:438:14: 438:14
    }
}

const BSDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:681:18: 681:28

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:681:31: 681:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:681:1: 681:40
    }
}

const _PC_SYNC_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1146:24: 1146:31

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1146:34: 1146:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1146:1: 1146:36
    }
}

const RB_POWER_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1598:25: 1598:32

    bb0: {
        _0 = const 1126301404_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1598:35: 1598:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1598:1: 1598:56
    }
}

const SYS_io_uring_register: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:416:34: 416:42

    bb0: {
        _0 = const 427_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:416:45: 416:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:416:1: 416:49
    }
}

const NFNETLINK_V0: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2077:25: 2077:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2077:35: 2077:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2077:1: 2077:37
    }
}

const RTM_DELADDR: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2536:24: 2536:27

    bb0: {
        _0 = const 21_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2536:30: 2536:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2536:1: 2536:33
    }
}

const FAN_Q_OVERFLOW: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3019:27: 3019:30

    bb0: {
        _0 = const 16384_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:3019:33: 3019:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3019:1: 3019:45
    }
}

const THOUSEP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1127:28: 1127:37

    bb0: {
        _0 = const 65537_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1127:40: 1127:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1127:9: 1127:48
    }
}

const KEYCTL_PKEY_ENCRYPT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:956:32: 956:35

    bb0: {
        _0 = const 25_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:956:38: 956:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:956:1: 956:41
    }
}

const MCAST_JOIN_SOURCE_GROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:895:36: 895:43

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/mod.rs:895:46: 895:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:895:1: 895:49
    }
}

const ARPHRD_FDDI: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1351:24: 1351:27

    bb0: {
        _0 = const 774_u16;              // scope 0 at src/unix/linux_like/mod.rs:1351:30: 1351:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1351:1: 1351:34
    }
}

const POLLWRBAND: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:532:23: 532:32

    bb0: {
        _0 = const 512_i16;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:532:35: 532:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:532:1: 532:41
    }
}

const DEBUGFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1388:34: 1388:42

    bb0: {
        _0 = const 1684170528_i64;       // scope 0 at src/unix/linux_like/mod.rs:1388:45: 1388:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1388:9: 1388:56
    }
}

b64::x86_64::pthread_attr_t::__size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:151:23: 151:24

    bb0: {
        _0 = const 7_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:151:23: 151:24
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:151:23: 151:24
    }
}

const IFLA_EXT_MASK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1415:26: 1415:36

    bb0: {
        _0 = const 29_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1415:39: 1415:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1415:1: 1415:42
    }
}

const SYS_io_cancel: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:289:26: 289:34

    bb0: {
        _0 = const 210_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:289:37: 289:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:289:1: 289:41
    }
}

const RESOLVE_NO_XDEV: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1934:28: 1934:35

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1934:38: 1934:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1934:1: 1934:43
    }
}

const RLIMIT_RTPRIO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:242:34: 242:55

    bb0: {
        _0 = const 14_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:242:58: 242:60
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:242:9: 242:61
    }
}

const RTF_REINSTATE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2390:26: 2390:36

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2390:39: 2390:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2390:1: 2390:46
    }
}

const NFT_MSG_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2858:24: 2858:31

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2858:34: 2858:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2858:1: 2858:37
    }
}

const ARPOP_REQUEST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/mod.rs:299:26: 299:29

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/mod.rs:299:32: 299:33
        return;                          // scope 0 at src/unix/mod.rs:299:1: 299:34
    }
}

const _SC_NL_LANGMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:790:27: 790:34

    bb0: {
        _0 = const 120_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:790:37: 790:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:790:1: 790:41
    }
}

const PF_INET6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:733:21: 733:28

    bb0: {
        _0 = const AF_INET6;             // scope 0 at src/unix/linux_like/mod.rs:733:31: 733:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:733:1: 733:40
    }
}

const POSIX_FADV_SEQUENTIAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1197:34: 1197:41

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1197:44: 1197:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1197:1: 1197:46
    }
}

const POSIX_FADV_NOREUSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:396:31: 396:38

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:396:41: 396:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:396:1: 396:43
    }
}

const _SC_2_PBS_ACCOUNTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1272:33: 1272:40

    bb0: {
        _0 = const 169_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1272:43: 1272:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1272:1: 1272:47
    }
}

const SYS_mkdir: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:162:22: 162:30

    bb0: {
        _0 = const 83_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:162:33: 162:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:162:1: 162:36
    }
}

const PR_CAP_AMBIENT_CLEAR_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1777:37: 1777:44

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1777:47: 1777:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1777:1: 1777:49
    }
}

const TCGETS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:117:19: 117:26

    bb0: {
        _0 = const 21505_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:117:29: 117:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:117:1: 117:36
    }
}

const CTRL_ATTR_HDRSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2236:30: 2236:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2236:40: 2236:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2236:1: 2236:42
    }
}

const UDP_NO_CHECK6_TX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2683:29: 2683:36

    bb0: {
        _0 = const 101_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2683:39: 2683:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2683:1: 2683:43
    }
}

const CANFD_MAX_DLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3170:26: 3170:33

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3170:36: 3170:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3170:1: 3170:39
    }
}

const PRIO_PROCESS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:632:25: 632:45

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:632:48: 632:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:632:1: 632:50
    }
}

const MS_MANDLOCK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:598:24: 598:33

    bb0: {
        _0 = const 64_u64;               // scope 0 at src/unix/linux_like/mod.rs:598:36: 598:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:598:1: 598:41
    }
}

const MNT_DETACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1055:23: 1055:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1055:33: 1055:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1055:1: 1055:37
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::si_uid(_1: &b64::x86_64::siginfo_t) -> u32 {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:424:34: 424:39
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:424:44: 424:51
    let mut _2: &unix::linux_like::linux::gnu::sifields; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:32
    let mut _3: &unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:32
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:21
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:21
        _2 = gnu::<impl b64::x86_64::siginfo_t>::sifields(move _3) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/gnu/mod.rs:425:22: 425:30
                                         // + literal: Const { ty: for<'r> unsafe fn(&'r unix::linux_like::linux::gnu::b64::x86_64::siginfo_t) -> &'r unix::linux_like::linux::gnu::sifields {unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:31: 425:32
        _0 = (((*_2).1: unix::linux_like::linux::gnu::sifields_sigchld).1: u32); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:425:17: 425:47
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:426:13: 426:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:426:14: 426:14
    }
}

const NLDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:678:18: 678:28

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:678:31: 678:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:678:1: 678:40
    }
}

const _PC_CHOWN_RESTRICTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1143:33: 1143:40

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1143:43: 1143:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1143:1: 1143:45
    }
}

const RB_HALT_SYSTEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1595:27: 1595:34

    bb0: {
        _0 = const 3454992675_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1595:37: 1595:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1595:1: 1595:58
    }
}

const SYS_pidfd_send_signal: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:413:34: 413:42

    bb0: {
        _0 = const 424_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:413:45: 413:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:413:1: 413:49
    }
}

const NFNLGRP_CONNTRACK_EXP_DESTROY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2073:42: 2073:49

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2073:52: 2073:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2073:1: 2073:54
    }
}

const RTM_GETLINK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2533:24: 2533:27

    bb0: {
        _0 = const 18_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2533:30: 2533:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2533:1: 2533:33
    }
}

const FAN_CLOSE_WRITE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3015:28: 3015:31

    bb0: {
        _0 = const 8_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3015:34: 3015:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3015:1: 3015:46
    }
}

const CODESET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1124:28: 1124:37

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1124:40: 1124:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1124:9: 1124:43
    }
}

const NT_PRFPXREG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:951:24: 951:31

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:951:34: 951:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:951:1: 951:37
    }
}

const MCAST_BLOCK_SOURCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:892:31: 892:38

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/mod.rs:892:41: 892:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:892:1: 892:44
    }
}

const ARPHRD_SKIP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1348:24: 1348:27

    bb0: {
        _0 = const 771_u16;              // scope 0 at src/unix/linux_like/mod.rs:1348:30: 1348:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1348:1: 1348:34
    }
}

const SIG_BLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:528:22: 528:29

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:528:32: 528:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:528:1: 528:41
    }
}

const CGROUP_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1385:39: 1385:47

    bb0: {
        _0 = const 2613483_i64;          // scope 0 at src/unix/linux_like/mod.rs:1385:50: 1385:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1385:9: 1385:59
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::pthread_attr_t) -> b64::x86_64::pthread_attr_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFLA_AF_SPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1412:25: 1412:35

    bb0: {
        _0 = const 26_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1412:38: 1412:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1412:1: 1412:41
    }
}

const SYS_io_destroy: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:286:27: 286:35

    bb0: {
        _0 = const 207_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:286:38: 286:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:286:1: 286:42
    }
}

const BPF_JSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1929:21: 1929:28

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1929:31: 1929:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1929:1: 1929:36
    }
}

const RLIMIT_SIGPENDING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:239:38: 239:59

    bb0: {
        _0 = const 11_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:239:62: 239:64
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:239:9: 239:65
    }
}

const RTF_UP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2386:19: 2386:29

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2386:32: 2386:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2386:1: 2386:39
    }
}

const NFT_MSG_NEWGEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2847:27: 2847:34

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2847:37: 2847:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2847:1: 2847:40
    }
}

const INADDR_ANY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:295:23: 295:32

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/mod.rs:295:35: 295:36
        return;                          // scope 0 at src/unix/mod.rs:295:1: 295:37
    }
}

const _SC_ULONG_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:787:26: 787:33

    bb0: {
        _0 = const 117_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:787:36: 787:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:787:1: 787:40
    }
}

const PF_BRIDGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:730:22: 730:29

    bb0: {
        _0 = const AF_BRIDGE;            // scope 0 at src/unix/linux_like/mod.rs:730:32: 730:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:730:1: 730:42
    }
}

const RTLD_LAZY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1193:22: 1193:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1193:32: 1193:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1193:1: 1193:34
    }
}

const _SC_TIMEOUTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1269:25: 1269:32

    bb0: {
        _0 = const 164_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1269:35: 1269:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1269:1: 1269:39
    }
}

const SYS_chdir: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:159:22: 159:30

    bb0: {
        _0 = const 80_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:159:33: 159:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:159:1: 159:36
    }
}

const PR_CAP_AMBIENT_IS_SET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1774:34: 1774:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1774:44: 1774:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1774:1: 1774:46
    }
}

const SO_BINDTOIFINDEX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:91:29: 91:36

    bb0: {
        _0 = const 62_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:91:39: 91:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:91:1: 91:42
    }
}

const CTRL_ATTR_FAMILY_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2233:32: 2233:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2233:42: 2233:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2233:1: 2233:44
    }
}

const ALG_OP_ENCRYPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2678:27: 2678:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2678:37: 2678:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2678:1: 2678:39
    }
}

const CAN_EFF_ID_BITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3166:28: 3166:35

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3166:38: 3166:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3166:1: 3166:41
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::itimerspec) -> linux::itimerspec {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::itimerspec; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MAP_HUGE_1GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:628:25: 628:32

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_1GB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:628:35: 628:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:628:1: 628:59
    }
}

const MS_NOEXEC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:595:22: 595:31

    bb0: {
        _0 = const 8_u64;                // scope 0 at src/unix/linux_like/mod.rs:595:34: 595:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:595:1: 595:39
    }
}

const EPOLL_CTL_MOD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1051:26: 1051:33

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:1051:36: 1051:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1051:1: 1051:38
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ip_mreq_source) -> ip_mreq_source {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::ip_mreq_source; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const CBAUDEX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:675:20: 675:30

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:675:33: 675:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:675:1: 675:42
    }
}

const _PC_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1140:25: 1140:32

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1140:35: 1140:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1140:1: 1140:37
    }
}

const LOG_NFACILITIES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1590:28: 1590:35

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1590:38: 1590:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1590:1: 1590:41
    }
}

const SYS_pkey_free: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:410:26: 410:34

    bb0: {
        _0 = const 331_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:410:37: 410:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:410:1: 410:41
    }
}

const NFNLGRP_CONNTRACK_DESTROY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2070:38: 2070:45

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2070:48: 2070:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2070:1: 2070:50
    }
}

const TCA_STAB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2529:21: 2529:31

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2529:34: 2529:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2529:1: 2529:36
    }
}

const UINPUT_MAX_NAME_SIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3010:33: 3010:38

    bb0: {
        _0 = const 80_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:3010:41: 3010:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3010:1: 3010:44
    }
}

const ALT_DIGITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1120:31: 1120:40

    bb0: {
        _0 = const 131119_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1120:43: 1120:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1120:9: 1120:51
    }
}

const NT_UTSNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:948:23: 948:30

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:948:33: 948:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:948:1: 948:36
    }
}

const MCAST_EXCLUDE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:889:26: 889:33

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:889:36: 889:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:889:1: 889:38
    }
}

const ARPHRD_TUNNEL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1345:26: 1345:29

    bb0: {
        _0 = const 768_u16;              // scope 0 at src/unix/linux_like/mod.rs:1345:32: 1345:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1345:1: 1345:36
    }
}

const SIGPOLL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:525:20: 525:27

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:525:30: 525:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:525:1: 525:33
    }
}

const BPF_FS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1382:33: 1382:41

    bb0: {
        _0 = const 3405662737_i64;       // scope 0 at src/unix/linux_like/mod.rs:1382:44: 1382:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1382:9: 1382:55
    }
}

b64::x86_64::statvfs64::__f_spare::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:144:30: 144:31

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:144:30: 144:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:144:30: 144:31
    }
}

const IFLA_STATS64: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1409:25: 1409:35

    bb0: {
        _0 = const 23_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1409:38: 1409:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1409:1: 1409:41
    }
}

const SYS_sched_getaffinity: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:283:34: 283:42

    bb0: {
        _0 = const 204_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:283:45: 283:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:283:1: 283:49
    }
}

const BPF_JEQ: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1926:20: 1926:27

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1926:30: 1926:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1926:1: 1926:35
    }
}

const RLIMIT_MEMLOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:236:35: 236:56

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:236:59: 236:60
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:236:9: 236:61
    }
}

const linux::IPTOS_TOS_MASK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2381:27: 2381:29

    bb0: {
        _0 = const 30_u8;                // scope 0 at src/unix/linux_like/linux/mod.rs:2381:32: 2381:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2381:1: 2381:37
    }
}

const NFT_MSG_NEWSETELEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2844:31: 2844:38

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2844:41: 2844:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2844:1: 2844:44
    }
}

const IPPROTO_IP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:291:23: 291:30

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/mod.rs:291:33: 291:34
        return;                          // scope 0 at src/unix/mod.rs:291:1: 291:35
    }
}

const _SC_SHRT_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:784:25: 784:32

    bb0: {
        _0 = const 114_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:784:35: 784:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:784:1: 784:39
    }
}

const PF_IPX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:727:19: 727:26

    bb0: {
        _0 = const AF_IPX;               // scope 0 at src/unix/linux_like/mod.rs:727:29: 727:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:727:1: 727:36
    }
}

const SPLICE_F_MORE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1189:26: 1189:34

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/mod.rs:1189:37: 1189:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1189:1: 1189:42
    }
}

const _SC_SPAWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1266:22: 1266:29

    bb0: {
        _0 = const 159_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1266:32: 1266:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1266:1: 1266:36
    }
}

const SYS_ftruncate: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:156:26: 156:34

    bb0: {
        _0 = const 77_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:156:37: 156:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:156:1: 156:40
    }
}

const PR_FP_MODE_FR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1770:26: 1770:33
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1770:36: 1770:42

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1770:36: 1770:42
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1770:36: 1770:42
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1770:36: 1770:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1770:1: 1770:43
    }
}

const SO_ZEROCOPY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:88:24: 88:31

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:88:34: 88:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:88:1: 88:37
    }
}

const CTRL_CMD_DELMCAST_GRP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2229:34: 2229:41

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2229:44: 2229:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2229:1: 2229:46
    }
}

const ALG_SET_AEAD_ASSOCLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2674:34: 2674:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2674:44: 2674:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2674:1: 2674:46
    }
}

const CAN_EFF_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3162:25: 3162:32

    bb0: {
        _0 = const 536870911_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3162:35: 3162:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3162:1: 3162:46
    }
}

signalfd_siginfo::_pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:135:20: 135:22

    bb0: {
        _0 = const 28_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:135:20: 135:22
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:135:20: 135:22
    }
}

const MAP_HUGE_32MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:625:26: 625:33

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_32MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:625:36: 625:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:625:1: 625:61
    }
}

const MS_RDONLY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:592:22: 592:31

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/mod.rs:592:34: 592:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:592:1: 592:39
    }
}

const EPOLLONESHOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1047:25: 1047:32

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/mod.rs:1047:35: 1047:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1047:1: 1047:46
    }
}

const PENDIN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:672:19: 672:29

    bb0: {
        _0 = const 16384_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:672:32: 672:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:672:1: 672:43
    }
}

const _PC_LINK_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1137:25: 1137:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1137:35: 1137:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1137:1: 1137:37
    }
}

const QFMT_VFS_V0: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1585:24: 1585:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1585:34: 1585:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1585:1: 1585:36
    }
}

const SYS_pwritev2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:407:25: 407:33

    bb0: {
        _0 = const 328_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:407:36: 407:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:407:1: 407:40
    }
}

const NFNLGRP_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2067:25: 2067:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2067:35: 2067:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2067:1: 2067:37
    }
}

const TCA_RATE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2526:21: 2526:31

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2526:34: 2526:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2526:1: 2526:36
    }
}

const SND_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3005:20: 3005:27

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:3005:30: 3005:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3005:1: 3005:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf64_Sym) -> Elf64_Sym {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf64_Sym; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const T_FMT_AMPM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1116:31: 1116:40

    bb0: {
        _0 = const 131115_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1116:43: 1116:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1116:9: 1116:51
    }
}

const NT_PSTATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:945:23: 945:30

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:945:33: 945:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:945:1: 945:36
    }
}

const IPPROTO_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:885:24: 885:31

    bb0: {
        _0 = const 255_i32;              // scope 0 at src/unix/linux_like/mod.rs:885:34: 885:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:885:1: 885:38
    }
}

const ARPHRD_LAPB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1341:24: 1341:27

    bb0: {
        _0 = const 516_u16;              // scope 0 at src/unix/linux_like/mod.rs:1341:30: 1341:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1341:1: 1341:34
    }
}

const SIGSYS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:521:19: 521:26

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:521:29: 521:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:521:1: 521:32
    }
}

const AFFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1379:37: 1379:45

    bb0: {
        _0 = const 44543_i64;            // scope 0 at src/unix/linux_like/mod.rs:1379:48: 1379:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1379:9: 1379:59
    }
}

const IFLA_IFALIAS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1406:25: 1406:35

    bb0: {
        _0 = const 20_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1406:38: 1406:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1406:1: 1406:41
    }
}

const SYS_time: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:280:21: 280:29

    bb0: {
        _0 = const 201_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:280:32: 280:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:280:1: 280:36
    }
}

const BPF_MOD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1923:20: 1923:27

    bb0: {
        _0 = const 144_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1923:30: 1923:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1923:1: 1923:35
    }
}

const RLIMIT_RSS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:233:31: 233:52

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:233:55: 233:56
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:233:9: 233:57
    }
}

const SIOCSRARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2377:22: 2377:31

    bb0: {
        _0 = const 35170_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2377:34: 2377:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2377:1: 2377:45
    }
}

const NFT_MSG_NEWSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2841:27: 2841:34

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2841:37: 2841:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2841:1: 2841:39
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_ramp_effect) -> ff_ramp_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_ramp_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPPROTO_ICMPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:288:27: 288:34

    bb0: {
        _0 = const 58_i32;               // scope 0 at src/unix/mod.rs:288:37: 288:39
        return;                          // scope 0 at src/unix/mod.rs:288:1: 288:40
    }
}

const _SC_SCHAR_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:781:26: 781:33

    bb0: {
        _0 = const 111_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:781:36: 781:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:781:1: 781:40
    }
}

const PF_LOCAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:724:21: 724:28

    bb0: {
        _0 = const AF_LOCAL;             // scope 0 at src/unix/linux_like/mod.rs:724:31: 724:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:724:1: 724:40
    }
}

const __WCLONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1185:21: 1185:28

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/linux_like/mod.rs:1185:31: 1185:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1185:1: 1185:42
    }
}

const _SC_SPIN_LOCKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1263:27: 1263:34

    bb0: {
        _0 = const 154_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1263:37: 1263:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1263:1: 1263:41
    }
}

const SYS_fsync: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:153:22: 153:30

    bb0: {
        _0 = const 74_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:153:33: 153:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:153:1: 153:36
    }
}

const PR_MPX_DISABLE_MANAGEMENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1766:38: 1766:45

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1766:48: 1766:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1766:1: 1766:51
    }
}

const SO_COOKIE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:85:22: 85:29

    bb0: {
        _0 = const 57_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:85:32: 85:34
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:85:1: 85:35
    }
}

const CTRL_CMD_DELOPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2226:28: 2226:35

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2226:38: 2226:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2226:1: 2226:40
    }
}

const ALG_SET_KEY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2671:24: 2671:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2671:34: 2671:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2671:1: 2671:36
    }
}

const CAN_RTR_FLAG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3159:25: 3159:32

    bb0: {
        _0 = const 1073741824_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3159:35: 3159:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3159:1: 3159:46
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &inotify_event) -> inotify_event {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::inotify_event; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MAP_HUGE_2MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:622:25: 622:32

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_2MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:622:35: 622:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:622:1: 622:59
    }
}

const MS_ASYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:587:21: 587:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:587:31: 587:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:587:1: 587:38
    }
}

const EPOLLRDHUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1044:23: 1044:30

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/mod.rs:1044:33: 1044:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1044:1: 1044:40
    }
}

const ECHOCTL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:669:20: 669:30

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:669:33: 669:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:669:1: 669:44
    }
}

fn linux::<impl at src/unix/linux_like/linux/mod.rs:54:1: 58:2>::clone(_1: &fpos64_t) -> fpos64_t {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:55:14: 55:19
    let mut _0: unix::linux_like::linux::fpos64_t; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:55:24: 55:32

    bb0: {
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:57:6: 57:6
    }
}

const SHM_HUGETLB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1580:24: 1580:31

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1580:34: 1580:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1580:1: 1580:41
    }
}

const SYS_mlock2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:404:23: 404:31

    bb0: {
        _0 = const 325_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:404:34: 404:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:404:1: 404:38
    }
}

const NLMSG_DONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2062:23: 2062:30

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2062:33: 2062:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2062:1: 2062:37
    }
}

const TCA_OPTIONS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2523:24: 2523:34

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2523:37: 2523:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2523:1: 2523:39
    }
}

const LED_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3002:20: 3002:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:44
        _1 = const LED_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:3002:28: 3002:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3002:47: 3002:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3002:1: 3002:49
    }
}

const D_T_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1113:28: 1113:37

    bb0: {
        _0 = const 131112_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1113:40: 1113:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1113:9: 1113:48
    }
}

const NT_AUXV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:942:20: 942:27

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:942:30: 942:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:942:1: 942:32
    }
}

const IPPROTO_SCTP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:881:25: 881:32

    bb0: {
        _0 = const 132_i32;              // scope 0 at src/unix/linux_like/mod.rs:881:35: 881:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:881:1: 881:39
    }
}

const ARPHRD_PPP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1338:23: 1338:26

    bb0: {
        _0 = const 512_u16;              // scope 0 at src/unix/linux_like/mod.rs:1338:29: 1338:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1338:1: 1338:33
    }
}

const SIGTSTP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:518:20: 518:27

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:518:30: 518:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:518:1: 518:33
    }
}

const TCP_CM_INQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1008:31: 1008:38

    bb0: {
        _0 = const TCP_INQ;              // scope 0 at src/unix/linux_like/mod.rs:1008:41: 1008:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1008:9: 1008:49
    }
}

const IFLA_LINKMODE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1403:26: 1403:36

    bb0: {
        _0 = const 17_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1403:39: 1403:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1403:1: 1403:42
    }
}

const SYS_lremovexattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:277:29: 277:37

    bb0: {
        _0 = const 198_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:277:40: 277:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:277:1: 277:44
    }
}

const BPF_LSH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1920:20: 1920:27

    bb0: {
        _0 = const 96_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1920:30: 1920:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1920:1: 1920:35
    }
}

const RLIMIT_DATA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:230:32: 230:53

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:230:56: 230:57
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:230:9: 230:58
    }
}

const SIOCSARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2374:21: 2374:30

    bb0: {
        _0 = const 35157_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2374:33: 2374:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2374:1: 2374:44
    }
}

const NFT_MSG_NEWRULE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2838:28: 2838:35

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2838:38: 2838:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2838:1: 2838:40
    }
}

const PRIO_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:284:21: 284:28

    bb0: {
        _0 = const -20_i32;              // scope 0 at src/unix/mod.rs:284:31: 284:34
        return;                          // scope 0 at src/unix/mod.rs:284:1: 284:35
    }
}

const _SC_WORD_BIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:778:25: 778:32

    bb0: {
        _0 = const 107_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:778:35: 778:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:778:1: 778:39
    }
}

const AF_ALG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:720:19: 720:26

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/mod.rs:720:29: 720:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:720:1: 720:32
    }
}

const PTRACE_EVENT_SECCOMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1181:33: 1181:40

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:1181:43: 1181:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1181:1: 1181:45
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &in_pktinfo) -> in_pktinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::in_pktinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_THREAD_CPUTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1260:31: 1260:38

    bb0: {
        _0 = const 139_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1260:41: 1260:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1260:1: 1260:45
    }
}

const SYS_msgctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:150:23: 150:31

    bb0: {
        _0 = const 71_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:150:34: 150:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:150:1: 150:37
    }
}

const PR_SET_THP_DISABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1762:31: 1762:38

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1762:41: 1762:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1762:1: 1762:44
    }
}

const SCM_TIMESTAMPING_OPT_STATS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:82:39: 82:46

    bb0: {
        _0 = const 54_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:82:49: 82:51
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:82:1: 82:52
    }
}

const CTRL_CMD_DELFAMILY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2223:31: 2223:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2223:41: 2223:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2223:1: 2223:43
    }
}

const SOF_TIMESTAMPING_SOFTWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2660:38: 2660:46
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2660:49: 2660:55

    bb0: {
        _1 = CheckedShl(const 1_u32, const 4_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2660:49: 2660:55
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 4_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2660:49: 2660:55
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2660:49: 2660:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2660:1: 2660:56
    }
}

const ERANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3154:19: 3154:26

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3154:29: 3154:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3154:1: 3154:32
    }
}

arpd_request::ha::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:496:29: 496:43

    bb0: {
        _0 = const linux::MAX_ADDR_LEN;  // scope 0 at src/unix/linux_like/linux/mod.rs:496:29: 496:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:496:29: 496:43
    }
}

const MAP_HUGE_64KB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:619:26: 619:33

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_64KB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:619:36: 619:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:619:1: 619:61
    }
}

const MAP_PRIVATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:581:24: 581:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:581:34: 581:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:581:1: 581:41
    }
}

const EPOLLWRNORM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1041:24: 1041:31

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/mod.rs:1041:34: 1041:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1041:1: 1041:40
    }
}

const ECHOK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:666:18: 666:28

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:666:31: 666:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:666:1: 666:42
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::shmid_ds) -> b64::x86_64::shmid_ds {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::shmid_ds; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SHM_REMAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1575:22: 1575:29

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1575:32: 1575:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1575:1: 1575:40
    }
}

const SYS_execveat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:401:25: 401:33

    bb0: {
        _0 = const 322_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:401:36: 401:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:401:1: 401:40
    }
}

const POSIX_SPAWN_SETSCHEDULER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2058:37: 2058:44

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2058:47: 2058:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2058:1: 2058:52
    }
}

const NLA_TYPE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2518:26: 2518:33
    let mut _1: i32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:2518:37: 2518:73

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2518:37: 2518:73
        _1 = BitOr(const NLA_F_NESTED, const NLA_F_NET_BYTEORDER); // scope 0 at src/unix/linux_like/linux/mod.rs:2518:37: 2518:73
        _0 = Not(move _1);               // scope 0 at src/unix/linux_like/linux/mod.rs:2518:36: 2518:73
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2518:72: 2518:73
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2518:1: 2518:74
    }
}

const MSC_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2999:20: 2999:27

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2999:30: 2999:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2999:1: 2999:35
    }
}

const MON_12: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1108:27: 1108:36

    bb0: {
        _0 = const 131109_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1108:39: 1108:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1108:9: 1108:47
    }
}

const LOG_NOWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:278:31: 278:38

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/mod.rs:278:41: 278:45
        return;                          // scope 0 at src/unix/mod.rs:278:9: 278:46
    }
}

const NT_PRXREG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:939:22: 939:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:939:32: 939:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:939:1: 939:34
    }
}

const IPPROTO_ENCAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:875:26: 875:33

    bb0: {
        _0 = const 98_i32;               // scope 0 at src/unix/linux_like/mod.rs:875:36: 875:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:875:1: 875:39
    }
}

const ARPHRD_X25: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1335:23: 1335:26

    bb0: {
        _0 = const 271_u16;              // scope 0 at src/unix/linux_like/mod.rs:1335:29: 1335:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1335:1: 1335:33
    }
}

const SIGUSR2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:515:20: 515:27

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:515:30: 515:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:515:1: 515:33
    }
}

const TCP_FASTOPEN_NO_COOKIE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1005:43: 1005:50

    bb0: {
        _0 = const 34_i32;               // scope 0 at src/unix/linux_like/mod.rs:1005:53: 1005:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1005:9: 1005:56
    }
}

const IFLA_MAP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1400:21: 1400:31

    bb0: {
        _0 = const 14_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1400:34: 1400:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1400:1: 1400:37
    }
}

const SYS_llistxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:274:27: 274:35

    bb0: {
        _0 = const 195_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:274:38: 274:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:274:1: 274:42
    }
}

const BPF_DIV: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1917:20: 1917:27

    bb0: {
        _0 = const 48_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1917:30: 1917:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1917:1: 1917:35
    }
}

const FIOQSIZE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:203:29: 203:36

    bb0: {
        _0 = const 21600_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:203:39: 203:45
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:203:9: 203:46
    }
}

const SIOCDELMULTI: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2371:25: 2371:34

    bb0: {
        _0 = const 35122_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2371:37: 2371:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2371:1: 2371:48
    }
}

const NFT_MSG_NEWCHAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2835:29: 2835:36

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2835:39: 2835:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2835:1: 2835:41
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_constant_effect) -> ff_constant_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_constant_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LOG_LOCAL7: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:270:23: 270:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:270:33: 270:40

    bb0: {
        _1 = CheckedShl(const 23_i32, const 3_i32); // scope 0 at src/unix/mod.rs:270:33: 270:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:270:33: 270:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:270:33: 270:40
        return;                          // scope 0 at src/unix/mod.rs:270:1: 270:41
    }
}

const _SC_INT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:775:24: 775:31

    bb0: {
        _0 = const 104_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:775:34: 775:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:775:1: 775:38
    }
}

const AF_PHONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:717:22: 717:29

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/mod.rs:717:32: 717:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:717:1: 717:35
    }
}

const PTRACE_EVENT_EXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1178:30: 1178:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1178:40: 1178:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1178:1: 1178:42
    }
}

const _SC_BARRIERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1257:25: 1257:32

    bb0: {
        _0 = const 133_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1257:35: 1257:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1257:1: 1257:39
    }
}

const SYS_msgget: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:147:23: 147:31

    bb0: {
        _0 = const 68_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:147:34: 147:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:147:1: 147:37
    }
}

const PR_SET_NO_NEW_PRIVS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1757:32: 1757:39

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1757:42: 1757:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1757:1: 1757:45
    }
}

const SO_ATTACH_REUSEPORT_CBPF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:79:37: 79:44

    bb0: {
        _0 = const 51_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:79:47: 79:49
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:79:1: 79:50
    }
}

const GENL_ID_CTRL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2219:25: 2219:32

    bb0: {
        _0 = const linux::NLMSG_MIN_TYPE; // scope 0 at src/unix/linux_like/linux/mod.rs:2219:35: 2219:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2219:1: 2219:50
    }
}

const SOF_TIMESTAMPING_TX_SOFTWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2657:41: 2657:49
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2657:52: 2657:58

    bb0: {
        _1 = CheckedShl(const 1_u32, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2657:52: 2657:58
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2657:52: 2657:58
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2657:52: 2657:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2657:1: 2657:59
    }
}

const EMLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3151:19: 3151:26

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3151:29: 3151:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3151:1: 3151:32
    }
}

const HUGETLB_FLAG_ENCODE_16GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:37: 606:44
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:47: 606:78

    bb0: {
        _1 = CheckedShl(const 34_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:47: 606:78
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:47: 606:78
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:47: 606:78
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:606:1: 606:79
    }
}

const linux_like::LC_MESSAGES_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:576:29: 576:36
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:576:39: 576:55

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_MESSAGES); // scope 0 at src/unix/linux_like/mod.rs:576:39: 576:55
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_MESSAGES) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:576:39: 576:55
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:576:39: 576:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:576:1: 576:56
    }
}

const EPOLLHUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1038:21: 1038:28

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:1038:31: 1038:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1038:1: 1038:36
    }
}

const CLOCAL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:663:19: 663:29

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:663:32: 663:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:663:1: 663:43
    }
}

const SHM_W: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1571:18: 1571:25

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1571:28: 1571:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1571:1: 1571:34
    }
}

const SYS_memfd_create: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:398:29: 398:37

    bb0: {
        _0 = const 319_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:398:40: 398:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:398:1: 398:44
    }
}

const POSIX_SPAWN_SETSIGDEF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2055:34: 2055:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2055:44: 2055:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2055:1: 2055:49
    }
}

const NETLINK_GET_STRICT_CHK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2514:35: 2514:42

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2514:45: 2514:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2514:1: 2514:48
    }
}

const ABS_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2996:20: 2996:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:44
        _1 = const ABS_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2996:28: 2996:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2996:47: 2996:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2996:1: 2996:49
    }
}

const MON_9: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1105:26: 1105:35

    bb0: {
        _0 = const 131106_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1105:38: 1105:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1105:9: 1105:46
    }
}

const LOG_CONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:275:29: 275:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/mod.rs:275:39: 275:43
        return;                          // scope 0 at src/unix/mod.rs:275:9: 275:44
    }
}

const NT_PRFPREG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:936:23: 936:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:936:33: 936:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:936:1: 936:35
    }
}

const IPPROTO_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:870:25: 870:32

    bb0: {
        _0 = const 59_i32;               // scope 0 at src/unix/linux_like/mod.rs:870:35: 870:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:870:1: 870:38
    }
}

const ARPHRD_RSRVD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1332:25: 1332:28

    bb0: {
        _0 = const 260_u16;              // scope 0 at src/unix/linux_like/mod.rs:1332:31: 1332:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1332:1: 1332:35
    }
}

const SIGCHLD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:512:20: 512:27

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:512:30: 512:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:512:1: 512:33
    }
}

const TCP_ULP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1002:28: 1002:35

    bb0: {
        _0 = const 31_i32;               // scope 0 at src/unix/linux_like/mod.rs:1002:38: 1002:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1002:9: 1002:41
    }
}

const IFLA_WIRELESS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1397:26: 1397:36

    bb0: {
        _0 = const 11_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1397:39: 1397:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1397:1: 1397:42
    }
}

const SYS_lgetxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:271:26: 271:34

    bb0: {
        _0 = const 192_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:271:37: 271:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:271:1: 271:41
    }
}

const BPF_ADD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1914:20: 1914:27

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1914:30: 1914:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1914:1: 1914:35
    }
}

const SO_RCVTIMEO_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:102:36: 102:43

    bb0: {
        _0 = const 66_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:102:46: 102:48
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:102:9: 102:49
    }
}

const SIOCGIFSLAVE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2368:25: 2368:34

    bb0: {
        _0 = const 35113_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2368:37: 2368:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2368:1: 2368:48
    }
}

const NFT_MSG_NEWTABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2832:29: 2832:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2832:39: 2832:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2832:1: 2832:41
    }
}

const LOG_LOCAL4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:267:23: 267:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:267:33: 267:40

    bb0: {
        _1 = CheckedShl(const 20_i32, const 3_i32); // scope 0 at src/unix/mod.rs:267:33: 267:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:267:33: 267:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:267:33: 267:40
        return;                          // scope 0 at src/unix/mod.rs:267:1: 267:41
    }
}

const _SC_CHAR_BIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:772:25: 772:32

    bb0: {
        _0 = const 101_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:772:35: 772:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:772:1: 772:39
    }
}

const AF_IUCV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:714:20: 714:27

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:714:30: 714:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:714:1: 714:33
    }
}

const PTRACE_EVENT_FORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1175:30: 1175:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1175:40: 1175:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1175:1: 1175:42
    }
}

const _SC_XOPEN_REALTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1254:31: 1254:38

    bb0: {
        _0 = const 130_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1254:41: 1254:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1254:1: 1254:45
    }
}

const SYS_semop: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:144:22: 144:30

    bb0: {
        _0 = const 65_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:144:33: 144:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:144:1: 144:36
    }
}

const PR_SET_PTRACER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1752:27: 1752:34

    bb0: {
        _0 = const 1499557217_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1752:37: 1752:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1752:1: 1752:48
    }
}

const SO_INCOMING_CPU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:76:28: 76:35

    bb0: {
        _0 = const 49_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:76:38: 76:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:76:1: 76:41
    }
}

const GENL_CMD_CAP_DO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2215:28: 2215:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2215:38: 2215:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2215:1: 2215:43
    }
}

const MODULE_INIT_IGNORE_MODVERSIONS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2652:43: 2652:51

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2652:54: 2652:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2652:1: 2652:61
    }
}

const ENOSPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3148:19: 3148:26

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3148:29: 3148:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3148:1: 3148:32
    }
}

const HUGETLB_FLAG_ENCODE_512MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:38: 603:45
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:48: 603:79

    bb0: {
        _1 = CheckedShl(const 29_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:48: 603:79
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:48: 603:79
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:48: 603:79
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:603:1: 603:80
    }
}

const linux_like::LC_TIME_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:573:25: 573:32
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:573:35: 573:47

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_TIME); // scope 0 at src/unix/linux_like/mod.rs:573:35: 573:47
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_TIME) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:573:35: 573:47
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:573:35: 573:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:573:1: 573:48
    }
}

const EPOLLPRI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1035:21: 1035:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1035:31: 1035:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1035:1: 1035:35
    }
}

const PARENB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:660:19: 660:29

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:660:32: 660:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:660:1: 660:43
    }
}

const MSG_NOERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1567:24: 1567:31

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1567:34: 1567:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1567:1: 1567:42
    }
}

const SYS_renameat2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:395:26: 395:34

    bb0: {
        _0 = const 316_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:395:37: 395:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:395:1: 395:41
    }
}

const ETH_P_CAIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2051:23: 2051:30

    bb0: {
        _0 = const 247_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2051:33: 2051:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2051:1: 2051:40
    }
}

const NETLINK_LIST_MEMBERSHIPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2511:37: 2511:44

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2511:47: 2511:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2511:1: 2511:49
    }
}

const REL_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2993:20: 2993:27

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2993:30: 2993:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2993:1: 2993:35
    }
}

const MON_6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1102:26: 1102:35

    bb0: {
        _0 = const 131103_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1102:38: 1102:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1102:9: 1102:46
    }
}

const IF_NAMESIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/mod.rs:240:32: 240:40

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/mod.rs:240:43: 240:45
        return;                          // scope 0 at src/unix/mod.rs:240:9: 240:46
    }
}

const GENL_ID_VFS_DQUOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:30: 931:37
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:40: 931:60

    bb0: {
        _1 = CheckedAdd(const linux::NLMSG_MIN_TYPE, const 1_i32); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:40: 931:60
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const linux::NLMSG_MIN_TYPE, const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:40: 931:60
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:40: 931:60
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:931:1: 931:61
    }
}

const IPPROTO_GRE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:863:24: 863:31

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/mod.rs:863:34: 863:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:863:1: 863:37
    }
}

const ARPHRD_CSLIP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1329:25: 1329:28

    bb0: {
        _0 = const 257_u16;              // scope 0 at src/unix/linux_like/mod.rs:1329:31: 1329:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1329:1: 1329:35
    }
}

const SIGVTALRM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:509:22: 509:29

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:509:32: 509:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:509:1: 509:35
    }
}

const TCP_COOKIE_TRANSACTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:980:44: 980:51

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:980:54: 980:56
        return;                          // scope 0 at src/unix/linux_like/mod.rs:980:9: 980:57
    }
}

const IFLA_COST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1394:22: 1394:32

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1394:35: 1394:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1394:1: 1394:37
    }
}

const SYS_lsetxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:268:26: 268:34

    bb0: {
        _0 = const 189_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:268:37: 268:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:268:1: 268:41
    }
}

const BPF_MEM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1911:20: 1911:27

    bb0: {
        _0 = const 96_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1911:30: 1911:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1911:1: 1911:35
    }
}

const SO_TIMESTAMP_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:99:37: 99:44

    bb0: {
        _0 = const 63_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:99:47: 99:49
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:99:9: 99:50
    }
}

const SIOCGIFENCAP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2365:25: 2365:34

    bb0: {
        _0 = const 35109_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2365:37: 2365:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2365:1: 2365:48
    }
}

const NFT_JUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2828:21: 2828:28

    bb0: {
        _0 = const -3_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2828:31: 2828:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2828:1: 2828:34
    }
}

const LOG_LOCAL1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:264:23: 264:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:264:33: 264:40

    bb0: {
        _1 = CheckedShl(const 17_i32, const 3_i32); // scope 0 at src/unix/mod.rs:264:33: 264:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:264:33: 264:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:264:33: 264:40
        return;                          // scope 0 at src/unix/mod.rs:264:1: 264:41
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::group) -> unix::group {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::group;             // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_PII_OSI_M: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:769:26: 769:33

    bb0: {
        _0 = const 65_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:769:36: 769:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:769:1: 769:39
    }
}

const AF_CAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:711:19: 711:26

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/mod.rs:711:29: 711:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:711:1: 711:32
    }
}

const PTRACE_O_SUSPEND_SECCOMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1170:37: 1170:44

    bb0: {
        _0 = const 2097152_i32;          // scope 0 at src/unix/linux_like/mod.rs:1170:47: 1170:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1170:1: 1170:58
    }
}

const _SC_XBS5_LP64_OFF64: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1251:32: 1251:39

    bb0: {
        _0 = const 127_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1251:42: 1251:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1251:1: 1251:46
    }
}

const SYS_kill: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:141:21: 141:29

    bb0: {
        _0 = const 62_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:141:32: 141:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:141:1: 141:35
    }
}

const PR_SET_MM_EXE_FILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1748:31: 1748:38

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1748:41: 1748:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1748:1: 1748:44
    }
}

const SO_BUSY_POLL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:73:25: 73:32

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:73:35: 73:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:73:1: 73:38
    }
}

const GENL_MIN_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2211:24: 2211:31

    bb0: {
        _0 = const linux::NLMSG_MIN_TYPE; // scope 0 at src/unix/linux_like/linux/mod.rs:2211:34: 2211:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2211:1: 2211:49
    }
}

const ARPD_LOOKUP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2647:24: 2647:34

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2647:37: 2647:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2647:1: 2647:42
    }
}

const ENOTTY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3145:19: 3145:26

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3145:29: 3145:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3145:1: 3145:32
    }
}

const HUGETLB_FLAG_ENCODE_16MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:37: 600:44
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:47: 600:78

    bb0: {
        _1 = CheckedShl(const 24_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:47: 600:78
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:47: 600:78
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:47: 600:78
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:600:1: 600:79
    }
}

const XATTR_REPLACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:557:26: 557:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:557:36: 557:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:557:1: 557:40
    }
}

const UIO_MAXIOV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1030:23: 1030:30

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:1030:33: 1030:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1030:1: 1030:38
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::in_addr) -> linux_like::in_addr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::in_addr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const CS8: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:657:16: 657:26

    bb0: {
        _0 = const 48_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:657:29: 657:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:657:1: 657:40
    }
}

const IPC_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1563:21: 1563:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1563:31: 1563:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1563:1: 1563:33
    }
}

const SYS_finit_module: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:392:29: 392:37

    bb0: {
        _0 = const 313_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:392:40: 392:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:392:1: 392:44
    }
}

const ETH_P_TRAILER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2048:26: 2048:33

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2048:36: 2048:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2048:1: 2048:43
    }
}

const NETLINK_RX_RING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2508:28: 2508:35

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2508:38: 2508:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2508:1: 2508:40
    }
}

const SYN_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2990:20: 2990:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:44
        _1 = const SYN_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2990:28: 2990:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2990:47: 2990:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2990:1: 2990:49
    }
}

const MON_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1099:26: 1099:35

    bb0: {
        _0 = const 131100_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1099:38: 1099:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1099:9: 1099:46
    }
}

const IFA_F_STABLE_PRIVACY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:925:33: 925:36

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:925:39: 925:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:925:1: 925:45
    }
}

const IPPROTO_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:857:28: 857:35

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/mod.rs:857:38: 857:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:857:1: 857:41
    }
}

const ARPHRD_EUI64: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1325:25: 1325:28

    bb0: {
        _0 = const 27_u16;               // scope 0 at src/unix/linux_like/mod.rs:1325:31: 1325:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1325:1: 1325:34
    }
}

const SIGTTOU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:506:20: 506:27

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:506:30: 506:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:506:1: 506:33
    }
}

const LC_MONETARY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:565:32: 565:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:565:42: 565:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:565:9: 565:44
    }
}

const IFLA_LINK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1391:22: 1391:32

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1391:35: 1391:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1391:1: 1391:37
    }
}

const SYS_gettid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:265:23: 265:31

    bb0: {
        _0 = const 186_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:265:34: 265:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:265:1: 265:38
    }
}

const BPF_IMM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1908:20: 1908:27

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1908:30: 1908:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1908:1: 1908:35
    }
}

termios2::c_cc::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:8:28: 8:30

    bb0: {
        _0 = const 19_usize;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:8:28: 8:30
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:8:28: 8:30
    }
}

const SIOCGIFMTU: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2362:23: 2362:32

    bb0: {
        _0 = const 35105_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2362:35: 2362:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2362:1: 2362:46
    }
}

const NFT_REG32_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2824:27: 2824:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2824:37: 2824:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2824:1: 2824:39
    }
}

const LOG_NEWS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:261:21: 261:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:261:31: 261:37

    bb0: {
        _1 = CheckedShl(const 7_i32, const 3_i32); // scope 0 at src/unix/mod.rs:261:31: 261:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:261:31: 261:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:261:31: 261:37
        return;                          // scope 0 at src/unix/mod.rs:261:1: 261:38
    }
}

const _SC_PII_INTERNET_DGRAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:766:35: 766:42

    bb0: {
        _0 = const 62_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:766:45: 766:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:766:1: 766:48
    }
}

const AF_PPPOX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:708:21: 708:28

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/mod.rs:708:31: 708:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:708:1: 708:34
    }
}

const PTRACE_O_TRACEVFORKDONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1167:36: 1167:43

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:1167:46: 1167:56
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1167:1: 1167:57
    }
}

const _SC_NZERO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1248:22: 1248:29

    bb0: {
        _0 = const 109_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1248:32: 1248:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1248:1: 1248:36
    }
}

const SYS_execve: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:138:23: 138:31

    bb0: {
        _0 = const 59_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:138:34: 138:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:138:1: 138:37
    }
}

const PR_SET_MM_ENV_START: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1745:32: 1745:39

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1745:42: 1745:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1745:1: 1745:45
    }
}

const SO_NOFCS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:70:21: 70:28

    bb0: {
        _0 = const 43_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:70:31: 70:33
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:70:1: 70:34
    }
}

const NFQA_SKB_GSO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2206:25: 2206:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2206:35: 2206:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2206:1: 2206:42
    }
}

const RTMSG_AR_FAILED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2643:28: 2643:31

    bb0: {
        _0 = const 81_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2643:34: 2643:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2643:1: 2643:39
    }
}

const EINVAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3142:19: 3142:26

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3142:29: 3142:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3142:1: 3142:32
    }
}

const HUGETLB_FLAG_ENCODE_1MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:36: 597:43
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:46: 597:77

    bb0: {
        _1 = CheckedShl(const 20_i32, const HUGETLB_FLAG_ENCODE_SHIFT); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:46: 597:77
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const HUGETLB_FLAG_ENCODE_SHIFT) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:46: 597:77
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:46: 597:77
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:597:1: 597:78
    }
}

const PROT_WRITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:553:23: 553:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:553:33: 553:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:553:1: 553:35
    }
}

const REG_ESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1107:22: 1107:29

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1107:32: 1107:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1107:1: 1107:35
    }
}

const SS_ONSTACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1025:23: 1025:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1025:33: 1025:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1025:1: 1025:35
    }
}

ptrace_syscall_info::pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:346:27: 346:28

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:346:27: 346:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:346:27: 346:28
    }
}

const CSIZE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:654:18: 654:28

    bb0: {
        _0 = const 48_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:654:31: 654:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:654:1: 654:42
    }
}

const IPC_RMID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1560:21: 1560:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1560:31: 1560:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1560:1: 1560:33
    }
}

const SYS_process_vm_readv: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:389:33: 389:41

    bb0: {
        _0 = const 310_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:389:44: 389:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:389:1: 389:48
    }
}

const ETH_P_HDLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2045:23: 2045:30

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2045:33: 2045:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2045:1: 2045:40
    }
}

const NETLINK_PKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2505:28: 2505:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2505:38: 2505:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2505:1: 2505:40
    }
}

const EV_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2987:19: 2987:26

    bb0: {
        _0 = const 31_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2987:29: 2987:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2987:1: 2987:34
    }
}

const ABMON_12: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1095:29: 1095:38

    bb0: {
        _0 = const 131097_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1095:41: 1095:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1095:9: 1095:49
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &protoent) -> protoent {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::protoent;          // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IFA_F_MANAGETEMPADDR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:922:33: 922:36

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:922:39: 922:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:922:1: 922:45
    }
}

const IPPROTO_IDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:850:24: 850:31

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/mod.rs:850:34: 850:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:850:1: 850:37
    }
}

const ARPHRD_ATM: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1322:23: 1322:26

    bb0: {
        _0 = const 19_u16;               // scope 0 at src/unix/linux_like/mod.rs:1322:29: 1322:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1322:1: 1322:32
    }
}

const SA_SIGINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:502:23: 502:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:502:33: 502:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:502:1: 502:44
    }
}

const LC_NUMERIC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:562:31: 562:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:562:41: 562:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:562:9: 562:43
    }
}

const IFLA_BROADCAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1388:27: 1388:37

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1388:40: 1388:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1388:1: 1388:42
    }
}

const SYS_afs_syscall: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:262:28: 262:36

    bb0: {
        _0 = const 183_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:262:39: 262:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:262:1: 262:43
    }
}

const BPF_W: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1905:18: 1905:25

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1905:28: 1905:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1905:1: 1905:33
    }
}

const SIOCSIFMETRIC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2359:26: 2359:35

    bb0: {
        _0 = const 35102_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2359:38: 2359:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2359:1: 2359:49
    }
}

const NFT_REG32_14: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2820:25: 2820:32

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2820:35: 2820:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2820:1: 2820:38
    }
}

const LOG_AUTH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:258:21: 258:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:258:31: 258:37

    bb0: {
        _1 = CheckedShl(const 4_i32, const 3_i32); // scope 0 at src/unix/mod.rs:258:31: 258:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:258:31: 258:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:258:31: 258:37
        return;                          // scope 0 at src/unix/mod.rs:258:1: 258:38
    }
}

const _SC_POLL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:763:21: 763:28

    bb0: {
        _0 = const 58_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:763:31: 763:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:763:1: 763:34
    }
}

const AF_RDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:705:19: 705:26

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/mod.rs:705:29: 705:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:705:1: 705:32
    }
}

const PTRACE_O_TRACEVFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1164:32: 1164:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1164:42: 1164:52
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1164:1: 1164:53
    }
}

const SECCOMP_GET_NOTIF_SIZES: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:785:36: 785:44

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:785:47: 785:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:785:1: 785:49
    }
}

const _SC_XOPEN_XPG2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1245:27: 1245:34

    bb0: {
        _0 = const 98_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1245:37: 1245:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1245:1: 1245:40
    }
}

const SYS_clone: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:135:22: 135:30

    bb0: {
        _0 = const 56_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:135:33: 135:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:135:1: 135:36
    }
}

const PR_SET_MM_BRK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1742:26: 1742:33

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1742:36: 1742:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1742:1: 1742:38
    }
}

const SO_WIFI_STATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:67:27: 67:34

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:67:37: 67:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:67:1: 67:40
    }
}

const NFQA_CFG_F_SECCTX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2202:30: 2202:37

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2202:40: 2202:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2202:1: 2202:47
    }
}

const RTMSG_NEWRULE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2640:26: 2640:29

    bb0: {
        _0 = const 49_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2640:32: 2640:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2640:1: 2640:37
    }
}

const ENODEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3139:19: 3139:26

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3139:29: 3139:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3139:1: 3139:32
    }
}

const HUGETLB_FLAG_ENCODE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:593:37: 593:44

    bb0: {
        _0 = const 63_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:593:47: 593:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:593:1: 593:52
    }
}

const SIGTERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:549:20: 549:27

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:549:30: 549:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:549:1: 549:33
    }
}

const PTHREAD_MUTEX_ADAPTIVE_NP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1102:38: 1102:45

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1102:48: 1102:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1102:1: 1102:50
    }
}

const LOCK_EX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1021:20: 1021:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1021:30: 1021:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1021:1: 1021:32
    }
}

const IXON: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:651:17: 651:27

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:651:30: 651:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:651:1: 651:41
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::ipc_perm) -> b64::x86_64::ipc_perm {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::ipc_perm; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPC_CREAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1556:22: 1556:29

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1556:32: 1556:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1556:1: 1556:39
    }
}

const SYS_sendmmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:386:25: 386:33

    bb0: {
        _0 = const 307_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:386:36: 386:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:386:1: 386:40
    }
}

const ETH_P_CONTROL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2042:26: 2042:33

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2042:36: 2042:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2042:1: 2042:43
    }
}

const NLM_F_APPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2501:25: 2501:32

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2501:35: 2501:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2501:1: 2501:41
    }
}

const FF_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2982:19: 2982:24
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:42
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:46

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:42
        _1 = const FF_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:42
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:46
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:46
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:2982:27: 2982:46
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:2982:45: 2982:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2982:1: 2982:47
    }
}

const ABMON_9: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1092:28: 1092:37

    bb0: {
        _0 = const 131094_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1092:40: 1092:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1092:9: 1092:48
    }
}

const UNAME26: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:916:20: 916:27

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:916:30: 916:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:916:1: 916:40
    }
}

const IPPROTO_IPIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:842:25: 842:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:842:35: 842:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:842:1: 842:37
    }
}

const ARPHRD_ARCNET: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1319:26: 1319:29

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/mod.rs:1319:32: 1319:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1319:1: 1319:34
    }
}

const SOCK_STREAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:498:24: 498:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:498:34: 498:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:498:1: 498:36
    }
}

linux_like::sigevent::__unused1::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:258:30: 258:32

    bb0: {
        _0 = const 11_usize;             // scope 0 at src/unix/linux_like/mod.rs:258:30: 258:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:258:30: 258:32
    }
}

const IFA_F_PERMANENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1383:28: 1383:31

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1383:34: 1383:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1383:1: 1383:39
    }
}

const SYS_nfsservctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:259:27: 259:35

    bb0: {
        _0 = const 180_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:259:38: 259:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:259:1: 259:42
    }
}

const BPF_JMP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1902:20: 1902:27

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1902:30: 1902:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1902:1: 1902:35
    }
}

const SIOCGIFNETMASK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2356:27: 2356:36

    bb0: {
        _0 = const 35099_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2356:39: 2356:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2356:1: 2356:50
    }
}

const NFT_REG32_11: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2817:25: 2817:32

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2817:35: 2817:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2817:1: 2817:38
    }
}

const LOG_USER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:255:21: 255:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:255:31: 255:37

    bb0: {
        _1 = CheckedShl(const 1_i32, const 3_i32); // scope 0 at src/unix/mod.rs:255:31: 255:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:255:31: 255:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:255:31: 255:37
        return;                          // scope 0 at src/unix/mod.rs:255:1: 255:38
    }
}

const _SC_PII_SOCKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:760:27: 760:34

    bb0: {
        _0 = const 55_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:760:37: 760:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:760:1: 760:40
    }
}

const AF_ASH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:702:19: 702:26

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/mod.rs:702:29: 702:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:702:1: 702:32
    }
}

const ADDR_LIMIT_3GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1159:27: 1159:34

    bb0: {
        _0 = const 134217728_i32;        // scope 0 at src/unix/linux_like/mod.rs:1159:37: 1159:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1159:1: 1159:47
    }
}

const SECCOMP_SET_MODE_STRICT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:782:36: 782:44

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:782:47: 782:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:782:1: 782:49
    }
}

const _SC_XOPEN_SHM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1242:26: 1242:33

    bb0: {
        _0 = const 94_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1242:36: 1242:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1242:1: 1242:39
    }
}

const SYS_socketpair: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:132:27: 132:35

    bb0: {
        _0 = const 53_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:132:38: 132:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:132:1: 132:41
    }
}

const PR_SET_MM_END_DATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1739:31: 1739:38

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1739:41: 1739:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1739:1: 1739:43
    }
}

const SO_PROTOCOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:64:24: 64:31

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:64:34: 64:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:64:1: 64:37
    }
}

const NFQA_CFG_F_CONNTRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2199:33: 2199:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2199:43: 2199:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2199:1: 2199:50
    }
}

const RTMSG_DELDEVICE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2637:28: 2637:31

    bb0: {
        _0 = const 18_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2637:34: 2637:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2637:1: 2637:39
    }
}

const EBUSY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3136:18: 3136:25

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3136:28: 3136:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3136:1: 3136:31
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &signalfd_siginfo) -> signalfd_siginfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::signalfd_siginfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SIGSEGV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:546:20: 546:27

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:546:30: 546:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:546:1: 546:33
    }
}

const TIME_ERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1079:23: 1079:30

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1079:33: 1079:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1079:1: 1079:35
    }
}

const SHUT_WR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1017:20: 1017:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:1017:30: 1017:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1017:1: 1017:32
    }
}

const VSTOP: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:648:18: 648:23

    bb0: {
        _0 = const 9_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:648:26: 648:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:648:1: 648:28
    }
}

mcontext_t::__private::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:233:26: 233:27

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:233:26: 233:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:233:26: 233:27
    }
}

const IPPROTO_MPTCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1544:26: 1544:33

    bb0: {
        _0 = const 262_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1544:36: 1544:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1544:1: 1544:40
    }
}

const SYS_open_by_handle_at: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:383:34: 383:42

    bb0: {
        _0 = const 304_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:383:45: 383:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:383:1: 383:49
    }
}

const ETH_P_PPPTALK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2039:26: 2039:33

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2039:36: 2039:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2039:1: 2039:43
    }
}

unix::align::in6_addr::s6_addr::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/align.rs:4:27: 4:29

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/align.rs:4:27: 4:29
        return;                          // scope 0 at src/unix/align.rs:4:27: 4:29
    }
}

const NLM_F_REPLACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2498:26: 2498:33

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2498:36: 2498:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2498:1: 2498:42
    }
}

const NFT_NG_INCREMENTAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2977:31: 2977:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2977:41: 2977:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2977:1: 2977:43
    }
}

const ABMON_6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1089:28: 1089:37

    bb0: {
        _0 = const 131091_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1089:40: 1089:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1089:9: 1089:48
    }
}

const NDA_MASTER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:911:23: 911:33

    bb0: {
        _0 = const 9_u16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:911:36: 911:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:911:1: 911:38
    }
}

const IP_PMTUDISC_OMIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:833:29: 833:36

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:833:39: 833:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:833:1: 833:41
    }
}

const ARPHRD_PRONET: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1316:26: 1316:29

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/mod.rs:1316:32: 1316:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1316:1: 1316:34
    }
}

const ENOTRECOVERABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:494:28: 494:35

    bb0: {
        _0 = const 131_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:494:38: 494:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:494:1: 494:42
    }
}

const IFA_F_HOMEADDRESS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1380:30: 1380:33

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1380:36: 1380:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1380:1: 1380:41
    }
}

const SYS_get_kernel_syms: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:256:32: 256:40

    bb0: {
        _0 = const 177_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:256:43: 256:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:256:1: 256:47
    }
}

const BPF_ST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1899:19: 1899:26

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1899:29: 1899:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1899:1: 1899:34
    }
}

const SIOCSIFDSTADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2353:27: 2353:36

    bb0: {
        _0 = const 35096_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2353:39: 2353:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2353:1: 2353:50
    }
}

const NFT_REG32_08: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2814:25: 2814:32

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2814:35: 2814:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2814:1: 2814:38
    }
}

const LOG_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:251:21: 251:28

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/mod.rs:251:31: 251:32
        return;                          // scope 0 at src/unix/mod.rs:251:1: 251:33
    }
}

const _SC_CHARCLASS_NAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:757:35: 757:42

    bb0: {
        _0 = const 45_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:757:45: 757:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:757:1: 757:48
    }
}

const AF_NETLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:699:23: 699:30

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:699:33: 699:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:699:1: 699:36
    }
}

const SHORT_INODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1156:24: 1156:31

    bb0: {
        _0 = const 16777216_i32;         // scope 0 at src/unix/linux_like/mod.rs:1156:34: 1156:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1156:1: 1156:44
    }
}

const REG_TRAPNO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:778:23: 778:30

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:778:33: 778:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:778:1: 778:36
    }
}

const _SC_XOPEN_UNIX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1239:27: 1239:34

    bb0: {
        _0 = const 91_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1239:37: 1239:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1239:1: 1239:40
    }
}

const SYS_listen: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:129:23: 129:31

    bb0: {
        _0 = const 50_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:129:34: 129:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:129:1: 129:37
    }
}

const PR_SET_MM_START_CODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1736:33: 1736:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1736:43: 1736:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1736:1: 1736:45
    }
}

const SO_TIMESTAMPNS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:59:27: 59:34

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:59:37: 59:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:59:1: 59:40
    }
}

const NFQA_CFG_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2195:26: 2195:33

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2195:36: 2195:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2195:1: 2195:38
    }
}

const RT_TABLE_LOCAL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2633:27: 2633:36

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/linux/mod.rs:2633:39: 2633:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2633:1: 2633:43
    }
}

const EACCES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3133:19: 3133:26

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3133:29: 3133:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3133:1: 3133:32
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &genlmsghdr) -> genlmsghdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::genlmsghdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SIGABRT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:543:20: 543:27

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:543:30: 543:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:543:1: 543:32
    }
}

const TIME_DEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1076:21: 1076:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1076:31: 1076:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1076:1: 1076:33
    }
}

const TCP_SAVED_SYN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:995:26: 995:33

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/mod.rs:995:36: 995:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:995:1: 995:39
    }
}

const VREPRINT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:645:21: 645:26

    bb0: {
        _0 = const 12_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:645:29: 645:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:645:1: 645:32
    }
}

mcontext_t::gregs::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:231:29: 231:31

    bb0: {
        _0 = const 23_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:231:29: 231:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:231:29: 231:31
    }
}

const SCHED_IDLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1534:23: 1534:30

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1534:33: 1534:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1534:1: 1534:35
    }
}

const SYS_fanotify_mark: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:380:30: 380:38

    bb0: {
        _0 = const 301_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:380:41: 380:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:380:1: 380:45
    }
}

const ETH_P_PPP_MP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2036:25: 2036:32

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2036:35: 2036:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2036:1: 2036:42
    }
}

fn unix::align::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::align::in6_addr) -> unix::align::in6_addr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::align::in6_addr;   // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const NLM_F_MATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2494:24: 2494:31

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2494:34: 2494:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2494:1: 2494:40
    }
}

const NFT_TRACETYPE_POLICY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2973:33: 2973:40

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2973:43: 2973:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2973:1: 2973:45
    }
}

const ABMON_3: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1086:28: 1086:37

    bb0: {
        _0 = const 131088_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1086:40: 1086:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1086:9: 1086:48
    }
}

const RTA_TTL_PROPAGATE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:905:30: 905:40

    bb0: {
        _0 = const 26_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:905:43: 905:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:905:1: 905:46
    }
}

const IP_PMTUDISC_DO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:830:27: 830:34

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:830:37: 830:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:830:1: 830:39
    }
}

const ARPHRD_ETHER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1313:25: 1313:28

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/mod.rs:1313:31: 1313:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1313:1: 1313:33
    }
}

const EKEYREVOKED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:491:24: 491:31

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:491:34: 491:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:491:1: 491:38
    }
}

const IFA_F_NODAD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1377:24: 1377:27

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1377:30: 1377:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1377:1: 1377:35
    }
}

const SYS_create_module: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:253:30: 253:38

    bb0: {
        _0 = const 174_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:253:41: 253:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:253:1: 253:45
    }
}

const BPF_MAXINSNS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1894:25: 1894:32

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1894:35: 1894:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1894:1: 1894:40
    }
}

const generic::RLIM_INFINITY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:278:26: 278:34

    bb0: {
        _0 = Not(const 0_u64);           // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:278:37: 278:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:278:1: 278:40
    }
}

const SIOCGIFADDR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2350:24: 2350:33

    bb0: {
        _0 = const 35093_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2350:36: 2350:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2350:1: 2350:47
    }
}

const NFT_REG32_05: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2811:25: 2811:32

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2811:35: 2811:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2811:1: 2811:38
    }
}

const LOG_ERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:248:20: 248:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/mod.rs:248:30: 248:31
        return;                          // scope 0 at src/unix/mod.rs:248:1: 248:32
    }
}

const FILENAME_MAX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:754:25: 754:33

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:754:36: 754:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:754:1: 754:41
    }
}

const AF_NETBEUI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:696:23: 696:30

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/mod.rs:696:33: 696:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:696:1: 696:36
    }
}

const ADDR_COMPAT_LAYOUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1153:31: 1153:38

    bb0: {
        _0 = const 2097152_i32;          // scope 0 at src/unix/linux_like/mod.rs:1153:41: 1153:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1153:1: 1153:51
    }
}

const REG_EFL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:775:20: 775:27

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:775:30: 775:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:775:1: 775:33
    }
}

const _SC_PASS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1236:25: 1236:32

    bb0: {
        _0 = const 88_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1236:35: 1236:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1236:1: 1236:38
    }
}

const SYS_recvmsg: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:126:24: 126:32

    bb0: {
        _0 = const 47_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:126:35: 126:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:126:1: 126:38
    }
}

const PR_MCE_KILL_DEFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1731:32: 1731:39

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1731:42: 1731:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1731:1: 1731:44
    }
}

const SO_SNDBUFFORCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:56:27: 56:34

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:56:37: 56:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:56:1: 56:40
    }
}

const NFQA_CFG_CMD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2192:25: 2192:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2192:35: 2192:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2192:1: 2192:37
    }
}

const RT_TABLE_COMPAT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2630:28: 2630:37

    bb0: {
        _0 = const 252_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2630:40: 2630:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2630:1: 2630:44
    }
}

const ECHILD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3130:19: 3130:26

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3130:29: 3130:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3130:1: 3130:32
    }
}

linux::posix_spawnattr_t::__pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:476:26: 476:28

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:476:26: 476:28
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:476:26: 476:28
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:355:1: 379:2>::si_value(_1: &b64::x86_64::siginfo_t) -> unix::sigval {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:367:28: 367:33
    let mut _0: unix::sigval;            // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:367:38: 367:46
    let mut _2: *const unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value::siginfo_timer; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:11: 377:61
    let mut _3: *const unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:12: 377:36

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:11: 377:61
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:12: 377:36
        _3 = &raw const (*_1);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:12: 377:16
        _2 = move _3 as *const unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value::siginfo_timer (Misc); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:11: 377:61
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:60: 377:61
        _0 = ((*_2).5: unix::sigval);    // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:377:9: 377:72
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:378:5: 378:6
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:378:6: 378:6
    }
}

const SIGINT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:540:19: 540:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:540:29: 540:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:540:1: 540:31
    }
}

const NTP_API: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1073:20: 1073:27

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1073:30: 1073:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1073:1: 1073:32
    }
}

const TCP_NOTSENT_LOWAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:992:30: 992:37

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/mod.rs:992:40: 992:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:992:1: 992:43
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__c_anonymous_ptrace_syscall_info_seccomp) -> __c_anonymous_ptrace_syscall_info_seccomp {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const BS1: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:642:16: 642:26

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:642:29: 642:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:642:1: 642:40
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &mcontext_t) -> mcontext_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::mcontext_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SCHED_FIFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1531:23: 1531:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1531:33: 1531:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1531:1: 1531:35
    }
}

const SYS_perf_event_open: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:377:32: 377:40

    bb0: {
        _0 = const 298_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:377:43: 377:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:377:1: 377:47
    }
}

const ETH_P_SNAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2033:23: 2033:30

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2033:33: 2033:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2033:1: 2033:40
    }
}

const NLM_F_DUMP_INTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2490:28: 2490:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2490:38: 2490:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2490:1: 2490:41
    }
}

const NFT_NAT_SNAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2969:25: 2969:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2969:35: 2969:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2969:1: 2969:37
    }
}

const DAY_7: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1082:26: 1082:35

    bb0: {
        _0 = const 131085_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1082:38: 1082:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1082:9: 1082:46
    }
}

const RTA_EXPIRES: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:902:24: 902:34

    bb0: {
        _0 = const 23_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:902:37: 902:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:902:1: 902:40
    }
}

const IP_DEFAULT_MULTICAST_LOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:826:38: 826:45

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:826:48: 826:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:826:1: 826:50
    }
}

const ATF_NETMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1309:24: 1309:31

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:1309:34: 1309:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1309:1: 1309:39
    }
}

const ECANCELED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:488:22: 488:29

    bb0: {
        _0 = const 125_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:488:32: 488:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:488:1: 488:36
    }
}

const IFA_MULTICAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1373:26: 1373:36

    bb0: {
        _0 = const 7_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1373:39: 1373:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1373:1: 1373:41
    }
}

const SYS_setdomainname: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:250:30: 250:38

    bb0: {
        _0 = const 171_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:250:41: 250:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:250:1: 250:45
    }
}

const BPF_NET_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1891:24: 1891:31

    bb0: {
        _0 = const SKF_NET_OFF;          // scope 0 at src/unix/linux_like/linux/mod.rs:1891:34: 1891:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1891:1: 1891:46
    }
}

const TIOCM_DSR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:217:22: 217:29

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:217:32: 217:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:217:1: 217:38
    }
}

const SIOCGIFCONF: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2347:24: 2347:33

    bb0: {
        _0 = const 35090_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2347:36: 2347:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2347:1: 2347:47
    }
}

const NFT_REG32_02: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2808:25: 2808:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2808:35: 2808:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2808:1: 2808:38
    }
}

const LOG_EMERG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:245:22: 245:29

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/mod.rs:245:32: 245:33
        return;                          // scope 0 at src/unix/mod.rs:245:1: 245:34
    }
}

const BUFSIZ: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:751:19: 751:27

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:751:30: 751:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:751:1: 751:35
    }
}

const AF_INET6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:693:21: 693:28

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/mod.rs:693:31: 693:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:693:1: 693:34
    }
}

const WNOWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1148:20: 1148:27

    bb0: {
        _0 = const 16777216_i32;         // scope 0 at src/unix/linux_like/mod.rs:1148:30: 1148:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1148:1: 1148:41
    }
}

const REG_RCX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:772:20: 772:27

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:772:30: 772:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:772:1: 772:33
    }
}

const _SC_PHYS_PAGES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1233:27: 1233:34

    bb0: {
        _0 = const 85_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1233:37: 1233:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1233:1: 1233:40
    }
}

const SYS_sendto: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:123:23: 123:31

    bb0: {
        _0 = const 44_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:123:34: 123:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:123:1: 123:37
    }
}

const PR_MCE_KILL_SET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1727:28: 1727:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1727:38: 1727:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1727:1: 1727:40
    }
}

const generic::SO_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:52:25: 52:32

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:52:35: 52:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:52:1: 52:38
    }
}

const NFQNL_COPY_META: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2188:28: 2188:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2188:38: 2188:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2188:1: 2188:40
    }
}

const RT_SCOPE_HOST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2626:26: 2626:35

    bb0: {
        _0 = const 254_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2626:38: 2626:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2626:1: 2626:42
    }
}

const E2BIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3127:18: 3127:25

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3127:28: 3127:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3127:1: 3127:30
    }
}

const STDOUT_FILENO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:537:26: 537:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:537:36: 537:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:537:1: 537:38
    }
}

const STA_MODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1063:21: 1063:28

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1063:31: 1063:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1063:1: 1063:38
    }
}

const TCP_REPAIR_OPTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:989:31: 989:38

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/mod.rs:989:41: 989:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:989:1: 989:44
    }
}

const CR2: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:639:16: 639:26

    bb0: {
        _0 = const 1024_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:639:29: 639:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:639:1: 639:40
    }
}

user::u_debugreg::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:227:41: 227:42

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:227:41: 227:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:227:41: 227:42
    }
}

const RENAME_EXCHANGE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1527:28: 1527:36

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1527:39: 1527:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1527:1: 1527:41
    }
}

const SYS_preadv: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:374:23: 374:31

    bb0: {
        _0 = const 295_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:374:34: 374:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:374:1: 374:38
    }
}

const ETH_P_AX25: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2030:23: 2030:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2030:33: 2030:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2030:1: 2030:40
    }
}

const NLM_F_MULTI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2487:24: 2487:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2487:34: 2487:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2487:1: 2487:36
    }
}

const NFT_REJECT_ICMPX_PORT_UNREACH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2965:42: 2965:49

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2965:52: 2965:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2965:1: 2965:54
    }
}

const DAY_4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1079:26: 1079:35

    bb0: {
        _0 = const 131082_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1079:38: 1079:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1079:9: 1079:46
    }
}

const RTA_PREF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:899:21: 899:31

    bb0: {
        _0 = const 20_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:899:34: 899:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:899:1: 899:37
    }
}

const IP_MULTICAST_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:822:29: 822:36

    bb0: {
        _0 = const 49_i32;               // scope 0 at src/unix/linux_like/mod.rs:822:39: 822:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:822:1: 822:42
    }
}

const ARPOP_InREQUEST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1305:28: 1305:31

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/mod.rs:1305:34: 1305:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1305:1: 1305:36
    }
}

const EDQUOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:485:19: 485:26

    bb0: {
        _0 = const 122_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:485:29: 485:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:485:1: 485:33
    }
}

linux_like::utsname::machine::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:246:33: 246:35

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:246:33: 246:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:246:33: 246:35
    }
}

const IFA_BROADCAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1370:26: 1370:36

    bb0: {
        _0 = const 4_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1370:39: 1370:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1370:1: 1370:41
    }
}

const SYS_swapoff: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:247:24: 247:32

    bb0: {
        _0 = const 168_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:247:35: 247:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:247:1: 247:39
    }
}

const SKF_AD_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1888:23: 1888:30

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1888:33: 1888:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1888:1: 1888:36
    }
}

const TIOCM_CD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:214:21: 214:28

    bb0: {
        _0 = const TIOCM_CAR;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:214:31: 214:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:214:1: 214:41
    }
}

const SIOCDELRT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2344:22: 2344:31

    bb0: {
        _0 = const 35084_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2344:34: 2344:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2344:1: 2344:45
    }
}

const __NFT_REG_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2805:26: 2805:33

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2805:36: 2805:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2805:1: 2805:38
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &input_mask) -> input_mask {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::input_mask; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const S_ISUID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:233:20: 233:28

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/mod.rs:233:31: 233:36
        return;                          // scope 0 at src/unix/mod.rs:233:1: 233:37
    }
}

const DCCP_SOCKOPT_CCID_TX_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:744:38: 744:45

    bb0: {
        _0 = const 192_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:744:48: 744:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:744:1: 744:52
    }
}

const AF_BRIDGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:690:22: 690:29

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/mod.rs:690:32: 690:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:690:1: 690:34
    }
}

const WSTOPPED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1145:21: 1145:28

    bb0: {
        _0 = const WUNTRACED;            // scope 0 at src/unix/linux_like/mod.rs:1145:31: 1145:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1145:1: 1145:41
    }
}

const REG_RBX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:769:20: 769:27

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:769:30: 769:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:769:1: 769:33
    }
}

const _SC_THREAD_PROCESS_SHARED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1230:38: 1230:45

    bb0: {
        _0 = const 82_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1230:48: 1230:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1230:1: 1230:51
    }
}

const SYS_socket: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:120:23: 120:31

    bb0: {
        _0 = const 41_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:120:34: 120:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:120:1: 120:37
    }
}

const PR_TASK_PERF_EVENTS_ENABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1723:39: 1723:46

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1723:49: 1723:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1723:1: 1723:52
    }
}

const SO_DETACH_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:49:29: 49:36

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:49:39: 49:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:49:1: 49:42
    }
}

const NFQNL_CFG_CMD_PF_BIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2184:34: 2184:41

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2184:44: 2184:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2184:1: 2184:46
    }
}

const RT_SCOPE_UNIVERSE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2623:30: 2623:39

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2623:42: 2623:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2623:1: 2623:44
    }
}

const EINTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3124:18: 3124:25

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3124:28: 3124:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3124:1: 3124:30
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:355:1: 379:2>::si_addr(_1: &b64::x86_64::siginfo_t) -> *mut core::ffi::c_void {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:356:27: 356:32
    let mut _0: *mut core::ffi::c_void;  // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:356:37: 356:50
    let mut _2: *const unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr::siginfo_sigfault; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:11: 364:64
    let mut _3: *const unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:12: 364:36

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:11: 364:64
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:12: 364:36
        _3 = &raw const (*_1);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:12: 364:16
        _2 = move _3 as *const unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr::siginfo_sigfault (Misc); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:11: 364:64
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:63: 364:64
        _0 = ((*_2).3: *mut core::ffi::c_void); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:364:9: 364:73
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:365:5: 365:6
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:365:6: 365:6
    }
}

const W_OK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:534:17: 534:24

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:534:27: 534:28
        return;                          // scope 0 at src/unix/linux_like/mod.rs:534:1: 534:29
    }
}

const STA_PPSERROR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1060:25: 1060:32

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1060:35: 1060:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1060:1: 1060:42
    }
}

const TCP_REPAIR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:986:23: 986:30

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/mod.rs:986:33: 986:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:986:1: 986:36
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__c_anonymous_ptrace_syscall_info_exit) -> __c_anonymous_ptrace_syscall_info_exit {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const TAB2: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:636:17: 636:27

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:636:30: 636:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:636:1: 636:41
    }
}

const PTHREAD_PROCESS_SHARED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1523:35: 1523:42

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1523:45: 1523:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1523:1: 1523:47
    }
}

const SYS_dup3: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:371:21: 371:29

    bb0: {
        _0 = const 292_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:371:32: 371:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:371:1: 371:36
    }
}

const ETH_P_AF_IUCV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2024:26: 2024:33

    bb0: {
        _0 = const 64507_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2024:36: 2024:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2024:1: 2024:43
    }
}

const NETLINK_CRYPTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2483:27: 2483:34

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2483:37: 2483:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2483:1: 2483:40
    }
}

const NFT_REJECT_TCP_RST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2961:31: 2961:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2961:41: 2961:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2961:1: 2961:43
    }
}

const DAY_1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1076:26: 1076:35

    bb0: {
        _0 = const 131079_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1076:38: 1076:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1076:9: 1076:46
    }
}

const RTM_F_FIB_MATCH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:895:28: 895:36

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:895:39: 895:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:895:1: 895:46
    }
}

const IP_ADD_SOURCE_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:819:37: 819:44

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/mod.rs:819:47: 819:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:819:1: 819:50
    }
}

const IPOPT_TS_PRESPEC: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1301:29: 1301:31

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1301:34: 1301:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1301:1: 1301:36
    }
}

const EALREADY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:482:21: 482:28

    bb0: {
        _0 = const 114_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:482:31: 482:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:482:1: 482:35
    }
}

const IFA_ADDRESS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1367:24: 1367:34

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1367:37: 1367:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1367:1: 1367:39
    }
}

const SYS_mount: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:244:22: 244:30

    bb0: {
        _0 = const 165_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:244:33: 244:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:244:1: 244:37
    }
}

const SKF_AD_PAY_OFFSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1885:30: 1885:37

    bb0: {
        _0 = const 52_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1885:40: 1885:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1885:1: 1885:43
    }
}

const TIOCM_SR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:211:21: 211:28

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:211:31: 211:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:211:1: 211:37
    }
}

const NF_IP6_PRI_LAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2338:28: 2338:35

    bb0: {
        _0 = const unix::INT_MAX;        // scope 0 at src/unix/linux_like/linux/mod.rs:2338:38: 2338:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2338:1: 2338:48
    }
}

const NFT_REG_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2802:22: 2802:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2802:32: 2802:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2802:1: 2802:34
    }
}

input_keymap_entry::scancode::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:214:32: 214:34

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:214:32: 214:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:214:32: 214:34
    }
}

const USRQUOTA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:228:21: 228:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/mod.rs:228:31: 228:32
        return;                          // scope 0 at src/unix/mod.rs:228:1: 228:33
    }
}

const DCCP_SOCKOPT_QPOLICY_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:741:36: 741:43

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:741:46: 741:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:741:1: 741:49
    }
}

const AF_IPX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:687:19: 687:26

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:687:29: 687:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:687:1: 687:31
    }
}

const CLONE_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1141:21: 1141:28

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/linux_like/mod.rs:1141:31: 1141:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1141:1: 1141:42
    }
}

const REG_RDI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:766:20: 766:27

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:766:30: 766:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:766:1: 766:32
    }
}

const _SC_THREAD_PRIORITY_SCHEDULING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1227:43: 1227:50

    bb0: {
        _0 = const 79_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1227:53: 1227:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1227:1: 1227:56
    }
}

const SYS_setitimer: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:117:26: 117:34

    bb0: {
        _0 = const 38_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:117:37: 117:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:117:1: 117:40
    }
}

const PR_SET_TIMERSLACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1719:30: 1719:37

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1719:40: 1719:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1719:1: 1719:43
    }
}

const SO_SECURITY_ENCRYPTION_NETWORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:46:43: 46:50

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:46:53: 46:55
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:46:1: 46:56
    }
}

const NFQNL_CFG_CMD_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2181:31: 2181:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2181:41: 2181:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2181:1: 2181:43
    }
}

const RTPROT_KERNEL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2619:26: 2619:35

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2619:38: 2619:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2619:1: 2619:40
    }
}

const EPERM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3121:18: 3121:25

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3121:28: 3121:29
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3121:1: 3121:30
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::posix_spawnattr_t) -> linux::posix_spawnattr_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::posix_spawnattr_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const S_IROTH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:531:20: 531:28

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/mod.rs:531:31: 531:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:531:1: 531:33
    }
}

const STA_PPSSIGNAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1057:26: 1057:33

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1057:36: 1057:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1057:1: 1057:43
    }
}

const TCP_THIN_LINEAR_TIMEOUTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:983:37: 983:44

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:983:47: 983:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:983:1: 983:50
    }
}

__c_anonymous_ptrace_syscall_info_entry::args::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:330:29: 330:30

    bb0: {
        _0 = const 6_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:330:29: 330:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:330:29: 330:30
    }
}

const MINSIGSTKSZ: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:633:24: 633:32

    bb0: {
        _0 = const 2048_usize;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:633:35: 633:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:633:1: 633:40
    }
}

const PTHREAD_MUTEX_STALLED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1520:34: 1520:41

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1520:44: 1520:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1520:1: 1520:46
    }
}

const SYS_signalfd4: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:368:26: 368:34

    bb0: {
        _0 = const 289_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:368:37: 368:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:368:1: 368:41
    }
}

const ETH_P_QINQ2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2021:24: 2021:31

    bb0: {
        _0 = const 37376_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2021:34: 2021:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2021:1: 2021:41
    }
}

fn non_exhaustive::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &open_how) -> open_how {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::non_exhaustive::open_how; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const NETLINK_SCSITRANSPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2480:34: 2480:41

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2480:44: 2480:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2480:1: 2480:47
    }
}

const NFT_QUEUE_FLAG_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2956:32: 2956:39

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2956:42: 2956:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2956:1: 2956:47
    }
}

const ABDAY_5: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1072:28: 1072:37

    bb0: {
        _0 = const 131076_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1072:40: 1072:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1072:9: 1072:48
    }
}

const RTM_GETSTATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:891:25: 891:28

    bb0: {
        _0 = const 94_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:891:31: 891:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:891:1: 891:34
    }
}

const IP_DROP_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:816:31: 816:38

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/mod.rs:816:41: 816:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:816:1: 816:44
    }
}

const IPOPT_TS: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1298:21: 1298:23

    bb0: {
        _0 = const IPOPT_TIMESTAMP;      // scope 0 at src/unix/linux_like/mod.rs:1298:26: 1298:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1298:1: 1298:42
    }
}

const ECONNREFUSED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:479:25: 479:32

    bb0: {
        _0 = const 111_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:479:35: 479:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:479:1: 479:39
    }
}

linux_like::utsname::nodename::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:243:34: 243:36

    bb0: {
        _0 = const 65_usize;             // scope 0 at src/unix/linux_like/mod.rs:243:34: 243:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:243:34: 243:36
    }
}

const IFF_DORMANT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1362:24: 1362:31

    bb0: {
        _0 = const 131072_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1362:34: 1362:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1362:1: 1362:42
    }
}

const SYS_sync: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:241:21: 241:29

    bb0: {
        _0 = const 162_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:241:32: 241:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:241:1: 241:36
    }
}

const SKF_AD_ALU_XOR_X: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1882:29: 1882:36

    bb0: {
        _0 = const 40_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1882:39: 1882:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1882:1: 1882:42
    }
}

const TIOCM_DTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:208:22: 208:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:208:32: 208:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:208:1: 208:38
    }
}

const NF_IP6_PRI_NAT_SRC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2335:31: 2335:38

    bb0: {
        _0 = const 100_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2335:41: 2335:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2335:1: 2335:45
    }
}

const NFT_USERDATA_MAXLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2798:32: 2798:39

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2798:42: 2798:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2798:1: 2798:46
    }
}

const DT_REG: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:218:19: 218:21

    bb0: {
        _0 = const 8_u8;                 // scope 0 at src/unix/mod.rs:218:24: 218:25
        return;                          // scope 0 at src/unix/mod.rs:218:1: 218:26
    }
}

const DCCP_SOCKOPT_CCID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:738:30: 738:37

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:738:40: 738:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:738:1: 738:43
    }
}

const AF_LOCAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:684:21: 684:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:684:31: 684:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:684:1: 684:33
    }
}

const CLONE_NEWUSER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1138:26: 1138:33

    bb0: {
        _0 = const 268435456_i32;        // scope 0 at src/unix/linux_like/mod.rs:1138:36: 1138:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1138:1: 1138:47
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::Dl_info) -> linux_like::Dl_info {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::Dl_info; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const REG_R13: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:763:20: 763:27

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:763:30: 763:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:763:1: 763:32
    }
}

const _SC_THREAD_THREADS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1224:35: 1224:42

    bb0: {
        _0 = const 76_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1224:45: 1224:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1224:1: 1224:48
    }
}

const SYS_nanosleep: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:114:26: 114:34

    bb0: {
        _0 = const 35_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:114:37: 114:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:114:1: 114:40
    }
}

const PR_TSC_SIGSEGV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1714:27: 1714:34

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1714:37: 1714:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1714:1: 1714:39
    }
}

const SO_SNDTIMEO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:41:24: 41:31

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:41:34: 41:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:41:1: 41:37
    }
}

const NFQA_UID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2165:21: 2165:28

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2165:31: 2165:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2165:1: 2165:34
    }
}

const RTN_XRESOLVE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2615:25: 2615:34

    bb0: {
        _0 = const 11_u8;                // scope 0 at src/unix/linux_like/linux/mod.rs:2615:37: 2615:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2615:1: 2615:40
    }
}

const SO_EE_ORIGIN_ICMP6: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3116:31: 3116:33

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3116:36: 3116:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3116:1: 3116:38
    }
}

linux::posix_spawn_file_actions_t::__pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:463:26: 463:28

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:463:26: 463:28
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:463:26: 463:28
    }
}

const S_IRWXO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:528:20: 528:28

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/mod.rs:528:31: 528:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:528:1: 528:33
    }
}

const STA_DEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1054:20: 1054:27

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1054:30: 1054:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1054:1: 1054:37
    }
}

const TCP_QUICKACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:974:25: 974:32

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/mod.rs:974:35: 974:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:974:1: 974:38
    }
}

const MCL_CURRENT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:629:24: 629:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:629:34: 629:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:629:1: 629:41
    }
}

const PTHREAD_MUTEX_RECURSIVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1517:36: 1517:43

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1517:46: 1517:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1517:1: 1517:48
    }
}

const SYS_timerfd_settime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:365:32: 365:40

    bb0: {
        _0 = const 286_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:365:43: 365:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:365:1: 365:47
    }
}

const ETH_P_80221: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2018:24: 2018:31

    bb0: {
        _0 = const 35095_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2018:34: 2018:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2018:1: 2018:41
    }
}

const NETLINK_DNRTMSG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2477:28: 2477:35

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2477:38: 2477:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2477:1: 2477:41
    }
}

const NFT_LIMIT_F_INV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2952:28: 2952:35
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2952:38: 2952:44

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2952:38: 2952:44
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2952:38: 2952:44
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2952:38: 2952:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2952:1: 2952:45
    }
}

const ABDAY_2: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1069:28: 1069:37

    bb0: {
        _0 = const 131073_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1069:40: 1069:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1069:9: 1069:48
    }
}

const TCA_HW_OFFLOAD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:887:27: 887:37

    bb0: {
        _0 = const 12_u16;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:887:40: 887:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:887:1: 887:43
    }
}

const IP_MULTICAST_TTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:813:29: 813:36

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/mod.rs:813:39: 813:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:813:1: 813:42
    }
}

const MAX_IPOPTLEN: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1295:25: 1295:27

    bb0: {
        _0 = const 40_u8;                // scope 0 at src/unix/linux_like/mod.rs:1295:30: 1295:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1295:1: 1295:33
    }
}

const ESHUTDOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:476:22: 476:29

    bb0: {
        _0 = const 108_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:476:32: 476:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:476:1: 476:36
    }
}

const F_ULOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1357:20: 1357:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1357:30: 1357:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1357:1: 1357:32
    }
}

const SYS_adjtimex: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:238:25: 238:33

    bb0: {
        _0 = const 159_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:238:36: 238:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:238:1: 238:40
    }
}

const SKF_AD_HATYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1879:26: 1879:33

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1879:36: 1879:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1879:1: 1879:39
    }
}

const BLKSSZGET: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:195:22: 195:29

    bb0: {
        _0 = const 4712_u64;             // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:195:32: 195:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:195:1: 195:39
    }
}

const NF_IP6_PRI_NAT_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2332:31: 2332:38

    bb0: {
        _0 = const -100_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2332:41: 2332:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2332:1: 2332:46
    }
}

const NFT_CHAIN_MAXNAMELEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2795:33: 2795:40

    bb0: {
        _0 = const 256_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2795:43: 2795:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2795:1: 2795:47
    }
}

const DT_CHR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/mod.rs:215:19: 215:21

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/mod.rs:215:24: 215:25
        return;                          // scope 0 at src/unix/mod.rs:215:1: 215:26
    }
}

const DCCP_SOCKOPT_SEND_CSCOV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:735:36: 735:43

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:735:46: 735:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:735:1: 735:49
    }
}

const SOL_ALG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:680:20: 680:27

    bb0: {
        _0 = const 279_i32;              // scope 0 at src/unix/linux_like/mod.rs:680:30: 680:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:680:1: 680:34
    }
}

const CLONE_NEWCGROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1135:28: 1135:35

    bb0: {
        _0 = const 33554432_i32;         // scope 0 at src/unix/linux_like/mod.rs:1135:38: 1135:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1135:1: 1135:49
    }
}

b64::sysinfo::loads::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:39:26: 39:27

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:39:26: 39:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:39:26: 39:27
    }
}

const REG_R10: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:760:20: 760:27

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:760:30: 760:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:760:1: 760:32
    }
}

const _SC_THREAD_DESTRUCTOR_ITERATIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1221:45: 1221:52

    bb0: {
        _0 = const 73_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1221:55: 1221:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1221:1: 1221:58
    }
}

const SYS_dup: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:111:20: 111:28

    bb0: {
        _0 = const 32_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:111:31: 111:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:111:1: 111:34
    }
}

const PR_GET_TSC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1711:23: 1711:30

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1711:33: 1711:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1711:1: 1711:36
    }
}

const SO_RCVLOWAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:38:24: 38:31

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:38:34: 38:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:38:1: 38:37
    }
}

const NFQA_CAP_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2162:25: 2162:32

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2162:35: 2162:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2162:1: 2162:38
    }
}

const RTN_PROHIBIT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2612:25: 2612:34

    bb0: {
        _0 = const 8_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2612:37: 2612:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2612:1: 2612:39
    }
}

const SO_EE_ORIGIN_NONE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3113:30: 3113:32

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:3113:35: 3113:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3113:1: 3113:37
    }
}

const S_IXGRP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:525:20: 525:28

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:525:31: 525:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:525:1: 525:33
    }
}

const STA_PPSTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1051:24: 1051:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1051:34: 1051:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1051:1: 1051:41
    }
}

const TCP_DEFER_ACCEPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:971:29: 971:36

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:971:39: 971:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:971:1: 971:41
    }
}

const PTRACE_PEEKSIGINFO_SHARED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:625:38: 625:46

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:625:49: 625:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:625:1: 625:51
    }
}

const MPOL_F_RELATIVE_NODES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1502:34: 1502:41
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1502:44: 1502:51

    bb0: {
        _1 = CheckedShl(const 1_i32, const 14_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1502:44: 1502:51
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 14_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1502:44: 1502:51
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1502:44: 1502:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1502:1: 1502:52
    }
}

const SYS_timerfd_create: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:362:31: 362:39

    bb0: {
        _0 = const 283_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:362:42: 362:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:362:1: 362:46
    }
}

const ETH_P_FCOE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2015:23: 2015:30

    bb0: {
        _0 = const 35078_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2015:33: 2015:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2015:1: 2015:40
    }
}

const NETLINK_CONNECTOR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2474:30: 2474:37

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2474:40: 2474:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2474:1: 2474:43
    }
}

const NFT_CT_BYTES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2947:25: 2947:32

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2947:35: 2947:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2947:1: 2947:38
    }
}

Elf32_Ehdr::e_ident::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:345:34: 345:36

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:345:34: 345:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:345:34: 345:36
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::sigval) -> unix::sigval {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::sigval;            // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const TCA_PAD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:884:20: 884:30

    bb0: {
        _0 = const 9_u16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:884:33: 884:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:884:1: 884:35
    }
}

const IP_CHECKSUM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:810:24: 810:31

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/mod.rs:810:34: 810:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:810:1: 810:37
    }
}

const IPOPT_OLEN: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1292:23: 1292:25

    bb0: {
        _0 = const 1_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1292:28: 1292:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1292:1: 1292:30
    }
}

const ENOBUFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:473:20: 473:27

    bb0: {
        _0 = const 105_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:473:30: 473:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:473:1: 473:34
    }
}

const F_LOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1354:19: 1354:26

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1354:29: 1354:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1354:1: 1354:31
    }
}

const SYS__sysctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:235:24: 235:32

    bb0: {
        _0 = const 156_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:235:35: 235:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:235:1: 235:39
    }
}

const SKF_AD_NLATTR_NEST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1876:31: 1876:38

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1876:41: 1876:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1876:1: 1876:44
    }
}

const TIOCGICOUNT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:192:24: 192:31

    bb0: {
        _0 = const 21597_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:192:34: 192:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:192:1: 192:41
    }
}

const NF_IP6_PRI_SELINUX_FIRST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2329:37: 2329:44

    bb0: {
        _0 = const -225_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2329:47: 2329:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2329:1: 2329:52
    }
}

const IN_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2790:23: 2790:30

    bb0: {
        _0 = const b64::x86_64::O_CLOEXEC; // scope 0 at src/unix/linux_like/linux/mod.rs:2790:33: 2790:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2790:1: 2790:43
    }
}

const SIG_ERR: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/mod.rs:211:20: 211:32

    bb0: {
        _0 = Not(const 0_usize);         // scope 0 at src/unix/mod.rs:211:35: 211:37
        return;                          // scope 0 at src/unix/mod.rs:211:1: 211:54
    }
}

const DCCP_SOCKOPT_CHANGE_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:732:34: 732:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:732:44: 732:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:732:1: 732:46
    }
}

const SOL_NETLINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:677:24: 677:31

    bb0: {
        _0 = const 270_i32;              // scope 0 at src/unix/linux_like/mod.rs:677:34: 677:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:677:1: 677:38
    }
}

const CLONE_DETACHED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1132:27: 1132:34

    bb0: {
        _0 = const 4194304_i32;          // scope 0 at src/unix/linux_like/mod.rs:1132:37: 1132:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1132:1: 1132:46
    }
}

const GS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:755:15: 755:22

    bb0: {
        _0 = const 26_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:755:25: 755:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:755:1: 755:28
    }
}

const _SC_GETPW_R_SIZE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1218:33: 1218:40

    bb0: {
        _0 = const 70_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1218:43: 1218:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1218:1: 1218:46
    }
}

const SYS_shmget: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:108:23: 108:31

    bb0: {
        _0 = const 29_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:108:34: 108:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:108:1: 108:37
    }
}

const PR_SET_SECCOMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1706:27: 1706:34

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1706:37: 1706:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1706:1: 1706:40
    }
}

const SO_REUSEPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:35:25: 35:32

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:35:35: 35:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:35:1: 35:38
    }
}

const NFQA_PAYLOAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2159:25: 2159:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2159:35: 2159:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2159:1: 2159:38
    }
}

const RTN_MULTICAST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2609:26: 2609:35

    bb0: {
        _0 = const 5_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2609:38: 2609:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2609:1: 2609:40
    }
}

const REG_ERANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3108:23: 3108:30

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3108:33: 3108:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3108:1: 3108:36
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::posix_spawn_file_actions_t) -> linux::posix_spawn_file_actions_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::posix_spawn_file_actions_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const S_IWUSR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:522:20: 522:28

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/mod.rs:522:31: 522:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:522:1: 522:35
    }
}

const MOD_NANO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1048:21: 1048:29

    bb0: {
        _0 = const ADJ_NANO;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1048:32: 1048:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1048:1: 1048:41
    }
}

const TCP_KEEPCNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:968:24: 968:31

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:968:34: 968:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:968:1: 968:36
    }
}

const PTRACE_SETFPXREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:622:30: 622:38

    bb0: {
        _0 = const 19_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:622:41: 622:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:622:1: 622:44
    }
}

const MPOL_INTERLEAVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1499:28: 1499:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1499:38: 1499:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1499:1: 1499:40
    }
}

const SYS_utimensat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:359:26: 359:34

    bb0: {
        _0 = const 280_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:359:37: 359:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:359:1: 359:41
    }
}

const ETH_P_MVRP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2012:23: 2012:30

    bb0: {
        _0 = const 35061_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2012:33: 2012:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2012:1: 2012:40
    }
}

const NETLINK_ISCSI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2471:26: 2471:33

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2471:36: 2471:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2471:1: 2471:38
    }
}

const NFT_CT_PROTO_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2944:29: 2944:36

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2944:39: 2944:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2944:1: 2944:42
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf32_Ehdr) -> Elf32_Ehdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf32_Ehdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sockaddr_can) -> sockaddr_can {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::sockaddr_can; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const RWF_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:879:21: 879:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:879:31: 879:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:879:1: 879:42
    }
}

const IP_RECVORIGDSTADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:807:31: 807:38

    bb0: {
        _0 = const IP_ORIGDSTADDR;       // scope 0 at src/unix/linux_like/mod.rs:807:41: 807:55
        return;                          // scope 0 at src/unix/linux_like/mod.rs:807:1: 807:56
    }
}

const MAXTTL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1289:19: 1289:21

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/mod.rs:1289:24: 1289:27
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1289:1: 1289:28
    }
}

const ENETRESET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:470:22: 470:29

    bb0: {
        _0 = const 102_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:470:32: 470:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:470:1: 470:36
    }
}

const S_IEXEC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1350:20: 1350:26

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1350:29: 1350:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1350:1: 1350:32
    }
}

const SYS_vhangup: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:232:24: 232:32

    bb0: {
        _0 = const 153_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:232:35: 232:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:232:1: 232:39
    }
}

const SKF_AD_PKTTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1873:27: 1873:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1873:37: 1873:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1873:1: 1873:39
    }
}

const TIOCSERGETMULTI: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:189:28: 189:35

    bb0: {
        _0 = const 21594_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:189:38: 189:44
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:189:1: 189:45
    }
}

const NF_IP6_PRI_FIRST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2326:29: 2326:36

    bb0: {
        _0 = const unix::INT_MIN;        // scope 0 at src/unix/linux_like/linux/mod.rs:2326:39: 2326:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2326:1: 2326:49
    }
}

const IN_ISDIR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2774:21: 2774:24

    bb0: {
        _0 = const 1073741824_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2774:27: 2774:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2774:1: 2774:39
    }
}

const unix::INT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:207:20: 207:25

    bb0: {
        _0 = const i32::MAX;             // scope 0 at src/unix/mod.rs:207:28: 207:38
        return;                          // scope 0 at src/unix/mod.rs:207:1: 207:39
    }
}

const DCCP_SOCKOPT_PACKET_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:729:37: 729:44

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:729:47: 729:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:729:1: 729:49
    }
}

const SOL_NETBEUI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:674:24: 674:31

    bb0: {
        _0 = const 267_i32;              // scope 0 at src/unix/linux_like/mod.rs:674:34: 674:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:674:1: 674:38
    }
}

const CLONE_SETTLS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1129:25: 1129:32

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/mod.rs:1129:35: 1129:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1129:1: 1129:43
    }
}

const DS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:752:15: 752:22

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:752:25: 752:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:752:1: 752:28
    }
}

const _SC_THREADS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1215:24: 1215:31

    bb0: {
        _0 = const 67_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1215:34: 1215:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1215:1: 1215:37
    }
}

const SYS_msync: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:105:22: 105:30

    bb0: {
        _0 = const 26_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:105:33: 105:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:105:1: 105:36
    }
}

const PR_ENDIAN_LITTLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1702:29: 1702:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1702:39: 1702:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1702:1: 1702:41
    }
}

const SO_PRIORITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:32:24: 32:31

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:32:34: 32:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:32:1: 32:37
    }
}

const NFQA_IFINDEX_PHYSINDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2156:35: 2156:42

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2156:45: 2156:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2156:1: 2156:47
    }
}

const RTN_LOCAL: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2606:22: 2606:31

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2606:34: 2606:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2606:1: 2606:36
    }
}

const REG_EPAREN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3105:23: 3105:30

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3105:33: 3105:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3105:1: 3105:35
    }
}

const S_IFMT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:519:19: 519:27

    bb0: {
        _0 = const 61440_u32;            // scope 0 at src/unix/linux_like/mod.rs:519:30: 519:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:519:1: 519:36
    }
}

const MOD_CLKA: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1045:21: 1045:29

    bb0: {
        _0 = const ADJ_OFFSET_SINGLESHOT; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1045:32: 1045:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1045:1: 1045:54
    }
}

const TCP_CORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:965:21: 965:28

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:965:31: 965:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:965:1: 965:33
    }
}

const PTRACE_GETFPREGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:619:29: 619:37

    bb0: {
        _0 = const 14_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:619:40: 619:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:619:1: 619:43
    }
}

fn IPTOS_ECN(_1: u8) -> u8 {
    debug x => _1;                       // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1606:40: 1606:42
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1607:9: 1607:10

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1607:9: 1607:10
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1607:9: 1607:10
        _0 = BitAnd(move _2, const linux_like::IPTOS_ECN_MASK); // scope 0 at src/unix/linux_like/mod.rs:1607:9: 1607:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1607:28: 1607:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &user) -> user {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::user; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const MPOL_DEFAULT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1496:25: 1496:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1496:35: 1496:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1496:1: 1496:37
    }
}

const SYS_sync_file_range: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:356:32: 356:40

    bb0: {
        _0 = const 277_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:356:43: 356:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:356:1: 356:47
    }
}

const ETH_P_TIPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2009:23: 2009:30

    bb0: {
        _0 = const 35018_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2009:33: 2009:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2009:1: 2009:40
    }
}

const NETLINK_NFLOG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2468:26: 2468:33

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2468:36: 2468:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2468:1: 2468:38
    }
}

const NFT_CT_DST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2941:23: 2941:30

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2941:33: 2941:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2941:1: 2941:35
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linger) -> linger {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linger;            // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_GET_SYSCALL_INFO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:872:36: 872:44

    bb0: {
        _0 = const 16910_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:872:47: 872:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:872:1: 872:54
    }
}

const IP_PASSSEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:804:23: 804:30

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/mod.rs:804:33: 804:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:804:1: 804:36
    }
}

const IPOPT_SSRR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1286:23: 1286:25
    let mut _1: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1286:28: 1286:45

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1286:28: 1286:45
        _1 = BitOr(const 9_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1286:28: 1286:45
        _0 = BitOr(move _1, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1286:28: 1286:58
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/mod.rs:1286:57: 1286:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1286:1: 1286:59
    }
}

const EADDRNOTAVAIL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:467:26: 467:33

    bb0: {
        _0 = const 99_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:467:36: 467:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:467:1: 467:39
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::stat64) -> b64::x86_64::stat64 {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::stat64; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const POSIX_MADV_SEQUENTIAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1346:34: 1346:41

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1346:44: 1346:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1346:1: 1346:46
    }
}

const SYS_munlock: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:229:24: 229:32

    bb0: {
        _0 = const 150_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:229:35: 229:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:229:1: 229:39
    }
}

const CLOSE_RANGE_CLOEXEC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1868:32: 1868:40
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1868:43: 1868:49

    bb0: {
        _1 = CheckedShl(const 1_u32, const 2_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1868:43: 1868:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 2_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1868:43: 1868:49
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1868:43: 1868:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1868:1: 1868:50
    }
}

const TIOCSLCKTRMIOS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:186:27: 186:34

    bb0: {
        _0 = const 21591_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:186:37: 186:43
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:186:1: 186:44
    }
}

const NF_IP6_LOCAL_OUT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2322:29: 2322:36

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2322:39: 2322:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2322:1: 2322:41
    }
}

const KEYCTL_INSTANTIATE_IOV: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2768:35: 2768:38

    bb0: {
        _0 = const 20_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2768:41: 2768:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2768:1: 2768:44
    }
}

fn unix::<impl at src/unix/mod.rs:44:1: 48:2>::clone(_1: &unix::DIR) -> unix::DIR {
    debug self => _1;                    // in scope 0 at src/unix/mod.rs:45:14: 45:19
    let mut _0: unix::DIR;               // return place in scope 0 at src/unix/mod.rs:45:24: 45:27

    bb0: {
        return;                          // scope 0 at src/unix/mod.rs:47:6: 47:6
    }
}

const PF_NFC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:724:19: 724:26

    bb0: {
        _0 = const AF_NFC;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:724:29: 724:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:724:1: 724:36
    }
}

const SOL_ATM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:671:20: 671:27

    bb0: {
        _0 = const 264_i32;              // scope 0 at src/unix/linux_like/mod.rs:671:30: 671:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:671:1: 671:34
    }
}

const CLONE_THREAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1126:25: 1126:32

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/mod.rs:1126:35: 1126:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1126:1: 1126:43
    }
}

const SS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:749:15: 749:22

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:749:25: 749:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:749:1: 749:28
    }
}

const _SC_2_LOCALEDEF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1212:28: 1212:35

    bb0: {
        _0 = const 52_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1212:38: 1212:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1212:1: 1212:41
    }
}

const SYS_select: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:102:23: 102:31

    bb0: {
        _0 = const 23_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:102:34: 102:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:102:1: 102:37
    }
}

const PR_GET_ENDIAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1699:26: 1699:33

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1699:36: 1699:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1699:1: 1699:39
    }
}

const SO_KEEPALIVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:29:25: 29:32

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:29:35: 29:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:29:1: 29:37
    }
}

const NFQA_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2153:27: 2153:34

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2153:37: 2153:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2153:1: 2153:39
    }
}

const RTA_MFC_STATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2602:26: 2602:36

    bb0: {
        _0 = const 17_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2602:39: 2602:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2602:1: 2602:42
    }
}

const REG_EESCAPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3102:24: 3102:31

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3102:34: 3102:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3102:1: 3102:36
    }
}

const S_IFREG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:516:20: 516:28

    bb0: {
        _0 = const 32768_u32;            // scope 0 at src/unix/linux_like/mod.rs:516:31: 516:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:516:1: 516:37
    }
}

const MOD_STATUS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1042:23: 1042:31

    bb0: {
        _0 = const ADJ_STATUS;           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1042:34: 1042:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1042:1: 1042:45
    }
}

const IPV6_PMTUDISC_OMIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:961:31: 961:38

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:961:41: 961:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:961:1: 961:43
    }
}

const ENAVAIL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:615:20: 615:27

    bb0: {
        _0 = const 119_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:615:30: 615:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:615:1: 615:34
    }
}

fn IPOPT_COPIED(_1: u8) -> u8 {
    debug o => _1;                       // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1594:43: 1594:45
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/mod.rs:1595:9: 1595:10

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1595:9: 1595:10
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1595:9: 1595:10
        _0 = BitAnd(move _2, const IPOPT_COPY); // scope 0 at src/unix/linux_like/mod.rs:1595:9: 1595:23
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1595:22: 1595:23
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const RTLD_NODELETE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1490:26: 1490:33

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1490:36: 1490:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1490:1: 1490:43
    }
}

const SYS_get_robust_list: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:353:32: 353:40

    bb0: {
        _0 = const 274_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:353:43: 353:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:353:1: 353:47
    }
}

const ETH_P_AOE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2006:22: 2006:29

    bb0: {
        _0 = const 34978_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2006:32: 2006:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2006:1: 2006:39
    }
}

const NETLINK_USERSOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2465:29: 2465:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2465:39: 2465:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2465:1: 2465:41
    }
}

const NFT_CT_HELPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2938:26: 2938:33

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2938:36: 2938:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2938:1: 2938:38
    }
}

fn linux::<impl at src/macros.rs:105:17: 107:18>::clone(_1: &__c_anonymous_sockaddr_can_can_addr) -> __c_anonymous_sockaddr_can_can_addr {
    debug self => _1;                    // in scope 0 at src/macros.rs:106:30: 106:35
    let mut _0: unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr; // return place in scope 0 at src/macros.rs:106:40: 106:42

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:106:45: 106:50
        return;                          // scope 0 at src/macros.rs:106:52: 106:52
    }
}

const PTRACE_INTERRUPT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:869:29: 869:37

    bb0: {
        _0 = const 16903_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:869:40: 869:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:869:1: 869:47
    }
}

const IP_FREEBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:801:24: 801:31

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:801:34: 801:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:801:1: 801:37
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &nl_pktinfo) -> nl_pktinfo {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::nl_pktinfo; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const IPOPT_TIMESTAMP: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1283:28: 1283:30

    bb0: {
        _0 = BitOr(const 4_u8, const IPOPT_MEASUREMENT); // scope 0 at src/unix/linux_like/mod.rs:1283:33: 1283:54
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1283:1: 1283:55
    }
}

const EPFNOSUPPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:464:25: 464:32

    bb0: {
        _0 = const 96_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:464:35: 464:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:464:1: 464:38
    }
}

b64::x86_64::stat::__unused::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:93:25: 93:26

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:93:25: 93:26
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:93:25: 93:26
    }
}

const GLOB_NOMATCH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1342:25: 1342:32

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1342:35: 1342:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1342:1: 1342:37
    }
}

const SYS_sched_get_priority_min: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:226:39: 226:47

    bb0: {
        _0 = const 147_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:226:50: 226:53
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:226:1: 226:54
    }
}

const MFD_HUGE_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1863:26: 1863:34

    bb0: {
        _0 = const 63_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1863:37: 1863:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1863:1: 1863:40
    }
}

const TIOCSERGWILD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:183:25: 183:32

    bb0: {
        _0 = const 21588_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:183:35: 183:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:183:1: 183:42
    }
}

const NF_IP6_PRE_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2319:31: 2319:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2319:41: 2319:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2319:1: 2319:43
    }
}

const KEYCTL_GET_SECURITY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2765:32: 2765:35

    bb0: {
        _0 = const 17_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2765:38: 2765:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2765:1: 2765:41
    }
}

const AF_XDP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:721:19: 721:26

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:721:29: 721:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:721:1: 721:32
    }
}

const SOL_DECNET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:668:23: 668:30

    bb0: {
        _0 = const 261_i32;              // scope 0 at src/unix/linux_like/mod.rs:668:33: 668:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:668:1: 668:37
    }
}

const CLONE_PTRACE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1123:25: 1123:32

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/mod.rs:1123:35: 1123:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1123:1: 1123:42
    }
}

const CS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:746:15: 746:22

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:746:25: 746:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:746:1: 746:28
    }
}

const _SC_2_FORT_DEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1209:27: 1209:34

    bb0: {
        _0 = const 49_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1209:37: 1209:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1209:1: 1209:40
    }
}

const SYS_writev: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:99:23: 99:31

    bb0: {
        _0 = const 20_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:99:34: 99:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:99:1: 99:37
    }
}

const PR_TIMING_TIMESTAMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1694:32: 1694:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1694:42: 1694:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1694:1: 1694:44
    }
}

const SO_BROADCAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:26:25: 26:32

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:26:35: 26:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:26:1: 26:37
    }
}

const NFQA_PACKET_HDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2150:28: 2150:35

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2150:38: 2150:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2150:1: 2150:40
    }
}

const RTA_MP_ALGO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2599:24: 2599:34

    bb0: {
        _0 = const 14_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2599:37: 2599:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2599:1: 2599:40
    }
}

const REG_BADPAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3099:23: 3099:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3099:33: 3099:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3099:1: 3099:35
    }
}

const S_IFCHR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:513:20: 513:28

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/mod.rs:513:31: 513:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:513:1: 513:36
    }
}

const MOD_FREQUENCY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1039:26: 1039:34

    bb0: {
        _0 = const ADJ_FREQUENCY;        // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1039:37: 1039:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1039:1: 1039:51
    }
}

const IPV6_PMTUDISC_DO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:958:29: 958:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:958:39: 958:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:958:1: 958:41
    }
}

const EDEADLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:612:22: 612:29

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:612:32: 612:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:612:1: 612:35
    }
}

fn W_EXITCODE(_1: i32, _2: i32) -> i32 {
    debug ret => _1;                     // in scope 0 at src/macros.rs:259:36: 259:40
    debug sig => _2;                     // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1582:62: 1582:69
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1583:9: 1583:19
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1583:10: 1583:13
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1583:22: 1583:25

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1583:9: 1583:19
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1583:10: 1583:13
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1583:10: 1583:13
        _3 = Shl(move _4, const 8_i32);  // scope 0 at src/unix/linux_like/mod.rs:1583:9: 1583:19
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1583:18: 1583:19
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1583:22: 1583:25
        _5 = _2;                         // scope 0 at src/unix/linux_like/mod.rs:1583:22: 1583:25
        _0 = BitOr(move _3, move _5);    // scope 0 at src/unix/linux_like/mod.rs:1583:9: 1583:25
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1583:24: 1583:25
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1583:24: 1583:25
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_NODIRATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1486:26: 1486:35

    bb0: {
        _0 = const 2048_u64;             // scope 0 at src/unix/linux_like/linux/mod.rs:1486:38: 1486:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1486:1: 1486:43
    }
}

const SYS_ppoll: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:350:22: 350:30

    bb0: {
        _0 = const 271_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:350:33: 350:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:350:1: 350:37
    }
}

const ETH_P_LINK_CTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2003:27: 2003:34

    bb0: {
        _0 = const 34924_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2003:37: 2003:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2003:1: 2003:44
    }
}

const NLA_ALIGNTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2461:24: 2461:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2461:34: 2461:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2461:1: 2461:36
    }
}

const NFT_CT_MARK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2935:24: 2935:31

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2935:34: 2935:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2935:1: 2935:36
    }
}

const PTRACE_GETREGSET: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:866:29: 866:37

    bb0: {
        _0 = const 16900_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:866:40: 866:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:866:1: 866:47
    }
}

const IP_RECVTTL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:798:23: 798:30

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/mod.rs:798:33: 798:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:798:1: 798:36
    }
}

const IPOPT_NOOP: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1280:23: 1280:25

    bb0: {
        _0 = BitOr(const 1_u8, const IPOPT_CONTROL); // scope 0 at src/unix/linux_like/mod.rs:1280:28: 1280:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1280:1: 1280:46
    }
}

const EPROTONOSUPPORT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:461:28: 461:35

    bb0: {
        _0 = const 93_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:461:38: 461:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:461:1: 461:41
    }
}

const GLOB_NOESCAPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1338:26: 1338:33
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1338:36: 1338:42

    bb0: {
        _1 = CheckedShl(const 1_i32, const 6_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1338:36: 1338:42
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 6_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1338:36: 1338:42
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1338:36: 1338:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1338:1: 1338:43
    }
}

const SYS_sched_setscheduler: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:223:35: 223:43

    bb0: {
        _0 = const 144_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:223:46: 223:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:223:1: 223:50
    }
}

const MFD_HUGE_1GB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1860:25: 1860:33

    bb0: {
        _0 = const 2013265920_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1860:36: 1860:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1860:1: 1860:47
    }
}

const FIOCLEX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:180:20: 180:27

    bb0: {
        _0 = const 21585_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:180:30: 180:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:180:1: 180:37
    }
}

const NF_IP_PRI_CONNTRACK_HELPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2314:39: 2314:46

    bb0: {
        _0 = const 300_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2314:49: 2314:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2314:1: 2314:53
    }
}

const KEYCTL_SET_REQKEY_KEYRING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2762:38: 2762:41

    bb0: {
        _0 = const 14_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2762:44: 2762:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2762:1: 2762:47
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &sock_filter) -> sock_filter {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::sock_filter; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AF_MPLS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:718:20: 718:27

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:718:30: 718:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:718:1: 718:33
    }
}

const SOL_IPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:665:21: 665:28

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/linux_like/mod.rs:665:31: 665:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:665:1: 665:34
    }
}

const CLONE_FS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1120:21: 1120:28

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/mod.rs:1120:31: 1120:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1120:1: 1120:37
    }
}

const RDI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:743:16: 743:23

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:743:26: 743:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:743:1: 743:29
    }
}

const _SC_2_VERSION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1206:26: 1206:33

    bb0: {
        _0 = const 46_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1206:36: 1206:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1206:1: 1206:39
    }
}

const SYS_pread64: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:96:24: 96:32

    bb0: {
        _0 = const 17_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:96:35: 96:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:96:1: 96:38
    }
}

const PR_GET_TIMING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1691:26: 1691:33

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1691:36: 1691:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1691:1: 1691:39
    }
}

const SO_TYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:23:20: 23:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:23:30: 23:31
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:23:1: 23:32
    }
}

const NFQNL_MSG_CONFIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2146:29: 2146:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2146:39: 2146:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2146:1: 2146:41
    }
}

const RTA_FLOW: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2596:21: 2596:31

    bb0: {
        _0 = const 11_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2596:34: 2596:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2596:1: 2596:37
    }
}

const REG_NOTEOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3095:23: 3095:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3095:33: 3095:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3095:1: 3095:35
    }
}

fn BPF_JUMP(_1: u16, _2: u32, _3: u8, _4: u8) -> sock_filter {
    debug code => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    debug k => _2;                       // in scope 0 at src/macros.rs:243:43: 243:47
    debug jt => _3;                      // in scope 0 at src/macros.rs:243:43: 243:47
    debug jf => _4;                      // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: unix::linux_like::linux::sock_filter; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3383:75: 3383:86
    let mut _5: u16;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3384:27: 3384:31
    let mut _6: u8;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3384:37: 3384:39
    let mut _7: u8;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3384:45: 3384:47
    let mut _8: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3384:52: 3384:53

    bb0: {
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:27: 3384:31
        _5 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3384:27: 3384:31
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:37: 3384:39
        _6 = _3;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3384:37: 3384:39
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:45: 3384:47
        _7 = _4;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3384:45: 3384:47
        StorageLive(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:52: 3384:53
        _8 = _2;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3384:52: 3384:53
        (_0.0: u16) = move _5;           // scope 0 at src/unix/linux_like/linux/mod.rs:3384:9: 3384:54
        (_0.1: u8) = move _6;            // scope 0 at src/unix/linux_like/linux/mod.rs:3384:9: 3384:54
        (_0.2: u8) = move _7;            // scope 0 at src/unix/linux_like/linux/mod.rs:3384:9: 3384:54
        (_0.3: u32) = move _8;           // scope 0 at src/unix/linux_like/linux/mod.rs:3384:9: 3384:54
        StorageDead(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:53: 3384:54
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:53: 3384:54
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:53: 3384:54
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3384:53: 3384:54
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const O_RDWR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:508:19: 508:26

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:508:29: 508:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:508:1: 508:31
    }
}

const ADJ_OFFSET_SINGLESHOT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1036:34: 1036:42

    bb0: {
        _0 = const 32769_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1036:45: 1036:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1036:1: 1036:52
    }
}

const IPV6_PREFER_SRC_NONCGA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:954:35: 954:42

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/mod.rs:954:45: 954:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:954:1: 954:52
    }
}

const MAP_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:608:25: 608:32

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:608:35: 608:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:608:1: 608:44
    }
}

fn WIFEXITED(_1: i32) -> bool {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1570:50: 1570:54
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1571:9: 1571:24
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1571:10: 1571:16

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1571:9: 1571:24
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1571:10: 1571:16
        _3 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1571:10: 1571:16
        _2 = BitAnd(move _3, const 127_i32); // scope 0 at src/unix/linux_like/mod.rs:1571:9: 1571:24
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1571:23: 1571:24
        _0 = Eq(move _2, const 0_i32);   // scope 0 at src/unix/linux_like/mod.rs:1571:9: 1571:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1571:28: 1571:29
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_APPEND: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1483:22: 1483:31

    bb0: {
        _0 = const 256_u64;              // scope 0 at src/unix/linux_like/linux/mod.rs:1483:34: 1483:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1483:1: 1483:38
    }
}

const SYS_fchmodat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:347:25: 347:33

    bb0: {
        _0 = const 268_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:347:36: 347:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:347:1: 347:40
    }
}

const ETH_P_ATMMPOA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2000:26: 2000:33

    bb0: {
        _0 = const 34892_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2000:36: 2000:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2000:1: 2000:43
    }
}

const NDA_PORT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2456:21: 2456:31

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2456:34: 2456:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2456:1: 2456:36
    }
}

const NFT_CT_STATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2932:25: 2932:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2932:35: 2932:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2932:1: 2932:37
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux::dl_phdr_info) -> linux::dl_phdr_info {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::dl_phdr_info; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &sock_txtime) -> sock_txtime {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::sock_txtime; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const PTRACE_GETEVENTMSG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:863:31: 863:39

    bb0: {
        _0 = const 16897_u32;            // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:863:42: 863:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:863:1: 863:49
    }
}

const IP_PKTOPTIONS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:795:26: 795:33

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:795:36: 795:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:795:1: 795:38
    }
}

const IPOPT_MEASUREMENT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1277:30: 1277:32

    bb0: {
        _0 = const 64_u8;                // scope 0 at src/unix/linux_like/mod.rs:1277:35: 1277:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1277:1: 1277:40
    }
}

const EMSGSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:458:21: 458:28

    bb0: {
        _0 = const 90_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:458:31: 458:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:458:1: 458:34
    }
}

const GLOB_DOOFFS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1335:24: 1335:31
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1335:34: 1335:40

    bb0: {
        _1 = CheckedShl(const 1_i32, const 3_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1335:34: 1335:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1335:34: 1335:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1335:34: 1335:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1335:1: 1335:41
    }
}

const SYS_setpriority: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:220:28: 220:36

    bb0: {
        _0 = const 141_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:220:39: 220:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:220:1: 220:43
    }
}

const MFD_HUGE_32MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1857:26: 1857:34

    bb0: {
        _0 = const 1677721600_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1857:37: 1857:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1857:1: 1857:48
    }
}

const TIOCGEXCL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:175:22: 175:29

    bb0: {
        _0 = const 2147767360_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:175:32: 175:42
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:175:1: 175:43
    }
}

const NF_IP_PRI_SECURITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2311:31: 2311:38

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2311:41: 2311:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2311:1: 2311:44
    }
}

const KEYCTL_READ: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2759:24: 2759:27

    bb0: {
        _0 = const 11_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2759:30: 2759:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2759:1: 2759:33
    }
}

const FAN_MARK_MOUNT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:713:27: 713:35

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:713:38: 713:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:713:1: 713:50
    }
}

const SOL_IP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:662:19: 662:26

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:662:29: 662:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:662:1: 662:31
    }
}

const OFILL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1116:18: 1116:28

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/mod.rs:1116:31: 1116:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1116:1: 1116:40
    }
}

const b64::__SIZEOF_PTHREAD_RWLOCKATTR_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:92:42: 92:47

    bb0: {
        _0 = const 8_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:92:50: 92:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/mod.rs:92:1: 92:52
    }
}

const RCX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:740:16: 740:23

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:740:26: 740:28
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:740:1: 740:29
    }
}

const _SC_EXPR_NEST_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1203:30: 1203:37

    bb0: {
        _0 = const 42_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1203:40: 1203:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1203:1: 1203:43
    }
}

const SYS_rt_sigprocmask: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:93:31: 93:39

    bb0: {
        _0 = const 14_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:93:42: 93:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:93:1: 93:45
    }
}

const PR_FP_EXC_NONRECOV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1687:31: 1687:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1687:41: 1687:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1687:1: 1687:43
    }
}

const NFULNL_CFG_F_CONNTRACK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2141:35: 2141:42

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2141:45: 2141:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2141:1: 2141:52
    }
}

const RTA_METRICS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2593:24: 2593:34

    bb0: {
        _0 = const 8_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2593:37: 2593:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2593:1: 2593:39
    }
}

const REG_NEWLINE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3091:24: 3091:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3091:34: 3091:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3091:1: 3091:36
    }
}

fn BPF_RVAL(_1: u32) -> u32 {
    debug code => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3371:39: 3371:46
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3372:9: 3372:13

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3372:9: 3372:13
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3372:9: 3372:13
        _0 = BitAnd(move _2, const 24_u32); // scope 0 at src/unix/linux_like/linux/mod.rs:3372:9: 3372:20
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3372:19: 3372:20
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const RUSAGE_SELF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:504:24: 504:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:504:34: 504:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:504:1: 504:36
    }
}

const ADJ_MICRO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1033:22: 1033:30

    bb0: {
        _0 = const 4096_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1033:33: 1033:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1033:1: 1033:40
    }
}

const IPV6_PREFER_SRC_COA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:951:32: 951:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:951:42: 951:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:951:1: 951:49
    }
}

const MAP_DENYWRITE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:605:26: 605:33

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:605:36: 605:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:605:1: 605:43
    }
}

fn WIFCONTINUED(_1: i32) -> bool {
    debug status => _1;                  // in scope 0 at src/macros.rs:259:36: 259:40
    let mut _0: bool;                    // return place in scope 0 at src/unix/linux_like/mod.rs:1558:53: 1558:57
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1559:9: 1559:15

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1559:9: 1559:15
        _2 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1559:9: 1559:15
        _0 = Eq(move _2, const 65535_i32); // scope 0 at src/unix/linux_like/mod.rs:1559:9: 1559:25
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1559:24: 1559:25
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_SYNCHRONOUS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1480:27: 1480:36

    bb0: {
        _0 = const 16_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1480:39: 1480:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1480:1: 1480:42
    }
}

const SYS_linkat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:344:23: 344:31

    bb0: {
        _0 = const 265_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:344:34: 344:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:344:1: 344:38
    }
}

const ETH_P_WCCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1997:23: 1997:30

    bb0: {
        _0 = const 34878_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1997:33: 1997:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1997:1: 1997:40
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &can_frame) -> can_frame {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::can_frame; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NDA_CACHEINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2453:26: 2453:36

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2453:39: 2453:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2453:1: 2453:41
    }
}

const NFT_META_OIFGROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2928:30: 2928:37

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2928:40: 2928:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2928:1: 2928:43
    }
}

linux::mq_attr::pad::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:684:25: 684:26

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:684:25: 684:26
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:684:25: 684:26
    }
}

const PTRACE_ATTACH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:860:26: 860:34

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:860:37: 860:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:860:1: 860:40
    }
}

const IP_RECVOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:792:24: 792:31

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:792:34: 792:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:792:1: 792:36
    }
}

const IPOPT_NUMBER_MASK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1273:30: 1273:32

    bb0: {
        _0 = const 31_u8;                // scope 0 at src/unix/linux_like/mod.rs:1273:35: 1273:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1273:1: 1273:40
    }
}

const EUSERS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:455:19: 455:26

    bb0: {
        _0 = const 87_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:455:29: 455:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:455:1: 455:32
    }
}

const GLOB_ERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1332:21: 1332:28
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1332:31: 1332:37

    bb0: {
        _1 = CheckedShl(const 1_i32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1332:31: 1332:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1332:31: 1332:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1332:31: 1332:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1332:1: 1332:38
    }
}

const SYS_fstatfs: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:217:24: 217:32

    bb0: {
        _0 = const 138_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:217:35: 217:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:217:1: 217:39
    }
}

const MFD_HUGE_2MB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1854:25: 1854:33

    bb0: {
        _0 = const 1409286144_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1854:36: 1854:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1854:1: 1854:47
    }
}

const TIOCVHANGUP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:172:24: 172:31

    bb0: {
        _0 = const 21559_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:172:34: 172:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:172:1: 172:41
    }
}

const NF_IP_PRI_MANGLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2308:29: 2308:36

    bb0: {
        _0 = const -150_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2308:39: 2308:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2308:1: 2308:44
    }
}

const KEYCTL_LINK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2756:24: 2756:27

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2756:30: 2756:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2756:1: 2756:32
    }
}

const SOCK_DCCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:709:22: 709:29

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:709:32: 709:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:709:1: 709:34
    }
}

const IFF_PORTSEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:658:24: 658:31

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/mod.rs:658:34: 658:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:658:1: 658:41
    }
}

const OCRNL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1113:18: 1113:28

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:1113:31: 1113:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1113:1: 1113:40
    }
}

const R9: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:737:15: 737:22

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:737:25: 737:26
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:737:1: 737:27
    }
}

const _SC_BC_SCALE_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1200:29: 1200:36

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1200:39: 1200:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1200:1: 1200:42
    }
}

const SYS_munmap: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:90:23: 90:31

    bb0: {
        _0 = const 11_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:90:34: 90:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:90:1: 90:37
    }
}

const PR_FP_EXC_RES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1684:26: 1684:33

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1684:36: 1684:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1684:1: 1684:45
    }
}

const NFULNL_COPY_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2137:31: 2137:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2137:41: 2137:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2137:1: 2137:46
    }
}

const RTA_GATEWAY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2590:24: 2590:34

    bb0: {
        _0 = const 5_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2590:37: 2590:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2590:1: 2590:39
    }
}

const LINUX_REBOOT_CMD_KEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3087:35: 3087:42

    bb0: {
        _0 = const 1163412803_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3087:45: 3087:55
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3087:1: 3087:56
    }
}

fn RT_ADDRCLASS(_1: u32) -> u32 {
    debug flags => _1;                   // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3359:40: 3359:43
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3360:9: 3360:14

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3360:9: 3360:14
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3360:9: 3360:14
        _0 = Shr(move _2, const 23_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:3360:9: 3360:20
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3360:19: 3360:20
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_BOOTTIME_ALARM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:500:33: 500:44

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/mod.rs:500:47: 500:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:500:1: 500:49
    }
}

const ADJ_TIMECONST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1030:26: 1030:34

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1030:37: 1030:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1030:1: 1030:44
    }
}

const IPV6_PREFER_SRC_TMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:948:32: 948:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:948:42: 948:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:948:1: 948:49
    }
}

const MAP_32BIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:602:22: 602:29

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:602:32: 602:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:602:1: 602:39
    }
}

fn SIGRTMIN() -> i32 {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1546:26: 1546:33
    scope 1 {
    }

    bb0: {
        _0 = linux_like::__libc_current_sigrtmin() -> bb1; // scope 1 at src/unix/linux_like/mod.rs:1547:18: 1547:43
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1547:18: 1547:41
                                         // + literal: Const { ty: unsafe extern "C" fn() -> i32 {unix::linux_like::__libc_current_sigrtmin}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        return;                          // scope 0 at src/macros.rs:262:18: 262:18
    }
}

const ST_NOSUID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1477:22: 1477:31

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1477:34: 1477:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1477:1: 1477:36
    }
}

const SYS_newfstatat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:341:27: 341:35

    bb0: {
        _0 = const 262_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:341:38: 341:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:341:1: 341:42
    }
}

const ETH_P_IPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1994:23: 1994:30

    bb0: {
        _0 = const 34525_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1994:33: 1994:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1994:1: 1994:40
    }
}

linux::pthread_rwlock_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:121:28: 121:55

    bb0: {
        _0 = const not_x32::__SIZEOF_PTHREAD_RWLOCK_T; // scope 0 at src/unix/linux_like/linux/align.rs:121:28: 121:55
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:121:28: 121:55
    }
}

const NDA_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2450:23: 2450:33

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2450:36: 2450:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2450:1: 2450:38
    }
}

const NFT_META_PKTTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2925:29: 2925:36

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2925:39: 2925:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2925:1: 2925:42
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &uinput_abs_setup) -> uinput_abs_setup {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::uinput_abs_setup; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::pollfd) -> unix::pollfd {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::pollfd;            // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_CONT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:857:24: 857:32

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:857:35: 857:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:857:1: 857:37
    }
}

const IP_HDRINCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:789:23: 789:30

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:789:33: 789:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:789:1: 789:35
    }
}

const IPTOS_ECN_CE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1269:25: 1269:27

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1269:30: 1269:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1269:1: 1269:35
    }
}

const EILSEQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:452:19: 452:26

    bb0: {
        _0 = const 84_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:452:29: 452:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:452:1: 452:32
    }
}

const AT_RANDOM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1327:22: 1327:31

    bb0: {
        _0 = const 25_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1327:34: 1327:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1327:1: 1327:37
    }
}

const SYS_personality: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:214:28: 214:36

    bb0: {
        _0 = const 135_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:214:39: 214:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:214:1: 214:43
    }
}

const MFD_HUGE_64KB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1851:26: 1851:34

    bb0: {
        _0 = const 1073741824_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1851:37: 1851:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1851:1: 1851:48
    }
}

const TCSETXF: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:169:20: 169:27

    bb0: {
        _0 = const 21556_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:169:30: 169:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:169:1: 169:37
    }
}

const NF_IP_PRI_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2305:26: 2305:33

    bb0: {
        _0 = const -300_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2305:36: 2305:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2305:1: 2305:41
    }
}

const KEYCTL_SETPERM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2753:27: 2753:30

    bb0: {
        _0 = const 5_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2753:33: 2753:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2753:1: 2753:35
    }
}

const J1939_EE_INFO_RX_DPO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3242:33: 3242:40

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3242:43: 3242:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3242:1: 3242:45
    }
}

const LC_ALL_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:24: 693:31
    let mut _1: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 703:26
    let mut _2: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 702:24
    let mut _3: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 701:22
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 700:19
    let mut _5: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 699:20
    let mut _6: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 698:25
    let mut _7: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 697:25
    let mut _8: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 696:24
    let mut _9: i32;                     // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 695:21
    let mut _10: i32;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 694:24

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 703:26
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 702:24
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 701:22
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 700:19
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 699:20
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 698:25
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 697:25
        StorageLive(_8);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 696:24
        StorageLive(_9);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 695:21
        StorageLive(_10);                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 694:24
        _10 = BitOr(const linux_like::LC_CTYPE_MASK, const linux_like::LC_NUMERIC_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 694:24
        _9 = BitOr(move _10, const linux_like::LC_TIME_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 695:21
        StorageDead(_10);                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:695:20: 695:21
        _8 = BitOr(move _9, const linux_like::LC_COLLATE_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 696:24
        StorageDead(_9);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:696:23: 696:24
        _7 = BitOr(move _8, const linux_like::LC_MONETARY_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 697:25
        StorageDead(_8);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:697:24: 697:25
        _6 = BitOr(move _7, const linux_like::LC_MESSAGES_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 698:25
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:698:24: 698:25
        _5 = BitOr(move _6, const LC_PAPER_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 699:20
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:699:19: 699:20
        _4 = BitOr(move _5, const LC_NAME_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 700:19
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:700:18: 700:19
        _3 = BitOr(move _4, const LC_ADDRESS_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 701:22
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:701:21: 701:22
        _2 = BitOr(move _3, const LC_TELEPHONE_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 702:24
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:702:23: 702:24
        _1 = BitOr(move _2, const LC_MEASUREMENT_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 703:26
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:703:25: 703:26
        _0 = BitOr(move _1, const LC_IDENTIFICATION_MASK); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:34: 704:29
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:704:28: 704:29
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:693:1: 704:30
    }
}

const IFF_MASTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:655:23: 655:30

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/mod.rs:655:33: 655:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:655:1: 655:39
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &statx) -> statx {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::statx; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const CS5: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1110:16: 1110:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1110:29: 1110:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1110:1: 1110:40
    }
}

const RBX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:734:16: 734:23

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:734:26: 734:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:734:1: 734:28
    }
}

const _SC_TIMER_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1197:26: 1197:33

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1197:36: 1197:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1197:1: 1197:39
    }
}

const SYS_lseek: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:87:22: 87:30

    bb0: {
        _0 = const 8_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:87:33: 87:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:87:1: 87:35
    }
}

const PR_FP_EXC_DIV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1681:26: 1681:33

    bb0: {
        _0 = const 65536_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1681:36: 1681:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1681:1: 1681:45
    }
}

const NFULA_CFG_FLAGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2133:28: 2133:35

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2133:38: 2133:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2133:1: 2133:40
    }
}

const RTA_SRC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2587:20: 2587:30

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2587:33: 2587:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2587:1: 2587:35
    }
}

const LINUX_REBOOT_CMD_POWER_OFF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3084:39: 3084:46

    bb0: {
        _0 = const 1126301404_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3084:49: 3084:59
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3084:1: 3084:60
    }
}

fn IPTOS_TOS(_1: u8) -> u8 {
    debug tos => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3347:34: 3347:36
    let mut _2: u8;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3348:9: 3348:12

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3348:9: 3348:12
        _2 = _1;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3348:9: 3348:12
        _0 = BitAnd(move _2, const linux::IPTOS_TOS_MASK); // scope 0 at src/unix/linux_like/linux/mod.rs:3348:9: 3348:29
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3348:28: 3348:29
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_MONOTONIC_COARSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:497:35: 497:46

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:497:49: 497:50
        return;                          // scope 0 at src/unix/linux_like/mod.rs:497:1: 497:51
    }
}

const ADJ_MAXERROR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1027:25: 1027:33

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1027:36: 1027:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1027:1: 1027:43
    }
}

const IPV6_RECVORIGDSTADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:945:33: 945:40

    bb0: {
        _0 = const IPV6_ORIGDSTADDR;     // scope 0 at src/unix/linux_like/mod.rs:945:43: 945:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:945:1: 945:60
    }
}

const MAP_HUGETLB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:599:24: 599:31

    bb0: {
        _0 = const 262144_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:599:34: 599:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:599:1: 599:43
    }
}

fn FD_SET(_1: i32, _2: *mut linux_like::fd_set) -> () {
    debug fd => _1;                      // in scope 0 at src/macros.rs:243:43: 243:47
    debug set => _2;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/mod.rs:1527:53: 1527:55
    let _3: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1528:13: 1528:15
    let mut _4: i32;                     // in scope 0 at src/unix/linux_like/mod.rs:1528:18: 1528:20
    let mut _6: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1529:20: 1529:59
    let mut _7: &u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1529:39: 1529:58
    let _8: &u64;                        // in scope 0 at src/unix/linux_like/mod.rs:1529:39: 1529:58
    let _9: usize;                       // in scope 0 at src/unix/linux_like/mod.rs:1529:56: 1529:57
    let mut _10: u64;                    // in scope 0 at src/unix/linux_like/mod.rs:1530:39: 1530:55
    let mut _11: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:44: 1530:55
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:45: 1530:47
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:50: 1530:54
    let mut _14: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1530:44: 1530:55
    let _15: usize;                      // in scope 0 at src/unix/linux_like/mod.rs:1530:25: 1530:34
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:25: 1530:27
    let mut _17: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:30: 1530:34
    let mut _18: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1530:25: 1530:34
    let mut _19: usize;                  // in scope 0 at src/unix/linux_like/mod.rs:1530:9: 1530:35
    let mut _20: bool;                   // in scope 0 at src/unix/linux_like/mod.rs:1530:9: 1530:35
    scope 1 {
        debug fd => _3;                  // in scope 1 at src/unix/linux_like/mod.rs:1528:13: 1528:15
        let _5: usize;                   // in scope 1 at src/unix/linux_like/mod.rs:1529:13: 1529:17
        scope 2 {
            debug size => _5;            // in scope 2 at src/unix/linux_like/mod.rs:1529:13: 1529:17
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1528:13: 1528:15
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1528:18: 1528:20
        _4 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1528:18: 1528:20
        _3 = move _4 as usize (Misc);    // scope 0 at src/unix/linux_like/mod.rs:1528:18: 1528:29
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1528:28: 1528:29
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/mod.rs:1529:13: 1529:17
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1529:20: 1529:59
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1529:39: 1529:58
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1529:39: 1529:58
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1529:56: 1529:57
        _9 = const 0_usize;              // scope 1 at src/unix/linux_like/mod.rs:1529:56: 1529:57
        _8 = &((*_2).0: [u64; 16])[_9];  // scope 1 at src/unix/linux_like/mod.rs:1529:39: 1529:58
        _7 = _8;                         // scope 1 at src/unix/linux_like/mod.rs:1529:39: 1529:58
        _6 = core::mem::size_of_val::<u64>(move _7) -> bb1; // scope 1 at src/unix/linux_like/mod.rs:1529:20: 1529:59
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1529:20: 1529:38
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/mod.rs:1529:58: 1529:59
        _5 = Mul(move _6, const 8_usize); // scope 1 at src/unix/linux_like/mod.rs:1529:20: 1529:63
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/mod.rs:1529:62: 1529:63
        StorageDead(_9);                 // scope 1 at src/unix/linux_like/mod.rs:1529:62: 1529:63
        StorageDead(_8);                 // scope 1 at src/unix/linux_like/mod.rs:1529:62: 1529:63
        StorageLive(_10);                // scope 2 at src/unix/linux_like/mod.rs:1530:39: 1530:55
        StorageLive(_11);                // scope 2 at src/unix/linux_like/mod.rs:1530:44: 1530:55
        StorageLive(_12);                // scope 2 at src/unix/linux_like/mod.rs:1530:45: 1530:47
        _12 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1530:45: 1530:47
        StorageLive(_13);                // scope 2 at src/unix/linux_like/mod.rs:1530:50: 1530:54
        _13 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1530:50: 1530:54
        _14 = Eq(_13, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1530:44: 1530:55
        assert(!move _14, "attempt to calculate the remainder of `{}` with a divisor of zero", _12) -> bb2; // scope 2 at src/unix/linux_like/mod.rs:1530:44: 1530:55
    }

    bb2: {
        _11 = Rem(move _12, move _13);   // scope 2 at src/unix/linux_like/mod.rs:1530:44: 1530:55
        StorageDead(_13);                // scope 2 at src/unix/linux_like/mod.rs:1530:54: 1530:55
        StorageDead(_12);                // scope 2 at src/unix/linux_like/mod.rs:1530:54: 1530:55
        _10 = Shl(const 1_u64, move _11); // scope 2 at src/unix/linux_like/mod.rs:1530:39: 1530:55
        StorageDead(_11);                // scope 2 at src/unix/linux_like/mod.rs:1530:54: 1530:55
        StorageLive(_15);                // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:34
        StorageLive(_16);                // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:27
        _16 = _3;                        // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:27
        StorageLive(_17);                // scope 2 at src/unix/linux_like/mod.rs:1530:30: 1530:34
        _17 = _5;                        // scope 2 at src/unix/linux_like/mod.rs:1530:30: 1530:34
        _18 = Eq(_17, const 0_usize);    // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:34
        assert(!move _18, "attempt to divide `{}` by zero", _16) -> bb3; // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:34
    }

    bb3: {
        _15 = Div(move _16, move _17);   // scope 2 at src/unix/linux_like/mod.rs:1530:25: 1530:34
        StorageDead(_17);                // scope 2 at src/unix/linux_like/mod.rs:1530:33: 1530:34
        StorageDead(_16);                // scope 2 at src/unix/linux_like/mod.rs:1530:33: 1530:34
        _19 = const 16_usize;            // scope 2 at src/unix/linux_like/mod.rs:1530:9: 1530:35
        _20 = Lt(_15, _19);              // scope 2 at src/unix/linux_like/mod.rs:1530:9: 1530:35
        assert(move _20, "index out of bounds: the length is {} but the index is {}", move _19, _15) -> bb4; // scope 2 at src/unix/linux_like/mod.rs:1530:9: 1530:35
    }

    bb4: {
        ((*_2).0: [u64; 16])[_15] = BitOr(((*_2).0: [u64; 16])[_15], move _10); // scope 2 at src/unix/linux_like/mod.rs:1530:9: 1530:55
        StorageDead(_10);                // scope 2 at src/unix/linux_like/mod.rs:1530:54: 1530:55
        StorageDead(_15);                // scope 2 at src/unix/linux_like/mod.rs:1530:54: 1530:55
        StorageDead(_5);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const SEEK_DATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1473:22: 1473:29

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1473:32: 1473:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1473:1: 1473:34
    }
}

const SYS_mknodat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:338:24: 338:32

    bb0: {
        _0 = const 259_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:338:35: 338:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:338:1: 338:39
    }
}

const ETH_P_AARP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1991:23: 1991:30

    bb0: {
        _0 = const 33011_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1991:33: 1991:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1991:1: 1991:40
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::pthread_rwlock_t) -> linux::pthread_rwlock_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::pthread_rwlock_t; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NTF_MASTER: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2446:23: 2446:25

    bb0: {
        _0 = const 4_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:2446:28: 2446:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2446:1: 2446:33
    }
}

const NFT_META_L4PROTO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2922:29: 2922:36

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2922:39: 2922:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2922:1: 2922:42
    }
}

const PTRACE_POKETEXT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:854:28: 854:36

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:854:39: 854:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:854:1: 854:41
    }
}

const SOCK_RDM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:786:21: 786:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:786:31: 786:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:786:1: 786:33
    }
}

const linux_like::IPTOS_ECN_MASK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1266:27: 1266:29

    bb0: {
        _0 = const 3_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1266:32: 1266:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1266:1: 1266:37
    }
}

const ELIBSCN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:449:20: 449:27

    bb0: {
        _0 = const 81_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:449:30: 449:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:449:1: 449:33
    }
}

const AT_CLKTCK: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1323:22: 1323:31

    bb0: {
        _0 = const 17_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1323:34: 1323:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1323:1: 1323:37
    }
}

const SYS_utime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:211:22: 211:30

    bb0: {
        _0 = const 132_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:211:33: 211:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:211:1: 211:37
    }
}

const MFD_CLOEXEC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1848:24: 1848:32

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1848:35: 1848:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1848:1: 1848:42
    }
}

const TIOCGDEV: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:166:21: 166:28

    bb0: {
        _0 = const 2147767346_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:166:31: 166:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:166:1: 166:42
    }
}

const NF_IP_NUMHOOKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2301:27: 2301:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2301:37: 2301:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2301:1: 2301:39
    }
}

const KEYCTL_UPDATE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2750:26: 2750:29

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2750:32: 2750:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2750:1: 2750:34
    }
}

const J1939_EE_INFO_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3239:31: 3239:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3239:41: 3239:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3239:1: 3239:43
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &input_event) -> input_event {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::input_event; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const LC_TELEPHONE_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:30: 690:37
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:40: 690:57

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_TELEPHONE); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:40: 690:57
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_TELEPHONE) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:40: 690:57
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:40: 690:57
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:690:1: 690:58
    }
}

const IFF_NOARP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:652:22: 652:29

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/mod.rs:652:32: 652:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:652:1: 652:37
    }
}

const IXANY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1107:18: 1107:28

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/mod.rs:1107:31: 1107:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1107:1: 1107:42
    }
}

const R13: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:731:16: 731:23

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:731:26: 731:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:731:1: 731:28
    }
}

const _SC_SEM_NSEMS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1194:30: 1194:37

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1194:40: 1194:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1194:1: 1194:43
    }
}

const SYS_fstat: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:84:22: 84:30

    bb0: {
        _0 = const 5_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:84:33: 84:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:84:1: 84:35
    }
}

const PR_GET_FPEXC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1678:25: 1678:32

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1678:35: 1678:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1678:1: 1678:38
    }
}

max_align_t::priv_::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/align.rs:5:22: 5:23

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/align.rs:5:22: 5:23
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/align.rs:5:22: 5:23
    }
}

const NFULA_CFG_NLBUFSIZ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2130:31: 2130:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2130:41: 2130:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2130:1: 2130:43
    }
}

const RTM_F_PREFIX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2583:25: 2583:33

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2583:36: 2583:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2583:1: 2583:42
    }
}

const LINUX_REBOOT_CMD_HALT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3081:34: 3081:41

    bb0: {
        _0 = const -839974621_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:3081:44: 3081:54
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3081:1: 3081:55
    }
}

fn major(_1: u64) -> u32 {
    debug dev => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3322:35: 3322:43
    let mut _2: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3323:13: 3323:22
    let mut _3: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:49
    let mut _4: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:44
    let mut _5: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3324:19: 3324:22
    let mut _6: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:50
    let mut _7: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:44
    let mut _8: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3325:19: 3325:22
    let mut _9: u64;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3326:9: 3326:14
    scope 1 {
        debug major => _2;               // in scope 1 at src/unix/linux_like/linux/mod.rs:3323:13: 3323:22
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3323:13: 3323:22
        _2 = const 0_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3323:25: 3323:26
        StorageLive(_3);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:49
        StorageLive(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:44
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:19: 3324:22
        _5 = _1;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3324:19: 3324:22
        _4 = BitAnd(move _5, const 1048320_u64); // scope 1 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:44
        StorageDead(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:43: 3324:44
        _3 = Shr(move _4, const 8_i32);  // scope 1 at src/unix/linux_like/linux/mod.rs:3324:18: 3324:49
        StorageDead(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:48: 3324:49
        _2 = BitOr(_2, move _3);         // scope 1 at src/unix/linux_like/linux/mod.rs:3324:9: 3324:49
        StorageDead(_3);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3324:48: 3324:49
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:50
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:44
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:19: 3325:22
        _8 = _1;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3325:19: 3325:22
        _7 = BitAnd(move _8, const 18446726481523507200_u64); // scope 1 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:44
        StorageDead(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:43: 3325:44
        _6 = Shr(move _7, const 32_i32); // scope 1 at src/unix/linux_like/linux/mod.rs:3325:18: 3325:50
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:49: 3325:50
        _2 = BitOr(_2, move _6);         // scope 1 at src/unix/linux_like/linux/mod.rs:3325:9: 3325:50
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3325:49: 3325:50
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3326:9: 3326:14
        _9 = _2;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3326:9: 3326:14
        _0 = move _9 as u32 (Misc);      // scope 1 at src/unix/linux_like/linux/mod.rs:3326:9: 3326:26
        StorageDead(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3326:25: 3326:26
        StorageDead(_2);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const CLOCK_THREAD_CPUTIME_ID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:494:36: 494:47

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:494:50: 494:51
        return;                          // scope 0 at src/unix/linux_like/mod.rs:494:1: 494:52
    }
}

const STATX_ATTR_AUTOMOUNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1022:33: 1022:40

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1022:43: 1022:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1022:1: 1022:50
    }
}

const IPV6_ADDR_PREFERENCES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:942:34: 942:41

    bb0: {
        _0 = const 72_i32;               // scope 0 at src/unix/linux_like/mod.rs:942:44: 942:46
        return;                          // scope 0 at src/unix/linux_like/mod.rs:942:1: 942:47
    }
}

const O_DIRECT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:595:21: 595:28

    bb0: {
        _0 = const 16384_i32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:595:31: 595:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:595:1: 595:38
    }
}

fn CMSG_LEN(_1: u32) -> u32 {
    debug length => _1;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1510:42: 1510:50
    let mut _2: u32;                     // in scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:60
    let mut _3: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:48
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1511:20: 1511:47
    let mut _5: u32;                     // in scope 0 at src/unix/linux_like/mod.rs:1511:63: 1511:69

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:60
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:48
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1511:20: 1511:47
        _4 = core::mem::size_of::<gnu::cmsghdr>() -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1511:20: 1511:47
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1511:20: 1511:45
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::gnu::cmsghdr>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _3 = CMSG_ALIGN(move _4) -> bb2; // scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:48
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1511:9: 1511:19
                                         // + literal: Const { ty: fn(usize) -> usize {unix::linux_like::CMSG_ALIGN}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1511:47: 1511:48
        _2 = move _3 as u32 (Misc);      // scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:60
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1511:59: 1511:60
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1511:63: 1511:69
        _5 = _1;                         // scope 0 at src/unix/linux_like/mod.rs:1511:63: 1511:69
        _0 = Add(move _2, move _5);      // scope 0 at src/unix/linux_like/mod.rs:1511:9: 1511:69
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1511:68: 1511:69
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1511:68: 1511:69
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_DETACH_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1467:29: 1467:36

    bb0: {
        _0 = const 1024_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1467:39: 1467:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1467:1: 1467:46
    }
}

const SYS_migrate_pages: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:335:30: 335:38

    bb0: {
        _0 = const 256_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:335:41: 335:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:335:1: 335:45
    }
}

const ETH_P_TEB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1988:22: 1988:29

    bb0: {
        _0 = const 25944_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1988:32: 1988:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1988:1: 1988:39
    }
}

linux::pthread_mutex_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:97:28: 97:54

    bb0: {
        _0 = const not_x32::__SIZEOF_PTHREAD_MUTEX_T; // scope 0 at src/unix/linux_like/linux/align.rs:97:28: 97:54
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:97:28: 97:54
    }
}

const NUD_PERMANENT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2442:26: 2442:29

    bb0: {
        _0 = const 128_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2442:32: 2442:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2442:1: 2442:37
    }
}

const NFT_META_RTCLASSID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2919:31: 2919:38

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2919:41: 2919:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2919:1: 2919:44
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &unix::iovec) -> unix::iovec {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::iovec;             // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_PEEKTEXT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:851:28: 851:36

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:851:39: 851:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:851:1: 851:41
    }
}

const MSG_CMSG_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:781:29: 781:36

    bb0: {
        _0 = const 1073741824_i32;       // scope 0 at src/unix/linux_like/mod.rs:781:39: 781:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:781:1: 781:50
    }
}

const IPTOS_PREC_IMMEDIATE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1262:33: 1262:35

    bb0: {
        _0 = const 64_u8;                // scope 0 at src/unix/linux_like/mod.rs:1262:38: 1262:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1262:1: 1262:43
    }
}

const EREMCHG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:446:20: 446:27

    bb0: {
        _0 = const 78_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:446:30: 446:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:446:1: 446:33
    }
}

const AT_EGID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1320:20: 1320:29

    bb0: {
        _0 = const 14_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1320:32: 1320:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1320:1: 1320:35
    }
}

const SYS_rt_sigqueueinfo: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:208:32: 208:40

    bb0: {
        _0 = const 129_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:208:43: 208:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:208:1: 208:47
    }
}

const IPV6_RTHDR_STRICT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1842:30: 1842:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1842:40: 1842:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1842:1: 1842:42
    }
}

const TIOCSRS485: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:163:23: 163:30

    bb0: {
        _0 = const 21551_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:163:33: 163:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:163:1: 163:40
    }
}

const NF_IP_FORWARD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2298:26: 2298:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2298:36: 2298:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2298:1: 2298:38
    }
}

const KEY_REQKEY_DEFL_REQUESTOR_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2746:46: 2746:49

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2746:52: 2746:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2746:1: 2746:54
    }
}

const J1939_NLA_DEST_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3235:32: 3235:39

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3235:42: 3235:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3235:1: 3235:44
    }
}

const LC_PAPER_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:26: 687:33
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:36: 687:49

    bb0: {
        _1 = CheckedShl(const 1_i32, const LC_PAPER); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:36: 687:49
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const LC_PAPER) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:36: 687:49
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:36: 687:49
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:687:1: 687:50
    }
}

const IFF_POINTOPOINT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:649:28: 649:35

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:649:38: 649:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:649:1: 649:43
    }
}

const INLCR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1104:18: 1104:28

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/mod.rs:1104:31: 1104:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1104:1: 1104:42
    }
}

const PTHREAD_STACK_MIN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1092:38: 1092:46

    bb0: {
        _0 = const 16384_usize;          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1092:49: 1092:54
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1092:9: 1092:55
    }
}

const EXTPROC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:726:20: 726:30

    bb0: {
        _0 = const 65536_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:726:33: 726:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:726:1: 726:44
    }
}

const _SC_PAGESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1191:25: 1191:32

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1191:35: 1191:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1191:1: 1191:38
    }
}

const SYS_open: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:81:21: 81:29

    bb0: {
        _0 = const 2_i64;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:81:32: 81:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:81:1: 81:34
    }
}

const PR_SET_FPEMU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1674:25: 1674:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1674:35: 1674:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1674:1: 1674:38
    }
}

fn b64::x86_64::align::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &max_align_t) -> max_align_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NFULA_CFG_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2127:29: 2127:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2127:39: 2127:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2127:1: 2127:41
    }
}

const RTM_F_NOTIFY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2580:25: 2580:33

    bb0: {
        _0 = const 256_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2580:36: 2580:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2580:1: 2580:42
    }
}

const LINUX_REBOOT_MAGIC2B: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3077:33: 3077:40

    bb0: {
        _0 = const 369367448_i32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3077:43: 3077:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3077:1: 3077:53
    }
}

fn CPU_COUNT_S(_1: usize, _2: &linux::cpu_set_t) -> i32 {
    debug size => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    debug cpuset => _2;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3305:60: 3305:67
    let mut _3: u32;                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3306:13: 3306:18
    let mut _5: &u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
    let _6: &u64;                        // in scope 0 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
    let _7: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3307:60: 3307:61
    let mut _8: core::slice::Iter<u64>;  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    let mut _9: core::slice::Iter<u64>;  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    let mut _10: &[u64];                 // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
    let _11: &[u64];                     // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
    let mut _12: &[u64; 16];             // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:29
    let mut _13: core::ops::RangeTo<usize>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:30: 3308:53
    let mut _14: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
    let mut _15: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:33: 3308:37
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:40: 3308:52
    let mut _17: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
    let mut _20: core::option::Option<&u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    let mut _21: &mut core::slice::Iter<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    let mut _22: &mut core::slice::Iter<u64>; // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    let mut _23: isize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
    let mut _25: &u64;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
    let mut _27: u32;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:32
    let mut _28: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:19
    let mut _29: u32;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3311:9: 3311:10
    scope 1 {
        debug s => _3;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3306:13: 3306:18
        let _4: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3307:13: 3307:25
        scope 2 {
            debug size_of_mask => _4;    // in scope 2 at src/unix/linux_like/linux/mod.rs:3307:13: 3307:25
            let mut _18: core::slice::Iter<u64>; // in scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
            scope 3 {
                debug iter => _18;       // in scope 3 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                let mut _19: &u64;       // in scope 3 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                scope 4 {
                    debug __next => _19; // in scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                    let _24: &u64;       // in scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
                    let _26: &u64;       // in scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
                    scope 5 {
                        debug val => _24; // in scope 5 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
                    }
                    scope 6 {
                        debug i => _26;  // in scope 6 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3306:13: 3306:18
        _3 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3306:26: 3306:27
        StorageLive(_4);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:13: 3307:25
        StorageLive(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
        StorageLive(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
        StorageLive(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:60: 3307:61
        _7 = const 0_usize;              // scope 1 at src/unix/linux_like/linux/mod.rs:3307:60: 3307:61
        _6 = &((*_2).0: [u64; 16])[_7];  // scope 1 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
        _5 = _6;                         // scope 1 at src/unix/linux_like/linux/mod.rs:3307:47: 3307:62
        _4 = core::mem::size_of_val::<u64>(move _5) -> bb1; // scope 1 at src/unix/linux_like/linux/mod.rs:3307:28: 3307:63
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3307:28: 3307:46
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:62: 3307:63
        StorageDead(_7);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:62: 3307:63
        StorageDead(_6);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3307:62: 3307:63
        StorageLive(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
        StorageLive(_11);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
        StorageLive(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:29
        _12 = &((*_2).0: [u64; 16]);     // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:29
        StorageLive(_13);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:30: 3308:53
        StorageLive(_14);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
        StorageLive(_15);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:33: 3308:37
        _15 = _1;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3308:33: 3308:37
        StorageLive(_16);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:40: 3308:52
        _16 = _4;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3308:40: 3308:52
        _17 = Eq(_16, const 0_usize);    // scope 2 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
        assert(!move _17, "attempt to divide `{}` by zero", _15) -> bb2; // scope 2 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
    }

    bb2: {
        _14 = Div(move _15, move _16);   // scope 2 at src/unix/linux_like/linux/mod.rs:3308:32: 3308:53
        StorageDead(_16);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:52: 3308:53
        StorageDead(_15);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:52: 3308:53
        (_13.0: usize) = move _14;       // scope 2 at src/unix/linux_like/linux/mod.rs:3308:30: 3308:53
        StorageDead(_14);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:52: 3308:53
        _11 = <[u64; 16] as Index<RangeTo<usize>>>::index(move _12, move _13) -> bb3; // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
                                         // + literal: Const { ty: for<'r> fn(&'r [u64; 16], core::ops::RangeTo<usize>) -> &'r <[u64; 16] as core::ops::Index<core::ops::RangeTo<usize>>>::Output {<[u64; 16] as core::ops::Index<core::ops::RangeTo<usize>>>::index}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        _10 = _11;                       // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:54
        StorageDead(_13);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:53: 3308:54
        StorageDead(_12);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:53: 3308:54
        _9 = slice::<impl [u64]>::iter(move _10) -> bb4; // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3308:55: 3308:59
                                         // + literal: Const { ty: for<'r> fn(&'r [u64]) -> core::slice::Iter<'r, u64> {core::slice::<impl [u64]>::iter}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_10);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        _8 = <core::slice::Iter<u64> as IntoIterator>::into_iter(move _9) -> bb5; // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                                         // + literal: Const { ty: fn(core::slice::Iter<u64>) -> <core::slice::Iter<u64> as core::iter::IntoIterator>::IntoIter {<core::slice::Iter<u64> as core::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_9);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageLive(_18);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        _18 = move _8;                   // scope 2 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        goto -> bb6;                     // scope 3 at src/unix/linux_like/linux/mod.rs:3308:9: 3310:10
    }

    bb6: {
        StorageLive(_19);                // scope 3 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_20);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_21);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_22);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        _22 = &mut _18;                  // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        _21 = &mut (*_22);               // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        _20 = <core::slice::Iter<u64> as Iterator>::next(move _21) -> bb7; // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
                                         // + literal: Const { ty: for<'r> fn(&'r mut core::slice::Iter<u64>) -> core::option::Option<<core::slice::Iter<u64> as core::iter::Iterator>::Item> {<core::slice::Iter<u64> as core::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_21);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        _23 = discriminant(_20);         // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        switchInt(move _23) -> [0_isize: bb8, 1_isize: bb10, otherwise: bb9]; // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    }

    bb8: {
        StorageDead(_22);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageDead(_20);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageDead(_19);                // scope 3 at src/unix/linux_like/linux/mod.rs:3310:9: 3310:10
        StorageDead(_18);                // scope 2 at src/unix/linux_like/linux/mod.rs:3310:9: 3310:10
        StorageDead(_11);                // scope 2 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageDead(_8);                 // scope 2 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageLive(_29);                // scope 2 at src/unix/linux_like/linux/mod.rs:3311:9: 3311:10
        _29 = _3;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3311:9: 3311:10
        _0 = move _29 as i32 (Misc);     // scope 2 at src/unix/linux_like/linux/mod.rs:3311:9: 3311:21
        StorageDead(_29);                // scope 2 at src/unix/linux_like/linux/mod.rs:3311:20: 3311:21
        StorageDead(_4);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }

    bb9: {
        unreachable;                     // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
    }

    bb10: {
        StorageLive(_24);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        _24 = ((_20 as Some).0: &u64);   // scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        StorageLive(_25);                // scope 5 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        _25 = _24;                       // scope 5 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        _19 = move _25;                  // scope 5 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        StorageDead(_25);                // scope 5 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        StorageDead(_24);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        StorageDead(_22);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageDead(_20);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:60: 3308:61
        StorageLive(_26);                // scope 4 at src/unix/linux_like/linux/mod.rs:3308:13: 3308:14
        _26 = _19;                       // scope 4 at src/unix/linux_like/linux/mod.rs:3308:18: 3308:61
        StorageLive(_27);                // scope 6 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:32
        StorageLive(_28);                // scope 6 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:19
        _28 = (*_26);                    // scope 6 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:19
        _27 = num::<impl u64>::count_ones(move _28) -> bb11; // scope 6 at src/unix/linux_like/linux/mod.rs:3309:18: 3309:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3309:20: 3309:30
                                         // + literal: Const { ty: fn(u64) -> u32 {core::num::<impl u64>::count_ones}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_28);                // scope 6 at src/unix/linux_like/linux/mod.rs:3309:31: 3309:32
        _3 = Add(_3, move _27);          // scope 6 at src/unix/linux_like/linux/mod.rs:3309:13: 3309:32
        StorageDead(_27);                // scope 6 at src/unix/linux_like/linux/mod.rs:3309:31: 3309:32
        StorageDead(_26);                // scope 4 at src/unix/linux_like/linux/mod.rs:3310:9: 3310:10
        StorageDead(_19);                // scope 3 at src/unix/linux_like/linux/mod.rs:3310:9: 3310:10
        goto -> bb6;                     // scope 3 at src/unix/linux_like/linux/mod.rs:3308:9: 3310:10
    }
}

const CLOCK_REALTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:491:27: 491:38

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:491:41: 491:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:491:1: 491:43
    }
}

const STATX_ATTR_APPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1019:30: 1019:37

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1019:40: 1019:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1019:1: 1019:47
    }
}

const IPV6_RECVTCLASS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:939:28: 939:35

    bb0: {
        _0 = const 66_i32;               // scope 0 at src/unix/linux_like/mod.rs:939:38: 939:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:939:1: 939:41
    }
}

const EFD_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:590:24: 590:31

    bb0: {
        _0 = const 524288_i32;           // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:590:34: 590:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:590:1: 590:42
    }
}

fn CMSG_FIRSTHDR(_1: *const gnu::msghdr) -> *mut gnu::cmsghdr {
    debug mhdr => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: *mut unix::linux_like::linux::gnu::cmsghdr; // return place in scope 0 at src/unix/linux_like/mod.rs:1493:50: 1493:62
    let mut _2: bool;                    // in scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:74
    let mut _3: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:43
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/mod.rs:1494:47: 1494:74
    let mut _5: *mut core::ffi::c_void;  // in scope 0 at src/unix/linux_like/mod.rs:1495:13: 1495:32

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:74
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:43
        _3 = ((*_1).5: usize);           // scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:34
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1494:47: 1494:74
        _4 = core::mem::size_of::<gnu::cmsghdr>() -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1494:47: 1494:74
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1494:47: 1494:72
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::gnu::cmsghdr>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _2 = Ge(move _3, move _4);       // scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:74
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/mod.rs:1494:73: 1494:74
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/mod.rs:1494:73: 1494:74
        switchInt(move _2) -> [false: bb3, otherwise: bb2]; // scope 0 at src/unix/linux_like/mod.rs:1494:12: 1494:74
    }

    bb2: {
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1495:13: 1495:32
        _5 = ((*_1).4: *mut core::ffi::c_void); // scope 0 at src/unix/linux_like/mod.rs:1495:13: 1495:32
        _0 = move _5 as *mut unix::linux_like::linux::gnu::cmsghdr (Misc); // scope 0 at src/unix/linux_like/mod.rs:1495:13: 1495:48
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/mod.rs:1495:47: 1495:48
        goto -> bb4;                     // scope 0 at src/unix/linux_like/mod.rs:1494:9: 1498:10
    }

    bb3: {
        _0 = const {0x0 as *mut gnu::cmsghdr}; // scope 0 at src/unix/linux_like/mod.rs:1497:13: 1497:30
                                         // ty::Const
                                         // + ty: *mut unix::linux_like::linux::gnu::cmsghdr
                                         // + val: Value(Scalar(0x0000000000000000))
                                         // mir::Constant
                                         // + span: src/unix/linux_like/mod.rs:1497:13: 1497:30
                                         // + literal: Const { ty: *mut unix::linux_like::linux::gnu::cmsghdr, val: Value(Scalar(0x0000000000000000)) }
        goto -> bb4;                     // scope 0 at src/unix/linux_like/mod.rs:1494:9: 1498:10
    }

    bb4: {
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/mod.rs:1498:9: 1498:10
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const IFF_TUN_EXCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1464:25: 1464:32

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1464:35: 1464:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1464:1: 1464:42
    }
}

const SYS_inotify_init: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:332:29: 332:37

    bb0: {
        _0 = const 253_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:332:40: 332:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:332:1: 332:44
    }
}

const ETH_P_DIAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1985:23: 1985:30

    bb0: {
        _0 = const 24581_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1985:33: 1985:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1985:1: 1985:40
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::pthread_mutex_t) -> linux::pthread_mutex_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::pthread_mutex_t; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const NUD_PROBE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2439:22: 2439:25

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2439:28: 2439:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2439:1: 2439:33
    }
}

const NFT_META_SKUID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2916:27: 2916:34

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2916:37: 2916:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2916:1: 2916:40
    }
}

const NI_MAXHOST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:833:23: 833:34

    bb0: {
        _0 = const 1025_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:833:37: 833:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:833:1: 833:42
    }
}

const MSG_MORE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:778:21: 778:28

    bb0: {
        _0 = const 32768_i32;            // scope 0 at src/unix/linux_like/mod.rs:778:31: 778:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:778:1: 778:38
    }
}

const IPTOS_PREC_CRITIC_ECP: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1259:34: 1259:36

    bb0: {
        _0 = const 160_u8;               // scope 0 at src/unix/linux_like/mod.rs:1259:39: 1259:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1259:1: 1259:44
    }
}

const ENOTUNIQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:443:21: 443:28

    bb0: {
        _0 = const 76_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:443:31: 443:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:443:1: 443:34
    }
}

const AT_UID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1317:19: 1317:28

    bb0: {
        _0 = const 11_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1317:31: 1317:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1317:1: 1317:34
    }
}

const SYS_capset: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:205:23: 205:31

    bb0: {
        _0 = const 126_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:205:34: 205:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:205:1: 205:38
    }
}

const IPV6_FLOWINFO_FLOWLABEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1838:36: 1838:43

    bb0: {
        _0 = const 1048575_i32;          // scope 0 at src/unix/linux_like/linux/mod.rs:1838:46: 1838:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1838:1: 1838:57
    }
}

const TCSETSW2: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:160:21: 160:28

    bb0: {
        _0 = const 1076646956_u64;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:160:31: 160:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:160:1: 160:42
    }
}

const NF_NETDEV_NUMHOOKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2293:31: 2293:38

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2293:41: 2293:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2293:1: 2293:43
    }
}

const KEY_REQKEY_DEFL_USER_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2743:41: 2743:44

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2743:47: 2743:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2743:1: 2743:49
    }
}

const J1939_NLA_TOTAL_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3232:33: 3232:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3232:43: 3232:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3232:1: 3232:45
    }
}

const LC_TELEPHONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:684:25: 684:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:684:35: 684:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:684:1: 684:38
    }
}

const IFF_BROADCAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:646:26: 646:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:646:36: 646:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:646:1: 646:40
    }
}

const PARMRK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1101:19: 1101:29

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:1101:32: 1101:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1101:1: 1101:43
    }
}

const KEYCTL_CAPS0_MOVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:978:38: 978:41

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:978:44: 978:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:978:9: 978:49
    }
}

const IEXTEN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:723:19: 723:29

    bb0: {
        _0 = const 32768_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:723:32: 723:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:723:1: 723:43
    }
}

const _SC_MQ_OPEN_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1188:28: 1188:35

    bb0: {
        _0 = const 27_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1188:38: 1188:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1188:1: 1188:41
    }
}

const not_x32::__SIZEOF_PTHREAD_RWLOCK_T: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:24:38: 24:43

    bb0: {
        _0 = const 56_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:24:46: 24:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:24:1: 24:49
    }
}

const PR_GET_KEEPCAPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1670:28: 1670:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1670:38: 1670:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1670:1: 1670:40
    }
}

const NFULNL_CFG_CMD_UNBIND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2123:34: 2123:41

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2123:44: 2123:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2123:1: 2123:46
    }
}

const RTM_NEWNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2576:24: 2576:27

    bb0: {
        _0 = const 88_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2576:30: 2576:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2576:1: 2576:33
    }
}

const LINUX_REBOOT_MAGIC1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3074:32: 3074:39

    bb0: {
        _0 = const -18751827_i32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3074:42: 3074:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3074:1: 3074:53
    }
}

fn CPU_SET(_1: usize, _2: &mut linux::cpu_set_t) -> () {
    debug cpu => _1;                     // in scope 0 at src/macros.rs:243:43: 243:47
    debug cpuset => _2;                  // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: ();                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3283:59: 3283:61
    let _3: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3284:13: 3284:25
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3285:19: 3285:54
    let mut _5: &u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
    let _6: &u64;                        // in scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
    let _7: usize;                       // in scope 0 at src/unix/linux_like/linux/mod.rs:3285:51: 3285:52
    let mut _10: (usize, usize);         // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:29: 3286:69
    let mut _11: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
    let mut _12: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:33
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:36: 3286:48
    let mut _14: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
    let mut _15: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
    let mut _16: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:53
    let mut _17: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:56: 3286:68
    let mut _18: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
    let mut _19: u64;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3287:29: 3287:40
    let mut _20: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3287:34: 3287:40
    let _21: usize;                      // in scope 0 at src/unix/linux_like/linux/mod.rs:3287:21: 3287:24
    let mut _22: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:25
    let mut _23: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:25
    scope 1 {
        debug size_in_bits => _3;        // in scope 1 at src/unix/linux_like/linux/mod.rs:3284:13: 3284:25
        let _8: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3286:14: 3286:17
        let _9: usize;                   // in scope 1 at src/unix/linux_like/linux/mod.rs:3286:19: 3286:25
        scope 2 {
            debug idx => _8;             // in scope 2 at src/unix/linux_like/linux/mod.rs:3286:14: 3286:17
            debug offset => _9;          // in scope 2 at src/unix/linux_like/linux/mod.rs:3286:19: 3286:25
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3284:13: 3284:25
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:19: 3285:54
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:51: 3285:52
        _7 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:3285:51: 3285:52
        _6 = &((*_2).0: [u64; 16])[_7];  // scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
        _5 = _6;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3285:38: 3285:53
        _4 = core::mem::size_of_val::<u64>(move _5) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3285:19: 3285:54
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3285:19: 3285:37
                                         // + literal: Const { ty: for<'r> fn(&'r u64) -> usize {core::mem::size_of_val::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:53: 3285:54
        _3 = Mul(const 8_usize, move _4); // scope 0 at src/unix/linux_like/linux/mod.rs:3285:15: 3285:54
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:53: 3285:54
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:53: 3285:54
        StorageDead(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3285:53: 3285:54
        StorageLive(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:29: 3286:69
        StorageLive(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
        StorageLive(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:33
        _12 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:33
        StorageLive(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:36: 3286:48
        _13 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3286:36: 3286:48
        _14 = Eq(_13, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
        assert(!move _14, "attempt to divide `{}` by zero", _12) -> bb2; // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
    }

    bb2: {
        _11 = Div(move _12, move _13);   // scope 1 at src/unix/linux_like/linux/mod.rs:3286:30: 3286:48
        StorageDead(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:47: 3286:48
        StorageDead(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:47: 3286:48
        StorageLive(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
        StorageLive(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:53
        _16 = _1;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:53
        StorageLive(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:56: 3286:68
        _17 = _3;                        // scope 1 at src/unix/linux_like/linux/mod.rs:3286:56: 3286:68
        _18 = Eq(_17, const 0_usize);    // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
        assert(!move _18, "attempt to calculate the remainder of `{}` with a divisor of zero", _16) -> bb3; // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
    }

    bb3: {
        _15 = Rem(move _16, move _17);   // scope 1 at src/unix/linux_like/linux/mod.rs:3286:50: 3286:68
        StorageDead(_17);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:67: 3286:68
        StorageDead(_16);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:67: 3286:68
        (_10.0: usize) = move _11;       // scope 1 at src/unix/linux_like/linux/mod.rs:3286:29: 3286:69
        (_10.1: usize) = move _15;       // scope 1 at src/unix/linux_like/linux/mod.rs:3286:29: 3286:69
        StorageDead(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:68: 3286:69
        StorageDead(_11);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:68: 3286:69
        StorageLive(_8);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3286:14: 3286:17
        _8 = (_10.0: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3286:14: 3286:17
        StorageLive(_9);                 // scope 1 at src/unix/linux_like/linux/mod.rs:3286:19: 3286:25
        _9 = (_10.1: usize);             // scope 1 at src/unix/linux_like/linux/mod.rs:3286:19: 3286:25
        StorageDead(_10);                // scope 1 at src/unix/linux_like/linux/mod.rs:3286:68: 3286:69
        StorageLive(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:29: 3287:40
        StorageLive(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:34: 3287:40
        _20 = _9;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3287:34: 3287:40
        _19 = Shl(const 1_u64, move _20); // scope 2 at src/unix/linux_like/linux/mod.rs:3287:29: 3287:40
        StorageDead(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:39: 3287:40
        StorageLive(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:21: 3287:24
        _21 = _8;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3287:21: 3287:24
        _22 = const 16_usize;            // scope 2 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:25
        _23 = Lt(_21, _22);              // scope 2 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:25
        assert(move _23, "index out of bounds: the length is {} but the index is {}", move _22, _21) -> bb4; // scope 2 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:25
    }

    bb4: {
        ((*_2).0: [u64; 16])[_21] = BitOr(((*_2).0: [u64; 16])[_21], move _19); // scope 2 at src/unix/linux_like/linux/mod.rs:3287:9: 3287:40
        StorageDead(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:39: 3287:40
        StorageDead(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3287:39: 3287:40
        StorageDead(_9);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_8);                 // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_3);                 // scope 0 at src/macros.rs:246:17: 246:18
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const SIGTRAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:486:20: 486:27

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:486:30: 486:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:486:1: 486:32
    }
}

const STATX__RESERVED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1016:28: 1016:35

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1016:38: 1016:48
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1016:1: 1016:49
    }
}

const IPV6_RECVPATHMTU: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:936:29: 936:36

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/mod.rs:936:39: 936:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:936:1: 936:42
    }
}

const SA_RESTART: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:585:23: 585:30

    bb0: {
        _0 = const 268435456_i32;        // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:585:33: 585:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:585:1: 585:44
    }
}

const USBDEVICE_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1428:42: 1428:50

    bb0: {
        _0 = const 40866_i64;            // scope 0 at src/unix/linux_like/mod.rs:1428:53: 1428:63
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1428:9: 1428:64
    }
}

const TUN_TYPE_MASK: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1460:26: 1460:35

    bb0: {
        _0 = const 15_i16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1460:38: 1460:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1460:1: 1460:45
    }
}

const SYS_keyctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:329:23: 329:31

    bb0: {
        _0 = const 250_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:329:34: 329:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:329:1: 329:38
    }
}

const ETH_P_DNA_RC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1982:25: 1982:32

    bb0: {
        _0 = const 24578_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1982:35: 1982:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1982:1: 1982:42
    }
}

linux::pthread_cond_t::size::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/align.rs:72:28: 72:53

    bb0: {
        _0 = const linux::__SIZEOF_PTHREAD_COND_T; // scope 0 at src/unix/linux_like/linux/align.rs:72:28: 72:53
        return;                          // scope 0 at src/unix/linux_like/linux/align.rs:72:28: 72:53
    }
}

const NUD_REACHABLE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2436:26: 2436:29

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2436:32: 2436:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2436:1: 2436:37
    }
}

const NFT_META_OIFNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2913:29: 2913:36

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2913:39: 2913:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2913:1: 2913:41
    }
}

const _SC_LEVEL4_CACHE_LINESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:830:38: 830:45

    bb0: {
        _0 = const 199_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:830:48: 830:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:830:1: 830:52
    }
}

const MSG_RST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:775:20: 775:27

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/mod.rs:775:30: 775:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:775:1: 775:37
    }
}

const IPTOS_MINCOST: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1255:26: 1255:28

    bb0: {
        _0 = const 2_u8;                 // scope 0 at src/unix/linux_like/mod.rs:1255:31: 1255:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1255:1: 1255:36
    }
}

const EBADSLT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:440:20: 440:27

    bb0: {
        _0 = const 57_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:440:30: 440:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:440:1: 440:33
    }
}

const AT_FLAGS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1314:21: 1314:30

    bb0: {
        _0 = const 8_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1314:33: 1314:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1314:1: 1314:35
    }
}

const SYS_setfsgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:202:25: 202:33

    bb0: {
        _0 = const 123_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:202:36: 202:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:202:1: 202:40
    }
}

const IPV6_FLOWINFO_SEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1835:31: 1835:38

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1835:41: 1835:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1835:1: 1835:44
    }
}

const TIOCGSID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:157:21: 157:28

    bb0: {
        _0 = const 21545_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:157:31: 157:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:157:1: 157:38
    }
}

const NFPROTO_INET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2289:25: 2289:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2289:35: 2289:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2289:1: 2289:37
    }
}

const KEY_REQKEY_DEFL_THREAD_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2740:43: 2740:46

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2740:49: 2740:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2740:1: 2740:51
    }
}

const SCM_J1939_ERRQUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3228:31: 3228:38

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3228:41: 3228:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3228:1: 3228:43
    }
}

const LC_PAPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:681:21: 681:28

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:681:31: 681:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:681:1: 681:33
    }
}

const MADV_DODUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:642:24: 642:31

    bb0: {
        _0 = const 17_i32;               // scope 0 at src/unix/linux_like/mod.rs:642:34: 642:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:642:1: 642:37
    }
}

const IGNBRK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1098:19: 1098:29

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:1098:32: 1098:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1098:1: 1098:43
    }
}

const KEYCTL_CAPS0_BIG_KEY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:975:41: 975:44

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:975:47: 975:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:975:9: 975:52
    }
}

const VEOL: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:720:17: 720:22

    bb0: {
        _0 = const 11_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:720:25: 720:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:720:1: 720:28
    }
}

const _SC_AIO_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1185:24: 1185:31

    bb0: {
        _0 = const 24_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1185:34: 1185:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1185:1: 1185:37
    }
}

const PR_SET_UNALIGN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1666:27: 1666:34

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1666:37: 1666:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1666:1: 1666:39
    }
}

const PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP: linux::pthread_mutex_t = {
    let mut _0: unix::linux_like::linux::pthread_mutex_t; // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:36:56: 36:73
    let mut _1: [u8; 40];                // in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:38:19: 41:14

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:38:19: 41:14
        _1 = [const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 2_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8, const 0_u8]; // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:38:19: 41:14
        (_0.0: [u8; 40]) = move _1;      // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const NFULA_CT_INFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2119:26: 2119:33

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2119:36: 2119:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2119:1: 2119:39
    }
}

const RTM_NEWMDB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2573:23: 2573:26

    bb0: {
        _0 = const 84_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2573:29: 2573:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2573:1: 2573:32
    }
}

const FUTEX_PRIVATE_FLAG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3069:31: 3069:38

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3069:41: 3069:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3069:1: 3069:45
    }
}

fn CMSG_NXTHDR(_1: *const gnu::msghdr, _2: *const gnu::cmsghdr) -> *mut gnu::cmsghdr {
    debug mhdr => _1;                    // in scope 0 at src/macros.rs:243:43: 243:47
    debug cmsg => _2;                    // in scope 0 at src/macros.rs:243:43: 243:47
    let mut _0: *mut unix::linux_like::linux::gnu::cmsghdr; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3253:49: 3253:61
    let mut _3: bool;                    // in scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:69
    let mut _4: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:39
    let mut _5: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3254:42: 3254:69
    let _6: *mut unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/linux/mod.rs:3257:13: 3257:17
    let mut _7: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3257:20: 3258:66
    let mut _8: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:34
    let mut _9: *const unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:25
    let mut _10: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3258:21: 3258:65
    let mut _11: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3258:39: 3258:64
    let mut _13: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:47
    let mut _14: *mut core::ffi::c_void; // in scope 0 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:38
    let mut _15: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3261:15: 3261:46
    let mut _16: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
    let mut _17: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:43
    let mut _18: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:37
    let mut _19: *mut unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:28
    let mut _20: *mut unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:13: 3262:17
    let mut _21: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3262:40: 3262:43
    let mut _22: bool;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:79
    let mut _23: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:73
    let mut _24: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:26
    let mut _25: *mut unix::linux_like::linux::gnu::cmsghdr; // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:17
    let mut _26: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:29: 3263:73
    let mut _27: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:47: 3263:72
    let mut _28: usize;                  // in scope 0 at src/unix/linux_like/linux/mod.rs:3263:76: 3263:79
    scope 1 {
        debug next => _6;                // in scope 1 at src/unix/linux_like/linux/mod.rs:3257:13: 3257:17
        let _12: usize;                  // in scope 1 at src/unix/linux_like/linux/mod.rs:3260:13: 3260:16
        scope 2 {
            debug max => _12;            // in scope 2 at src/unix/linux_like/linux/mod.rs:3260:13: 3260:16
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:69
        StorageLive(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:39
        _4 = ((*_2).0: usize);           // scope 0 at src/unix/linux_like/linux/mod.rs:3254:13: 3254:29
        StorageLive(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3254:42: 3254:69
        _5 = core::mem::size_of::<gnu::cmsghdr>() -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3254:42: 3254:69
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3254:42: 3254:67
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::gnu::cmsghdr>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _3 = Lt(move _4, move _5);       // scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:69
        StorageDead(_5);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3254:68: 3254:69
        StorageDead(_4);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3254:68: 3254:69
        switchInt(move _3) -> [false: bb3, otherwise: bb2]; // scope 0 at src/unix/linux_like/linux/mod.rs:3254:12: 3254:69
    }

    bb2: {
        _0 = const {0x0 as *mut gnu::cmsghdr}; // scope 0 at src/unix/linux_like/linux/mod.rs:3255:20: 3255:37
                                         // ty::Const
                                         // + ty: *mut unix::linux_like::linux::gnu::cmsghdr
                                         // + val: Value(Scalar(0x0000000000000000))
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3255:20: 3255:37
                                         // + literal: Const { ty: *mut unix::linux_like::linux::gnu::cmsghdr, val: Value(Scalar(0x0000000000000000)) }
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3256:9: 3256:10
        goto -> bb13;                    // scope 0 at src/macros.rs:246:18: 246:18
    }

    bb3: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3256:9: 3256:10
        StorageLive(_6);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3257:13: 3257:17
        StorageLive(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3257:20: 3258:66
        StorageLive(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:34
        StorageLive(_9);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:25
        _9 = _2;                         // scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:25
        _8 = move _9 as usize (Misc);    // scope 0 at src/unix/linux_like/linux/mod.rs:3257:21: 3257:34
        StorageDead(_9);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3257:33: 3257:34
        StorageLive(_10);                // scope 0 at src/unix/linux_like/linux/mod.rs:3258:21: 3258:65
        StorageLive(_11);                // scope 0 at src/unix/linux_like/linux/mod.rs:3258:39: 3258:64
        _11 = ((*_2).0: usize);          // scope 0 at src/unix/linux_like/linux/mod.rs:3258:39: 3258:55
        _10 = CMSG_ALIGN(move _11) -> bb4; // scope 0 at src/unix/linux_like/linux/mod.rs:3258:21: 3258:65
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3258:21: 3258:38
                                         // + literal: Const { ty: fn(usize) -> usize {unix::linux_like::CMSG_ALIGN}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_11);                // scope 0 at src/unix/linux_like/linux/mod.rs:3258:64: 3258:65
        _7 = Add(move _8, move _10);     // scope 0 at src/unix/linux_like/linux/mod.rs:3257:20: 3258:66
        StorageDead(_10);                // scope 0 at src/unix/linux_like/linux/mod.rs:3258:65: 3258:66
        StorageDead(_8);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3258:65: 3258:66
        _6 = move _7 as *mut unix::linux_like::linux::gnu::cmsghdr (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3257:20: 3259:28
        StorageDead(_7);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3259:27: 3259:28
        StorageLive(_12);                // scope 1 at src/unix/linux_like/linux/mod.rs:3260:13: 3260:16
        StorageLive(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:47
        StorageLive(_14);                // scope 1 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:38
        _14 = ((*_1).4: *mut core::ffi::c_void); // scope 1 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:38
        _13 = move _14 as usize (Misc);  // scope 1 at src/unix/linux_like/linux/mod.rs:3260:19: 3260:47
        StorageDead(_14);                // scope 1 at src/unix/linux_like/linux/mod.rs:3260:46: 3260:47
        StorageLive(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3261:15: 3261:46
        _15 = ((*_1).5: usize);          // scope 1 at src/unix/linux_like/linux/mod.rs:3261:15: 3261:37
        _12 = Add(move _13, move _15);   // scope 1 at src/unix/linux_like/linux/mod.rs:3260:19: 3261:46
        StorageDead(_15);                // scope 1 at src/unix/linux_like/linux/mod.rs:3261:45: 3261:46
        StorageDead(_13);                // scope 1 at src/unix/linux_like/linux/mod.rs:3261:45: 3261:46
        StorageLive(_16);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
        StorageLive(_17);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:43
        StorageLive(_18);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:37
        StorageLive(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:28
        StorageLive(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:13: 3262:17
        _20 = _6;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3262:13: 3262:17
        _19 = ptr::mut_ptr::<impl *mut gnu::cmsghdr>::offset(move _20, const 1_isize) -> bb8; // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:28
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3262:18: 3262:24
                                         // + literal: Const { ty: unsafe fn(*mut unix::linux_like::linux::gnu::cmsghdr, isize) -> *mut unix::linux_like::linux::gnu::cmsghdr {core::ptr::mut_ptr::<impl *mut unix::linux_like::linux::gnu::cmsghdr>::offset}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        _16 = const true;                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
        goto -> bb7;                     // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
    }

    bb6: {
        StorageLive(_22);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:79
        StorageLive(_23);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:73
        StorageLive(_24);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:26
        StorageLive(_25);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:17
        _25 = _6;                        // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:17
        _24 = move _25 as usize (Misc);  // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:26
        StorageDead(_25);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:25: 3263:26
        StorageLive(_26);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:29: 3263:73
        StorageLive(_27);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:47: 3263:72
        _27 = ((*_6).0: usize);          // scope 2 at src/unix/linux_like/linux/mod.rs:3263:47: 3263:63
        _26 = CMSG_ALIGN(move _27) -> bb9; // scope 2 at src/unix/linux_like/linux/mod.rs:3263:29: 3263:73
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3263:29: 3263:46
                                         // + literal: Const { ty: fn(usize) -> usize {unix::linux_like::CMSG_ALIGN}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_22);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:78: 3263:79
        StorageDead(_17);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:78: 3263:79
        switchInt(move _16) -> [false: bb11, otherwise: bb10]; // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
    }

    bb8: {
        StorageDead(_20);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:27: 3262:28
        _18 = move _19 as usize (Misc);  // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:37
        StorageDead(_19);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:36: 3262:37
        StorageLive(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:40: 3262:43
        _21 = _12;                       // scope 2 at src/unix/linux_like/linux/mod.rs:3262:40: 3262:43
        _17 = Gt(move _18, move _21);    // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3262:43
        StorageDead(_21);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:42: 3262:43
        StorageDead(_18);                // scope 2 at src/unix/linux_like/linux/mod.rs:3262:42: 3262:43
        switchInt(move _17) -> [false: bb6, otherwise: bb5]; // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
    }

    bb9: {
        StorageDead(_27);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:72: 3263:73
        _23 = Add(move _24, move _26);   // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:73
        StorageDead(_26);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:72: 3263:73
        StorageDead(_24);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:72: 3263:73
        StorageLive(_28);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:76: 3263:79
        _28 = _12;                       // scope 2 at src/unix/linux_like/linux/mod.rs:3263:76: 3263:79
        _22 = Gt(move _23, move _28);    // scope 2 at src/unix/linux_like/linux/mod.rs:3263:13: 3263:79
        StorageDead(_28);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:78: 3263:79
        StorageDead(_23);                // scope 2 at src/unix/linux_like/linux/mod.rs:3263:78: 3263:79
        _16 = move _22;                  // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
        goto -> bb7;                     // scope 2 at src/unix/linux_like/linux/mod.rs:3262:12: 3263:79
    }

    bb10: {
        _0 = const {0x0 as *mut gnu::cmsghdr}; // scope 2 at src/unix/linux_like/linux/mod.rs:3265:13: 3265:30
                                         // ty::Const
                                         // + ty: *mut unix::linux_like::linux::gnu::cmsghdr
                                         // + val: Value(Scalar(0x0000000000000000))
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3265:13: 3265:30
                                         // + literal: Const { ty: *mut unix::linux_like::linux::gnu::cmsghdr, val: Value(Scalar(0x0000000000000000)) }
        goto -> bb12;                    // scope 2 at src/unix/linux_like/linux/mod.rs:3262:9: 3268:10
    }

    bb11: {
        _0 = _6;                         // scope 2 at src/unix/linux_like/linux/mod.rs:3267:13: 3267:17
        goto -> bb12;                    // scope 2 at src/unix/linux_like/linux/mod.rs:3262:9: 3268:10
    }

    bb12: {
        StorageDead(_16);                // scope 2 at src/unix/linux_like/linux/mod.rs:3268:9: 3268:10
        StorageDead(_12);                // scope 1 at src/macros.rs:246:17: 246:18
        StorageDead(_6);                 // scope 0 at src/macros.rs:246:17: 246:18
        goto -> bb13;                    // scope 0 at src/macros.rs:246:18: 246:18
    }

    bb13: {
        return;                          // scope 0 at src/macros.rs:246:18: 246:18
    }
}

const F_SEAL_SHRINK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:480:26: 480:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:480:36: 480:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:480:1: 480:43
    }
}

const STATX_BTIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1013:24: 1013:32

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1013:35: 1013:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1013:1: 1013:42
    }
}

const IPV6_RTHDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:933:23: 933:30

    bb0: {
        _0 = const 57_i32;               // scope 0 at src/unix/linux_like/mod.rs:933:33: 933:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:933:1: 933:36
    }
}

const EDOTDOT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:581:20: 581:27

    bb0: {
        _0 = const 73_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:581:30: 581:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:581:1: 581:33
    }
}

const TMPFS_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1425:32: 1425:40

    bb0: {
        _0 = const 16914836_i64;         // scope 0 at src/unix/linux_like/mod.rs:1425:43: 1425:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1425:9: 1425:54
    }
}

const TUN_READQ_SIZE: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1456:27: 1456:36

    bb0: {
        _0 = const 500_i16;              // scope 0 at src/unix/linux_like/linux/mod.rs:1456:39: 1456:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1456:1: 1456:43
    }
}

const SYS_waitid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:326:23: 326:31

    bb0: {
        _0 = const 247_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:326:34: 326:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:326:1: 326:38
    }
}

const ETH_P_BATMAN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1979:25: 1979:32

    bb0: {
        _0 = const 17157_i32;            // scope 0 at src/unix/linux_like/linux/mod.rs:1979:35: 1979:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1979:1: 1979:42
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::pthread_cond_t) -> linux::pthread_cond_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::pthread_cond_t; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const RT_CLASS_MAX: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2431:25: 2431:27

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/linux/mod.rs:2431:30: 2431:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2431:1: 2431:34
    }
}

const NFT_META_IIF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2910:25: 2910:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2910:35: 2910:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2910:1: 2910:37
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &uinput_ff_upload) -> uinput_ff_upload {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::uinput_ff_upload; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &hostent) -> hostent {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::hostent;           // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_LEVEL3_CACHE_LINESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:827:38: 827:45

    bb0: {
        _0 = const 196_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:827:48: 827:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:827:1: 827:52
    }
}

const MSG_FIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:772:20: 772:27

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/mod.rs:772:30: 772:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:772:1: 772:36
    }
}

const IPTOS_LOWDELAY: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/mod.rs:1252:27: 1252:29

    bb0: {
        _0 = const 16_u8;                // scope 0 at src/unix/linux_like/mod.rs:1252:32: 1252:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1252:1: 1252:37
    }
}

const EXFULL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:437:19: 437:26

    bb0: {
        _0 = const 54_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:437:29: 437:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:437:1: 437:32
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::stack_t) -> b64::x86_64::stack_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::stack_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AT_PHNUM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1311:21: 1311:30

    bb0: {
        _0 = const 5_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1311:33: 1311:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1311:1: 1311:35
    }
}

const SYS_getresgid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:199:26: 199:34

    bb0: {
        _0 = const 120_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:199:37: 199:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:199:1: 199:41
    }
}

const IP_RECVFRAGSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1831:28: 1831:35

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1831:38: 1831:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1831:1: 1831:41
    }
}

const TCSBRKP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:154:20: 154:27

    bb0: {
        _0 = const 21541_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:154:30: 154:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:154:1: 154:37
    }
}

const NFPROTO_IPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2286:25: 2286:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2286:35: 2286:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2286:1: 2286:38
    }
}

const KEY_SPEC_REQUESTOR_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2736:39: 2736:42

    bb0: {
        _0 = const -8_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2736:45: 2736:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2736:1: 2736:48
    }
}

const SCM_J1939_DEST_ADDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3225:32: 3225:39

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3225:42: 3225:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3225:1: 3225:44
    }
}

const SOL_NFC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:676:20: 676:27

    bb0: {
        _0 = const 280_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:676:30: 676:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:676:1: 676:34
    }
}

const MADV_HUGEPAGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:639:26: 639:33

    bb0: {
        _0 = const 14_i32;               // scope 0 at src/unix/linux_like/mod.rs:639:36: 639:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:639:1: 639:39
    }
}

const VINTR: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/mod.rs:1095:18: 1095:23

    bb0: {
        _0 = const 0_usize;              // scope 0 at src/unix/linux_like/mod.rs:1095:26: 1095:27
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1095:1: 1095:28
    }
}

const KEYCTL_CAPS0_PERSISTENT_KEYRINGS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:972:53: 972:56

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:972:59: 972:63
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:972:9: 972:64
    }
}

const B3000000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:716:21: 716:30

    bb0: {
        _0 = const 4109_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:716:33: 716:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:716:1: 716:42
    }
}

const _SC_SEMAPHORES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1182:27: 1182:34

    bb0: {
        _0 = const 21_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1182:37: 1182:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1182:1: 1182:40
    }
}

const PR_GET_DUMPABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1662:28: 1662:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1662:38: 1662:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1662:1: 1662:40
    }
}

const NFULA_HWHEADER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2116:27: 2116:34

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2116:37: 2116:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2116:1: 2116:40
    }
}

const RTM_SETDCB: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2570:23: 2570:26

    bb0: {
        _0 = const 79_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2570:29: 2570:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2570:1: 2570:32
    }
}

const FUTEX_WAKE_BITSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3065:30: 3065:37

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3065:40: 3065:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3065:1: 3065:43
    }
}

const CAN_MTU: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3178:28: 3178:33

    bb0: {
        _0 = core::mem::size_of::<can_frame>() -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3178:36: 3178:65
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/mod.rs:3178:36: 3178:63
                                         // + literal: Const { ty: fn() -> usize {core::mem::size_of::<unix::linux_like::linux::can_frame>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3178:9: 3178:66
    }
}

const F_ADD_SEALS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:476:24: 476:31

    bb0: {
        _0 = const 1033_i32;             // scope 0 at src/unix/linux_like/mod.rs:476:34: 476:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:476:1: 476:39
    }
}

const STATX_SIZE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1010:23: 1010:31

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1010:34: 1010:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1010:1: 1010:41
    }
}

const IPV6_HOPOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:930:25: 930:32

    bb0: {
        _0 = const 54_i32;               // scope 0 at src/unix/linux_like/mod.rs:930:35: 930:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:930:1: 930:38
    }
}

const ESRMNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:578:19: 578:26

    bb0: {
        _0 = const 69_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:578:29: 578:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:578:1: 578:32
    }
}

const SMACK_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1422:32: 1422:40

    bb0: {
        _0 = const 1128357203_i64;       // scope 0 at src/unix/linux_like/mod.rs:1422:43: 1422:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1422:9: 1422:54
    }
}

const linux::IFF_TUN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1452:20: 1452:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1452:30: 1452:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1452:1: 1452:37
    }
}

const SYS_mq_notify: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:323:26: 323:34

    bb0: {
        _0 = const 244_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:323:37: 323:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:323:1: 323:41
    }
}

const ETH_P_BPQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1976:22: 1976:29

    bb0: {
        _0 = const 2303_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1976:32: 1976:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1976:1: 1976:39
    }
}

const RT_CLASS_DEFAULT: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2428:29: 2428:31

    bb0: {
        _0 = const 253_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2428:34: 2428:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2428:1: 2428:38
    }
}

const NFT_META_PROTOCOL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2907:30: 2907:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2907:40: 2907:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2907:1: 2907:42
    }
}

ff_effect::u::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:288:22: 288:23

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/mod.rs:288:22: 288:23
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:288:22: 288:23
    }
}

uinput_user_dev::absmin::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:644:31: 644:38

    bb0: {
        _0 = const ABS_CNT;              // scope 0 at src/unix/linux_like/linux/mod.rs:644:31: 644:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:644:31: 644:38
    }
}

const _SC_LEVEL2_CACHE_LINESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:824:38: 824:45

    bb0: {
        _0 = const 193_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:824:48: 824:51
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:824:1: 824:52
    }
}

const MSG_DONTWAIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:769:25: 769:32

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/mod.rs:769:35: 769:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:769:1: 769:40
    }
}

const POLLRDNORM: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1245:23: 1245:32

    bb0: {
        _0 = const 64_i16;               // scope 0 at src/unix/linux_like/mod.rs:1245:35: 1245:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1245:1: 1245:41
    }
}

const EL2HLT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:434:19: 434:26

    bb0: {
        _0 = const 51_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:434:29: 434:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:434:1: 434:32
    }
}

b64::x86_64::siginfo_t::_align::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:66:23: 66:24

    bb0: {
        _0 = const 0_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:66:23: 66:24
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:66:23: 66:24
    }
}

const AT_EXECFD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1308:22: 1308:31

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1308:34: 1308:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1308:1: 1308:36
    }
}

const SYS_setresuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:196:26: 196:34

    bb0: {
        _0 = const 117_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:196:37: 196:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:196:1: 196:41
    }
}

const FALLOC_FL_UNSHARE_RANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1821:36: 1821:43

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1821:46: 1821:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1821:1: 1821:51
    }
}

const TIOCNOTTY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:151:22: 151:29

    bb0: {
        _0 = const 21538_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:151:32: 151:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:151:1: 151:39
    }
}

const NFPROTO_IPV4: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2283:25: 2283:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2283:35: 2283:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2283:1: 2283:37
    }
}

const KEY_SPEC_USER_SESSION_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2733:42: 2733:45

    bb0: {
        _0 = const -5_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2733:48: 2733:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2733:1: 2733:51
    }
}

const SO_J1939_PROMISC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3221:29: 3221:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3221:39: 3221:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3221:1: 3221:41
    }
}

const SOL_RDS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:673:20: 673:27

    bb0: {
        _0 = const 276_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:673:30: 673:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:673:1: 673:34
    }
}

const MADV_DOFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:636:24: 636:31

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/mod.rs:636:34: 636:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:636:1: 636:37
    }
}

const VT0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1092:16: 1092:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1092:29: 1092:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1092:1: 1092:40
    }
}

const KEYCTL_MOVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:968:32: 968:35

    bb0: {
        _0 = const 30_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:968:38: 968:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:968:9: 968:41
    }
}

const B1500000: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:713:21: 713:30

    bb0: {
        _0 = const 4106_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:713:33: 713:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:713:1: 713:42
    }
}

const _SC_MEMLOCK_RANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1179:30: 1179:37

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1179:40: 1179:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1179:1: 1179:43
    }
}

const MREMAP_DONTUNMAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1657:29: 1657:36

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1657:39: 1657:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1657:1: 1657:41
    }
}

const NFULA_SEQ_GLOBAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2113:29: 2113:36

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2113:39: 2113:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2113:1: 2113:42
    }
}

const RTM_DELADDRLABEL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2567:29: 2567:32

    bb0: {
        _0 = const 73_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2567:35: 2567:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2567:1: 2567:38
    }
}

const FUTEX_UNLOCK_PI: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3062:28: 3062:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3062:38: 3062:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3062:1: 3062:40
    }
}

const NFT_MSG_GETOBJ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2853:35: 2853:42

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2853:45: 2853:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2853:9: 2853:48
    }
}

const F_DUPFD_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:473:28: 473:35

    bb0: {
        _0 = const 1030_i32;             // scope 0 at src/unix/linux_like/mod.rs:473:38: 473:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:473:1: 473:43
    }
}

const STATX_MTIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1007:24: 1007:32

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1007:35: 1007:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1007:1: 1007:42
    }
}

const IPV6_RECVHOPLIMIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:927:30: 927:37

    bb0: {
        _0 = const 51_i32;               // scope 0 at src/unix/linux_like/mod.rs:927:40: 927:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:927:1: 927:43
    }
}

const EREMOTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:575:20: 575:27

    bb0: {
        _0 = const 66_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:575:30: 575:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:575:1: 575:33
    }
}

const REISERFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1419:41: 1419:49

    bb0: {
        _0 = const 1382369651_i64;       // scope 0 at src/unix/linux_like/mod.rs:1419:52: 1419:62
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1419:9: 1419:63
    }
}

_libc_fpstate::_xmm::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:174:34: 174:36

    bb0: {
        _0 = const 16_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:174:34: 174:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:174:34: 174:36
    }
}

const IFLA_INFO_XSTATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1447:29: 1447:39

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1447:42: 1447:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1447:1: 1447:44
    }
}

const SYS_mq_unlink: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:320:26: 320:34

    bb0: {
        _0 = const 241_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:320:37: 320:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:320:1: 320:41
    }
}

const ETH_P_IP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1973:21: 1973:28

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1973:31: 1973:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1973:1: 1973:38
    }
}

const RTF_NAT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2424:20: 2424:23

    bb0: {
        _0 = const 134217728_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:2424:26: 2424:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2424:1: 2424:37
    }
}

const NFT_PAYLOAD_CSUM_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2903:34: 2903:41

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2903:44: 2903:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2903:1: 2903:46
    }
}

fn unix::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ipv6_mreq) -> ipv6_mreq {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::ipv6_mreq;         // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_LEVEL1_DCACHE_LINESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:821:39: 821:46

    bb0: {
        _0 = const 190_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:821:49: 821:52
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:821:1: 821:53
    }
}

const MSG_DONTROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:766:26: 766:33

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:766:36: 766:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:766:1: 766:38
    }
}

gnu::termios::c_cc::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:113:28: 113:34

    bb0: {
        _0 = const b64::x86_64::NCCS;    // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:113:28: 113:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:113:28: 113:34
    }
}

const POLLERR: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1242:20: 1242:29

    bb0: {
        _0 = const 8_i16;                // scope 0 at src/unix/linux_like/mod.rs:1242:32: 1242:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1242:1: 1242:36
    }
}

const ELNRNG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:431:19: 431:26

    bb0: {
        _0 = const 48_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:431:29: 431:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:431:1: 431:32
    }
}

const RLIM_SAVED_CUR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1304:27: 1304:35

    bb0: {
        _0 = const generic::RLIM_INFINITY; // scope 0 at src/unix/linux_like/linux/mod.rs:1304:38: 1304:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1304:1: 1304:52
    }
}

const SYS_setregid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:193:25: 193:33

    bb0: {
        _0 = const 114_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:193:36: 193:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:193:1: 193:40
    }
}

const FALLOC_FL_COLLAPSE_RANGE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1818:37: 1818:44

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1818:47: 1818:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1818:1: 1818:52
    }
}

const TIOCSSERIAL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:148:24: 148:31

    bb0: {
        _0 = const 21535_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:148:34: 148:40
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:148:1: 148:41
    }
}

const NF_INET_POST_ROUTING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2278:33: 2278:40

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2278:43: 2278:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2278:1: 2278:45
    }
}

const KEY_SPEC_PROCESS_KEYRING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2730:37: 2730:40

    bb0: {
        _0 = const -2_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2730:43: 2730:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2730:1: 2730:46
    }
}

const J1939_PGN_MAX: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3217:26: 3217:34

    bb0: {
        _0 = const 262143_u32;           // scope 0 at src/unix/linux_like/linux/mod.rs:3217:37: 3217:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3217:1: 3217:45
    }
}

const SOL_RXRPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:670:22: 670:29

    bb0: {
        _0 = const 272_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:670:32: 670:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:670:1: 670:36
    }
}

const MADV_FREE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:633:22: 633:29

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:633:32: 633:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:633:1: 633:34
    }
}

const CR0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1089:16: 1089:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1089:29: 1089:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1089:1: 1089:40
    }
}

utmpx::__glibc_reserved::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:489:38: 489:40

    bb0: {
        _0 = const 20_usize;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:489:38: 489:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:489:38: 489:40
    }
}

const B921600: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:710:20: 710:29

    bb0: {
        _0 = const 4103_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:710:32: 710:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:710:1: 710:41
    }
}

const _SC_FSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1176:22: 1176:29

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1176:32: 1176:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1176:1: 1176:35
    }
}

const SYNC_FILE_RANGE_WAIT_AFTER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1631:39: 1631:47

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1631:50: 1631:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1631:1: 1631:52
    }
}

const NFULA_PREFIX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2110:25: 2110:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2110:35: 2110:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2110:1: 2110:38
    }
}

const RTM_SETNEIGHTBL: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2564:28: 2564:31

    bb0: {
        _0 = const 67_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2564:34: 2564:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2564:1: 2564:37
    }
}

const FUTEX_CMP_REQUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3059:30: 3059:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3059:40: 3059:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3059:1: 3059:42
    }
}

const SOF_TXTIME_DEADLINE_MODE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2665:45: 2665:48
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2665:51: 2665:57

    bb0: {
        _1 = CheckedShl(const 1_u32, const 0_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2665:51: 2665:57
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 0_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2665:51: 2665:57
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2665:51: 2665:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2665:9: 2665:58
    }
}

const F_GETLEASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:470:23: 470:30

    bb0: {
        _0 = const 1025_i32;             // scope 0 at src/unix/linux_like/mod.rs:470:33: 470:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:470:1: 470:38
    }
}

const STATX_UID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1004:22: 1004:30

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1004:33: 1004:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1004:1: 1004:40
    }
}

const IPV6_HDRINCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:924:25: 924:32

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/mod.rs:924:35: 924:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:924:1: 924:38
    }
}

const ENOSR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:572:18: 572:25

    bb0: {
        _0 = const 63_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:572:28: 572:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:572:1: 572:31
    }
}

const QNX4_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1416:37: 1416:45

    bb0: {
        _0 = const 47_i64;               // scope 0 at src/unix/linux_like/mod.rs:1416:48: 1416:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1416:9: 1416:59
    }
}

const IFLA_INFO_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1444:29: 1444:39

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:1444:42: 1444:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1444:1: 1444:44
    }
}

const SYS_set_mempolicy: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:317:30: 317:38

    bb0: {
        _0 = const 238_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:317:41: 317:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:317:1: 317:45
    }
}

const ETH_P_LOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1970:23: 1970:30

    bb0: {
        _0 = const 96_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1970:33: 1970:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1970:1: 1970:40
    }
}

const RTF_INTERFACE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2421:26: 2421:29

    bb0: {
        _0 = const 1073741824_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:2421:32: 2421:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2421:1: 2421:43
    }
}

const NFT_PAYLOAD_LL_HEADER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2899:34: 2899:41

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2899:44: 2899:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2899:1: 2899:46
    }
}

uinput_user_dev::name::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:640:30: 640:50

    bb0: {
        _0 = const UINPUT_MAX_NAME_SIZE; // scope 0 at src/unix/linux_like/linux/mod.rs:640:30: 640:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:640:30: 640:50
    }
}

const _SC_LEVEL1_ICACHE_LINESIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:818:39: 818:46

    bb0: {
        _0 = const 187_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:818:49: 818:52
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:818:1: 818:53
    }
}

const SOMAXCONN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:762:22: 762:29

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/mod.rs:762:32: 762:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:762:1: 762:36
    }
}

const POLLIN: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1239:19: 1239:28

    bb0: {
        _0 = const 1_i16;                // scope 0 at src/unix/linux_like/mod.rs:1239:31: 1239:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1239:1: 1239:35
    }
}

const EL2NSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:428:21: 428:28

    bb0: {
        _0 = const 45_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:428:31: 428:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:428:1: 428:34
    }
}

const _SC_THREAD_ROBUST_PRIO_INHERIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1300:43: 1300:50

    bb0: {
        _0 = const 247_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1300:53: 1300:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1300:1: 1300:57
    }
}

const SYS_getpgrp: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:190:24: 190:32

    bb0: {
        _0 = const 111_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:190:35: 190:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:190:1: 190:39
    }
}

const _POSIX_VDISABLE: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1814:28: 1814:34

    bb0: {
        _0 = const 0_u8;                 // scope 0 at src/unix/linux_like/linux/mod.rs:1814:37: 1814:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1814:1: 1814:39
    }
}

const TIOCLINUX: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:145:22: 145:29

    bb0: {
        _0 = const 21532_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:145:32: 145:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:145:1: 145:39
    }
}

const NF_INET_LOCAL_IN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2275:29: 2275:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2275:39: 2275:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2275:1: 2275:41
    }
}

const IN_ONLYDIR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2724:23: 2724:26

    bb0: {
        _0 = const 16777216_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2724:29: 2724:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2724:1: 2724:41
    }
}

const J1939_PGN_ADDRESS_CLAIMED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3214:38: 3214:46

    bb0: {
        _0 = const 60928_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:3214:49: 3214:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3214:1: 3214:57
    }
}

const RTLD_DI_TLS_DATA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:665:29: 665:36

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:665:39: 665:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:665:1: 665:42
    }
}

const MADV_SEQUENTIAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:630:28: 630:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:630:38: 630:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:630:1: 630:40
    }
}

const NL0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1086:16: 1086:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/mod.rs:1086:29: 1086:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1086:1: 1086:40
    }
}

const B460800: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:707:20: 707:29

    bb0: {
        _0 = const 4100_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:707:32: 707:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:707:1: 707:41
    }
}

const _SC_ASYNCHRONOUS_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1173:32: 1173:39

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1173:42: 1173:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1173:1: 1173:45
    }
}

const NI_DGRAM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1627:21: 1627:28

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1627:31: 1627:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1627:1: 1627:34
    }
}

const NFULA_IFINDEX_PHYSOUTDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2107:37: 2107:44

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2107:47: 2107:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2107:1: 2107:49
    }
}

const RTM_GETANYCAST: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2561:27: 2561:30

    bb0: {
        _0 = const 62_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2561:33: 2561:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2561:1: 2561:36
    }
}

const FUTEX_WAKE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3056:23: 3056:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3056:33: 3056:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3056:1: 3056:35
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf32_Shdr) -> Elf32_Shdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf32_Shdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_EVENT_STOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1649:38: 1649:45

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1649:48: 1649:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1649:9: 1649:52
    }
}

const F_GETFL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:465:20: 465:27

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:465:30: 465:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:465:1: 465:32
    }
}

const STATX_TYPE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1001:23: 1001:31

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1001:34: 1001:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:1001:1: 1001:41
    }
}

const IPV6_LEAVE_ANYCAST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:921:31: 921:38

    bb0: {
        _0 = const 28_i32;               // scope 0 at src/unix/linux_like/mod.rs:921:41: 921:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:921:1: 921:44
    }
}

const ENOSTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:569:19: 569:26

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:569:29: 569:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:569:1: 569:32
    }
}

const OPENPROM_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1413:41: 1413:49

    bb0: {
        _0 = const 40865_i64;            // scope 0 at src/unix/linux_like/mod.rs:1413:52: 1413:62
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1413:9: 1413:63
    }
}

const IFLA_ALT_IFNAME: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1440:28: 1440:38

    bb0: {
        _0 = const 53_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1440:41: 1440:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1440:1: 1440:44
    }
}

const SYS_utimes: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:314:23: 314:31

    bb0: {
        _0 = const 235_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:314:34: 314:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:314:1: 314:38
    }
}

const ETH_DATA_LEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1965:25: 1965:32

    bb0: {
        _0 = const 1500_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1965:35: 1965:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1965:1: 1965:40
    }
}

const RTCF_LOG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2417:21: 2417:24

    bb0: {
        _0 = const 33554432_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2417:27: 2417:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2417:1: 2417:38
    }
}

const NFT_DYNSET_OP_ADD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2894:30: 2894:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2894:40: 2894:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2894:1: 2894:42
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &uinput_user_dev) -> uinput_user_dev {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::uinput_user_dev; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_USER_GROUPS_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:815:30: 815:37

    bb0: {
        _0 = const 167_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:815:40: 815:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:815:1: 815:44
    }
}

const PF_IEEE802154: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:758:26: 758:33

    bb0: {
        _0 = const AF_IEEE802154;        // scope 0 at src/unix/linux_like/mod.rs:758:36: 758:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:758:1: 758:50
    }
}

const P_PGID: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1229:19: 1229:27

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/mod.rs:1229:30: 1229:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1229:1: 1229:32
    }
}

const ENOMSG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:425:19: 425:26

    bb0: {
        _0 = const 42_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:425:29: 425:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:425:1: 425:32
    }
}

const _SC_TRACE_SYS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1297:30: 1297:37

    bb0: {
        _0 = const 244_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1297:40: 1297:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1297:1: 1297:44
    }
}

const SYS_getegid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:187:24: 187:32

    bb0: {
        _0 = const 108_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:187:35: 187:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:187:1: 187:39
    }
}

const TFD_CLOEXEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1810:24: 1810:31

    bb0: {
        _0 = const b64::x86_64::O_CLOEXEC; // scope 0 at src/unix/linux_like/linux/mod.rs:1810:34: 1810:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1810:1: 1810:44
    }
}

const TIOCSSOFTCAR: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:142:25: 142:32

    bb0: {
        _0 = const 21530_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:142:35: 142:41
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:142:1: 142:42
    }
}

const NF_VERDICT_QBITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2270:29: 2270:36

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2270:39: 2270:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2270:1: 2270:42
    }
}

const IN_UNMOUNT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2721:23: 2721:26

    bb0: {
        _0 = const 8192_u32;             // scope 0 at src/unix/linux_like/linux/mod.rs:2721:29: 2721:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2721:1: 2721:41
    }
}

const J1939_NO_ADDR: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3211:26: 3211:35

    bb0: {
        _0 = const u8::MAX;              // scope 0 at src/unix/linux_like/linux/mod.rs:3211:38: 3211:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3211:1: 3211:43
    }
}

const RTLD_DI_PROFILENAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:662:32: 662:39

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:662:42: 662:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:662:1: 662:44
    }
}

const MAP_TYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:626:21: 626:28

    bb0: {
        _0 = const 15_i32;               // scope 0 at src/unix/linux_like/mod.rs:626:31: 626:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:626:1: 626:38
    }
}

const TCIFLUSH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1083:21: 1083:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1083:31: 1083:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1083:1: 1083:33
    }
}

const B57600: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:704:19: 704:28

    bb0: {
        _0 = const 4097_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:704:31: 704:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:704:1: 704:40
    }
}

const _SC_REALTIME_SIGNALS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1170:33: 1170:40

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1170:43: 1170:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1170:1: 1170:45
    }
}

const NI_NUMERICSERV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1624:27: 1624:34

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1624:37: 1624:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1624:1: 1624:39
    }
}

const NFULA_IFINDEX_INDEV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2104:32: 2104:39

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2104:42: 2104:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2104:1: 2104:44
    }
}

const RTM_GETACTION: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2558:26: 2558:29

    bb0: {
        _0 = const 50_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2558:32: 2558:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2558:1: 2558:35
    }
}

const FAN_DENY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3051:21: 3051:24

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3051:27: 3051:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3051:1: 3051:32
    }
}

const IPV6_MULTICAST_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1646:39: 1646:46

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1646:49: 1646:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1646:9: 1646:52
    }
}

const F_DUPFD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:462:20: 462:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:462:30: 462:31
        return;                          // scope 0 at src/unix/linux_like/mod.rs:462:1: 462:32
    }
}

const AT_STATX_SYNC_AS_STAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:998:34: 998:41

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:998:44: 998:50
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:998:1: 998:51
    }
}

const IPV6_RECVERR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:918:25: 918:32

    bb0: {
        _0 = const 25_i32;               // scope 0 at src/unix/linux_like/mod.rs:918:35: 918:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:918:1: 918:38
    }
}

const O_TRUNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:564:20: 564:27

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:564:30: 564:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:564:1: 564:34
    }
}

const NFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1410:36: 1410:44

    bb0: {
        _0 = const 26985_i64;            // scope 0 at src/unix/linux_like/mod.rs:1410:47: 1410:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1410:9: 1410:58
    }
}

const IFLA_MIN_MTU: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1437:25: 1437:35

    bb0: {
        _0 = const 50_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1437:38: 1437:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1437:1: 1437:41
    }
}

const SYS_epoll_wait: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:311:27: 311:35

    bb0: {
        _0 = const 232_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:311:38: 311:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:311:1: 311:42
    }
}

const ETH_ALEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1962:21: 1962:28

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1962:31: 1962:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1962:1: 1962:33
    }
}

const RTCF_MASQ: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2414:22: 2414:25

    bb0: {
        _0 = const 4194304_u32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2414:28: 2414:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2414:1: 2414:39
    }
}

const NFT_RANGE_EQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2889:25: 2889:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2889:35: 2889:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2889:1: 2889:37
    }
}

const _SC_SYSTEM_DATABASE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:812:32: 812:39

    bb0: {
        _0 = const 162_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:812:42: 812:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:812:1: 812:46
    }
}

const PF_RXRPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:755:21: 755:28

    bb0: {
        _0 = const AF_RXRPC;             // scope 0 at src/unix/linux_like/mod.rs:755:31: 755:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:755:1: 755:40
    }
}

const SIGEV_THREAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1225:25: 1225:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1225:35: 1225:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1225:1: 1225:37
    }
}

const ENOSYS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:422:19: 422:26

    bb0: {
        _0 = const 38_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:422:29: 422:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:422:1: 422:32
    }
}

const _SC_SS_REPL_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1294:28: 1294:35

    bb0: {
        _0 = const 241_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1294:38: 1294:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1294:1: 1294:42
    }
}

const SYS_setuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:184:23: 184:31

    bb0: {
        _0 = const 105_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:184:34: 184:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:184:1: 184:38
    }
}

const ITIMER_REAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1806:24: 1806:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1806:34: 1806:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1806:1: 1806:36
    }
}

const TIOCMBIC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:139:21: 139:28

    bb0: {
        _0 = const 21527_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:139:31: 139:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:139:1: 139:38
    }
}

const NF_VERDICT_MASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2266:28: 2266:35

    bb0: {
        _0 = const 255_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2266:38: 2266:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2266:1: 2266:49
    }
}

const IN_DELETE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2718:22: 2718:25

    bb0: {
        _0 = const 512_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2718:28: 2718:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2718:1: 2718:40
    }
}

const SOL_CAN_J1939: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3207:26: 3207:33
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:3207:36: 3207:60

    bb0: {
        _1 = CheckedAdd(const SOL_CAN_BASE, const CAN_J1939); // scope 0 at src/unix/linux_like/linux/mod.rs:3207:36: 3207:60
        assert(!move (_1.1: bool), "attempt to compute `{} + {}`, which would overflow", const SOL_CAN_BASE, const CAN_J1939) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3207:36: 3207:60
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:3207:36: 3207:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3207:1: 3207:61
    }
}

const RTLD_DI_SERINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:659:28: 659:35

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:659:38: 659:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:659:1: 659:40
    }
}

const SCM_CREDENTIALS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:621:28: 621:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:621:38: 621:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:621:1: 621:43
    }
}

const TCION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1080:18: 1080:25

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:1080:28: 1080:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1080:1: 1080:30
    }
}

utmpx::ut_user::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:462:33: 462:46

    bb0: {
        _0 = const __UT_NAMESIZE;        // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:462:33: 462:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:462:33: 462:46
    }
}

const B38400: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:701:19: 701:28

    bb0: {
        _0 = const 15_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:701:31: 701:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:701:1: 701:40
    }
}

const _SC_TZNAME_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1167:27: 1167:34

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1167:37: 1167:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1167:1: 1167:39
    }
}

user_fpregs_struct::xmm_space::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:281:35: 281:37

    bb0: {
        _0 = const 64_usize;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:281:35: 281:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:281:35: 281:37
    }
}

const EAI_SYSTEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1620:23: 1620:30

    bb0: {
        _0 = const -11_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1620:33: 1620:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1620:1: 1620:37
    }
}

const NFULA_PACKET_HDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2101:29: 2101:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2101:39: 2101:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2101:1: 2101:41
    }
}

const RTM_GETTFILTER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2555:27: 2555:30

    bb0: {
        _0 = const 46_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2555:33: 2555:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2555:1: 2555:36
    }
}

const FAN_MARK_FLUSH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3046:27: 3046:35

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:3046:38: 3046:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3046:1: 3046:50
    }
}

const RUSAGE_THREAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1643:34: 1643:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1643:44: 1643:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1643:9: 1643:46
    }
}

const _IOFBF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:458:19: 458:26

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:458:29: 458:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:458:1: 458:31
    }
}

const M_ARENA_TEST: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:994:25: 994:32

    bb0: {
        _0 = const -7_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:994:35: 994:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:994:1: 994:38
    }
}

const IPV6_ROUTER_ALERT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:915:30: 915:37

    bb0: {
        _0 = const 22_i32;               // scope 0 at src/unix/linux_like/mod.rs:915:40: 915:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:915:1: 915:43
    }
}

const ARPHRD_VOID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1371:24: 1371:27

    bb0: {
        _0 = const u16::MAX;             // scope 0 at src/unix/linux_like/mod.rs:1371:30: 1371:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1371:1: 1371:37
    }
}

const TCSAFLUSH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:558:22: 558:29

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:558:32: 558:33
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:558:1: 558:34
    }
}

const MINIX_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1407:38: 1407:46

    bb0: {
        _0 = const 4991_i64;             // scope 0 at src/unix/linux_like/mod.rs:1407:49: 1407:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1407:9: 1407:60
    }
}

const IFLA_CARRIER_UP_COUNT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1434:34: 1434:44

    bb0: {
        _0 = const 47_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1434:47: 1434:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1434:1: 1434:50
    }
}

const SYS_clock_getres: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:308:29: 308:37

    bb0: {
        _0 = const 229_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:308:40: 308:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:308:1: 308:44
    }
}

const PT_HIOS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1957:20: 1957:23

    bb0: {
        _0 = const 1879048191_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1957:26: 1957:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1957:1: 1957:37
    }
}

const RTF_FLOW: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2410:21: 2410:24

    bb0: {
        _0 = const 33554432_u32;         // scope 0 at src/unix/linux_like/linux/mod.rs:2410:27: 2410:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2410:1: 2410:38
    }
}

const NFT_CMP_LTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2885:24: 2885:31

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2885:34: 2885:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2885:1: 2885:36
    }
}

const _SC_NETWORKING: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:809:27: 809:34

    bb0: {
        _0 = const 152_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:809:37: 809:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:809:1: 809:41
    }
}

const PF_TIPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:752:20: 752:27

    bb0: {
        _0 = const AF_TIPC;              // scope 0 at src/unix/linux_like/mod.rs:752:30: 752:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:752:1: 752:38
    }
}

const CLD_CONTINUED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1221:26: 1221:33

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/mod.rs:1221:36: 1221:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1221:1: 1221:38
    }
}

const EDEADLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:419:20: 419:27

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:419:30: 419:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:419:1: 419:33
    }
}

const _SC_V7_ILP32_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1291:32: 1291:39

    bb0: {
        _0 = const 238_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1291:42: 1291:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1291:1: 1291:46
    }
}

const SYS_getuid: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:181:23: 181:31

    bb0: {
        _0 = const 102_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:181:34: 181:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:181:1: 181:38
    }
}

const SECCOMP_RET_ACTION_FULL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1802:36: 1802:44

    bb0: {
        _0 = const 4294901760_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1802:47: 1802:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1802:1: 1802:58
    }
}

const TIOCSWINSZ: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:136:23: 136:30

    bb0: {
        _0 = const 21524_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:136:33: 136:39
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:136:1: 136:40
    }
}

const NF_REPEAT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2262:22: 2262:29

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2262:32: 2262:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2262:1: 2262:34
    }
}

const IN_MOVED_TO: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2715:24: 2715:27

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2715:30: 2715:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2715:1: 2715:42
    }
}

const CAN_RAW_RECV_OWN_MSGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3202:34: 3202:41

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3202:44: 3202:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3202:1: 3202:46
    }
}

const RTLD_DI_LMID: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:656:25: 656:32

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:656:35: 656:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:656:1: 656:37
    }
}

const MS_MGC_VAL: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:617:23: 617:32

    bb0: {
        _0 = const 3236757504_u64;       // scope 0 at src/unix/linux_like/mod.rs:617:35: 617:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:617:1: 617:46
    }
}

const Q_GETQUOTA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1076:23: 1076:30

    bb0: {
        _0 = const 8388615_i32;          // scope 0 at src/unix/linux_like/mod.rs:1076:33: 1076:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1076:1: 1076:42
    }
}

const B4800: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:698:18: 698:27

    bb0: {
        _0 = const 12_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:698:30: 698:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:698:1: 698:39
    }
}

const _SC_NGROUPS_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1164:28: 1164:35

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1164:38: 1164:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1164:1: 1164:40
    }
}

const EAI_SOCKTYPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1617:25: 1617:32

    bb0: {
        _0 = const -7_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1617:35: 1617:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1617:1: 1617:38
    }
}

const NFULNL_MSG_PACKET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2097:30: 2097:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2097:40: 2097:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2097:1: 2097:42
    }
}

const RTM_GETTCLASS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2552:26: 2552:29

    bb0: {
        _0 = const 42_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2552:32: 2552:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2552:1: 2552:35
    }
}

const FAN_MARK_ONLYDIR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3043:29: 3043:37

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3043:40: 3043:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3043:1: 3043:52
    }
}

const LIO_NOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1640:28: 1640:35

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1640:38: 1640:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1640:9: 1640:40
    }
}

const SEEK_SET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:455:21: 455:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:455:31: 455:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:455:1: 455:33
    }
}

const M_MMAP_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:991:23: 991:30

    bb0: {
        _0 = const -4_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:991:33: 991:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:991:1: 991:36
    }
}

const IPV6_MULTICAST_LOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:912:32: 912:39

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/mod.rs:912:42: 912:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:912:1: 912:45
    }
}

const ARPHRD_IEEE80211_PRISM: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1367:35: 1367:38

    bb0: {
        _0 = const 802_u16;              // scope 0 at src/unix/linux_like/mod.rs:1367:41: 1367:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1367:1: 1367:45
    }
}

const SFD_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:554:25: 554:32

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:554:35: 554:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:554:1: 554:42
    }
}

const MINIX2_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1404:39: 1404:47

    bb0: {
        _0 = const 9320_i64;             // scope 0 at src/unix/linux_like/mod.rs:1404:50: 1404:60
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1404:9: 1404:61
    }
}

const IFLA_NEW_NETNSID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1431:29: 1431:39

    bb0: {
        _0 = const 45_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1431:42: 1431:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1431:1: 1431:45
    }
}

const SYS_timer_delete: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:305:29: 305:37

    bb0: {
        _0 = const 226_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:305:40: 305:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:305:1: 305:44
    }
}

const PT_GNU_EH_FRAME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1954:28: 1954:31

    bb0: {
        _0 = const 1685382480_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1954:34: 1954:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1954:1: 1954:45
    }
}

const RTF_LINKRT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2407:23: 2407:26

    bb0: {
        _0 = const 1048576_u32;          // scope 0 at src/unix/linux_like/linux/mod.rs:2407:29: 2407:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2407:1: 2407:40
    }
}

const NFT_CMP_EQ: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2882:23: 2882:30

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2882:33: 2882:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2882:1: 2882:35
    }
}

const _SC_FILE_SYSTEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:806:28: 806:35

    bb0: {
        _0 = const 148_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:806:38: 806:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:806:1: 806:42
    }
}

const PF_WANPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:749:23: 749:30

    bb0: {
        _0 = const AF_WANPIPE;           // scope 0 at src/unix/linux_like/mod.rs:749:33: 749:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:749:1: 749:44
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &gnu::cmsghdr) -> gnu::cmsghdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::cmsghdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const CLD_DUMPED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1218:23: 1218:30

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:1218:33: 1218:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1218:1: 1218:35
    }
}

const O_TMPFILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:414:22: 414:29

    bb0: {
        _0 = BitOr(const 4194304_i32, const O_DIRECTORY); // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:414:32: 414:56
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:414:1: 414:57
    }
}

const _SC_IPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1288:21: 1288:28

    bb0: {
        _0 = const 235_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1288:31: 1288:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1288:1: 1288:35
    }
}

const SYS_sysinfo: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:178:24: 178:32

    bb0: {
        _0 = const 99_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:178:35: 178:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:178:1: 178:38
    }
}

const SECCOMP_RET_TRACE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1798:30: 1798:38

    bb0: {
        _0 = const 2146435072_u32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1798:41: 1798:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1798:1: 1798:52
    }
}

const TIOCOUTQ: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:133:21: 133:28

    bb0: {
        _0 = const 21521_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:133:31: 133:37
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:133:1: 133:38
    }
}

const NF_ACCEPT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2259:22: 2259:29

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2259:32: 2259:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2259:1: 2259:34
    }
}

const IN_CLOSE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2712:21: 2712:24

    bb0: {
        _0 = BitOr(const IN_CLOSE_WRITE, const IN_CLOSE_NOWRITE); // scope 0 at src/unix/linux_like/linux/mod.rs:2712:27: 2712:60
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2712:1: 2712:61
    }
}

const CAN_RAW_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3199:27: 3199:34

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3199:37: 3199:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3199:1: 3199:39
    }
}

const ACCOUNTING: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:650:23: 650:32

    bb0: {
        _0 = const 9_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:650:35: 650:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:650:1: 650:37
    }
}

const MS_STRICTATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:614:27: 614:36

    bb0: {
        _0 = const 16777216_u64;         // scope 0 at src/unix/linux_like/mod.rs:614:39: 614:48
        return;                          // scope 0 at src/unix/linux_like/mod.rs:614:1: 614:49
    }
}

const Q_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1073:19: 1073:26

    bb0: {
        _0 = const 8388609_i32;          // scope 0 at src/unix/linux_like/mod.rs:1073:29: 1073:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1073:1: 1073:38
    }
}

const B1200: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:695:18: 695:27

    bb0: {
        _0 = const 9_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:695:30: 695:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:695:1: 695:39
    }
}

const _SC_ARG_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1161:24: 1161:31

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1161:34: 1161:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1161:1: 1161:36
    }
}

const EAI_FAIL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1614:21: 1614:28

    bb0: {
        _0 = const -4_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1614:31: 1614:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1614:1: 1614:34
    }
}

const SYS_process_madvise: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:429:32: 429:40

    bb0: {
        _0 = const 440_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:429:43: 429:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:429:1: 429:47
    }
}

const NFNL_SUBSYS_COUNT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2091:30: 2091:37

    bb0: {
        _0 = const 12_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2091:40: 2091:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2091:1: 2091:43
    }
}

const RTM_GETQDISC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2549:25: 2549:28

    bb0: {
        _0 = const 38_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2549:31: 2549:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2549:1: 2549:34
    }
}

const FAN_MARK_ADD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3040:25: 3040:33

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3040:36: 3040:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3040:1: 3040:48
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf64_Phdr) -> Elf64_Phdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf64_Phdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const AIO_ALLDONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1637:32: 1637:39

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1637:42: 1637:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1637:9: 1637:44
    }
}

const EXIT_SUCCESS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:452:25: 452:32

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:452:35: 452:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:452:1: 452:37
    }
}

const M_TRIM_THRESHOLD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:988:29: 988:36

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:988:39: 988:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:988:1: 988:42
    }
}

const IPV6_UNICAST_HOPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:909:30: 909:37

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:909:40: 909:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:909:1: 909:43
    }
}

const ARPHRD_FCFABRIC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1364:28: 1364:31

    bb0: {
        _0 = const 787_u16;              // scope 0 at src/unix/linux_like/mod.rs:1364:34: 1364:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1364:1: 1364:38
    }
}

const F_RDLCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:550:20: 550:27

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:550:30: 550:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:550:1: 550:32
    }
}

const ISOFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1401:38: 1401:46

    bb0: {
        _0 = const 38496_i64;            // scope 0 at src/unix/linux_like/mod.rs:1401:49: 1401:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1401:9: 1401:60
    }
}

const IFLA_PAD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1428:21: 1428:31

    bb0: {
        _0 = const 42_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1428:34: 1428:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1428:1: 1428:37
    }
}

const SYS_timer_settime: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:302:30: 302:38

    bb0: {
        _0 = const 223_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:302:41: 302:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:302:1: 302:45
    }
}

const PT_TLS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1951:19: 1951:22

    bb0: {
        _0 = const 7_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1951:25: 1951:26
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1951:1: 1951:27
    }
}

const RTF_DEFAULT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2404:24: 2404:27

    bb0: {
        _0 = const 65536_u32;            // scope 0 at src/unix/linux_like/linux/mod.rs:2404:30: 2404:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2404:1: 2404:41
    }
}

const NFT_DATA_VALUE_MAXLEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2877:34: 2877:41

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2877:44: 2877:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2877:1: 2877:47
    }
}

fn unix::<impl at src/unix/mod.rs:409:1: 413:2>::clone(_1: &fpos_t) -> fpos_t {
    debug self => _1;                    // in scope 0 at src/unix/mod.rs:410:14: 410:19
    let mut _0: unix::fpos_t;            // return place in scope 0 at src/unix/mod.rs:410:24: 410:30

    bb0: {
        return;                          // scope 0 at src/unix/mod.rs:412:6: 412:6
    }
}

const _SC_PIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:803:21: 803:28

    bb0: {
        _0 = const 145_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:803:31: 803:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:803:1: 803:35
    }
}

const PF_SNA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:746:19: 746:26

    bb0: {
        _0 = const AF_SNA;               // scope 0 at src/unix/linux_like/mod.rs:746:29: 746:35
        return;                          // scope 0 at src/unix/linux_like/mod.rs:746:1: 746:36
    }
}

const SI_LOAD_SHIFT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1214:26: 1214:34

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/mod.rs:1214:37: 1214:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1214:1: 1214:40
    }
}

const O_FSYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:411:20: 411:27

    bb0: {
        _0 = const 1052672_i32;          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:411:30: 411:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:411:1: 411:39
    }
}

const _SC_TRACE_EVENT_FILTER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1285:35: 1285:42

    bb0: {
        _0 = const 182_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1285:45: 1285:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1285:1: 1285:49
    }
}

const SYS_gettimeofday: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:175:29: 175:37

    bb0: {
        _0 = const 96_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:175:40: 175:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:175:1: 175:43
    }
}

const SECCOMP_RET_KILL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1795:29: 1795:37

    bb0: {
        _0 = const SECCOMP_RET_KILL_THREAD; // scope 0 at src/unix/linux_like/linux/mod.rs:1795:40: 1795:63
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1795:1: 1795:64
    }
}

const TIOCSCTTY: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:130:22: 130:29

    bb0: {
        _0 = const 21518_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:130:32: 130:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:130:1: 130:39
    }
}

const PACKET_MR_PROMISC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2254:30: 2254:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2254:40: 2254:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2254:1: 2254:42
    }
}

const IN_ATTRIB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2709:22: 2709:25

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2709:28: 2709:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2709:1: 2709:40
    }
}

const CAN_INV_FILTER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3194:27: 3194:34

    bb0: {
        _0 = const 536870912_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3194:37: 3194:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3194:1: 3194:48
    }
}

const LOGIN_PROCESS: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:647:26: 647:35

    bb0: {
        _0 = const 6_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:647:38: 647:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:647:1: 647:40
    }
}

const MS_RELATIME: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:611:24: 611:33

    bb0: {
        _0 = const 2097152_u64;          // scope 0 at src/unix/linux_like/mod.rs:611:36: 611:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:611:1: 611:45
    }
}

const QIF_USAGE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1069:22: 1069:25

    bb0: {
        _0 = const 10_u32;               // scope 0 at src/unix/linux_like/mod.rs:1069:28: 1069:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1069:1: 1069:31
    }
}

fn gnu::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &utmpx) -> utmpx {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::gnu::utmpx; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const B200: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:692:17: 692:26

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:692:29: 692:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:692:1: 692:38
    }
}

const _PC_SYMLINK_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1156:28: 1156:35

    bb0: {
        _0 = const 19_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1156:38: 1156:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1156:1: 1156:41
    }
}

const EAI_BADFLAGS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1611:25: 1611:32

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1611:35: 1611:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1611:1: 1611:38
    }
}

const SYS_openat2: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:426:24: 426:32

    bb0: {
        _0 = const 437_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:426:35: 426:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:426:1: 426:39
    }
}

const NFNL_SUBSYS_CTHELPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2088:33: 2088:40

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2088:43: 2088:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2088:1: 2088:45
    }
}

const RTM_GETRULE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2546:24: 2546:27

    bb0: {
        _0 = const 34_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2546:30: 2546:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2546:1: 2546:33
    }
}

const FAN_CLASS_PRE_CONTENT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3035:34: 3035:42

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3035:45: 3035:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3035:1: 3035:57
    }
}

PTHREAD_RWLOCK_INITIALIZER::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1513:19: 1513:44

    bb0: {
        _0 = const not_x32::__SIZEOF_PTHREAD_RWLOCK_T; // scope 0 at src/unix/linux_like/linux/mod.rs:1513:19: 1513:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1513:19: 1513:44
    }
}

const M_NLBLKS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:985:21: 985:28

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:985:31: 985:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:985:1: 985:33
    }
}

const IPV6_2292HOPLIMIT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:906:30: 906:37

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/mod.rs:906:40: 906:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:906:1: 906:42
    }
}

const ARPHRD_FCPP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1361:24: 1361:27

    bb0: {
        _0 = const 784_u16;              // scope 0 at src/unix/linux_like/mod.rs:1361:30: 1361:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1361:1: 1361:34
    }
}

const F_OFD_GETLK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:546:24: 546:31

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:546:34: 546:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:546:1: 546:37
    }
}

const HOSTFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1398:39: 1398:47

    bb0: {
        _0 = const 12648430_i64;         // scope 0 at src/unix/linux_like/mod.rs:1398:50: 1398:60
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1398:9: 1398:61
    }
}

const IFLA_PROTO_DOWN: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1425:28: 1425:38

    bb0: {
        _0 = const 39_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1425:41: 1425:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1425:1: 1425:44
    }
}

const SYS_semtimedop: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:299:27: 299:35

    bb0: {
        _0 = const 220_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:299:38: 299:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:299:1: 299:42
    }
}

const PT_NOTE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1948:20: 1948:23

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1948:26: 1948:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1948:1: 1948:28
    }
}

const RTF_NOFORWARD: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2400:26: 2400:36

    bb0: {
        _0 = const 4096_u16;             // scope 0 at src/unix/linux_like/linux/mod.rs:2400:39: 2400:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2400:1: 2400:46
    }
}

const NFT_DATA_VALUE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2872:27: 2872:35

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2872:38: 2872:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2872:1: 2872:40
    }
}

sockaddr_alg::salg_type::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:627:36: 627:38

    bb0: {
        _0 = const 14_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:627:36: 627:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:627:36: 627:38
    }
}

const _SC_DEVICE_SPECIFIC_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:800:34: 800:41

    bb0: {
        _0 = const 142_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:800:44: 800:47
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:800:1: 800:48
    }
}

const PF_ECONET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:743:22: 743:29

    bb0: {
        _0 = const AF_ECONET;            // scope 0 at src/unix/linux_like/mod.rs:743:32: 743:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:743:1: 743:42
    }
}

const LOG_FTP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1209:20: 1209:27
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/mod.rs:1209:30: 1209:37

    bb0: {
        _1 = CheckedShl(const 11_i32, const 3_i32); // scope 0 at src/unix/linux_like/mod.rs:1209:30: 1209:37
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/linux_like/mod.rs:1209:30: 1209:37
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/mod.rs:1209:30: 1209:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1209:1: 1209:38
    }
}

const O_SYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:408:19: 408:26

    bb0: {
        _0 = const 1052672_i32;          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:408:29: 408:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:408:1: 408:37
    }
}

const _SC_V6_LPBIG_OFFBIG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1282:32: 1282:39

    bb0: {
        _0 = const 179_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1282:42: 1282:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1282:1: 1282:46
    }
}

const SYS_fchown: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:172:23: 172:31

    bb0: {
        _0 = const 93_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:172:34: 172:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:172:1: 172:37
    }
}

const SECCOMP_FILTER_FLAG_SPEC_ALLOW: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1791:43: 1791:52

    bb0: {
        _0 = const 4_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1791:55: 1791:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1791:1: 1791:57
    }
}

const TCFLSH: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:127:19: 127:26

    bb0: {
        _0 = const 21515_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:127:29: 127:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:127:1: 127:36
    }
}

const PACKET_ADD_MEMBERSHIP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2250:34: 2250:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2250:44: 2250:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2250:1: 2250:46
    }
}

const VMADDR_PORT_ANY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2704:28: 2704:36

    bb0: {
        _0 = const u32::MAX;             // scope 0 at src/unix/linux_like/linux/mod.rs:2704:39: 2704:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2704:1: 2704:50
    }
}

const CAN_J1939: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3189:22: 3189:29

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3189:32: 3189:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3189:1: 3189:34
    }
}

const NEW_TIME: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:644:21: 644:30

    bb0: {
        _0 = const 3_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:644:33: 644:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:644:1: 644:35
    }
}

const MS_PRIVATE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:608:23: 608:32

    bb0: {
        _0 = const 262144_u64;           // scope 0 at src/unix/linux_like/mod.rs:608:35: 608:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:608:1: 608:44
    }
}

const QIF_BTIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1066:22: 1066:25

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/mod.rs:1066:28: 1066:30
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1066:1: 1066:31
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:447:9: 451:10>::clone(_1: &__c_anonymous_ptrace_syscall_info_data) -> __c_anonymous_ptrace_syscall_info_data {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:448:22: 448:27
    let mut _0: unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_data; // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:448:32: 448:70

    bb0: {
        _0 = (*_1);                      // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:449:17: 449:22
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:450:14: 450:14
    }
}

const B110: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:689:17: 689:26

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:689:29: 689:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:689:1: 689:38
    }
}

const _PC_REC_MIN_XFER_SIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1153:34: 1153:41

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1153:44: 1153:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1153:1: 1153:47
    }
}

const AI_ALL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1606:19: 1606:26

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1606:29: 1606:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1606:1: 1606:36
    }
}

const SYS_pidfd_open: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:423:27: 423:35

    bb0: {
        _0 = const 434_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:423:38: 423:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:423:1: 423:42
    }
}

const NFNL_SUBSYS_IPSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2085:30: 2085:37

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2085:40: 2085:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2085:1: 2085:42
    }
}

const RTM_GETNEIGH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2543:25: 2543:28

    bb0: {
        _0 = const 30_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2543:31: 2543:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2543:1: 2543:34
    }
}

const FAN_NONBLOCK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3031:25: 3031:33

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3031:36: 3031:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3031:1: 3031:48
    }
}

const PTHREAD_COND_INITIALIZER: linux::pthread_cond_t = {
    let mut _0: unix::linux_like::linux::pthread_cond_t; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1509:41: 1509:55
    let mut _1: [u8; _];                 // in scope 0 at src/unix/linux_like/linux/mod.rs:1510:15: 1510:43

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:1510:15: 1510:43
        _1 = [const 0_u8; __SIZEOF_PTHREAD_COND_T]; // scope 0 at src/unix/linux_like/linux/mod.rs:1510:15: 1510:43
        (_0.0: [u8; _]) = move _1;       // scope 0 at src/macros.rs:298:33: 300:10
        StorageDead(_1);                 // scope 0 at src/macros.rs:300:9: 300:10
        return;                          // scope 0 at src/macros.rs:298:9: 300:11
    }
}

const KEYCTL_SUPPORTS_SIGN: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:964:33: 964:36

    bb0: {
        _0 = const 4_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:964:39: 964:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:964:1: 964:44
    }
}

const IPV6_2292RTHDR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:903:27: 903:34

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:903:37: 903:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:903:1: 903:39
    }
}

const ARPHRD_ASH: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1358:23: 1358:26

    bb0: {
        _0 = const 781_u16;              // scope 0 at src/unix/linux_like/mod.rs:1358:29: 1358:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1358:1: 1358:33
    }
}

const F_SETOWN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:543:21: 543:28

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:543:31: 543:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:543:1: 543:33
    }
}

const F2FS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1395:37: 1395:45

    bb0: {
        _0 = const 4076150800_i64;       // scope 0 at src/unix/linux_like/mod.rs:1395:48: 1395:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1395:9: 1395:59
    }
}

const IFLA_PHYS_SWITCH_ID: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1422:32: 1422:42

    bb0: {
        _0 = const 36_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1422:45: 1422:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1422:1: 1422:48
    }
}

const SYS_getdents64: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:296:27: 296:35

    bb0: {
        _0 = const 217_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:296:38: 296:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:296:1: 296:42
    }
}

const PT_LOAD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1945:20: 1945:23

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1945:26: 1945:27
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1945:1: 1945:28
    }
}

const RTF_REJECT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2397:23: 2397:33

    bb0: {
        _0 = const 512_u16;              // scope 0 at src/unix/linux_like/linux/mod.rs:2397:36: 2397:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2397:1: 2397:43
    }
}

const NFT_SET_POL_PERFORMANCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2867:36: 2867:43

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2867:46: 2867:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2867:1: 2867:48
    }
}

const _SC_C_LANG_SUPPORT_R: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:797:33: 797:40

    bb0: {
        _0 = const 136_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:797:43: 797:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:797:1: 797:47
    }
}

const PF_ROUTE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:740:21: 740:28

    bb0: {
        _0 = const AF_ROUTE;             // scope 0 at src/unix/linux_like/mod.rs:740:31: 740:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:740:1: 740:40
    }
}

const AT_EMPTY_PATH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1205:26: 1205:33

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/mod.rs:1205:36: 1205:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1205:1: 1205:43
    }
}

const O_EXCL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:405:19: 405:26

    bb0: {
        _0 = const 128_i32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:405:29: 405:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:405:1: 405:33
    }
}

const _SC_V6_ILP32_OFF32: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1279:31: 1279:38

    bb0: {
        _0 = const 176_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1279:41: 1279:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1279:1: 1279:45
    }
}

const SYS_chmod: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:169:22: 169:30

    bb0: {
        _0 = const 90_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:169:33: 169:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:169:1: 169:36
    }
}

const SECCOMP_MODE_FILTER: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1787:32: 1787:40

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1787:43: 1787:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1787:1: 1787:45
    }
}

const TCSETAF: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:124:20: 124:27

    bb0: {
        _0 = const 21512_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:124:30: 124:36
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:124:1: 124:37
    }
}

const CTRL_ATTR_MCAST_GRP_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2245:39: 2245:46

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2245:49: 2245:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2245:1: 2245:51
    }
}

const VMADDR_CID_RESERVED: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2701:32: 2701:40

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2701:43: 2701:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2701:1: 2701:45
    }
}

const CAN_TP20: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3186:21: 3186:28

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3186:31: 3186:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3186:1: 3186:33
    }
}

const EMPTY: i16 = {
    let mut _0: i16;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:641:18: 641:27

    bb0: {
        _0 = const 0_i16;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:641:30: 641:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:641:1: 641:32
    }
}

const MS_SILENT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:605:22: 605:31

    bb0: {
        _0 = const 32768_u64;            // scope 0 at src/unix/linux_like/mod.rs:605:34: 605:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:605:1: 605:41
    }
}

const QIF_SPACE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1063:22: 1063:25

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/mod.rs:1063:28: 1063:29
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1063:1: 1063:30
    }
}

const B0: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:686:15: 686:24

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:686:27: 686:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:686:1: 686:36
    }
}

const _PC_FILESIZEBITS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1150:29: 1150:36

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1150:39: 1150:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1150:1: 1150:42
    }
}

const AI_CANONNAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1603:25: 1603:32

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1603:35: 1603:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1603:1: 1603:42
    }
}

const SYS_fsconfig: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:420:25: 420:33

    bb0: {
        _0 = const 431_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:420:36: 420:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:420:1: 420:40
    }
}

const NFNL_SUBSYS_QUEUE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2082:30: 2082:37

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2082:40: 2082:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2082:1: 2082:42
    }
}

const RTM_GETROUTE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2540:25: 2540:28

    bb0: {
        _0 = const 26_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2540:31: 2540:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2540:1: 2540:34
    }
}

const FAN_EVENT_ON_CHILD: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3026:31: 3026:34

    bb0: {
        _0 = const 134217728_u64;        // scope 0 at src/unix/linux_like/linux/mod.rs:3026:37: 3026:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3026:1: 3026:49
    }
}

const NOSTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1131:26: 1131:35

    bb0: {
        _0 = const 327683_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1131:38: 1131:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1131:9: 1131:46
    }
}

const KEYCTL_RESTRICT_KEYRING: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:960:36: 960:39

    bb0: {
        _0 = const 29_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:960:42: 960:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:960:1: 960:45
    }
}

const IPV6_2292PKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:900:29: 900:36

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:900:39: 900:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:900:1: 900:41
    }
}

const ARPHRD_IPGRE: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1355:25: 1355:28

    bb0: {
        _0 = const 778_u16;              // scope 0 at src/unix/linux_like/mod.rs:1355:31: 1355:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1355:1: 1355:35
    }
}

const EFD_NONBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:539:25: 539:32

    bb0: {
        _0 = const 2048_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:539:35: 539:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:539:1: 539:41
    }
}

const EXT2_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1392:37: 1392:45

    bb0: {
        _0 = const 61267_i64;            // scope 0 at src/unix/linux_like/mod.rs:1392:48: 1392:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1392:9: 1392:59
    }
}

const IFLA_CARRIER: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1419:25: 1419:35

    bb0: {
        _0 = const 33_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1419:38: 1419:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1419:1: 1419:41
    }
}

const SYS_epoll_ctl_old: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:293:30: 293:38

    bb0: {
        _0 = const 214_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:293:41: 293:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:293:1: 293:45
    }
}

const RESOLVE_IN_ROOT: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1938:28: 1938:35

    bb0: {
        _0 = const 16_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:1938:38: 1938:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1938:1: 1938:43
    }
}

const RTF_MSS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2394:20: 2394:30

    bb0: {
        _0 = const RTF_MTU;              // scope 0 at src/unix/linux_like/linux/mod.rs:2394:33: 2394:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2394:1: 2394:41
    }
}

const NFT_SET_MAP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2863:24: 2863:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2863:34: 2863:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2863:1: 2863:38
    }
}

const ATF_PUBL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:304:21: 304:28

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/mod.rs:304:31: 304:35
        return;                          // scope 0 at src/unix/mod.rs:304:1: 304:36
    }
}

const _SC_NL_TEXTMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:794:27: 794:34

    bb0: {
        _0 = const 124_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:794:37: 794:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:794:1: 794:41
    }
}

const PF_SECURITY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:737:24: 737:31

    bb0: {
        _0 = const AF_SECURITY;          // scope 0 at src/unix/linux_like/mod.rs:737:34: 737:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:737:1: 737:46
    }
}

const AT_REMOVEDIR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1202:25: 1202:32

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/mod.rs:1202:35: 1202:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1202:1: 1202:41
    }
}

const RTLD_NOLOAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:401:24: 401:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:401:34: 401:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:401:1: 401:38
    }
}

const _SC_SYMLOOP_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1276:28: 1276:35

    bb0: {
        _0 = const 173_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1276:38: 1276:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1276:1: 1276:42
    }
}

const SYS_unlink: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:166:23: 166:31

    bb0: {
        _0 = const 87_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:166:34: 166:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:166:1: 166:37
    }
}

const GRND_RANDOM: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1783:24: 1783:32

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1783:35: 1783:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1783:1: 1783:42
    }
}

const TCGETA: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:121:19: 121:26

    bb0: {
        _0 = const 21509_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:121:29: 121:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:121:1: 121:36
    }
}

const CTRL_ATTR_OP_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2241:32: 2241:39

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2241:42: 2241:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2241:1: 2241:44
    }
}

const MLOCK_ONFAULT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2691:26: 2691:34

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2691:37: 2691:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2691:1: 2691:42
    }
}

const CAN_RAW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3183:20: 3183:27

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3183:30: 3183:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3183:1: 3183:32
    }
}

const __UT_LINESIZE: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:638:26: 638:31

    bb0: {
        _0 = const 32_usize;             // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:638:34: 638:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:638:1: 638:37
    }
}

const MS_BIND: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:602:20: 602:29

    bb0: {
        _0 = const 4096_u64;             // scope 0 at src/unix/linux_like/mod.rs:602:32: 602:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:602:1: 602:39
    }
}

const Q_GETINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1060:22: 1060:29

    bb0: {
        _0 = const 8388613_i32;          // scope 0 at src/unix/linux_like/mod.rs:1060:32: 1060:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1060:1: 1060:41
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::sockaddr) -> linux_like::sockaddr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::sockaddr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const FFDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:682:18: 682:28

    bb0: {
        _0 = const 32768_u32;            // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:682:31: 682:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:682:1: 682:40
    }
}

const _PC_ASYNC_IO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1147:25: 1147:32

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1147:35: 1147:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1147:1: 1147:38
    }
}

const RB_SW_SUSPEND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1599:26: 1599:33

    bb0: {
        _0 = const 3489725666_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1599:36: 1599:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1599:1: 1599:57
    }
}

const SYS_open_tree: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:417:26: 417:34

    bb0: {
        _0 = const 428_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:417:37: 417:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:417:1: 417:41
    }
}

const NFNL_SUBSYS_NONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2079:29: 2079:36

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2079:39: 2079:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2079:1: 2079:41
    }
}

const RTM_GETADDR: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2537:24: 2537:27

    bb0: {
        _0 = const 22_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2537:30: 2537:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2537:1: 2537:33
    }
}

const FAN_OPEN_PERM: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3021:26: 3021:29

    bb0: {
        _0 = const 65536_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:3021:32: 3021:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3021:1: 3021:44
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &Elf32_Phdr) -> Elf32_Phdr {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::Elf32_Phdr; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const YESEXPR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1128:28: 1128:37

    bb0: {
        _0 = const 327680_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1128:40: 1128:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1128:9: 1128:48
    }
}

const KEYCTL_PKEY_DECRYPT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:957:32: 957:35

    bb0: {
        _0 = const 26_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:957:38: 957:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:957:1: 957:41
    }
}

const MCAST_LEAVE_SOURCE_GROUP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:896:37: 896:44

    bb0: {
        _0 = const 47_i32;               // scope 0 at src/unix/linux_like/mod.rs:896:47: 896:49
        return;                          // scope 0 at src/unix/linux_like/mod.rs:896:1: 896:50
    }
}

const ARPHRD_BIF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1352:23: 1352:26

    bb0: {
        _0 = const 775_u16;              // scope 0 at src/unix/linux_like/mod.rs:1352:29: 1352:32
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1352:1: 1352:33
    }
}

const O_ASYNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:534:20: 534:27

    bb0: {
        _0 = const 8192_i32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:534:30: 534:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:534:1: 534:37
    }
}

const DEVPTS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1389:39: 1389:47

    bb0: {
        _0 = const 7377_i64;             // scope 0 at src/unix/linux_like/mod.rs:1389:50: 1389:56
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1389:9: 1389:57
    }
}

const IFLA_PROMISCUITY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1416:29: 1416:39

    bb0: {
        _0 = const 30_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1416:42: 1416:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1416:1: 1416:45
    }
}

const SYS_get_thread_area: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:290:32: 290:40

    bb0: {
        _0 = const 211_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:290:43: 290:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:290:1: 290:47
    }
}

const RESOLVE_NO_MAGICLINKS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1935:34: 1935:41

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:1935:44: 1935:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1935:1: 1935:49
    }
}

const RLIMIT_RTTIME: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:243:34: 243:55

    bb0: {
        _0 = const 15_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:243:58: 243:60
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:243:9: 243:61
    }
}

const RTF_DYNAMIC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2391:24: 2391:34

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2391:37: 2391:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2391:1: 2391:44
    }
}

const NFT_SET_ANONYMOUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2860:30: 2860:37

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2860:40: 2860:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2860:1: 2860:44
    }
}

const ARPOP_REPLY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/mod.rs:300:24: 300:27

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/mod.rs:300:30: 300:31
        return;                          // scope 0 at src/unix/mod.rs:300:1: 300:32
    }
}

const _SC_NL_MSGMAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:791:26: 791:33

    bb0: {
        _0 = const 121_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:791:36: 791:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:791:1: 791:40
    }
}

const PF_ROSE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:734:20: 734:27

    bb0: {
        _0 = const AF_ROSE;              // scope 0 at src/unix/linux_like/mod.rs:734:30: 734:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:734:1: 734:38
    }
}

const POSIX_FADV_WILLNEED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1198:32: 1198:39

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/mod.rs:1198:42: 1198:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1198:1: 1198:44
    }
}

const VEOF: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:398:17: 398:22

    bb0: {
        _0 = const 4_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:398:25: 398:26
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:398:1: 398:27
    }
}

const _SC_2_PBS_LOCATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1273:29: 1273:36

    bb0: {
        _0 = const 170_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1273:39: 1273:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1273:1: 1273:43
    }
}

const SYS_rmdir: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:163:22: 163:30

    bb0: {
        _0 = const 84_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:163:33: 163:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:163:1: 163:36
    }
}

const PR_SET_VMA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1779:23: 1779:30

    bb0: {
        _0 = const 1398164801_i32;       // scope 0 at src/unix/linux_like/linux/mod.rs:1779:33: 1779:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1779:1: 1779:44
    }
}

const TCSETS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:118:19: 118:26

    bb0: {
        _0 = const 21506_u64;            // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:118:29: 118:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:118:1: 118:36
    }
}

const CTRL_ATTR_MAXATTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2237:30: 2237:37

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2237:40: 2237:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2237:1: 2237:42
    }
}

const UDP_NO_CHECK6_RX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2684:29: 2684:36

    bb0: {
        _0 = const 102_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:2684:39: 2684:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2684:1: 2684:43
    }
}

const CANFD_MAX_DLEN: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3171:27: 3171:32

    bb0: {
        _0 = const 64_usize;             // scope 0 at src/unix/linux_like/linux/mod.rs:3171:35: 3171:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3171:1: 3171:38
    }
}

const PRIO_PGRP: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:633:22: 633:42

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:633:45: 633:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:633:1: 633:47
    }
}

const MS_DIRSYNC: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:599:23: 599:32

    bb0: {
        _0 = const 128_u64;              // scope 0 at src/unix/linux_like/mod.rs:599:35: 599:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:599:1: 599:40
    }
}

const MNT_EXPIRE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1056:23: 1056:30

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/mod.rs:1056:33: 1056:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1056:1: 1056:37
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::si_status(_1: &b64::x86_64::siginfo_t) -> i32 {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:428:37: 428:42
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:428:47: 428:54
    let mut _2: &unix::linux_like::linux::gnu::sifields; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:32
    let mut _3: &unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:32
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:21
        _3 = _1;                         // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:21
        _2 = gnu::<impl b64::x86_64::siginfo_t>::sifields(move _3) -> bb1; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:32
                                         // mir::Constant
                                         // + span: src/unix/linux_like/linux/gnu/mod.rs:429:22: 429:30
                                         // + literal: Const { ty: for<'r> unsafe fn(&'r unix::linux_like::linux::gnu::b64::x86_64::siginfo_t) -> &'r unix::linux_like::linux::gnu::sifields {unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:31: 429:32
        _0 = (((*_2).1: unix::linux_like::linux::gnu::sifields_sigchld).2: i32); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:429:17: 429:50
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:430:13: 430:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:430:14: 430:14
    }
}

const CRDLY: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:679:18: 679:28

    bb0: {
        _0 = const 1536_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:679:31: 679:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:679:1: 679:40
    }
}

const _PC_NO_TRUNC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1144:25: 1144:32

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1144:35: 1144:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1144:1: 1144:37
    }
}

const RB_ENABLE_CAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1596:26: 1596:33

    bb0: {
        _0 = const 2309737967_u32 as i32 (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1596:36: 1596:56
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1596:1: 1596:57
    }
}

const SYS_io_uring_setup: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:414:31: 414:39

    bb0: {
        _0 = const 425_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:414:42: 414:45
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:414:1: 414:46
    }
}

const NFNLGRP_NFTABLES: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2074:29: 2074:36

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2074:39: 2074:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2074:1: 2074:41
    }
}

const RTM_SETLINK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2534:24: 2534:27

    bb0: {
        _0 = const 19_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2534:30: 2534:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2534:1: 2534:33
    }
}

const FAN_CLOSE_NOWRITE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3016:30: 3016:33

    bb0: {
        _0 = const 16_u64;               // scope 0 at src/unix/linux_like/linux/mod.rs:3016:36: 3016:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3016:1: 3016:48
    }
}

const CRNCYSTR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1125:29: 1125:38

    bb0: {
        _0 = const 262159_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1125:41: 1125:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1125:9: 1125:49
    }
}

const KEYCTL_DH_COMPUTE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:954:30: 954:33

    bb0: {
        _0 = const 23_u32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:954:36: 954:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:954:1: 954:39
    }
}

const MCAST_UNBLOCK_SOURCE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:893:33: 893:40

    bb0: {
        _0 = const 44_i32;               // scope 0 at src/unix/linux_like/mod.rs:893:43: 893:45
        return;                          // scope 0 at src/unix/linux_like/mod.rs:893:1: 893:46
    }
}

const ARPHRD_LOOPBACK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1349:28: 1349:31

    bb0: {
        _0 = const 772_u16;              // scope 0 at src/unix/linux_like/mod.rs:1349:34: 1349:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1349:1: 1349:38
    }
}

const SIG_UNBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:529:24: 529:31

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:529:34: 529:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:529:1: 529:39
    }
}

const CODA_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1386:37: 1386:45

    bb0: {
        _0 = const 1937076805_i64;       // scope 0 at src/unix/linux_like/mod.rs:1386:48: 1386:58
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1386:9: 1386:59
    }
}

const IFLA_GROUP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1413:23: 1413:33

    bb0: {
        _0 = const 27_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1413:36: 1413:38
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1413:1: 1413:39
    }
}

const SYS_io_getevents: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:287:29: 287:37

    bb0: {
        _0 = const 208_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:287:40: 287:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:287:1: 287:44
    }
}

const BPF_K: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1930:18: 1930:25

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1930:28: 1930:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1930:1: 1930:33
    }
}

const RLIMIT_MSGQUEUE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:240:36: 240:57

    bb0: {
        _0 = const 12_u32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:240:60: 240:62
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:240:9: 240:63
    }
}

const RTF_GATEWAY: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2387:24: 2387:34

    bb0: {
        _0 = const 2_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2387:37: 2387:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2387:1: 2387:44
    }
}

const NFT_MSG_GETGEN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2848:27: 2848:34

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2848:37: 2848:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2848:1: 2848:40
    }
}

fn linux::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &ff_condition_effect) -> ff_condition_effect {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::ff_condition_effect; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const INADDR_BROADCAST: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/mod.rs:296:29: 296:38

    bb0: {
        _0 = const u32::MAX;             // scope 0 at src/unix/mod.rs:296:41: 296:51
        return;                          // scope 0 at src/unix/mod.rs:296:1: 296:52
    }
}

const _SC_USHRT_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:788:26: 788:33

    bb0: {
        _0 = const 118_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:788:36: 788:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:788:1: 788:40
    }
}

const PF_ATMPVC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:731:22: 731:29

    bb0: {
        _0 = const AF_ATMPVC;            // scope 0 at src/unix/linux_like/mod.rs:731:32: 731:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:731:1: 731:42
    }
}

const POSIX_FADV_NORMAL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1195:30: 1195:37

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:1195:40: 1195:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1195:1: 1195:42
    }
}

const _SC_TYPED_MEMORY_OBJECTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1270:37: 1270:44

    bb0: {
        _0 = const 165_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1270:47: 1270:50
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1270:1: 1270:51
    }
}

const SYS_fchdir: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:160:23: 160:31

    bb0: {
        _0 = const 81_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:160:34: 160:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:160:1: 160:37
    }
}

const PR_CAP_AMBIENT_RAISE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1775:33: 1775:40

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1775:43: 1775:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1775:1: 1775:45
    }
}

const SCM_TIMESTAMPNS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:112:28: 112:35

    bb0: {
        _0 = const SO_TIMESTAMPNS;       // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:112:38: 112:52
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:112:1: 112:53
    }
}

const CTRL_ATTR_FAMILY_NAME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2234:34: 2234:41

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2234:44: 2234:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2234:1: 2234:46
    }
}

const UDP_CORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2681:21: 2681:28

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2681:31: 2681:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2681:1: 2681:33
    }
}

const CAN_MAX_DLC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3168:24: 3168:31

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:3168:34: 3168:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3168:1: 3168:36
    }
}

const MAP_HUGE_2GB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:629:25: 629:32

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_2GB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:629:35: 629:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:629:1: 629:59
    }
}

const MS_SYNCHRONOUS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:596:27: 596:36

    bb0: {
        _0 = const 16_u64;               // scope 0 at src/unix/linux_like/mod.rs:596:39: 596:43
        return;                          // scope 0 at src/unix/linux_like/mod.rs:596:1: 596:44
    }
}

const EPOLL_CTL_DEL: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1052:26: 1052:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1052:36: 1052:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1052:1: 1052:38
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:415:9: 439:10>::sifields(_1: &b64::x86_64::siginfo_t) -> &sifields {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:416:32: 416:37
    let mut _0: &unix::linux_like::linux::gnu::sifields; // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:17: 417:76
    let _2: *const unix::linux_like::linux::gnu::siginfo_f; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:20: 417:66
    let mut _3: *const unix::linux_like::linux::gnu::b64::x86_64::siginfo_t; // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:21: 417:45

    bb0: {
        StorageLive(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:20: 417:66
        StorageLive(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:21: 417:45
        _3 = &raw const (*_1);           // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:21: 417:25
        _2 = move _3 as *const unix::linux_like::linux::gnu::siginfo_f (Misc); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:20: 417:66
        StorageDead(_3);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:65: 417:66
        _0 = &((*_2).1: unix::linux_like::linux::gnu::sifields); // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:417:17: 417:76
        StorageDead(_2);                 // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:418:13: 418:14
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:418:14: 418:14
    }
}

const VSWTC: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:676:18: 676:23

    bb0: {
        _0 = const 7_usize;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:676:26: 676:27
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:676:1: 676:28
    }
}

const _PC_PATH_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1141:25: 1141:32

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1141:35: 1141:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1141:1: 1141:37
    }
}

const SEM_FAILED: *mut gnu::align::sem_t = {
    let mut _0: *mut unix::linux_like::linux::gnu::align::sem_t; // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1592:23: 1592:35

    bb0: {
        _0 = const 0_usize as *mut unix::linux_like::linux::gnu::align::sem_t (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:1592:38: 1592:53
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1592:1: 1592:54
    }
}

const SYS_statx: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:411:22: 411:30

    bb0: {
        _0 = const 332_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:411:33: 411:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:411:1: 411:37
    }
}

const NFNLGRP_CONNTRACK_EXP_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2071:38: 2071:45

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2071:48: 2071:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2071:1: 2071:50
    }
}

const RTM_NEWLINK: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2531:24: 2531:27

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2531:30: 2531:32
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2531:1: 2531:33
    }
}

const FAN_ACCESS: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3013:23: 3013:26

    bb0: {
        _0 = const 1_u64;                // scope 0 at src/unix/linux_like/linux/mod.rs:3013:29: 3013:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3013:1: 3013:41
    }
}

const ERA_D_T_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1121:32: 1121:41

    bb0: {
        _0 = const 131120_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1121:44: 1121:51
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1121:9: 1121:52
    }
}

const NT_LWPSTATUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:949:25: 949:32

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:949:35: 949:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:949:1: 949:38
    }
}

const MCAST_INCLUDE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:890:26: 890:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/mod.rs:890:36: 890:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:890:1: 890:38
    }
}

const ARPHRD_TUNNEL6: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1346:27: 1346:30

    bb0: {
        _0 = const 769_u16;              // scope 0 at src/unix/linux_like/mod.rs:1346:33: 1346:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1346:1: 1346:37
    }
}

const SIGPWR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:526:19: 526:26

    bb0: {
        _0 = const 30_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:526:29: 526:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:526:1: 526:32
    }
}

const BTRFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1383:38: 1383:46

    bb0: {
        _0 = const 2435016766_i64;       // scope 0 at src/unix/linux_like/mod.rs:1383:49: 1383:59
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1383:9: 1383:60
    }
}

const IFLA_VF_PORTS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1410:26: 1410:36

    bb0: {
        _0 = const 24_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1410:39: 1410:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1410:1: 1410:42
    }
}

const SYS_set_thread_area: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:284:32: 284:40

    bb0: {
        _0 = const 205_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:284:43: 284:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:284:1: 284:47
    }
}

const BPF_JGT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1927:20: 1927:27

    bb0: {
        _0 = const 32_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1927:30: 1927:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1927:1: 1927:35
    }
}

const RLIMIT_AS: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:237:30: 237:51

    bb0: {
        _0 = const 9_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:237:54: 237:55
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:237:9: 237:56
    }
}

const IPTOS_PREC_MASK: u8 = {
    let mut _0: u8;                      // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2382:28: 2382:30

    bb0: {
        _0 = const 224_u8;               // scope 0 at src/unix/linux_like/linux/mod.rs:2382:33: 2382:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2382:1: 2382:38
    }
}

const NFT_MSG_GETSETELEM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2845:31: 2845:38

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2845:41: 2845:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2845:1: 2845:44
    }
}

const IPPROTO_IPV6: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:292:25: 292:32

    bb0: {
        _0 = const 41_i32;               // scope 0 at src/unix/mod.rs:292:35: 292:37
        return;                          // scope 0 at src/unix/mod.rs:292:1: 292:38
    }
}

const _SC_UCHAR_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:785:26: 785:33

    bb0: {
        _0 = const 115_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:785:36: 785:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:785:1: 785:40
    }
}

const PF_APPLETALK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:728:25: 728:32

    bb0: {
        _0 = const AF_APPLETALK;         // scope 0 at src/unix/linux_like/mod.rs:728:35: 728:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:728:1: 728:48
    }
}

const SPLICE_F_GIFT: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1190:26: 1190:34

    bb0: {
        _0 = const 8_u32;                // scope 0 at src/unix/linux_like/mod.rs:1190:37: 1190:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1190:1: 1190:42
    }
}

fn linux_like::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &linux_like::ifaddrs) -> linux_like::ifaddrs {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::ifaddrs; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_SPORADIC_SERVER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1267:32: 1267:39

    bb0: {
        _0 = const 160_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1267:42: 1267:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1267:1: 1267:46
    }
}

const SYS_getdents: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:157:25: 157:33

    bb0: {
        _0 = const 78_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:157:36: 157:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:157:1: 157:39
    }
}

const PR_FP_MODE_FRE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1771:27: 1771:34
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:1771:37: 1771:43

    bb0: {
        _1 = CheckedShl(const 1_i32, const 1_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:1771:37: 1771:43
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 1_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:1771:37: 1771:43
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:1771:37: 1771:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1771:1: 1771:44
    }
}

const SO_TXTIME: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:89:22: 89:29

    bb0: {
        _0 = const 61_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:89:32: 89:34
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:89:1: 89:35
    }
}

const CTRL_CMD_GETMCAST_GRP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2230:34: 2230:41

    bb0: {
        _0 = const 9_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2230:44: 2230:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2230:1: 2230:46
    }
}

const ALG_SET_AEAD_AUTHSIZE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2675:34: 2675:41

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2675:44: 2675:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2675:1: 2675:46
    }
}

const CAN_ERR_MASK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3163:25: 3163:32

    bb0: {
        _0 = const 536870911_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3163:35: 3163:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3163:1: 3163:46
    }
}

const MAP_HUGE_256MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:626:27: 626:34

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_256MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:626:37: 626:62
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:626:1: 626:63
    }
}

const MS_NOSUID: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:593:22: 593:31

    bb0: {
        _0 = const 2_u64;                // scope 0 at src/unix/linux_like/mod.rs:593:34: 593:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:593:1: 593:39
    }
}

const EPOLLET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1048:20: 1048:27

    bb0: {
        _0 = const i32::MIN;             // scope 0 at src/unix/linux_like/mod.rs:1048:30: 1048:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1048:1: 1048:41
    }
}

siginfo_f::_siginfo_base::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:411:38: 411:39

    bb0: {
        _0 = const 3_usize;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:411:38: 411:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:411:38: 411:39
    }
}

const NOFLSH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:673:19: 673:29

    bb0: {
        _0 = const 128_u32;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:673:32: 673:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:673:1: 673:43
    }
}

const _PC_MAX_CANON: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1138:26: 1138:33

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1138:36: 1138:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1138:1: 1138:38
    }
}

const QFMT_VFS_V1: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1586:24: 1586:31

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:1586:34: 1586:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1586:1: 1586:36
    }
}

const SYS_pkey_mprotect: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:408:30: 408:38

    bb0: {
        _0 = const 329_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:408:41: 408:44
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:408:1: 408:45
    }
}

const NFNLGRP_CONNTRACK_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2068:34: 2068:41

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2068:44: 2068:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2068:1: 2068:46
    }
}

const TCA_FCNT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2527:21: 2527:31

    bb0: {
        _0 = const 6_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2527:34: 2527:35
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2527:1: 2527:36
    }
}

const SND_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3006:20: 3006:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:44
        _1 = const SND_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:3006:28: 3006:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3006:47: 3006:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3006:1: 3006:49
    }
}

const ERA: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1118:24: 1118:33

    bb0: {
        _0 = const 131116_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1118:36: 1118:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1118:9: 1118:44
    }
}

const NT_PSINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:946:22: 946:29

    bb0: {
        _0 = const 13_i32;               // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:946:32: 946:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:946:1: 946:35
    }
}

const IPPROTO_BEETPH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:886:27: 886:34

    bb0: {
        _0 = const 94_i32;               // scope 0 at src/unix/linux_like/mod.rs:886:37: 886:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:886:1: 886:40
    }
}

const ARPHRD_DDCMP: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1342:25: 1342:28

    bb0: {
        _0 = const 517_u16;              // scope 0 at src/unix/linux_like/mod.rs:1342:31: 1342:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1342:1: 1342:35
    }
}

const SIGSTKFLT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:522:22: 522:29

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:522:32: 522:34
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:522:1: 522:35
    }
}

const AFS_SUPER_MAGIC: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1380:36: 1380:44

    bb0: {
        _0 = const 1397113167_i64;       // scope 0 at src/unix/linux_like/mod.rs:1380:47: 1380:57
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1380:9: 1380:58
    }
}

const IFLA_NUM_VF: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1407:24: 1407:34

    bb0: {
        _0 = const 21_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1407:37: 1407:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1407:1: 1407:40
    }
}

const SYS_futex: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:281:22: 281:30

    bb0: {
        _0 = const 202_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:281:33: 281:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:281:1: 281:37
    }
}

const BPF_XOR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1924:20: 1924:27

    bb0: {
        _0 = const 160_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1924:30: 1924:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1924:1: 1924:35
    }
}

const RLIMIT_NPROC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:234:33: 234:54

    bb0: {
        _0 = const 6_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:234:57: 234:58
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:234:9: 234:59
    }
}

const SIOCGIFMAP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2378:23: 2378:32

    bb0: {
        _0 = const 35184_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2378:35: 2378:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2378:1: 2378:46
    }
}

const NFT_MSG_GETSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2842:27: 2842:34

    bb0: {
        _0 = const 10_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:2842:37: 2842:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2842:1: 2842:40
    }
}

const IPPROTO_TCP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:289:24: 289:31

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/mod.rs:289:34: 289:35
        return;                          // scope 0 at src/unix/mod.rs:289:1: 289:36
    }
}

const _SC_SCHAR_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:782:26: 782:33

    bb0: {
        _0 = const 112_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:782:36: 782:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:782:1: 782:40
    }
}

const PF_INET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:725:20: 725:27

    bb0: {
        _0 = const AF_INET;              // scope 0 at src/unix/linux_like/mod.rs:725:30: 725:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:725:1: 725:38
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &glob64_t) -> glob64_t {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::glob64_t; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const SPLICE_F_MOVE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1187:26: 1187:34

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/mod.rs:1187:37: 1187:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1187:1: 1187:42
    }
}

fn b64::x86_64::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &b64::x86_64::statfs) -> b64::x86_64::statfs {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::b64::x86_64::statfs; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const _SC_REGEXP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1264:23: 1264:30

    bb0: {
        _0 = const 155_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1264:33: 1264:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1264:1: 1264:37
    }
}

const SYS_fdatasync: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:154:26: 154:34

    bb0: {
        _0 = const 75_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:154:37: 154:39
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:154:1: 154:40
    }
}

const PR_SET_FP_MODE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1768:27: 1768:34

    bb0: {
        _0 = const 45_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1768:37: 1768:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1768:1: 1768:40
    }
}

const SCM_TIMESTAMPING_PKTINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:86:37: 86:44

    bb0: {
        _0 = const 58_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:86:47: 86:49
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:86:1: 86:50
    }
}

const CTRL_CMD_GETOPS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2227:28: 2227:35

    bb0: {
        _0 = const 6_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2227:38: 2227:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2227:1: 2227:40
    }
}

const ALG_SET_IV: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2672:23: 2672:30

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2672:33: 2672:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2672:1: 2672:35
    }
}

const CAN_ERR_FLAG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3160:25: 3160:32

    bb0: {
        _0 = const 536870912_u32;        // scope 0 at src/unix/linux_like/linux/mod.rs:3160:35: 3160:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3160:1: 3160:46
    }
}

const MAP_HUGE_8MB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:623:25: 623:32

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_8MB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:623:35: 623:58
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:623:1: 623:59
    }
}

const MS_INVALIDATE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:588:26: 588:33

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:588:36: 588:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:588:1: 588:43
    }
}

const EPOLLEXCLUSIVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1045:27: 1045:34

    bb0: {
        _0 = const 268435456_i32;        // scope 0 at src/unix/linux_like/mod.rs:1045:37: 1045:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1045:1: 1045:48
    }
}

const ISIG: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:670:17: 670:27

    bb0: {
        _0 = const 1_u32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:670:30: 670:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:670:1: 670:41
    }
}

const RUSAGE_CHILDREN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1135:28: 1135:35

    bb0: {
        _0 = const -1_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1135:38: 1135:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1135:1: 1135:41
    }
}

const SHM_NORESERVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1582:26: 1582:33

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1582:36: 1582:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1582:1: 1582:44
    }
}

const SYS_copy_file_range: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:405:32: 405:40

    bb0: {
        _0 = const 326_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:405:43: 405:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:405:1: 405:47
    }
}

const linux::NLMSG_OVERRUN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2063:26: 2063:33

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2063:36: 2063:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2063:1: 2063:40
    }
}

const TCA_STATS: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2524:22: 2524:32

    bb0: {
        _0 = const 3_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2524:35: 2524:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2524:1: 2524:37
    }
}

const REP_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3003:20: 3003:27

    bb0: {
        _0 = const 1_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:3003:30: 3003:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3003:1: 3003:35
    }
}

const D_FMT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1114:26: 1114:35

    bb0: {
        _0 = const 131113_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1114:38: 1114:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1114:9: 1114:46
    }
}

const NT_GWINDOWS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:943:24: 943:31

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:943:34: 943:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:943:1: 943:36
    }
}

const IPPROTO_MH: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:882:23: 882:30

    bb0: {
        _0 = const 135_i32;              // scope 0 at src/unix/linux_like/mod.rs:882:33: 882:36
        return;                          // scope 0 at src/unix/linux_like/mod.rs:882:1: 882:37
    }
}

const ARPHRD_CISCO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1339:25: 1339:28

    bb0: {
        _0 = const 513_u16;              // scope 0 at src/unix/linux_like/mod.rs:1339:31: 1339:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1339:1: 1339:35
    }
}

const SIGURG: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:519:19: 519:26

    bb0: {
        _0 = const 23_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:519:29: 519:31
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:519:1: 519:32
    }
}

const P_PIDFD: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1232:28: 1232:36

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/mod.rs:1232:39: 1232:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1232:9: 1232:41
    }
}

const IFLA_LINKINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1404:26: 1404:36

    bb0: {
        _0 = const 18_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1404:39: 1404:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1404:1: 1404:42
    }
}

const SYS_fremovexattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:278:29: 278:37

    bb0: {
        _0 = const 199_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:278:40: 278:43
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:278:1: 278:44
    }
}

const BPF_RSH: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1921:20: 1921:27

    bb0: {
        _0 = const 112_u32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1921:30: 1921:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1921:1: 1921:35
    }
}

const RLIMIT_STACK: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:231:33: 231:54

    bb0: {
        _0 = const 3_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:231:57: 231:58
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:231:9: 231:59
    }
}

const SIOCDRARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2375:22: 2375:31

    bb0: {
        _0 = const 35168_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2375:34: 2375:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2375:1: 2375:45
    }
}

const NFT_MSG_GETRULE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2839:28: 2839:35

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2839:38: 2839:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2839:1: 2839:40
    }
}

const PRIO_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:285:21: 285:28

    bb0: {
        _0 = const 20_i32;               // scope 0 at src/unix/mod.rs:285:31: 285:33
        return;                          // scope 0 at src/unix/mod.rs:285:1: 285:34
    }
}

const _SC_MB_LEN_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:779:27: 779:34

    bb0: {
        _0 = const 108_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:779:37: 779:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:779:1: 779:41
    }
}

const PF_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:722:22: 722:29

    bb0: {
        _0 = const AF_UNSPEC;            // scope 0 at src/unix/linux_like/mod.rs:722:32: 722:41
        return;                          // scope 0 at src/unix/linux_like/mod.rs:722:1: 722:42
    }
}

const __WNOTHREAD: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1183:24: 1183:31

    bb0: {
        _0 = const 536870912_i32;        // scope 0 at src/unix/linux_like/mod.rs:1183:34: 1183:44
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1183:1: 1183:45
    }
}

const _SC_MONOTONIC_CLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1261:32: 1261:39

    bb0: {
        _0 = const 149_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1261:42: 1261:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1261:1: 1261:46
    }
}

const SYS_fcntl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:151:22: 151:30

    bb0: {
        _0 = const 72_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:151:33: 151:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:151:1: 151:36
    }
}

const PR_GET_THP_DISABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1763:31: 1763:38

    bb0: {
        _0 = const 42_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1763:41: 1763:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1763:1: 1763:44
    }
}

const SO_MEMINFO: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:83:23: 83:30

    bb0: {
        _0 = const 55_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:83:33: 83:35
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:83:1: 83:36
    }
}

const CTRL_CMD_GETFAMILY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2224:31: 2224:38

    bb0: {
        _0 = const 3_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2224:41: 2224:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2224:1: 2224:43
    }
}

const SOF_TIMESTAMPING_SYS_HARDWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2661:42: 2661:50
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2661:53: 2661:59

    bb0: {
        _1 = CheckedShl(const 1_u32, const 5_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2661:53: 2661:59
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 5_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2661:53: 2661:59
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2661:53: 2661:59
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2661:1: 2661:60
    }
}

const EWOULDBLOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3155:24: 3155:31

    bb0: {
        _0 = const EAGAIN;               // scope 0 at src/unix/linux_like/linux/mod.rs:3155:34: 3155:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3155:1: 3155:41
    }
}

const MAP_HUGE_512KB: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:620:27: 620:34

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_512KB; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:620:37: 620:62
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:620:1: 620:63
    }
}

const MAP_FIXED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:582:22: 582:29

    bb0: {
        _0 = const 16_i32;               // scope 0 at src/unix/linux_like/mod.rs:582:32: 582:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:582:1: 582:39
    }
}

const EPOLLWRBAND: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1042:24: 1042:31

    bb0: {
        _0 = const 512_i32;              // scope 0 at src/unix/linux_like/mod.rs:1042:34: 1042:39
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1042:1: 1042:40
    }
}

fn gnu::<impl at src/unix/linux_like/linux/gnu/mod.rs:393:9: 397:10>::clone(_1: &sifields_sigchld) -> sifields_sigchld {
    debug self => _1;                    // in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:394:22: 394:27
    let mut _0: unix::linux_like::linux::gnu::sifields_sigchld; // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:394:32: 394:48

    bb0: {
        _0 = (*_1);                      // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:395:17: 395:22
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:396:14: 396:14
    }
}

const ECHONL: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:667:19: 667:29

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:667:32: 667:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:667:1: 667:43
    }
}

const SHM_LOCK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1577:21: 1577:28

    bb0: {
        _0 = const 11_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1577:31: 1577:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1577:1: 1577:34
    }
}

const SYS_userfaultfd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:402:28: 402:36

    bb0: {
        _0 = const 323_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:402:39: 402:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:402:1: 402:43
    }
}

const NLMSG_NOOP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2060:23: 2060:30

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2060:33: 2060:36
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2060:1: 2060:37
    }
}

const TCA_UNSPEC: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2521:23: 2521:33

    bb0: {
        _0 = const 0_u16;                // scope 0 at src/unix/linux_like/linux/mod.rs:2521:36: 2521:37
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2521:1: 2521:38
    }
}

const MSC_CNT: usize = {
    let mut _0: usize;                   // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3000:20: 3000:25
    let mut _1: usize;                   // in scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:44
    let mut _2: (usize, bool);           // in scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:48

    bb0: {
        StorageLive(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:44
        _1 = const MSC_MAX as usize (Misc); // scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:44
        _2 = CheckedAdd(_1, const 1_usize); // scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:48
        assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1, const 1_usize) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:48
    }

    bb1: {
        _0 = move (_2.0: usize);         // scope 0 at src/unix/linux_like/linux/mod.rs:3000:28: 3000:48
        StorageDead(_1);                 // scope 0 at src/unix/linux_like/linux/mod.rs:3000:47: 3000:48
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3000:1: 3000:49
    }
}

const AM_STR: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1110:27: 1110:36

    bb0: {
        _0 = const 131110_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1110:39: 1110:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1110:9: 1110:47
    }
}

const NT_TASKSTRUCT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:940:26: 940:33

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:940:36: 940:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:940:1: 940:38
    }
}

const IPPROTO_PIM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:877:24: 877:31

    bb0: {
        _0 = const 103_i32;              // scope 0 at src/unix/linux_like/mod.rs:877:34: 877:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:877:1: 877:38
    }
}

const ARPHRD_HWX25: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1336:25: 1336:28

    bb0: {
        _0 = const 272_u16;              // scope 0 at src/unix/linux_like/mod.rs:1336:31: 1336:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1336:1: 1336:35
    }
}

const SIGCONT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:516:20: 516:27

    bb0: {
        _0 = const 18_i32;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:516:30: 516:32
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:516:1: 516:33
    }
}

const TCP_ZEROCOPY_RECEIVE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1006:41: 1006:48

    bb0: {
        _0 = const 35_i32;               // scope 0 at src/unix/linux_like/mod.rs:1006:51: 1006:53
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1006:9: 1006:54
    }
}

const IFLA_WEIGHT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1401:24: 1401:34

    bb0: {
        _0 = const 15_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1401:37: 1401:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1401:1: 1401:40
    }
}

const SYS_flistxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:275:27: 275:35

    bb0: {
        _0 = const 196_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:275:38: 275:41
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:275:1: 275:42
    }
}

const BPF_OR: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1918:19: 1918:26

    bb0: {
        _0 = const 64_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1918:29: 1918:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1918:1: 1918:34
    }
}

const RLIMIT_CPU: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:228:31: 228:52

    bb0: {
        _0 = const 0_u32;                // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:228:55: 228:56
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:228:9: 228:57
    }
}

const SIOCDARP: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2372:21: 2372:30

    bb0: {
        _0 = const 35155_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2372:33: 2372:43
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2372:1: 2372:44
    }
}

const NFT_MSG_GETCHAIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2836:29: 2836:36

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2836:39: 2836:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2836:1: 2836:41
    }
}

const LOG_PRIMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:281:24: 281:31

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/mod.rs:281:34: 281:35
        return;                          // scope 0 at src/unix/mod.rs:281:1: 281:36
    }
}

fn linux::<impl at src/macros.rs:120:9: 122:10>::clone(_1: &linux::dirent) -> linux::dirent {
    debug self => _1;                    // in scope 0 at src/macros.rs:121:22: 121:27
    let mut _0: unix::linux_like::linux::dirent; // return place in scope 0 at src/macros.rs:121:32: 121:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:121:37: 121:42
        return;                          // scope 0 at src/macros.rs:121:44: 121:44
    }
}

const _SC_INT_MIN: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:776:24: 776:31

    bb0: {
        _0 = const 105_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:776:34: 776:37
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:776:1: 776:38
    }
}

const AF_IEEE802154: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:718:26: 718:33

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/mod.rs:718:36: 718:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:718:1: 718:39
    }
}

fn gnu::<impl at src/macros.rs:84:9: 86:10>::clone(_1: &__timeval) -> __timeval {
    debug self => _1;                    // in scope 0 at src/macros.rs:85:22: 85:27
    let mut _0: unix::linux_like::linux::gnu::__timeval; // return place in scope 0 at src/macros.rs:85:32: 85:34

    bb0: {
        _0 = (*_1);                      // scope 0 at src/macros.rs:85:37: 85:42
        return;                          // scope 0 at src/macros.rs:85:44: 85:44
    }
}

const PTRACE_EVENT_VFORK_DONE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1179:36: 1179:43

    bb0: {
        _0 = const 5_i32;                // scope 0 at src/unix/linux_like/mod.rs:1179:46: 1179:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1179:1: 1179:48
    }
}

const _SC_CLOCK_SELECTION: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1258:32: 1258:39

    bb0: {
        _0 = const 137_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1258:42: 1258:45
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1258:1: 1258:46
    }
}

const SYS_msgsnd: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:148:23: 148:31

    bb0: {
        _0 = const 69_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:148:34: 148:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:148:1: 148:37
    }
}

const PR_GET_NO_NEW_PRIVS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1758:32: 1758:39

    bb0: {
        _0 = const 39_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1758:42: 1758:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1758:1: 1758:45
    }
}

const SO_ATTACH_REUSEPORT_EBPF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:80:37: 80:44

    bb0: {
        _0 = const 52_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:80:47: 80:49
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:80:1: 80:50
    }
}

const CTRL_CMD_UNSPEC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2221:28: 2221:35

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2221:38: 2221:39
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2221:1: 2221:40
    }
}

const SOF_TIMESTAMPING_RX_HARDWARE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2658:41: 2658:49
    let mut _1: (u32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2658:52: 2658:58

    bb0: {
        _1 = CheckedShl(const 1_u32, const 2_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2658:52: 2658:58
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 2_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2658:52: 2658:58
    }

    bb1: {
        _0 = move (_1.0: u32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2658:52: 2658:58
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2658:1: 2658:59
    }
}

const EPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3152:18: 3152:25

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3152:28: 3152:30
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3152:1: 3152:31
    }
}

const MAP_HUGE_SHIFT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:616:27: 616:34

    bb0: {
        _0 = const HUGETLB_FLAG_ENCODE_SHIFT; // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:616:37: 616:62
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:616:1: 616:63
    }
}

const MAP_FILE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:579:21: 579:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at src/unix/linux_like/mod.rs:579:31: 579:37
        return;                          // scope 0 at src/unix/linux_like/mod.rs:579:1: 579:38
    }
}

const EPOLLRDNORM: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1039:24: 1039:31

    bb0: {
        _0 = const 64_i32;               // scope 0 at src/unix/linux_like/mod.rs:1039:34: 1039:38
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1039:1: 1039:39
    }
}

const ECHOKE: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:664:19: 664:29

    bb0: {
        _0 = const 2048_u32;             // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:664:32: 664:42
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:664:1: 664:43
    }
}

const SHM_RDONLY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1573:23: 1573:30

    bb0: {
        _0 = const 4096_i32;             // scope 0 at src/unix/linux_like/linux/mod.rs:1573:33: 1573:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1573:1: 1573:41
    }
}

const SYS_kexec_file_load: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:399:32: 399:40

    bb0: {
        _0 = const 320_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:399:43: 399:46
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:399:1: 399:47
    }
}

const POSIX_SPAWN_SETSIGMASK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2056:35: 2056:42

    bb0: {
        _0 = const 8_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2056:45: 2056:49
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2056:1: 2056:50
    }
}

const NLA_F_NESTED: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2516:25: 2516:32
    let mut _1: (i32, bool);             // in scope 0 at src/unix/linux_like/linux/mod.rs:2516:35: 2516:42

    bb0: {
        _1 = CheckedShl(const 1_i32, const 15_i32); // scope 0 at src/unix/linux_like/linux/mod.rs:2516:35: 2516:42
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 15_i32) -> bb1; // scope 0 at src/unix/linux_like/linux/mod.rs:2516:35: 2516:42
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/linux_like/linux/mod.rs:2516:35: 2516:42
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2516:1: 2516:43
    }
}

const SW_MAX: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2997:19: 2997:26

    bb0: {
        _0 = const 16_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:2997:29: 2997:33
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2997:1: 2997:34
    }
}

const MON_10: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1106:27: 1106:36

    bb0: {
        _0 = const 131107_i32;           // scope 0 at src/unix/linux_like/linux/mod.rs:1106:39: 1106:46
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1106:9: 1106:47
    }
}

const LOG_ODELAY: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:276:31: 276:38

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/mod.rs:276:41: 276:45
        return;                          // scope 0 at src/unix/mod.rs:276:9: 276:46
    }
}

const NT_FPREGSET: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:937:24: 937:31

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:937:34: 937:35
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:937:1: 937:36
    }
}

const IPPROTO_DSTOPTS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:872:28: 872:35

    bb0: {
        _0 = const 60_i32;               // scope 0 at src/unix/linux_like/mod.rs:872:38: 872:40
        return;                          // scope 0 at src/unix/linux_like/mod.rs:872:1: 872:41
    }
}

const ARPHRD_ADAPT: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1333:25: 1333:28

    bb0: {
        _0 = const 264_u16;              // scope 0 at src/unix/linux_like/mod.rs:1333:31: 1333:34
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1333:1: 1333:35
    }
}

const SIGBUS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:513:19: 513:26

    bb0: {
        _0 = const 7_i32;                // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:513:29: 513:30
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:513:1: 513:31
    }
}

const TCP_MD5SIG_EXT: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1003:35: 1003:42

    bb0: {
        _0 = const 32_i32;               // scope 0 at src/unix/linux_like/mod.rs:1003:45: 1003:47
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1003:9: 1003:48
    }
}

const IFLA_PROTINFO: u16 = {
    let mut _0: u16;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1398:26: 1398:36

    bb0: {
        _0 = const 12_u16;               // scope 0 at src/unix/linux_like/linux/mod.rs:1398:39: 1398:41
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1398:1: 1398:42
    }
}

const SYS_fgetxattr: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:272:26: 272:34

    bb0: {
        _0 = const 193_i64;              // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:272:37: 272:40
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:272:1: 272:41
    }
}

const BPF_SUB: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1915:20: 1915:27

    bb0: {
        _0 = const 16_u32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1915:30: 1915:34
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1915:1: 1915:35
    }
}

const SO_SNDTIMEO_NEW: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:103:36: 103:43

    bb0: {
        _0 = const 67_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:103:46: 103:48
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:103:9: 103:49
    }
}

const SIOCSIFSLAVE: u64 = {
    let mut _0: u64;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2369:25: 2369:34

    bb0: {
        _0 = const 35120_u64;            // scope 0 at src/unix/linux_like/linux/mod.rs:2369:37: 2369:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2369:1: 2369:48
    }
}

const NFT_MSG_GETTABLE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2833:29: 2833:36

    bb0: {
        _0 = const 1_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2833:39: 2833:40
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2833:1: 2833:41
    }
}

const LOG_LOCAL5: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/mod.rs:268:23: 268:30
    let mut _1: (i32, bool);             // in scope 0 at src/unix/mod.rs:268:33: 268:40

    bb0: {
        _1 = CheckedShl(const 21_i32, const 3_i32); // scope 0 at src/unix/mod.rs:268:33: 268:40
        assert(!move (_1.1: bool), "attempt to shift left by `{}`, which would overflow", const 3_i32) -> bb1; // scope 0 at src/unix/mod.rs:268:33: 268:40
    }

    bb1: {
        _0 = move (_1.0: i32);           // scope 0 at src/unix/mod.rs:268:33: 268:40
        return;                          // scope 0 at src/unix/mod.rs:268:1: 268:41
    }
}

const _SC_CHAR_MAX: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/mod.rs:773:25: 773:32

    bb0: {
        _0 = const 102_i32;              // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:773:35: 773:38
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/mod.rs:773:1: 773:39
    }
}

const AF_RXRPC: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:715:21: 715:28

    bb0: {
        _0 = const 33_i32;               // scope 0 at src/unix/linux_like/mod.rs:715:31: 715:33
        return;                          // scope 0 at src/unix/linux_like/mod.rs:715:1: 715:34
    }
}

const PTRACE_EVENT_VFORK: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/mod.rs:1176:31: 1176:38

    bb0: {
        _0 = const 2_i32;                // scope 0 at src/unix/linux_like/mod.rs:1176:41: 1176:42
        return;                          // scope 0 at src/unix/linux_like/mod.rs:1176:1: 1176:43
    }
}

const _SC_XOPEN_REALTIME_THREADS: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1255:39: 1255:46

    bb0: {
        _0 = const 131_i32;              // scope 0 at src/unix/linux_like/linux/mod.rs:1255:49: 1255:52
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1255:1: 1255:53
    }
}

const SYS_semctl: i64 = {
    let mut _0: i64;                     // return place in scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:145:23: 145:31

    bb0: {
        _0 = const 66_i64;               // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:145:34: 145:36
        return;                          // scope 0 at src/unix/linux_like/linux/gnu/b64/x86_64/not_x32.rs:145:1: 145:37
    }
}

const PR_SET_CHILD_SUBREAPER: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:1754:35: 1754:42

    bb0: {
        _0 = const 36_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:1754:45: 1754:47
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:1754:1: 1754:48
    }
}

const SO_ATTACH_BPF: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:77:26: 77:33

    bb0: {
        _0 = const 50_i32;               // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:77:36: 77:38
        return;                          // scope 0 at src/unix/linux_like/linux/arch/generic/mod.rs:77:1: 77:39
    }
}

const GENL_CMD_CAP_DUMP: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2216:30: 2216:37

    bb0: {
        _0 = const 4_i32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2216:40: 2216:44
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2216:1: 2216:45
    }
}

const MODULE_INIT_IGNORE_VERMAGIC: u32 = {
    let mut _0: u32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:2653:40: 2653:48

    bb0: {
        _0 = const 2_u32;                // scope 0 at src/unix/linux_like/linux/mod.rs:2653:51: 2653:57
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:2653:1: 2653:58
    }
}

const ESPIPE: i32 = {
    let mut _0: i32;                     // return place in scope 0 at src/unix/linux_like/linux/mod.rs:3149:19: 3149:26

    bb0: {
        _0 = const 29_i32;               // scope 0 at src/unix/linux_like/linux/mod.rs:3149:29: 3149:31
        return;                          // scope 0 at src/unix/linux_like/linux/mod.rs:3149:1: 3149:32
    }
}
