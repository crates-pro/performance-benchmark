// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main::{closure#0}::{closure#2}(_1: [closure@src/main.rs:181:32: 192:10], _2: std::result::Result<(), errors::Error>) -> std::result::Result<(), ()> {
    debug result => _2;                  // in scope 0 at src/main.rs:181:38: 181:44
    debug addr => (_1.0: std::net::SocketAddr); // in scope 0 at src/main.rs:148:60: 148:64
    let mut _0: std::result::Result<(), ()>; // return place in scope 0 at src/main.rs:181:46: 181:46
    let mut _3: isize;                   // in scope 0 at src/main.rs:183:17: 183:23
    let _4: ();                          // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _7: (&std::net::SocketAddr,); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _8: &std::net::SocketAddr;   // in scope 0 at src/main.rs:183:52: 183:56
    let _9: &std::net::SocketAddr;       // in scope 0 at src/main.rs:183:52: 183:56
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _11: &std::net::SocketAddr;  // in scope 0 at src/main.rs:183:52: 183:56
    let mut _12: for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:183:52: 183:56
    let _13: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _14: &[&str];                // in scope 0 at src/main.rs:183:36: 183:50
    let mut _15: &[&str; 2];             // in scope 0 at src/main.rs:183:36: 183:50
    let _16: &[&str; 2];                 // in scope 0 at src/main.rs:183:36: 183:50
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let _19: errors::Error;              // in scope 0 at src/main.rs:184:21: 184:22
    let _20: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _21: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _22: [std::fmt::ArgumentV1; 2]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _23: (&std::net::SocketAddr, &errors::Error); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _24: &std::net::SocketAddr;  // in scope 0 at src/main.rs:185:46: 185:50
    let mut _25: &errors::Error;         // in scope 0 at src/main.rs:185:52: 185:53
    let mut _28: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _29: &std::net::SocketAddr;  // in scope 0 at src/main.rs:185:46: 185:50
    let mut _30: for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:185:46: 185:50
    let mut _31: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _32: &errors::Error;         // in scope 0 at src/main.rs:185:52: 185:53
    let mut _33: for<'r, 's, 't0> fn(&'r errors::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:185:52: 185:53
    let mut _35: &[&str];                // in scope 0 at src/main.rs:185:30: 185:44
    let mut _36: &[&str; 3];             // in scope 0 at src/main.rs:185:30: 185:44
    let _37: &[&str; 3];                 // in scope 0 at src/main.rs:185:30: 185:44
    let mut _38: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _39: &[std::fmt::ArgumentV1; 2]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _40: std::iter::Skip<error_chain::ErrorChainIter>; // in scope 0 at src/main.rs:186:30: 186:46
    let mut _41: std::iter::Skip<error_chain::ErrorChainIter>; // in scope 0 at src/main.rs:186:30: 186:46
    let mut _42: error_chain::ErrorChainIter; // in scope 0 at src/main.rs:186:30: 186:38
    let mut _43: &errors::Error;         // in scope 0 at src/main.rs:186:30: 186:31
    let mut _46: std::option::Option<&dyn std::error::Error>; // in scope 0 at src/main.rs:186:30: 186:46
    let mut _47: &mut std::iter::Skip<error_chain::ErrorChainIter>; // in scope 0 at src/main.rs:186:30: 186:46
    let mut _48: &mut std::iter::Skip<error_chain::ErrorChainIter>; // in scope 0 at src/main.rs:186:30: 186:46
    let mut _49: isize;                  // in scope 0 at src/main.rs:186:25: 186:26
    let mut _51: &dyn std::error::Error; // in scope 0 at src/main.rs:186:25: 186:26
    let _53: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _54: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _55: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _56: (&&dyn std::error::Error,); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _57: &&dyn std::error::Error; // in scope 0 at src/main.rs:187:42: 187:43
    let mut _59: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _60: &&dyn std::error::Error; // in scope 0 at src/main.rs:187:42: 187:43
    let mut _61: for<'r, 's, 't0> fn(&'r &dyn std::error::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:187:42: 187:43
    let mut _63: &[&str];                // in scope 0 at src/main.rs:187:34: 187:40
    let mut _64: &[&str; 2];             // in scope 0 at src/main.rs:187:34: 187:40
    let _65: &[&str; 2];                 // in scope 0 at src/main.rs:187:34: 187:40
    let mut _66: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _67: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    scope 1 {
        debug arg0 => _9;                // in scope 1 at src/main.rs:183:52: 183:56
    }
    scope 2 {
        debug args => _13;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 3 {
            let mut _68: &[&str; 2];     // in scope 3 at src/main.rs:183:36: 183:50
        }
    }
    scope 4 {
        debug e => _19;                  // in scope 4 at src/main.rs:184:21: 184:22
        let _26: &std::net::SocketAddr;  // in scope 4 at src/main.rs:185:46: 185:50
        let _27: &errors::Error;         // in scope 4 at src/main.rs:185:52: 185:53
        let _34: &[std::fmt::ArgumentV1; 2]; // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        let mut _44: std::iter::Skip<error_chain::ErrorChainIter>; // in scope 4 at src/main.rs:186:30: 186:46
        scope 5 {
            debug arg0 => _26;           // in scope 5 at src/main.rs:185:46: 185:50
            debug arg1 => _27;           // in scope 5 at src/main.rs:185:52: 185:53
        }
        scope 6 {
            debug args => _34;           // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            scope 7 {
                let mut _70: &[&str; 3]; // in scope 7 at src/main.rs:185:30: 185:44
            }
        }
        scope 8 {
            debug iter => _44;           // in scope 8 at src/main.rs:186:30: 186:46
            let mut _45: &dyn std::error::Error; // in scope 8 at src/main.rs:186:30: 186:46
            scope 9 {
                debug __next => _45;     // in scope 9 at src/main.rs:186:30: 186:46
                let _50: &dyn std::error::Error; // in scope 9 at src/main.rs:186:25: 186:26
                let _52: &dyn std::error::Error; // in scope 9 at src/main.rs:186:25: 186:26
                scope 10 {
                    debug val => _50;    // in scope 10 at src/main.rs:186:25: 186:26
                }
                scope 11 {
                    debug e => _52;      // in scope 11 at src/main.rs:186:25: 186:26
                    let _58: &&dyn std::error::Error; // in scope 11 at src/main.rs:187:42: 187:43
                    let _62: &[std::fmt::ArgumentV1; 1]; // in scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                    scope 12 {
                        debug arg0 => _58; // in scope 12 at src/main.rs:187:42: 187:43
                    }
                    scope 13 {
                        debug args => _62; // in scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                        scope 14 {
                            let mut _69: &[&str; 2]; // in scope 14 at src/main.rs:187:34: 187:40
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = discriminant(_2);           // scope 0 at src/main.rs:182:19: 182:25
        switchInt(move _3) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at src/main.rs:182:13: 182:25
    }

    bb1: {
        StorageLive(_19);                // scope 0 at src/main.rs:184:21: 184:22
        _19 = move ((_2 as Err).0: errors::Error); // scope 0 at src/main.rs:184:21: 184:22
        StorageLive(_20);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_21);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_22);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_23);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_24);                // scope 4 at src/main.rs:185:46: 185:50
        _24 = &(_1.0: std::net::SocketAddr); // scope 4 at src/main.rs:185:46: 185:50
        StorageLive(_25);                // scope 4 at src/main.rs:185:52: 185:53
        _25 = &_19;                      // scope 4 at src/main.rs:185:52: 185:53
        (_23.0: &std::net::SocketAddr) = move _24; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        (_23.1: &errors::Error) = move _25; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_25);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_24);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_26);                // scope 4 at src/main.rs:185:46: 185:50
        _26 = (_23.0: &std::net::SocketAddr); // scope 4 at src/main.rs:185:46: 185:50
        StorageLive(_27);                // scope 4 at src/main.rs:185:52: 185:53
        _27 = (_23.1: &errors::Error);   // scope 4 at src/main.rs:185:52: 185:53
        StorageLive(_28);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_29);                // scope 5 at src/main.rs:185:46: 185:50
        _29 = _26;                       // scope 5 at src/main.rs:185:46: 185:50
        StorageLive(_30);                // scope 5 at src/main.rs:185:46: 185:50
        _30 = <std::net::SocketAddr as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at src/main.rs:185:46: 185:50
                                         // mir::Constant
                                         // + span: src/main.rs:185:46: 185:50
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<std::net::SocketAddr as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _28 = ArgumentV1::new::<std::net::SocketAddr>(move _29, move _30) -> [return: bb7, unwind: bb24]; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr, for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<std::net::SocketAddr>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:182:19: 182:25
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_8);                 // scope 0 at src/main.rs:183:52: 183:56
        _8 = &(_1.0: std::net::SocketAddr); // scope 0 at src/main.rs:183:52: 183:56
        (_7.0: &std::net::SocketAddr) = move _8; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_9);                 // scope 0 at src/main.rs:183:52: 183:56
        _9 = (_7.0: &std::net::SocketAddr); // scope 0 at src/main.rs:183:52: 183:56
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_11);                // scope 1 at src/main.rs:183:52: 183:56
        _11 = _9;                        // scope 1 at src/main.rs:183:52: 183:56
        StorageLive(_12);                // scope 1 at src/main.rs:183:52: 183:56
        _12 = <std::net::SocketAddr as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at src/main.rs:183:52: 183:56
                                         // mir::Constant
                                         // + span: src/main.rs:183:52: 183:56
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<std::net::SocketAddr as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<std::net::SocketAddr>(move _11, move _12) -> bb4; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b std::net::SocketAddr, for<'r, 's, 't0> fn(&'r std::net::SocketAddr, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<std::net::SocketAddr>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_11);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _6 = [move _10];                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _13 = &_6;                       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_14);                // scope 3 at src/main.rs:183:36: 183:50
        StorageLive(_15);                // scope 3 at src/main.rs:183:36: 183:50
        StorageLive(_16);                // scope 3 at src/main.rs:183:36: 183:50
        _68 = const main::{closure#0}::{closure#2}::promoted[0]; // scope 3 at src/main.rs:183:36: 183:50
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(main::{closure#0}::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:183:36: 183:50
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:128 ~ webpush_server[6b79]::main::{closure#0}::{closure#2}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _16 = _68;                       // scope 3 at src/main.rs:183:36: 183:50
        _15 = _16;                       // scope 3 at src/main.rs:183:36: 183:50
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 3 at src/main.rs:183:36: 183:50
        StorageDead(_15);                // scope 3 at src/main.rs:183:49: 183:50
        StorageLive(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _18 = _13;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _5 = Arguments::new_v1(move _14, move _17) -> bb5; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_14);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_16);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _4 = _print(move _5) -> bb6;     // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        goto -> bb23;                    // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:96:23: 98:6
    }

    bb7: {
        StorageDead(_30);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_29);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_31);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_32);                // scope 5 at src/main.rs:185:52: 185:53
        _32 = _27;                       // scope 5 at src/main.rs:185:52: 185:53
        StorageLive(_33);                // scope 5 at src/main.rs:185:52: 185:53
        _33 = <errors::Error as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r errors::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at src/main.rs:185:52: 185:53
                                         // mir::Constant
                                         // + span: src/main.rs:185:52: 185:53
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r errors::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<errors::Error as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _31 = ArgumentV1::new::<errors::Error>(move _32, move _33) -> [return: bb8, unwind: bb24]; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b errors::Error, for<'r, 's, 't0> fn(&'r errors::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_33);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_32);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _22 = [move _28, move _31];      // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_31);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_28);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_27);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_26);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_34);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _34 = &_22;                      // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_35);                // scope 7 at src/main.rs:185:30: 185:44
        StorageLive(_36);                // scope 7 at src/main.rs:185:30: 185:44
        StorageLive(_37);                // scope 7 at src/main.rs:185:30: 185:44
        _70 = const main::{closure#0}::{closure#2}::promoted[2]; // scope 7 at src/main.rs:185:30: 185:44
                                         // ty::Const
                                         // + ty: &[&str; 3]
                                         // + val: Unevaluated(main::{closure#0}::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2]))
                                         // mir::Constant
                                         // + span: src/main.rs:185:30: 185:44
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:128 ~ webpush_server[6b79]::main::{closure#0}::{closure#2}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[2]) }) }
        _37 = _70;                       // scope 7 at src/main.rs:185:30: 185:44
        _36 = _37;                       // scope 7 at src/main.rs:185:30: 185:44
        _35 = move _36 as &[&str] (Pointer(Unsize)); // scope 7 at src/main.rs:185:30: 185:44
        StorageDead(_36);                // scope 7 at src/main.rs:185:43: 185:44
        StorageLive(_38);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_39);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _39 = _34;                       // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _38 = move _39 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_39);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _21 = Arguments::new_v1(move _35, move _38) -> [return: bb9, unwind: bb24]; // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_38);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_35);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_37);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_34);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _20 = _print(move _21) -> [return: bb10, unwind: bb24]; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_21);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_23);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_22);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_20);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_40);                // scope 4 at src/main.rs:186:30: 186:46
        StorageLive(_41);                // scope 4 at src/main.rs:186:30: 186:46
        StorageLive(_42);                // scope 4 at src/main.rs:186:30: 186:38
        StorageLive(_43);                // scope 4 at src/main.rs:186:30: 186:31
        _43 = &_19;                      // scope 4 at src/main.rs:186:30: 186:31
        _42 = errors::Error::iter(move _43) -> [return: bb11, unwind: bb24]; // scope 4 at src/main.rs:186:30: 186:38
                                         // mir::Constant
                                         // + span: src/main.rs:186:32: 186:36
                                         // + literal: Const { ty: for<'r> fn(&'r errors::Error) -> error_chain::ErrorChainIter<'r> {errors::Error::iter}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_43);                // scope 4 at src/main.rs:186:37: 186:38
        _41 = <ErrorChainIter as Iterator>::skip(move _42, const 1_usize) -> [return: bb12, unwind: bb24]; // scope 4 at src/main.rs:186:30: 186:46
                                         // mir::Constant
                                         // + span: src/main.rs:186:39: 186:43
                                         // + literal: Const { ty: fn(error_chain::ErrorChainIter, usize) -> std::iter::Skip<error_chain::ErrorChainIter> {<error_chain::ErrorChainIter as std::iter::Iterator>::skip}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_42);                // scope 4 at src/main.rs:186:45: 186:46
        _40 = <std::iter::Skip<ErrorChainIter> as IntoIterator>::into_iter(move _41) -> [return: bb13, unwind: bb24]; // scope 4 at src/main.rs:186:30: 186:46
                                         // mir::Constant
                                         // + span: src/main.rs:186:30: 186:46
                                         // + literal: Const { ty: fn(std::iter::Skip<error_chain::ErrorChainIter>) -> <std::iter::Skip<error_chain::ErrorChainIter> as std::iter::IntoIterator>::IntoIter {<std::iter::Skip<error_chain::ErrorChainIter> as std::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_41);                // scope 4 at src/main.rs:186:45: 186:46
        StorageLive(_44);                // scope 4 at src/main.rs:186:30: 186:46
        _44 = move _40;                  // scope 4 at src/main.rs:186:30: 186:46
        goto -> bb14;                    // scope 8 at src/main.rs:186:21: 188:22
    }

    bb14: {
        StorageLive(_45);                // scope 8 at src/main.rs:186:30: 186:46
        StorageLive(_46);                // scope 9 at src/main.rs:186:30: 186:46
        StorageLive(_47);                // scope 9 at src/main.rs:186:30: 186:46
        StorageLive(_48);                // scope 9 at src/main.rs:186:30: 186:46
        _48 = &mut _44;                  // scope 9 at src/main.rs:186:30: 186:46
        _47 = &mut (*_48);               // scope 9 at src/main.rs:186:30: 186:46
        _46 = <std::iter::Skip<ErrorChainIter> as Iterator>::next(move _47) -> [return: bb15, unwind: bb24]; // scope 9 at src/main.rs:186:30: 186:46
                                         // mir::Constant
                                         // + span: src/main.rs:186:30: 186:46
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::iter::Skip<error_chain::ErrorChainIter>) -> std::option::Option<<std::iter::Skip<error_chain::ErrorChainIter> as std::iter::Iterator>::Item> {<std::iter::Skip<error_chain::ErrorChainIter> as std::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_47);                // scope 9 at src/main.rs:186:45: 186:46
        _49 = discriminant(_46);         // scope 9 at src/main.rs:186:30: 186:46
        switchInt(move _49) -> [0_isize: bb16, 1_isize: bb18, otherwise: bb17]; // scope 9 at src/main.rs:186:30: 186:46
    }

    bb16: {
        StorageDead(_48);                // scope 9 at src/main.rs:186:45: 186:46
        StorageDead(_46);                // scope 9 at src/main.rs:186:45: 186:46
        StorageDead(_45);                // scope 8 at src/main.rs:188:21: 188:22
        StorageDead(_44);                // scope 4 at src/main.rs:188:21: 188:22
        StorageDead(_40);                // scope 4 at src/main.rs:186:45: 186:46
        drop(_19) -> bb22;               // scope 0 at src/main.rs:189:17: 189:18
    }

    bb17: {
        unreachable;                     // scope 9 at src/main.rs:186:30: 186:46
    }

    bb18: {
        StorageLive(_50);                // scope 9 at src/main.rs:186:25: 186:26
        _50 = ((_46 as Some).0: &dyn std::error::Error); // scope 9 at src/main.rs:186:25: 186:26
        StorageLive(_51);                // scope 10 at src/main.rs:186:25: 186:26
        _51 = _50;                       // scope 10 at src/main.rs:186:25: 186:26
        _45 = move _51;                  // scope 10 at src/main.rs:186:25: 186:26
        StorageDead(_51);                // scope 10 at src/main.rs:186:25: 186:26
        StorageDead(_50);                // scope 9 at src/main.rs:186:25: 186:26
        StorageDead(_48);                // scope 9 at src/main.rs:186:45: 186:46
        StorageDead(_46);                // scope 9 at src/main.rs:186:45: 186:46
        StorageLive(_52);                // scope 9 at src/main.rs:186:25: 186:26
        _52 = _45;                       // scope 9 at src/main.rs:186:30: 186:46
        StorageLive(_53);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_54);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_55);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_56);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_57);                // scope 11 at src/main.rs:187:42: 187:43
        _57 = &_52;                      // scope 11 at src/main.rs:187:42: 187:43
        (_56.0: &&dyn std::error::Error) = move _57; // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_57);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_58);                // scope 11 at src/main.rs:187:42: 187:43
        _58 = (_56.0: &&dyn std::error::Error); // scope 11 at src/main.rs:187:42: 187:43
        StorageLive(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_60);                // scope 12 at src/main.rs:187:42: 187:43
        _60 = _58;                       // scope 12 at src/main.rs:187:42: 187:43
        StorageLive(_61);                // scope 12 at src/main.rs:187:42: 187:43
        _61 = <&dyn std::error::Error as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &dyn std::error::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 12 at src/main.rs:187:42: 187:43
                                         // mir::Constant
                                         // + span: src/main.rs:187:42: 187:43
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &dyn std::error::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&dyn std::error::Error as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _59 = ArgumentV1::new::<&dyn std::error::Error>(move _60, move _61) -> [return: bb19, unwind: bb24]; // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b &dyn std::error::Error, for<'r, 's, 't0> fn(&'r &dyn std::error::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&dyn std::error::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        StorageDead(_61);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_60);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _55 = [move _59];                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_58);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_62);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _62 = &_55;                      // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_63);                // scope 14 at src/main.rs:187:34: 187:40
        StorageLive(_64);                // scope 14 at src/main.rs:187:34: 187:40
        StorageLive(_65);                // scope 14 at src/main.rs:187:34: 187:40
        _69 = const main::{closure#0}::{closure#2}::promoted[1]; // scope 14 at src/main.rs:187:34: 187:40
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(main::{closure#0}::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1]))
                                         // mir::Constant
                                         // + span: src/main.rs:187:34: 187:40
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:128 ~ webpush_server[6b79]::main::{closure#0}::{closure#2}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[1]) }) }
        _65 = _69;                       // scope 14 at src/main.rs:187:34: 187:40
        _64 = _65;                       // scope 14 at src/main.rs:187:34: 187:40
        _63 = move _64 as &[&str] (Pointer(Unsize)); // scope 14 at src/main.rs:187:34: 187:40
        StorageDead(_64);                // scope 14 at src/main.rs:187:39: 187:40
        StorageLive(_66);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_67);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _67 = _62;                       // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _66 = move _67 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_67);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _54 = Arguments::new_v1(move _63, move _66) -> [return: bb20, unwind: bb24]; // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_66);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_63);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_65);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_62);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _53 = _print(move _54) -> [return: bb21, unwind: bb24]; // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_54);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_56);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_55);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_53);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_52);                // scope 9 at src/main.rs:188:21: 188:22
        StorageDead(_45);                // scope 8 at src/main.rs:188:21: 188:22
        goto -> bb14;                    // scope 8 at src/main.rs:186:21: 188:22
    }

    bb22: {
        StorageDead(_19);                // scope 0 at src/main.rs:189:17: 189:18
        goto -> bb23;                    // scope 0 at src/main.rs:189:17: 189:18
    }

    bb23: {
        discriminant(_0) = 0;            // scope 0 at src/main.rs:191:13: 191:19
        return;                          // scope 0 at src/main.rs:192:10: 192:10
    }

    bb24 (cleanup): {
        drop(_19) -> bb25;               // scope 0 at src/main.rs:189:17: 189:18
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at src/main.rs:181:32: 192:10
    }
}

promoted[0] in main::{closure#0}::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:183:36: 183:50
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:183:36: 183:50

    bb0: {
        _1 = [const "peer ", const " gone\n"]; // scope 0 at src/main.rs:183:36: 183:50
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [112, 101, 101, 114, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 })
                                         // mir::Constant
                                         // + span: src/main.rs:183:36: 183:50
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [112, 101, 101, 114, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [32, 103, 111, 110, 101, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:183:36: 183:50
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [32, 103, 111, 110, 101, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:183:36: 183:50
        return;                          // scope 0 at src/main.rs:183:36: 183:50
    }
}

promoted[1] in main::{closure#0}::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:187:34: 187:40
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:187:34: 187:40

    bb0: {
        _1 = [const "\t", const "\n"];   // scope 0 at src/main.rs:187:34: 187:40
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [9], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:187:34: 187:40
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [9], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:187:34: 187:40
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:187:34: 187:40
        return;                          // scope 0 at src/main.rs:187:34: 187:40
    }
}

promoted[2] in main::{closure#0}::{closure#2}: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at src/main.rs:185:30: 185:44
    let mut _1: [&str; 3];               // in scope 0 at src/main.rs:185:30: 185:44

    bb0: {
        _1 = [const "", const " error: ", const "\n"]; // scope 0 at src/main.rs:185:30: 185:44
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
                                         // mir::Constant
                                         // + span: src/main.rs:185:30: 185:44
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [32, 101, 114, 114, 111, 114, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 })
                                         // mir::Constant
                                         // + span: src/main.rs:185:30: 185:44
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [32, 101, 114, 114, 111, 114, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:185:30: 185:44
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:185:30: 185:44
        return;                          // scope 0 at src/main.rs:185:30: 185:44
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &[u8]) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const 9_usize;              // scope 0 at src/main.rs:54:10: 54:21
        _5 = Eq(move _3, move _4);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _5) -> [false: bb10, otherwise: bb1]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb1: {
        switchInt((*_2)[0 of 9]) -> [99_u8: bb2, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        switchInt((*_2)[1 of 9]) -> [104_u8: bb3, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb3: {
        switchInt((*_2)[2 of 9]) -> [97_u8: bb4, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        switchInt((*_2)[3 of 9]) -> [110_u8: bb5, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb5: {
        switchInt((*_2)[4 of 9]) -> [110_u8: bb6, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb6: {
        switchInt((*_2)[5 of 9]) -> [101_u8: bb7, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb7: {
        switchInt((*_2)[6 of 9]) -> [108_u8: bb8, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb8: {
        switchInt((*_2)[7 of 9]) -> [73_u8: bb9, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb9: {
        switchInt((*_2)[8 of 9]) -> [68_u8: bb11, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb10: {
        StorageLive(_7);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_7) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _7; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_7);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb12;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb11: {
        StorageLive(_6);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_6) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _6; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_6);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb12;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb12: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn errors::ErrorKind::Msg(_1: std::string::String) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Msg).0: std::string::String) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

// MIR FOR CTFE
fn errors::ErrorKind::Msg(_1: std::string::String) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Msg).0: std::string::String) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

fn errors::ErrorKind::Io(_1: std::io::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Io).0: std::io::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 2;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

// MIR FOR CTFE
fn errors::ErrorKind::Io(_1: std::io::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Io).0: std::io::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 2;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

fn _IMPL_SERIALIZE_FOR_Notification::<impl at src/main.rs:103:10: 103:19>::serialize(_1: &Notification, _2: __S) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:103:10: 103:19
    debug __serializer => _2;            // in scope 0 at src/main.rs:103:10: 103:19
    let mut _0: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // return place in scope 0 at src/main.rs:103:10: 103:19
    let _3: &std::vec::Vec<Update>;      // in scope 0 at src/main.rs:103:10: 103:19
    let mut _5: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _6: __S;                     // in scope 0 at src/main.rs:103:10: 103:19
    let mut _7: usize;                   // in scope 0 at src/main.rs:103:10: 103:19
    let mut _8: isize;                   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _11: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _12: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _13: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _14: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _15: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _16: &std::vec::Vec<Update>; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _17: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _20: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _21: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _22: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:103:10: 103:19
    let mut _23: bool;                   // in scope 0 at src/main.rs:103:18: 103:19
    scope 1 {
        debug updates => _3;             // in scope 1 at src/main.rs:103:10: 103:19
        let mut _4: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 1 at src/main.rs:103:10: 103:19
        let _9: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _10: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 2 {
            debug __serde_state => _4;   // in scope 2 at src/main.rs:103:10: 103:19
            let _18: ();                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _19: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            scope 5 {
                debug val => _18;        // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 6 {
                debug err => _19;        // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
        }
        scope 3 {
            debug val => _9;             // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 4 {
            debug err => _10;            // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }

    bb0: {
        _23 = const false;               // scope 0 at src/main.rs:103:10: 103:19
        StorageLive(_3);                 // scope 0 at src/main.rs:103:10: 103:19
        _3 = &(((*_1) as Simple).0: std::vec::Vec<Update>); // scope 0 at src/main.rs:103:10: 103:19
        StorageLive(_4);                 // scope 1 at src/main.rs:103:10: 103:19
        StorageLive(_5);                 // scope 1 at src/main.rs:103:10: 103:19
        StorageLive(_6);                 // scope 1 at src/main.rs:103:10: 103:19
        _6 = move _2;                    // scope 1 at src/main.rs:103:10: 103:19
        StorageLive(_7);                 // scope 1 at src/main.rs:103:10: 103:19
        _7 = const 1_usize;              // scope 1 at src/main.rs:103:10: 103:19
        _5 = <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct(move _6, const "Notification", move _7) -> bb1; // scope 1 at src/main.rs:103:10: 103:19
                                         // mir::Constant
                                         // + span: src/main.rs:103:10: 103:19
                                         // + literal: Const { ty: fn(__S, &'static str, usize) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [78, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 })
                                         // mir::Constant
                                         // + span: src/main.rs:103:10: 103:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [78, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 }) }
    }

    bb1: {
        StorageDead(_7);                 // scope 1 at src/main.rs:103:18: 103:19
        StorageDead(_6);                 // scope 1 at src/main.rs:103:18: 103:19
        _8 = discriminant(_5);           // scope 1 at src/main.rs:103:10: 103:19
        switchInt(move _8) -> [0_isize: bb4, 1_isize: bb2, otherwise: bb3]; // scope 1 at src/main.rs:103:10: 398:9
    }

    bb2: {
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _10 = move ((_5 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_11);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_12);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _12 = move _10;                  // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _11 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _12) -> bb5; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        unreachable;                     // scope 1 at src/main.rs:103:10: 103:19
    }

    bb4: {
        StorageLive(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _9 = move ((_5 as Ok).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _23 = const true;                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _4 = move _9;                    // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_5);                 // scope 1 at src/main.rs:103:18: 103:19
        StorageLive(_13);                // scope 2 at src/main.rs:103:10: 103:19
        StorageLive(_14);                // scope 2 at src/main.rs:103:10: 103:19
        StorageLive(_15);                // scope 2 at src/main.rs:103:10: 103:19
        _15 = &mut _4;                   // scope 2 at src/main.rs:103:10: 103:19
        _14 = &mut (*_15);               // scope 2 at src/main.rs:103:10: 103:19
        StorageLive(_16);                // scope 2 at src/main.rs:103:10: 103:19
        _16 = _3;                        // scope 2 at src/main.rs:103:10: 103:19
        _13 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<Vec<Update>>(move _14, const "updates", move _16) -> [return: bb6, unwind: bb17]; // scope 2 at src/main.rs:103:10: 103:19
                                         // mir::Constant
                                         // + span: src/main.rs:103:10: 103:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s std::vec::Vec<Update>) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<std::vec::Vec<Update>>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 112, 100, 97, 116, 101, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [127], len: Size { raw: 7 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 7 })
                                         // mir::Constant
                                         // + span: src/main.rs:103:10: 103:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 112, 100, 97, 116, 101, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [127], len: Size { raw: 7 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 7 }) }
    }

    bb5: {
        StorageDead(_12);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _11; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_11);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_5);                 // scope 1 at src/main.rs:103:18: 103:19
        goto -> bb12;                    // scope 1 at no-location
    }

    bb6: {
        StorageDead(_16);                // scope 2 at src/main.rs:103:18: 103:19
        StorageDead(_14);                // scope 2 at src/main.rs:103:18: 103:19
        _17 = discriminant(_13);         // scope 2 at src/main.rs:103:10: 103:19
        switchInt(move _17) -> [0_isize: bb9, 1_isize: bb7, otherwise: bb8]; // scope 2 at src/main.rs:103:10: 398:9
    }

    bb7: {
        StorageLive(_19);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _19 = move ((_13 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_20);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_21);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _21 = move _19;                  // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _20 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _21) -> [return: bb10, unwind: bb15]; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        unreachable;                     // scope 2 at src/main.rs:103:10: 103:19
    }

    bb9: {
        StorageLive(_18);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_18);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_15);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_13);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_22);                // scope 2 at src/main.rs:103:10: 103:19
        _23 = const false;               // scope 2 at src/main.rs:103:10: 103:19
        _22 = move _4;                   // scope 2 at src/main.rs:103:10: 103:19
        _0 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::end(move _22) -> [return: bb11, unwind: bb17]; // scope 2 at src/main.rs:103:10: 103:19
                                         // mir::Constant
                                         // + span: src/main.rs:103:10: 103:19
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct) -> std::result::Result<<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Ok, <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::end}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_21);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _20; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_20);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_19);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_15);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_13);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        drop(_4) -> bb12;                // scope 1 at src/main.rs:103:18: 103:19
    }

    bb11: {
        StorageDead(_22);                // scope 2 at src/main.rs:103:18: 103:19
        _23 = const false;               // scope 1 at src/main.rs:103:18: 103:19
        StorageDead(_4);                 // scope 1 at src/main.rs:103:18: 103:19
        StorageDead(_3);                 // scope 0 at src/main.rs:103:18: 103:19
        goto -> bb13;                    // scope 0 at src/main.rs:103:18: 103:19
    }

    bb12: {
        _23 = const false;               // scope 1 at src/main.rs:103:18: 103:19
        StorageDead(_4);                 // scope 1 at src/main.rs:103:18: 103:19
        StorageDead(_3);                 // scope 0 at src/main.rs:103:18: 103:19
        goto -> bb13;                    // scope 0 at src/main.rs:103:18: 103:19
    }

    bb13: {
        return;                          // scope 0 at src/main.rs:103:19: 103:19
    }

    bb14 (cleanup): {
        resume;                          // scope 0 at src/main.rs:103:10: 103:19
    }

    bb15 (cleanup): {
        goto -> bb17;                    // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb16 (cleanup): {
        drop(_4) -> bb14;                // scope 1 at src/main.rs:103:18: 103:19
    }

    bb17 (cleanup): {
        switchInt(_23) -> [false: bb14, otherwise: bb16]; // scope 1 at src/main.rs:103:18: 103:19
    }
}

fn <impl at src/main.rs:370:1: 446:2>::call(_1: &Push, _2: hyper::Request) -> Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> {
    debug self => _1;                    // in scope 0 at src/main.rs:376:13: 376:18
    debug req => _2;                     // in scope 0 at src/main.rs:376:20: 376:23
    let mut _0: std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>>; // return place in scope 0 at src/main.rs:376:44: 376:56
    let mut _3: std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>>; // in scope 0 at src/main.rs:401:9: 444:12
    let mut _4: bool;                    // in scope 0 at src/main.rs:379:12: 379:73
    let mut _5: bool;                    // in scope 0 at src/main.rs:379:12: 379:40
    let mut _6: &hyper::Method;          // in scope 0 at src/main.rs:379:12: 379:25
    let _7: &hyper::Method;              // in scope 0 at src/main.rs:379:13: 379:25
    let mut _8: &hyper::Request;         // in scope 0 at src/main.rs:379:13: 379:16
    let mut _9: &hyper::Method;          // in scope 0 at src/main.rs:379:29: 379:40
    let mut _10: bool;                   // in scope 0 at src/main.rs:379:44: 379:73
    let mut _11: &hyper::Method;         // in scope 0 at src/main.rs:379:44: 379:57
    let _12: &hyper::Method;             // in scope 0 at src/main.rs:379:45: 379:57
    let mut _13: &hyper::Request;        // in scope 0 at src/main.rs:379:45: 379:48
    let mut _14: &hyper::Method;         // in scope 0 at src/main.rs:379:61: 379:73
    let _15: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _16: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _17: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _18: (&&hyper::Method,);     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _19: &&hyper::Method;        // in scope 0 at src/main.rs:380:39: 380:51
    let _20: &hyper::Method;             // in scope 0 at src/main.rs:380:39: 380:51
    let mut _21: &hyper::Request;        // in scope 0 at src/main.rs:380:39: 380:42
    let _22: &&hyper::Method;            // in scope 0 at src/main.rs:380:39: 380:51
    let mut _23: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _24: &&hyper::Method;        // in scope 0 at src/main.rs:380:39: 380:51
    let mut _25: for<'r, 's, 't0> fn(&'r &hyper::Method, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:380:39: 380:51
    let _26: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _27: &[&str];                // in scope 0 at src/main.rs:380:22: 380:37
    let mut _28: &[&str; 2];             // in scope 0 at src/main.rs:380:22: 380:37
    let _29: &[&str; 2];                 // in scope 0 at src/main.rs:380:22: 380:37
    let mut _30: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _31: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _32: std::boxed::Box<futures::Done<hyper::Response, hyper::Error>>; // in scope 0 at src/main.rs:381:20: 381:55
    let mut _33: futures::Done<hyper::Response, hyper::Error>; // in scope 0 at src/main.rs:381:29: 381:54
    let mut _34: hyper::Error;           // in scope 0 at src/main.rs:381:33: 381:53
    let mut _35: usize;                  // in scope 0 at src/main.rs:383:12: 383:34
    let mut _36: &str;                   // in scope 0 at src/main.rs:383:12: 383:28
    let _37: &str;                       // in scope 0 at src/main.rs:383:12: 383:28
    let mut _38: &hyper::Uri;            // in scope 0 at src/main.rs:383:12: 383:21
    let _39: &hyper::Uri;                // in scope 0 at src/main.rs:383:12: 383:21
    let mut _40: &hyper::Request;        // in scope 0 at src/main.rs:383:12: 383:15
    let _41: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _42: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let _43: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _44: &[&str];                // in scope 0 at src/main.rs:384:22: 384:38
    let mut _45: &[&str; 1];             // in scope 0 at src/main.rs:384:22: 384:38
    let _46: &[&str; 1];                 // in scope 0 at src/main.rs:384:22: 384:38
    let mut _47: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _48: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _49: std::boxed::Box<futures::Done<hyper::Response, hyper::Error>>; // in scope 0 at src/main.rs:385:20: 385:59
    let mut _50: futures::Done<hyper::Response, hyper::Error>; // in scope 0 at src/main.rs:385:29: 385:58
    let mut _51: hyper::Error;           // in scope 0 at src/main.rs:385:33: 385:57
    let _52: uuid::Uuid;                 // in scope 0 at src/main.rs:387:13: 387:23
    let mut _53: std::result::Result<uuid::Uuid, uuid::ParseError>; // in scope 0 at src/main.rs:387:32: 387:69
    let mut _54: &str;                   // in scope 0 at src/main.rs:387:32: 387:53
    let _55: &str;                       // in scope 0 at src/main.rs:387:32: 387:53
    let mut _56: &str;                   // in scope 0 at src/main.rs:387:32: 387:48
    let _57: &str;                       // in scope 0 at src/main.rs:387:32: 387:48
    let mut _58: &hyper::Uri;            // in scope 0 at src/main.rs:387:32: 387:41
    let _59: &hyper::Uri;                // in scope 0 at src/main.rs:387:32: 387:41
    let mut _60: &hyper::Request;        // in scope 0 at src/main.rs:387:32: 387:35
    let mut _61: std::ops::RangeFrom<usize>; // in scope 0 at src/main.rs:387:49: 387:52
    let mut _62: isize;                  // in scope 0 at src/main.rs:388:13: 388:19
    let _63: uuid::Uuid;                 // in scope 0 at src/main.rs:388:16: 388:18
    let _64: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _65: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _66: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _67: (&&str,);               // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _68: &&str;                  // in scope 0 at src/main.rs:390:46: 390:62
    let _69: &str;                       // in scope 0 at src/main.rs:390:46: 390:62
    let mut _70: &hyper::Uri;            // in scope 0 at src/main.rs:390:46: 390:55
    let _71: &hyper::Uri;                // in scope 0 at src/main.rs:390:46: 390:55
    let mut _72: &hyper::Request;        // in scope 0 at src/main.rs:390:46: 390:49
    let _73: &&str;                      // in scope 0 at src/main.rs:390:46: 390:62
    let mut _74: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _75: &&str;                  // in scope 0 at src/main.rs:390:46: 390:62
    let mut _76: for<'r, 's, 't0> fn(&'r &str, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:390:46: 390:62
    let _77: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _78: &[&str];                // in scope 0 at src/main.rs:390:26: 390:44
    let mut _79: &[&str; 2];             // in scope 0 at src/main.rs:390:26: 390:44
    let _80: &[&str; 2];                 // in scope 0 at src/main.rs:390:26: 390:44
    let mut _81: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _82: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _83: std::boxed::Box<futures::Done<hyper::Response, hyper::Error>>; // in scope 0 at src/main.rs:391:24: 391:59
    let mut _84: futures::Done<hyper::Response, hyper::Error>; // in scope 0 at src/main.rs:391:33: 391:58
    let mut _85: hyper::Error;           // in scope 0 at src/main.rs:391:37: 391:57
    let mut _87: std::option::Option<&hyper::header::ContentType>; // in scope 0 at src/main.rs:394:34: 394:68
    let mut _88: &hyper::Headers;        // in scope 0 at src/main.rs:394:34: 394:47
    let _89: &hyper::Headers;            // in scope 0 at src/main.rs:394:34: 394:47
    let mut _90: &hyper::Request;        // in scope 0 at src/main.rs:394:34: 394:37
    let mut _91: isize;                  // in scope 0 at src/main.rs:395:13: 395:25
    let mut _93: &hyper::mime::Mime;     // in scope 0 at src/main.rs:395:29: 395:37
    let _94: &hyper::mime::Mime;         // in scope 0 at src/main.rs:395:29: 395:37
    let mut _95: &hyper::header::ContentType; // in scope 0 at src/main.rs:395:30: 395:37
    let mut _96: &&str;                  // in scope 0 at src/main.rs:395:41: 395:76
    let mut _98: hyper::Body;            // in scope 0 at src/main.rs:399:20: 399:30
    let mut _99: hyper::Request;         // in scope 0 at src/main.rs:399:20: 399:23
    let mut _101: &std::rc::Rc<Context>; // in scope 0 at src/main.rs:400:18: 400:24
    let mut _102: std::boxed::Box<futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>>; // in scope 0 at src/main.rs:401:9: 444:12
    let mut _103: futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>; // in scope 0 at src/main.rs:401:18: 444:11
    let mut _104: futures::stream::Concat2<hyper::Body>; // in scope 0 at src/main.rs:401:18: 401:22
    let mut _105: [closure@src/main.rs:401:32: 444:10]; // in scope 0 at src/main.rs:401:32: 444:10
    let mut _109: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _111: &hyper::Method;        // in scope 0 at src/main.rs:379:61: 379:73
    let mut _112: &hyper::Method;        // in scope 0 at src/main.rs:379:29: 379:40
    let mut _113: bool;                  // in scope 0 at src/main.rs:445:5: 445:6
    let mut _114: bool;                  // in scope 0 at src/main.rs:445:5: 445:6
    scope 1 {
        debug arg0 => _22;               // in scope 1 at src/main.rs:380:39: 380:51
    }
    scope 2 {
        debug args => _26;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 3 {
            let mut _110: &[&str; 2];    // in scope 3 at src/main.rs:380:22: 380:37
        }
    }
    scope 4 {
        debug args => _43;               // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 5 {
            let mut _108: &[&str; 1];    // in scope 5 at src/main.rs:384:22: 384:38
        }
    }
    scope 6 {
        debug channel_id => _52;         // in scope 6 at src/main.rs:387:13: 387:23
        let _86: bool;                   // in scope 6 at src/main.rs:394:13: 394:25
        let _92: &hyper::header::ContentType; // in scope 6 at src/main.rs:395:18: 395:24
        scope 11 {
            debug form_encoded => _86;   // in scope 11 at src/main.rs:394:13: 394:25
            let _97: futures::stream::Concat2<hyper::Body>; // in scope 11 at src/main.rs:399:13: 399:17
            scope 13 {
                debug body => _97;       // in scope 13 at src/main.rs:399:13: 399:17
                let _100: std::rc::Rc<Context>; // in scope 13 at src/main.rs:400:13: 400:15
                scope 14 {
                    debug cx => _100;    // in scope 14 at src/main.rs:400:13: 400:15
                }
            }
        }
        scope 12 {
            debug header => _92;         // in scope 12 at src/main.rs:395:18: 395:24
            let mut _106: &&str;         // in scope 12 at src/main.rs:395:41: 395:76
        }
    }
    scope 7 {
        debug id => _63;                 // in scope 7 at src/main.rs:388:16: 388:18
    }
    scope 8 {
        debug arg0 => _73;               // in scope 8 at src/main.rs:390:46: 390:62
    }
    scope 9 {
        debug args => _77;               // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 10 {
            let mut _107: &[&str; 2];    // in scope 10 at src/main.rs:390:26: 390:44
        }
    }

    bb0: {
        _113 = const false;              // scope 0 at src/main.rs:401:9: 444:12
        _114 = const false;              // scope 0 at src/main.rs:401:9: 444:12
        _114 = const true;               // scope 0 at src/main.rs:401:9: 444:12
        StorageLive(_3);                 // scope 0 at src/main.rs:401:9: 444:12
        StorageLive(_4);                 // scope 0 at src/main.rs:379:12: 379:73
        StorageLive(_5);                 // scope 0 at src/main.rs:379:12: 379:40
        StorageLive(_6);                 // scope 0 at src/main.rs:379:12: 379:25
        StorageLive(_7);                 // scope 0 at src/main.rs:379:13: 379:25
        StorageLive(_8);                 // scope 0 at src/main.rs:379:13: 379:16
        _8 = &_2;                        // scope 0 at src/main.rs:379:13: 379:16
        _7 = hyper::Request::method(move _8) -> [return: bb4, unwind: bb58]; // scope 0 at src/main.rs:379:13: 379:25
                                         // mir::Constant
                                         // + span: src/main.rs:379:17: 379:23
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Method {hyper::Request::method}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _4 = const false;                // scope 0 at src/main.rs:379:12: 379:73
        goto -> bb3;                     // scope 0 at src/main.rs:379:12: 379:73
    }

    bb2: {
        StorageLive(_10);                // scope 0 at src/main.rs:379:44: 379:73
        StorageLive(_11);                // scope 0 at src/main.rs:379:44: 379:57
        StorageLive(_12);                // scope 0 at src/main.rs:379:45: 379:57
        StorageLive(_13);                // scope 0 at src/main.rs:379:45: 379:48
        _13 = &_2;                       // scope 0 at src/main.rs:379:45: 379:48
        _12 = hyper::Request::method(move _13) -> [return: bb6, unwind: bb58]; // scope 0 at src/main.rs:379:45: 379:57
                                         // mir::Constant
                                         // + span: src/main.rs:379:49: 379:55
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Method {hyper::Request::method}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_10);                // scope 0 at src/main.rs:379:72: 379:73
        StorageDead(_7);                 // scope 0 at src/main.rs:379:72: 379:73
        StorageDead(_5);                 // scope 0 at src/main.rs:379:72: 379:73
        switchInt(move _4) -> [false: bb15, otherwise: bb8]; // scope 0 at src/main.rs:379:12: 379:73
    }

    bb4: {
        StorageDead(_8);                 // scope 0 at src/main.rs:379:24: 379:25
        _6 = _7;                         // scope 0 at src/main.rs:379:12: 379:25
        StorageLive(_9);                 // scope 0 at src/main.rs:379:29: 379:40
        _112 = const <Push as tokio_service::Service>::call::promoted[6]; // scope 0 at src/main.rs:379:29: 379:40
                                         // ty::Const
                                         // + ty: &hyper::Method
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[6]))
                                         // mir::Constant
                                         // + span: src/main.rs:379:29: 379:40
                                         // + literal: Const { ty: &hyper::Method, val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[6]) }) }
        _9 = _112;                       // scope 0 at src/main.rs:379:29: 379:40
        _5 = <hyper::Method as PartialEq>::ne(move _6, move _9) -> [return: bb5, unwind: bb58]; // scope 0 at src/main.rs:379:12: 379:40
                                         // mir::Constant
                                         // + span: src/main.rs:379:12: 379:40
                                         // + literal: Const { ty: for<'r, 's> fn(&'r hyper::Method, &'s hyper::Method) -> bool {<hyper::Method as std::cmp::PartialEq>::ne}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_9);                 // scope 0 at src/main.rs:379:39: 379:40
        StorageDead(_6);                 // scope 0 at src/main.rs:379:39: 379:40
        switchInt(move _5) -> [false: bb1, otherwise: bb2]; // scope 0 at src/main.rs:379:12: 379:73
    }

    bb6: {
        StorageDead(_13);                // scope 0 at src/main.rs:379:56: 379:57
        _11 = _12;                       // scope 0 at src/main.rs:379:44: 379:57
        StorageLive(_14);                // scope 0 at src/main.rs:379:61: 379:73
        _111 = const <Push as tokio_service::Service>::call::promoted[5]; // scope 0 at src/main.rs:379:61: 379:73
                                         // ty::Const
                                         // + ty: &hyper::Method
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[5]))
                                         // mir::Constant
                                         // + span: src/main.rs:379:61: 379:73
                                         // + literal: Const { ty: &hyper::Method, val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[5]) }) }
        _14 = _111;                      // scope 0 at src/main.rs:379:61: 379:73
        _10 = <hyper::Method as PartialEq>::ne(move _11, move _14) -> [return: bb7, unwind: bb58]; // scope 0 at src/main.rs:379:44: 379:73
                                         // mir::Constant
                                         // + span: src/main.rs:379:44: 379:73
                                         // + literal: Const { ty: for<'r, 's> fn(&'r hyper::Method, &'s hyper::Method) -> bool {<hyper::Method as std::cmp::PartialEq>::ne}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_14);                // scope 0 at src/main.rs:379:72: 379:73
        StorageDead(_12);                // scope 0 at src/main.rs:379:72: 379:73
        StorageDead(_11);                // scope 0 at src/main.rs:379:72: 379:73
        _4 = move _10;                   // scope 0 at src/main.rs:379:12: 379:73
        goto -> bb3;                     // scope 0 at src/main.rs:379:12: 379:73
    }

    bb8: {
        StorageLive(_15);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_16);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_17);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_18);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_19);                // scope 0 at src/main.rs:380:39: 380:51
        StorageLive(_20);                // scope 0 at src/main.rs:380:39: 380:51
        StorageLive(_21);                // scope 0 at src/main.rs:380:39: 380:42
        _21 = &_2;                       // scope 0 at src/main.rs:380:39: 380:42
        _20 = hyper::Request::method(move _21) -> [return: bb9, unwind: bb58]; // scope 0 at src/main.rs:380:39: 380:51
                                         // mir::Constant
                                         // + span: src/main.rs:380:43: 380:49
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Method {hyper::Request::method}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_21);                // scope 0 at src/main.rs:380:50: 380:51
        _19 = &_20;                      // scope 0 at src/main.rs:380:39: 380:51
        (_18.0: &&hyper::Method) = move _19; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_19);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_22);                // scope 0 at src/main.rs:380:39: 380:51
        _22 = (_18.0: &&hyper::Method);  // scope 0 at src/main.rs:380:39: 380:51
        StorageLive(_23);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_24);                // scope 1 at src/main.rs:380:39: 380:51
        _24 = _22;                       // scope 1 at src/main.rs:380:39: 380:51
        StorageLive(_25);                // scope 1 at src/main.rs:380:39: 380:51
        _25 = <&hyper::Method as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &hyper::Method, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at src/main.rs:380:39: 380:51
                                         // mir::Constant
                                         // + span: src/main.rs:380:39: 380:51
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &hyper::Method, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&hyper::Method as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _23 = ArgumentV1::new::<&hyper::Method>(move _24, move _25) -> [return: bb10, unwind: bb58]; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b &hyper::Method, for<'r, 's, 't0> fn(&'r &hyper::Method, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&hyper::Method>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_25);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_24);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _17 = [move _23];                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_23);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_22);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_26);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _26 = &_17;                      // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_27);                // scope 3 at src/main.rs:380:22: 380:37
        StorageLive(_28);                // scope 3 at src/main.rs:380:22: 380:37
        StorageLive(_29);                // scope 3 at src/main.rs:380:22: 380:37
        _110 = const <Push as tokio_service::Service>::call::promoted[4]; // scope 3 at src/main.rs:380:22: 380:37
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[4]))
                                         // mir::Constant
                                         // + span: src/main.rs:380:22: 380:37
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[4]) }) }
        _29 = _110;                      // scope 3 at src/main.rs:380:22: 380:37
        _28 = _29;                       // scope 3 at src/main.rs:380:22: 380:37
        _27 = move _28 as &[&str] (Pointer(Unsize)); // scope 3 at src/main.rs:380:22: 380:37
        StorageDead(_28);                // scope 3 at src/main.rs:380:36: 380:37
        StorageLive(_30);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_31);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _31 = _26;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _30 = move _31 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_31);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _16 = Arguments::new_v1(move _27, move _30) -> [return: bb11, unwind: bb58]; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_30);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_27);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_29);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_26);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _15 = _print(move _16) -> [return: bb12, unwind: bb58]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_16);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_20);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_18);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_17);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_15);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_32);                // scope 0 at src/main.rs:381:20: 381:55
        StorageLive(_33);                // scope 0 at src/main.rs:381:29: 381:54
        StorageLive(_34);                // scope 0 at src/main.rs:381:33: 381:53
        discriminant(_34) = 0;           // scope 0 at src/main.rs:381:33: 381:53
        _33 = err::<hyper::Response, hyper::Error>(move _34) -> [return: bb13, unwind: bb58]; // scope 0 at src/main.rs:381:29: 381:54
                                         // mir::Constant
                                         // + span: src/main.rs:381:29: 381:32
                                         // + literal: Const { ty: fn(hyper::Error) -> futures::Done<hyper::Response, hyper::Error> {futures::err::<hyper::Response, hyper::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_34);                // scope 0 at src/main.rs:381:53: 381:54
        _32 = Box::<FutureResult<hyper::Response, hyper::Error>>::new(move _33) -> [return: bb14, unwind: bb58]; // scope 0 at src/main.rs:381:20: 381:55
                                         // mir::Constant
                                         // + span: src/main.rs:381:20: 381:28
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(futures::Done<hyper::Response, hyper::Error>) -> std::boxed::Box<futures::Done<hyper::Response, hyper::Error>> {std::boxed::Box::<futures::Done<hyper::Response, hyper::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        _0 = move _32 as std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> (Pointer(Unsize)); // scope 0 at src/main.rs:381:20: 381:55
        StorageDead(_33);                // scope 0 at src/main.rs:381:54: 381:55
        StorageDead(_32);                // scope 0 at src/main.rs:381:54: 381:55
        StorageDead(_4);                 // scope 0 at src/main.rs:382:9: 382:10
        goto -> bb52;                    // scope 0 at no-location
    }

    bb15: {
        StorageDead(_4);                 // scope 0 at src/main.rs:382:9: 382:10
        StorageLive(_35);                // scope 0 at src/main.rs:383:12: 383:34
        StorageLive(_36);                // scope 0 at src/main.rs:383:12: 383:28
        StorageLive(_37);                // scope 0 at src/main.rs:383:12: 383:28
        StorageLive(_38);                // scope 0 at src/main.rs:383:12: 383:21
        StorageLive(_39);                // scope 0 at src/main.rs:383:12: 383:21
        StorageLive(_40);                // scope 0 at src/main.rs:383:12: 383:15
        _40 = &_2;                       // scope 0 at src/main.rs:383:12: 383:15
        _39 = hyper::Request::uri(move _40) -> [return: bb16, unwind: bb58]; // scope 0 at src/main.rs:383:12: 383:21
                                         // mir::Constant
                                         // + span: src/main.rs:383:16: 383:19
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Uri {hyper::Request::uri}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        _38 = _39;                       // scope 0 at src/main.rs:383:12: 383:21
        StorageDead(_40);                // scope 0 at src/main.rs:383:20: 383:21
        _37 = hyper::Uri::path(move _38) -> [return: bb17, unwind: bb58]; // scope 0 at src/main.rs:383:12: 383:28
                                         // mir::Constant
                                         // + span: src/main.rs:383:22: 383:26
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Uri) -> &'r str {hyper::Uri::path}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        _36 = _37;                       // scope 0 at src/main.rs:383:12: 383:28
        StorageDead(_38);                // scope 0 at src/main.rs:383:27: 383:28
        _35 = core::str::<impl str>::len(move _36) -> [return: bb18, unwind: bb58]; // scope 0 at src/main.rs:383:12: 383:34
                                         // mir::Constant
                                         // + span: src/main.rs:383:29: 383:32
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> usize {core::str::<impl str>::len}, val: Value(Scalar(<ZST>)) }
    }

    bb18: {
        StorageDead(_36);                // scope 0 at src/main.rs:383:33: 383:34
        StorageDead(_39);                // scope 0 at src/main.rs:383:38: 383:39
        StorageDead(_37);                // scope 0 at src/main.rs:383:38: 383:39
        switchInt(move _35) -> [0_usize: bb19, otherwise: bb24]; // scope 0 at src/main.rs:383:12: 383:39
    }

    bb19: {
        StorageDead(_35);                // scope 0 at src/main.rs:383:12: 383:39
        StorageLive(_41);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_42);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_43);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _109 = const <Push as tokio_service::Service>::call::promoted[3]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // ty::Const
                                         // + ty: &[std::fmt::ArgumentV1; 0]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[3]))
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + literal: Const { ty: &[std::fmt::ArgumentV1; 0], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[3]) }) }
        _43 = _109;                      // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_44);                // scope 5 at src/main.rs:384:22: 384:38
        StorageLive(_45);                // scope 5 at src/main.rs:384:22: 384:38
        StorageLive(_46);                // scope 5 at src/main.rs:384:22: 384:38
        _108 = const <Push as tokio_service::Service>::call::promoted[2]; // scope 5 at src/main.rs:384:22: 384:38
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[2]))
                                         // mir::Constant
                                         // + span: src/main.rs:384:22: 384:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[2]) }) }
        _46 = _108;                      // scope 5 at src/main.rs:384:22: 384:38
        _45 = _46;                       // scope 5 at src/main.rs:384:22: 384:38
        _44 = move _45 as &[&str] (Pointer(Unsize)); // scope 5 at src/main.rs:384:22: 384:38
        StorageDead(_45);                // scope 5 at src/main.rs:384:37: 384:38
        StorageLive(_47);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_48);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _48 = _43;                       // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _47 = move _48 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_48);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _42 = Arguments::new_v1(move _44, move _47) -> [return: bb20, unwind: bb58]; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_47);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_44);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_46);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_43);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _41 = _print(move _42) -> [return: bb21, unwind: bb58]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_42);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_41);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_49);                // scope 0 at src/main.rs:385:20: 385:59
        StorageLive(_50);                // scope 0 at src/main.rs:385:29: 385:58
        StorageLive(_51);                // scope 0 at src/main.rs:385:33: 385:57
        discriminant(_51) = 5;           // scope 0 at src/main.rs:385:33: 385:57
        _50 = err::<hyper::Response, hyper::Error>(move _51) -> [return: bb22, unwind: bb58]; // scope 0 at src/main.rs:385:29: 385:58
                                         // mir::Constant
                                         // + span: src/main.rs:385:29: 385:32
                                         // + literal: Const { ty: fn(hyper::Error) -> futures::Done<hyper::Response, hyper::Error> {futures::err::<hyper::Response, hyper::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        StorageDead(_51);                // scope 0 at src/main.rs:385:57: 385:58
        _49 = Box::<FutureResult<hyper::Response, hyper::Error>>::new(move _50) -> [return: bb23, unwind: bb58]; // scope 0 at src/main.rs:385:20: 385:59
                                         // mir::Constant
                                         // + span: src/main.rs:385:20: 385:28
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(futures::Done<hyper::Response, hyper::Error>) -> std::boxed::Box<futures::Done<hyper::Response, hyper::Error>> {std::boxed::Box::<futures::Done<hyper::Response, hyper::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb23: {
        _0 = move _49 as std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> (Pointer(Unsize)); // scope 0 at src/main.rs:385:20: 385:59
        StorageDead(_50);                // scope 0 at src/main.rs:385:58: 385:59
        StorageDead(_49);                // scope 0 at src/main.rs:385:58: 385:59
        goto -> bb52;                    // scope 0 at no-location
    }

    bb24: {
        StorageDead(_35);                // scope 0 at src/main.rs:383:12: 383:39
        StorageLive(_52);                // scope 0 at src/main.rs:387:13: 387:23
        StorageLive(_53);                // scope 0 at src/main.rs:387:32: 387:69
        StorageLive(_54);                // scope 0 at src/main.rs:387:32: 387:53
        StorageLive(_55);                // scope 0 at src/main.rs:387:32: 387:53
        StorageLive(_56);                // scope 0 at src/main.rs:387:32: 387:48
        StorageLive(_57);                // scope 0 at src/main.rs:387:32: 387:48
        StorageLive(_58);                // scope 0 at src/main.rs:387:32: 387:41
        StorageLive(_59);                // scope 0 at src/main.rs:387:32: 387:41
        StorageLive(_60);                // scope 0 at src/main.rs:387:32: 387:35
        _60 = &_2;                       // scope 0 at src/main.rs:387:32: 387:35
        _59 = hyper::Request::uri(move _60) -> [return: bb25, unwind: bb58]; // scope 0 at src/main.rs:387:32: 387:41
                                         // mir::Constant
                                         // + span: src/main.rs:387:36: 387:39
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Uri {hyper::Request::uri}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        _58 = _59;                       // scope 0 at src/main.rs:387:32: 387:41
        StorageDead(_60);                // scope 0 at src/main.rs:387:40: 387:41
        _57 = hyper::Uri::path(move _58) -> [return: bb26, unwind: bb58]; // scope 0 at src/main.rs:387:32: 387:48
                                         // mir::Constant
                                         // + span: src/main.rs:387:42: 387:46
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Uri) -> &'r str {hyper::Uri::path}, val: Value(Scalar(<ZST>)) }
    }

    bb26: {
        _56 = _57;                       // scope 0 at src/main.rs:387:32: 387:48
        StorageDead(_58);                // scope 0 at src/main.rs:387:47: 387:48
        StorageLive(_61);                // scope 0 at src/main.rs:387:49: 387:52
        (_61.0: usize) = const 1_usize;  // scope 0 at src/main.rs:387:49: 387:52
        _55 = <str as std::ops::Index<RangeFrom<usize>>>::index(move _56, move _61) -> [return: bb27, unwind: bb58]; // scope 0 at src/main.rs:387:32: 387:53
                                         // mir::Constant
                                         // + span: src/main.rs:387:32: 387:53
                                         // + literal: Const { ty: for<'r> fn(&'r str, std::ops::RangeFrom<usize>) -> &'r <str as std::ops::Index<std::ops::RangeFrom<usize>>>::Output {<str as std::ops::Index<std::ops::RangeFrom<usize>>>::index}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        _54 = _55;                       // scope 0 at src/main.rs:387:32: 387:53
        StorageDead(_61);                // scope 0 at src/main.rs:387:52: 387:53
        StorageDead(_56);                // scope 0 at src/main.rs:387:52: 387:53
        _53 = core::str::<impl str>::parse::<Uuid>(move _54) -> [return: bb28, unwind: bb58]; // scope 0 at src/main.rs:387:32: 387:69
                                         // mir::Constant
                                         // + span: src/main.rs:387:54: 387:59
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> std::result::Result<uuid::Uuid, <uuid::Uuid as std::str::FromStr>::Err> {core::str::<impl str>::parse::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb28: {
        StorageDead(_54);                // scope 0 at src/main.rs:387:68: 387:69
        _62 = discriminant(_53);         // scope 0 at src/main.rs:387:32: 387:69
        switchInt(move _62) -> [0_isize: bb31, 1_isize: bb29, otherwise: bb30]; // scope 0 at src/main.rs:387:26: 387:69
    }

    bb29: {
        StorageLive(_64);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_65);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_66);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_67);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_68);                // scope 0 at src/main.rs:390:46: 390:62
        StorageLive(_69);                // scope 0 at src/main.rs:390:46: 390:62
        StorageLive(_70);                // scope 0 at src/main.rs:390:46: 390:55
        StorageLive(_71);                // scope 0 at src/main.rs:390:46: 390:55
        StorageLive(_72);                // scope 0 at src/main.rs:390:46: 390:49
        _72 = &_2;                       // scope 0 at src/main.rs:390:46: 390:49
        _71 = hyper::Request::uri(move _72) -> [return: bb32, unwind: bb58]; // scope 0 at src/main.rs:390:46: 390:55
                                         // mir::Constant
                                         // + span: src/main.rs:390:50: 390:53
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Uri {hyper::Request::uri}, val: Value(Scalar(<ZST>)) }
    }

    bb30: {
        unreachable;                     // scope 0 at src/main.rs:387:32: 387:69
    }

    bb31: {
        StorageLive(_63);                // scope 0 at src/main.rs:388:16: 388:18
        _63 = ((_53 as Ok).0: uuid::Uuid); // scope 0 at src/main.rs:388:16: 388:18
        _52 = _63;                       // scope 7 at src/main.rs:388:23: 388:25
        StorageDead(_63);                // scope 0 at src/main.rs:388:24: 388:25
        StorageDead(_59);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_57);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_55);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_53);                // scope 0 at src/main.rs:393:10: 393:11
        StorageLive(_86);                // scope 6 at src/main.rs:394:13: 394:25
        StorageLive(_87);                // scope 6 at src/main.rs:394:34: 394:68
        StorageLive(_88);                // scope 6 at src/main.rs:394:34: 394:47
        StorageLive(_89);                // scope 6 at src/main.rs:394:34: 394:47
        StorageLive(_90);                // scope 6 at src/main.rs:394:34: 394:37
        _90 = &_2;                       // scope 6 at src/main.rs:394:34: 394:37
        _89 = hyper::Request::headers(move _90) -> [return: bb39, unwind: bb58]; // scope 6 at src/main.rs:394:34: 394:47
                                         // mir::Constant
                                         // + span: src/main.rs:394:38: 394:45
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Request) -> &'r hyper::Headers {hyper::Request::headers}, val: Value(Scalar(<ZST>)) }
    }

    bb32: {
        _70 = _71;                       // scope 0 at src/main.rs:390:46: 390:55
        StorageDead(_72);                // scope 0 at src/main.rs:390:54: 390:55
        _69 = hyper::Uri::path(move _70) -> [return: bb33, unwind: bb58]; // scope 0 at src/main.rs:390:46: 390:62
                                         // mir::Constant
                                         // + span: src/main.rs:390:56: 390:60
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Uri) -> &'r str {hyper::Uri::path}, val: Value(Scalar(<ZST>)) }
    }

    bb33: {
        StorageDead(_70);                // scope 0 at src/main.rs:390:61: 390:62
        _68 = &_69;                      // scope 0 at src/main.rs:390:46: 390:62
        (_67.0: &&str) = move _68;       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_68);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_73);                // scope 0 at src/main.rs:390:46: 390:62
        _73 = (_67.0: &&str);            // scope 0 at src/main.rs:390:46: 390:62
        StorageLive(_74);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_75);                // scope 8 at src/main.rs:390:46: 390:62
        _75 = _73;                       // scope 8 at src/main.rs:390:46: 390:62
        StorageLive(_76);                // scope 8 at src/main.rs:390:46: 390:62
        _76 = <&str as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &str, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 8 at src/main.rs:390:46: 390:62
                                         // mir::Constant
                                         // + span: src/main.rs:390:46: 390:62
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &str, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&str as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _74 = ArgumentV1::new::<&str>(move _75, move _76) -> [return: bb34, unwind: bb58]; // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b &str, for<'r, 's, 't0> fn(&'r &str, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&str>}, val: Value(Scalar(<ZST>)) }
    }

    bb34: {
        StorageDead(_76);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_75);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _66 = [move _74];                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_74);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_73);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_77);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _77 = &_66;                      // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_78);                // scope 10 at src/main.rs:390:26: 390:44
        StorageLive(_79);                // scope 10 at src/main.rs:390:26: 390:44
        StorageLive(_80);                // scope 10 at src/main.rs:390:26: 390:44
        _107 = const <Push as tokio_service::Service>::call::promoted[1]; // scope 10 at src/main.rs:390:26: 390:44
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[1]))
                                         // mir::Constant
                                         // + span: src/main.rs:390:26: 390:44
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[1]) }) }
        _80 = _107;                      // scope 10 at src/main.rs:390:26: 390:44
        _79 = _80;                       // scope 10 at src/main.rs:390:26: 390:44
        _78 = move _79 as &[&str] (Pointer(Unsize)); // scope 10 at src/main.rs:390:26: 390:44
        StorageDead(_79);                // scope 10 at src/main.rs:390:43: 390:44
        StorageLive(_81);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_82);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _82 = _77;                       // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _81 = move _82 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_82);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _65 = Arguments::new_v1(move _78, move _81) -> [return: bb35, unwind: bb58]; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb35: {
        StorageDead(_81);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_78);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_80);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_77);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _64 = _print(move _65) -> [return: bb36, unwind: bb58]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb36: {
        StorageDead(_65);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_71);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_69);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_67);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_66);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_64);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_83);                // scope 0 at src/main.rs:391:24: 391:59
        StorageLive(_84);                // scope 0 at src/main.rs:391:33: 391:58
        StorageLive(_85);                // scope 0 at src/main.rs:391:37: 391:57
        discriminant(_85) = 6;           // scope 0 at src/main.rs:391:37: 391:57
        _84 = err::<hyper::Response, hyper::Error>(move _85) -> [return: bb37, unwind: bb58]; // scope 0 at src/main.rs:391:33: 391:58
                                         // mir::Constant
                                         // + span: src/main.rs:391:33: 391:36
                                         // + literal: Const { ty: fn(hyper::Error) -> futures::Done<hyper::Response, hyper::Error> {futures::err::<hyper::Response, hyper::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb37: {
        StorageDead(_85);                // scope 0 at src/main.rs:391:57: 391:58
        _83 = Box::<FutureResult<hyper::Response, hyper::Error>>::new(move _84) -> [return: bb38, unwind: bb58]; // scope 0 at src/main.rs:391:24: 391:59
                                         // mir::Constant
                                         // + span: src/main.rs:391:24: 391:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(futures::Done<hyper::Response, hyper::Error>) -> std::boxed::Box<futures::Done<hyper::Response, hyper::Error>> {std::boxed::Box::<futures::Done<hyper::Response, hyper::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb38: {
        _0 = move _83 as std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> (Pointer(Unsize)); // scope 0 at src/main.rs:391:24: 391:59
        StorageDead(_84);                // scope 0 at src/main.rs:391:58: 391:59
        StorageDead(_83);                // scope 0 at src/main.rs:391:58: 391:59
        StorageDead(_59);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_57);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_55);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_53);                // scope 0 at src/main.rs:393:10: 393:11
        StorageDead(_52);                // scope 0 at src/main.rs:445:5: 445:6
        goto -> bb52;                    // scope 0 at no-location
    }

    bb39: {
        _88 = _89;                       // scope 6 at src/main.rs:394:34: 394:47
        StorageDead(_90);                // scope 6 at src/main.rs:394:46: 394:47
        _87 = hyper::Headers::get::<ContentType>(move _88) -> [return: bb40, unwind: bb58]; // scope 6 at src/main.rs:394:34: 394:68
                                         // mir::Constant
                                         // + span: src/main.rs:394:48: 394:51
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Headers) -> std::option::Option<&'r hyper::header::ContentType> {hyper::Headers::get::<hyper::header::ContentType>}, val: Value(Scalar(<ZST>)) }
    }

    bb40: {
        StorageDead(_88);                // scope 6 at src/main.rs:394:67: 394:68
        _91 = discriminant(_87);         // scope 6 at src/main.rs:394:34: 394:68
        switchInt(move _91) -> [0_isize: bb41, 1_isize: bb43, otherwise: bb42]; // scope 6 at src/main.rs:394:28: 394:68
    }

    bb41: {
        _86 = const false;               // scope 6 at src/main.rs:396:21: 396:26
        goto -> bb46;                    // scope 6 at src/main.rs:396:21: 396:26
    }

    bb42: {
        unreachable;                     // scope 6 at src/main.rs:394:34: 394:68
    }

    bb43: {
        StorageLive(_92);                // scope 6 at src/main.rs:395:18: 395:24
        _92 = ((_87 as Some).0: &hyper::header::ContentType); // scope 6 at src/main.rs:395:18: 395:24
        StorageLive(_93);                // scope 12 at src/main.rs:395:29: 395:37
        StorageLive(_94);                // scope 12 at src/main.rs:395:29: 395:37
        StorageLive(_95);                // scope 12 at src/main.rs:395:30: 395:37
        _95 = _92;                       // scope 12 at src/main.rs:395:30: 395:37
        _94 = <ContentType as Deref>::deref(move _95) -> [return: bb44, unwind: bb58]; // scope 12 at src/main.rs:395:29: 395:37
                                         // mir::Constant
                                         // + span: src/main.rs:395:29: 395:37
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::header::ContentType) -> &'r <hyper::header::ContentType as std::ops::Deref>::Target {<hyper::header::ContentType as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb44: {
        _93 = _94;                       // scope 12 at src/main.rs:395:29: 395:37
        StorageDead(_95);                // scope 12 at src/main.rs:395:36: 395:37
        StorageLive(_96);                // scope 12 at src/main.rs:395:41: 395:76
        _106 = const <Push as tokio_service::Service>::call::promoted[0]; // scope 12 at src/main.rs:395:41: 395:76
                                         // ty::Const
                                         // + ty: &&str
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:395:41: 395:76
                                         // + literal: Const { ty: &&str, val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:165 ~ webpush_server[6b79]::{impl#1}::call), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _96 = _106;                      // scope 12 at src/main.rs:395:41: 395:76
        _86 = <Mime as PartialEq<&str>>::eq(move _93, move _96) -> [return: bb45, unwind: bb58]; // scope 12 at src/main.rs:395:29: 395:76
                                         // mir::Constant
                                         // + span: src/main.rs:395:29: 395:76
                                         // + literal: Const { ty: for<'r, 's> fn(&'r hyper::mime::Mime, &'s &str) -> bool {<hyper::mime::Mime as std::cmp::PartialEq<&str>>::eq}, val: Value(Scalar(<ZST>)) }
    }

    bb45: {
        StorageDead(_96);                // scope 12 at src/main.rs:395:75: 395:76
        StorageDead(_94);                // scope 12 at src/main.rs:395:75: 395:76
        StorageDead(_93);                // scope 12 at src/main.rs:395:75: 395:76
        StorageDead(_92);                // scope 6 at src/main.rs:395:75: 395:76
        goto -> bb46;                    // scope 6 at src/main.rs:395:75: 395:76
    }

    bb46: {
        StorageDead(_89);                // scope 6 at src/main.rs:397:10: 397:11
        StorageDead(_87);                // scope 6 at src/main.rs:397:10: 397:11
        StorageLive(_97);                // scope 11 at src/main.rs:399:13: 399:17
        StorageLive(_98);                // scope 11 at src/main.rs:399:20: 399:30
        StorageLive(_99);                // scope 11 at src/main.rs:399:20: 399:23
        _114 = const false;              // scope 11 at src/main.rs:399:20: 399:23
        _99 = move _2;                   // scope 11 at src/main.rs:399:20: 399:23
        _98 = hyper::Request::body(move _99) -> [return: bb47, unwind: bb58]; // scope 11 at src/main.rs:399:20: 399:30
                                         // mir::Constant
                                         // + span: src/main.rs:399:24: 399:28
                                         // + literal: Const { ty: fn(hyper::Request) -> hyper::Body {hyper::Request::body}, val: Value(Scalar(<ZST>)) }
    }

    bb47: {
        StorageDead(_99);                // scope 11 at src/main.rs:399:29: 399:30
        _97 = <Body as futures::Stream>::concat2(move _98) -> [return: bb48, unwind: bb58]; // scope 11 at src/main.rs:399:20: 399:40
                                         // mir::Constant
                                         // + span: src/main.rs:399:31: 399:38
                                         // + literal: Const { ty: fn(hyper::Body) -> futures::stream::Concat2<hyper::Body> {<hyper::Body as futures::Stream>::concat2}, val: Value(Scalar(<ZST>)) }
    }

    bb48: {
        _113 = const true;               // scope 11 at src/main.rs:399:39: 399:40
        StorageDead(_98);                // scope 11 at src/main.rs:399:39: 399:40
        StorageLive(_100);               // scope 13 at src/main.rs:400:13: 400:15
        StorageLive(_101);               // scope 13 at src/main.rs:400:18: 400:24
        _101 = &((*_1).0: std::rc::Rc<Context>); // scope 13 at src/main.rs:400:18: 400:24
        _100 = <Rc<Context> as Clone>::clone(move _101) -> [return: bb49, unwind: bb56]; // scope 13 at src/main.rs:400:18: 400:32
                                         // mir::Constant
                                         // + span: src/main.rs:400:25: 400:30
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb49: {
        StorageDead(_101);               // scope 13 at src/main.rs:400:31: 400:32
        StorageLive(_102);               // scope 14 at src/main.rs:401:9: 444:12
        StorageLive(_103);               // scope 14 at src/main.rs:401:18: 444:11
        StorageLive(_104);               // scope 14 at src/main.rs:401:18: 401:22
        _113 = const false;              // scope 14 at src/main.rs:401:18: 401:22
        _104 = move _97;                 // scope 14 at src/main.rs:401:18: 401:22
        StorageLive(_105);               // scope 14 at src/main.rs:401:32: 444:10
        (_105.0: bool) = _86;            // scope 14 at src/main.rs:401:32: 444:10
        (_105.1: std::rc::Rc<Context>) = move _100; // scope 14 at src/main.rs:401:32: 444:10
        (_105.2: uuid::Uuid) = _52;      // scope 14 at src/main.rs:401:32: 444:10
        _103 = <Concat2<Body> as futures::Future>::and_then::<[closure@src/main.rs:401:32: 444:10], std::result::Result<hyper::Response, hyper::Error>>(move _104, move _105) -> [return: bb50, unwind: bb56]; // scope 14 at src/main.rs:401:18: 444:11
                                         // mir::Constant
                                         // + span: src/main.rs:401:23: 401:31
                                         // + literal: Const { ty: fn(futures::stream::Concat2<hyper::Body>, [closure@src/main.rs:401:32: 444:10]) -> futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]> {<futures::stream::Concat2<hyper::Body> as futures::Future>::and_then::<[closure@src/main.rs:401:32: 444:10], std::result::Result<hyper::Response, hyper::Error>>}, val: Value(Scalar(<ZST>)) }
    }

    bb50: {
        StorageDead(_105);               // scope 14 at src/main.rs:444:10: 444:11
        StorageDead(_104);               // scope 14 at src/main.rs:444:10: 444:11
        _102 = Box::<futures::AndThen<Concat2<Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>>::new(move _103) -> [return: bb51, unwind: bb56]; // scope 14 at src/main.rs:401:9: 444:12
                                         // mir::Constant
                                         // + span: src/main.rs:401:9: 401:17
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>) -> std::boxed::Box<futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>> {std::boxed::Box::<futures::AndThen<futures::stream::Concat2<hyper::Body>, std::result::Result<hyper::Response, hyper::Error>, [closure@src/main.rs:401:32: 444:10]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb51: {
        _3 = move _102 as std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> (Pointer(Unsize)); // scope 14 at src/main.rs:401:9: 444:12
        StorageDead(_103);               // scope 14 at src/main.rs:444:11: 444:12
        StorageDead(_102);               // scope 14 at src/main.rs:444:11: 444:12
        StorageDead(_100);               // scope 13 at src/main.rs:445:5: 445:6
        _113 = const false;              // scope 11 at src/main.rs:445:5: 445:6
        StorageDead(_97);                // scope 11 at src/main.rs:445:5: 445:6
        StorageDead(_86);                // scope 6 at src/main.rs:445:5: 445:6
        StorageDead(_52);                // scope 0 at src/main.rs:445:5: 445:6
        _0 = move _3 as std::boxed::Box<dyn futures::Future<Error = hyper::Error, Item = hyper::Response>> (Pointer(Unsize)); // scope 0 at src/main.rs:401:9: 444:12
        StorageDead(_3);                 // scope 0 at src/main.rs:445:5: 445:6
        goto -> bb53;                    // scope 0 at src/main.rs:445:5: 445:6
    }

    bb52: {
        StorageDead(_3);                 // scope 0 at src/main.rs:445:5: 445:6
        drop(_2) -> bb53;                // scope 0 at src/main.rs:445:5: 445:6
    }

    bb53: {
        return;                          // scope 0 at src/main.rs:445:6: 445:6
    }

    bb54 (cleanup): {
        resume;                          // scope 0 at src/main.rs:376:5: 445:6
    }

    bb55 (cleanup): {
        drop(_97) -> bb58;               // scope 11 at src/main.rs:445:5: 445:6
    }

    bb56 (cleanup): {
        switchInt(_113) -> [false: bb58, otherwise: bb55]; // scope 11 at src/main.rs:445:5: 445:6
    }

    bb57 (cleanup): {
        drop(_2) -> bb54;                // scope 0 at src/main.rs:445:5: 445:6
    }

    bb58 (cleanup): {
        switchInt(_114) -> [false: bb54, otherwise: bb57]; // scope 0 at src/main.rs:445:5: 445:6
    }
}

promoted[0] in <impl at src/main.rs:370:1: 446:2>::call: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at src/main.rs:395:41: 395:76
    let mut _1: &str;                    // in scope 0 at src/main.rs:395:41: 395:76

    bb0: {
        _1 = const "application/x-www-form-urlencoded"; // scope 0 at src/main.rs:395:41: 395:76
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8589934591], len: Size { raw: 33 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 33 })
                                         // mir::Constant
                                         // + span: src/main.rs:395:41: 395:76
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8589934591], len: Size { raw: 33 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 33 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:395:41: 395:76
        return;                          // scope 0 at src/main.rs:395:41: 395:76
    }
}

promoted[1] in <impl at src/main.rs:370:1: 446:2>::call: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:390:26: 390:44
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:390:26: 390:44

    bb0: {
        _1 = [const "uri not uuid: ", const "\n"]; // scope 0 at src/main.rs:390:26: 390:44
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 114, 105, 32, 110, 111, 116, 32, 117, 117, 105, 100, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 })
                                         // mir::Constant
                                         // + span: src/main.rs:390:26: 390:44
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 114, 105, 32, 110, 111, 116, 32, 117, 117, 105, 100, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:390:26: 390:44
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:390:26: 390:44
        return;                          // scope 0 at src/main.rs:390:26: 390:44
    }
}

promoted[2] in <impl at src/main.rs:370:1: 446:2>::call: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:384:22: 384:38
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:384:22: 384:38

    bb0: {
        _1 = [const "empty uri path\n"]; // scope 0 at src/main.rs:384:22: 384:38
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [101, 109, 112, 116, 121, 32, 117, 114, 105, 32, 112, 97, 116, 104, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [32767], len: Size { raw: 15 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 15 })
                                         // mir::Constant
                                         // + span: src/main.rs:384:22: 384:38
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [101, 109, 112, 116, 121, 32, 117, 114, 105, 32, 112, 97, 116, 104, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [32767], len: Size { raw: 15 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 15 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:384:22: 384:38
        return;                          // scope 0 at src/main.rs:384:22: 384:38
    }
}

promoted[3] in <impl at src/main.rs:370:1: 446:2>::call: &[ArgumentV1; 0] = {
    let mut _0: &[std::fmt::ArgumentV1; 0]; // return place in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _1: [std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _0 = &_1;                        // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        return;                          // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    }
}

promoted[4] in <impl at src/main.rs:370:1: 446:2>::call: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:380:22: 380:37
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:380:22: 380:37

    bb0: {
        _1 = [const "not a PUT: ", const "\n"]; // scope 0 at src/main.rs:380:22: 380:37
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [110, 111, 116, 32, 97, 32, 80, 85, 84, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:380:22: 380:37
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [110, 111, 116, 32, 97, 32, 80, 85, 84, 58, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:380:22: 380:37
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:380:22: 380:37
        return;                          // scope 0 at src/main.rs:380:22: 380:37
    }
}

promoted[5] in <impl at src/main.rs:370:1: 446:2>::call: &hyper::Method = {
    let mut _0: &hyper::Method;          // return place in scope 0 at src/main.rs:379:61: 379:73
    let mut _1: hyper::Method;           // in scope 0 at src/main.rs:379:61: 379:73

    bb0: {
        discriminant(_1) = 2;            // scope 0 at src/main.rs:379:61: 379:73
        _0 = &_1;                        // scope 0 at src/main.rs:379:61: 379:73
        return;                          // scope 0 at src/main.rs:379:61: 379:73
    }
}

promoted[6] in <impl at src/main.rs:370:1: 446:2>::call: &hyper::Method = {
    let mut _0: &hyper::Method;          // return place in scope 0 at src/main.rs:379:29: 379:40
    let mut _1: hyper::Method;           // in scope 0 at src/main.rs:379:29: 379:40

    bb0: {
        discriminant(_1) = 3;            // scope 0 at src/main.rs:379:29: 379:40
        _0 = &_1;                        // scope 0 at src/main.rs:379:29: 379:40
        return;                          // scope 0 at src/main.rs:379:29: 379:40
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:220:9: 226:10>::deref(_1: &errors::Error) -> &errors::ErrorKind {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:223:22: 223:27
    let mut _0: &errors::ErrorKind;      // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:224:17: 224:24

    bb0: {
        _0 = &((*_1).0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:224:17: 224:24
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:225:14: 225:14
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &[u8]) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const 9_usize;              // scope 0 at src/main.rs:54:10: 54:21
        _5 = Eq(move _3, move _4);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _5) -> [false: bb10, otherwise: bb1]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb1: {
        switchInt((*_2)[0 of 9]) -> [99_u8: bb2, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        switchInt((*_2)[1 of 9]) -> [104_u8: bb3, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb3: {
        switchInt((*_2)[2 of 9]) -> [97_u8: bb4, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        switchInt((*_2)[3 of 9]) -> [110_u8: bb5, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb5: {
        switchInt((*_2)[4 of 9]) -> [110_u8: bb6, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb6: {
        switchInt((*_2)[5 of 9]) -> [101_u8: bb7, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb7: {
        switchInt((*_2)[6 of 9]) -> [108_u8: bb8, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb8: {
        switchInt((*_2)[7 of 9]) -> [73_u8: bb9, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb9: {
        switchInt((*_2)[8 of 9]) -> [68_u8: bb11, otherwise: bb10]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb10: {
        StorageLive(_7);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_7) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _7; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_7);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb12;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb11: {
        StorageLive(_6);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_6) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _6; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_6);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb12;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb12: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn timeout(_1: F, _2: std::time::Duration, _3: &Handle) -> Box<dyn futures::Future<Error = errors::Error, Item = <F as futures::Future>::Item>> {
    debug f => _1;                       // in scope 0 at src/main.rs:352:15: 352:16
    debug dur => _2;                     // in scope 0 at src/main.rs:352:21: 352:24
    debug handle => _3;                  // in scope 0 at src/main.rs:352:36: 352:42
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = <F as futures::Future>::Item>>; // return place in scope 0 at src/main.rs:352:56: 352:73
    let mut _4: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = <F as futures::Future>::Item>>; // in scope 0 at src/main.rs:357:5: 364:8
    let _5: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>; // in scope 0 at src/main.rs:356:9: 356:16
    let mut _6: futures::Done<tokio_core::reactor::Timeout, std::io::Error>; // in scope 0 at src/main.rs:356:19: 356:58
    let mut _7: std::result::Result<tokio_core::reactor::Timeout, std::io::Error>; // in scope 0 at src/main.rs:356:19: 356:44
    let mut _8: std::time::Duration;     // in scope 0 at src/main.rs:356:32: 356:35
    let mut _9: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:356:37: 356:43
    let mut _10: std::boxed::Box<futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>>; // in scope 0 at src/main.rs:357:5: 364:8
    let mut _11: futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>; // in scope 0 at src/main.rs:357:14: 364:7
    let mut _12: futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>; // in scope 0 at src/main.rs:357:14: 357:32
    let mut _13: F;                      // in scope 0 at src/main.rs:357:14: 357:15
    let mut _14: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>; // in scope 0 at src/main.rs:357:24: 357:31
    let mut _15: [closure@src/main.rs:357:38: 364:6]; // in scope 0 at src/main.rs:357:38: 364:6
    let mut _16: bool;                   // in scope 0 at src/main.rs:365:1: 365:2
    scope 1 {
        debug timeout => _5;             // in scope 1 at src/main.rs:356:9: 356:16
    }

    bb0: {
        _16 = const false;               // scope 0 at src/main.rs:357:5: 364:8
        _16 = const true;                // scope 0 at src/main.rs:357:5: 364:8
        StorageLive(_4);                 // scope 0 at src/main.rs:357:5: 364:8
        StorageLive(_5);                 // scope 0 at src/main.rs:356:9: 356:16
        StorageLive(_6);                 // scope 0 at src/main.rs:356:19: 356:58
        StorageLive(_7);                 // scope 0 at src/main.rs:356:19: 356:44
        StorageLive(_8);                 // scope 0 at src/main.rs:356:32: 356:35
        _8 = _2;                         // scope 0 at src/main.rs:356:32: 356:35
        StorageLive(_9);                 // scope 0 at src/main.rs:356:37: 356:43
        _9 = _3;                         // scope 0 at src/main.rs:356:37: 356:43
        _7 = tokio_core::reactor::Timeout::new(move _8, move _9) -> [return: bb1, unwind: bb9]; // scope 0 at src/main.rs:356:19: 356:44
                                         // mir::Constant
                                         // + span: src/main.rs:356:19: 356:31
                                         // + literal: Const { ty: for<'r> fn(std::time::Duration, &'r tokio_core::reactor::Handle) -> std::result::Result<tokio_core::reactor::Timeout, std::io::Error> {tokio_core::reactor::Timeout::new}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_9);                 // scope 0 at src/main.rs:356:43: 356:44
        StorageDead(_8);                 // scope 0 at src/main.rs:356:43: 356:44
        _6 = <std::result::Result<tokio_core::reactor::Timeout, std::io::Error> as futures::IntoFuture>::into_future(move _7) -> [return: bb2, unwind: bb9]; // scope 0 at src/main.rs:356:19: 356:58
                                         // mir::Constant
                                         // + span: src/main.rs:356:45: 356:56
                                         // + literal: Const { ty: fn(std::result::Result<tokio_core::reactor::Timeout, std::io::Error>) -> <std::result::Result<tokio_core::reactor::Timeout, std::io::Error> as futures::IntoFuture>::Future {<std::result::Result<tokio_core::reactor::Timeout, std::io::Error> as futures::IntoFuture>::into_future}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_7);                 // scope 0 at src/main.rs:356:57: 356:58
        _5 = <FutureResult<tokio_core::reactor::Timeout, std::io::Error> as futures::Future>::flatten(move _6) -> [return: bb3, unwind: bb9]; // scope 0 at src/main.rs:356:19: 356:68
                                         // mir::Constant
                                         // + span: src/main.rs:356:59: 356:66
                                         // + literal: Const { ty: fn(futures::Done<tokio_core::reactor::Timeout, std::io::Error>) -> futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>> {<futures::Done<tokio_core::reactor::Timeout, std::io::Error> as futures::Future>::flatten}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at src/main.rs:356:67: 356:68
        StorageLive(_10);                // scope 1 at src/main.rs:357:5: 364:8
        StorageLive(_11);                // scope 1 at src/main.rs:357:14: 364:7
        StorageLive(_12);                // scope 1 at src/main.rs:357:14: 357:32
        StorageLive(_13);                // scope 1 at src/main.rs:357:14: 357:15
        _16 = const false;               // scope 1 at src/main.rs:357:14: 357:15
        _13 = move _1;                   // scope 1 at src/main.rs:357:14: 357:15
        StorageLive(_14);                // scope 1 at src/main.rs:357:24: 357:31
        _14 = move _5;                   // scope 1 at src/main.rs:357:24: 357:31
        _12 = <F as futures::Future>::select2::<futures::Flatten<FutureResult<tokio_core::reactor::Timeout, std::io::Error>>>(move _13, move _14) -> [return: bb4, unwind: bb9]; // scope 1 at src/main.rs:357:14: 357:32
                                         // mir::Constant
                                         // + span: src/main.rs:357:16: 357:23
                                         // + literal: Const { ty: fn(F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>) -> futures::future::Select2<F, <futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>> as futures::IntoFuture>::Future> {<F as futures::Future>::select2::<futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_14);                // scope 1 at src/main.rs:357:31: 357:32
        StorageDead(_13);                // scope 1 at src/main.rs:357:31: 357:32
        StorageLive(_15);                // scope 1 at src/main.rs:357:38: 364:6
        _11 = <Select2<F, futures::Flatten<FutureResult<tokio_core::reactor::Timeout, std::io::Error>>> as futures::Future>::then::<[closure@src/main.rs:357:38: 364:6], std::result::Result<<F as futures::Future>::Item, errors::Error>>(move _12, move _15) -> [return: bb5, unwind: bb9]; // scope 1 at src/main.rs:357:14: 364:7
                                         // mir::Constant
                                         // + span: src/main.rs:357:33: 357:37
                                         // + literal: Const { ty: fn(futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, [closure@src/main.rs:357:38: 364:6]) -> futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]> {<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>> as futures::Future>::then::<[closure@src/main.rs:357:38: 364:6], std::result::Result<<F as futures::Future>::Item, errors::Error>>}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_15);                // scope 1 at src/main.rs:364:6: 364:7
        StorageDead(_12);                // scope 1 at src/main.rs:364:6: 364:7
        _10 = Box::<futures::Then<Select2<F, futures::Flatten<FutureResult<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>>::new(move _11) -> [return: bb6, unwind: bb9]; // scope 1 at src/main.rs:357:5: 364:8
                                         // mir::Constant
                                         // + span: src/main.rs:357:5: 357:13
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>) -> std::boxed::Box<futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>> {std::boxed::Box::<futures::Then<futures::future::Select2<F, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>>, std::result::Result<<F as futures::Future>::Item, errors::Error>, [closure@src/main.rs:357:38: 364:6]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        _4 = move _10 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = <F as futures::Future>::Item>> (Pointer(Unsize)); // scope 1 at src/main.rs:357:5: 364:8
        StorageDead(_11);                // scope 1 at src/main.rs:364:7: 364:8
        StorageDead(_10);                // scope 1 at src/main.rs:364:7: 364:8
        StorageDead(_5);                 // scope 0 at src/main.rs:365:1: 365:2
        _0 = move _4 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = <F as futures::Future>::Item>> (Pointer(Unsize)); // scope 0 at src/main.rs:357:5: 364:8
        StorageDead(_4);                 // scope 0 at src/main.rs:365:1: 365:2
        return;                          // scope 0 at src/main.rs:365:2: 365:2
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at src/main.rs:352:1: 365:2
    }

    bb8 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at src/main.rs:365:1: 365:2
    }

    bb9 (cleanup): {
        switchInt(_16) -> [false: bb7, otherwise: bb8]; // scope 0 at src/main.rs:365:1: 365:2
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:193:13: 199:14>::from(_1: std::io::Error) -> errors::Error {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:25: 194:26
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:57: 194:61
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
    let mut _3: std::io::Error;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        ((_2 as Io).0: std::io::Error) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        discriminant(_2) = 2;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:66: 196:67
        _0 = errors::Error::from_kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 197:22
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 195:43
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:197:21: 197:22
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:198:18: 198:18
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#2}(_1: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], _2: &errors::ErrorKind, _3: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug f => _3;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:13: 352:14
    debug err => (*((*_1).0: &&std::io::Error)); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:44: 352:44
    let mut _4: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _7: (&&std::io::Error,);     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _8: &&std::io::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _9: &&std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _11: &&std::io::Error;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _12: for<'r, 's, 't0> fn(&'r &std::io::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _13: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _14: &[&str];                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _15: &[&str; 1];             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let _16: &[&str; 1];                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    scope 1 {
        debug arg0 => _9;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    }
    scope 2 {
        debug args => _13;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        scope 3 {
            let mut _19: &[&str; 1];     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        }
    }

    bb0: {
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        _4 = &mut (*_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        StorageLive(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _8 = ((*_1).0: &&std::io::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        (_7.0: &&std::io::Error) = move _8; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_9);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _9 = (_7.0: &&std::io::Error);   // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _11 = _9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_12);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _12 = <&std::io::Error as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &std::io::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &std::io::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&std::io::Error as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<&std::io::Error>(move _11, move _12) -> bb1; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b &std::io::Error, for<'r, 's, 't0> fn(&'r &std::io::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&std::io::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_11);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _6 = [move _10];                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _13 = &_6;                       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_14);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _19 = const <errors::ErrorKind as std::fmt::Display>::fmt::{closure#2}::promoted[0]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<errors::ErrorKind as std::fmt::Display>::fmt::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:275 ~ webpush_server[6b79]::errors::{impl#17}::fmt::{closure#2}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _16 = _19;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _15 = _16;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageDead(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:36: 255:37
        StorageLive(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _18 = _13;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _5 = Arguments::new_v1(move _14, move _17) -> bb2; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_14);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_16);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _0 = std::fmt::Formatter::write_fmt(move _4, move _5) -> bb3; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:34: 479:80
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:39: 479:48
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, std::fmt::Arguments<'s>) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_fmt}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:81: 352:81
    }
}

promoted[0] in errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#2}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _1: [&str; 1];               // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37

    bb0: {
        _1 = [const ""];                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 }) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:150:9: 171:10>::cause(_1: &errors::Error) -> std::option::Option<&dyn std::error::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:155:22: 155:27
    let mut _0: std::option::Option<&dyn std::error::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:155:32: 155:60
    let mut _2: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:21: 157:32
    let _3: &std::boxed::Box<dyn std::error::Error + std::marker::Send>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:26: 157:31
    let mut _4: &dyn std::error::Error;  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
    let mut _5: &dyn std::error::Error + std::marker::Send; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
    let _6: &dyn std::error::Error + std::marker::Send; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
    let mut _7: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:33: 162:89
    let _8: &tungstenite::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    let mut _9: &tungstenite::Error;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
    let _10: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    let mut _11: &std::io::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
    let _12: &serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    let mut _13: &serde_json::Error;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
    scope 1 {
        debug c => _3;                   // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:26: 157:31
    }
    scope 2 {
        debug foreign_err => _8;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    }
    scope 3 {
        debug foreign_err => _10;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    }
    scope 4 {
        debug foreign_err => _12;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
    }

    bb0: {
        _2 = discriminant((((*_1).1: error_chain::State).0: std::option::Option<std::boxed::Box<dyn std::error::Error + std::marker::Send>>)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:156:23: 156:40
        switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:156:17: 156:40
    }

    bb1: {
        _7 = discriminant(((*_1).0: errors::ErrorKind)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:159:31: 159:37
        switchInt(move _7) -> [1_isize: bb5, 2_isize: bb7, 3_isize: bb9, otherwise: bb4]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:159:25: 159:37
    }

    bb2: {
        unreachable;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:156:23: 156:40
    }

    bb3: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:26: 157:31
        _3 = &(((((*_1).1: error_chain::State).0: std::option::Option<std::boxed::Box<dyn std::error::Error + std::marker::Send>>) as Some).0: std::boxed::Box<dyn std::error::Error + std::marker::Send>); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:26: 157:31
        StorageLive(_4);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        StorageLive(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        StorageLive(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        _6 = &(*(*_3));                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        _5 = _6;                         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        _4 = move _5 as &dyn std::error::Error (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:41: 157:45
        StorageDead(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:44: 157:45
        ((_0 as Some).0: &dyn std::error::Error) = move _4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:36: 157:46
        discriminant(_0) = 1;            // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:36: 157:46
        StorageDead(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:45: 157:46
        StorageDead(_4);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:45: 157:46
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:45: 157:46
        goto -> bb11;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:157:45: 157:46
    }

    bb4: {
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:166:34: 166:38
        goto -> bb11;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:166:34: 166:38
    }

    bb5: {
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        _8 = &((((*_1).0: errors::ErrorKind) as Ws).0: tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        StorageLive(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _9 = _8;                         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _0 = <tungstenite::Error as std::error::Error>::cause(move _9) -> bb6; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:56
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:49: 163:54
                                         // + literal: Const { ty: for<'r> fn(&'r tungstenite::Error) -> std::option::Option<&'r (dyn std::error::Error + 'r)> {<tungstenite::Error as std::error::Error>::cause}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:55: 163:56
        StorageDead(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
        goto -> bb11;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
    }

    bb7: {
        StorageLive(_10);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        _10 = &((((*_1).0: errors::ErrorKind) as Io).0: std::io::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        StorageLive(_11);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _11 = _10;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _0 = <std::io::Error as std::error::Error>::cause(move _11) -> bb8; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:56
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:49: 163:54
                                         // + literal: Const { ty: for<'r> fn(&'r std::io::Error) -> std::option::Option<&'r (dyn std::error::Error + 'r)> {<std::io::Error as std::error::Error>::cause}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_11);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:55: 163:56
        StorageDead(_10);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
        goto -> bb11;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
    }

    bb9: {
        StorageLive(_12);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        _12 = &((((*_1).0: errors::ErrorKind) as Json).0: serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:162:73: 162:88
        StorageLive(_13);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _13 = _12;                       // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:48
        _0 = <serde_json::Error as std::error::Error>::cause(move _13) -> bb10; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:37: 163:56
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:49: 163:54
                                         // + literal: Const { ty: for<'r> fn(&'r serde_json::Error) -> std::option::Option<&'r (dyn std::error::Error + 'r)> {<serde_json::Error as std::error::Error>::cause}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_13);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:163:55: 163:56
        StorageDead(_12);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
        goto -> bb11;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:164:33: 164:34
    }

    bb11: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:170:14: 170:14
    }
}

fn <impl at src/main.rs:232:1: 350:2>::handshake(_1: T) -> Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> {
    debug ws => _1;                      // in scope 0 at src/main.rs:233:21: 233:23
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // return place in scope 0 at src/main.rs:233:31: 233:91
    let mut _2: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // in scope 0 at src/main.rs:238:9: 270:12
    let mut _3: std::boxed::Box<futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>>; // in scope 0 at src/main.rs:238:9: 270:12
    let mut _4: futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>; // in scope 0 at src/main.rs:238:18: 270:11
    let mut _5: futures::stream::StreamFuture<T>; // in scope 0 at src/main.rs:238:18: 238:34
    let mut _6: T;                       // in scope 0 at src/main.rs:238:18: 238:20
    let mut _7: [closure@src/main.rs:238:40: 270:10]; // in scope 0 at src/main.rs:238:40: 270:10

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:238:9: 270:12
        StorageLive(_3);                 // scope 0 at src/main.rs:238:9: 270:12
        StorageLive(_4);                 // scope 0 at src/main.rs:238:18: 270:11
        StorageLive(_5);                 // scope 0 at src/main.rs:238:18: 238:34
        StorageLive(_6);                 // scope 0 at src/main.rs:238:18: 238:20
        _6 = move _1;                    // scope 0 at src/main.rs:238:18: 238:20
        _5 = <T as futures::Stream>::into_future(move _6) -> bb1; // scope 0 at src/main.rs:238:18: 238:34
                                         // mir::Constant
                                         // + span: src/main.rs:238:21: 238:32
                                         // + literal: Const { ty: fn(T) -> futures::stream::StreamFuture<T> {<T as futures::Stream>::into_future}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at src/main.rs:238:33: 238:34
        StorageLive(_7);                 // scope 0 at src/main.rs:238:40: 270:10
        _4 = <StreamFuture<T> as futures::Future>::then::<[closure@src/main.rs:238:40: 270:10], Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>>(move _5, move _7) -> bb2; // scope 0 at src/main.rs:238:18: 270:11
                                         // mir::Constant
                                         // + span: src/main.rs:238:35: 238:39
                                         // + literal: Const { ty: fn(futures::stream::StreamFuture<T>, [closure@src/main.rs:238:40: 270:10]) -> futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]> {<futures::stream::StreamFuture<T> as futures::Future>::then::<[closure@src/main.rs:238:40: 270:10], std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_7);                 // scope 0 at src/main.rs:270:10: 270:11
        StorageDead(_5);                 // scope 0 at src/main.rs:270:10: 270:11
        _3 = Box::<futures::Then<StreamFuture<T>, Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>>::new(move _4) -> bb3; // scope 0 at src/main.rs:238:9: 270:12
                                         // mir::Constant
                                         // + span: src/main.rs:238:9: 238:17
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>) -> std::boxed::Box<futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>> {std::boxed::Box::<futures::Then<futures::stream::StreamFuture<T>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:238:40: 270:10]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        _2 = move _3 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 0 at src/main.rs:238:9: 270:12
        StorageDead(_4);                 // scope 0 at src/main.rs:270:11: 270:12
        StorageDead(_3);                 // scope 0 at src/main.rs:270:11: 270:12
        _0 = move _2 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 0 at src/main.rs:238:9: 270:12
        StorageDead(_2);                 // scope 0 at src/main.rs:271:5: 271:6
        return;                          // scope 0 at src/main.rs:271:6: 271:6
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize(_1: __D) -> std::result::Result<ClientMessage, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {
    debug __deserializer => _1;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<ClientMessage, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let _2: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::content::TaggedContent<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::content::TaggedContent<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: __D;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: isize;                   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let _7: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::content::TaggedContent<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
    let _8: <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
    let mut _9: <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _10: <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _11: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _12: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _13: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _14: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _15: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _16: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _17: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _18: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _19: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _20: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _21: bool;                   // in scope 0 at src/main.rs:54:20: 54:21
    let mut _22: bool;                   // in scope 0 at src/main.rs:54:20: 54:21
    scope 1 {
        debug __tagged => _2;            // in scope 1 at src/main.rs:54:10: 54:21
    }
    scope 2 {
        debug val => _7;                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
    }
    scope 3 {
        debug err => _8;                 // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
    }

    bb0: {
        _21 = const false;               // scope 0 at src/main.rs:54:10: 54:21
        _22 = const false;               // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        _22 = const true;                // scope 0 at src/main.rs:54:10: 54:21
        _4 = move _1;                    // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = TaggedContentVisitor::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field>::new(const "messageType") -> [return: bb1, unwind: bb23]; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'static str) -> _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>::new}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb1: {
        _22 = const false;               // scope 0 at src/main.rs:54:10: 54:21
        _3 = <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field>>(move _4, move _5) -> [return: bb2, unwind: bb23]; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::TaggedContentVisitor<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        _22 = const false;               // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        _6 = discriminant(_3);           // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _6) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 0 at src/main.rs:54:10: 398:9
    }

    bb3: {
        StorageLive(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _8 = move ((_3 as Err).0: <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error); // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_9);                 // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_10);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _10 = move _8;                   // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _9 = <<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error as std::convert::From<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>>::from(move _10) -> bb6; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error) -> <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error {<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error as std::convert::From<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        unreachable;                     // scope 0 at src/main.rs:54:10: 54:21
    }

    bb5: {
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _7 = move ((_3 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::content::TaggedContent<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>); // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _21 = const true;                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _2 = move _7;                    // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        _11 = discriminant((_2.0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field)); // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _11) -> [0_isize: bb9, 1_isize: bb12, 2_isize: bb7, otherwise: bb8]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageDead(_10);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error) = move _9; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_9);                 // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        _21 = const false;               // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb18;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb7: {
        StorageLive(_18);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_19);                // scope 1 at src/main.rs:54:10: 54:21
        _21 = const false;               // scope 1 at src/main.rs:54:10: 54:21
        _19 = move (_2.1: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content); // scope 1 at src/main.rs:54:10: 54:21
        _18 = ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new(move _19) -> [return: bb15, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content) -> _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb9: {
        StorageLive(_12);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_13);                // scope 1 at src/main.rs:54:10: 54:21
        _21 = const false;               // scope 1 at src/main.rs:54:10: 54:21
        _13 = move (_2.1: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content); // scope 1 at src/main.rs:54:10: 54:21
        _12 = ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new(move _13) -> [return: bb10, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content) -> _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_13);                // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_14);                // scope 1 at src/main.rs:54:10: 54:21
        _0 = <ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor>(move _12, move _14) -> [return: bb11, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_14);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_12);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb17;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb12: {
        StorageLive(_15);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_16);                // scope 1 at src/main.rs:54:10: 54:21
        _21 = const false;               // scope 1 at src/main.rs:54:10: 54:21
        _16 = move (_2.1: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content); // scope 1 at src/main.rs:54:10: 54:21
        _15 = ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new(move _16) -> [return: bb13, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content) -> _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer::<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_16);                // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_17);                // scope 1 at src/main.rs:54:10: 54:21
        _0 = <ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor>(move _15, move _17) -> [return: bb14, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        StorageDead(_17);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_15);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb17;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb15: {
        StorageDead(_19);                // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_20);                // scope 1 at src/main.rs:54:10: 54:21
        _0 = <ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor>(move _18, move _20) -> [return: bb16, unwind: bb21]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::ContentDeserializer<<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_any::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Visitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_20);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_18);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb17;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb17: {
        _21 = const false;               // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb18;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb18: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at src/main.rs:54:10: 54:21
    }

    bb20 (cleanup): {
        drop((_2.1: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::Content)) -> bb19; // scope 0 at src/main.rs:54:20: 54:21
    }

    bb21 (cleanup): {
        switchInt(_21) -> [false: bb19, otherwise: bb20]; // scope 0 at src/main.rs:54:20: 54:21
    }

    bb22 (cleanup): {
        drop(_4) -> bb19;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb23 (cleanup): {
        switchInt(_22) -> [false: bb19, otherwise: bb22]; // scope 0 at src/main.rs:54:20: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "struct variant ClientMessage::Unregister"; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 85, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1099511627775], len: Size { raw: 40 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 40 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 85, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1099511627775], len: Size { raw: 40 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 40 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::iter(_1: &errors::Error) -> ErrorChainIter {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:99:21: 99:26
    let mut _0: error_chain::ErrorChainIter; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:99:31: 99:53
    let mut _2: std::option::Option<&dyn std::error::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:40: 100:50
    let mut _3: &dyn std::error::Error;  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49
    let mut _4: &errors::Error;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:40: 100:50
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49
        _4 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49
        _3 = move _4 as &dyn std::error::Error (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:45: 100:49
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:48: 100:49
        ((_2 as Some).0: &dyn std::error::Error) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:40: 100:50
        discriminant(_2) = 1;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:40: 100:50
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:49: 100:50
        (_0.0: std::option::Option<&dyn std::error::Error>) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:17: 100:51
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:100:50: 100:51
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:101:14: 101:14
    }
}

fn main::{closure#1}(_1: &mut [closure@src/main.rs:200:54: 203:6], _2: (tokio_core::net::TcpStream, std::net::SocketAddr)) -> std::result::Result<(), std::io::Error> {
    debug proto => (*((*_1).0: &hyper::server::Http)); // in scope 0 at src/main.rs:198:9: 198:14
    debug handle => (*((*_1).1: &tokio_core::reactor::Handle)); // in scope 0 at src/main.rs:139:9: 139:15
    debug cx => (*((*_1).2: &std::rc::Rc<Context>)); // in scope 0 at src/main.rs:199:9: 199:11
    let mut _0: std::result::Result<(), std::io::Error>; // return place in scope 0 at src/main.rs:200:71: 200:71
    let _3: tokio_core::net::TcpStream;  // in scope 0 at src/main.rs:200:56: 200:62
    let _4: std::net::SocketAddr;        // in scope 0 at src/main.rs:200:64: 200:68
    let _5: ();                          // in scope 0 at src/main.rs:201:9: 201:71
    let mut _6: &hyper::server::Http;    // in scope 0 at src/main.rs:201:9: 201:14
    let mut _7: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:201:31: 201:38
    let _8: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:201:31: 201:38
    let mut _9: tokio_core::net::TcpStream; // in scope 0 at src/main.rs:201:40: 201:46
    let mut _10: std::net::SocketAddr;   // in scope 0 at src/main.rs:201:48: 201:52
    let mut _11: Push;                   // in scope 0 at src/main.rs:201:54: 201:70
    let mut _12: std::rc::Rc<Context>;   // in scope 0 at src/main.rs:201:59: 201:69
    let mut _13: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:201:59: 201:61
    let mut _14: bool;                   // in scope 0 at src/main.rs:201:70: 201:71
    scope 1 {
        debug socket => _3;              // in scope 1 at src/main.rs:200:56: 200:62
        debug addr => _4;                // in scope 1 at src/main.rs:200:64: 200:68
    }

    bb0: {
        _14 = const false;               // scope 0 at src/main.rs:200:56: 200:62
        StorageLive(_3);                 // scope 0 at src/main.rs:200:56: 200:62
        _3 = move (_2.0: tokio_core::net::TcpStream); // scope 0 at src/main.rs:200:56: 200:62
        StorageLive(_4);                 // scope 0 at src/main.rs:200:64: 200:68
        _4 = (_2.1: std::net::SocketAddr); // scope 0 at src/main.rs:200:64: 200:68
        StorageLive(_5);                 // scope 1 at src/main.rs:201:9: 201:71
        StorageLive(_6);                 // scope 1 at src/main.rs:201:9: 201:14
        _6 = ((*_1).0: &hyper::server::Http); // scope 1 at src/main.rs:201:9: 201:14
        StorageLive(_7);                 // scope 1 at src/main.rs:201:31: 201:38
        StorageLive(_8);                 // scope 1 at src/main.rs:201:31: 201:38
        _8 = ((*_1).1: &tokio_core::reactor::Handle); // scope 1 at src/main.rs:201:31: 201:38
        _7 = _8;                         // scope 1 at src/main.rs:201:31: 201:38
        StorageLive(_9);                 // scope 1 at src/main.rs:201:40: 201:46
        _14 = const true;                // scope 1 at src/main.rs:201:40: 201:46
        _9 = move _3;                    // scope 1 at src/main.rs:201:40: 201:46
        StorageLive(_10);                // scope 1 at src/main.rs:201:48: 201:52
        _10 = _4;                        // scope 1 at src/main.rs:201:48: 201:52
        StorageLive(_11);                // scope 1 at src/main.rs:201:54: 201:70
        StorageLive(_12);                // scope 1 at src/main.rs:201:59: 201:69
        StorageLive(_13);                // scope 1 at src/main.rs:201:59: 201:61
        _13 = ((*_1).2: &std::rc::Rc<Context>); // scope 1 at src/main.rs:201:59: 201:61
        _12 = <Rc<Context> as Clone>::clone(move _13) -> [return: bb1, unwind: bb5]; // scope 1 at src/main.rs:201:59: 201:69
                                         // mir::Constant
                                         // + span: src/main.rs:201:62: 201:67
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_13);                // scope 1 at src/main.rs:201:68: 201:69
        (_11.0: std::rc::Rc<Context>) = move _12; // scope 1 at src/main.rs:201:54: 201:70
        StorageDead(_12);                // scope 1 at src/main.rs:201:69: 201:70
        _14 = const false;               // scope 1 at src/main.rs:201:9: 201:71
        _5 = hyper::server::Http::bind_connection::<Push, tokio_core::net::TcpStream, Body>(move _6, move _7, move _9, move _10, move _11) -> [return: bb2, unwind: bb5]; // scope 1 at src/main.rs:201:9: 201:71
                                         // mir::Constant
                                         // + span: src/main.rs:201:15: 201:30
                                         // + literal: Const { ty: for<'r, 's> fn(&'r hyper::server::Http, &'s tokio_core::reactor::Handle, tokio_core::net::TcpStream, std::net::SocketAddr, Push) {hyper::server::Http::bind_connection::<Push, tokio_core::net::TcpStream, hyper::Body>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_11);                // scope 1 at src/main.rs:201:70: 201:71
        StorageDead(_10);                // scope 1 at src/main.rs:201:70: 201:71
        _14 = const false;               // scope 1 at src/main.rs:201:70: 201:71
        StorageDead(_9);                 // scope 1 at src/main.rs:201:70: 201:71
        StorageDead(_7);                 // scope 1 at src/main.rs:201:70: 201:71
        StorageDead(_6);                 // scope 1 at src/main.rs:201:70: 201:71
        StorageDead(_8);                 // scope 1 at src/main.rs:201:71: 201:72
        StorageDead(_5);                 // scope 1 at src/main.rs:201:71: 201:72
        discriminant(_0) = 0;            // scope 1 at src/main.rs:202:9: 202:15
        StorageDead(_4);                 // scope 0 at src/main.rs:203:5: 203:6
        StorageDead(_3);                 // scope 0 at src/main.rs:203:5: 203:6
        return;                          // scope 0 at src/main.rs:203:6: 203:6
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at src/main.rs:200:54: 203:6
    }

    bb4 (cleanup): {
        drop(_9) -> bb3;                 // scope 1 at src/main.rs:201:70: 201:71
    }

    bb5 (cleanup): {
        switchInt(_14) -> [false: bb3, otherwise: bb4]; // scope 1 at src/main.rs:201:70: 201:71
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::new(_1: errors::ErrorKind, _2: error_chain::State) -> errors::Error {
    debug kind => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:79:20: 79:24
    debug state => _2;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:79:44: 79:49
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:79:69: 79:80
    let mut _3: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:29: 80:33
    let mut _4: error_chain::State;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:35: 80:40

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:29: 80:33
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:29: 80:33
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:35: 80:40
        _4 = move _2;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:35: 80:40
        (_0.0: errors::ErrorKind) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:17: 80:41
        (_0.1: error_chain::State) = move _4; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:17: 80:41
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:40: 80:41
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:80:40: 80:41
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:81:14: 81:14
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:137:11: 137:11
    let mut _1: tokio_core::reactor::Core; // in scope 0 at src/main.rs:138:9: 138:17
    let mut _2: std::result::Result<tokio_core::reactor::Core, std::io::Error>; // in scope 0 at src/main.rs:138:20: 138:31
    let mut _4: &tokio_core::reactor::Core; // in scope 0 at src/main.rs:139:18: 139:22
    let mut _6: std::result::Result<tokio_core::net::TcpListener, std::io::Error>; // in scope 0 at src/main.rs:140:23: 140:85
    let mut _7: &std::net::SocketAddr;   // in scope 0 at src/main.rs:140:41: 140:75
    let _8: &std::net::SocketAddr;       // in scope 0 at src/main.rs:140:41: 140:75
    let _9: std::net::SocketAddr;        // in scope 0 at src/main.rs:140:42: 140:75
    let mut _10: std::result::Result<std::net::SocketAddr, std::net::AddrParseError>; // in scope 0 at src/main.rs:140:42: 140:66
    let mut _11: &str;                   // in scope 0 at src/main.rs:140:42: 140:58
    let _12: &str;                       // in scope 0 at src/main.rs:140:42: 140:58
    let mut _13: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:140:77: 140:84
    let _14: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:140:77: 140:84
    let mut _16: Context;                // in scope 0 at src/main.rs:143:22: 146:6
    let mut _17: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:144:19: 144:47
    let mut _18: std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:144:32: 144:46
    let mut _19: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:145:16: 145:44
    let mut _20: std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:145:29: 145:43
    let mut _22: tokio_core::net::Incoming; // in scope 0 at src/main.rs:148:18: 148:40
    let mut _23: tokio_core::net::TcpListener; // in scope 0 at src/main.rs:148:18: 148:29
    let mut _24: [closure@src/main.rs:148:50: 194:6]; // in scope 0 at src/main.rs:148:50: 194:6
    let mut _25: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:148:50: 194:6
    let mut _26: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:148:50: 194:6
    let mut _28: std::result::Result<tokio_core::net::TcpListener, std::io::Error>; // in scope 0 at src/main.rs:196:25: 196:87
    let mut _29: &std::net::SocketAddr;  // in scope 0 at src/main.rs:196:43: 196:77
    let _30: &std::net::SocketAddr;      // in scope 0 at src/main.rs:196:43: 196:77
    let _31: std::net::SocketAddr;       // in scope 0 at src/main.rs:196:44: 196:77
    let mut _32: std::result::Result<std::net::SocketAddr, std::net::AddrParseError>; // in scope 0 at src/main.rs:196:44: 196:68
    let mut _33: &str;                   // in scope 0 at src/main.rs:196:44: 196:60
    let _34: &str;                       // in scope 0 at src/main.rs:196:44: 196:60
    let mut _35: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:196:79: 196:86
    let _36: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:196:79: 196:86
    let mut _39: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:199:14: 199:16
    let mut _41: tokio_core::net::Incoming; // in scope 0 at src/main.rs:200:20: 200:44
    let mut _42: tokio_core::net::TcpListener; // in scope 0 at src/main.rs:200:20: 200:33
    let mut _43: [closure@src/main.rs:200:54: 203:6]; // in scope 0 at src/main.rs:200:54: 203:6
    let mut _44: &hyper::server::Http;   // in scope 0 at src/main.rs:200:54: 203:6
    let mut _45: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:200:54: 203:6
    let mut _46: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:200:54: 203:6
    let _47: ((), ());                   // in scope 0 at src/main.rs:205:5: 205:50
    let mut _48: std::option::Option<((), ())>; // in scope 0 at src/main.rs:205:5: 205:41
    let mut _49: std::result::Result<((), ()), std::io::Error>; // in scope 0 at src/main.rs:205:5: 205:36
    let mut _50: &mut tokio_core::reactor::Core; // in scope 0 at src/main.rs:205:5: 205:9
    let mut _51: futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>; // in scope 0 at src/main.rs:205:14: 205:35
    let mut _52: futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>; // in scope 0 at src/main.rs:205:14: 205:20
    let mut _53: futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>; // in scope 0 at src/main.rs:205:26: 205:34
    let mut _54: bool;                   // in scope 0 at src/main.rs:206:1: 206:2
    let mut _55: bool;                   // in scope 0 at src/main.rs:206:1: 206:2
    let mut _56: bool;                   // in scope 0 at src/main.rs:206:1: 206:2
    scope 1 {
        debug core => _1;                // in scope 1 at src/main.rs:138:9: 138:17
        let _3: tokio_core::reactor::Handle; // in scope 1 at src/main.rs:139:9: 139:15
        scope 2 {
            debug handle => _3;          // in scope 2 at src/main.rs:139:9: 139:15
            let _5: tokio_core::net::TcpListener; // in scope 2 at src/main.rs:140:9: 140:20
            scope 3 {
                debug ws_listener => _5; // in scope 3 at src/main.rs:140:9: 140:20
                let _15: std::rc::Rc<Context>; // in scope 3 at src/main.rs:143:9: 143:11
                scope 4 {
                    debug cx => _15;     // in scope 4 at src/main.rs:143:9: 143:11
                    let _21: futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>; // in scope 4 at src/main.rs:148:9: 148:15
                    scope 5 {
                        debug ws_srv => _21; // in scope 5 at src/main.rs:148:9: 148:15
                        let _27: tokio_core::net::TcpListener; // in scope 5 at src/main.rs:196:9: 196:22
                        scope 6 {
                            debug push_listener => _27; // in scope 6 at src/main.rs:196:9: 196:22
                            let _37: hyper::server::Http; // in scope 6 at src/main.rs:198:9: 198:14
                            scope 7 {
                                debug proto => _37; // in scope 7 at src/main.rs:198:9: 198:14
                                let _38: std::rc::Rc<Context>; // in scope 7 at src/main.rs:199:9: 199:11
                                scope 8 {
                                    debug cx => _38; // in scope 8 at src/main.rs:199:9: 199:11
                                    let _40: futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>; // in scope 8 at src/main.rs:200:9: 200:17
                                    scope 9 {
                                        debug push_srv => _40; // in scope 9 at src/main.rs:200:9: 200:17
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _55 = const false;               // scope 0 at src/main.rs:138:9: 138:17
        _56 = const false;               // scope 0 at src/main.rs:138:9: 138:17
        _54 = const false;               // scope 0 at src/main.rs:138:9: 138:17
        StorageLive(_1);                 // scope 0 at src/main.rs:138:9: 138:17
        StorageLive(_2);                 // scope 0 at src/main.rs:138:20: 138:31
        _2 = Core::new() -> bb1;         // scope 0 at src/main.rs:138:20: 138:31
                                         // mir::Constant
                                         // + span: src/main.rs:138:20: 138:29
                                         // + literal: Const { ty: fn() -> std::result::Result<tokio_core::reactor::Core, std::io::Error> {tokio_core::reactor::Core::new}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _1 = std::result::Result::<Core, std::io::Error>::unwrap(move _2) -> bb2; // scope 0 at src/main.rs:138:20: 138:40
                                         // mir::Constant
                                         // + span: src/main.rs:138:32: 138:38
                                         // + literal: Const { ty: fn(std::result::Result<tokio_core::reactor::Core, std::io::Error>) -> tokio_core::reactor::Core {std::result::Result::<tokio_core::reactor::Core, std::io::Error>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_2);                 // scope 0 at src/main.rs:138:39: 138:40
        StorageLive(_3);                 // scope 1 at src/main.rs:139:9: 139:15
        StorageLive(_4);                 // scope 1 at src/main.rs:139:18: 139:22
        _4 = &_1;                        // scope 1 at src/main.rs:139:18: 139:22
        _3 = Core::handle(move _4) -> [return: bb3, unwind: bb35]; // scope 1 at src/main.rs:139:18: 139:31
                                         // mir::Constant
                                         // + span: src/main.rs:139:23: 139:29
                                         // + literal: Const { ty: for<'r> fn(&'r tokio_core::reactor::Core) -> tokio_core::reactor::Handle {tokio_core::reactor::Core::handle}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_4);                 // scope 1 at src/main.rs:139:30: 139:31
        StorageLive(_5);                 // scope 2 at src/main.rs:140:9: 140:20
        StorageLive(_6);                 // scope 2 at src/main.rs:140:23: 140:85
        StorageLive(_7);                 // scope 2 at src/main.rs:140:41: 140:75
        StorageLive(_8);                 // scope 2 at src/main.rs:140:41: 140:75
        StorageLive(_9);                 // scope 2 at src/main.rs:140:42: 140:75
        StorageLive(_10);                // scope 2 at src/main.rs:140:42: 140:66
        StorageLive(_11);                // scope 2 at src/main.rs:140:42: 140:58
        StorageLive(_12);                // scope 2 at src/main.rs:140:42: 140:58
        _12 = const "127.0.0.1:8080";    // scope 2 at src/main.rs:140:42: 140:58
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 56, 48, 56, 48], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 })
                                         // mir::Constant
                                         // + span: src/main.rs:140:42: 140:58
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 56, 48, 56, 48], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 }) }
        _11 = _12;                       // scope 2 at src/main.rs:140:42: 140:58
        _10 = core::str::<impl str>::parse::<std::net::SocketAddr>(move _11) -> [return: bb4, unwind: bb34]; // scope 2 at src/main.rs:140:42: 140:66
                                         // mir::Constant
                                         // + span: src/main.rs:140:59: 140:64
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> std::result::Result<std::net::SocketAddr, <std::net::SocketAddr as std::str::FromStr>::Err> {core::str::<impl str>::parse::<std::net::SocketAddr>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_11);                // scope 2 at src/main.rs:140:65: 140:66
        _9 = std::result::Result::<std::net::SocketAddr, AddrParseError>::unwrap(move _10) -> [return: bb5, unwind: bb34]; // scope 2 at src/main.rs:140:42: 140:75
                                         // mir::Constant
                                         // + span: src/main.rs:140:67: 140:73
                                         // + literal: Const { ty: fn(std::result::Result<std::net::SocketAddr, std::net::AddrParseError>) -> std::net::SocketAddr {std::result::Result::<std::net::SocketAddr, std::net::AddrParseError>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_10);                // scope 2 at src/main.rs:140:74: 140:75
        _8 = &_9;                        // scope 2 at src/main.rs:140:41: 140:75
        _7 = _8;                         // scope 2 at src/main.rs:140:41: 140:75
        StorageLive(_13);                // scope 2 at src/main.rs:140:77: 140:84
        StorageLive(_14);                // scope 2 at src/main.rs:140:77: 140:84
        _14 = &_3;                       // scope 2 at src/main.rs:140:77: 140:84
        _13 = _14;                       // scope 2 at src/main.rs:140:77: 140:84
        _6 = tokio_core::net::TcpListener::bind(move _7, move _13) -> [return: bb6, unwind: bb34]; // scope 2 at src/main.rs:140:23: 140:85
                                         // mir::Constant
                                         // + span: src/main.rs:140:23: 140:40
                                         // + literal: Const { ty: for<'r, 's> fn(&'r std::net::SocketAddr, &'s tokio_core::reactor::Handle) -> std::result::Result<tokio_core::net::TcpListener, std::io::Error> {tokio_core::net::TcpListener::bind}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_13);                // scope 2 at src/main.rs:140:84: 140:85
        StorageDead(_7);                 // scope 2 at src/main.rs:140:84: 140:85
        _5 = std::result::Result::<tokio_core::net::TcpListener, std::io::Error>::unwrap(move _6) -> [return: bb7, unwind: bb34]; // scope 2 at src/main.rs:140:23: 141:18
                                         // mir::Constant
                                         // + span: src/main.rs:141:10: 141:16
                                         // + literal: Const { ty: fn(std::result::Result<tokio_core::net::TcpListener, std::io::Error>) -> tokio_core::net::TcpListener {std::result::Result::<tokio_core::net::TcpListener, std::io::Error>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        _56 = const true;                // scope 2 at src/main.rs:141:17: 141:18
        StorageDead(_6);                 // scope 2 at src/main.rs:141:17: 141:18
        StorageDead(_14);                // scope 2 at src/main.rs:141:18: 141:19
        StorageDead(_12);                // scope 2 at src/main.rs:141:18: 141:19
        StorageDead(_9);                 // scope 2 at src/main.rs:141:18: 141:19
        StorageDead(_8);                 // scope 2 at src/main.rs:141:18: 141:19
        StorageLive(_15);                // scope 3 at src/main.rs:143:9: 143:11
        StorageLive(_16);                // scope 3 at src/main.rs:143:22: 146:6
        StorageLive(_17);                // scope 3 at src/main.rs:144:19: 144:47
        StorageLive(_18);                // scope 3 at src/main.rs:144:32: 144:46
        _18 = HashMap::<Uuid, Channel>::new() -> [return: bb8, unwind: bb42]; // scope 3 at src/main.rs:144:32: 144:46
                                         // mir::Constant
                                         // + span: src/main.rs:144:32: 144:44
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> std::collections::HashMap<uuid::Uuid, Channel> {std::collections::HashMap::<uuid::Uuid, Channel>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        _17 = RefCell::<HashMap<Uuid, Channel>>::new(move _18) -> [return: bb9, unwind: bb42]; // scope 3 at src/main.rs:144:19: 144:47
                                         // mir::Constant
                                         // + span: src/main.rs:144:19: 144:31
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(std::collections::HashMap<uuid::Uuid, Channel>) -> std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Channel>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_18);                // scope 3 at src/main.rs:144:46: 144:47
        StorageLive(_19);                // scope 3 at src/main.rs:145:16: 145:44
        StorageLive(_20);                // scope 3 at src/main.rs:145:29: 145:43
        _20 = HashMap::<Uuid, Client>::new() -> [return: bb10, unwind: bb33]; // scope 3 at src/main.rs:145:29: 145:43
                                         // mir::Constant
                                         // + span: src/main.rs:145:29: 145:41
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> std::collections::HashMap<uuid::Uuid, Client> {std::collections::HashMap::<uuid::Uuid, Client>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        _19 = RefCell::<HashMap<Uuid, Client>>::new(move _20) -> [return: bb11, unwind: bb33]; // scope 3 at src/main.rs:145:16: 145:44
                                         // mir::Constant
                                         // + span: src/main.rs:145:16: 145:28
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(std::collections::HashMap<uuid::Uuid, Client>) -> std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Client>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_20);                // scope 3 at src/main.rs:145:43: 145:44
        (_16.0: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>) = move _17; // scope 3 at src/main.rs:143:22: 146:6
        (_16.1: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>) = move _19; // scope 3 at src/main.rs:143:22: 146:6
        StorageDead(_19);                // scope 3 at src/main.rs:146:5: 146:6
        StorageDead(_17);                // scope 3 at src/main.rs:146:5: 146:6
        _15 = Rc::<Context>::new(move _16) -> [return: bb12, unwind: bb42]; // scope 3 at src/main.rs:143:14: 146:7
                                         // mir::Constant
                                         // + span: src/main.rs:143:14: 143:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Context) -> std::rc::Rc<Context> {std::rc::Rc::<Context>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_16);                // scope 3 at src/main.rs:146:6: 146:7
        StorageLive(_21);                // scope 4 at src/main.rs:148:9: 148:15
        StorageLive(_22);                // scope 4 at src/main.rs:148:18: 148:40
        StorageLive(_23);                // scope 4 at src/main.rs:148:18: 148:29
        _56 = const false;               // scope 4 at src/main.rs:148:18: 148:29
        _23 = move _5;                   // scope 4 at src/main.rs:148:18: 148:29
        _22 = tokio_core::net::TcpListener::incoming(move _23) -> [return: bb13, unwind: bb32]; // scope 4 at src/main.rs:148:18: 148:40
                                         // mir::Constant
                                         // + span: src/main.rs:148:30: 148:38
                                         // + literal: Const { ty: fn(tokio_core::net::TcpListener) -> tokio_core::net::Incoming {tokio_core::net::TcpListener::incoming}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_23);                // scope 4 at src/main.rs:148:39: 148:40
        StorageLive(_24);                // scope 4 at src/main.rs:148:50: 194:6
        StorageLive(_25);                // scope 4 at src/main.rs:148:50: 194:6
        _25 = &_3;                       // scope 4 at src/main.rs:148:50: 194:6
        StorageLive(_26);                // scope 4 at src/main.rs:148:50: 194:6
        _26 = &_15;                      // scope 4 at src/main.rs:148:50: 194:6
        (_24.0: &tokio_core::reactor::Handle) = move _25; // scope 4 at src/main.rs:148:50: 194:6
        (_24.1: &std::rc::Rc<Context>) = move _26; // scope 4 at src/main.rs:148:50: 194:6
        StorageDead(_26);                // scope 4 at src/main.rs:194:5: 194:6
        StorageDead(_25);                // scope 4 at src/main.rs:194:5: 194:6
        _21 = <tokio_core::net::Incoming as futures::Stream>::for_each::<[closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>(move _22, move _24) -> [return: bb14, unwind: bb32]; // scope 4 at src/main.rs:148:18: 194:7
                                         // mir::Constant
                                         // + span: src/main.rs:148:41: 148:49
                                         // + literal: Const { ty: fn(tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6]) -> futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>> {<tokio_core::net::Incoming as futures::Stream>::for_each::<[closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        _55 = const true;                // scope 4 at src/main.rs:194:6: 194:7
        StorageDead(_24);                // scope 4 at src/main.rs:194:6: 194:7
        StorageDead(_22);                // scope 4 at src/main.rs:194:6: 194:7
        StorageLive(_27);                // scope 5 at src/main.rs:196:9: 196:22
        StorageLive(_28);                // scope 5 at src/main.rs:196:25: 196:87
        StorageLive(_29);                // scope 5 at src/main.rs:196:43: 196:77
        StorageLive(_30);                // scope 5 at src/main.rs:196:43: 196:77
        StorageLive(_31);                // scope 5 at src/main.rs:196:44: 196:77
        StorageLive(_32);                // scope 5 at src/main.rs:196:44: 196:68
        StorageLive(_33);                // scope 5 at src/main.rs:196:44: 196:60
        StorageLive(_34);                // scope 5 at src/main.rs:196:44: 196:60
        _34 = const "127.0.0.1:8081";    // scope 5 at src/main.rs:196:44: 196:60
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 56, 48, 56, 49], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 })
                                         // mir::Constant
                                         // + span: src/main.rs:196:44: 196:60
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 56, 48, 56, 49], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 }) }
        _33 = _34;                       // scope 5 at src/main.rs:196:44: 196:60
        _32 = core::str::<impl str>::parse::<std::net::SocketAddr>(move _33) -> [return: bb15, unwind: bb40]; // scope 5 at src/main.rs:196:44: 196:68
                                         // mir::Constant
                                         // + span: src/main.rs:196:61: 196:66
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> std::result::Result<std::net::SocketAddr, <std::net::SocketAddr as std::str::FromStr>::Err> {core::str::<impl str>::parse::<std::net::SocketAddr>}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_33);                // scope 5 at src/main.rs:196:67: 196:68
        _31 = std::result::Result::<std::net::SocketAddr, AddrParseError>::unwrap(move _32) -> [return: bb16, unwind: bb40]; // scope 5 at src/main.rs:196:44: 196:77
                                         // mir::Constant
                                         // + span: src/main.rs:196:69: 196:75
                                         // + literal: Const { ty: fn(std::result::Result<std::net::SocketAddr, std::net::AddrParseError>) -> std::net::SocketAddr {std::result::Result::<std::net::SocketAddr, std::net::AddrParseError>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_32);                // scope 5 at src/main.rs:196:76: 196:77
        _30 = &_31;                      // scope 5 at src/main.rs:196:43: 196:77
        _29 = _30;                       // scope 5 at src/main.rs:196:43: 196:77
        StorageLive(_35);                // scope 5 at src/main.rs:196:79: 196:86
        StorageLive(_36);                // scope 5 at src/main.rs:196:79: 196:86
        _36 = &_3;                       // scope 5 at src/main.rs:196:79: 196:86
        _35 = _36;                       // scope 5 at src/main.rs:196:79: 196:86
        _28 = tokio_core::net::TcpListener::bind(move _29, move _35) -> [return: bb17, unwind: bb40]; // scope 5 at src/main.rs:196:25: 196:87
                                         // mir::Constant
                                         // + span: src/main.rs:196:25: 196:42
                                         // + literal: Const { ty: for<'r, 's> fn(&'r std::net::SocketAddr, &'s tokio_core::reactor::Handle) -> std::result::Result<tokio_core::net::TcpListener, std::io::Error> {tokio_core::net::TcpListener::bind}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        StorageDead(_35);                // scope 5 at src/main.rs:196:86: 196:87
        StorageDead(_29);                // scope 5 at src/main.rs:196:86: 196:87
        _27 = std::result::Result::<tokio_core::net::TcpListener, std::io::Error>::unwrap(move _28) -> [return: bb18, unwind: bb40]; // scope 5 at src/main.rs:196:25: 197:18
                                         // mir::Constant
                                         // + span: src/main.rs:197:10: 197:16
                                         // + literal: Const { ty: fn(std::result::Result<tokio_core::net::TcpListener, std::io::Error>) -> tokio_core::net::TcpListener {std::result::Result::<tokio_core::net::TcpListener, std::io::Error>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb18: {
        _54 = const true;                // scope 5 at src/main.rs:197:17: 197:18
        StorageDead(_28);                // scope 5 at src/main.rs:197:17: 197:18
        StorageDead(_36);                // scope 5 at src/main.rs:197:18: 197:19
        StorageDead(_34);                // scope 5 at src/main.rs:197:18: 197:19
        StorageDead(_31);                // scope 5 at src/main.rs:197:18: 197:19
        StorageDead(_30);                // scope 5 at src/main.rs:197:18: 197:19
        StorageLive(_37);                // scope 6 at src/main.rs:198:9: 198:14
        _37 = hyper::server::Http::new() -> [return: bb19, unwind: bb38]; // scope 6 at src/main.rs:198:17: 198:28
                                         // mir::Constant
                                         // + span: src/main.rs:198:17: 198:26
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> hyper::server::Http {hyper::server::Http::new}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        StorageLive(_38);                // scope 7 at src/main.rs:199:9: 199:11
        StorageLive(_39);                // scope 7 at src/main.rs:199:14: 199:16
        _39 = &_15;                      // scope 7 at src/main.rs:199:14: 199:16
        _38 = <Rc<Context> as Clone>::clone(move _39) -> [return: bb20, unwind: bb38]; // scope 7 at src/main.rs:199:14: 199:24
                                         // mir::Constant
                                         // + span: src/main.rs:199:17: 199:22
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_39);                // scope 7 at src/main.rs:199:23: 199:24
        StorageLive(_40);                // scope 8 at src/main.rs:200:9: 200:17
        StorageLive(_41);                // scope 8 at src/main.rs:200:20: 200:44
        StorageLive(_42);                // scope 8 at src/main.rs:200:20: 200:33
        _54 = const false;               // scope 8 at src/main.rs:200:20: 200:33
        _42 = move _27;                  // scope 8 at src/main.rs:200:20: 200:33
        _41 = tokio_core::net::TcpListener::incoming(move _42) -> [return: bb21, unwind: bb31]; // scope 8 at src/main.rs:200:20: 200:44
                                         // mir::Constant
                                         // + span: src/main.rs:200:34: 200:42
                                         // + literal: Const { ty: fn(tokio_core::net::TcpListener) -> tokio_core::net::Incoming {tokio_core::net::TcpListener::incoming}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_42);                // scope 8 at src/main.rs:200:43: 200:44
        StorageLive(_43);                // scope 8 at src/main.rs:200:54: 203:6
        StorageLive(_44);                // scope 8 at src/main.rs:200:54: 203:6
        _44 = &_37;                      // scope 8 at src/main.rs:200:54: 203:6
        StorageLive(_45);                // scope 8 at src/main.rs:200:54: 203:6
        _45 = &_3;                       // scope 8 at src/main.rs:200:54: 203:6
        StorageLive(_46);                // scope 8 at src/main.rs:200:54: 203:6
        _46 = &_38;                      // scope 8 at src/main.rs:200:54: 203:6
        (_43.0: &hyper::server::Http) = move _44; // scope 8 at src/main.rs:200:54: 203:6
        (_43.1: &tokio_core::reactor::Handle) = move _45; // scope 8 at src/main.rs:200:54: 203:6
        (_43.2: &std::rc::Rc<Context>) = move _46; // scope 8 at src/main.rs:200:54: 203:6
        StorageDead(_46);                // scope 8 at src/main.rs:203:5: 203:6
        StorageDead(_45);                // scope 8 at src/main.rs:203:5: 203:6
        StorageDead(_44);                // scope 8 at src/main.rs:203:5: 203:6
        _40 = <tokio_core::net::Incoming as futures::Stream>::for_each::<[closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>(move _41, move _43) -> [return: bb22, unwind: bb31]; // scope 8 at src/main.rs:200:20: 203:7
                                         // mir::Constant
                                         // + span: src/main.rs:200:45: 200:53
                                         // + literal: Const { ty: fn(tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6]) -> futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>> {<tokio_core::net::Incoming as futures::Stream>::for_each::<[closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        StorageDead(_43);                // scope 8 at src/main.rs:203:6: 203:7
        StorageDead(_41);                // scope 8 at src/main.rs:203:6: 203:7
        StorageLive(_47);                // scope 9 at src/main.rs:205:5: 205:50
        StorageLive(_48);                // scope 9 at src/main.rs:205:5: 205:41
        StorageLive(_49);                // scope 9 at src/main.rs:205:5: 205:36
        StorageLive(_50);                // scope 9 at src/main.rs:205:5: 205:9
        _50 = &mut _1;                   // scope 9 at src/main.rs:205:5: 205:9
        StorageLive(_51);                // scope 9 at src/main.rs:205:14: 205:35
        StorageLive(_52);                // scope 9 at src/main.rs:205:14: 205:20
        _55 = const false;               // scope 9 at src/main.rs:205:14: 205:20
        _52 = move _21;                  // scope 9 at src/main.rs:205:14: 205:20
        StorageLive(_53);                // scope 9 at src/main.rs:205:26: 205:34
        _53 = move _40;                  // scope 9 at src/main.rs:205:26: 205:34
        _51 = <ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>> as futures::Future>::join::<ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>(move _52, move _53) -> [return: bb23, unwind: bb31]; // scope 9 at src/main.rs:205:14: 205:35
                                         // mir::Constant
                                         // + span: src/main.rs:205:21: 205:25
                                         // + literal: Const { ty: fn(futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>) -> futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, <futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>> as futures::IntoFuture>::Future> {<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>> as futures::Future>::join::<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb23: {
        StorageDead(_53);                // scope 9 at src/main.rs:205:34: 205:35
        StorageDead(_52);                // scope 9 at src/main.rs:205:34: 205:35
        _49 = Core::run::<futures::Join<ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>>(move _50, move _51) -> [return: bb24, unwind: bb31]; // scope 9 at src/main.rs:205:5: 205:36
                                         // mir::Constant
                                         // + span: src/main.rs:205:10: 205:13
                                         // + literal: Const { ty: for<'r> fn(&'r mut tokio_core::reactor::Core, futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>) -> std::result::Result<<futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>> as futures::Future>::Item, <futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>> as futures::Future>::Error> {tokio_core::reactor::Core::run::<futures::Join<futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:148:50: 194:6], std::result::Result<(), std::io::Error>>, futures::stream::ForEach<tokio_core::net::Incoming, [closure@src/main.rs:200:54: 203:6], std::result::Result<(), std::io::Error>>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb24: {
        StorageDead(_51);                // scope 9 at src/main.rs:205:35: 205:36
        StorageDead(_50);                // scope 9 at src/main.rs:205:35: 205:36
        _48 = std::result::Result::<((), ()), std::io::Error>::ok(move _49) -> [return: bb25, unwind: bb31]; // scope 9 at src/main.rs:205:5: 205:41
                                         // mir::Constant
                                         // + span: src/main.rs:205:37: 205:39
                                         // + literal: Const { ty: fn(std::result::Result<((), ()), std::io::Error>) -> std::option::Option<((), ())> {std::result::Result::<((), ()), std::io::Error>::ok}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        StorageDead(_49);                // scope 9 at src/main.rs:205:40: 205:41
        _47 = std::option::Option::<((), ())>::unwrap(move _48) -> [return: bb26, unwind: bb31]; // scope 9 at src/main.rs:205:5: 205:50
                                         // mir::Constant
                                         // + span: src/main.rs:205:42: 205:48
                                         // + literal: Const { ty: fn(std::option::Option<((), ())>) -> ((), ()) {std::option::Option::<((), ())>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb26: {
        StorageDead(_48);                // scope 9 at src/main.rs:205:49: 205:50
        StorageDead(_47);                // scope 9 at src/main.rs:205:50: 205:51
        StorageDead(_40);                // scope 8 at src/main.rs:206:1: 206:2
        drop(_38) -> [return: bb27, unwind: bb38]; // scope 7 at src/main.rs:206:1: 206:2
    }

    bb27: {
        StorageDead(_38);                // scope 7 at src/main.rs:206:1: 206:2
        StorageDead(_37);                // scope 6 at src/main.rs:206:1: 206:2
        _54 = const false;               // scope 5 at src/main.rs:206:1: 206:2
        StorageDead(_27);                // scope 5 at src/main.rs:206:1: 206:2
        _55 = const false;               // scope 4 at src/main.rs:206:1: 206:2
        StorageDead(_21);                // scope 4 at src/main.rs:206:1: 206:2
        drop(_15) -> [return: bb28, unwind: bb42]; // scope 3 at src/main.rs:206:1: 206:2
    }

    bb28: {
        StorageDead(_15);                // scope 3 at src/main.rs:206:1: 206:2
        _56 = const false;               // scope 2 at src/main.rs:206:1: 206:2
        StorageDead(_5);                 // scope 2 at src/main.rs:206:1: 206:2
        drop(_3) -> [return: bb29, unwind: bb35]; // scope 1 at src/main.rs:206:1: 206:2
    }

    bb29: {
        StorageDead(_3);                 // scope 1 at src/main.rs:206:1: 206:2
        drop(_1) -> bb30;                // scope 0 at src/main.rs:206:1: 206:2
    }

    bb30: {
        StorageDead(_1);                 // scope 0 at src/main.rs:206:1: 206:2
        return;                          // scope 0 at src/main.rs:206:2: 206:2
    }

    bb31 (cleanup): {
        drop(_38) -> bb38;               // scope 7 at src/main.rs:206:1: 206:2
    }

    bb32 (cleanup): {
        drop(_15) -> bb42;               // scope 3 at src/main.rs:206:1: 206:2
    }

    bb33 (cleanup): {
        drop(_17) -> bb42;               // scope 3 at src/main.rs:146:5: 146:6
    }

    bb34 (cleanup): {
        drop(_3) -> bb35;                // scope 1 at src/main.rs:206:1: 206:2
    }

    bb35 (cleanup): {
        drop(_1) -> bb36;                // scope 0 at src/main.rs:206:1: 206:2
    }

    bb36 (cleanup): {
        resume;                          // scope 0 at src/main.rs:137:1: 206:2
    }

    bb37 (cleanup): {
        drop(_27) -> bb40;               // scope 5 at src/main.rs:206:1: 206:2
    }

    bb38 (cleanup): {
        switchInt(_54) -> [false: bb40, otherwise: bb37]; // scope 5 at src/main.rs:206:1: 206:2
    }

    bb39 (cleanup): {
        drop(_21) -> bb32;               // scope 4 at src/main.rs:206:1: 206:2
    }

    bb40 (cleanup): {
        switchInt(_55) -> [false: bb32, otherwise: bb39]; // scope 4 at src/main.rs:206:1: 206:2
    }

    bb41 (cleanup): {
        drop(_5) -> bb34;                // scope 2 at src/main.rs:206:1: 206:2
    }

    bb42 (cleanup): {
        switchInt(_56) -> [false: bb34, otherwise: bb41]; // scope 2 at src/main.rs:206:1: 206:2
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &[u8]) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _10: usize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _11: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _12: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _13: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _14: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _15: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _9 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _10 = const 4_usize;             // scope 0 at src/main.rs:54:10: 54:21
        _11 = Eq(move _9, move _10);     // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _11) -> [false: bb6, otherwise: bb1]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb1: {
        switchInt((*_2)[0 of 4]) -> [117_u8: bb2, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        switchInt((*_2)[1 of 4]) -> [97_u8: bb3, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb3: {
        switchInt((*_2)[2 of 4]) -> [105_u8: bb4, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        switchInt((*_2)[3 of 4]) -> [100_u8: bb29, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb5: {
        StorageLive(_15);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_15) = 3;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _15; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_15);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb32;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb6: {
        _6 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _7 = const 10_usize;             // scope 0 at src/main.rs:54:10: 54:21
        _8 = Eq(move _6, move _7);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _8) -> [false: bb17, otherwise: bb7]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb7: {
        switchInt((*_2)[0 of 10]) -> [99_u8: bb8, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb8: {
        switchInt((*_2)[1 of 10]) -> [104_u8: bb9, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb9: {
        switchInt((*_2)[2 of 10]) -> [97_u8: bb10, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb10: {
        switchInt((*_2)[3 of 10]) -> [110_u8: bb11, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb11: {
        switchInt((*_2)[4 of 10]) -> [110_u8: bb12, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb12: {
        switchInt((*_2)[5 of 10]) -> [101_u8: bb13, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb13: {
        switchInt((*_2)[6 of 10]) -> [108_u8: bb14, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb14: {
        switchInt((*_2)[7 of 10]) -> [73_u8: bb15, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb15: {
        switchInt((*_2)[8 of 10]) -> [68_u8: bb16, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb16: {
        switchInt((*_2)[9 of 10]) -> [115_u8: bb30, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb17: {
        _3 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const 11_usize;             // scope 0 at src/main.rs:54:10: 54:21
        _5 = Eq(move _3, move _4);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _5) -> [false: bb5, otherwise: bb18]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb18: {
        switchInt((*_2)[0 of 11]) -> [117_u8: bb19, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb19: {
        switchInt((*_2)[1 of 11]) -> [115_u8: bb20, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb20: {
        switchInt((*_2)[2 of 11]) -> [101_u8: bb21, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb21: {
        switchInt((*_2)[3 of 11]) -> [95_u8: bb22, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb22: {
        switchInt((*_2)[4 of 11]) -> [119_u8: bb23, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb23: {
        switchInt((*_2)[5 of 11]) -> [101_u8: bb24, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb24: {
        switchInt((*_2)[6 of 11]) -> [98_u8: bb25, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb25: {
        switchInt((*_2)[7 of 11]) -> [112_u8: bb26, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb26: {
        switchInt((*_2)[8 of 11]) -> [117_u8: bb27, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb27: {
        switchInt((*_2)[9 of 11]) -> [115_u8: bb28, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb28: {
        switchInt((*_2)[10 of 11]) -> [104_u8: bb31, otherwise: bb5]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb29: {
        StorageLive(_12);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_12) = 0;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _12; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_12);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb32;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb30: {
        StorageLive(_13);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_13) = 1;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _13; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_13);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb32;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb31: {
        StorageLive(_14);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_14) = 2;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _14; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_14);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb32;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb32: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

const _IMPL_SERIALIZE_FOR_Update: () = {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:118:10: 118:19

    bb0: {
        _0 = const ();                   // scope 0 at src/main.rs:118:10: 118:19
        return;                          // scope 0 at src/main.rs:118:10: 118:19
    }
}

const VARIANTS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: &[&str; 3];              // in scope 0 at src/main.rs:54:10: 54:21
    let _2: &[&str; 3];                  // in scope 0 at src/main.rs:54:10: 54:21
    let _3: [&str; 3];                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &[&str; 3];              // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const VARIANTS::promoted[0]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &[&str; 3]
                                         // + val: Unevaluated(VARIANTS, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:306 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::VARIANTS), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _2 = &(*_4);                     // scope 0 at src/main.rs:54:10: 54:21
        _1 = &(*_2);                     // scope 0 at src/main.rs:54:10: 54:21
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_1);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

promoted[0] in VARIANTS: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: [&str; 3];               // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _1 = [const "hello", const "register", const "unregister"]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "struct variant ClientMessage::Register"; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 82, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [274877906943], len: Size { raw: 38 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 38 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 82, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [274877906943], len: Size { raw: 38 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 38 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_bytes(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &[u8]) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: usize;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _10: usize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _11: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _12: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _13: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _14: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let _15: &std::borrow::Cow<str>;     // in scope 0 at src/main.rs:54:10: 54:21
    let _16: std::borrow::Cow<str>;      // in scope 0 at src/main.rs:54:10: 54:21
    let mut _17: &[u8];                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _18: __E;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _19: &str;                   // in scope 0 at src/main.rs:54:10: 54:21
    let _20: &str;                       // in scope 0 at src/main.rs:54:10: 54:21
    let mut _21: &std::borrow::Cow<str>; // in scope 0 at src/main.rs:54:10: 54:21
    scope 1 {
        debug __value => _15;            // in scope 1 at src/main.rs:54:10: 54:21
    }

    bb0: {
        _9 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _10 = const 5_usize;             // scope 0 at src/main.rs:54:10: 54:21
        _11 = Eq(move _9, move _10);     // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _11) -> [false: bb7, otherwise: bb1]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb1: {
        switchInt((*_2)[0 of 5]) -> [104_u8: bb2, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        switchInt((*_2)[1 of 5]) -> [101_u8: bb3, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb3: {
        switchInt((*_2)[2 of 5]) -> [108_u8: bb4, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        switchInt((*_2)[3 of 5]) -> [108_u8: bb5, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb5: {
        switchInt((*_2)[4 of 5]) -> [111_u8: bb27, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageLive(_15);                // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_16);                // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_17);                // scope 0 at src/main.rs:54:10: 54:21
        _17 = _2;                        // scope 0 at src/main.rs:54:10: 54:21
        _16 = from_utf8_lossy(move _17) -> bb30; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r> fn(&'r [u8]) -> std::borrow::Cow<'r, str> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::export::from_utf8_lossy}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        _6 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _7 = const 8_usize;              // scope 0 at src/main.rs:54:10: 54:21
        _8 = Eq(move _6, move _7);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _8) -> [false: bb16, otherwise: bb8]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb8: {
        switchInt((*_2)[0 of 8]) -> [114_u8: bb9, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb9: {
        switchInt((*_2)[1 of 8]) -> [101_u8: bb10, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb10: {
        switchInt((*_2)[2 of 8]) -> [103_u8: bb11, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb11: {
        switchInt((*_2)[3 of 8]) -> [105_u8: bb12, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb12: {
        switchInt((*_2)[4 of 8]) -> [115_u8: bb13, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb13: {
        switchInt((*_2)[5 of 8]) -> [116_u8: bb14, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb14: {
        switchInt((*_2)[6 of 8]) -> [101_u8: bb15, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb15: {
        switchInt((*_2)[7 of 8]) -> [114_u8: bb28, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb16: {
        _3 = Len((*_2));                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const 10_usize;             // scope 0 at src/main.rs:54:10: 54:21
        _5 = Eq(move _3, move _4);       // scope 0 at src/main.rs:54:10: 54:21
        switchInt(move _5) -> [false: bb6, otherwise: bb17]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb17: {
        switchInt((*_2)[0 of 10]) -> [117_u8: bb18, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb18: {
        switchInt((*_2)[1 of 10]) -> [110_u8: bb19, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb19: {
        switchInt((*_2)[2 of 10]) -> [114_u8: bb20, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb20: {
        switchInt((*_2)[3 of 10]) -> [101_u8: bb21, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb21: {
        switchInt((*_2)[4 of 10]) -> [103_u8: bb22, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb22: {
        switchInt((*_2)[5 of 10]) -> [105_u8: bb23, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb23: {
        switchInt((*_2)[6 of 10]) -> [115_u8: bb24, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb24: {
        switchInt((*_2)[7 of 10]) -> [116_u8: bb25, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb25: {
        switchInt((*_2)[8 of 10]) -> [101_u8: bb26, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb26: {
        switchInt((*_2)[9 of 10]) -> [114_u8: bb29, otherwise: bb6]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb27: {
        StorageLive(_12);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_12) = 0;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _12; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_12);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb28: {
        StorageLive(_13);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_13) = 1;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _13; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_13);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb29: {
        StorageLive(_14);                // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_14) = 2;           // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _14; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_14);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb30: {
        StorageDead(_17);                // scope 0 at src/main.rs:54:20: 54:21
        _15 = &_16;                      // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_18);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_19);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_20);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_21);                // scope 1 at src/main.rs:54:10: 54:21
        _21 = _15;                       // scope 1 at src/main.rs:54:10: 54:21
        _20 = <Cow<str> as Deref>::deref(move _21) -> [return: bb31, unwind: bb35]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r> fn(&'r std::borrow::Cow<str>) -> &'r <std::borrow::Cow<str> as std::ops::Deref>::Target {<std::borrow::Cow<str> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        _19 = _20;                       // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_21);                // scope 1 at src/main.rs:54:20: 54:21
        _18 = <__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::unknown_variant(move _19, const VARIANTS) -> [return: bb32, unwind: bb35]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r> fn(&'r str, &'static [&'static str]) -> __E {<__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::unknown_variant}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &[&str]
                                         // + val: Unevaluated(VARIANTS, [], None)
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:306 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::VARIANTS), const_param_did: None }, substs_: Some([]), promoted: None }) }
    }

    bb32: {
        StorageDead(_19);                // scope 1 at src/main.rs:54:20: 54:21
        ((_0 as Err).0: __E) = move _18; // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_18);                // scope 1 at src/main.rs:54:20: 54:21
        drop(_16) -> bb33;               // scope 0 at src/main.rs:54:20: 54:21
    }

    bb33: {
        StorageDead(_16);                // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_15);                // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_20);                // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb34: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }

    bb35 (cleanup): {
        drop(_16) -> bb36;               // scope 0 at src/main.rs:54:20: 54:21
    }

    bb36 (cleanup): {
        resume;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:284:9: 288:10>::from(_1: errors::Error) -> errors::ErrorKind {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:285:21: 285:22
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:285:40: 285:44

    bb0: {
        _0 = move (_1.0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:286:17: 286:20
        drop((_1.1: error_chain::State)) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:287:13: 287:14
    }

    bb1: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:287:14: 287:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:208:9: 212:10>::from(_1: &str) -> errors::Error {
    debug s => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:209:21: 209:22
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:209:36: 209:40
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:48
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:41

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:48
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:41
        _3 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:41
        _2 = <&str as Into<errors::ErrorKind>>::into(move _3) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:40: 210:48
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:42: 210:46
                                         // + literal: Const { ty: fn(&str) -> errors::ErrorKind {<&str as std::convert::Into<errors::ErrorKind>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:47: 210:48
        _0 = errors::Error::from_kind(move _2) -> bb2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:17: 210:49
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:17: 210:39
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:210:48: 210:49
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:211:14: 211:14
    }
}

const _IMPL_SERIALIZE_FOR_ServerMessage: () = {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:76:10: 76:19

    bb0: {
        _0 = const ();                   // scope 0 at src/main.rs:76:10: 76:19
        return;                          // scope 0 at src/main.rs:76:10: 76:19
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process::{closure#0}(_1: &mut [closure@src/main.rs:297:29: 297:41], _2: ()) -> errors::Error {
    let mut _0: errors::Error;           // return place in scope 0 at src/main.rs:297:33: 297:33

    bb0: {
        begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panic.rs:18:9: 18:50
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panic.rs:18:9: 18:32
                                         // + literal: Const { ty: fn(&str) -> ! {std::rt::begin_panic::<&str>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [101, 120, 112, 108, 105, 99, 105, 116, 32, 112, 97, 110, 105, 99], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 })
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panic.rs:18:33: 18:49
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [101, 120, 112, 108, 105, 99, 105, 116, 32, 112, 97, 110, 105, 99], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 }) }
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#3}(_1: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], _2: &errors::ErrorKind, _3: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug f => _3;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:13: 352:14
    debug err => (*((*_1).0: &&serde_json::Error)); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:44: 352:44
    let mut _4: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _7: (&&serde_json::Error,);  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _8: &&serde_json::Error;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _9: &&serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _11: &&serde_json::Error;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _12: for<'r, 's, 't0> fn(&'r &serde_json::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _13: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _14: &[&str];                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _15: &[&str; 1];             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let _16: &[&str; 1];                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    scope 1 {
        debug arg0 => _9;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    }
    scope 2 {
        debug args => _13;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        scope 3 {
            let mut _19: &[&str; 1];     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        }
    }

    bb0: {
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        _4 = &mut (*_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        StorageLive(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _8 = ((*_1).0: &&serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        (_7.0: &&serde_json::Error) = move _8; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_9);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _9 = (_7.0: &&serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _11 = _9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_12);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _12 = <&serde_json::Error as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &serde_json::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &serde_json::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&serde_json::Error as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<&serde_json::Error>(move _11, move _12) -> bb1; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b &serde_json::Error, for<'r, 's, 't0> fn(&'r &serde_json::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&serde_json::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_11);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _6 = [move _10];                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _13 = &_6;                       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_14);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _19 = const <errors::ErrorKind as std::fmt::Display>::fmt::{closure#3}::promoted[0]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<errors::ErrorKind as std::fmt::Display>::fmt::{closure#3}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:276 ~ webpush_server[6b79]::errors::{impl#17}::fmt::{closure#3}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _16 = _19;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _15 = _16;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageDead(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:36: 255:37
        StorageLive(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _18 = _13;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _5 = Arguments::new_v1(move _14, move _17) -> bb2; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_14);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_16);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _0 = std::fmt::Formatter::write_fmt(move _4, move _5) -> bb3; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:34: 479:80
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:39: 479:48
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, std::fmt::Arguments<'s>) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_fmt}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:81: 352:81
    }
}

promoted[0] in errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#3}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _1: [&str; 1];               // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37

    bb0: {
        _1 = [const ""];                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 }) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt(_1: &errors::ErrorKind, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:265:20: 265:25
    debug fmt => _2;                     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:265:27: 265:30
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:266:20: 266:38
    let mut _3: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:9: 497:39
    let _4: &std::string::String;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _6: &&std::string::String;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
    let mut _7: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
    let mut _8: (&errors::ErrorKind, &mut std::fmt::Formatter); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
    let mut _9: &errors::ErrorKind;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
    let mut _10: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
    let _11: &tungstenite::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _13: &&tungstenite::Error;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
    let mut _14: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
    let mut _15: (&errors::ErrorKind, &mut std::fmt::Formatter); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
    let mut _16: &errors::ErrorKind;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
    let mut _17: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
    let _18: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _20: &&std::io::Error;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
    let mut _21: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
    let mut _22: (&errors::ErrorKind, &mut std::fmt::Formatter); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
    let mut _23: &errors::ErrorKind;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
    let mut _24: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
    let _25: &serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _27: &&serde_json::Error;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
    let mut _28: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
    let mut _29: (&errors::ErrorKind, &mut std::fmt::Formatter); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
    let mut _30: &errors::ErrorKind;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
    let mut _31: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
    scope 1 {
        debug s => _4;                   // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        let _5: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        scope 2 {
            debug display_fn => _5;      // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        }
    }
    scope 3 {
        debug err => _11;                // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        let _12: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        scope 4 {
            debug display_fn => _12;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        }
    }
    scope 5 {
        debug err => _18;                // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        let _19: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        scope 6 {
            debug display_fn => _19;     // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        }
    }
    scope 7 {
        debug err => _25;                // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        let _26: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81]; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        scope 8 {
            debug display_fn => _26;     // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:268:23: 268:28
        switchInt(move _3) -> [0_isize: bb3, 1_isize: bb5, 2_isize: bb7, 3_isize: bb1, otherwise: bb2]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:268:17: 268:28
    }

    bb1: {
        StorageLive(_25);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _25 = &(((*_1) as Json).0: serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_26);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        StorageLive(_27);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        _27 = &_25;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        (_26.0: &&serde_json::Error) = move _27; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        StorageDead(_27);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageLive(_28);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        _28 = &_26;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        StorageLive(_29);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        StorageLive(_30);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        _30 = _1;                        // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        StorageLive(_31);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        _31 = &mut (*_2);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        (_29.0: &errors::ErrorKind) = move _30; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        (_29.1: &mut std::fmt::Formatter) = move _31; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        _0 = <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call(move _28, move _29) -> bb9; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
                                         // + literal: Const { ty: for<'r> extern "rust-call" fn(&'r [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], (&errors::ErrorKind, &mut std::fmt::Formatter)) -> <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::FnOnce<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::Output {<[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:268:23: 268:28
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _4 = &(((*_1) as Msg).0: std::string::String); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        StorageLive(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        _6 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        (_5.0: &&std::string::String) = move _6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        StorageDead(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageLive(_7);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        _7 = &_5;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        StorageLive(_8);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        StorageLive(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        _9 = _1;                         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        StorageLive(_10);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        _10 = &mut (*_2);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        (_8.0: &errors::ErrorKind) = move _9; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        (_8.1: &mut std::fmt::Formatter) = move _10; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        _0 = <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call(move _7, move _8) -> bb4; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
                                         // + literal: Const { ty: for<'r> extern "rust-call" fn(&'r [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], (&errors::ErrorKind, &mut std::fmt::Formatter)) -> <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::FnOnce<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::Output {<[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_10);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_8);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_7);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
    }

    bb5: {
        StorageLive(_11);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _11 = &(((*_1) as Ws).0: tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_12);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        StorageLive(_13);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        _13 = &_11;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        (_12.0: &&tungstenite::Error) = move _13; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        StorageDead(_13);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageLive(_14);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        _14 = &_12;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        StorageLive(_15);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        StorageLive(_16);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        _16 = _1;                        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        StorageLive(_17);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        _17 = &mut (*_2);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        (_15.0: &errors::ErrorKind) = move _16; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        (_15.1: &mut std::fmt::Formatter) = move _17; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        _0 = <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call(move _14, move _15) -> bb6; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
                                         // + literal: Const { ty: for<'r> extern "rust-call" fn(&'r [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], (&errors::ErrorKind, &mut std::fmt::Formatter)) -> <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::FnOnce<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::Output {<[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_17);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_16);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_15);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_14);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_12);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        StorageDead(_11);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
    }

    bb7: {
        StorageLive(_18);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _18 = &(((*_1) as Io).0: std::io::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_19);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:274:33: 274:43
        StorageLive(_20);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        _20 = &_18;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        (_19.0: &&std::io::Error) = move _20; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81
        StorageDead(_20);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageLive(_21);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        _21 = &_19;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
        StorageLive(_22);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        StorageLive(_23);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        _23 = _1;                        // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:40: 278:44
        StorageLive(_24);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        _24 = &mut (*_2);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:46: 278:49
        (_22.0: &errors::ErrorKind) = move _23; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        (_22.1: &mut std::fmt::Formatter) = move _24; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
        _0 = <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call(move _21, move _22) -> bb8; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:29: 278:39
                                         // + literal: Const { ty: for<'r> extern "rust-call" fn(&'r [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], (&errors::ErrorKind, &mut std::fmt::Formatter)) -> <[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::FnOnce<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::Output {<[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81] as std::ops::Fn<(&errors::ErrorKind, &mut std::fmt::Formatter)>>::call}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_24);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_23);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_22);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_21);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_19);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        StorageDead(_18);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
    }

    bb9: {
        StorageDead(_31);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_30);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_29);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_28);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:278:49: 278:50
        StorageDead(_26);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        StorageDead(_25);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:279:25: 279:26
    }

    bb10: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:282:14: 282:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:113:9: 148:10>::kind(_1: &errors::Error) -> &errors::ErrorKind {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:135:25: 135:30
    let mut _0: &errors::ErrorKind;      // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:136:17: 136:24

    bb0: {
        _0 = &((*_1).0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:136:17: 136:24
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:137:14: 137:14
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "struct variant ClientMessage::Hello"; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 72, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [34359738367], len: Size { raw: 35 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 35 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 114, 117, 99, 116, 32, 118, 97, 114, 105, 97, 110, 116, 32, 67, 108, 105, 101, 110, 116, 77, 101, 115, 115, 97, 103, 101, 58, 58, 72, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [34359738367], len: Size { raw: 35 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 35 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::backtrace(_1: &errors::Error) -> std::option::Option<&error_chain::Backtrace> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:103:26: 103:31
    let mut _0: std::option::Option<&error_chain::Backtrace>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:103:36: 103:62
    let mut _2: &errors::Error;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:17: 104:21

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:17: 104:21
        _2 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:17: 104:21
        _0 = errors::Error::backtrace(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:17: 104:33
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:22: 104:31
                                         // + literal: Const { ty: for<'r> fn(&'r errors::Error) -> std::option::Option<&'r error_chain::Backtrace> {errors::Error::backtrace}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:104:32: 104:33
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:105:14: 105:14
    }
}

fn parse(_1: tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {
    debug message => _1;                 // in scope 0 at src/main.rs:208:10: 208:17
    let mut _0: std::result::Result<ClientMessage, errors::Error>; // return place in scope 0 at src/main.rs:208:31: 208:52
    let mut _2: isize;                   // in scope 0 at src/main.rs:210:9: 210:25
    let _3: std::string::String;         // in scope 0 at src/main.rs:210:23: 210:24
    let _4: ();                          // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _7: (&std::string::String,); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _8: &std::string::String;    // in scope 0 at src/main.rs:211:34: 211:35
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _11: &std::string::String;   // in scope 0 at src/main.rs:211:34: 211:35
    let mut _12: for<'r, 's, 't0> fn(&'r std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:211:34: 211:35
    let mut _14: &[&str];                // in scope 0 at src/main.rs:211:22: 211:32
    let mut _15: &[&str; 2];             // in scope 0 at src/main.rs:211:22: 211:32
    let _16: &[&str; 2];                 // in scope 0 at src/main.rs:211:22: 211:32
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _19: std::result::Result<ClientMessage, serde_json::Error>; // in scope 0 at src/main.rs:212:13: 212:37
    let mut _20: &str;                   // in scope 0 at src/main.rs:212:34: 212:36
    let _21: &str;                       // in scope 0 at src/main.rs:212:34: 212:36
    let mut _22: &std::string::String;   // in scope 0 at src/main.rs:212:34: 212:36
    let _23: &std::string::String;       // in scope 0 at src/main.rs:212:34: 212:36
    let mut _24: [closure@src/main.rs:212:48: 212:70]; // in scope 0 at src/main.rs:212:48: 212:70
    let _25: std::vec::Vec<u8>;          // in scope 0 at src/main.rs:214:25: 214:30
    let mut _26: std::result::Result<ClientMessage, serde_json::Error>; // in scope 0 at src/main.rs:215:13: 215:43
    let mut _27: &[u8];                  // in scope 0 at src/main.rs:215:36: 215:42
    let _28: &[u8];                      // in scope 0 at src/main.rs:215:36: 215:42
    let mut _29: &std::vec::Vec<u8>;     // in scope 0 at src/main.rs:215:36: 215:42
    let _30: &std::vec::Vec<u8>;         // in scope 0 at src/main.rs:215:36: 215:42
    let mut _31: [closure@src/main.rs:215:54: 215:77]; // in scope 0 at src/main.rs:215:54: 215:77
    scope 1 {
        debug s => _3;                   // in scope 1 at src/main.rs:210:23: 210:24
        let _9: &std::string::String;    // in scope 1 at src/main.rs:211:34: 211:35
        let _13: &[std::fmt::ArgumentV1; 1]; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 2 {
            debug arg0 => _9;            // in scope 2 at src/main.rs:211:34: 211:35
        }
        scope 3 {
            debug args => _13;           // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            scope 4 {
                let mut _32: &[&str; 2]; // in scope 4 at src/main.rs:211:22: 211:32
            }
        }
    }
    scope 5 {
        debug slice => _25;              // in scope 5 at src/main.rs:214:25: 214:30
    }

    bb0: {
        _2 = discriminant(_1);           // scope 0 at src/main.rs:209:11: 209:18
        switchInt(move _2) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at src/main.rs:209:5: 209:18
    }

    bb1: {
        StorageLive(_25);                // scope 0 at src/main.rs:214:25: 214:30
        _25 = move ((_1 as Binary).0: std::vec::Vec<u8>); // scope 0 at src/main.rs:214:25: 214:30
        StorageLive(_26);                // scope 5 at src/main.rs:215:13: 215:43
        StorageLive(_27);                // scope 5 at src/main.rs:215:36: 215:42
        StorageLive(_28);                // scope 5 at src/main.rs:215:36: 215:42
        StorageLive(_29);                // scope 5 at src/main.rs:215:36: 215:42
        StorageLive(_30);                // scope 5 at src/main.rs:215:36: 215:42
        _30 = &_25;                      // scope 5 at src/main.rs:215:36: 215:42
        _29 = _30;                       // scope 5 at src/main.rs:215:36: 215:42
        _28 = <Vec<u8> as Deref>::deref(move _29) -> [return: bb11, unwind: bb15]; // scope 5 at src/main.rs:215:36: 215:42
                                         // mir::Constant
                                         // + span: src/main.rs:215:36: 215:42
                                         // + literal: Const { ty: for<'r> fn(&'r std::vec::Vec<u8>) -> &'r <std::vec::Vec<u8> as std::ops::Deref>::Target {<std::vec::Vec<u8> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:209:11: 209:18
    }

    bb3: {
        StorageLive(_3);                 // scope 0 at src/main.rs:210:23: 210:24
        _3 = move ((_1 as Text).0: std::string::String); // scope 0 at src/main.rs:210:23: 210:24
        StorageLive(_4);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_5);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_6);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_7);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_8);                 // scope 1 at src/main.rs:211:34: 211:35
        _8 = &_3;                        // scope 1 at src/main.rs:211:34: 211:35
        (_7.0: &std::string::String) = move _8; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_8);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_9);                 // scope 1 at src/main.rs:211:34: 211:35
        _9 = (_7.0: &std::string::String); // scope 1 at src/main.rs:211:34: 211:35
        StorageLive(_10);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_11);                // scope 2 at src/main.rs:211:34: 211:35
        _11 = _9;                        // scope 2 at src/main.rs:211:34: 211:35
        StorageLive(_12);                // scope 2 at src/main.rs:211:34: 211:35
        _12 = <std::string::String as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 2 at src/main.rs:211:34: 211:35
                                         // mir::Constant
                                         // + span: src/main.rs:211:34: 211:35
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<std::string::String>(move _11, move _12) -> [return: bb4, unwind: bb16]; // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String, for<'r, 's, 't0> fn(&'r std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<std::string::String>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_12);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_11);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _6 = [move _10];                 // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_10);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageLive(_13);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _13 = &_6;                       // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_14);                // scope 4 at src/main.rs:211:22: 211:32
        StorageLive(_15);                // scope 4 at src/main.rs:211:22: 211:32
        StorageLive(_16);                // scope 4 at src/main.rs:211:22: 211:32
        _32 = const parse::promoted[0];  // scope 4 at src/main.rs:211:22: 211:32
                                         // ty::Const
                                         // + ty: &[&str; 2]
                                         // + val: Unevaluated(parse, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:211:22: 211:32
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:130 ~ webpush_server[6b79]::parse), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _16 = _32;                       // scope 4 at src/main.rs:211:22: 211:32
        _15 = _16;                       // scope 4 at src/main.rs:211:22: 211:32
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 4 at src/main.rs:211:22: 211:32
        StorageDead(_15);                // scope 4 at src/main.rs:211:31: 211:32
        StorageLive(_17);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_18);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _18 = _13;                       // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_18);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _5 = Arguments::new_v1(move _14, move _17) -> [return: bb5, unwind: bb16]; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_17);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_14);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_16);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_13);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _4 = _print(move _5) -> [return: bb6, unwind: bb16]; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_5);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_7);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_6);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageDead(_4);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_19);                // scope 1 at src/main.rs:212:13: 212:37
        StorageLive(_20);                // scope 1 at src/main.rs:212:34: 212:36
        StorageLive(_21);                // scope 1 at src/main.rs:212:34: 212:36
        StorageLive(_22);                // scope 1 at src/main.rs:212:34: 212:36
        StorageLive(_23);                // scope 1 at src/main.rs:212:34: 212:36
        _23 = &_3;                       // scope 1 at src/main.rs:212:34: 212:36
        _22 = _23;                       // scope 1 at src/main.rs:212:34: 212:36
        _21 = <std::string::String as Deref>::deref(move _22) -> [return: bb7, unwind: bb16]; // scope 1 at src/main.rs:212:34: 212:36
                                         // mir::Constant
                                         // + span: src/main.rs:212:34: 212:36
                                         // + literal: Const { ty: for<'r> fn(&'r std::string::String) -> &'r <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        _20 = _21;                       // scope 1 at src/main.rs:212:34: 212:36
        StorageDead(_22);                // scope 1 at src/main.rs:212:35: 212:36
        _19 = serde_json::from_str::<ClientMessage>(move _20) -> [return: bb8, unwind: bb16]; // scope 1 at src/main.rs:212:13: 212:37
                                         // mir::Constant
                                         // + span: src/main.rs:212:13: 212:33
                                         // + literal: Const { ty: fn(&str) -> std::result::Result<ClientMessage, serde_json::Error> {serde_json::from_str::<ClientMessage>}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_20);                // scope 1 at src/main.rs:212:36: 212:37
        StorageLive(_24);                // scope 1 at src/main.rs:212:48: 212:70
        _0 = <std::result::Result<ClientMessage, serde_json::Error> as errors::ResultExt<ClientMessage, serde_json::Error>>::chain_err::<[closure@src/main.rs:212:48: 212:70], &str>(move _19, move _24) -> [return: bb9, unwind: bb16]; // scope 1 at src/main.rs:212:13: 212:71
                                         // mir::Constant
                                         // + span: src/main.rs:212:38: 212:47
                                         // + literal: Const { ty: fn(std::result::Result<ClientMessage, serde_json::Error>, [closure@src/main.rs:212:48: 212:70]) -> std::result::Result<ClientMessage, errors::Error> {<std::result::Result<ClientMessage, serde_json::Error> as errors::ResultExt<ClientMessage, serde_json::Error>>::chain_err::<[closure@src/main.rs:212:48: 212:70], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_24);                // scope 1 at src/main.rs:212:70: 212:71
        StorageDead(_19);                // scope 1 at src/main.rs:212:70: 212:71
        StorageDead(_23);                // scope 1 at src/main.rs:213:9: 213:10
        StorageDead(_21);                // scope 1 at src/main.rs:213:9: 213:10
        drop(_3) -> bb10;                // scope 0 at src/main.rs:213:9: 213:10
    }

    bb10: {
        StorageDead(_3);                 // scope 0 at src/main.rs:213:9: 213:10
        goto -> bb17;                    // scope 0 at src/main.rs:213:9: 213:10
    }

    bb11: {
        _27 = _28;                       // scope 5 at src/main.rs:215:36: 215:42
        StorageDead(_29);                // scope 5 at src/main.rs:215:41: 215:42
        _26 = from_slice::<ClientMessage>(move _27) -> [return: bb12, unwind: bb15]; // scope 5 at src/main.rs:215:13: 215:43
                                         // mir::Constant
                                         // + span: src/main.rs:215:13: 215:35
                                         // + literal: Const { ty: fn(&[u8]) -> std::result::Result<ClientMessage, serde_json::Error> {serde_json::from_slice::<ClientMessage>}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_27);                // scope 5 at src/main.rs:215:42: 215:43
        StorageLive(_31);                // scope 5 at src/main.rs:215:54: 215:77
        _0 = <std::result::Result<ClientMessage, serde_json::Error> as errors::ResultExt<ClientMessage, serde_json::Error>>::chain_err::<[closure@src/main.rs:215:54: 215:77], &str>(move _26, move _31) -> [return: bb13, unwind: bb15]; // scope 5 at src/main.rs:215:13: 215:78
                                         // mir::Constant
                                         // + span: src/main.rs:215:44: 215:53
                                         // + literal: Const { ty: fn(std::result::Result<ClientMessage, serde_json::Error>, [closure@src/main.rs:215:54: 215:77]) -> std::result::Result<ClientMessage, errors::Error> {<std::result::Result<ClientMessage, serde_json::Error> as errors::ResultExt<ClientMessage, serde_json::Error>>::chain_err::<[closure@src/main.rs:215:54: 215:77], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_31);                // scope 5 at src/main.rs:215:77: 215:78
        StorageDead(_26);                // scope 5 at src/main.rs:215:77: 215:78
        StorageDead(_30);                // scope 5 at src/main.rs:216:9: 216:10
        StorageDead(_28);                // scope 5 at src/main.rs:216:9: 216:10
        drop(_25) -> bb14;               // scope 0 at src/main.rs:216:9: 216:10
    }

    bb14: {
        StorageDead(_25);                // scope 0 at src/main.rs:216:9: 216:10
        goto -> bb17;                    // scope 0 at src/main.rs:216:9: 216:10
    }

    bb15 (cleanup): {
        drop(_25) -> bb18;               // scope 0 at src/main.rs:216:9: 216:10
    }

    bb16 (cleanup): {
        drop(_3) -> bb18;                // scope 0 at src/main.rs:213:9: 213:10
    }

    bb17: {
        return;                          // scope 0 at src/main.rs:218:2: 218:2
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at src/main.rs:208:1: 218:2
    }
}

promoted[0] in parse: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:211:22: 211:32
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:211:22: 211:32

    bb0: {
        _1 = [const "parse ", const "\n"]; // scope 0 at src/main.rs:211:22: 211:32
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [112, 97, 114, 115, 101, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:211:22: 211:32
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [112, 97, 114, 115, 101, 32], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 })
                                         // mir::Constant
                                         // + span: src/main.rs:211:22: 211:32
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1], len: Size { raw: 1 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 1 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:211:22: 211:32
        return;                          // scope 0 at src/main.rs:211:22: 211:32
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::from_kind(_1: errors::ErrorKind) -> errors::Error {
    debug kind => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:83:26: 83:30
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:83:52: 83:56
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:33: 84:37

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:33: 84:37
        _2 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:33: 84:37
        _0 = errors::Error::from_kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:17: 84:38
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:17: 84:32
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:84:37: 84:38
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:85:14: 85:14
    }
}

fn main::{closure#0}(_1: &mut [closure@src/main.rs:148:50: 194:6], _2: (tokio_core::net::TcpStream, std::net::SocketAddr)) -> std::result::Result<(), std::io::Error> {
    debug handle => (*((*_1).0: &tokio_core::reactor::Handle)); // in scope 0 at src/main.rs:139:9: 139:15
    debug cx => (*((*_1).1: &std::rc::Rc<Context>)); // in scope 0 at src/main.rs:143:9: 143:11
    let mut _0: std::result::Result<(), std::io::Error>; // return place in scope 0 at src/main.rs:148:67: 148:67
    let _3: tokio_core::net::TcpStream;  // in scope 0 at src/main.rs:148:52: 148:58
    let _4: std::net::SocketAddr;        // in scope 0 at src/main.rs:148:60: 148:64
    let mut _6: tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>; // in scope 0 at src/main.rs:151:18: 151:38
    let mut _7: tokio_core::net::TcpStream; // in scope 0 at src/main.rs:151:31: 151:37
    let mut _9: futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>; // in scope 0 at src/main.rs:152:22: 152:24
    let mut _10: [closure@src/main.rs:152:34: 157:10]; // in scope 0 at src/main.rs:152:34: 157:10
    let mut _13: futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]>; // in scope 0 at src/main.rs:159:30: 159:36
    let mut _14: std::time::Duration;    // in scope 0 at src/main.rs:159:38: 159:55
    let mut _15: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:159:57: 159:64
    let _16: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:159:57: 159:64
    let mut _18: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:166:23: 166:29
    let mut _20: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:167:19: 167:21
    let mut _22: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // in scope 0 at src/main.rs:168:21: 168:27
    let mut _23: [closure@src/main.rs:168:37: 178:10]; // in scope 0 at src/main.rs:168:37: 178:10
    let _24: ();                         // in scope 0 at src/main.rs:181:9: 192:12
    let mut _25: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:181:9: 181:15
    let mut _26: futures::Then<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, std::result::Result<(), ()>, [closure@src/main.rs:181:32: 192:10]>; // in scope 0 at src/main.rs:181:22: 192:11
    let mut _27: futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>; // in scope 0 at src/main.rs:181:22: 181:26
    let mut _28: [closure@src/main.rs:181:32: 192:10]; // in scope 0 at src/main.rs:181:32: 192:10
    let mut _29: bool;                   // in scope 0 at src/main.rs:194:5: 194:6
    let mut _30: bool;                   // in scope 0 at src/main.rs:194:5: 194:6
    let mut _31: bool;                   // in scope 0 at src/main.rs:194:5: 194:6
    scope 1 {
        debug socket => _3;              // in scope 1 at src/main.rs:148:52: 148:58
        debug addr => _4;                // in scope 1 at src/main.rs:148:60: 148:64
        let _5: futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>; // in scope 1 at src/main.rs:151:13: 151:15
        scope 2 {
            debug ws => _5;              // in scope 2 at src/main.rs:151:13: 151:15
            let _8: futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]>; // in scope 2 at src/main.rs:152:13: 152:19
            scope 3 {
                debug client => _8;      // in scope 3 at src/main.rs:152:13: 152:19
                let _11: std::time::Duration; // in scope 3 at src/main.rs:158:13: 158:30
                scope 4 {
                    debug handshake_timeout => _11; // in scope 4 at src/main.rs:158:13: 158:30
                    let _12: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // in scope 4 at src/main.rs:159:13: 159:19
                    scope 5 {
                        debug client => _12; // in scope 5 at src/main.rs:159:13: 159:19
                        let _17: tokio_core::reactor::Handle; // in scope 5 at src/main.rs:166:13: 166:20
                        scope 6 {
                            debug handle2 => _17; // in scope 6 at src/main.rs:166:13: 166:20
                            let _19: std::rc::Rc<Context>; // in scope 6 at src/main.rs:167:13: 167:16
                            scope 7 {
                                debug cx2 => _19; // in scope 7 at src/main.rs:167:13: 167:16
                                let _21: futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>; // in scope 7 at src/main.rs:168:13: 168:17
                                scope 8 {
                                    debug work => _21; // in scope 8 at src/main.rs:168:13: 168:17
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _30 = const false;               // scope 0 at src/main.rs:148:52: 148:58
        _29 = const false;               // scope 0 at src/main.rs:148:52: 148:58
        _31 = const false;               // scope 0 at src/main.rs:148:52: 148:58
        StorageLive(_3);                 // scope 0 at src/main.rs:148:52: 148:58
        _3 = move (_2.0: tokio_core::net::TcpStream); // scope 0 at src/main.rs:148:52: 148:58
        StorageLive(_4);                 // scope 0 at src/main.rs:148:60: 148:64
        _4 = (_2.1: std::net::SocketAddr); // scope 0 at src/main.rs:148:60: 148:64
        StorageLive(_5);                 // scope 1 at src/main.rs:151:13: 151:15
        StorageLive(_6);                 // scope 1 at src/main.rs:151:18: 151:38
        StorageLive(_7);                 // scope 1 at src/main.rs:151:31: 151:37
        _7 = move _3;                    // scope 1 at src/main.rs:151:31: 151:37
        _6 = accept_async::<tokio_core::net::TcpStream>(move _7) -> bb1; // scope 1 at src/main.rs:151:18: 151:38
                                         // mir::Constant
                                         // + span: src/main.rs:151:18: 151:30
                                         // + literal: Const { ty: fn(tokio_core::net::TcpStream) -> tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream> {tokio_tungstenite::accept_async::<tokio_core::net::TcpStream>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 1 at src/main.rs:151:37: 151:38
        _5 = <AcceptAsync<tokio_core::net::TcpStream> as futures::Future>::from_err::<errors::Error>(move _6) -> bb2; // scope 1 at src/main.rs:151:18: 151:49
                                         // mir::Constant
                                         // + span: src/main.rs:151:39: 151:47
                                         // + literal: Const { ty: fn(tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>) -> futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error> {<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream> as futures::Future>::from_err::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_6);                 // scope 1 at src/main.rs:151:48: 151:49
        StorageLive(_8);                 // scope 2 at src/main.rs:152:13: 152:19
        StorageLive(_9);                 // scope 2 at src/main.rs:152:22: 152:24
        _9 = move _5;                    // scope 2 at src/main.rs:152:22: 152:24
        StorageLive(_10);                // scope 2 at src/main.rs:152:34: 157:10
        _8 = <futures::future::FromErr<AcceptAsync<tokio_core::net::TcpStream>, errors::Error> as futures::Future>::and_then::<[closure@src/main.rs:152:34: 157:10], Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>>(move _9, move _10) -> bb3; // scope 2 at src/main.rs:152:22: 157:11
                                         // mir::Constant
                                         // + span: src/main.rs:152:25: 152:33
                                         // + literal: Const { ty: fn(futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, [closure@src/main.rs:152:34: 157:10]) -> futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]> {<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error> as futures::Future>::and_then::<[closure@src/main.rs:152:34: 157:10], std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        _31 = const true;                // scope 2 at src/main.rs:157:10: 157:11
        StorageDead(_10);                // scope 2 at src/main.rs:157:10: 157:11
        StorageDead(_9);                 // scope 2 at src/main.rs:157:10: 157:11
        StorageLive(_11);                // scope 3 at src/main.rs:158:13: 158:30
        _11 = std::time::Duration::new(const 30_u64, const 0_u32) -> [return: bb4, unwind: bb17]; // scope 3 at src/main.rs:158:33: 158:53
                                         // mir::Constant
                                         // + span: src/main.rs:158:33: 158:46
                                         // + literal: Const { ty: fn(u64, u32) -> std::time::Duration {std::time::Duration::new}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageLive(_12);                // scope 4 at src/main.rs:159:13: 159:19
        StorageLive(_13);                // scope 4 at src/main.rs:159:30: 159:36
        _31 = const false;               // scope 4 at src/main.rs:159:30: 159:36
        _13 = move _8;                   // scope 4 at src/main.rs:159:30: 159:36
        StorageLive(_14);                // scope 4 at src/main.rs:159:38: 159:55
        _14 = _11;                       // scope 4 at src/main.rs:159:38: 159:55
        StorageLive(_15);                // scope 4 at src/main.rs:159:57: 159:64
        StorageLive(_16);                // scope 4 at src/main.rs:159:57: 159:64
        _16 = ((*_1).0: &tokio_core::reactor::Handle); // scope 4 at src/main.rs:159:57: 159:64
        _15 = _16;                       // scope 4 at src/main.rs:159:57: 159:64
        _12 = timeout::<futures::AndThen<futures::future::FromErr<AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]>>(move _13, move _14, move _15) -> [return: bb5, unwind: bb17]; // scope 4 at src/main.rs:159:22: 159:65
                                         // mir::Constant
                                         // + span: src/main.rs:159:22: 159:29
                                         // + literal: Const { ty: for<'r> fn(futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]>, std::time::Duration, &'r tokio_core::reactor::Handle) -> std::boxed::Box<(dyn futures::Future<Error = errors::Error, Item = <futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]> as futures::Future>::Item> + 'static)> {timeout::<futures::AndThen<futures::future::FromErr<tokio_tungstenite::AcceptAsync<tokio_core::net::TcpStream>, errors::Error>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:152:34: 157:10]>>}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        _30 = const true;                // scope 4 at src/main.rs:159:64: 159:65
        StorageDead(_15);                // scope 4 at src/main.rs:159:64: 159:65
        StorageDead(_14);                // scope 4 at src/main.rs:159:64: 159:65
        StorageDead(_13);                // scope 4 at src/main.rs:159:64: 159:65
        StorageDead(_16);                // scope 4 at src/main.rs:159:65: 159:66
        StorageLive(_17);                // scope 5 at src/main.rs:166:13: 166:20
        StorageLive(_18);                // scope 5 at src/main.rs:166:23: 166:29
        _18 = ((*_1).0: &tokio_core::reactor::Handle); // scope 5 at src/main.rs:166:23: 166:29
        _17 = <Handle as Clone>::clone(move _18) -> [return: bb6, unwind: bb15]; // scope 5 at src/main.rs:166:23: 166:37
                                         // mir::Constant
                                         // + span: src/main.rs:166:30: 166:35
                                         // + literal: Const { ty: for<'r> fn(&'r tokio_core::reactor::Handle) -> tokio_core::reactor::Handle {<tokio_core::reactor::Handle as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        _29 = const true;                // scope 5 at src/main.rs:166:36: 166:37
        StorageDead(_18);                // scope 5 at src/main.rs:166:36: 166:37
        StorageLive(_19);                // scope 6 at src/main.rs:167:13: 167:16
        StorageLive(_20);                // scope 6 at src/main.rs:167:19: 167:21
        _20 = ((*_1).1: &std::rc::Rc<Context>); // scope 6 at src/main.rs:167:19: 167:21
        _19 = <Rc<Context> as Clone>::clone(move _20) -> [return: bb7, unwind: bb13]; // scope 6 at src/main.rs:167:19: 167:29
                                         // mir::Constant
                                         // + span: src/main.rs:167:22: 167:27
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_20);                // scope 6 at src/main.rs:167:28: 167:29
        StorageLive(_21);                // scope 7 at src/main.rs:168:13: 168:17
        StorageLive(_22);                // scope 7 at src/main.rs:168:21: 168:27
        _30 = const false;               // scope 7 at src/main.rs:168:21: 168:27
        _22 = move _12;                  // scope 7 at src/main.rs:168:21: 168:27
        StorageLive(_23);                // scope 7 at src/main.rs:168:37: 178:10
        _29 = const false;               // scope 7 at src/main.rs:168:37: 178:10
        (_23.0: std::rc::Rc<Context>) = move _19; // scope 7 at src/main.rs:168:37: 178:10
        (_23.1: tokio_core::reactor::Handle) = move _17; // scope 7 at src/main.rs:168:37: 178:10
        _21 = <Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> as futures::Future>::and_then::<[closure@src/main.rs:168:37: 178:10], futures::Then<Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>>(move _22, move _23) -> [return: bb8, unwind: bb13]; // scope 7 at src/main.rs:168:21: 178:11
                                         // mir::Constant
                                         // + span: src/main.rs:168:28: 168:36
                                         // + literal: Const { ty: fn(std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, [closure@src/main.rs:168:37: 178:10]) -> futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]> {<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> as futures::Future>::and_then::<[closure@src/main.rs:168:37: 178:10], futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>>}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_23);                // scope 7 at src/main.rs:178:10: 178:11
        StorageDead(_22);                // scope 7 at src/main.rs:178:10: 178:11
        StorageLive(_24);                // scope 8 at src/main.rs:181:9: 192:12
        StorageLive(_25);                // scope 8 at src/main.rs:181:9: 181:15
        _25 = ((*_1).0: &tokio_core::reactor::Handle); // scope 8 at src/main.rs:181:9: 181:15
        StorageLive(_26);                // scope 8 at src/main.rs:181:22: 192:11
        StorageLive(_27);                // scope 8 at src/main.rs:181:22: 181:26
        _27 = move _21;                  // scope 8 at src/main.rs:181:22: 181:26
        StorageLive(_28);                // scope 8 at src/main.rs:181:32: 192:10
        (_28.0: std::net::SocketAddr) = _4; // scope 8 at src/main.rs:181:32: 192:10
        _26 = <futures::AndThen<Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]> as futures::Future>::then::<[closure@src/main.rs:181:32: 192:10], std::result::Result<(), ()>>(move _27, move _28) -> [return: bb9, unwind: bb13]; // scope 8 at src/main.rs:181:22: 192:11
                                         // mir::Constant
                                         // + span: src/main.rs:181:27: 181:31
                                         // + literal: Const { ty: fn(futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, [closure@src/main.rs:181:32: 192:10]) -> futures::Then<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, std::result::Result<(), ()>, [closure@src/main.rs:181:32: 192:10]> {<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]> as futures::Future>::then::<[closure@src/main.rs:181:32: 192:10], std::result::Result<(), ()>>}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_28);                // scope 8 at src/main.rs:192:10: 192:11
        StorageDead(_27);                // scope 8 at src/main.rs:192:10: 192:11
        _24 = Handle::spawn::<futures::Then<futures::AndThen<Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, std::result::Result<(), ()>, [closure@src/main.rs:181:32: 192:10]>>(move _25, move _26) -> [return: bb10, unwind: bb13]; // scope 8 at src/main.rs:181:9: 192:12
                                         // mir::Constant
                                         // + span: src/main.rs:181:16: 181:21
                                         // + literal: Const { ty: for<'r> fn(&'r tokio_core::reactor::Handle, futures::Then<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, std::result::Result<(), ()>, [closure@src/main.rs:181:32: 192:10]>) {tokio_core::reactor::Handle::spawn::<futures::Then<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>, futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>, [closure@src/main.rs:168:37: 178:10]>, std::result::Result<(), ()>, [closure@src/main.rs:181:32: 192:10]>>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_26);                // scope 8 at src/main.rs:192:11: 192:12
        StorageDead(_25);                // scope 8 at src/main.rs:192:11: 192:12
        StorageDead(_24);                // scope 8 at src/main.rs:192:12: 192:13
        discriminant(_0) = 0;            // scope 8 at src/main.rs:193:9: 193:15
        StorageDead(_21);                // scope 7 at src/main.rs:194:5: 194:6
        StorageDead(_19);                // scope 6 at src/main.rs:194:5: 194:6
        _29 = const false;               // scope 5 at src/main.rs:194:5: 194:6
        StorageDead(_17);                // scope 5 at src/main.rs:194:5: 194:6
        _30 = const false;               // scope 4 at src/main.rs:194:5: 194:6
        StorageDead(_12);                // scope 4 at src/main.rs:194:5: 194:6
        StorageDead(_11);                // scope 3 at src/main.rs:194:5: 194:6
        _31 = const false;               // scope 2 at src/main.rs:194:5: 194:6
        StorageDead(_8);                 // scope 2 at src/main.rs:194:5: 194:6
        StorageDead(_5);                 // scope 1 at src/main.rs:194:5: 194:6
        StorageDead(_4);                 // scope 0 at src/main.rs:194:5: 194:6
        StorageDead(_3);                 // scope 0 at src/main.rs:194:5: 194:6
        return;                          // scope 0 at src/main.rs:194:6: 194:6
    }

    bb11 (cleanup): {
        resume;                          // scope 0 at src/main.rs:148:50: 194:6
    }

    bb12 (cleanup): {
        drop(_17) -> bb15;               // scope 5 at src/main.rs:194:5: 194:6
    }

    bb13 (cleanup): {
        switchInt(_29) -> [false: bb15, otherwise: bb12]; // scope 5 at src/main.rs:194:5: 194:6
    }

    bb14 (cleanup): {
        drop(_12) -> bb17;               // scope 4 at src/main.rs:194:5: 194:6
    }

    bb15 (cleanup): {
        switchInt(_30) -> [false: bb17, otherwise: bb14]; // scope 4 at src/main.rs:194:5: 194:6
    }

    bb16 (cleanup): {
        drop(_8) -> bb11;                // scope 2 at src/main.rs:194:5: 194:6
    }

    bb17 (cleanup): {
        switchInt(_31) -> [false: bb11, otherwise: bb16]; // scope 2 at src/main.rs:194:5: 194:6
    }
}

fn <impl at src/main.rs:465:1: 492:2>::poll(_1: &mut StreamNext<S1, S2>) -> std::result::Result<Async<std::option::Option<(Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:472:13: 472:22
    let mut _0: std::result::Result<futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error>; // return place in scope 0 at src/main.rs:472:27: 472:56
    let _2: futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>; // in scope 0 at src/main.rs:473:13: 473:17
    let _3: &mut S1;                     // in scope 0 at src/main.rs:474:17: 474:21
    let mut _4: std::option::Option<&mut S1>; // in scope 0 at src/main.rs:474:24: 474:42
    let mut _5: &mut std::option::Option<S1>; // in scope 0 at src/main.rs:474:24: 474:33
    let mut _7: std::option::Option<&mut S2>; // in scope 0 at src/main.rs:475:25: 475:44
    let mut _8: &mut std::option::Option<S2>; // in scope 0 at src/main.rs:475:25: 475:35
    let mut _9: futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>; // in scope 0 at src/main.rs:476:19: 476:31
    let mut _10: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>, futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>>; // in scope 0 at src/main.rs:476:19: 476:31
    let mut _11: std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error>; // in scope 0 at src/main.rs:476:19: 476:30
    let mut _12: &mut S1;                // in scope 0 at src/main.rs:476:19: 476:23
    let mut _13: isize;                  // in scope 0 at src/main.rs:476:30: 476:31
    let mut _15: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>; // in scope 0 at src/main.rs:476:30: 476:31
    let mut _17: isize;                  // in scope 0 at src/main.rs:477:30: 477:34
    let mut _18: isize;                  // in scope 0 at src/main.rs:477:17: 477:35
    let mut _19: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>; // in scope 0 at src/main.rs:477:49: 477:67
    let mut _20: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>; // in scope 0 at src/main.rs:477:62: 477:66
    let mut _22: <S1 as futures::Stream>::Item; // in scope 0 at src/main.rs:478:55: 478:59
    let mut _23: futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>; // in scope 0 at src/main.rs:480:27: 480:40
    let mut _24: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>, futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>>; // in scope 0 at src/main.rs:480:27: 480:40
    let mut _25: std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error>; // in scope 0 at src/main.rs:480:27: 480:39
    let mut _26: &mut S2;                // in scope 0 at src/main.rs:480:27: 480:32
    let mut _27: isize;                  // in scope 0 at src/main.rs:480:39: 480:40
    let mut _29: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>; // in scope 0 at src/main.rs:480:39: 480:40
    let mut _31: isize;                  // in scope 0 at src/main.rs:481:38: 481:42
    let mut _32: isize;                  // in scope 0 at src/main.rs:481:25: 481:43
    let mut _33: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>; // in scope 0 at src/main.rs:481:57: 481:75
    let mut _34: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>; // in scope 0 at src/main.rs:481:70: 481:74
    let mut _36: <S2 as futures::Stream>::Item; // in scope 0 at src/main.rs:482:63: 482:67
    let mut _37: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>; // in scope 0 at src/main.rs:483:54: 483:69
    let mut _38: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>; // in scope 0 at src/main.rs:488:12: 490:60
    let mut _39: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>; // in scope 0 at src/main.rs:488:25: 490:59
    let mut _40: (futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2); // in scope 0 at src/main.rs:488:30: 490:58
    let mut _41: futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>; // in scope 0 at src/main.rs:488:31: 488:35
    let mut _42: S1;                     // in scope 0 at src/main.rs:489:31: 489:56
    let mut _43: std::option::Option<S1>; // in scope 0 at src/main.rs:489:31: 489:47
    let mut _44: &mut std::option::Option<S1>; // in scope 0 at src/main.rs:489:31: 489:40
    let mut _45: S2;                     // in scope 0 at src/main.rs:490:31: 490:57
    let mut _46: std::option::Option<S2>; // in scope 0 at src/main.rs:490:31: 490:48
    let mut _47: &mut std::option::Option<S2>; // in scope 0 at src/main.rs:490:31: 490:41
    let mut _48: bool;                   // in scope 0 at src/main.rs:487:10: 487:11
    let mut _49: bool;                   // in scope 0 at src/main.rs:485:17: 485:18
    let mut _50: bool;                   // in scope 0 at src/main.rs:491:5: 491:6
    let mut _51: isize;                  // in scope 0 at src/main.rs:485:17: 485:18
    let mut _52: isize;                  // in scope 0 at src/main.rs:487:10: 487:11
    let mut _53: isize;                  // in scope 0 at src/main.rs:485:17: 485:18
    let mut _54: isize;                  // in scope 0 at src/main.rs:487:10: 487:11
    scope 1 {
        debug item => _2;                // in scope 1 at src/main.rs:473:13: 473:17
    }
    scope 2 {
        debug left => _3;                // in scope 2 at src/main.rs:474:17: 474:21
        let _6: &mut S2;                 // in scope 2 at src/main.rs:475:17: 475:22
        scope 3 {
            debug right => _6;           // in scope 3 at src/main.rs:475:17: 475:22
            let _14: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>; // in scope 3 at src/main.rs:476:30: 476:31
            let _16: futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>; // in scope 3 at src/main.rs:476:19: 476:31
            let _21: <S1 as futures::Stream>::Item; // in scope 3 at src/main.rs:478:35: 478:39
            let _28: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>; // in scope 3 at src/main.rs:480:39: 480:40
            let _30: futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>; // in scope 3 at src/main.rs:480:27: 480:40
            let _35: <S2 as futures::Stream>::Item; // in scope 3 at src/main.rs:482:43: 482:47
            scope 4 {
                debug residual => _14;   // in scope 4 at src/main.rs:476:30: 476:31
                scope 5 {
                }
            }
            scope 6 {
                debug val => _16;        // in scope 6 at src/main.rs:476:19: 476:31
                scope 7 {
                }
            }
            scope 8 {
                debug item => _21;       // in scope 8 at src/main.rs:478:35: 478:39
            }
            scope 9 {
                debug residual => _28;   // in scope 9 at src/main.rs:480:39: 480:40
                scope 10 {
                }
            }
            scope 11 {
                debug val => _30;        // in scope 11 at src/main.rs:480:27: 480:40
                scope 12 {
                }
            }
            scope 13 {
                debug item => _35;       // in scope 13 at src/main.rs:482:43: 482:47
            }
        }
    }

    bb0: {
        _48 = const false;               // scope 0 at src/main.rs:473:13: 473:17
        _49 = const false;               // scope 0 at src/main.rs:473:13: 473:17
        _50 = const false;               // scope 0 at src/main.rs:473:13: 473:17
        StorageLive(_2);                 // scope 0 at src/main.rs:473:13: 473:17
        StorageLive(_3);                 // scope 0 at src/main.rs:474:17: 474:21
        StorageLive(_4);                 // scope 0 at src/main.rs:474:24: 474:42
        StorageLive(_5);                 // scope 0 at src/main.rs:474:24: 474:33
        _5 = &mut ((*_1).0: std::option::Option<S1>); // scope 0 at src/main.rs:474:24: 474:33
        _4 = std::option::Option::<S1>::as_mut(move _5) -> bb1; // scope 0 at src/main.rs:474:24: 474:42
                                         // mir::Constant
                                         // + span: src/main.rs:474:34: 474:40
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::option::Option<S1>) -> std::option::Option<&'r mut S1> {std::option::Option::<S1>::as_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at src/main.rs:474:41: 474:42
        _3 = std::option::Option::<&mut S1>::unwrap(move _4) -> bb2; // scope 0 at src/main.rs:474:24: 474:51
                                         // mir::Constant
                                         // + span: src/main.rs:474:43: 474:49
                                         // + literal: Const { ty: fn(std::option::Option<&mut S1>) -> &mut S1 {std::option::Option::<&mut S1>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_4);                 // scope 0 at src/main.rs:474:50: 474:51
        StorageLive(_6);                 // scope 2 at src/main.rs:475:17: 475:22
        StorageLive(_7);                 // scope 2 at src/main.rs:475:25: 475:44
        StorageLive(_8);                 // scope 2 at src/main.rs:475:25: 475:35
        _8 = &mut ((*_1).1: std::option::Option<S2>); // scope 2 at src/main.rs:475:25: 475:35
        _7 = std::option::Option::<S2>::as_mut(move _8) -> bb3; // scope 2 at src/main.rs:475:25: 475:44
                                         // mir::Constant
                                         // + span: src/main.rs:475:36: 475:42
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::option::Option<S2>) -> std::option::Option<&'r mut S2> {std::option::Option::<S2>::as_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_8);                 // scope 2 at src/main.rs:475:43: 475:44
        _6 = std::option::Option::<&mut S2>::unwrap(move _7) -> bb4; // scope 2 at src/main.rs:475:25: 475:53
                                         // mir::Constant
                                         // + span: src/main.rs:475:45: 475:51
                                         // + literal: Const { ty: fn(std::option::Option<&mut S2>) -> &mut S2 {std::option::Option::<&mut S2>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_7);                 // scope 2 at src/main.rs:475:52: 475:53
        StorageLive(_9);                 // scope 3 at src/main.rs:476:19: 476:31
        StorageLive(_10);                // scope 3 at src/main.rs:476:19: 476:31
        StorageLive(_11);                // scope 3 at src/main.rs:476:19: 476:30
        StorageLive(_12);                // scope 3 at src/main.rs:476:19: 476:23
        _12 = &mut (*_3);                // scope 3 at src/main.rs:476:19: 476:23
        _11 = <S1 as futures::Stream>::poll(move _12) -> bb5; // scope 3 at src/main.rs:476:19: 476:30
                                         // mir::Constant
                                         // + span: src/main.rs:476:24: 476:28
                                         // + literal: Const { ty: for<'r> fn(&'r mut S1) -> std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> {<S1 as futures::Stream>::poll}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_12);                // scope 3 at src/main.rs:476:29: 476:30
        _10 = <std::result::Result<Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as Try>::branch(move _11) -> bb6; // scope 3 at src/main.rs:476:19: 476:31
                                         // mir::Constant
                                         // + span: src/main.rs:476:19: 476:31
                                         // + literal: Const { ty: fn(std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error>) -> std::ops::ControlFlow<<std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::Residual, <std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::Output> {<std::result::Result<futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::branch}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_11);                // scope 3 at src/main.rs:476:30: 476:31
        _13 = discriminant(_10);         // scope 3 at src/main.rs:476:19: 476:31
        switchInt(move _13) -> [0_isize: bb7, 1_isize: bb9, otherwise: bb8]; // scope 3 at src/main.rs:476:19: 476:31
    }

    bb7: {
        StorageLive(_16);                // scope 3 at src/main.rs:476:19: 476:31
        _16 = move ((_10 as Continue).0: futures::Async<std::option::Option<<S1 as futures::Stream>::Item>>); // scope 3 at src/main.rs:476:19: 476:31
        _48 = const true;                // scope 7 at src/main.rs:476:19: 476:31
        _9 = move _16;                   // scope 7 at src/main.rs:476:19: 476:31
        StorageDead(_16);                // scope 3 at src/main.rs:476:30: 476:31
        _18 = discriminant(_9);          // scope 3 at src/main.rs:476:19: 476:31
        switchInt(move _18) -> [0_isize: bb11, 1_isize: bb13, otherwise: bb12]; // scope 3 at src/main.rs:476:13: 476:31
    }

    bb8: {
        unreachable;                     // scope 3 at src/main.rs:476:19: 476:31
    }

    bb9: {
        StorageLive(_14);                // scope 3 at src/main.rs:476:30: 476:31
        _14 = move ((_10 as Break).0: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>); // scope 3 at src/main.rs:476:30: 476:31
        StorageLive(_15);                // scope 5 at src/main.rs:476:30: 476:31
        _15 = move _14;                  // scope 5 at src/main.rs:476:30: 476:31
        _0 = <std::result::Result<Async<std::option::Option<(Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> as FromResidual<std::result::Result<Infallible, <S1 as futures::Stream>::Error>>>::from_residual(move _15) -> bb10; // scope 5 at src/main.rs:476:19: 476:31
                                         // mir::Constant
                                         // + span: src/main.rs:476:30: 476:31
                                         // + literal: Const { ty: fn(std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>) -> std::result::Result<futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> {<std::result::Result<futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>>>::from_residual}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_15);                // scope 5 at src/main.rs:476:30: 476:31
        StorageDead(_14);                // scope 3 at src/main.rs:476:30: 476:31
        StorageDead(_6);                 // scope 2 at src/main.rs:487:9: 487:10
        StorageDead(_3);                 // scope 0 at src/main.rs:487:9: 487:10
        goto -> bb35;                    // scope 0 at no-location
    }

    bb11: {
        _17 = discriminant(((_9 as Ready).0: std::option::Option<<S1 as futures::Stream>::Item>)); // scope 3 at src/main.rs:476:19: 476:31
        switchInt(move _17) -> [0_isize: bb14, 1_isize: bb15, otherwise: bb12]; // scope 3 at src/main.rs:476:13: 476:31
    }

    bb12: {
        unreachable;                     // scope 3 at src/main.rs:476:19: 476:31
    }

    bb13: {
        StorageLive(_23);                // scope 3 at src/main.rs:480:27: 480:40
        StorageLive(_24);                // scope 3 at src/main.rs:480:27: 480:40
        StorageLive(_25);                // scope 3 at src/main.rs:480:27: 480:39
        StorageLive(_26);                // scope 3 at src/main.rs:480:27: 480:32
        _26 = &mut (*_6);                // scope 3 at src/main.rs:480:27: 480:32
        _25 = <S2 as futures::Stream>::poll(move _26) -> bb16; // scope 3 at src/main.rs:480:27: 480:39
                                         // mir::Constant
                                         // + span: src/main.rs:480:33: 480:37
                                         // + literal: Const { ty: for<'r> fn(&'r mut S2) -> std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S2 as futures::Stream>::Error> {<S2 as futures::Stream>::poll}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        StorageLive(_19);                // scope 3 at src/main.rs:477:49: 477:67
        StorageLive(_20);                // scope 3 at src/main.rs:477:62: 477:66
        discriminant(_20) = 0;           // scope 3 at src/main.rs:477:62: 477:66
        ((_19 as Ready).0: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>) = move _20; // scope 3 at src/main.rs:477:49: 477:67
        discriminant(_19) = 0;           // scope 3 at src/main.rs:477:49: 477:67
        StorageDead(_20);                // scope 3 at src/main.rs:477:66: 477:67
        ((_0 as Ok).0: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>) = move _19; // scope 3 at src/main.rs:477:46: 477:68
        discriminant(_0) = 0;            // scope 3 at src/main.rs:477:46: 477:68
        StorageDead(_19);                // scope 3 at src/main.rs:477:67: 477:68
        goto -> bb34;                    // scope 3 at src/main.rs:477:39: 477:68
    }

    bb15: {
        StorageLive(_21);                // scope 3 at src/main.rs:478:35: 478:39
        _21 = move ((((_9 as Ready).0: std::option::Option<<S1 as futures::Stream>::Item>) as Some).0: <S1 as futures::Stream>::Item); // scope 3 at src/main.rs:478:35: 478:39
        StorageLive(_22);                // scope 8 at src/main.rs:478:55: 478:59
        _22 = move _21;                  // scope 8 at src/main.rs:478:55: 478:59
        _50 = const true;                // scope 8 at src/main.rs:478:45: 478:60
        ((_2 as A).0: <S1 as futures::Stream>::Item) = move _22; // scope 8 at src/main.rs:478:45: 478:60
        discriminant(_2) = 0;            // scope 8 at src/main.rs:478:45: 478:60
        StorageDead(_22);                // scope 8 at src/main.rs:478:59: 478:60
        StorageDead(_21);                // scope 3 at src/main.rs:478:59: 478:60
        goto -> bb27;                    // scope 3 at src/main.rs:478:59: 478:60
    }

    bb16: {
        StorageDead(_26);                // scope 3 at src/main.rs:480:38: 480:39
        _24 = <std::result::Result<Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as Try>::branch(move _25) -> bb17; // scope 3 at src/main.rs:480:27: 480:40
                                         // mir::Constant
                                         // + span: src/main.rs:480:27: 480:40
                                         // + literal: Const { ty: fn(std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error>) -> std::ops::ControlFlow<<std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::Residual, <std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::Output> {<std::result::Result<futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>, <S1 as futures::Stream>::Error> as std::ops::Try>::branch}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        StorageDead(_25);                // scope 3 at src/main.rs:480:39: 480:40
        _27 = discriminant(_24);         // scope 3 at src/main.rs:480:27: 480:40
        switchInt(move _27) -> [0_isize: bb18, 1_isize: bb20, otherwise: bb19]; // scope 3 at src/main.rs:480:27: 480:40
    }

    bb18: {
        StorageLive(_30);                // scope 3 at src/main.rs:480:27: 480:40
        _30 = move ((_24 as Continue).0: futures::Async<std::option::Option<<S2 as futures::Stream>::Item>>); // scope 3 at src/main.rs:480:27: 480:40
        _49 = const true;                // scope 12 at src/main.rs:480:27: 480:40
        _23 = move _30;                  // scope 12 at src/main.rs:480:27: 480:40
        StorageDead(_30);                // scope 3 at src/main.rs:480:39: 480:40
        _32 = discriminant(_23);         // scope 3 at src/main.rs:480:27: 480:40
        switchInt(move _32) -> [0_isize: bb22, 1_isize: bb24, otherwise: bb23]; // scope 3 at src/main.rs:480:21: 480:40
    }

    bb19: {
        unreachable;                     // scope 3 at src/main.rs:480:27: 480:40
    }

    bb20: {
        StorageLive(_28);                // scope 3 at src/main.rs:480:39: 480:40
        _28 = move ((_24 as Break).0: std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>); // scope 3 at src/main.rs:480:39: 480:40
        StorageLive(_29);                // scope 10 at src/main.rs:480:39: 480:40
        _29 = move _28;                  // scope 10 at src/main.rs:480:39: 480:40
        _0 = <std::result::Result<Async<std::option::Option<(Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> as FromResidual<std::result::Result<Infallible, <S1 as futures::Stream>::Error>>>::from_residual(move _29) -> bb21; // scope 10 at src/main.rs:480:27: 480:40
                                         // mir::Constant
                                         // + span: src/main.rs:480:39: 480:40
                                         // + literal: Const { ty: fn(std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>) -> std::result::Result<futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> {<std::result::Result<futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>, <S1 as futures::Stream>::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, <S1 as futures::Stream>::Error>>>::from_residual}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_29);                // scope 10 at src/main.rs:480:39: 480:40
        StorageDead(_28);                // scope 3 at src/main.rs:480:39: 480:40
        goto -> bb33;                    // scope 3 at no-location
    }

    bb22: {
        _31 = discriminant(((_23 as Ready).0: std::option::Option<<S2 as futures::Stream>::Item>)); // scope 3 at src/main.rs:480:27: 480:40
        switchInt(move _31) -> [0_isize: bb25, 1_isize: bb26, otherwise: bb23]; // scope 3 at src/main.rs:480:21: 480:40
    }

    bb23: {
        unreachable;                     // scope 3 at src/main.rs:480:27: 480:40
    }

    bb24: {
        StorageLive(_37);                // scope 3 at src/main.rs:483:54: 483:69
        discriminant(_37) = 1;           // scope 3 at src/main.rs:483:54: 483:69
        ((_0 as Ok).0: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>) = move _37; // scope 3 at src/main.rs:483:51: 483:70
        discriminant(_0) = 0;            // scope 3 at src/main.rs:483:51: 483:70
        StorageDead(_37);                // scope 3 at src/main.rs:483:69: 483:70
        goto -> bb32;                    // scope 3 at src/main.rs:483:44: 483:70
    }

    bb25: {
        StorageLive(_33);                // scope 3 at src/main.rs:481:57: 481:75
        StorageLive(_34);                // scope 3 at src/main.rs:481:70: 481:74
        discriminant(_34) = 0;           // scope 3 at src/main.rs:481:70: 481:74
        ((_33 as Ready).0: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>) = move _34; // scope 3 at src/main.rs:481:57: 481:75
        discriminant(_33) = 0;           // scope 3 at src/main.rs:481:57: 481:75
        StorageDead(_34);                // scope 3 at src/main.rs:481:74: 481:75
        ((_0 as Ok).0: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>) = move _33; // scope 3 at src/main.rs:481:54: 481:76
        discriminant(_0) = 0;            // scope 3 at src/main.rs:481:54: 481:76
        StorageDead(_33);                // scope 3 at src/main.rs:481:75: 481:76
        goto -> bb32;                    // scope 3 at src/main.rs:481:47: 481:76
    }

    bb26: {
        StorageLive(_35);                // scope 3 at src/main.rs:482:43: 482:47
        _35 = move ((((_23 as Ready).0: std::option::Option<<S2 as futures::Stream>::Item>) as Some).0: <S2 as futures::Stream>::Item); // scope 3 at src/main.rs:482:43: 482:47
        StorageLive(_36);                // scope 13 at src/main.rs:482:63: 482:67
        _36 = move _35;                  // scope 13 at src/main.rs:482:63: 482:67
        _50 = const true;                // scope 13 at src/main.rs:482:53: 482:68
        ((_2 as B).0: <S2 as futures::Stream>::Item) = move _36; // scope 13 at src/main.rs:482:53: 482:68
        discriminant(_2) = 1;            // scope 13 at src/main.rs:482:53: 482:68
        StorageDead(_36);                // scope 13 at src/main.rs:482:67: 482:68
        StorageDead(_35);                // scope 3 at src/main.rs:482:67: 482:68
        _51 = discriminant(_23);         // scope 3 at src/main.rs:485:17: 485:18
        switchInt(move _51) -> [0_isize: bb41, otherwise: bb40]; // scope 3 at src/main.rs:485:17: 485:18
    }

    bb27: {
        StorageDead(_6);                 // scope 2 at src/main.rs:487:9: 487:10
        StorageDead(_3);                 // scope 0 at src/main.rs:487:9: 487:10
        _52 = discriminant(_9);          // scope 0 at src/main.rs:487:10: 487:11
        switchInt(move _52) -> [0_isize: bb43, otherwise: bb42]; // scope 0 at src/main.rs:487:10: 487:11
    }

    bb28: {
        StorageDead(_44);                // scope 1 at src/main.rs:489:46: 489:47
        _42 = std::option::Option::<S1>::unwrap(move _43) -> [return: bb29, unwind: bb38]; // scope 1 at src/main.rs:489:31: 489:56
                                         // mir::Constant
                                         // + span: src/main.rs:489:48: 489:54
                                         // + literal: Const { ty: fn(std::option::Option<S1>) -> S1 {std::option::Option::<S1>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb29: {
        StorageDead(_43);                // scope 1 at src/main.rs:489:55: 489:56
        StorageLive(_45);                // scope 1 at src/main.rs:490:31: 490:57
        StorageLive(_46);                // scope 1 at src/main.rs:490:31: 490:48
        StorageLive(_47);                // scope 1 at src/main.rs:490:31: 490:41
        _47 = &mut ((*_1).1: std::option::Option<S2>); // scope 1 at src/main.rs:490:31: 490:41
        _46 = std::option::Option::<S2>::take(move _47) -> [return: bb30, unwind: bb37]; // scope 1 at src/main.rs:490:31: 490:48
                                         // mir::Constant
                                         // + span: src/main.rs:490:42: 490:46
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::option::Option<S2>) -> std::option::Option<S2> {std::option::Option::<S2>::take}, val: Value(Scalar(<ZST>)) }
    }

    bb30: {
        StorageDead(_47);                // scope 1 at src/main.rs:490:47: 490:48
        _45 = std::option::Option::<S2>::unwrap(move _46) -> [return: bb31, unwind: bb37]; // scope 1 at src/main.rs:490:31: 490:57
                                         // mir::Constant
                                         // + span: src/main.rs:490:49: 490:55
                                         // + literal: Const { ty: fn(std::option::Option<S2>) -> S2 {std::option::Option::<S2>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        StorageDead(_46);                // scope 1 at src/main.rs:490:56: 490:57
        (_40.0: futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>) = move _41; // scope 1 at src/main.rs:488:30: 490:58
        (_40.1: S1) = move _42;          // scope 1 at src/main.rs:488:30: 490:58
        (_40.2: S2) = move _45;          // scope 1 at src/main.rs:488:30: 490:58
        StorageDead(_45);                // scope 1 at src/main.rs:490:57: 490:58
        StorageDead(_42);                // scope 1 at src/main.rs:490:57: 490:58
        StorageDead(_41);                // scope 1 at src/main.rs:490:57: 490:58
        ((_39 as Some).0: (futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)) = move _40; // scope 1 at src/main.rs:488:25: 490:59
        discriminant(_39) = 1;           // scope 1 at src/main.rs:488:25: 490:59
        StorageDead(_40);                // scope 1 at src/main.rs:490:58: 490:59
        ((_38 as Ready).0: std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>) = move _39; // scope 1 at src/main.rs:488:12: 490:60
        discriminant(_38) = 0;           // scope 1 at src/main.rs:488:12: 490:60
        StorageDead(_39);                // scope 1 at src/main.rs:490:59: 490:60
        ((_0 as Ok).0: futures::Async<std::option::Option<(futures::future::Either<<S1 as futures::Stream>::Item, <S2 as futures::Stream>::Item>, S1, S2)>>) = move _38; // scope 1 at src/main.rs:488:9: 490:61
        discriminant(_0) = 0;            // scope 1 at src/main.rs:488:9: 490:61
        StorageDead(_38);                // scope 1 at src/main.rs:490:60: 490:61
        _50 = const false;               // scope 0 at src/main.rs:491:5: 491:6
        StorageDead(_2);                 // scope 0 at src/main.rs:491:5: 491:6
        goto -> bb36;                    // scope 0 at src/main.rs:491:6: 491:6
    }

    bb32: {
        _53 = discriminant(_23);         // scope 3 at src/main.rs:485:17: 485:18
        switchInt(move _53) -> [0_isize: bb46, otherwise: bb33]; // scope 3 at src/main.rs:485:17: 485:18
    }

    bb33: {
        StorageDead(_24);                // scope 3 at src/main.rs:485:17: 485:18
        _49 = const false;               // scope 3 at src/main.rs:485:17: 485:18
        StorageDead(_23);                // scope 3 at src/main.rs:485:17: 485:18
        goto -> bb34;                    // scope 3 at no-location
    }

    bb34: {
        StorageDead(_6);                 // scope 2 at src/main.rs:487:9: 487:10
        StorageDead(_3);                 // scope 0 at src/main.rs:487:9: 487:10
        _54 = discriminant(_9);          // scope 0 at src/main.rs:487:10: 487:11
        switchInt(move _54) -> [0_isize: bb49, otherwise: bb35]; // scope 0 at src/main.rs:487:10: 487:11
    }

    bb35: {
        StorageDead(_10);                // scope 0 at src/main.rs:487:10: 487:11
        _48 = const false;               // scope 0 at src/main.rs:487:10: 487:11
        StorageDead(_9);                 // scope 0 at src/main.rs:487:10: 487:11
        _50 = const false;               // scope 0 at src/main.rs:491:5: 491:6
        StorageDead(_2);                 // scope 0 at src/main.rs:491:5: 491:6
        goto -> bb36;                    // scope 0 at src/main.rs:491:6: 491:6
    }

    bb36: {
        return;                          // scope 0 at src/main.rs:491:6: 491:6
    }

    bb37 (cleanup): {
        drop(_42) -> bb38;               // scope 1 at src/main.rs:490:57: 490:58
    }

    bb38 (cleanup): {
        drop(_41) -> bb53;               // scope 1 at src/main.rs:490:57: 490:58
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at src/main.rs:472:5: 491:6
    }

    bb40: {
        StorageDead(_24);                // scope 3 at src/main.rs:485:17: 485:18
        _49 = const false;               // scope 3 at src/main.rs:485:17: 485:18
        StorageDead(_23);                // scope 3 at src/main.rs:485:17: 485:18
        goto -> bb27;                    // scope 3 at src/main.rs:485:17: 485:18
    }

    bb41: {
        _49 = const false;               // scope 3 at src/main.rs:485:17: 485:18
        goto -> bb40;                    // scope 3 at src/main.rs:485:17: 485:18
    }

    bb42: {
        StorageDead(_10);                // scope 0 at src/main.rs:487:10: 487:11
        _48 = const false;               // scope 0 at src/main.rs:487:10: 487:11
        StorageDead(_9);                 // scope 0 at src/main.rs:487:10: 487:11
        StorageLive(_38);                // scope 1 at src/main.rs:488:12: 490:60
        StorageLive(_39);                // scope 1 at src/main.rs:488:25: 490:59
        StorageLive(_40);                // scope 1 at src/main.rs:488:30: 490:58
        StorageLive(_41);                // scope 1 at src/main.rs:488:31: 488:35
        _50 = const false;               // scope 1 at src/main.rs:488:31: 488:35
        _41 = move _2;                   // scope 1 at src/main.rs:488:31: 488:35
        StorageLive(_42);                // scope 1 at src/main.rs:489:31: 489:56
        StorageLive(_43);                // scope 1 at src/main.rs:489:31: 489:47
        StorageLive(_44);                // scope 1 at src/main.rs:489:31: 489:40
        _44 = &mut ((*_1).0: std::option::Option<S1>); // scope 1 at src/main.rs:489:31: 489:40
        _43 = std::option::Option::<S1>::take(move _44) -> [return: bb28, unwind: bb38]; // scope 1 at src/main.rs:489:31: 489:47
                                         // mir::Constant
                                         // + span: src/main.rs:489:41: 489:45
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::option::Option<S1>) -> std::option::Option<S1> {std::option::Option::<S1>::take}, val: Value(Scalar(<ZST>)) }
    }

    bb43: {
        switchInt(_48) -> [false: bb44, otherwise: bb45]; // scope 0 at src/main.rs:487:10: 487:11
    }

    bb44: {
        _48 = const false;               // scope 0 at src/main.rs:487:10: 487:11
        goto -> bb42;                    // scope 0 at src/main.rs:487:10: 487:11
    }

    bb45: {
        goto -> bb44;                    // scope 0 at src/main.rs:487:10: 487:11
    }

    bb46: {
        switchInt(_49) -> [false: bb47, otherwise: bb48]; // scope 3 at src/main.rs:485:17: 485:18
    }

    bb47: {
        _49 = const false;               // scope 3 at src/main.rs:485:17: 485:18
        goto -> bb33;                    // scope 3 at src/main.rs:485:17: 485:18
    }

    bb48: {
        goto -> bb47;                    // scope 3 at src/main.rs:485:17: 485:18
    }

    bb49: {
        switchInt(_48) -> [false: bb50, otherwise: bb51]; // scope 0 at src/main.rs:487:10: 487:11
    }

    bb50: {
        _48 = const false;               // scope 0 at src/main.rs:487:10: 487:11
        goto -> bb35;                    // scope 0 at src/main.rs:487:10: 487:11
    }

    bb51: {
        goto -> bb50;                    // scope 0 at src/main.rs:487:10: 487:11
    }

    bb52 (cleanup): {
        drop(_2) -> bb39;                // scope 0 at src/main.rs:491:5: 491:6
    }

    bb53 (cleanup): {
        switchInt(_50) -> [false: bb39, otherwise: bb52]; // scope 0 at src/main.rs:491:5: 491:6
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:303:9: 312:10>::chain_err::{closure#0}(_1: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18], _2: E) -> errors::Error {
    debug e => _2;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:36: 307:37
    debug callback => (_1.0: F);         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:304:39: 304:47
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:39: 307:39
    let _3: error_chain::State;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
    let mut _4: std::boxed::Box<dyn std::error::Error + std::marker::Send>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
    let mut _5: std::boxed::Box<E>;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
    let mut _6: E;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:76: 308:77
    let mut _7: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:64
    let mut _8: EK;                      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:57
    let mut _9: F;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:55
    let mut _10: ();                     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:57
    let mut _11: error_chain::State;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:66: 309:71
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    scope 1 {
        debug state => _3;               // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
    }

    bb0: {
        _13 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
        _12 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
        _13 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:25: 308:30
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
        StorageLive(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
        StorageLive(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:76: 308:77
        _6 = move _2;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:76: 308:77
        _5 = Box::<E>::new(move _6) -> [return: bb1, unwind: bb10]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:75
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(E) -> std::boxed::Box<E> {std::boxed::Box::<E>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _4 = move _5 as std::boxed::Box<dyn std::error::Error + std::marker::Send> (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:67: 308:78
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:77: 308:78
        StorageDead(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:77: 308:78
        _3 = error_chain::State::new::<errors::Error>(move _4) -> [return: bb2, unwind: bb10]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:33: 308:81
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:33: 308:66
                                         // + literal: Const { ty: fn(std::boxed::Box<(dyn std::error::Error + std::marker::Send + 'static)>) -> error_chain::State {error_chain::State::new::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _12 = const true;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:80: 308:81
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:308:80: 308:81
        StorageLive(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:64
        StorageLive(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:57
        StorageLive(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:55
        _13 = const false;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:55
        _9 = move (_1.0: F);             // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:55
        StorageLive(_10);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:57
        _8 = <F as FnOnce<()>>::call_once(move _9, move _10) -> [return: bb3, unwind: bb8]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:57
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:55
                                         // + literal: Const { ty: extern "rust-call" fn(F, ()) -> <F as std::ops::FnOnce<()>>::Output {<F as std::ops::FnOnce<()>>::call_once}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_10);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:56: 309:57
        StorageDead(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:56: 309:57
        _7 = <EK as Into<errors::ErrorKind>>::into(move _8) -> [return: bb4, unwind: bb8]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:47: 309:64
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:58: 309:62
                                         // + literal: Const { ty: fn(EK) -> errors::ErrorKind {<EK as std::convert::Into<errors::ErrorKind>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:63: 309:64
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:66: 309:71
        _12 = const false;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:66: 309:71
        _11 = move _3;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:66: 309:71
        _0 = <errors::Error as ChainedError>::new(move _7, move _11) -> [return: bb5, unwind: bb8]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:21: 309:72
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:21: 309:46
                                         // + literal: Const { ty: fn(<errors::Error as error_chain::ChainedError>::ErrorKind, error_chain::State) -> errors::Error {<errors::Error as error_chain::ChainedError>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:71: 309:72
        StorageDead(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:309:71: 309:72
        _12 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:18: 310:18
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18
    }

    bb7 (cleanup): {
        drop(_3) -> bb10;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    }

    bb8 (cleanup): {
        switchInt(_12) -> [false: bb10, otherwise: bb7]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    }

    bb9 (cleanup): {
        drop((_1.0: F)) -> bb6;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    }

    bb10 (cleanup): {
        switchInt(_13) -> [false: bb6, otherwise: bb9]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:17: 310:18
    }
}

fn <impl at src/main.rs:453:1: 463:2>::new(_1: S1, _2: S2) -> StreamNext<S1, S2> {
    debug s1 => _1;                      // in scope 0 at src/main.rs:457:12: 457:14
    debug s2 => _2;                      // in scope 0 at src/main.rs:457:20: 457:22
    let mut _0: StreamNext<S1, S2>;      // return place in scope 0 at src/main.rs:457:31: 457:49
    let mut _3: std::option::Option<S1>; // in scope 0 at src/main.rs:459:19: 459:27
    let mut _4: S1;                      // in scope 0 at src/main.rs:459:24: 459:26
    let mut _5: std::option::Option<S2>; // in scope 0 at src/main.rs:460:20: 460:28
    let mut _6: S2;                      // in scope 0 at src/main.rs:460:25: 460:27

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:459:19: 459:27
        StorageLive(_4);                 // scope 0 at src/main.rs:459:24: 459:26
        _4 = move _1;                    // scope 0 at src/main.rs:459:24: 459:26
        ((_3 as Some).0: S1) = move _4;  // scope 0 at src/main.rs:459:19: 459:27
        discriminant(_3) = 1;            // scope 0 at src/main.rs:459:19: 459:27
        StorageDead(_4);                 // scope 0 at src/main.rs:459:26: 459:27
        StorageLive(_5);                 // scope 0 at src/main.rs:460:20: 460:28
        StorageLive(_6);                 // scope 0 at src/main.rs:460:25: 460:27
        _6 = move _2;                    // scope 0 at src/main.rs:460:25: 460:27
        ((_5 as Some).0: S2) = move _6;  // scope 0 at src/main.rs:460:20: 460:28
        discriminant(_5) = 1;            // scope 0 at src/main.rs:460:20: 460:28
        StorageDead(_6);                 // scope 0 at src/main.rs:460:27: 460:28
        (_0.0: std::option::Option<S1>) = move _3; // scope 0 at src/main.rs:458:9: 461:10
        (_0.1: std::option::Option<S2>) = move _5; // scope 0 at src/main.rs:458:9: 461:10
        StorageDead(_5);                 // scope 0 at src/main.rs:461:9: 461:10
        StorageDead(_3);                 // scope 0 at src/main.rs:461:9: 461:10
        return;                          // scope 0 at src/main.rs:462:6: 462:6
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23>::fmt(_1: &errors::Error, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    debug f => _2;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let _3: &errors::ErrorKind;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
    let _4: &error_chain::State;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
    let mut _6: std::fmt::DebugTuple;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _7: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _8: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let _9: &str;                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _10: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _11: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _12: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
    let mut _13: &&errors::ErrorKind;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
    let _14: &&errors::ErrorKind;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
    let _15: &errors::ErrorKind;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
    let mut _16: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _17: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    let mut _18: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
    let mut _19: &&error_chain::State;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
    let _20: &&error_chain::State;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
    let _21: &error_chain::State;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
    let mut _22: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
    scope 1 {
        debug __self_0_0 => _3;          // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        debug __self_0_1 => _4;          // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        let _5: &mut std::fmt::DebugTuple; // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        scope 2 {
            debug debug_trait_builder => _5; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
            scope 3 {
                scope 4 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        _3 = &((*_1).0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        _4 = &((*_1).1: error_chain::State); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        StorageLive(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _7 = &mut (*_2);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _9 = const "Error";              // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [69, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [69, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) }
        _8 = _9;                         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _6 = std::fmt::Formatter::debug_tuple(move _7, move _8) -> bb1; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'r> fn(&'b mut std::fmt::Formatter, &'r str) -> std::fmt::DebugTuple<'b, '_> {std::fmt::Formatter::debug_tuple}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        _5 = &mut _6;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageDead(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageLive(_10);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_11);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _11 = &mut (*_5);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_12);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        StorageLive(_13);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        StorageLive(_14);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        StorageLive(_15);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        _15 = _3;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        _14 = &_15;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        _13 = _14;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        _12 = move _13 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:13: 70:33
        StorageDead(_13);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:70:32: 70:33
        _10 = DebugTuple::field(move _11, move _12) -> bb2; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_12);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_11);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_15);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_14);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_10);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageLive(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_17);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _17 = &mut (*_5);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        StorageLive(_18);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        StorageLive(_19);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        StorageLive(_20);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        StorageLive(_21);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        _21 = _4;                        // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        _20 = &_21;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        _19 = _20;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        _18 = move _19 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:13: 73:30
        StorageDead(_19);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:73:29: 73:30
        _16 = DebugTuple::field(move _17, move _18) -> bb3; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_18);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_17);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_21);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_20);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageLive(_22);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _22 = &mut (*_5);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
        _0 = DebugTuple::finish(move _22) -> bb4; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:18: 66:23
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::fmt::DebugTuple) -> std::result::Result<(), std::fmt::Error> {std::fmt::DebugTuple::finish}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_22);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:22: 66:23
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:66:23: 66:23
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_map(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: __A) -> std::result::Result<ClientMessage, <__A as MapAccess>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __map => _2;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<ClientMessage, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _5: std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: isize;                   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _11: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _12: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _13: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _15: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _16: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _17: &std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let _18: &std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _19: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _20: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _21: uuid::Uuid;             // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _22: std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _23: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _24: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _25: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _28: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _29: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _30: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _31: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _32: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _33: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _36: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _37: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _39: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _41: std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _42: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _45: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _46: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _47: ClientMessage;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _48: uuid::Uuid;             // in scope 0 at src/main.rs:54:10: 54:21
    scope 1 {
        debug __field0 => _3;            // in scope 1 at src/main.rs:54:10: 54:21
        let _9: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _10: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _14: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 1 at src/main.rs:54:10: 54:21
        let _26: uuid::Uuid;             // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _27: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _34: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _35: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _38: uuid::Uuid;             // in scope 1 at src/main.rs:54:10: 54:21
        let _40: uuid::Uuid;             // in scope 1 at src/main.rs:54:10: 54:21
        let _43: uuid::Uuid;             // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _44: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 2 {
            debug val => _9;             // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 3 {
            debug err => _10;            // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 4 {
            debug __key => _14;          // in scope 4 at src/main.rs:54:10: 54:21
        }
        scope 5 {
            debug val => _26;            // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 6 {
            debug err => _27;            // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 7 {
        }
        scope 8 {
            debug val => _34;            // in scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 9 {
            debug err => _35;            // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 10 {
            debug __field0 => _38;       // in scope 10 at src/main.rs:54:10: 54:21
        }
        scope 11 {
            debug __field0 => _40;       // in scope 11 at src/main.rs:54:10: 54:21
        }
        scope 12 {
            debug val => _43;            // in scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 13 {
            debug err => _44;            // in scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_3) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        goto -> bb1;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb1: {
        StorageLive(_4);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_5);                 // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_6);                 // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_7);                 // scope 1 at src/main.rs:54:10: 54:21
        _7 = &mut _2;                    // scope 1 at src/main.rs:54:10: 54:21
        _6 = &mut (*_7);                 // scope 1 at src/main.rs:54:10: 54:21
        _5 = <__A as MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field>(move _6) -> [return: bb2, unwind: bb38]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_6);                 // scope 1 at src/main.rs:54:20: 54:21
        _8 = discriminant(_5);           // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _8) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb3: {
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _10 = move ((_5 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _12 = move _10;                  // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _11 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _12) -> [return: bb6, unwind: bb44]; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb5: {
        StorageLive(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _9 = move ((_5 as Ok).0: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _4 = move _9;                    // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        _13 = discriminant(_4);          // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _13) -> [1_isize: bb8, otherwise: bb7]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageDead(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _11; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        goto -> bb40;                    // scope 1 at no-location
    }

    bb7: {
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_38);                // scope 1 at src/main.rs:54:10: 54:21
        _39 = discriminant(_3);          // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _39) -> [0_isize: bb26, 1_isize: bb28, otherwise: bb27]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb8: {
        StorageLive(_14);                // scope 1 at src/main.rs:54:10: 54:21
        _14 = move ((_4 as Some).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field); // scope 1 at src/main.rs:54:10: 54:21
        _15 = discriminant(_14);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _15) -> [0_isize: bb10, otherwise: bb9]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb9: {
        StorageLive(_30);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_31);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_32);                // scope 1 at src/main.rs:54:10: 54:21
        _32 = &mut _2;                   // scope 1 at src/main.rs:54:10: 54:21
        _31 = &mut (*_32);               // scope 1 at src/main.rs:54:10: 54:21
        _30 = <__A as MapAccess>::next_value::<IgnoredAny>(move _31) -> [return: bb20, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageLive(_16);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_17);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_18);                // scope 1 at src/main.rs:54:10: 54:21
        _18 = &_3;                       // scope 1 at src/main.rs:54:10: 54:21
        _17 = _18;                       // scope 1 at src/main.rs:54:10: 54:21
        _16 = std::option::Option::<Uuid>::is_some(move _17) -> [return: bb11, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<uuid::Uuid>) -> bool {std::option::Option::<uuid::Uuid>::is_some}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_18);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_17);                // scope 1 at src/main.rs:54:20: 54:21
        switchInt(move _16) -> [false: bb14, otherwise: bb12]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb12: {
        StorageLive(_19);                // scope 1 at src/main.rs:54:10: 54:21
        _19 = <<__A as MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field(const "channelID") -> [return: bb13, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb13: {
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _19; // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_19);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_16);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb14: {
        StorageDead(_16);                // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_20);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_21);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_22);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_23);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_24);                // scope 1 at src/main.rs:54:10: 54:21
        _24 = &mut _2;                   // scope 1 at src/main.rs:54:10: 54:21
        _23 = &mut (*_24);               // scope 1 at src/main.rs:54:10: 54:21
        _22 = <__A as MapAccess>::next_value::<Uuid>(move _23) -> [return: bb15, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_23);                // scope 1 at src/main.rs:54:20: 54:21
        _25 = discriminant(_22);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _25) -> [0_isize: bb18, 1_isize: bb16, otherwise: bb17]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb16: {
        StorageLive(_27);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _27 = move ((_22 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_28);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _29 = move _27;                  // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _28 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _29) -> [return: bb19, unwind: bb43]; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb18: {
        StorageLive(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _26 = ((_22 as Ok).0: uuid::Uuid); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _21 = _26;                       // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        ((_20 as Some).0: uuid::Uuid) = move _21; // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_20) = 1;           // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_21);                // scope 1 at src/main.rs:54:20: 54:21
        _3 = move _20;                   // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_20);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_22);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb25;                    // scope 1 at src/main.rs:54:10: 54:21
    }

    bb19: {
        StorageDead(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _28; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_28);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_27);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_21);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_20);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_22);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb20: {
        StorageDead(_31);                // scope 1 at src/main.rs:54:20: 54:21
        _33 = discriminant(_30);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _33) -> [0_isize: bb23, 1_isize: bb21, otherwise: bb22]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb21: {
        StorageLive(_35);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _35 = move ((_30 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_36);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_37);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _37 = move _35;                  // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _36 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _37) -> [return: bb24, unwind: bb42]; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb23: {
        StorageLive(_34);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_34);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_32);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_30);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb25;                    // scope 1 at src/main.rs:54:10: 54:21
    }

    bb24: {
        StorageDead(_37);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _36; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_36);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_35);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_32);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_30);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb25: {
        StorageDead(_14);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb1;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb26: {
        StorageLive(_41);                // scope 1 at src/main.rs:54:10: 54:21
        _41 = _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<Uuid, <__A as MapAccess>::Error>(const "channelID") -> [return: bb29, unwind: bb38]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(&'static str) -> std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb27: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb28: {
        StorageLive(_40);                // scope 1 at src/main.rs:54:10: 54:21
        _40 = ((_3 as Some).0: uuid::Uuid); // scope 1 at src/main.rs:54:10: 54:21
        _38 = _40;                       // scope 11 at src/main.rs:54:10: 54:21
        StorageDead(_40);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb29: {
        _42 = discriminant(_41);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _42) -> [0_isize: bb32, 1_isize: bb30, otherwise: bb31]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb30: {
        StorageLive(_44);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _44 = move ((_41 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_45);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_46);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _46 = move _44;                  // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _45 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _46) -> [return: bb33, unwind: bb41]; // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb32: {
        StorageLive(_43);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _43 = ((_41 as Ok).0: uuid::Uuid); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _38 = _43;                       // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_43);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_41);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb34;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb33: {
        StorageDead(_46);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _45; // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_45);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_44);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_41);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_38);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb36;                    // scope 1 at no-location
    }

    bb34: {
        StorageLive(_47);                // scope 10 at src/main.rs:54:10: 54:21
        StorageLive(_48);                // scope 10 at src/main.rs:54:10: 54:21
        _48 = _38;                       // scope 10 at src/main.rs:54:10: 54:21
        ((_47 as Register).0: uuid::Uuid) = move _48; // scope 10 at src/main.rs:54:10: 54:21
        discriminant(_47) = 1;           // scope 10 at src/main.rs:54:10: 54:21
        StorageDead(_48);                // scope 10 at src/main.rs:54:20: 54:21
        ((_0 as Ok).0: ClientMessage) = move _47; // scope 10 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 10 at src/main.rs:54:10: 54:21
        StorageDead(_47);                // scope 10 at src/main.rs:54:20: 54:21
        StorageDead(_38);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb37;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb35: {
        StorageDead(_14);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb40;                    // scope 1 at no-location
    }

    bb36: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb37;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb37: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }

    bb38 (cleanup): {
        drop(_2) -> bb39;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at src/main.rs:54:10: 54:21
    }

    bb40: {
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb36;                    // scope 1 at no-location
    }

    bb41 (cleanup): {
        goto -> bb38;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb42 (cleanup): {
        goto -> bb44;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb43 (cleanup): {
        goto -> bb44;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb44 (cleanup): {
        goto -> bb38;                    // scope 1 at src/main.rs:54:20: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_map(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: __A) -> std::result::Result<ClientMessage, <__A as MapAccess>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __map => _2;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<ClientMessage, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _5: std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: isize;                   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _11: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _12: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _13: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _15: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _16: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _17: &std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let _18: &std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _19: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _20: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _21: uuid::Uuid;             // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _22: std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _23: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _24: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _25: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _28: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _29: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _30: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _31: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _32: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _33: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _36: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _37: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _39: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _41: std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _42: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _45: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _46: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _47: ClientMessage;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _48: uuid::Uuid;             // in scope 0 at src/main.rs:54:10: 54:21
    scope 1 {
        debug __field0 => _3;            // in scope 1 at src/main.rs:54:10: 54:21
        let _9: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _10: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _14: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 1 at src/main.rs:54:10: 54:21
        let _26: uuid::Uuid;             // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _27: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _34: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _35: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _38: uuid::Uuid;             // in scope 1 at src/main.rs:54:10: 54:21
        let _40: uuid::Uuid;             // in scope 1 at src/main.rs:54:10: 54:21
        let _43: uuid::Uuid;             // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _44: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 2 {
            debug val => _9;             // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 3 {
            debug err => _10;            // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 4 {
            debug __key => _14;          // in scope 4 at src/main.rs:54:10: 54:21
        }
        scope 5 {
            debug val => _26;            // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 6 {
            debug err => _27;            // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 7 {
        }
        scope 8 {
            debug val => _34;            // in scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 9 {
            debug err => _35;            // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 10 {
            debug __field0 => _38;       // in scope 10 at src/main.rs:54:10: 54:21
        }
        scope 11 {
            debug __field0 => _40;       // in scope 11 at src/main.rs:54:10: 54:21
        }
        scope 12 {
            debug val => _43;            // in scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 13 {
            debug err => _44;            // in scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_3) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        goto -> bb1;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb1: {
        StorageLive(_4);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_5);                 // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_6);                 // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_7);                 // scope 1 at src/main.rs:54:10: 54:21
        _7 = &mut _2;                    // scope 1 at src/main.rs:54:10: 54:21
        _6 = &mut (*_7);                 // scope 1 at src/main.rs:54:10: 54:21
        _5 = <__A as MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field>(move _6) -> [return: bb2, unwind: bb38]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_6);                 // scope 1 at src/main.rs:54:20: 54:21
        _8 = discriminant(_5);           // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _8) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb3: {
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _10 = move ((_5 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _12 = move _10;                  // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _11 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _12) -> [return: bb6, unwind: bb44]; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb5: {
        StorageLive(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _9 = move ((_5 as Ok).0: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _4 = move _9;                    // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_9);                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        _13 = discriminant(_4);          // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _13) -> [1_isize: bb8, otherwise: bb7]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageDead(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _11; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        goto -> bb40;                    // scope 1 at no-location
    }

    bb7: {
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_38);                // scope 1 at src/main.rs:54:10: 54:21
        _39 = discriminant(_3);          // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _39) -> [0_isize: bb26, 1_isize: bb28, otherwise: bb27]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb8: {
        StorageLive(_14);                // scope 1 at src/main.rs:54:10: 54:21
        _14 = move ((_4 as Some).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field); // scope 1 at src/main.rs:54:10: 54:21
        _15 = discriminant(_14);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _15) -> [0_isize: bb10, otherwise: bb9]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb9: {
        StorageLive(_30);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_31);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_32);                // scope 1 at src/main.rs:54:10: 54:21
        _32 = &mut _2;                   // scope 1 at src/main.rs:54:10: 54:21
        _31 = &mut (*_32);               // scope 1 at src/main.rs:54:10: 54:21
        _30 = <__A as MapAccess>::next_value::<IgnoredAny>(move _31) -> [return: bb20, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageLive(_16);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_17);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_18);                // scope 1 at src/main.rs:54:10: 54:21
        _18 = &_3;                       // scope 1 at src/main.rs:54:10: 54:21
        _17 = _18;                       // scope 1 at src/main.rs:54:10: 54:21
        _16 = std::option::Option::<Uuid>::is_some(move _17) -> [return: bb11, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<uuid::Uuid>) -> bool {std::option::Option::<uuid::Uuid>::is_some}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_18);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_17);                // scope 1 at src/main.rs:54:20: 54:21
        switchInt(move _16) -> [false: bb14, otherwise: bb12]; // scope 1 at src/main.rs:54:10: 54:21
    }

    bb12: {
        StorageLive(_19);                // scope 1 at src/main.rs:54:10: 54:21
        _19 = <<__A as MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field(const "channelID") -> [return: bb13, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb13: {
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _19; // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_19);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_16);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb14: {
        StorageDead(_16);                // scope 1 at src/main.rs:54:20: 54:21
        StorageLive(_20);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_21);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_22);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_23);                // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_24);                // scope 1 at src/main.rs:54:10: 54:21
        _24 = &mut _2;                   // scope 1 at src/main.rs:54:10: 54:21
        _23 = &mut (*_24);               // scope 1 at src/main.rs:54:10: 54:21
        _22 = <__A as MapAccess>::next_value::<Uuid>(move _23) -> [return: bb15, unwind: bb44]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_23);                // scope 1 at src/main.rs:54:20: 54:21
        _25 = discriminant(_22);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _25) -> [0_isize: bb18, 1_isize: bb16, otherwise: bb17]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb16: {
        StorageLive(_27);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _27 = move ((_22 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_28);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _29 = move _27;                  // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _28 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _29) -> [return: bb19, unwind: bb43]; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb18: {
        StorageLive(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _26 = ((_22 as Ok).0: uuid::Uuid); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _21 = _26;                       // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        ((_20 as Some).0: uuid::Uuid) = move _21; // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_20) = 1;           // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_21);                // scope 1 at src/main.rs:54:20: 54:21
        _3 = move _20;                   // scope 1 at src/main.rs:54:10: 54:21
        StorageDead(_20);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_22);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb25;                    // scope 1 at src/main.rs:54:10: 54:21
    }

    bb19: {
        StorageDead(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _28; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_28);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_27);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_21);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_20);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_22);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb20: {
        StorageDead(_31);                // scope 1 at src/main.rs:54:20: 54:21
        _33 = discriminant(_30);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _33) -> [0_isize: bb23, 1_isize: bb21, otherwise: bb22]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb21: {
        StorageLive(_35);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _35 = move ((_30 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_36);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_37);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _37 = move _35;                  // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _36 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _37) -> [return: bb24, unwind: bb42]; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb23: {
        StorageLive(_34);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_34);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_32);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_30);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb25;                    // scope 1 at src/main.rs:54:10: 54:21
    }

    bb24: {
        StorageDead(_37);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _36; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_36);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_35);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_32);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_30);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb35;                    // scope 1 at no-location
    }

    bb25: {
        StorageDead(_14);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb1;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb26: {
        StorageLive(_41);                // scope 1 at src/main.rs:54:10: 54:21
        _41 = _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<Uuid, <__A as MapAccess>::Error>(const "channelID") -> [return: bb29, unwind: bb38]; // scope 1 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(&'static str) -> std::result::Result<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<uuid::Uuid, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb27: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb28: {
        StorageLive(_40);                // scope 1 at src/main.rs:54:10: 54:21
        _40 = ((_3 as Some).0: uuid::Uuid); // scope 1 at src/main.rs:54:10: 54:21
        _38 = _40;                       // scope 11 at src/main.rs:54:10: 54:21
        StorageDead(_40);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb34;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb29: {
        _42 = discriminant(_41);         // scope 1 at src/main.rs:54:10: 54:21
        switchInt(move _42) -> [0_isize: bb32, 1_isize: bb30, otherwise: bb31]; // scope 1 at src/main.rs:54:10: 398:9
    }

    bb30: {
        StorageLive(_44);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _44 = move ((_41 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_45);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_46);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _46 = move _44;                  // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _45 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _46) -> [return: bb33, unwind: bb41]; // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        unreachable;                     // scope 1 at src/main.rs:54:10: 54:21
    }

    bb32: {
        StorageLive(_43);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _43 = ((_41 as Ok).0: uuid::Uuid); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _38 = _43;                       // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_43);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_41);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb34;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb33: {
        StorageDead(_46);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _45; // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_45);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_44);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_41);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_38);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb36;                    // scope 1 at no-location
    }

    bb34: {
        StorageLive(_47);                // scope 10 at src/main.rs:54:10: 54:21
        StorageLive(_48);                // scope 10 at src/main.rs:54:10: 54:21
        _48 = _38;                       // scope 10 at src/main.rs:54:10: 54:21
        ((_47 as Unregister).0: uuid::Uuid) = move _48; // scope 10 at src/main.rs:54:10: 54:21
        discriminant(_47) = 2;           // scope 10 at src/main.rs:54:10: 54:21
        StorageDead(_48);                // scope 10 at src/main.rs:54:20: 54:21
        ((_0 as Ok).0: ClientMessage) = move _47; // scope 10 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 10 at src/main.rs:54:10: 54:21
        StorageDead(_47);                // scope 10 at src/main.rs:54:20: 54:21
        StorageDead(_38);                // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb37;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb35: {
        StorageDead(_14);                // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb40;                    // scope 1 at no-location
    }

    bb36: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb37;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb37: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }

    bb38 (cleanup): {
        drop(_2) -> bb39;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at src/main.rs:54:10: 54:21
    }

    bb40: {
        StorageDead(_7);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        goto -> bb36;                    // scope 1 at no-location
    }

    bb41 (cleanup): {
        goto -> bb38;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb42 (cleanup): {
        goto -> bb44;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb43 (cleanup): {
        goto -> bb44;                    // scope 1 at src/main.rs:54:20: 54:21
    }

    bb44 (cleanup): {
        goto -> bb38;                    // scope 1 at src/main.rs:54:20: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "variant identifier"; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [118, 97, 114, 105, 97, 110, 116, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [262143], len: Size { raw: 18 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 18 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [118, 97, 114, 105, 97, 110, 116, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [262143], len: Size { raw: 18 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 18 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn timeout::{closure#0}(_1: [closure@src/main.rs:357:38: 364:6], _2: std::result::Result<Either<(<F as futures::Future>::Item, futures::Flatten<FutureResult<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>, Either<(errors::Error, futures::Flatten<FutureResult<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>>) -> std::result::Result<<F as futures::Future>::Item, errors::Error> {
    debug res => _2;                     // in scope 0 at src/main.rs:357:39: 357:42
    let mut _0: std::result::Result<<F as futures::Future>::Item, errors::Error>; // return place in scope 0 at src/main.rs:357:44: 357:44
    let mut _3: isize;                   // in scope 0 at src/main.rs:359:16: 359:43
    let mut _4: isize;                   // in scope 0 at src/main.rs:361:17: 361:41
    let mut _5: isize;                   // in scope 0 at src/main.rs:359:13: 359:44
    let _6: <F as futures::Future>::Item; // in scope 0 at src/main.rs:359:27: 359:31
    let _7: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>; // in scope 0 at src/main.rs:359:33: 359:41
    let mut _8: <F as futures::Future>::Item; // in scope 0 at src/main.rs:359:51: 359:55
    let _9: F;                           // in scope 0 at src/main.rs:360:31: 360:36
    let mut _10: errors::Error;          // in scope 0 at src/main.rs:360:47: 360:72
    let mut _11: &str;                   // in scope 0 at src/main.rs:360:47: 360:65
    let _12: &str;                       // in scope 0 at src/main.rs:360:47: 360:65
    let _13: errors::Error;              // in scope 0 at src/main.rs:361:28: 361:29
    let _14: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>; // in scope 0 at src/main.rs:361:31: 361:39
    let mut _15: errors::Error;          // in scope 0 at src/main.rs:361:50: 361:51
    let _16: std::io::Error;             // in scope 0 at src/main.rs:362:28: 362:29
    let _17: F;                          // in scope 0 at src/main.rs:362:31: 362:36
    let mut _18: std::result::Result<<F as futures::Future>::Item, std::io::Error>; // in scope 0 at src/main.rs:362:43: 362:49
    let mut _19: std::io::Error;         // in scope 0 at src/main.rs:362:47: 362:48
    let mut _20: [closure@src/main.rs:362:60: 362:80]; // in scope 0 at src/main.rs:362:60: 362:80
    let mut _21: bool;                   // in scope 0 at src/main.rs:364:5: 364:6
    let mut _22: bool;                   // in scope 0 at src/main.rs:364:5: 364:6
    let mut _23: isize;                  // in scope 0 at src/main.rs:364:5: 364:6
    let mut _24: isize;                  // in scope 0 at src/main.rs:364:5: 364:6
    let mut _25: isize;                  // in scope 0 at src/main.rs:364:5: 364:6
    scope 1 {
        debug item => _6;                // in scope 1 at src/main.rs:359:27: 359:31
        debug _timeout => _7;            // in scope 1 at src/main.rs:359:33: 359:41
    }
    scope 2 {
        debug _item => _9;               // in scope 2 at src/main.rs:360:31: 360:36
    }
    scope 3 {
        debug e => _13;                  // in scope 3 at src/main.rs:361:28: 361:29
        debug _timeout => _14;           // in scope 3 at src/main.rs:361:31: 361:39
    }
    scope 4 {
        debug e => _16;                  // in scope 4 at src/main.rs:362:28: 362:29
        debug _item => _17;              // in scope 4 at src/main.rs:362:31: 362:36
    }

    bb0: {
        _21 = const false;               // scope 0 at src/main.rs:358:15: 358:18
        _22 = const false;               // scope 0 at src/main.rs:358:15: 358:18
        _21 = const true;                // scope 0 at src/main.rs:358:15: 358:18
        _22 = const true;                // scope 0 at src/main.rs:358:15: 358:18
        _5 = discriminant(_2);           // scope 0 at src/main.rs:358:15: 358:18
        switchInt(move _5) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at src/main.rs:358:9: 358:18
    }

    bb1: {
        _3 = discriminant(((_2 as Ok).0: futures::future::Either<(<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>)); // scope 0 at src/main.rs:358:15: 358:18
        switchInt(move _3) -> [0_isize: bb5, 1_isize: bb7, otherwise: bb2]; // scope 0 at src/main.rs:358:9: 358:18
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:358:15: 358:18
    }

    bb3: {
        _4 = discriminant(((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>)); // scope 0 at src/main.rs:358:15: 358:18
        switchInt(move _4) -> [0_isize: bb10, 1_isize: bb4, otherwise: bb2]; // scope 0 at src/main.rs:358:9: 358:18
    }

    bb4: {
        StorageLive(_16);                // scope 0 at src/main.rs:362:28: 362:29
        _16 = move (((((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>) as B).0: (std::io::Error, F)).0: std::io::Error); // scope 0 at src/main.rs:362:28: 362:29
        StorageLive(_17);                // scope 0 at src/main.rs:362:31: 362:36
        _17 = move (((((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>) as B).0: (std::io::Error, F)).1: F); // scope 0 at src/main.rs:362:31: 362:36
        StorageLive(_18);                // scope 4 at src/main.rs:362:43: 362:49
        StorageLive(_19);                // scope 4 at src/main.rs:362:47: 362:48
        _19 = move _16;                  // scope 4 at src/main.rs:362:47: 362:48
        ((_18 as Err).0: std::io::Error) = move _19; // scope 4 at src/main.rs:362:43: 362:49
        discriminant(_18) = 1;           // scope 4 at src/main.rs:362:43: 362:49
        StorageDead(_19);                // scope 4 at src/main.rs:362:48: 362:49
        StorageLive(_20);                // scope 4 at src/main.rs:362:60: 362:80
        _0 = <std::result::Result<<F as futures::Future>::Item, std::io::Error> as errors::ResultExt<<F as futures::Future>::Item, std::io::Error>>::chain_err::<[closure@src/main.rs:362:60: 362:80], &str>(move _18, move _20) -> [return: bb12, unwind: bb14]; // scope 4 at src/main.rs:362:43: 362:81
                                         // mir::Constant
                                         // + span: src/main.rs:362:50: 362:59
                                         // + literal: Const { ty: fn(std::result::Result<<F as futures::Future>::Item, std::io::Error>, [closure@src/main.rs:362:60: 362:80]) -> std::result::Result<<F as futures::Future>::Item, errors::Error> {<std::result::Result<<F as futures::Future>::Item, std::io::Error> as errors::ResultExt<<F as futures::Future>::Item, std::io::Error>>::chain_err::<[closure@src/main.rs:362:60: 362:80], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageLive(_6);                 // scope 0 at src/main.rs:359:27: 359:31
        _6 = move (((((_2 as Ok).0: futures::future::Either<(<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>) as A).0: (<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>)).0: <F as futures::Future>::Item); // scope 0 at src/main.rs:359:27: 359:31
        StorageLive(_7);                 // scope 0 at src/main.rs:359:33: 359:41
        _7 = move (((((_2 as Ok).0: futures::future::Either<(<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>) as A).0: (<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>)).1: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>); // scope 0 at src/main.rs:359:33: 359:41
        StorageLive(_8);                 // scope 1 at src/main.rs:359:51: 359:55
        _8 = move _6;                    // scope 1 at src/main.rs:359:51: 359:55
        ((_0 as Ok).0: <F as futures::Future>::Item) = move _8; // scope 1 at src/main.rs:359:48: 359:56
        discriminant(_0) = 0;            // scope 1 at src/main.rs:359:48: 359:56
        StorageDead(_8);                 // scope 1 at src/main.rs:359:55: 359:56
        drop(_7) -> bb6;                 // scope 0 at src/main.rs:359:55: 359:56
    }

    bb6: {
        StorageDead(_7);                 // scope 0 at src/main.rs:359:55: 359:56
        StorageDead(_6);                 // scope 0 at src/main.rs:359:55: 359:56
        goto -> bb28;                    // scope 0 at src/main.rs:359:55: 359:56
    }

    bb7: {
        StorageLive(_9);                 // scope 0 at src/main.rs:360:31: 360:36
        _9 = move (((((_2 as Ok).0: futures::future::Either<(<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>) as B).0: ((), F)).1: F); // scope 0 at src/main.rs:360:31: 360:36
        StorageLive(_10);                // scope 2 at src/main.rs:360:47: 360:72
        StorageLive(_11);                // scope 2 at src/main.rs:360:47: 360:65
        StorageLive(_12);                // scope 2 at src/main.rs:360:47: 360:65
        _12 = const "accept timed out";  // scope 2 at src/main.rs:360:47: 360:65
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [97, 99, 99, 101, 112, 116, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 })
                                         // mir::Constant
                                         // + span: src/main.rs:360:47: 360:65
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [97, 99, 99, 101, 112, 116, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 }) }
        _11 = _12;                       // scope 2 at src/main.rs:360:47: 360:65
        _10 = <&str as Into<errors::Error>>::into(move _11) -> [return: bb8, unwind: bb15]; // scope 2 at src/main.rs:360:47: 360:72
                                         // mir::Constant
                                         // + span: src/main.rs:360:66: 360:70
                                         // + literal: Const { ty: fn(&str) -> errors::Error {<&str as std::convert::Into<errors::Error>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_11);                // scope 2 at src/main.rs:360:71: 360:72
        ((_0 as Err).0: errors::Error) = move _10; // scope 2 at src/main.rs:360:43: 360:73
        discriminant(_0) = 1;            // scope 2 at src/main.rs:360:43: 360:73
        StorageDead(_12);                // scope 2 at src/main.rs:360:72: 360:73
        StorageDead(_10);                // scope 2 at src/main.rs:360:72: 360:73
        drop(_9) -> bb9;                 // scope 0 at src/main.rs:360:72: 360:73
    }

    bb9: {
        StorageDead(_9);                 // scope 0 at src/main.rs:360:72: 360:73
        goto -> bb28;                    // scope 0 at src/main.rs:360:72: 360:73
    }

    bb10: {
        StorageLive(_13);                // scope 0 at src/main.rs:361:28: 361:29
        _13 = move (((((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>) as A).0: (errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>)).0: errors::Error); // scope 0 at src/main.rs:361:28: 361:29
        StorageLive(_14);                // scope 0 at src/main.rs:361:31: 361:39
        _14 = move (((((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>) as A).0: (errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>)).1: futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>); // scope 0 at src/main.rs:361:31: 361:39
        StorageLive(_15);                // scope 3 at src/main.rs:361:50: 361:51
        _15 = move _13;                  // scope 3 at src/main.rs:361:50: 361:51
        ((_0 as Err).0: errors::Error) = move _15; // scope 3 at src/main.rs:361:46: 361:52
        discriminant(_0) = 1;            // scope 3 at src/main.rs:361:46: 361:52
        StorageDead(_15);                // scope 3 at src/main.rs:361:51: 361:52
        drop(_14) -> bb11;               // scope 0 at src/main.rs:361:51: 361:52
    }

    bb11: {
        StorageDead(_14);                // scope 0 at src/main.rs:361:51: 361:52
        StorageDead(_13);                // scope 0 at src/main.rs:361:51: 361:52
        goto -> bb28;                    // scope 0 at src/main.rs:361:51: 361:52
    }

    bb12: {
        StorageDead(_20);                // scope 4 at src/main.rs:362:80: 362:81
        StorageDead(_18);                // scope 4 at src/main.rs:362:80: 362:81
        drop(_17) -> bb13;               // scope 0 at src/main.rs:362:80: 362:81
    }

    bb13: {
        StorageDead(_17);                // scope 0 at src/main.rs:362:80: 362:81
        StorageDead(_16);                // scope 0 at src/main.rs:362:80: 362:81
        goto -> bb28;                    // scope 0 at src/main.rs:362:80: 362:81
    }

    bb14 (cleanup): {
        drop(_17) -> bb16;               // scope 0 at src/main.rs:362:80: 362:81
    }

    bb15 (cleanup): {
        drop(_9) -> bb16;                // scope 0 at src/main.rs:360:72: 360:73
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at src/main.rs:357:38: 364:6
    }

    bb17: {
        return;                          // scope 0 at src/main.rs:364:6: 364:6
    }

    bb18: {
        switchInt(_21) -> [false: bb19, otherwise: bb22]; // scope 0 at src/main.rs:364:5: 364:6
    }

    bb19: {
        _21 = const false;               // scope 0 at src/main.rs:364:5: 364:6
        goto -> bb17;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb20: {
        goto -> bb19;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb21: {
        goto -> bb19;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb22: {
        _23 = discriminant(((_2 as Ok).0: futures::future::Either<(<F as futures::Future>::Item, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), ((), F)>)); // scope 0 at src/main.rs:364:5: 364:6
        switchInt(move _23) -> [0_isize: bb20, otherwise: bb21]; // scope 0 at src/main.rs:364:5: 364:6
    }

    bb23: {
        switchInt(_22) -> [false: bb24, otherwise: bb27]; // scope 0 at src/main.rs:364:5: 364:6
    }

    bb24: {
        _22 = const false;               // scope 0 at src/main.rs:364:5: 364:6
        goto -> bb17;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb25: {
        goto -> bb24;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb26: {
        goto -> bb24;                    // scope 0 at src/main.rs:364:5: 364:6
    }

    bb27: {
        _24 = discriminant(((_2 as Err).0: futures::future::Either<(errors::Error, futures::Flatten<futures::Done<tokio_core::reactor::Timeout, std::io::Error>>), (std::io::Error, F)>)); // scope 0 at src/main.rs:364:5: 364:6
        switchInt(move _24) -> [0_isize: bb25, otherwise: bb26]; // scope 0 at src/main.rs:364:5: 364:6
    }

    bb28: {
        _25 = discriminant(_2);          // scope 0 at src/main.rs:364:5: 364:6
        switchInt(move _25) -> [0_isize: bb18, otherwise: bb23]; // scope 0 at src/main.rs:364:5: 364:6
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:193:13: 199:14>::from(_1: serde_json::Error) -> errors::Error {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:25: 194:26
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:57: 194:61
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
    let mut _3: serde_json::Error;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        ((_2 as Json).0: serde_json::Error) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        discriminant(_2) = 3;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:66: 196:67
        _0 = errors::Error::from_kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 197:22
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 195:43
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:197:21: 197:22
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:198:18: 198:18
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process::{closure#1}(_1: &mut [closure@src/main.rs:298:36: 348:10], _2: (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)) -> futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, Box<dyn futures::Future<Error = errors::Error, Item = Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]> {
    debug handle => ((*_1).0: tokio_core::reactor::Handle); // in scope 0 at src/main.rs:296:13: 296:19
    debug cx => ((*_1).1: std::rc::Rc<Context>); // in scope 0 at src/main.rs:275:19: 275:21
    debug uaid => ((*_1).2: uuid::Uuid); // in scope 0 at src/main.rs:282:13: 282:17
    let mut _0: futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>; // return place in scope 0 at src/main.rs:298:52: 298:52
    let _3: T;                           // in scope 0 at src/main.rs:298:43: 298:45
    let _4: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 0 at src/main.rs:298:47: 298:49
    let mut _6: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:299:26: 299:32
    let mut _8: &std::rc::Rc<Context>;   // in scope 0 at src/main.rs:300:22: 300:24
    let mut _9: StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>; // in scope 0 at src/main.rs:301:13: 301:36
    let mut _10: T;                      // in scope 0 at src/main.rs:301:29: 301:31
    let mut _11: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 0 at src/main.rs:301:33: 301:35
    let mut _12: [closure@src/main.rs:301:42: 347:14]; // in scope 0 at src/main.rs:301:42: 347:14
    let mut _13: bool;                   // in scope 0 at src/main.rs:348:9: 348:10
    let mut _14: bool;                   // in scope 0 at src/main.rs:348:9: 348:10
    let mut _15: bool;                   // in scope 0 at src/main.rs:348:9: 348:10
    let mut _16: bool;                   // in scope 0 at src/main.rs:348:9: 348:10
    scope 1 {
        debug ws => _3;                  // in scope 1 at src/main.rs:298:43: 298:45
        debug rx => _4;                  // in scope 1 at src/main.rs:298:47: 298:49
        let _5: tokio_core::reactor::Handle; // in scope 1 at src/main.rs:299:17: 299:23
        scope 2 {
            debug handle => _5;          // in scope 2 at src/main.rs:299:17: 299:23
            let _7: std::rc::Rc<Context>; // in scope 2 at src/main.rs:300:17: 300:19
            scope 3 {
                debug cx => _7;          // in scope 3 at src/main.rs:300:17: 300:19
            }
        }
    }

    bb0: {
        _14 = const false;               // scope 0 at src/main.rs:298:43: 298:45
        _13 = const false;               // scope 0 at src/main.rs:298:43: 298:45
        _15 = const false;               // scope 0 at src/main.rs:298:43: 298:45
        _16 = const false;               // scope 0 at src/main.rs:298:43: 298:45
        StorageLive(_3);                 // scope 0 at src/main.rs:298:43: 298:45
        _16 = const true;                // scope 0 at src/main.rs:298:43: 298:45
        _3 = move (_2.0: T);             // scope 0 at src/main.rs:298:43: 298:45
        StorageLive(_4);                 // scope 0 at src/main.rs:298:47: 298:49
        _15 = const true;                // scope 0 at src/main.rs:298:47: 298:49
        _4 = move (_2.1: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // scope 0 at src/main.rs:298:47: 298:49
        StorageLive(_5);                 // scope 1 at src/main.rs:299:17: 299:23
        StorageLive(_6);                 // scope 1 at src/main.rs:299:26: 299:32
        _6 = &((*_1).0: tokio_core::reactor::Handle); // scope 1 at src/main.rs:299:26: 299:32
        _5 = <Handle as Clone>::clone(move _6) -> [return: bb1, unwind: bb12]; // scope 1 at src/main.rs:299:26: 299:40
                                         // mir::Constant
                                         // + span: src/main.rs:299:33: 299:38
                                         // + literal: Const { ty: for<'r> fn(&'r tokio_core::reactor::Handle) -> tokio_core::reactor::Handle {<tokio_core::reactor::Handle as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _14 = const true;                // scope 1 at src/main.rs:299:39: 299:40
        StorageDead(_6);                 // scope 1 at src/main.rs:299:39: 299:40
        StorageLive(_7);                 // scope 2 at src/main.rs:300:17: 300:19
        StorageLive(_8);                 // scope 2 at src/main.rs:300:22: 300:24
        _8 = &((*_1).1: std::rc::Rc<Context>); // scope 2 at src/main.rs:300:22: 300:24
        _7 = <Rc<Context> as Clone>::clone(move _8) -> [return: bb2, unwind: bb10]; // scope 2 at src/main.rs:300:22: 300:32
                                         // mir::Constant
                                         // + span: src/main.rs:300:25: 300:30
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _13 = const true;                // scope 2 at src/main.rs:300:31: 300:32
        StorageDead(_8);                 // scope 2 at src/main.rs:300:31: 300:32
        StorageLive(_9);                 // scope 3 at src/main.rs:301:13: 301:36
        StorageLive(_10);                // scope 3 at src/main.rs:301:29: 301:31
        _16 = const false;               // scope 3 at src/main.rs:301:29: 301:31
        _10 = move _3;                   // scope 3 at src/main.rs:301:29: 301:31
        StorageLive(_11);                // scope 3 at src/main.rs:301:33: 301:35
        _15 = const false;               // scope 3 at src/main.rs:301:33: 301:35
        _11 = move _4;                   // scope 3 at src/main.rs:301:33: 301:35
        _9 = StreamNext::<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>::new(move _10, move _11) -> [return: bb3, unwind: bb8]; // scope 3 at src/main.rs:301:13: 301:36
                                         // mir::Constant
                                         // + span: src/main.rs:301:13: 301:28
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>) -> StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>> {StreamNext::<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_11);                // scope 3 at src/main.rs:301:35: 301:36
        StorageDead(_10);                // scope 3 at src/main.rs:301:35: 301:36
        StorageLive(_12);                // scope 3 at src/main.rs:301:42: 347:14
        _13 = const false;               // scope 3 at src/main.rs:301:42: 347:14
        _14 = const false;               // scope 3 at src/main.rs:301:42: 347:14
        (_12.0: std::rc::Rc<Context>) = move _7; // scope 3 at src/main.rs:301:42: 347:14
        (_12.1: uuid::Uuid) = ((*_1).2: uuid::Uuid); // scope 3 at src/main.rs:301:42: 347:14
        (_12.2: tokio_core::reactor::Handle) = move _5; // scope 3 at src/main.rs:301:42: 347:14
        _0 = <StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>> as futures::Future>::then::<[closure@src/main.rs:301:42: 347:14], Box<dyn futures::Future<Error = errors::Error, Item = Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>>(move _9, move _12) -> [return: bb4, unwind: bb8]; // scope 3 at src/main.rs:301:13: 347:15
                                         // mir::Constant
                                         // + span: src/main.rs:301:37: 301:41
                                         // + literal: Const { ty: fn(StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, [closure@src/main.rs:301:42: 347:14]) -> futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]> {<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>> as futures::Future>::then::<[closure@src/main.rs:301:42: 347:14], std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_12);                // scope 3 at src/main.rs:347:14: 347:15
        StorageDead(_9);                 // scope 3 at src/main.rs:347:14: 347:15
        _13 = const false;               // scope 2 at src/main.rs:348:9: 348:10
        StorageDead(_7);                 // scope 2 at src/main.rs:348:9: 348:10
        _14 = const false;               // scope 1 at src/main.rs:348:9: 348:10
        StorageDead(_5);                 // scope 1 at src/main.rs:348:9: 348:10
        _15 = const false;               // scope 0 at src/main.rs:348:9: 348:10
        StorageDead(_4);                 // scope 0 at src/main.rs:348:9: 348:10
        _16 = const false;               // scope 0 at src/main.rs:348:9: 348:10
        StorageDead(_3);                 // scope 0 at src/main.rs:348:9: 348:10
        return;                          // scope 0 at src/main.rs:348:10: 348:10
    }

    bb5 (cleanup): {
        switchInt(_16) -> [false: bb6, otherwise: bb13]; // scope 0 at src/main.rs:348:9: 348:10
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at src/main.rs:298:36: 348:10
    }

    bb7 (cleanup): {
        drop(_7) -> bb10;                // scope 2 at src/main.rs:348:9: 348:10
    }

    bb8 (cleanup): {
        switchInt(_13) -> [false: bb10, otherwise: bb7]; // scope 2 at src/main.rs:348:9: 348:10
    }

    bb9 (cleanup): {
        drop(_5) -> bb12;                // scope 1 at src/main.rs:348:9: 348:10
    }

    bb10 (cleanup): {
        switchInt(_14) -> [false: bb12, otherwise: bb9]; // scope 1 at src/main.rs:348:9: 348:10
    }

    bb11 (cleanup): {
        drop(_4) -> bb5;                 // scope 0 at src/main.rs:348:9: 348:10
    }

    bb12 (cleanup): {
        switchInt(_15) -> [false: bb5, otherwise: bb11]; // scope 0 at src/main.rs:348:9: 348:10
    }

    bb13 (cleanup): {
        drop(_3) -> bb6;                 // scope 0 at src/main.rs:348:9: 348:10
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:173:9: 177:10>::fmt(_1: &errors::Error, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:174:20: 174:25
    debug f => _2;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:174:27: 174:28
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:174:61: 174:79
    let mut _3: &errors::ErrorKind;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
    let _4: &errors::ErrorKind;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
    let mut _5: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:51: 175:52

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
        _4 = &((*_1).0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
        _3 = _4;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:42: 175:49
        StorageLive(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:51: 175:52
        _5 = &mut (*_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:51: 175:52
        _0 = <errors::ErrorKind as std::fmt::Display>::fmt(move _3, move _5) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:17: 175:53
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:17: 175:41
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r errors::ErrorKind, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<errors::ErrorKind as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:52: 175:53
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:175:52: 175:53
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:176:13: 176:14
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:176:14: 176:14
    }
}

fn <impl at src/main.rs:232:1: 350:2>::handshake::{closure#0}(_1: [closure@src/main.rs:238:40: 270:10], _2: std::result::Result<(std::option::Option<ClientMessage>, T), (errors::Error, T)>) -> Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> {
    debug res => _2;                     // in scope 0 at src/main.rs:238:46: 238:49
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // return place in scope 0 at src/main.rs:238:54: 238:65
    let mut _3: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // in scope 0 at src/main.rs:267:13: 269:16
    let _4: std::option::Option<ClientMessage>; // in scope 0 at src/main.rs:239:18: 239:21
    let _5: T;                           // in scope 0 at src/main.rs:239:23: 239:25
    let mut _6: (std::option::Option<ClientMessage>, T); // in scope 0 at src/main.rs:239:29: 244:14
    let mut _7: isize;                   // in scope 0 at src/main.rs:240:17: 240:25
    let _8: (std::option::Option<ClientMessage>, T); // in scope 0 at src/main.rs:240:20: 240:24
    let _9: errors::Error;               // in scope 0 at src/main.rs:241:22: 241:23
    let _10: T;                          // in scope 0 at src/main.rs:241:25: 241:28
    let mut _11: std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>; // in scope 0 at src/main.rs:242:28: 242:79
    let mut _12: futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>; // in scope 0 at src/main.rs:242:37: 242:78
    let mut _13: std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>; // in scope 0 at src/main.rs:242:44: 242:77
    let mut _14: std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>; // in scope 0 at src/main.rs:242:44: 242:50
    let mut _15: errors::Error;          // in scope 0 at src/main.rs:242:48: 242:49
    let mut _16: [closure@src/main.rs:242:61: 242:76]; // in scope 0 at src/main.rs:242:61: 242:76
    let mut _18: isize;                  // in scope 0 at src/main.rs:246:17: 246:26
    let mut _20: std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>; // in scope 0 at src/main.rs:247:32: 247:83
    let mut _21: futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>; // in scope 0 at src/main.rs:247:41: 247:82
    let mut _22: errors::Error;          // in scope 0 at src/main.rs:247:45: 247:81
    let mut _23: &str;                   // in scope 0 at src/main.rs:247:45: 247:74
    let _24: &str;                       // in scope 0 at src/main.rs:247:45: 247:74
    let mut _27: (futures::unsync::mpsc::UnboundedSender<Notification>, futures::unsync::mpsc::UnboundedReceiver<Notification>); // in scope 0 at src/main.rs:250:28: 250:45
    let mut _29: isize;                  // in scope 0 at src/main.rs:252:17: 252:72
    let mut _33: uuid::Uuid;             // in scope 0 at src/main.rs:254:31: 254:64
    let mut _34: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:254:31: 254:35
    let mut _35: bool;                   // in scope 0 at src/main.rs:255:38: 255:66
    let mut _36: std::option::Option<bool>; // in scope 0 at src/main.rs:255:38: 255:49
    let mut _37: std::vec::Vec<uuid::Uuid>; // in scope 0 at src/main.rs:256:38: 256:71
    let mut _38: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 0 at src/main.rs:256:38: 256:49
    let mut _39: std::vec::Vec<uuid::Uuid>; // in scope 0 at src/main.rs:256:60: 256:70
    let mut _40: futures::unsync::mpsc::UnboundedSender<Notification>; // in scope 0 at src/main.rs:257:29: 257:31
    let mut _41: std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>; // in scope 0 at src/main.rs:260:29: 260:87
    let mut _42: futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>; // in scope 0 at src/main.rs:260:38: 260:86
    let mut _43: errors::Error;          // in scope 0 at src/main.rs:260:42: 260:85
    let mut _44: &str;                   // in scope 0 at src/main.rs:260:42: 260:78
    let _45: &str;                       // in scope 0 at src/main.rs:260:42: 260:78
    let mut _47: uuid::Uuid;             // in scope 0 at src/main.rs:263:23: 263:34
    let mut _48: std::option::Option<bool>; // in scope 0 at src/main.rs:265:30: 265:54
    let mut _49: bool;                   // in scope 0 at src/main.rs:265:35: 265:53
    let mut _50: std::boxed::Box<futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>>; // in scope 0 at src/main.rs:267:13: 269:16
    let mut _51: futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>; // in scope 0 at src/main.rs:267:22: 269:15
    let mut _52: futures::sink::Send<T>; // in scope 0 at src/main.rs:267:22: 267:39
    let mut _53: T;                      // in scope 0 at src/main.rs:267:22: 267:24
    let mut _54: ServerMessage;          // in scope 0 at src/main.rs:267:30: 267:38
    let mut _55: [closure@src/main.rs:267:44: 269:14]; // in scope 0 at src/main.rs:267:44: 269:14
    let mut _56: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _57: bool;                   // in scope 0 at src/main.rs:256:70: 256:71
    let mut _58: bool;                   // in scope 0 at src/main.rs:259:17: 259:18
    let mut _59: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _60: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _61: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _62: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _63: bool;                   // in scope 0 at src/main.rs:270:9: 270:10
    let mut _64: isize;                  // in scope 0 at src/main.rs:270:9: 270:10
    let mut _65: isize;                  // in scope 0 at src/main.rs:270:9: 270:10
    let mut _66: isize;                  // in scope 0 at src/main.rs:270:9: 270:10
    scope 1 {
        debug msg => _4;                 // in scope 1 at src/main.rs:239:18: 239:21
        debug ws => _5;                  // in scope 1 at src/main.rs:239:23: 239:25
        let _17: ClientMessage;          // in scope 1 at src/main.rs:245:17: 245:20
        let _19: ClientMessage;          // in scope 1 at src/main.rs:246:22: 246:25
        scope 4 {
            debug msg => _17;            // in scope 4 at src/main.rs:245:17: 245:20
            let _25: futures::unsync::mpsc::UnboundedSender<Notification>; // in scope 4 at src/main.rs:250:18: 250:20
            let _26: futures::unsync::mpsc::UnboundedReceiver<Notification>; // in scope 4 at src/main.rs:250:22: 250:24
            scope 6 {
                debug tx => _25;         // in scope 6 at src/main.rs:250:18: 250:20
                debug rx => _26;         // in scope 6 at src/main.rs:250:22: 250:24
                let _28: Client;         // in scope 6 at src/main.rs:251:17: 251:23
                let _30: std::option::Option<uuid::Uuid>; // in scope 6 at src/main.rs:252:40: 252:44
                let _31: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 6 at src/main.rs:252:46: 252:57
                let _32: std::option::Option<bool>; // in scope 6 at src/main.rs:252:59: 252:70
                scope 7 {
                    debug client => _28; // in scope 7 at src/main.rs:251:17: 251:23
                    let _46: ServerMessage; // in scope 7 at src/main.rs:262:17: 262:25
                    scope 9 {
                        debug response => _46; // in scope 9 at src/main.rs:262:17: 262:25
                    }
                }
                scope 8 {
                    debug uaid => _30;   // in scope 8 at src/main.rs:252:40: 252:44
                    debug channel_ids => _31; // in scope 8 at src/main.rs:252:46: 252:57
                    debug use_webpush => _32; // in scope 8 at src/main.rs:252:59: 252:70
                }
            }
        }
        scope 5 {
            debug msg => _19;            // in scope 5 at src/main.rs:246:22: 246:25
        }
    }
    scope 2 {
        debug pair => _8;                // in scope 2 at src/main.rs:240:20: 240:24
    }
    scope 3 {
        debug e => _9;                   // in scope 3 at src/main.rs:241:22: 241:23
        debug _rx => _10;                // in scope 3 at src/main.rs:241:25: 241:28
    }

    bb0: {
        _63 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _58 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _56 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _57 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _60 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _61 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _59 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        _62 = const false;               // scope 0 at src/main.rs:267:13: 269:16
        StorageLive(_3);                 // scope 0 at src/main.rs:267:13: 269:16
        StorageLive(_6);                 // scope 0 at src/main.rs:239:29: 244:14
        _7 = discriminant(_2);           // scope 0 at src/main.rs:239:35: 239:38
        switchInt(move _7) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at src/main.rs:239:29: 239:38
    }

    bb1: {
        StorageLive(_9);                 // scope 0 at src/main.rs:241:22: 241:23
        _9 = move (((_2 as Err).0: (errors::Error, T)).0: errors::Error); // scope 0 at src/main.rs:241:22: 241:23
        StorageLive(_10);                // scope 0 at src/main.rs:241:25: 241:28
        _10 = move (((_2 as Err).0: (errors::Error, T)).1: T); // scope 0 at src/main.rs:241:25: 241:28
        StorageLive(_11);                // scope 3 at src/main.rs:242:28: 242:79
        StorageLive(_12);                // scope 3 at src/main.rs:242:37: 242:78
        StorageLive(_13);                // scope 3 at src/main.rs:242:44: 242:77
        StorageLive(_14);                // scope 3 at src/main.rs:242:44: 242:50
        StorageLive(_15);                // scope 3 at src/main.rs:242:48: 242:49
        _15 = move _9;                   // scope 3 at src/main.rs:242:48: 242:49
        ((_14 as Err).0: errors::Error) = move _15; // scope 3 at src/main.rs:242:44: 242:50
        discriminant(_14) = 1;           // scope 3 at src/main.rs:242:44: 242:50
        StorageDead(_15);                // scope 3 at src/main.rs:242:49: 242:50
        StorageLive(_16);                // scope 3 at src/main.rs:242:61: 242:76
        _13 = <std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> as errors::ResultExt<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::chain_err::<[closure@src/main.rs:242:61: 242:76], &str>(move _14, move _16) -> [return: bb4, unwind: bb34]; // scope 3 at src/main.rs:242:44: 242:77
                                         // mir::Constant
                                         // + span: src/main.rs:242:51: 242:60
                                         // + literal: Const { ty: fn(std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>, [closure@src/main.rs:242:61: 242:76]) -> std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> {<std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> as errors::ResultExt<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::chain_err::<[closure@src/main.rs:242:61: 242:76], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:239:35: 239:38
    }

    bb3: {
        StorageLive(_8);                 // scope 0 at src/main.rs:240:20: 240:24
        _8 = move ((_2 as Ok).0: (std::option::Option<ClientMessage>, T)); // scope 0 at src/main.rs:240:20: 240:24
        _6 = move _8;                    // scope 2 at src/main.rs:240:29: 240:33
        StorageDead(_8);                 // scope 0 at src/main.rs:240:32: 240:33
        StorageLive(_4);                 // scope 0 at src/main.rs:239:18: 239:21
        _63 = const true;                // scope 0 at src/main.rs:239:18: 239:21
        _4 = move (_6.0: std::option::Option<ClientMessage>); // scope 0 at src/main.rs:239:18: 239:21
        StorageLive(_5);                 // scope 0 at src/main.rs:239:23: 239:25
        _62 = const true;                // scope 0 at src/main.rs:239:23: 239:25
        _5 = move (_6.1: T);             // scope 0 at src/main.rs:239:23: 239:25
        StorageDead(_6);                 // scope 0 at src/main.rs:244:14: 244:15
        StorageLive(_17);                // scope 1 at src/main.rs:245:17: 245:20
        _18 = discriminant(_4);          // scope 1 at src/main.rs:245:29: 245:32
        switchInt(move _18) -> [0_isize: bb7, 1_isize: bb9, otherwise: bb8]; // scope 1 at src/main.rs:245:23: 245:32
    }

    bb4: {
        StorageDead(_16);                // scope 3 at src/main.rs:242:76: 242:77
        StorageDead(_14);                // scope 3 at src/main.rs:242:76: 242:77
        _12 = done::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>(move _13) -> [return: bb5, unwind: bb34]; // scope 3 at src/main.rs:242:37: 242:78
                                         // mir::Constant
                                         // + span: src/main.rs:242:37: 242:43
                                         // + literal: Const { ty: fn(std::result::Result<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>) -> futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> {futures::result::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_13);                // scope 3 at src/main.rs:242:77: 242:78
        _11 = Box::<FutureResult<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new(move _12) -> [return: bb6, unwind: bb34]; // scope 3 at src/main.rs:242:28: 242:79
                                         // mir::Constant
                                         // + span: src/main.rs:242:28: 242:36
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>) -> std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>> {std::boxed::Box::<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        _0 = move _11 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 3 at src/main.rs:242:28: 242:79
        StorageDead(_12);                // scope 3 at src/main.rs:242:78: 242:79
        StorageDead(_11);                // scope 3 at src/main.rs:242:78: 242:79
        drop(_10) -> bb30;               // scope 0 at src/main.rs:243:17: 243:18
    }

    bb7: {
        StorageLive(_20);                // scope 1 at src/main.rs:247:32: 247:83
        StorageLive(_21);                // scope 1 at src/main.rs:247:41: 247:82
        StorageLive(_22);                // scope 1 at src/main.rs:247:45: 247:81
        StorageLive(_23);                // scope 1 at src/main.rs:247:45: 247:74
        StorageLive(_24);                // scope 1 at src/main.rs:247:45: 247:74
        _24 = const "terminated before handshake"; // scope 1 at src/main.rs:247:45: 247:74
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [116, 101, 114, 109, 105, 110, 97, 116, 101, 100, 32, 98, 101, 102, 111, 114, 101, 32, 104, 97, 110, 100, 115, 104, 97, 107, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [134217727], len: Size { raw: 27 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 27 })
                                         // mir::Constant
                                         // + span: src/main.rs:247:45: 247:74
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [116, 101, 114, 109, 105, 110, 97, 116, 101, 100, 32, 98, 101, 102, 111, 114, 101, 32, 104, 97, 110, 100, 115, 104, 97, 107, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [134217727], len: Size { raw: 27 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 27 }) }
        _23 = _24;                       // scope 1 at src/main.rs:247:45: 247:74
        _22 = <&str as Into<errors::Error>>::into(move _23) -> [return: bb10, unwind: bb49]; // scope 1 at src/main.rs:247:45: 247:81
                                         // mir::Constant
                                         // + span: src/main.rs:247:75: 247:79
                                         // + literal: Const { ty: fn(&str) -> errors::Error {<&str as std::convert::Into<errors::Error>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        unreachable;                     // scope 1 at src/main.rs:245:29: 245:32
    }

    bb9: {
        StorageLive(_19);                // scope 1 at src/main.rs:246:22: 246:25
        _63 = const false;               // scope 1 at src/main.rs:246:22: 246:25
        _19 = move ((_4 as Some).0: ClientMessage); // scope 1 at src/main.rs:246:22: 246:25
        _61 = const true;                // scope 5 at src/main.rs:246:30: 246:33
        _17 = move _19;                  // scope 5 at src/main.rs:246:30: 246:33
        StorageDead(_19);                // scope 1 at src/main.rs:246:32: 246:33
        StorageLive(_27);                // scope 4 at src/main.rs:250:28: 250:45
        _27 = futures::unsync::mpsc::unbounded::<Notification>() -> [return: bb13, unwind: bb47]; // scope 4 at src/main.rs:250:28: 250:45
                                         // mir::Constant
                                         // + span: src/main.rs:250:28: 250:43
                                         // + literal: Const { ty: fn() -> (futures::unsync::mpsc::UnboundedSender<Notification>, futures::unsync::mpsc::UnboundedReceiver<Notification>) {futures::unsync::mpsc::unbounded::<Notification>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_23);                // scope 1 at src/main.rs:247:80: 247:81
        _21 = err::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>(move _22) -> [return: bb11, unwind: bb49]; // scope 1 at src/main.rs:247:41: 247:82
                                         // mir::Constant
                                         // + span: src/main.rs:247:41: 247:44
                                         // + literal: Const { ty: fn(errors::Error) -> futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> {futures::err::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_22);                // scope 1 at src/main.rs:247:81: 247:82
        _20 = Box::<FutureResult<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new(move _21) -> [return: bb12, unwind: bb49]; // scope 1 at src/main.rs:247:32: 247:83
                                         // mir::Constant
                                         // + span: src/main.rs:247:32: 247:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>) -> std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>> {std::boxed::Box::<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        _0 = move _20 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 1 at src/main.rs:247:32: 247:83
        StorageDead(_21);                // scope 1 at src/main.rs:247:82: 247:83
        StorageDead(_20);                // scope 1 at src/main.rs:247:82: 247:83
        StorageDead(_24);                // scope 1 at src/main.rs:247:82: 247:83
        goto -> bb28;                    // scope 1 at no-location
    }

    bb13: {
        StorageLive(_25);                // scope 4 at src/main.rs:250:18: 250:20
        _60 = const true;                // scope 4 at src/main.rs:250:18: 250:20
        _25 = move (_27.0: futures::unsync::mpsc::UnboundedSender<Notification>); // scope 4 at src/main.rs:250:18: 250:20
        StorageLive(_26);                // scope 4 at src/main.rs:250:22: 250:24
        _59 = const true;                // scope 4 at src/main.rs:250:22: 250:24
        _26 = move (_27.1: futures::unsync::mpsc::UnboundedReceiver<Notification>); // scope 4 at src/main.rs:250:22: 250:24
        StorageDead(_27);                // scope 4 at src/main.rs:250:45: 250:46
        StorageLive(_28);                // scope 6 at src/main.rs:251:17: 251:23
        _29 = discriminant(_17);         // scope 6 at src/main.rs:251:32: 251:35
        switchInt(move _29) -> [0_isize: bb15, otherwise: bb14]; // scope 6 at src/main.rs:251:26: 251:35
    }

    bb14: {
        StorageLive(_41);                // scope 6 at src/main.rs:260:29: 260:87
        StorageLive(_42);                // scope 6 at src/main.rs:260:38: 260:86
        StorageLive(_43);                // scope 6 at src/main.rs:260:42: 260:85
        StorageLive(_44);                // scope 6 at src/main.rs:260:42: 260:78
        StorageLive(_45);                // scope 6 at src/main.rs:260:42: 260:78
        _45 = const "non-hello message before handshake"; // scope 6 at src/main.rs:260:42: 260:78
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [110, 111, 110, 45, 104, 101, 108, 108, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 98, 101, 102, 111, 114, 101, 32, 104, 97, 110, 100, 115, 104, 97, 107, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [17179869183], len: Size { raw: 34 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 34 })
                                         // mir::Constant
                                         // + span: src/main.rs:260:42: 260:78
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [110, 111, 110, 45, 104, 101, 108, 108, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 98, 101, 102, 111, 114, 101, 32, 104, 97, 110, 100, 115, 104, 97, 107, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [17179869183], len: Size { raw: 34 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 34 }) }
        _44 = _45;                       // scope 6 at src/main.rs:260:42: 260:78
        _43 = <&str as Into<errors::Error>>::into(move _44) -> [return: bb20, unwind: bb43]; // scope 6 at src/main.rs:260:42: 260:85
                                         // mir::Constant
                                         // + span: src/main.rs:260:79: 260:83
                                         // + literal: Const { ty: fn(&str) -> errors::Error {<&str as std::convert::Into<errors::Error>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageLive(_30);                // scope 6 at src/main.rs:252:40: 252:44
        _30 = ((_17 as Hello).0: std::option::Option<uuid::Uuid>); // scope 6 at src/main.rs:252:40: 252:44
        StorageLive(_31);                // scope 6 at src/main.rs:252:46: 252:57
        _61 = const false;               // scope 6 at src/main.rs:252:46: 252:57
        _58 = const true;                // scope 6 at src/main.rs:252:46: 252:57
        _31 = move ((_17 as Hello).1: std::option::Option<std::vec::Vec<uuid::Uuid>>); // scope 6 at src/main.rs:252:46: 252:57
        StorageLive(_32);                // scope 6 at src/main.rs:252:59: 252:70
        _32 = ((_17 as Hello).2: std::option::Option<bool>); // scope 6 at src/main.rs:252:59: 252:70
        StorageLive(_33);                // scope 8 at src/main.rs:254:31: 254:64
        StorageLive(_34);                // scope 8 at src/main.rs:254:31: 254:35
        _34 = _30;                       // scope 8 at src/main.rs:254:31: 254:35
        _33 = std::option::Option::<Uuid>::unwrap_or_else::<fn() -> Uuid {Uuid::new_v4}>(move _34, Uuid::new_v4) -> [return: bb16, unwind: bb41]; // scope 8 at src/main.rs:254:31: 254:64
                                         // mir::Constant
                                         // + span: src/main.rs:254:36: 254:50
                                         // + literal: Const { ty: fn(std::option::Option<uuid::Uuid>, fn() -> uuid::Uuid {uuid::Uuid::new_v4}) -> uuid::Uuid {std::option::Option::<uuid::Uuid>::unwrap_or_else::<fn() -> uuid::Uuid {uuid::Uuid::new_v4}>}, val: Value(Scalar(<ZST>)) }
                                         // mir::Constant
                                         // + span: src/main.rs:254:51: 254:63
                                         // + literal: Const { ty: fn() -> uuid::Uuid {uuid::Uuid::new_v4}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_34);                // scope 8 at src/main.rs:254:63: 254:64
        StorageLive(_35);                // scope 8 at src/main.rs:255:38: 255:66
        StorageLive(_36);                // scope 8 at src/main.rs:255:38: 255:49
        _36 = _32;                       // scope 8 at src/main.rs:255:38: 255:49
        _35 = std::option::Option::<bool>::unwrap_or(move _36, const false) -> [return: bb17, unwind: bb41]; // scope 8 at src/main.rs:255:38: 255:66
                                         // mir::Constant
                                         // + span: src/main.rs:255:50: 255:59
                                         // + literal: Const { ty: fn(std::option::Option<bool>, bool) -> bool {std::option::Option::<bool>::unwrap_or}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        StorageDead(_36);                // scope 8 at src/main.rs:255:65: 255:66
        StorageLive(_37);                // scope 8 at src/main.rs:256:38: 256:71
        StorageLive(_38);                // scope 8 at src/main.rs:256:38: 256:49
        _58 = const false;               // scope 8 at src/main.rs:256:38: 256:49
        _57 = const true;                // scope 8 at src/main.rs:256:38: 256:49
        _38 = move _31;                  // scope 8 at src/main.rs:256:38: 256:49
        StorageLive(_39);                // scope 8 at src/main.rs:256:60: 256:70
        _39 = Vec::<Uuid>::new() -> [return: bb18, unwind: bb39]; // scope 8 at src/main.rs:256:60: 256:70
                                         // mir::Constant
                                         // + span: src/main.rs:256:60: 256:68
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn() -> std::vec::Vec<uuid::Uuid> {std::vec::Vec::<uuid::Uuid>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb18: {
        _57 = const false;               // scope 8 at src/main.rs:256:38: 256:71
        _37 = std::option::Option::<Vec<Uuid>>::unwrap_or(move _38, move _39) -> [return: bb19, unwind: bb39]; // scope 8 at src/main.rs:256:38: 256:71
                                         // mir::Constant
                                         // + span: src/main.rs:256:50: 256:59
                                         // + literal: Const { ty: fn(std::option::Option<std::vec::Vec<uuid::Uuid>>, std::vec::Vec<uuid::Uuid>) -> std::vec::Vec<uuid::Uuid> {std::option::Option::<std::vec::Vec<uuid::Uuid>>::unwrap_or}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        StorageDead(_39);                // scope 8 at src/main.rs:256:70: 256:71
        _57 = const false;               // scope 8 at src/main.rs:256:70: 256:71
        StorageDead(_38);                // scope 8 at src/main.rs:256:70: 256:71
        StorageLive(_40);                // scope 8 at src/main.rs:257:29: 257:31
        _60 = const false;               // scope 8 at src/main.rs:257:29: 257:31
        _40 = move _25;                  // scope 8 at src/main.rs:257:29: 257:31
        _56 = const true;                // scope 8 at src/main.rs:253:21: 258:22
        (_28.0: uuid::Uuid) = move _33;  // scope 8 at src/main.rs:253:21: 258:22
        (_28.1: bool) = move _35;        // scope 8 at src/main.rs:253:21: 258:22
        (_28.2: std::vec::Vec<uuid::Uuid>) = move _37; // scope 8 at src/main.rs:253:21: 258:22
        (_28.3: futures::unsync::mpsc::UnboundedSender<Notification>) = move _40; // scope 8 at src/main.rs:253:21: 258:22
        StorageDead(_40);                // scope 8 at src/main.rs:258:21: 258:22
        StorageDead(_37);                // scope 8 at src/main.rs:258:21: 258:22
        StorageDead(_35);                // scope 8 at src/main.rs:258:21: 258:22
        StorageDead(_33);                // scope 8 at src/main.rs:258:21: 258:22
        StorageDead(_32);                // scope 6 at src/main.rs:259:17: 259:18
        _58 = const false;               // scope 6 at src/main.rs:259:17: 259:18
        StorageDead(_31);                // scope 6 at src/main.rs:259:17: 259:18
        StorageDead(_30);                // scope 6 at src/main.rs:259:17: 259:18
        StorageLive(_46);                // scope 7 at src/main.rs:262:17: 262:25
        StorageLive(_47);                // scope 7 at src/main.rs:263:23: 263:34
        _47 = (_28.0: uuid::Uuid);       // scope 7 at src/main.rs:263:23: 263:34
        StorageLive(_48);                // scope 7 at src/main.rs:265:30: 265:54
        StorageLive(_49);                // scope 7 at src/main.rs:265:35: 265:53
        _49 = (_28.1: bool);             // scope 7 at src/main.rs:265:35: 265:53
        ((_48 as Some).0: bool) = move _49; // scope 7 at src/main.rs:265:30: 265:54
        discriminant(_48) = 1;           // scope 7 at src/main.rs:265:30: 265:54
        StorageDead(_49);                // scope 7 at src/main.rs:265:53: 265:54
        ((_46 as Hello).0: uuid::Uuid) = move _47; // scope 7 at src/main.rs:262:28: 266:14
        ((_46 as Hello).1: u32) = const 200_u32; // scope 7 at src/main.rs:262:28: 266:14
        ((_46 as Hello).2: std::option::Option<bool>) = move _48; // scope 7 at src/main.rs:262:28: 266:14
        discriminant(_46) = 0;           // scope 7 at src/main.rs:262:28: 266:14
        StorageDead(_48);                // scope 7 at src/main.rs:266:13: 266:14
        StorageDead(_47);                // scope 7 at src/main.rs:266:13: 266:14
        StorageLive(_50);                // scope 9 at src/main.rs:267:13: 269:16
        StorageLive(_51);                // scope 9 at src/main.rs:267:22: 269:15
        StorageLive(_52);                // scope 9 at src/main.rs:267:22: 267:39
        StorageLive(_53);                // scope 9 at src/main.rs:267:22: 267:24
        _62 = const false;               // scope 9 at src/main.rs:267:22: 267:24
        _53 = move _5;                   // scope 9 at src/main.rs:267:22: 267:24
        StorageLive(_54);                // scope 9 at src/main.rs:267:30: 267:38
        _54 = move _46;                  // scope 9 at src/main.rs:267:30: 267:38
        _52 = <T as futures::Sink>::send(move _53, move _54) -> [return: bb23, unwind: bb37]; // scope 9 at src/main.rs:267:22: 267:39
                                         // mir::Constant
                                         // + span: src/main.rs:267:25: 267:29
                                         // + literal: Const { ty: fn(T, <T as futures::Sink>::SinkItem) -> futures::sink::Send<T> {<T as futures::Sink>::send}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_44);                // scope 6 at src/main.rs:260:84: 260:85
        _42 = err::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>(move _43) -> [return: bb21, unwind: bb43]; // scope 6 at src/main.rs:260:38: 260:86
                                         // mir::Constant
                                         // + span: src/main.rs:260:38: 260:41
                                         // + literal: Const { ty: fn(errors::Error) -> futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error> {futures::err::<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_43);                // scope 6 at src/main.rs:260:85: 260:86
        _41 = Box::<FutureResult<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new(move _42) -> [return: bb22, unwind: bb43]; // scope 6 at src/main.rs:260:29: 260:87
                                         // mir::Constant
                                         // + span: src/main.rs:260:29: 260:37
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>) -> std::boxed::Box<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>> {std::boxed::Box::<futures::Done<(T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>), errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        _0 = move _41 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 6 at src/main.rs:260:29: 260:87
        StorageDead(_42);                // scope 6 at src/main.rs:260:86: 260:87
        StorageDead(_41);                // scope 6 at src/main.rs:260:86: 260:87
        StorageDead(_45);                // scope 6 at src/main.rs:260:86: 260:87
        _56 = const false;               // scope 6 at src/main.rs:270:9: 270:10
        StorageDead(_28);                // scope 6 at src/main.rs:270:9: 270:10
        drop(_26) -> [return: bb26, unwind: bb33]; // scope 4 at src/main.rs:270:9: 270:10
    }

    bb23: {
        StorageDead(_54);                // scope 9 at src/main.rs:267:38: 267:39
        StorageDead(_53);                // scope 9 at src/main.rs:267:38: 267:39
        StorageLive(_55);                // scope 9 at src/main.rs:267:44: 269:14
        _56 = const false;               // scope 9 at src/main.rs:267:44: 269:14
        _59 = const false;               // scope 9 at src/main.rs:267:44: 269:14
        (_55.0: Client) = move _28;      // scope 9 at src/main.rs:267:44: 269:14
        (_55.1: futures::unsync::mpsc::UnboundedReceiver<Notification>) = move _26; // scope 9 at src/main.rs:267:44: 269:14
        _51 = <futures::sink::Send<T> as futures::Future>::map::<[closure@src/main.rs:267:44: 269:14], (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>(move _52, move _55) -> [return: bb24, unwind: bb37]; // scope 9 at src/main.rs:267:22: 269:15
                                         // mir::Constant
                                         // + span: src/main.rs:267:40: 267:43
                                         // + literal: Const { ty: fn(futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]) -> futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]> {<futures::sink::Send<T> as futures::Future>::map::<[closure@src/main.rs:267:44: 269:14], (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>}, val: Value(Scalar(<ZST>)) }
    }

    bb24: {
        StorageDead(_55);                // scope 9 at src/main.rs:269:14: 269:15
        StorageDead(_52);                // scope 9 at src/main.rs:269:14: 269:15
        _50 = Box::<futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>>::new(move _51) -> [return: bb25, unwind: bb37]; // scope 9 at src/main.rs:267:13: 269:16
                                         // mir::Constant
                                         // + span: src/main.rs:267:13: 267:21
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>) -> std::boxed::Box<futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>> {std::boxed::Box::<futures::Map<futures::sink::Send<T>, [closure@src/main.rs:267:44: 269:14]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        _3 = move _50 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 9 at src/main.rs:267:13: 269:16
        StorageDead(_51);                // scope 9 at src/main.rs:269:15: 269:16
        StorageDead(_50);                // scope 9 at src/main.rs:269:15: 269:16
        StorageDead(_46);                // scope 7 at src/main.rs:270:9: 270:10
        _56 = const false;               // scope 6 at src/main.rs:270:9: 270:10
        StorageDead(_28);                // scope 6 at src/main.rs:270:9: 270:10
        _59 = const false;               // scope 4 at src/main.rs:270:9: 270:10
        StorageDead(_26);                // scope 4 at src/main.rs:270:9: 270:10
        _60 = const false;               // scope 4 at src/main.rs:270:9: 270:10
        StorageDead(_25);                // scope 4 at src/main.rs:270:9: 270:10
        _61 = const false;               // scope 1 at src/main.rs:270:9: 270:10
        StorageDead(_17);                // scope 1 at src/main.rs:270:9: 270:10
        _62 = const false;               // scope 0 at src/main.rs:270:9: 270:10
        StorageDead(_5);                 // scope 0 at src/main.rs:270:9: 270:10
        _63 = const false;               // scope 0 at src/main.rs:270:9: 270:10
        StorageDead(_4);                 // scope 0 at src/main.rs:270:9: 270:10
        _0 = move _3 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 0 at src/main.rs:267:13: 269:16
        StorageDead(_3);                 // scope 0 at src/main.rs:270:9: 270:10
        goto -> bb32;                    // scope 0 at src/main.rs:270:9: 270:10
    }

    bb26: {
        _59 = const false;               // scope 4 at src/main.rs:270:9: 270:10
        StorageDead(_26);                // scope 4 at src/main.rs:270:9: 270:10
        drop(_25) -> [return: bb27, unwind: bb47]; // scope 4 at src/main.rs:270:9: 270:10
    }

    bb27: {
        _60 = const false;               // scope 4 at src/main.rs:270:9: 270:10
        StorageDead(_25);                // scope 4 at src/main.rs:270:9: 270:10
        drop(_17) -> [return: bb28, unwind: bb49]; // scope 1 at src/main.rs:270:9: 270:10
    }

    bb28: {
        _61 = const false;               // scope 1 at src/main.rs:270:9: 270:10
        StorageDead(_17);                // scope 1 at src/main.rs:270:9: 270:10
        drop(_5) -> [return: bb29, unwind: bb52]; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb29: {
        _62 = const false;               // scope 0 at src/main.rs:270:9: 270:10
        StorageDead(_5);                 // scope 0 at src/main.rs:270:9: 270:10
        _63 = const false;               // scope 0 at src/main.rs:270:9: 270:10
        StorageDead(_4);                 // scope 0 at src/main.rs:270:9: 270:10
        goto -> bb31;                    // scope 0 at no-location
    }

    bb30: {
        StorageDead(_10);                // scope 0 at src/main.rs:243:17: 243:18
        StorageDead(_9);                 // scope 0 at src/main.rs:243:17: 243:18
        StorageDead(_6);                 // scope 0 at src/main.rs:244:14: 244:15
        goto -> bb31;                    // scope 0 at no-location
    }

    bb31: {
        StorageDead(_3);                 // scope 0 at src/main.rs:270:9: 270:10
        _64 = discriminant(_2);          // scope 0 at src/main.rs:270:9: 270:10
        switchInt(move _64) -> [0_isize: bb32, otherwise: bb35]; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb32: {
        return;                          // scope 0 at src/main.rs:270:10: 270:10
    }

    bb33 (cleanup): {
        switchInt(_60) -> [false: bb47, otherwise: bb44]; // scope 4 at src/main.rs:270:9: 270:10
    }

    bb34 (cleanup): {
        drop(_10) -> bb53;               // scope 0 at src/main.rs:243:17: 243:18
    }

    bb35: {
        goto -> bb32;                    // scope 0 at src/main.rs:270:9: 270:10
    }

    bb36 (cleanup): {
        drop(_28) -> bb43;               // scope 6 at src/main.rs:270:9: 270:10
    }

    bb37 (cleanup): {
        switchInt(_56) -> [false: bb43, otherwise: bb36]; // scope 6 at src/main.rs:270:9: 270:10
    }

    bb38 (cleanup): {
        drop(_38) -> bb41;               // scope 8 at src/main.rs:256:70: 256:71
    }

    bb39 (cleanup): {
        switchInt(_57) -> [false: bb41, otherwise: bb38]; // scope 8 at src/main.rs:256:70: 256:71
    }

    bb40 (cleanup): {
        drop(_31) -> bb43;               // scope 6 at src/main.rs:259:17: 259:18
    }

    bb41 (cleanup): {
        switchInt(_58) -> [false: bb43, otherwise: bb40]; // scope 6 at src/main.rs:259:17: 259:18
    }

    bb42 (cleanup): {
        drop(_26) -> bb33;               // scope 4 at src/main.rs:270:9: 270:10
    }

    bb43 (cleanup): {
        switchInt(_59) -> [false: bb33, otherwise: bb42]; // scope 4 at src/main.rs:270:9: 270:10
    }

    bb44 (cleanup): {
        drop(_25) -> bb47;               // scope 4 at src/main.rs:270:9: 270:10
    }

    bb45 (cleanup): {
        switchInt(_61) -> [false: bb49, otherwise: bb46]; // scope 1 at src/main.rs:270:9: 270:10
    }

    bb46 (cleanup): {
        drop(((_17 as Hello).1: std::option::Option<std::vec::Vec<uuid::Uuid>>)) -> bb49; // scope 1 at src/main.rs:270:9: 270:10
    }

    bb47 (cleanup): {
        _65 = discriminant(_17);         // scope 1 at src/main.rs:270:9: 270:10
        switchInt(move _65) -> [0_isize: bb45, otherwise: bb49]; // scope 1 at src/main.rs:270:9: 270:10
    }

    bb48 (cleanup): {
        drop(_5) -> bb52;                // scope 0 at src/main.rs:270:9: 270:10
    }

    bb49 (cleanup): {
        switchInt(_62) -> [false: bb52, otherwise: bb48]; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb50 (cleanup): {
        switchInt(_63) -> [false: bb53, otherwise: bb51]; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb51 (cleanup): {
        drop(((_4 as Some).0: ClientMessage)) -> bb53; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb52 (cleanup): {
        _66 = discriminant(_4);          // scope 0 at src/main.rs:270:9: 270:10
        switchInt(move _66) -> [1_isize: bb50, otherwise: bb53]; // scope 0 at src/main.rs:270:9: 270:10
    }

    bb53 (cleanup): {
        resume;                          // scope 0 at src/main.rs:238:40: 270:10
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:113:9: 148:10>::iter(_1: &errors::Error) -> ErrorChainIter {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:140:25: 140:30
    let mut _0: error_chain::ErrorChainIter; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:140:35: 140:57
    let mut _2: &errors::Error;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:44: 141:48

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:44: 141:48
        _2 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:44: 141:48
        _0 = <errors::Error as ChainedError>::iter(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:17: 141:49
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:17: 141:43
                                         // + literal: Const { ty: for<'r> fn(&'r errors::Error) -> error_chain::ErrorChainIter<'r> {<errors::Error as error_chain::ChainedError>::iter}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:141:48: 141:49
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:142:14: 142:14
    }
}

const _IMPL_DESERIALIZE_FOR_ClientMessage: () = {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _0 = const ();                   // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_map(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Visitor, _2: __A) -> std::result::Result<ClientMessage, <__A as MapAccess>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __map => _2;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<ClientMessage, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: std::option::Option<std::option::Option<uuid::Uuid>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _7: std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: &mut __A;                // in scope 0 at src/main.rs:54:10: 54:21
    let mut _10: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _13: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _14: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _15: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _17: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _18: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _19: &std::option::Option<std::option::Option<uuid::Uuid>>; // in scope 0 at src/main.rs:54:10: 54:21
    let _20: &std::option::Option<std::option::Option<uuid::Uuid>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _21: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _22: std::option::Option<std::option::Option<uuid::Uuid>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _23: std::option::Option<uuid::Uuid>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _24: std::result::Result<std::option::Option<uuid::Uuid>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _25: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _26: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _27: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _30: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _31: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _32: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _33: &std::option::Option<std::option::Option<std::vec::Vec<uuid::Uuid>>>; // in scope 0 at src/main.rs:54:10: 54:21
    let _34: &std::option::Option<std::option::Option<std::vec::Vec<uuid::Uuid>>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _35: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _36: std::option::Option<std::option::Option<std::vec::Vec<uuid::Uuid>>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _37: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _38: std::result::Result<std::option::Option<std::vec::Vec<uuid::Uuid>>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _39: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _40: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _41: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _44: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _45: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _46: bool;                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _47: &std::option::Option<std::option::Option<bool>>; // in scope 0 at src/main.rs:54:10: 54:21
    let _48: &std::option::Option<std::option::Option<bool>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _49: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _50: std::option::Option<std::option::Option<bool>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _51: std::option::Option<bool>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
    let mut _52: std::result::Result<std::option::Option<bool>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _53: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _54: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _55: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _58: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _59: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _60: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _61: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _62: &mut __A;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _63: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _66: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _67: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _69: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _71: std::result::Result<std::option::Option<uuid::Uuid>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _72: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _75: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _76: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _78: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _80: std::result::Result<std::option::Option<std::vec::Vec<uuid::Uuid>>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _81: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _84: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _85: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _87: isize;                  // in scope 0 at src/main.rs:54:10: 54:21
    let mut _89: std::result::Result<std::option::Option<bool>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _90: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _93: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _94: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _95: ClientMessage;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _96: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _97: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _98: std::option::Option<bool>; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _99: bool;                   // in scope 0 at src/main.rs:54:20: 54:21
    let mut _100: isize;                 // in scope 0 at src/main.rs:54:20: 54:21
    let mut _101: isize;                 // in scope 0 at src/main.rs:54:20: 54:21
    scope 1 {
        debug __field0 => _3;            // in scope 1 at src/main.rs:54:10: 54:21
        let mut _4: std::option::Option<std::option::Option<std::vec::Vec<uuid::Uuid>>>; // in scope 1 at src/main.rs:54:10: 54:21
        scope 2 {
            debug __field1 => _4;        // in scope 2 at src/main.rs:54:10: 54:21
            let mut _5: std::option::Option<std::option::Option<bool>>; // in scope 2 at src/main.rs:54:10: 54:21
            scope 3 {
                debug __field2 => _5;    // in scope 3 at src/main.rs:54:10: 54:21
                let _11: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _12: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                let _16: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 3 at src/main.rs:54:10: 54:21
                let _28: std::option::Option<uuid::Uuid>; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _29: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                let _42: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _43: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                let _56: std::option::Option<bool>; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _57: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                let _64: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _65: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                let _68: std::option::Option<uuid::Uuid>; // in scope 3 at src/main.rs:54:10: 54:21
                let _70: std::option::Option<uuid::Uuid>; // in scope 3 at src/main.rs:54:10: 54:21
                let _73: std::option::Option<uuid::Uuid>; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                let _74: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                scope 4 {
                    debug val => _11;    // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 5 {
                    debug err => _12;    // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
                scope 6 {
                    debug __key => _16;  // in scope 6 at src/main.rs:54:10: 54:21
                }
                scope 7 {
                    debug val => _28;    // in scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 8 {
                    debug err => _29;    // in scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
                scope 9 {
                    debug val => _42;    // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 10 {
                    debug err => _43;    // in scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
                scope 11 {
                    debug val => _56;    // in scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 12 {
                    debug err => _57;    // in scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
                scope 13 {
                }
                scope 14 {
                    debug val => _64;    // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 15 {
                    debug err => _65;    // in scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
                scope 16 {
                    debug __field0 => _68; // in scope 16 at src/main.rs:54:10: 54:21
                    let _77: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 16 at src/main.rs:54:10: 54:21
                    let _79: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 16 at src/main.rs:54:10: 54:21
                    let _82: std::option::Option<std::vec::Vec<uuid::Uuid>>; // in scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                    let _83: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                    scope 20 {
                        debug __field1 => _77; // in scope 20 at src/main.rs:54:10: 54:21
                        let _86: std::option::Option<bool>; // in scope 20 at src/main.rs:54:10: 54:21
                        let _88: std::option::Option<bool>; // in scope 20 at src/main.rs:54:10: 54:21
                        let _91: std::option::Option<bool>; // in scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                        let _92: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error; // in scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                        scope 24 {
                            debug __field2 => _86; // in scope 24 at src/main.rs:54:10: 54:21
                        }
                        scope 25 {
                            debug __field2 => _88; // in scope 25 at src/main.rs:54:10: 54:21
                        }
                        scope 26 {
                            debug val => _91; // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                        }
                        scope 27 {
                            debug err => _92; // in scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                        }
                    }
                    scope 21 {
                        debug __field1 => _79; // in scope 21 at src/main.rs:54:10: 54:21
                    }
                    scope 22 {
                        debug val => _82; // in scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                    }
                    scope 23 {
                        debug err => _83; // in scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                    }
                }
                scope 17 {
                    debug __field0 => _70; // in scope 17 at src/main.rs:54:10: 54:21
                }
                scope 18 {
                    debug val => _73;    // in scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
                }
                scope 19 {
                    debug err => _74;    // in scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
                }
            }
        }
    }

    bb0: {
        _99 = const false;               // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_3) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 1 at src/main.rs:54:10: 54:21
        _99 = const true;                // scope 1 at src/main.rs:54:10: 54:21
        discriminant(_4) = 0;            // scope 1 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 2 at src/main.rs:54:10: 54:21
        discriminant(_5) = 0;            // scope 2 at src/main.rs:54:10: 54:21
        goto -> bb1;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb1: {
        StorageLive(_6);                 // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_7);                 // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_8);                 // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_9);                 // scope 3 at src/main.rs:54:10: 54:21
        _9 = &mut _2;                    // scope 3 at src/main.rs:54:10: 54:21
        _8 = &mut (*_9);                 // scope 3 at src/main.rs:54:10: 54:21
        _7 = <__A as MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field>(move _8) -> [return: bb2, unwind: bb97]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_key::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_8);                 // scope 3 at src/main.rs:54:20: 54:21
        _10 = discriminant(_7);          // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _10) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb3: {
        StorageLive(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _12 = move ((_7 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_13);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_14);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _14 = move _12;                  // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _13 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _14) -> [return: bb6, unwind: bb94]; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb5: {
        StorageLive(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _11 = move ((_7 as Ok).0: std::option::Option<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field>); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _6 = move _11;                   // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        _15 = discriminant(_6);          // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _15) -> [1_isize: bb8, otherwise: bb7]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageDead(_14);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _13; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_13);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_12);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        goto -> bb83;                    // scope 3 at no-location
    }

    bb7: {
        StorageDead(_9);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_6);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageLive(_68);                // scope 3 at src/main.rs:54:10: 54:21
        _69 = discriminant(_3);          // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _69) -> [0_isize: bb46, 1_isize: bb48, otherwise: bb47]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb8: {
        StorageLive(_16);                // scope 3 at src/main.rs:54:10: 54:21
        _16 = move ((_6 as Some).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field); // scope 3 at src/main.rs:54:10: 54:21
        _17 = discriminant(_16);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _17) -> [0_isize: bb10, 1_isize: bb20, 2_isize: bb30, otherwise: bb9]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb9: {
        StorageLive(_60);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_61);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_62);                // scope 3 at src/main.rs:54:10: 54:21
        _62 = &mut _2;                   // scope 3 at src/main.rs:54:10: 54:21
        _61 = &mut (*_62);               // scope 3 at src/main.rs:54:10: 54:21
        _60 = <__A as MapAccess>::next_value::<IgnoredAny>(move _61) -> [return: bb40, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::IgnoredAny>}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageLive(_18);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_19);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_20);                // scope 3 at src/main.rs:54:10: 54:21
        _20 = &_3;                       // scope 3 at src/main.rs:54:10: 54:21
        _19 = _20;                       // scope 3 at src/main.rs:54:10: 54:21
        _18 = std::option::Option::<std::option::Option<Uuid>>::is_some(move _19) -> [return: bb11, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<std::option::Option<uuid::Uuid>>) -> bool {std::option::Option::<std::option::Option<uuid::Uuid>>::is_some}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_20);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_19);                // scope 3 at src/main.rs:54:20: 54:21
        switchInt(move _18) -> [false: bb14, otherwise: bb12]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb12: {
        StorageLive(_21);                // scope 3 at src/main.rs:54:10: 54:21
        _21 = <<__A as MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field(const "uaid") -> [return: bb13, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
    }

    bb13: {
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _21; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_21);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_18);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb14: {
        StorageDead(_18);                // scope 3 at src/main.rs:54:20: 54:21
        StorageLive(_22);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_23);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_24);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_25);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_26);                // scope 3 at src/main.rs:54:10: 54:21
        _26 = &mut _2;                   // scope 3 at src/main.rs:54:10: 54:21
        _25 = &mut (*_26);               // scope 3 at src/main.rs:54:10: 54:21
        _24 = <__A as MapAccess>::next_value::<std::option::Option<Uuid>>(move _25) -> [return: bb15, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<uuid::Uuid>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<std::option::Option<uuid::Uuid>>}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_25);                // scope 3 at src/main.rs:54:20: 54:21
        _27 = discriminant(_24);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _27) -> [0_isize: bb18, 1_isize: bb16, otherwise: bb17]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb16: {
        StorageLive(_29);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _29 = move ((_24 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_30);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_31);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _31 = move _29;                  // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _30 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _31) -> [return: bb19, unwind: bb93]; // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb18: {
        StorageLive(_28);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _28 = ((_24 as Ok).0: std::option::Option<uuid::Uuid>); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _23 = _28;                       // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_28);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        ((_22 as Some).0: std::option::Option<uuid::Uuid>) = move _23; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_22) = 1;           // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_23);                // scope 3 at src/main.rs:54:20: 54:21
        _3 = move _22;                   // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_22);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_26);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb45;                    // scope 3 at src/main.rs:54:10: 54:21
    }

    bb19: {
        StorageDead(_31);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _30; // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_30);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_29);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_23);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_22);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_26);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_24);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb20: {
        StorageLive(_32);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_33);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_34);                // scope 3 at src/main.rs:54:10: 54:21
        _34 = &_4;                       // scope 3 at src/main.rs:54:10: 54:21
        _33 = _34;                       // scope 3 at src/main.rs:54:10: 54:21
        _32 = std::option::Option::<std::option::Option<Vec<Uuid>>>::is_some(move _33) -> [return: bb21, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<std::option::Option<std::vec::Vec<uuid::Uuid>>>) -> bool {std::option::Option::<std::option::Option<std::vec::Vec<uuid::Uuid>>>::is_some}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_34);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_33);                // scope 3 at src/main.rs:54:20: 54:21
        switchInt(move _32) -> [false: bb24, otherwise: bb22]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb22: {
        StorageLive(_35);                // scope 3 at src/main.rs:54:10: 54:21
        _35 = <<__A as MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field(const "channelIDs") -> [return: bb23, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
    }

    bb23: {
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _35; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_35);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_32);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb24: {
        StorageDead(_32);                // scope 3 at src/main.rs:54:20: 54:21
        StorageLive(_36);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_37);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_38);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_39);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_40);                // scope 3 at src/main.rs:54:10: 54:21
        _40 = &mut _2;                   // scope 3 at src/main.rs:54:10: 54:21
        _39 = &mut (*_40);               // scope 3 at src/main.rs:54:10: 54:21
        _38 = <__A as MapAccess>::next_value::<std::option::Option<Vec<Uuid>>>(move _39) -> [return: bb25, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<std::vec::Vec<uuid::Uuid>>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<std::option::Option<std::vec::Vec<uuid::Uuid>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        StorageDead(_39);                // scope 3 at src/main.rs:54:20: 54:21
        _41 = discriminant(_38);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _41) -> [0_isize: bb28, 1_isize: bb26, otherwise: bb27]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb26: {
        StorageLive(_43);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _43 = move ((_38 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_44);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_45);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _45 = move _43;                  // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _44 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _45) -> [return: bb29, unwind: bb92]; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb28: {
        StorageLive(_42);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _42 = move ((_38 as Ok).0: std::option::Option<std::vec::Vec<uuid::Uuid>>); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _37 = move _42;                  // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_42);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        ((_36 as Some).0: std::option::Option<std::vec::Vec<uuid::Uuid>>) = move _37; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_36) = 1;           // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_37);                // scope 3 at src/main.rs:54:20: 54:21
        drop(_4) -> [return: bb82, unwind: bb81]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb29: {
        StorageDead(_45);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _44; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_44);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_43);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_37);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_36);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_40);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_38);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb30: {
        StorageLive(_46);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_47);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_48);                // scope 3 at src/main.rs:54:10: 54:21
        _48 = &_5;                       // scope 3 at src/main.rs:54:10: 54:21
        _47 = _48;                       // scope 3 at src/main.rs:54:10: 54:21
        _46 = std::option::Option::<std::option::Option<bool>>::is_some(move _47) -> [return: bb31, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<std::option::Option<bool>>) -> bool {std::option::Option::<std::option::Option<bool>>::is_some}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        StorageDead(_48);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_47);                // scope 3 at src/main.rs:54:20: 54:21
        switchInt(move _46) -> [false: bb34, otherwise: bb32]; // scope 3 at src/main.rs:54:10: 54:21
    }

    bb32: {
        StorageLive(_49);                // scope 3 at src/main.rs:54:10: 54:21
        _49 = <<__A as MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field(const "use_webpush") -> [return: bb33, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::duplicate_field}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb33: {
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _49; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_49);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_46);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb34: {
        StorageDead(_46);                // scope 3 at src/main.rs:54:20: 54:21
        StorageLive(_50);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_51);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:398:9: 403:10
        StorageLive(_52);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_53);                // scope 3 at src/main.rs:54:10: 54:21
        StorageLive(_54);                // scope 3 at src/main.rs:54:10: 54:21
        _54 = &mut _2;                   // scope 3 at src/main.rs:54:10: 54:21
        _53 = &mut (*_54);               // scope 3 at src/main.rs:54:10: 54:21
        _52 = <__A as MapAccess>::next_value::<std::option::Option<bool>>(move _53) -> [return: bb35, unwind: bb94]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: for<'r> fn(&'r mut __A) -> std::result::Result<std::option::Option<bool>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::next_value::<std::option::Option<bool>>}, val: Value(Scalar(<ZST>)) }
    }

    bb35: {
        StorageDead(_53);                // scope 3 at src/main.rs:54:20: 54:21
        _55 = discriminant(_52);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _55) -> [0_isize: bb38, 1_isize: bb36, otherwise: bb37]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb36: {
        StorageLive(_57);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _57 = move ((_52 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_58);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _59 = move _57;                  // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _58 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _59) -> [return: bb39, unwind: bb91]; // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb37: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb38: {
        StorageLive(_56);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _56 = ((_52 as Ok).0: std::option::Option<bool>); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _51 = _56;                       // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_56);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        ((_50 as Some).0: std::option::Option<bool>) = move _51; // scope 3 at src/main.rs:54:10: 54:21
        discriminant(_50) = 1;           // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_51);                // scope 3 at src/main.rs:54:20: 54:21
        _5 = move _50;                   // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_50);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_54);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_52);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb45;                    // scope 3 at src/main.rs:54:10: 54:21
    }

    bb39: {
        StorageDead(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _58; // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_58);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_57);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_51);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_50);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_54);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_52);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb40: {
        StorageDead(_61);                // scope 3 at src/main.rs:54:20: 54:21
        _63 = discriminant(_60);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _63) -> [0_isize: bb43, 1_isize: bb41, otherwise: bb42]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb41: {
        StorageLive(_65);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _65 = move ((_60 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_66);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_67);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _67 = move _65;                  // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _66 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _67) -> [return: bb44, unwind: bb90]; // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb42: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb43: {
        StorageLive(_64);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_64);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_62);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_60);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb45;                    // scope 3 at src/main.rs:54:10: 54:21
    }

    bb44: {
        StorageDead(_67);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _66; // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_66);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_65);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_62);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_60);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb75;                    // scope 3 at no-location
    }

    bb45: {
        StorageDead(_16);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_9);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_6);                 // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb1;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb46: {
        StorageLive(_71);                // scope 3 at src/main.rs:54:10: 54:21
        _71 = _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<Uuid>, <__A as MapAccess>::Error>(const "uaid") -> [return: bb49, unwind: bb97]; // scope 3 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(&'static str) -> std::result::Result<std::option::Option<uuid::Uuid>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<uuid::Uuid>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
    }

    bb47: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb48: {
        StorageLive(_70);                // scope 3 at src/main.rs:54:10: 54:21
        _70 = ((_3 as Some).0: std::option::Option<uuid::Uuid>); // scope 3 at src/main.rs:54:10: 54:21
        _68 = _70;                       // scope 17 at src/main.rs:54:10: 54:21
        StorageDead(_70);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb54;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb49: {
        _72 = discriminant(_71);         // scope 3 at src/main.rs:54:10: 54:21
        switchInt(move _72) -> [0_isize: bb52, 1_isize: bb50, otherwise: bb51]; // scope 3 at src/main.rs:54:10: 398:9
    }

    bb50: {
        StorageLive(_74);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _74 = move ((_71 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_75);                // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_76);                // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _76 = move _74;                  // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _75 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _76) -> [return: bb53, unwind: bb89]; // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb51: {
        unreachable;                     // scope 3 at src/main.rs:54:10: 54:21
    }

    bb52: {
        StorageLive(_73);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _73 = ((_71 as Ok).0: std::option::Option<uuid::Uuid>); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _68 = _73;                       // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_73);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_71);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb54;                    // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb53: {
        StorageDead(_76);                // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _75; // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_75);                // scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_74);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_71);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb74;                    // scope 3 at no-location
    }

    bb54: {
        StorageLive(_77);                // scope 16 at src/main.rs:54:10: 54:21
        _78 = discriminant(_4);          // scope 16 at src/main.rs:54:10: 54:21
        switchInt(move _78) -> [0_isize: bb55, 1_isize: bb57, otherwise: bb56]; // scope 16 at src/main.rs:54:10: 54:21
    }

    bb55: {
        StorageLive(_80);                // scope 16 at src/main.rs:54:10: 54:21
        _80 = _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<Vec<Uuid>>, <__A as MapAccess>::Error>(const "channelIDs") -> [return: bb58, unwind: bb97]; // scope 16 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(&'static str) -> std::result::Result<std::option::Option<std::vec::Vec<uuid::Uuid>>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<std::vec::Vec<uuid::Uuid>>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
    }

    bb56: {
        unreachable;                     // scope 16 at src/main.rs:54:10: 54:21
    }

    bb57: {
        StorageLive(_79);                // scope 16 at src/main.rs:54:10: 54:21
        _99 = const false;               // scope 16 at src/main.rs:54:10: 54:21
        _79 = move ((_4 as Some).0: std::option::Option<std::vec::Vec<uuid::Uuid>>); // scope 16 at src/main.rs:54:10: 54:21
        _77 = move _79;                  // scope 21 at src/main.rs:54:10: 54:21
        StorageDead(_79);                // scope 16 at src/main.rs:54:20: 54:21
        goto -> bb63;                    // scope 16 at src/main.rs:54:20: 54:21
    }

    bb58: {
        _81 = discriminant(_80);         // scope 16 at src/main.rs:54:10: 54:21
        switchInt(move _81) -> [0_isize: bb61, 1_isize: bb59, otherwise: bb60]; // scope 16 at src/main.rs:54:10: 398:9
    }

    bb59: {
        StorageLive(_83);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _83 = move ((_80 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_84);                // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_85);                // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _85 = move _83;                  // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _84 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _85) -> [return: bb62, unwind: bb88]; // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb60: {
        unreachable;                     // scope 16 at src/main.rs:54:10: 54:21
    }

    bb61: {
        StorageLive(_82);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _82 = move ((_80 as Ok).0: std::option::Option<std::vec::Vec<uuid::Uuid>>); // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _77 = move _82;                  // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_82);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_80);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb63;                    // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb62: {
        StorageDead(_85);                // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _84; // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_84);                // scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_83);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_80);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb73;                    // scope 16 at no-location
    }

    bb63: {
        StorageLive(_86);                // scope 20 at src/main.rs:54:10: 54:21
        _87 = discriminant(_5);          // scope 20 at src/main.rs:54:10: 54:21
        switchInt(move _87) -> [0_isize: bb64, 1_isize: bb66, otherwise: bb65]; // scope 20 at src/main.rs:54:10: 54:21
    }

    bb64: {
        StorageLive(_89);                // scope 20 at src/main.rs:54:10: 54:21
        _89 = _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<bool>, <__A as MapAccess>::Error>(const "use_webpush") -> [return: bb67, unwind: bb78]; // scope 20 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(&'static str) -> std::result::Result<std::option::Option<bool>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::de::missing_field::<std::option::Option<bool>, <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb65: {
        unreachable;                     // scope 20 at src/main.rs:54:10: 54:21
    }

    bb66: {
        StorageLive(_88);                // scope 20 at src/main.rs:54:10: 54:21
        _88 = ((_5 as Some).0: std::option::Option<bool>); // scope 20 at src/main.rs:54:10: 54:21
        _86 = _88;                       // scope 25 at src/main.rs:54:10: 54:21
        StorageDead(_88);                // scope 20 at src/main.rs:54:20: 54:21
        goto -> bb72;                    // scope 20 at src/main.rs:54:20: 54:21
    }

    bb67: {
        _90 = discriminant(_89);         // scope 20 at src/main.rs:54:10: 54:21
        switchInt(move _90) -> [0_isize: bb70, 1_isize: bb68, otherwise: bb69]; // scope 20 at src/main.rs:54:10: 398:9
    }

    bb68: {
        StorageLive(_92);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _92 = move ((_89 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error); // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_93);                // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_94);                // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _94 = move _92;                  // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _93 = <<__A as MapAccess>::Error as std::convert::From<<__A as MapAccess>::Error>>::from(move _94) -> [return: bb71, unwind: bb87]; // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) -> <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error {<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error as std::convert::From<<__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb69: {
        unreachable;                     // scope 20 at src/main.rs:54:10: 54:21
    }

    bb70: {
        StorageLive(_91);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _91 = ((_89 as Ok).0: std::option::Option<bool>); // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _86 = _91;                       // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_91);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_89);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb72;                    // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb71: {
        StorageDead(_94);                // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__A as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::MapAccess>::Error) = move _93; // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_93);                // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_92);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_89);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_86);                // scope 20 at src/main.rs:54:20: 54:21
        drop(_77) -> [return: bb73, unwind: bb97]; // scope 16 at src/main.rs:54:20: 54:21
    }

    bb72: {
        StorageLive(_95);                // scope 24 at src/main.rs:54:10: 54:21
        StorageLive(_96);                // scope 24 at src/main.rs:54:10: 54:21
        _96 = _68;                       // scope 24 at src/main.rs:54:10: 54:21
        StorageLive(_97);                // scope 24 at src/main.rs:54:10: 54:21
        _97 = move _77;                  // scope 24 at src/main.rs:54:10: 54:21
        StorageLive(_98);                // scope 24 at src/main.rs:54:10: 54:21
        _98 = _86;                       // scope 24 at src/main.rs:54:10: 54:21
        ((_95 as Hello).0: std::option::Option<uuid::Uuid>) = move _96; // scope 24 at src/main.rs:54:10: 54:21
        ((_95 as Hello).1: std::option::Option<std::vec::Vec<uuid::Uuid>>) = move _97; // scope 24 at src/main.rs:54:10: 54:21
        ((_95 as Hello).2: std::option::Option<bool>) = move _98; // scope 24 at src/main.rs:54:10: 54:21
        discriminant(_95) = 0;           // scope 24 at src/main.rs:54:10: 54:21
        StorageDead(_98);                // scope 24 at src/main.rs:54:20: 54:21
        StorageDead(_97);                // scope 24 at src/main.rs:54:20: 54:21
        StorageDead(_96);                // scope 24 at src/main.rs:54:20: 54:21
        ((_0 as Ok).0: ClientMessage) = move _95; // scope 24 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 24 at src/main.rs:54:10: 54:21
        StorageDead(_95);                // scope 24 at src/main.rs:54:20: 54:21
        StorageDead(_86);                // scope 20 at src/main.rs:54:20: 54:21
        StorageDead(_77);                // scope 16 at src/main.rs:54:20: 54:21
        StorageDead(_68);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 2 at src/main.rs:54:20: 54:21
        _99 = const false;               // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb77;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb73: {
        StorageDead(_77);                // scope 16 at src/main.rs:54:20: 54:21
        goto -> bb74;                    // scope 16 at no-location
    }

    bb74: {
        StorageDead(_68);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb76;                    // scope 3 at no-location
    }

    bb75: {
        StorageDead(_16);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb83;                    // scope 3 at no-location
    }

    bb76: {
        StorageDead(_5);                 // scope 2 at src/main.rs:54:20: 54:21
        _100 = discriminant(_4);         // scope 1 at src/main.rs:54:20: 54:21
        switchInt(move _100) -> [1_isize: bb85, otherwise: bb84]; // scope 1 at src/main.rs:54:20: 54:21
    }

    bb77: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }

    bb78 (cleanup): {
        drop(_77) -> bb97;               // scope 16 at src/main.rs:54:20: 54:21
    }

    bb79 (cleanup): {
        drop(_2) -> bb80;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb80 (cleanup): {
        resume;                          // scope 0 at src/main.rs:54:10: 54:21
    }

    bb81 (cleanup): {
        _99 = const true;                // scope 3 at src/main.rs:54:10: 54:21
        _4 = move _36;                   // scope 3 at src/main.rs:54:10: 54:21
        goto -> bb92;                    // scope 3 at src/main.rs:54:10: 54:21
    }

    bb82: {
        _99 = const true;                // scope 3 at src/main.rs:54:10: 54:21
        _4 = move _36;                   // scope 3 at src/main.rs:54:10: 54:21
        StorageDead(_36);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_40);                // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_38);                // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb45;                    // scope 3 at src/main.rs:54:10: 54:21
    }

    bb83: {
        StorageDead(_9);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 3 at src/main.rs:54:20: 54:21
        StorageDead(_6);                 // scope 3 at src/main.rs:54:20: 54:21
        goto -> bb76;                    // scope 3 at no-location
    }

    bb84: {
        _99 = const false;               // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_4);                 // scope 1 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        drop(_2) -> bb77;                // scope 0 at src/main.rs:54:20: 54:21
    }

    bb85: {
        switchInt(_99) -> [false: bb84, otherwise: bb86]; // scope 1 at src/main.rs:54:20: 54:21
    }

    bb86: {
        drop(((_4 as Some).0: std::option::Option<std::vec::Vec<uuid::Uuid>>)) -> [return: bb84, unwind: bb79]; // scope 1 at src/main.rs:54:20: 54:21
    }

    bb87 (cleanup): {
        goto -> bb78;                    // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb88 (cleanup): {
        goto -> bb97;                    // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb89 (cleanup): {
        goto -> bb97;                    // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb90 (cleanup): {
        goto -> bb94;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb91 (cleanup): {
        goto -> bb94;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb92 (cleanup): {
        goto -> bb94;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb93 (cleanup): {
        goto -> bb94;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb94 (cleanup): {
        goto -> bb97;                    // scope 3 at src/main.rs:54:20: 54:21
    }

    bb95 (cleanup): {
        switchInt(_99) -> [false: bb79, otherwise: bb96]; // scope 1 at src/main.rs:54:20: 54:21
    }

    bb96 (cleanup): {
        drop(((_4 as Some).0: std::option::Option<std::vec::Vec<uuid::Uuid>>)) -> bb79; // scope 1 at src/main.rs:54:20: 54:21
    }

    bb97 (cleanup): {
        _101 = discriminant(_4);         // scope 1 at src/main.rs:54:20: 54:21
        switchInt(move _101) -> [1_isize: bb95, otherwise: bb79]; // scope 1 at src/main.rs:54:20: 54:21
    }
}

fn parse::{closure#0}(_1: [closure@src/main.rs:212:48: 212:70]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:212:51: 212:51

    bb0: {
        _0 = const "invalid json text";  // scope 0 at src/main.rs:212:51: 212:70
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [105, 110, 118, 97, 108, 105, 100, 32, 106, 115, 111, 110, 32, 116, 101, 120, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [131071], len: Size { raw: 17 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 17 })
                                         // mir::Constant
                                         // + span: src/main.rs:212:51: 212:70
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [105, 110, 118, 97, 108, 105, 100, 32, 106, 115, 111, 110, 32, 116, 101, 120, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [131071], len: Size { raw: 17 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 17 }) }
        return;                          // scope 0 at src/main.rs:212:70: 212:70
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::with_chain(_1: E, _2: K) -> errors::Error {
    debug error => _1;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:87:33: 87:38
    debug kind => _2;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:87:43: 87:47
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:88:20: 88:24
    let mut _3: E;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:34: 92:39
    let mut _4: K;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:41: 92:45

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:34: 92:39
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:34: 92:39
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:41: 92:45
        _4 = move _2;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:41: 92:45
        _0 = errors::Error::with_chain::<E, K>(move _3, move _4) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:17: 92:46
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:17: 92:33
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(E, K) -> errors::Error {errors::Error::with_chain::<E, K>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:45: 92:46
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:92:45: 92:46
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:93:14: 93:14
    }
}

fn main::{closure#0}::{closure#0}(_1: [closure@src/main.rs:152:34: 157:10], _2: WebSocketStream<tokio_core::net::TcpStream>) -> Box<dyn futures::Future<Error = errors::Error, Item = (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> {
    debug ws => _2;                      // in scope 0 at src/main.rs:152:40: 152:42
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // return place in scope 0 at src/main.rs:152:44: 152:44
    let mut _3: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>>; // in scope 0 at src/main.rs:156:13: 156:34
    let _4: futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>; // in scope 0 at src/main.rs:153:17: 153:19
    let mut _5: futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>; // in scope 0 at src/main.rs:153:22: 154:33
    let mut _6: futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>; // in scope 0 at src/main.rs:153:22: 153:35
    let mut _7: tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>; // in scope 0 at src/main.rs:153:22: 153:24
    let mut _8: futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>; // in scope 0 at src/main.rs:156:31: 156:33
    scope 1 {
        debug ws => _4;                  // in scope 1 at src/main.rs:153:17: 153:19
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:156:13: 156:34
        StorageLive(_4);                 // scope 0 at src/main.rs:153:17: 153:19
        StorageLive(_5);                 // scope 0 at src/main.rs:153:22: 154:33
        StorageLive(_6);                 // scope 0 at src/main.rs:153:22: 153:35
        StorageLive(_7);                 // scope 0 at src/main.rs:153:22: 153:24
        _7 = move _2;                    // scope 0 at src/main.rs:153:22: 153:24
        _6 = <WebSocketStream<tokio_core::net::TcpStream> as futures::Stream>::from_err::<errors::Error>(move _7) -> bb1; // scope 0 at src/main.rs:153:22: 153:35
                                         // mir::Constant
                                         // + span: src/main.rs:153:25: 153:33
                                         // + literal: Const { ty: fn(tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>) -> futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error> {<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream> as futures::Stream>::from_err::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_7);                 // scope 0 at src/main.rs:153:34: 153:35
        _5 = <futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error> as futures::Stream>::and_then::<fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>(move _6, parse) -> bb2; // scope 0 at src/main.rs:153:22: 154:33
                                         // mir::Constant
                                         // + span: src/main.rs:154:18: 154:26
                                         // + literal: Const { ty: fn(futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}) -> futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>> {<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error> as futures::Stream>::and_then::<fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>}, val: Value(Scalar(<ZST>)) }
                                         // mir::Constant
                                         // + span: src/main.rs:154:27: 154:32
                                         // + literal: Const { ty: fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_6);                 // scope 0 at src/main.rs:154:32: 154:33
        _4 = <futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>> as futures::Sink>::with::<ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>(move _5, serialize) -> bb3; // scope 0 at src/main.rs:153:22: 155:33
                                         // mir::Constant
                                         // + span: src/main.rs:155:18: 155:22
                                         // + literal: Const { ty: fn(futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}) -> futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>> {<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>> as futures::Sink>::with::<ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>}, val: Value(Scalar(<ZST>)) }
                                         // mir::Constant
                                         // + span: src/main.rs:155:23: 155:32
                                         // + literal: Const { ty: fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_5);                 // scope 0 at src/main.rs:155:32: 155:33
        StorageLive(_8);                 // scope 1 at src/main.rs:156:31: 156:33
        _8 = move _4;                    // scope 1 at src/main.rs:156:31: 156:33
        _3 = Client::handshake::<With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>>(move _8) -> bb4; // scope 1 at src/main.rs:156:13: 156:34
                                         // mir::Constant
                                         // + span: src/main.rs:156:13: 156:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>) -> std::boxed::Box<(dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)> + 'static)> {Client::handshake::<futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_8);                 // scope 1 at src/main.rs:156:33: 156:34
        StorageDead(_4);                 // scope 0 at src/main.rs:157:9: 157:10
        _0 = move _3 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = (futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)>> (Pointer(Unsize)); // scope 0 at src/main.rs:156:13: 156:34
        StorageDead(_3);                 // scope 0 at src/main.rs:157:9: 157:10
        return;                          // scope 0 at src/main.rs:157:10: 157:10
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::extract_backtrace(_1: &dyn std::error::Error + std::marker::Send) -> std::option::Option<Arc<error_chain::Backtrace>> {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:396:30: 396:31
    let mut _0: std::option::Option<std::sync::Arc<error_chain::Backtrace>>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:397:16: 397:59
    let mut _2: std::option::Option<&errors::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:61
    let mut _3: &dyn std::error::Error + std::marker::Send; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:31
    let mut _4: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:20: 398:27
    let _5: &errors::Error;              // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:25: 398:26
    let mut _6: &std::option::Option<std::sync::Arc<error_chain::Backtrace>>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:24: 399:37
    scope 1 {
        debug e => _5;                   // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:25: 398:26
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:61
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:31
        _3 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:31
        _2 = <(dyn std::error::Error + std::marker::Send + 'static)>::downcast_ref::<errors::Error>(move _3) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:30: 398:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:32: 398:44
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r> fn(&'r (dyn std::error::Error + std::marker::Send + 'static)) -> std::option::Option<&'r errors::Error> {<(dyn std::error::Error + std::marker::Send + 'static)>::downcast_ref::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:60: 398:61
        _4 = discriminant(_2);           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:20: 398:27
        switchInt(move _4) -> [1_isize: bb2, otherwise: bb4]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:20: 398:27
    }

    bb2: {
        StorageLive(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:25: 398:26
        _5 = ((_2 as Some).0: &errors::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:398:25: 398:26
        StorageLive(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:24: 399:37
        _6 = &(((*_5).1: error_chain::State).1: std::option::Option<std::sync::Arc<error_chain::Backtrace>>); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:24: 399:37
        _0 = <std::option::Option<Arc<error_chain::Backtrace>> as Clone>::clone(move _6) -> bb3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:24: 399:45
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:38: 399:43
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<std::sync::Arc<error_chain::Backtrace>>) -> std::option::Option<std::sync::Arc<error_chain::Backtrace>> {<std::option::Option<std::sync::Arc<error_chain::Backtrace>> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:399:44: 399:45
        StorageDead(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:400:13: 400:14
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:400:13: 400:14
        goto -> bb5;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:410:10: 410:10
    }

    bb4: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:400:13: 400:14
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:409:13: 409:17
        goto -> bb5;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:410:10: 410:10
    }

    bb5: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:410:10: 410:10
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "field identifier";   // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn errors::ErrorKind::Ws(_1: tungstenite::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Ws).0: tungstenite::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 1;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

// MIR FOR CTFE
fn errors::ErrorKind::Ws(_1: tungstenite::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Ws).0: tungstenite::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 1;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

fn errors::ErrorKind::Json(_1: serde_json::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Json).0: serde_json::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 3;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

// MIR FOR CTFE
fn errors::ErrorKind::Json(_1: serde_json::Error) -> errors::ErrorKind {
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40

    bb0: {
        ((_0 as Json).0: serde_json::Error) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        discriminant(_0) = 3;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:17: 201:40
    }
}

const _IMPL_SERIALIZE_FOR_Notification: () = {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:103:10: 103:19

    bb0: {
        _0 = const ();                   // scope 0 at src/main.rs:103:10: 103:19
        return;                          // scope 0 at src/main.rs:103:10: 103:19
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_u32(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: u32) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: __E;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Unexpected; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: u64;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: u32;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _10: &dyn _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Expected; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _11: &&str;                  // in scope 0 at src/main.rs:54:10: 54:21
    let _12: &&str;                      // in scope 0 at src/main.rs:54:10: 54:21
    let mut _13: &&str;                  // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        switchInt(_2) -> [0_u32: bb2, 1_u32: bb3, 2_u32: bb4, otherwise: bb1]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb1: {
        StorageLive(_6);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_7);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_8);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_9);                 // scope 0 at src/main.rs:54:10: 54:21
        _9 = _2;                         // scope 0 at src/main.rs:54:10: 54:21
        _8 = move _9 as u64 (Misc);      // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_9);                 // scope 0 at src/main.rs:54:20: 54:21
        ((_7 as Unsigned).0: u64) = move _8; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_7) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_8);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageLive(_10);                // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_11);                // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_12);                // scope 0 at src/main.rs:54:10: 54:21
        _13 = const <_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as Visitor>::visit_u32::<__E>::promoted[0]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &&str
                                         // + val: Unevaluated(<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as Visitor<'de>>::visit_u32, [ReErased, __E], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &&str, val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:296 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::{impl#0}::visit_u32), const_param_did: None }, substs_: Some([ReErased, __E]), promoted: Some(promoted[0]) }) }
        _12 = _13;                       // scope 0 at src/main.rs:54:10: 54:21
        _11 = _12;                       // scope 0 at src/main.rs:54:10: 54:21
        _10 = move _11 as &dyn _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Expected (Pointer(Unsize)); // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_11);                // scope 0 at src/main.rs:54:20: 54:21
        _6 = <__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::invalid_value(move _7, move _10) -> bb5; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Unexpected<'r>, &'s (dyn _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Expected + 's)) -> __E {<__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::invalid_value}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_3) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _3; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb6;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_4) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _4; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb6;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb4: {
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_5) = 2;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _5; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb6;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb5: {
        StorageDead(_10);                // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_7);                 // scope 0 at src/main.rs:54:20: 54:21
        ((_0 as Err).0: __E) = move _6;  // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_12);                // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_6);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb6;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb6: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_u32: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: &str;                    // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _1 = const "variant index 0 <= i < 3"; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [118, 97, 114, 105, 97, 110, 116, 32, 105, 110, 100, 101, 120, 32, 48, 32, 60, 61, 32, 105, 32, 60, 32, 51], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16777215], len: Size { raw: 24 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 24 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [118, 97, 114, 105, 97, 110, 116, 32, 105, 110, 100, 101, 120, 32, 48, 32, 60, 61, 32, 105, 32, 60, 32, 51], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16777215], len: Size { raw: 24 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 24 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:272:9: 276:10>::from(_1: &str) -> errors::ErrorKind {
    debug s => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:273:21: 273:22
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:273:36: 273:40
    let mut _2: std::string::String;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:52
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:40

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:52
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:40
        _3 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:40
        _2 = <str as ToString>::to_string(move _3) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:39: 274:52
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:41: 274:50
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> std::string::String {<str as std::string::ToString>::to_string}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:51: 274:52
        ((_0 as Msg).0: std::string::String) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:17: 274:53
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:17: 274:53
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:274:52: 274:53
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:275:14: 275:14
    }
}

fn ServerMessage::Notification(_1: Notification) -> ServerMessage {
    let mut _0: ServerMessage;           // return place in scope 0 at src/main.rs:100:5: 100:31

    bb0: {
        ((_0 as Notification).0: Notification) = move _1; // scope 0 at src/main.rs:100:5: 100:31
        discriminant(_0) = 3;            // scope 0 at src/main.rs:100:5: 100:31
        return;                          // scope 0 at src/main.rs:100:5: 100:31
    }
}

// MIR FOR CTFE
fn ServerMessage::Notification(_1: Notification) -> ServerMessage {
    let mut _0: ServerMessage;           // return place in scope 0 at src/main.rs:100:5: 100:31

    bb0: {
        ((_0 as Notification).0: Notification) = move _1; // scope 0 at src/main.rs:100:5: 100:31
        discriminant(_0) = 3;            // scope 0 at src/main.rs:100:5: 100:31
        return;                          // scope 0 at src/main.rs:100:5: 100:31
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:214:9: 218:10>::from(_1: std::string::String) -> errors::Error {
    debug s => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:215:21: 215:22
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:215:35: 215:39
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:48
    let mut _3: std::string::String;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:41

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:48
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:41
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:41
        _2 = <std::string::String as Into<errors::ErrorKind>>::into(move _3) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:40: 216:48
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:42: 216:46
                                         // + literal: Const { ty: fn(std::string::String) -> errors::ErrorKind {<std::string::String as std::convert::Into<errors::ErrorKind>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:47: 216:48
        _0 = errors::Error::from_kind(move _2) -> bb2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:17: 216:49
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:17: 216:39
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:216:48: 216:49
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:217:14: 217:14
    }
}

fn timeout::{closure#0}::{closure#0}(_1: [closure@src/main.rs:362:60: 362:80]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:362:63: 362:63

    bb0: {
        _0 = const "timeout failure";    // scope 0 at src/main.rs:362:63: 362:80
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [116, 105, 109, 101, 111, 117, 116, 32, 102, 97, 105, 108, 117, 114, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [32767], len: Size { raw: 15 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 15 })
                                         // mir::Constant
                                         // + span: src/main.rs:362:63: 362:80
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [116, 105, 109, 101, 111, 117, 116, 32, 102, 97, 105, 108, 117, 114, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [32767], len: Size { raw: 15 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 15 }) }
        return;                          // scope 0 at src/main.rs:362:80: 362:80
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "field identifier";   // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process::{closure#1}::{closure#0}(_1: [closure@src/main.rs:301:42: 347:14], _2: std::result::Result<std::option::Option<(Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>) -> Box<dyn futures::Future<Error = errors::Error, Item = Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> {
    debug res => _2;                     // in scope 0 at src/main.rs:301:48: 301:51
    debug cx => (_1.0: std::rc::Rc<Context>); // in scope 0 at src/main.rs:300:17: 300:19
    debug uaid => (_1.1: uuid::Uuid);    // in scope 0 at src/main.rs:282:13: 282:17
    debug handle => (_1.2: tokio_core::reactor::Handle); // in scope 0 at src/main.rs:299:17: 299:23
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>; // return place in scope 0 at src/main.rs:301:56: 301:67
    let mut _3: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>; // in scope 0 at src/main.rs:346:17: 346:64
    let _4: futures::future::Either<ClientMessage, Notification>; // in scope 0 at src/main.rs:302:22: 302:25
    let _5: T;                           // in scope 0 at src/main.rs:302:27: 302:29
    let _6: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 0 at src/main.rs:302:31: 302:33
    let mut _7: (futures::future::Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // in scope 0 at src/main.rs:302:37: 308:18
    let mut _8: isize;                   // in scope 0 at src/main.rs:303:24: 303:28
    let mut _9: isize;                   // in scope 0 at src/main.rs:303:21: 303:29
    let mut _10: std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>; // in scope 0 at src/main.rs:303:40: 303:69
    let mut _11: futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>; // in scope 0 at src/main.rs:303:49: 303:68
    let mut _12: futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>; // in scope 0 at src/main.rs:303:52: 303:67
    let _13: (futures::future::Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // in scope 0 at src/main.rs:304:29: 304:32
    let _14: errors::Error;              // in scope 0 at src/main.rs:305:25: 305:26
    let mut _15: std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>; // in scope 0 at src/main.rs:306:32: 306:83
    let mut _16: futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>; // in scope 0 at src/main.rs:306:41: 306:82
    let mut _17: std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>; // in scope 0 at src/main.rs:306:48: 306:81
    let mut _18: std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>; // in scope 0 at src/main.rs:306:48: 306:54
    let mut _19: errors::Error;          // in scope 0 at src/main.rs:306:52: 306:53
    let mut _20: [closure@src/main.rs:306:65: 306:80]; // in scope 0 at src/main.rs:306:65: 306:80
    let mut _22: isize;                  // in scope 0 at src/main.rs:311:31: 311:58
    let mut _23: isize;                  // in scope 0 at src/main.rs:311:21: 311:59
    let mut _24: std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>; // in scope 0 at src/main.rs:312:32: 312:77
    let mut _25: futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>; // in scope 0 at src/main.rs:312:41: 312:76
    let mut _26: errors::Error;          // in scope 0 at src/main.rs:312:45: 312:75
    let mut _27: &str;                   // in scope 0 at src/main.rs:312:45: 312:68
    let _28: &str;                       // in scope 0 at src/main.rs:312:45: 312:68
    let mut _31: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:315:41: 315:49
    let _32: &Context;                   // in scope 0 at src/main.rs:315:41: 315:49
    let mut _33: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:315:41: 315:43
    let mut _35: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:316:44: 316:55
    let _36: &Context;                   // in scope 0 at src/main.rs:316:44: 316:55
    let mut _37: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:316:44: 316:46
    let mut _39: std::option::Option<&mut Client>; // in scope 0 at src/main.rs:317:38: 317:58
    let mut _40: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:317:38: 317:43
    let mut _41: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:317:38: 317:58
    let mut _42: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:317:38: 317:43
    let mut _43: &uuid::Uuid;            // in scope 0 at src/main.rs:317:52: 317:57
    let _44: &uuid::Uuid;                // in scope 0 at src/main.rs:317:52: 317:57
    let mut _46: bool;                   // in scope 0 at src/main.rs:318:41: 318:75
    let mut _47: &std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:318:41: 318:49
    let _48: &std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:318:41: 318:75
    let mut _49: &std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:318:41: 318:49
    let mut _50: &uuid::Uuid;            // in scope 0 at src/main.rs:318:63: 318:74
    let _51: &uuid::Uuid;                // in scope 0 at src/main.rs:318:63: 318:74
    let _52: std::option::Option<Channel>; // in scope 0 at src/main.rs:321:29: 324:31
    let mut _53: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:321:29: 321:37
    let mut _54: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:321:29: 324:31
    let mut _55: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:321:29: 321:37
    let mut _56: uuid::Uuid;             // in scope 0 at src/main.rs:321:45: 321:55
    let mut _57: Channel;                // in scope 0 at src/main.rs:321:57: 324:30
    let mut _58: uuid::Uuid;             // in scope 0 at src/main.rs:322:39: 322:43
    let _59: ();                         // in scope 0 at src/main.rs:325:29: 325:64
    let mut _60: &mut std::vec::Vec<uuid::Uuid>; // in scope 0 at src/main.rs:325:29: 325:47
    let mut _61: uuid::Uuid;             // in scope 0 at src/main.rs:325:53: 325:63
    let mut _62: u32;                    // in scope 0 at src/main.rs:329:37: 329:43
    let mut _63: uuid::Uuid;             // in scope 0 at src/main.rs:330:41: 330:51
    let mut _64: std::string::String;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:110:23: 113:6
    let mut _66: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _67: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _68: (&uuid::Uuid,);         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _69: &uuid::Uuid;            // in scope 0 at src/main.rs:332:52: 332:62
    let mut _71: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _72: &uuid::Uuid;            // in scope 0 at src/main.rs:332:52: 332:62
    let mut _73: for<'r, 's, 't0> fn(&'r uuid::Uuid, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at src/main.rs:332:52: 332:62
    let mut _75: &[&str];                // in scope 0 at src/main.rs:331:52: 331:78
    let mut _76: &[&str; 1];             // in scope 0 at src/main.rs:331:52: 331:78
    let _77: &[&str; 1];                 // in scope 0 at src/main.rs:331:52: 331:78
    let mut _78: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _79: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
    let mut _81: uuid::Uuid;             // in scope 0 at src/main.rs:338:41: 338:51
    let mut _83: Notification;           // in scope 0 at src/main.rs:341:65: 341:66
    let mut _85: futures::sink::Send<T>; // in scope 0 at src/main.rs:343:34: 343:51
    let mut _86: T;                      // in scope 0 at src/main.rs:343:34: 343:36
    let mut _87: ServerMessage;          // in scope 0 at src/main.rs:343:42: 343:50
    let mut _88: std::time::Duration;    // in scope 0 at src/main.rs:344:34: 344:55
    let mut _89: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:345:34: 345:41
    let _90: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:345:34: 345:41
    let mut _91: std::boxed::Box<futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>>; // in scope 0 at src/main.rs:346:17: 346:64
    let mut _92: futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>; // in scope 0 at src/main.rs:346:26: 346:63
    let mut _93: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>; // in scope 0 at src/main.rs:346:26: 346:28
    let mut _94: [closure@src/main.rs:346:33: 346:62]; // in scope 0 at src/main.rs:346:33: 346:62
    let mut _96: bool;                   // in scope 0 at src/main.rs:347:13: 347:14
    let mut _97: bool;                   // in scope 0 at src/main.rs:345:41: 345:42
    let mut _98: bool;                   // in scope 0 at src/main.rs:347:13: 347:14
    let mut _99: bool;                   // in scope 0 at src/main.rs:347:13: 347:14
    let mut _100: bool;                  // in scope 0 at src/main.rs:347:13: 347:14
    let mut _101: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    let mut _102: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    let mut _103: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    let mut _104: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    let mut _105: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    let mut _106: isize;                 // in scope 0 at src/main.rs:347:13: 347:14
    scope 1 {
        debug msg => _4;                 // in scope 1 at src/main.rs:302:22: 302:25
        debug ws => _5;                  // in scope 1 at src/main.rs:302:27: 302:29
        debug rx => _6;                  // in scope 1 at src/main.rs:302:31: 302:33
        let _21: ServerMessage;          // in scope 1 at src/main.rs:310:21: 310:29
        let _29: uuid::Uuid;             // in scope 1 at src/main.rs:314:57: 314:67
        let _80: uuid::Uuid;             // in scope 1 at src/main.rs:335:59: 335:69
        let _82: Notification;           // in scope 1 at src/main.rs:341:31: 341:32
        scope 4 {
            debug response => _21;       // in scope 4 at src/main.rs:310:21: 310:29
            let _84: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>; // in scope 4 at src/main.rs:343:21: 343:23
            scope 16 {
                debug ws => _84;         // in scope 16 at src/main.rs:343:21: 343:23
            }
        }
        scope 5 {
            debug channel_id => _29;     // in scope 5 at src/main.rs:314:57: 314:67
            let mut _30: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 5 at src/main.rs:315:29: 315:38
            scope 6 {
                debug uaids => _30;      // in scope 6 at src/main.rs:315:29: 315:38
                let mut _34: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 6 at src/main.rs:316:29: 316:41
                scope 7 {
                    debug channels => _34; // in scope 7 at src/main.rs:316:29: 316:41
                    let _38: &mut Client; // in scope 7 at src/main.rs:317:29: 317:35
                    scope 8 {
                        debug client => _38; // in scope 8 at src/main.rs:317:29: 317:35
                        let _45: u32;    // in scope 8 at src/main.rs:318:29: 318:35
                        scope 9 {
                            debug status => _45; // in scope 9 at src/main.rs:318:29: 318:35
                            let _65: std::string::String; // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:13: 111:16
                            let _70: &uuid::Uuid; // in scope 9 at src/main.rs:332:52: 332:62
                            let _74: &[std::fmt::ArgumentV1; 1]; // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                            scope 10 {
                                debug res => _65; // in scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:13: 111:16
                            }
                            scope 11 {
                                debug arg0 => _70; // in scope 11 at src/main.rs:332:52: 332:62
                            }
                            scope 12 {
                                debug args => _74; // in scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                                scope 13 {
                                    let mut _95: &[&str; 1]; // in scope 13 at src/main.rs:331:52: 331:78
                                }
                            }
                        }
                    }
                }
            }
        }
        scope 14 {
            debug channel_id => _80;     // in scope 14 at src/main.rs:335:59: 335:69
        }
        scope 15 {
            debug n => _82;              // in scope 15 at src/main.rs:341:31: 341:32
        }
    }
    scope 2 {
        debug res => _13;                // in scope 2 at src/main.rs:304:29: 304:32
    }
    scope 3 {
        debug e => _14;                  // in scope 3 at src/main.rs:305:25: 305:26
    }

    bb0: {
        _97 = const false;               // scope 0 at src/main.rs:346:17: 346:64
        _96 = const false;               // scope 0 at src/main.rs:346:17: 346:64
        _99 = const false;               // scope 0 at src/main.rs:346:17: 346:64
        _100 = const false;              // scope 0 at src/main.rs:346:17: 346:64
        _98 = const false;               // scope 0 at src/main.rs:346:17: 346:64
        _96 = const true;                // scope 0 at src/main.rs:346:17: 346:64
        StorageLive(_3);                 // scope 0 at src/main.rs:346:17: 346:64
        StorageLive(_7);                 // scope 0 at src/main.rs:302:37: 308:18
        _9 = discriminant(_2);           // scope 0 at src/main.rs:302:43: 302:46
        switchInt(move _9) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at src/main.rs:302:37: 302:46
    }

    bb1: {
        _8 = discriminant(((_2 as Ok).0: std::option::Option<(futures::future::Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>)); // scope 0 at src/main.rs:302:43: 302:46
        switchInt(move _8) -> [0_isize: bb4, 1_isize: bb7, otherwise: bb2]; // scope 0 at src/main.rs:302:37: 302:46
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:302:43: 302:46
    }

    bb3: {
        StorageLive(_14);                // scope 0 at src/main.rs:305:25: 305:26
        _14 = move ((_2 as Err).0: errors::Error); // scope 0 at src/main.rs:305:25: 305:26
        StorageLive(_15);                // scope 3 at src/main.rs:306:32: 306:83
        StorageLive(_16);                // scope 3 at src/main.rs:306:41: 306:82
        StorageLive(_17);                // scope 3 at src/main.rs:306:48: 306:81
        StorageLive(_18);                // scope 3 at src/main.rs:306:48: 306:54
        StorageLive(_19);                // scope 3 at src/main.rs:306:52: 306:53
        _19 = move _14;                  // scope 3 at src/main.rs:306:52: 306:53
        ((_18 as Err).0: errors::Error) = move _19; // scope 3 at src/main.rs:306:48: 306:54
        discriminant(_18) = 1;           // scope 3 at src/main.rs:306:48: 306:54
        StorageDead(_19);                // scope 3 at src/main.rs:306:53: 306:54
        StorageLive(_20);                // scope 3 at src/main.rs:306:65: 306:80
        _17 = <std::result::Result<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> as errors::ResultExt<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::chain_err::<[closure@src/main.rs:306:65: 306:80], &str>(move _18, move _20) -> [return: bb8, unwind: bb77]; // scope 3 at src/main.rs:306:48: 306:81
                                         // mir::Constant
                                         // + span: src/main.rs:306:55: 306:64
                                         // + literal: Const { ty: fn(std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>, [closure@src/main.rs:306:65: 306:80]) -> std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> {<std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> as errors::ResultExt<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::chain_err::<[closure@src/main.rs:306:65: 306:80], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageLive(_10);                // scope 0 at src/main.rs:303:40: 303:69
        StorageLive(_11);                // scope 0 at src/main.rs:303:49: 303:68
        StorageLive(_12);                // scope 0 at src/main.rs:303:52: 303:67
        discriminant(_12) = 0;           // scope 0 at src/main.rs:303:52: 303:67
        _11 = finished::<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>(move _12) -> [return: bb5, unwind: bb77]; // scope 0 at src/main.rs:303:49: 303:68
                                         // mir::Constant
                                         // + span: src/main.rs:303:49: 303:51
                                         // + literal: Const { ty: fn(futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>) -> futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> {futures::ok::<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_12);                // scope 0 at src/main.rs:303:67: 303:68
        _10 = Box::<FutureResult<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new(move _11) -> [return: bb6, unwind: bb77]; // scope 0 at src/main.rs:303:40: 303:69
                                         // mir::Constant
                                         // + span: src/main.rs:303:40: 303:48
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>) -> std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>> {std::boxed::Box::<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        _0 = move _10 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> (Pointer(Unsize)); // scope 0 at src/main.rs:303:40: 303:69
        StorageDead(_11);                // scope 0 at src/main.rs:303:68: 303:69
        StorageDead(_10);                // scope 0 at src/main.rs:303:68: 303:69
        goto -> bb48;                    // scope 0 at src/main.rs:303:33: 303:69
    }

    bb7: {
        StorageLive(_13);                // scope 0 at src/main.rs:304:29: 304:32
        _13 = move ((((_2 as Ok).0: std::option::Option<(futures::future::Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>) as Some).0: (futures::future::Either<ClientMessage, Notification>, T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)); // scope 0 at src/main.rs:304:29: 304:32
        _7 = move _13;                   // scope 2 at src/main.rs:304:38: 304:41
        StorageDead(_13);                // scope 0 at src/main.rs:304:40: 304:41
        StorageLive(_4);                 // scope 0 at src/main.rs:302:22: 302:25
        _100 = const true;               // scope 0 at src/main.rs:302:22: 302:25
        _4 = move (_7.0: futures::future::Either<ClientMessage, Notification>); // scope 0 at src/main.rs:302:22: 302:25
        StorageLive(_5);                 // scope 0 at src/main.rs:302:27: 302:29
        _99 = const true;                // scope 0 at src/main.rs:302:27: 302:29
        _5 = move (_7.1: T);             // scope 0 at src/main.rs:302:27: 302:29
        StorageLive(_6);                 // scope 0 at src/main.rs:302:31: 302:33
        _98 = const true;                // scope 0 at src/main.rs:302:31: 302:33
        _6 = move (_7.2: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // scope 0 at src/main.rs:302:31: 302:33
        StorageDead(_7);                 // scope 0 at src/main.rs:308:18: 308:19
        StorageLive(_21);                // scope 1 at src/main.rs:310:21: 310:29
        _23 = discriminant(_4);          // scope 1 at src/main.rs:310:38: 310:41
        switchInt(move _23) -> [0_isize: bb11, 1_isize: bb13, otherwise: bb12]; // scope 1 at src/main.rs:310:32: 310:41
    }

    bb8: {
        StorageDead(_20);                // scope 3 at src/main.rs:306:80: 306:81
        StorageDead(_18);                // scope 3 at src/main.rs:306:80: 306:81
        _16 = done::<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>(move _17) -> [return: bb9, unwind: bb77]; // scope 3 at src/main.rs:306:41: 306:82
                                         // mir::Constant
                                         // + span: src/main.rs:306:41: 306:47
                                         // + literal: Const { ty: fn(std::result::Result<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>) -> futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> {futures::result::<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_17);                // scope 3 at src/main.rs:306:81: 306:82
        _15 = Box::<FutureResult<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new(move _16) -> [return: bb10, unwind: bb77]; // scope 3 at src/main.rs:306:32: 306:83
                                         // mir::Constant
                                         // + span: src/main.rs:306:32: 306:40
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>) -> std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>> {std::boxed::Box::<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        _0 = move _15 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> (Pointer(Unsize)); // scope 3 at src/main.rs:306:32: 306:83
        StorageDead(_16);                // scope 3 at src/main.rs:306:82: 306:83
        StorageDead(_15);                // scope 3 at src/main.rs:306:82: 306:83
        StorageDead(_14);                // scope 0 at src/main.rs:307:21: 307:22
        goto -> bb48;                    // scope 0 at no-location
    }

    bb11: {
        _22 = discriminant(((_4 as A).0: ClientMessage)); // scope 1 at src/main.rs:310:38: 310:41
        switchInt(move _22) -> [0_isize: bb14, 1_isize: bb18, 2_isize: bb39, otherwise: bb12]; // scope 1 at src/main.rs:310:32: 310:41
    }

    bb12: {
        unreachable;                     // scope 1 at src/main.rs:310:38: 310:41
    }

    bb13: {
        StorageLive(_82);                // scope 1 at src/main.rs:341:31: 341:32
        _100 = const false;              // scope 1 at src/main.rs:341:31: 341:32
        _82 = move ((_4 as B).0: Notification); // scope 1 at src/main.rs:341:31: 341:32
        StorageLive(_83);                // scope 15 at src/main.rs:341:65: 341:66
        _83 = move _82;                  // scope 15 at src/main.rs:341:65: 341:66
        ((_21 as Notification).0: Notification) = move _83; // scope 15 at src/main.rs:341:37: 341:67
        discriminant(_21) = 3;           // scope 15 at src/main.rs:341:37: 341:67
        StorageDead(_83);                // scope 15 at src/main.rs:341:66: 341:67
        StorageDead(_82);                // scope 1 at src/main.rs:341:66: 341:67
        goto -> bb40;                    // scope 1 at src/main.rs:341:66: 341:67
    }

    bb14: {
        StorageLive(_24);                // scope 1 at src/main.rs:312:32: 312:77
        StorageLive(_25);                // scope 1 at src/main.rs:312:41: 312:76
        StorageLive(_26);                // scope 1 at src/main.rs:312:45: 312:75
        StorageLive(_27);                // scope 1 at src/main.rs:312:45: 312:68
        StorageLive(_28);                // scope 1 at src/main.rs:312:45: 312:68
        _28 = const "double hello received"; // scope 1 at src/main.rs:312:45: 312:68
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [100, 111, 117, 98, 108, 101, 32, 104, 101, 108, 108, 111, 32, 114, 101, 99, 101, 105, 118, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2097151], len: Size { raw: 21 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 21 })
                                         // mir::Constant
                                         // + span: src/main.rs:312:45: 312:68
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [100, 111, 117, 98, 108, 101, 32, 104, 101, 108, 108, 111, 32, 114, 101, 99, 101, 105, 118, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2097151], len: Size { raw: 21 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 21 }) }
        _27 = _28;                       // scope 1 at src/main.rs:312:45: 312:68
        _26 = <&str as Into<errors::Error>>::into(move _27) -> [return: bb15, unwind: bb69]; // scope 1 at src/main.rs:312:45: 312:75
                                         // mir::Constant
                                         // + span: src/main.rs:312:69: 312:73
                                         // + literal: Const { ty: fn(&str) -> errors::Error {<&str as std::convert::Into<errors::Error>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_27);                // scope 1 at src/main.rs:312:74: 312:75
        _25 = err::<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>(move _26) -> [return: bb16, unwind: bb69]; // scope 1 at src/main.rs:312:41: 312:76
                                         // mir::Constant
                                         // + span: src/main.rs:312:41: 312:44
                                         // + literal: Const { ty: fn(errors::Error) -> futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error> {futures::err::<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_26);                // scope 1 at src/main.rs:312:75: 312:76
        _24 = Box::<FutureResult<Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new(move _25) -> [return: bb17, unwind: bb69]; // scope 1 at src/main.rs:312:32: 312:77
                                         // mir::Constant
                                         // + span: src/main.rs:312:32: 312:40
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>) -> std::boxed::Box<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>> {std::boxed::Box::<futures::Done<futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>, errors::Error>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        _0 = move _24 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> (Pointer(Unsize)); // scope 1 at src/main.rs:312:32: 312:77
        StorageDead(_25);                // scope 1 at src/main.rs:312:76: 312:77
        StorageDead(_24);                // scope 1 at src/main.rs:312:76: 312:77
        StorageDead(_28);                // scope 1 at src/main.rs:313:21: 313:22
        StorageDead(_21);                // scope 1 at src/main.rs:347:13: 347:14
        drop(_6) -> [return: bb46, unwind: bb53]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb18: {
        StorageLive(_29);                // scope 1 at src/main.rs:314:57: 314:67
        _29 = ((((_4 as A).0: ClientMessage) as Register).0: uuid::Uuid); // scope 1 at src/main.rs:314:57: 314:67
        StorageLive(_30);                // scope 5 at src/main.rs:315:29: 315:38
        StorageLive(_31);                // scope 5 at src/main.rs:315:41: 315:49
        StorageLive(_32);                // scope 5 at src/main.rs:315:41: 315:49
        StorageLive(_33);                // scope 5 at src/main.rs:315:41: 315:43
        _33 = &(_1.0: std::rc::Rc<Context>); // scope 5 at src/main.rs:315:41: 315:43
        _32 = <Rc<Context> as Deref>::deref(move _33) -> [return: bb19, unwind: bb69]; // scope 5 at src/main.rs:315:41: 315:49
                                         // mir::Constant
                                         // + span: src/main.rs:315:41: 315:49
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        StorageDead(_33);                // scope 5 at src/main.rs:315:42: 315:43
        _31 = &((*_32).1: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>); // scope 5 at src/main.rs:315:41: 315:49
        _30 = RefCell::<HashMap<Uuid, Client>>::borrow_mut(move _31) -> [return: bb20, unwind: bb69]; // scope 5 at src/main.rs:315:41: 315:62
                                         // mir::Constant
                                         // + span: src/main.rs:315:50: 315:60
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Client>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Client>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_31);                // scope 5 at src/main.rs:315:61: 315:62
        StorageDead(_32);                // scope 5 at src/main.rs:315:62: 315:63
        StorageLive(_34);                // scope 6 at src/main.rs:316:29: 316:41
        StorageLive(_35);                // scope 6 at src/main.rs:316:44: 316:55
        StorageLive(_36);                // scope 6 at src/main.rs:316:44: 316:55
        StorageLive(_37);                // scope 6 at src/main.rs:316:44: 316:46
        _37 = &(_1.0: std::rc::Rc<Context>); // scope 6 at src/main.rs:316:44: 316:46
        _36 = <Rc<Context> as Deref>::deref(move _37) -> [return: bb21, unwind: bb52]; // scope 6 at src/main.rs:316:44: 316:55
                                         // mir::Constant
                                         // + span: src/main.rs:316:44: 316:55
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_37);                // scope 6 at src/main.rs:316:45: 316:46
        _35 = &((*_36).0: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>); // scope 6 at src/main.rs:316:44: 316:55
        _34 = RefCell::<HashMap<Uuid, Channel>>::borrow_mut(move _35) -> [return: bb22, unwind: bb52]; // scope 6 at src/main.rs:316:44: 316:68
                                         // mir::Constant
                                         // + span: src/main.rs:316:56: 316:66
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Channel>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Channel>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        StorageDead(_35);                // scope 6 at src/main.rs:316:67: 316:68
        StorageDead(_36);                // scope 6 at src/main.rs:316:68: 316:69
        StorageLive(_38);                // scope 7 at src/main.rs:317:29: 317:35
        StorageLive(_39);                // scope 7 at src/main.rs:317:38: 317:58
        StorageLive(_40);                // scope 7 at src/main.rs:317:38: 317:43
        StorageLive(_41);                // scope 7 at src/main.rs:317:38: 317:58
        StorageLive(_42);                // scope 7 at src/main.rs:317:38: 317:43
        _42 = &mut _30;                  // scope 7 at src/main.rs:317:38: 317:43
        _41 = <RefMut<HashMap<Uuid, Client>> as DerefMut>::deref_mut(move _42) -> [return: bb23, unwind: bb51]; // scope 7 at src/main.rs:317:38: 317:58
                                         // mir::Constant
                                         // + span: src/main.rs:317:38: 317:58
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb23: {
        _40 = &mut (*_41);               // scope 7 at src/main.rs:317:38: 317:43
        StorageDead(_42);                // scope 7 at src/main.rs:317:42: 317:43
        StorageLive(_43);                // scope 7 at src/main.rs:317:52: 317:57
        StorageLive(_44);                // scope 7 at src/main.rs:317:52: 317:57
        _44 = &(_1.1: uuid::Uuid);       // scope 7 at src/main.rs:317:52: 317:57
        _43 = _44;                       // scope 7 at src/main.rs:317:52: 317:57
        _39 = HashMap::<Uuid, Client>::get_mut::<Uuid>(move _40, move _43) -> [return: bb24, unwind: bb51]; // scope 7 at src/main.rs:317:38: 317:58
                                         // mir::Constant
                                         // + span: src/main.rs:317:44: 317:51
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::collections::HashMap<uuid::Uuid, Client>, &'s uuid::Uuid) -> std::option::Option<&'r mut Client> {std::collections::HashMap::<uuid::Uuid, Client>::get_mut::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb24: {
        StorageDead(_43);                // scope 7 at src/main.rs:317:57: 317:58
        StorageDead(_40);                // scope 7 at src/main.rs:317:57: 317:58
        _38 = std::option::Option::<&mut Client>::unwrap(move _39) -> [return: bb25, unwind: bb51]; // scope 7 at src/main.rs:317:38: 317:67
                                         // mir::Constant
                                         // + span: src/main.rs:317:59: 317:65
                                         // + literal: Const { ty: fn(std::option::Option<&mut Client>) -> &mut Client {std::option::Option::<&mut Client>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        StorageDead(_39);                // scope 7 at src/main.rs:317:66: 317:67
        StorageDead(_44);                // scope 7 at src/main.rs:317:67: 317:68
        StorageDead(_41);                // scope 7 at src/main.rs:317:67: 317:68
        StorageLive(_45);                // scope 8 at src/main.rs:318:29: 318:35
        StorageLive(_46);                // scope 8 at src/main.rs:318:41: 318:75
        StorageLive(_47);                // scope 8 at src/main.rs:318:41: 318:49
        StorageLive(_48);                // scope 8 at src/main.rs:318:41: 318:75
        StorageLive(_49);                // scope 8 at src/main.rs:318:41: 318:49
        _49 = &_34;                      // scope 8 at src/main.rs:318:41: 318:49
        _48 = <RefMut<HashMap<Uuid, Channel>> as Deref>::deref(move _49) -> [return: bb26, unwind: bb51]; // scope 8 at src/main.rs:318:41: 318:75
                                         // mir::Constant
                                         // + span: src/main.rs:318:41: 318:75
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>) -> &'r <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb26: {
        _47 = _48;                       // scope 8 at src/main.rs:318:41: 318:49
        StorageDead(_49);                // scope 8 at src/main.rs:318:48: 318:49
        StorageLive(_50);                // scope 8 at src/main.rs:318:63: 318:74
        StorageLive(_51);                // scope 8 at src/main.rs:318:63: 318:74
        _51 = &_29;                      // scope 8 at src/main.rs:318:63: 318:74
        _50 = _51;                       // scope 8 at src/main.rs:318:63: 318:74
        _46 = HashMap::<Uuid, Channel>::contains_key::<Uuid>(move _47, move _50) -> [return: bb27, unwind: bb51]; // scope 8 at src/main.rs:318:41: 318:75
                                         // mir::Constant
                                         // + span: src/main.rs:318:50: 318:62
                                         // + literal: Const { ty: for<'r, 's> fn(&'r std::collections::HashMap<uuid::Uuid, Channel>, &'s uuid::Uuid) -> bool {std::collections::HashMap::<uuid::Uuid, Channel>::contains_key::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        StorageDead(_51);                // scope 8 at src/main.rs:318:74: 318:75
        StorageDead(_50);                // scope 8 at src/main.rs:318:74: 318:75
        StorageDead(_48);                // scope 8 at src/main.rs:318:74: 318:75
        StorageDead(_47);                // scope 8 at src/main.rs:318:74: 318:75
        switchInt(move _46) -> [false: bb29, otherwise: bb28]; // scope 8 at src/main.rs:318:41: 318:75
    }

    bb28: {
        _45 = const 409_u32;             // scope 8 at src/main.rs:319:29: 319:32
        goto -> bb33;                    // scope 8 at src/main.rs:318:38: 327:26
    }

    bb29: {
        StorageLive(_52);                // scope 8 at src/main.rs:321:29: 324:31
        StorageLive(_53);                // scope 8 at src/main.rs:321:29: 321:37
        StorageLive(_54);                // scope 8 at src/main.rs:321:29: 324:31
        StorageLive(_55);                // scope 8 at src/main.rs:321:29: 321:37
        _55 = &mut _34;                  // scope 8 at src/main.rs:321:29: 321:37
        _54 = <RefMut<HashMap<Uuid, Channel>> as DerefMut>::deref_mut(move _55) -> [return: bb30, unwind: bb51]; // scope 8 at src/main.rs:321:29: 324:31
                                         // mir::Constant
                                         // + span: src/main.rs:321:29: 324:31
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb30: {
        _53 = &mut (*_54);               // scope 8 at src/main.rs:321:29: 321:37
        StorageDead(_55);                // scope 8 at src/main.rs:321:36: 321:37
        StorageLive(_56);                // scope 8 at src/main.rs:321:45: 321:55
        _56 = _29;                       // scope 8 at src/main.rs:321:45: 321:55
        StorageLive(_57);                // scope 8 at src/main.rs:321:57: 324:30
        StorageLive(_58);                // scope 8 at src/main.rs:322:39: 322:43
        _58 = (_1.1: uuid::Uuid);        // scope 8 at src/main.rs:322:39: 322:43
        (_57.0: uuid::Uuid) = move _58;  // scope 8 at src/main.rs:321:57: 324:30
        (_57.1: u64) = const 0_u64;      // scope 8 at src/main.rs:321:57: 324:30
        StorageDead(_58);                // scope 8 at src/main.rs:324:29: 324:30
        _52 = HashMap::<Uuid, Channel>::insert(move _53, move _56, move _57) -> [return: bb31, unwind: bb51]; // scope 8 at src/main.rs:321:29: 324:31
                                         // mir::Constant
                                         // + span: src/main.rs:321:38: 321:44
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::collections::HashMap<uuid::Uuid, Channel>, uuid::Uuid, Channel) -> std::option::Option<Channel> {std::collections::HashMap::<uuid::Uuid, Channel>::insert}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        StorageDead(_57);                // scope 8 at src/main.rs:324:30: 324:31
        StorageDead(_56);                // scope 8 at src/main.rs:324:30: 324:31
        StorageDead(_53);                // scope 8 at src/main.rs:324:30: 324:31
        StorageDead(_54);                // scope 8 at src/main.rs:324:31: 324:32
        StorageDead(_52);                // scope 8 at src/main.rs:324:31: 324:32
        StorageLive(_59);                // scope 8 at src/main.rs:325:29: 325:64
        StorageLive(_60);                // scope 8 at src/main.rs:325:29: 325:47
        _60 = &mut ((*_38).2: std::vec::Vec<uuid::Uuid>); // scope 8 at src/main.rs:325:29: 325:47
        StorageLive(_61);                // scope 8 at src/main.rs:325:53: 325:63
        _61 = _29;                       // scope 8 at src/main.rs:325:53: 325:63
        _59 = Vec::<Uuid>::push(move _60, move _61) -> [return: bb32, unwind: bb51]; // scope 8 at src/main.rs:325:29: 325:64
                                         // mir::Constant
                                         // + span: src/main.rs:325:48: 325:52
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::vec::Vec<uuid::Uuid>, uuid::Uuid) {std::vec::Vec::<uuid::Uuid>::push}, val: Value(Scalar(<ZST>)) }
    }

    bb32: {
        StorageDead(_61);                // scope 8 at src/main.rs:325:63: 325:64
        StorageDead(_60);                // scope 8 at src/main.rs:325:63: 325:64
        StorageDead(_59);                // scope 8 at src/main.rs:325:64: 325:65
        _45 = const 200_u32;             // scope 8 at src/main.rs:326:29: 326:32
        goto -> bb33;                    // scope 8 at src/main.rs:318:38: 327:26
    }

    bb33: {
        StorageDead(_46);                // scope 8 at src/main.rs:327:25: 327:26
        StorageLive(_62);                // scope 9 at src/main.rs:329:37: 329:43
        _62 = _45;                       // scope 9 at src/main.rs:329:37: 329:43
        StorageLive(_63);                // scope 9 at src/main.rs:330:41: 330:51
        _63 = _29;                       // scope 9 at src/main.rs:330:41: 330:51
        StorageLive(_64);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:110:23: 113:6
        StorageLive(_65);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:13: 111:16
        StorageLive(_66);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_67);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_68);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_69);                // scope 9 at src/main.rs:332:52: 332:62
        _69 = &_29;                      // scope 9 at src/main.rs:332:52: 332:62
        (_68.0: &uuid::Uuid) = move _69; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageDead(_69);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageLive(_70);                // scope 9 at src/main.rs:332:52: 332:62
        _70 = (_68.0: &uuid::Uuid);      // scope 9 at src/main.rs:332:52: 332:62
        StorageLive(_71);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_72);                // scope 11 at src/main.rs:332:52: 332:62
        _72 = _70;                       // scope 11 at src/main.rs:332:52: 332:62
        StorageLive(_73);                // scope 11 at src/main.rs:332:52: 332:62
        _73 = <Uuid as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r uuid::Uuid, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 11 at src/main.rs:332:52: 332:62
                                         // mir::Constant
                                         // + span: src/main.rs:332:52: 332:62
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r uuid::Uuid, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<uuid::Uuid as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _71 = ArgumentV1::new::<Uuid>(move _72, move _73) -> [return: bb34, unwind: bb51]; // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b uuid::Uuid, for<'r, 's, 't0> fn(&'r uuid::Uuid, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb34: {
        StorageDead(_73);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageDead(_72);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        _67 = [move _71];                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageDead(_71);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageDead(_70);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageLive(_74);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        _74 = &_67;                      // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_75);                // scope 13 at src/main.rs:331:52: 331:78
        StorageLive(_76);                // scope 13 at src/main.rs:331:52: 331:78
        StorageLive(_77);                // scope 13 at src/main.rs:331:52: 331:78
        _95 = const Client::process::<T>::{closure#1}::{closure#0}::promoted[0]; // scope 13 at src/main.rs:331:52: 331:78
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(Client::process::{closure#1}::{closure#0}, [T, <closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:331:52: 331:78
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:150 ~ webpush_server[6b79]::{impl#0}::process::{closure#1}::{closure#0}), const_param_did: None }, substs_: Some([T, <closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _77 = _95;                       // scope 13 at src/main.rs:331:52: 331:78
        _76 = _77;                       // scope 13 at src/main.rs:331:52: 331:78
        _75 = move _76 as &[&str] (Pointer(Unsize)); // scope 13 at src/main.rs:331:52: 331:78
        StorageDead(_76);                // scope 13 at src/main.rs:331:77: 331:78
        StorageLive(_78);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageLive(_79);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        _79 = _74;                       // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        _78 = move _79 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
        StorageDead(_79);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        _66 = Arguments::new_v1(move _75, move _78) -> [return: bb35, unwind: bb51]; // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:39: 111:79
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb35: {
        StorageDead(_78);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageDead(_75);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageDead(_77);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        StorageDead(_74);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:78: 111:79
        _65 = format(move _66) -> [return: bb36, unwind: bb51]; // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:19: 111:80
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:19: 111:38
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) -> std::string::String {std::fmt::format}, val: Value(Scalar(<ZST>)) }
    }

    bb36: {
        StorageDead(_66);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:79: 111:80
        StorageDead(_68);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:80: 111:81
        StorageDead(_67);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:111:80: 111:81
        _64 = move _65;                  // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:112:9: 112:12
        StorageDead(_65);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:113:5: 113:6
        ((_21 as Register).0: uuid::Uuid) = move _63; // scope 9 at src/main.rs:328:25: 333:26
        ((_21 as Register).1: u32) = move _62; // scope 9 at src/main.rs:328:25: 333:26
        ((_21 as Register).2: std::string::String) = move _64; // scope 9 at src/main.rs:328:25: 333:26
        discriminant(_21) = 1;           // scope 9 at src/main.rs:328:25: 333:26
        StorageDead(_64);                // scope 9 at src/main.rs:333:25: 333:26
        StorageDead(_63);                // scope 9 at src/main.rs:333:25: 333:26
        StorageDead(_62);                // scope 9 at src/main.rs:333:25: 333:26
        StorageDead(_45);                // scope 8 at src/main.rs:334:21: 334:22
        StorageDead(_38);                // scope 7 at src/main.rs:334:21: 334:22
        drop(_34) -> [return: bb37, unwind: bb52]; // scope 6 at src/main.rs:334:21: 334:22
    }

    bb37: {
        StorageDead(_34);                // scope 6 at src/main.rs:334:21: 334:22
        drop(_30) -> [return: bb38, unwind: bb69]; // scope 5 at src/main.rs:334:21: 334:22
    }

    bb38: {
        StorageDead(_30);                // scope 5 at src/main.rs:334:21: 334:22
        StorageDead(_29);                // scope 1 at src/main.rs:334:21: 334:22
        goto -> bb40;                    // scope 1 at src/main.rs:334:21: 334:22
    }

    bb39: {
        StorageLive(_80);                // scope 1 at src/main.rs:335:59: 335:69
        _80 = ((((_4 as A).0: ClientMessage) as Unregister).0: uuid::Uuid); // scope 1 at src/main.rs:335:59: 335:69
        StorageLive(_81);                // scope 14 at src/main.rs:338:41: 338:51
        _81 = _80;                       // scope 14 at src/main.rs:338:41: 338:51
        ((_21 as Unregister).0: uuid::Uuid) = move _81; // scope 14 at src/main.rs:336:25: 339:26
        ((_21 as Unregister).1: u32) = const 200_u32; // scope 14 at src/main.rs:336:25: 339:26
        discriminant(_21) = 2;           // scope 14 at src/main.rs:336:25: 339:26
        StorageDead(_81);                // scope 14 at src/main.rs:339:25: 339:26
        StorageDead(_80);                // scope 1 at src/main.rs:340:21: 340:22
        goto -> bb40;                    // scope 1 at src/main.rs:340:21: 340:22
    }

    bb40: {
        StorageLive(_84);                // scope 4 at src/main.rs:343:21: 343:23
        StorageLive(_85);                // scope 4 at src/main.rs:343:34: 343:51
        StorageLive(_86);                // scope 4 at src/main.rs:343:34: 343:36
        _99 = const false;               // scope 4 at src/main.rs:343:34: 343:36
        _86 = move _5;                   // scope 4 at src/main.rs:343:34: 343:36
        StorageLive(_87);                // scope 4 at src/main.rs:343:42: 343:50
        _87 = move _21;                  // scope 4 at src/main.rs:343:42: 343:50
        _85 = <T as futures::Sink>::send(move _86, move _87) -> [return: bb41, unwind: bb69]; // scope 4 at src/main.rs:343:34: 343:51
                                         // mir::Constant
                                         // + span: src/main.rs:343:37: 343:41
                                         // + literal: Const { ty: fn(T, <T as futures::Sink>::SinkItem) -> futures::sink::Send<T> {<T as futures::Sink>::send}, val: Value(Scalar(<ZST>)) }
    }

    bb41: {
        _97 = const true;                // scope 4 at src/main.rs:343:50: 343:51
        StorageDead(_87);                // scope 4 at src/main.rs:343:50: 343:51
        StorageDead(_86);                // scope 4 at src/main.rs:343:50: 343:51
        StorageLive(_88);                // scope 4 at src/main.rs:344:34: 344:55
        _88 = std::time::Duration::new(const 600_u64, const 0_u32) -> [return: bb42, unwind: bb67]; // scope 4 at src/main.rs:344:34: 344:55
                                         // mir::Constant
                                         // + span: src/main.rs:344:34: 344:47
                                         // + literal: Const { ty: fn(u64, u32) -> std::time::Duration {std::time::Duration::new}, val: Value(Scalar(<ZST>)) }
    }

    bb42: {
        StorageLive(_89);                // scope 4 at src/main.rs:345:34: 345:41
        StorageLive(_90);                // scope 4 at src/main.rs:345:34: 345:41
        _90 = &(_1.2: tokio_core::reactor::Handle); // scope 4 at src/main.rs:345:34: 345:41
        _89 = _90;                       // scope 4 at src/main.rs:345:34: 345:41
        _97 = const false;               // scope 4 at src/main.rs:343:26: 345:42
        _84 = timeout::<futures::sink::Send<T>>(move _85, move _88, move _89) -> [return: bb43, unwind: bb67]; // scope 4 at src/main.rs:343:26: 345:42
                                         // mir::Constant
                                         // + span: src/main.rs:343:26: 343:33
                                         // + literal: Const { ty: for<'r> fn(futures::sink::Send<T>, std::time::Duration, &'r tokio_core::reactor::Handle) -> std::boxed::Box<(dyn futures::Future<Error = errors::Error, Item = <futures::sink::Send<T> as futures::Future>::Item> + 'static)> {timeout::<futures::sink::Send<T>>}, val: Value(Scalar(<ZST>)) }
    }

    bb43: {
        StorageDead(_89);                // scope 4 at src/main.rs:345:41: 345:42
        StorageDead(_88);                // scope 4 at src/main.rs:345:41: 345:42
        _97 = const false;               // scope 4 at src/main.rs:345:41: 345:42
        StorageDead(_85);                // scope 4 at src/main.rs:345:41: 345:42
        StorageDead(_90);                // scope 4 at src/main.rs:345:42: 345:43
        StorageLive(_91);                // scope 16 at src/main.rs:346:17: 346:64
        StorageLive(_92);                // scope 16 at src/main.rs:346:26: 346:63
        StorageLive(_93);                // scope 16 at src/main.rs:346:26: 346:28
        _93 = move _84;                  // scope 16 at src/main.rs:346:26: 346:28
        StorageLive(_94);                // scope 16 at src/main.rs:346:33: 346:62
        _98 = const false;               // scope 16 at src/main.rs:346:33: 346:62
        (_94.0: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>) = move _6; // scope 16 at src/main.rs:346:33: 346:62
        _92 = <Box<dyn futures::Future<Error = errors::Error, Item = T>> as futures::Future>::map::<[closure@src/main.rs:346:33: 346:62], Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>(move _93, move _94) -> [return: bb44, unwind: bb69]; // scope 16 at src/main.rs:346:26: 346:63
                                         // mir::Constant
                                         // + span: src/main.rs:346:29: 346:32
                                         // + literal: Const { ty: fn(std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]) -> futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]> {<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>> as futures::Future>::map::<[closure@src/main.rs:346:33: 346:62], futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>}, val: Value(Scalar(<ZST>)) }
    }

    bb44: {
        StorageDead(_94);                // scope 16 at src/main.rs:346:62: 346:63
        StorageDead(_93);                // scope 16 at src/main.rs:346:62: 346:63
        _91 = Box::<futures::Map<Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>>::new(move _92) -> [return: bb45, unwind: bb69]; // scope 16 at src/main.rs:346:17: 346:64
                                         // mir::Constant
                                         // + span: src/main.rs:346:17: 346:25
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>) -> std::boxed::Box<futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>> {std::boxed::Box::<futures::Map<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = T>>, [closure@src/main.rs:346:33: 346:62]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb45: {
        _3 = move _91 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> (Pointer(Unsize)); // scope 16 at src/main.rs:346:17: 346:64
        StorageDead(_92);                // scope 16 at src/main.rs:346:63: 346:64
        StorageDead(_91);                // scope 16 at src/main.rs:346:63: 346:64
        StorageDead(_84);                // scope 4 at src/main.rs:347:13: 347:14
        StorageDead(_21);                // scope 1 at src/main.rs:347:13: 347:14
        _98 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_6);                 // scope 0 at src/main.rs:347:13: 347:14
        _99 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_5);                 // scope 0 at src/main.rs:347:13: 347:14
        _101 = discriminant(_4);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _101) -> [1_isize: bb56, otherwise: bb57]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb46: {
        _98 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_6);                 // scope 0 at src/main.rs:347:13: 347:14
        drop(_5) -> [return: bb47, unwind: bb74]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb47: {
        _99 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_5);                 // scope 0 at src/main.rs:347:13: 347:14
        _103 = discriminant(_4);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _103) -> [1_isize: bb60, otherwise: bb61]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb48: {
        StorageDead(_7);                 // scope 0 at src/main.rs:308:18: 308:19
        goto -> bb49;                    // scope 0 at no-location
    }

    bb49: {
        StorageDead(_3);                 // scope 0 at src/main.rs:347:13: 347:14
        _104 = discriminant(_2);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _104) -> [0_isize: bb63, otherwise: bb62]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb50: {
        return;                          // scope 0 at src/main.rs:347:14: 347:14
    }

    bb51 (cleanup): {
        drop(_34) -> bb52;               // scope 6 at src/main.rs:334:21: 334:22
    }

    bb52 (cleanup): {
        drop(_30) -> bb69;               // scope 5 at src/main.rs:334:21: 334:22
    }

    bb53 (cleanup): {
        switchInt(_99) -> [false: bb74, otherwise: bb70]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb54 (cleanup): {
        drop(_1) -> bb55;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb55 (cleanup): {
        resume;                          // scope 0 at src/main.rs:301:42: 347:14
    }

    bb56: {
        _100 = const false;              // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_4);                 // scope 0 at src/main.rs:347:13: 347:14
        _0 = move _3 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>> (Pointer(Unsize)); // scope 0 at src/main.rs:346:17: 346:64
        StorageDead(_3);                 // scope 0 at src/main.rs:347:13: 347:14
        _102 = discriminant(_2);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _102) -> [0_isize: bb59, otherwise: bb58]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb57: {
        drop(_4) -> [return: bb56, unwind: bb77]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb58: {
        drop(_1) -> bb50;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb59: {
        _96 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        goto -> bb58;                    // scope 0 at src/main.rs:347:13: 347:14
    }

    bb60: {
        _100 = const false;              // scope 0 at src/main.rs:347:13: 347:14
        StorageDead(_4);                 // scope 0 at src/main.rs:347:13: 347:14
        goto -> bb49;                    // scope 0 at no-location
    }

    bb61: {
        drop(_4) -> [return: bb60, unwind: bb77]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb62: {
        drop(_1) -> bb50;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb63: {
        switchInt(_96) -> [false: bb64, otherwise: bb65]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb64: {
        _96 = const false;               // scope 0 at src/main.rs:347:13: 347:14
        goto -> bb62;                    // scope 0 at src/main.rs:347:13: 347:14
    }

    bb65: {
        goto -> bb64;                    // scope 0 at src/main.rs:347:13: 347:14
    }

    bb66 (cleanup): {
        drop(_85) -> bb69;               // scope 4 at src/main.rs:345:41: 345:42
    }

    bb67 (cleanup): {
        switchInt(_97) -> [false: bb69, otherwise: bb66]; // scope 4 at src/main.rs:345:41: 345:42
    }

    bb68 (cleanup): {
        drop(_6) -> bb53;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb69 (cleanup): {
        switchInt(_98) -> [false: bb53, otherwise: bb68]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb70 (cleanup): {
        drop(_5) -> bb74;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb71 (cleanup): {
        switchInt(_100) -> [false: bb77, otherwise: bb72]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb72 (cleanup): {
        drop(((_4 as B).0: Notification)) -> bb77; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb73 (cleanup): {
        drop(_4) -> bb77;                // scope 0 at src/main.rs:347:13: 347:14
    }

    bb74 (cleanup): {
        _105 = discriminant(_4);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _105) -> [1_isize: bb71, otherwise: bb73]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb75 (cleanup): {
        switchInt(_96) -> [false: bb54, otherwise: bb76]; // scope 0 at src/main.rs:347:13: 347:14
    }

    bb76 (cleanup): {
        goto -> bb54;                    // scope 0 at src/main.rs:347:13: 347:14
    }

    bb77 (cleanup): {
        _106 = discriminant(_2);         // scope 0 at src/main.rs:347:13: 347:14
        switchInt(move _106) -> [0_isize: bb75, otherwise: bb54]; // scope 0 at src/main.rs:347:13: 347:14
    }
}

promoted[0] in <impl at src/main.rs:232:1: 350:2>::process::{closure#1}::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:331:52: 331:78
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:331:52: 331:78

    bb0: {
        _1 = [const "http://localhost:8081/"]; // scope 0 at src/main.rs:331:52: 331:78
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [104, 116, 116, 112, 58, 47, 47, 108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49, 47], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4194303], len: Size { raw: 22 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 22 })
                                         // mir::Constant
                                         // + span: src/main.rs:331:52: 331:78
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [104, 116, 116, 112, 58, 47, 47, 108, 111, 99, 97, 108, 104, 111, 115, 116, 58, 56, 48, 56, 49, 47], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4194303], len: Size { raw: 22 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 22 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:331:52: 331:78
        return;                          // scope 0 at src/main.rs:331:52: 331:78
    }
}

fn <impl at src/main.rs:232:1: 350:2>::handshake::{closure#0}::{closure#0}(_1: [closure@src/main.rs:242:61: 242:76]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:242:64: 242:64

    bb0: {
        _0 = const "recv error";         // scope 0 at src/main.rs:242:64: 242:76
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [114, 101, 99, 118, 32, 101, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:242:64: 242:76
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [114, 101, 99, 118, 32, 101, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
        return;                          // scope 0 at src/main.rs:242:76: 242:76
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:113:9: 148:10>::backtrace(_1: &errors::Error) -> std::option::Option<&error_chain::Backtrace> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:145:30: 145:35
    let mut _0: std::option::Option<&error_chain::Backtrace>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:145:40: 145:66
    let mut _2: &error_chain::State;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:17: 146:23

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:17: 146:23
        _2 = &((*_1).1: error_chain::State); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:17: 146:23
        _0 = error_chain::State::backtrace(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:17: 146:35
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:24: 146:33
                                         // + literal: Const { ty: for<'r> fn(&'r error_chain::State) -> std::option::Option<&'r error_chain::Backtrace> {error_chain::State::backtrace}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:146:34: 146:35
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:147:14: 147:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:314:9: 330:10>::description(_1: &errors::ErrorKind) -> &str {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:316:32: 316:37
    let mut _0: &str;                    // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:316:42: 316:46
    let mut _2: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:9: 497:39
    let _3: &std::string::String;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let _4: &str;                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
    let mut _5: &std::string::String;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
    let _6: &&std::string::String;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
    let _7: &tungstenite::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let _8: &str;                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
    let mut _9: &tungstenite::Error;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
    let _10: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let _11: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
    let mut _12: &std::io::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
    let _13: &serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let _14: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
    let mut _15: &serde_json::Error;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
    scope 1 {
        debug s => _3;                   // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    }
    scope 2 {
        debug err => _7;                 // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    }
    scope 3 {
        debug err => _10;                // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    }
    scope 4 {
        debug err => _13;                // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    }

    bb0: {
        _2 = discriminant((*_1));        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:317:23: 317:28
        switchInt(move _2) -> [0_isize: bb3, 1_isize: bb5, 2_isize: bb7, 3_isize: bb1, otherwise: bb2]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:317:17: 317:28
    }

    bb1: {
        StorageLive(_13);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _13 = &(((*_1) as Json).0: serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_14);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageLive(_15);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _15 = _13;                       // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _14 = <serde_json::Error as std::error::Error>::description(move _15) -> bb9; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:69
                                         // + literal: Const { ty: for<'r> fn(&'r serde_json::Error) -> &'r str {<serde_json::Error as std::error::Error>::description}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:317:23: 317:28
    }

    bb3: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _3 = &(((*_1) as Msg).0: std::string::String); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_4);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        StorageLive(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        StorageLive(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        _5 = (*_6);                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        _4 = <std::string::String as Deref>::deref(move _5) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
                                         // + literal: Const { ty: for<'r> fn(&'r std::string::String) -> &'r <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        _0 = _4;                         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:33: 239:35
        StorageDead(_5);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:239:34: 239:35
        StorageDead(_6);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        StorageDead(_4);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
    }

    bb5: {
        StorageLive(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _7 = &(((*_1) as Ws).0: tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_8);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageLive(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _9 = _7;                         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _8 = <tungstenite::Error as std::error::Error>::description(move _9) -> bb6; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:69
                                         // + literal: Const { ty: for<'r> fn(&'r tungstenite::Error) -> &'r str {<tungstenite::Error as std::error::Error>::description}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        _0 = _8;                         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageDead(_9);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:73: 254:74
        StorageDead(_8);                 // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
    }

    bb7: {
        StorageLive(_10);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        _10 = &(((*_1) as Io).0: std::io::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
        StorageLive(_11);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageLive(_12);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _12 = _10;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:70: 254:73
        _11 = <std::io::Error as std::error::Error>::description(move _12) -> bb8; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:69
                                         // + literal: Const { ty: for<'r> fn(&'r std::io::Error) -> &'r str {<std::io::Error as std::error::Error>::description}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        _0 = _11;                        // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageDead(_12);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:73: 254:74
        StorageDead(_11);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        StorageDead(_10);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
    }

    bb9: {
        _0 = _14;                        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:37: 254:74
        StorageDead(_15);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:254:73: 254:74
        StorageDead(_14);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        StorageDead(_13);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
        goto -> bb10;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:326:25: 326:26
    }

    bb10: {
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:329:14: 329:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:113:9: 148:10>::from_kind(_1: errors::ErrorKind) -> errors::Error {
    debug kind => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:115:30: 115:34
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:115:57: 115:68
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:117:21: 117:25
    let mut _3: error_chain::State;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:118:21: 118:45

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:117:21: 117:25
        _2 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:117:21: 117:25
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:118:21: 118:45
        _3 = <error_chain::State as Default>::default() -> [return: bb1, unwind: bb2]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:118:21: 118:45
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:118:21: 118:43
                                         // + literal: Const { ty: fn() -> error_chain::State {<error_chain::State as std::default::Default>::default}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        (_0.0: errors::ErrorKind) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:116:17: 119:18
        (_0.1: error_chain::State) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:116:17: 119:18
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:119:17: 119:18
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:119:17: 119:18
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:120:14: 120:14
    }

    bb2 (cleanup): {
        drop(_2) -> bb3;                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:119:17: 119:18
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:115:13: 120:14
    }
}

fn parse::{closure#1}(_1: [closure@src/main.rs:215:54: 215:77]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:215:57: 215:57

    bb0: {
        _0 = const "invalid json bytes"; // scope 0 at src/main.rs:215:57: 215:77
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [105, 110, 118, 97, 108, 105, 100, 32, 106, 115, 111, 110, 32, 98, 121, 116, 101, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [262143], len: Size { raw: 18 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 18 })
                                         // mir::Constant
                                         // + span: src/main.rs:215:57: 215:77
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [105, 110, 118, 97, 108, 105, 100, 32, 106, 115, 111, 110, 32, 98, 121, 116, 101, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [262143], len: Size { raw: 18 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 18 }) }
        return;                          // scope 0 at src/main.rs:215:77: 215:77
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::expecting(_1: &_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug formatter => _2;               // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: &mut std::fmt::Formatter; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &str;                    // in scope 0 at src/main.rs:54:10: 54:21
    let _5: &str;                        // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _3 = &mut (*_2);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        _5 = const "field identifier";   // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [102, 105, 101, 108, 100, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 16 }) }
        _4 = _5;                         // scope 0 at src/main.rs:54:10: 54:21
        _0 = std::fmt::Formatter::write_str(move _3, move _4) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, &'s str) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_str}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn main::{closure#0}::{closure#1}(_1: [closure@src/main.rs:168:37: 178:10], _2: (With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>)) -> futures::Then<Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]> {
    debug cx2 => (_1.0: std::rc::Rc<Context>); // in scope 0 at src/main.rs:167:13: 167:16
    debug handle2 => (_1.1: tokio_core::reactor::Handle); // in scope 0 at src/main.rs:166:13: 166:20
    let mut _0: futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]>; // return place in scope 0 at src/main.rs:168:61: 168:61
    let _3: futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>; // in scope 0 at src/main.rs:168:44: 168:46
    let _4: Client;                      // in scope 0 at src/main.rs:168:48: 168:54
    let _5: futures::unsync::mpsc::UnboundedReceiver<Notification>; // in scope 0 at src/main.rs:168:56: 168:58
    let mut _7: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>; // in scope 0 at src/main.rs:170:13: 170:58
    let mut _8: Client;                  // in scope 0 at src/main.rs:170:13: 170:19
    let mut _9: futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>; // in scope 0 at src/main.rs:170:28: 170:30
    let mut _10: std::rc::Rc<Context>;   // in scope 0 at src/main.rs:170:32: 170:43
    let mut _11: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:170:32: 170:35
    let mut _12: futures::unsync::mpsc::UnboundedReceiver<Notification>; // in scope 0 at src/main.rs:170:45: 170:47
    let mut _13: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:170:49: 170:57
    let _14: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:170:49: 170:57
    let mut _15: [closure@src/main.rs:170:64: 177:14]; // in scope 0 at src/main.rs:170:64: 177:14
    let mut _16: bool;                   // in scope 0 at src/main.rs:170:57: 170:58
    let mut _17: bool;                   // in scope 0 at src/main.rs:170:57: 170:58
    let mut _18: bool;                   // in scope 0 at src/main.rs:178:9: 178:10
    let mut _19: bool;                   // in scope 0 at src/main.rs:178:9: 178:10
    scope 1 {
        debug ws => _3;                  // in scope 1 at src/main.rs:168:44: 168:46
        debug client => _4;              // in scope 1 at src/main.rs:168:48: 168:54
        debug rx => _5;                  // in scope 1 at src/main.rs:168:56: 168:58
        let _6: uuid::Uuid;              // in scope 1 at src/main.rs:169:17: 169:21
        scope 2 {
            debug uaid => _6;            // in scope 2 at src/main.rs:169:17: 169:21
        }
    }

    bb0: {
        _17 = const false;               // scope 0 at src/main.rs:168:44: 168:46
        _18 = const false;               // scope 0 at src/main.rs:168:44: 168:46
        _16 = const false;               // scope 0 at src/main.rs:168:44: 168:46
        _19 = const false;               // scope 0 at src/main.rs:168:44: 168:46
        _19 = const true;                // scope 0 at src/main.rs:168:44: 168:46
        StorageLive(_3);                 // scope 0 at src/main.rs:168:44: 168:46
        _3 = move (_2.0: futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>); // scope 0 at src/main.rs:168:44: 168:46
        StorageLive(_4);                 // scope 0 at src/main.rs:168:48: 168:54
        _4 = move (_2.1: Client);        // scope 0 at src/main.rs:168:48: 168:54
        StorageLive(_5);                 // scope 0 at src/main.rs:168:56: 168:58
        _18 = const true;                // scope 0 at src/main.rs:168:56: 168:58
        _5 = move (_2.2: futures::unsync::mpsc::UnboundedReceiver<Notification>); // scope 0 at src/main.rs:168:56: 168:58
        StorageLive(_6);                 // scope 1 at src/main.rs:169:17: 169:21
        _6 = (_4.0: uuid::Uuid);         // scope 1 at src/main.rs:169:24: 169:35
        StorageLive(_7);                 // scope 2 at src/main.rs:170:13: 170:58
        StorageLive(_8);                 // scope 2 at src/main.rs:170:13: 170:19
        _17 = const true;                // scope 2 at src/main.rs:170:13: 170:19
        _8 = move _4;                    // scope 2 at src/main.rs:170:13: 170:19
        StorageLive(_9);                 // scope 2 at src/main.rs:170:28: 170:30
        _16 = const true;                // scope 2 at src/main.rs:170:28: 170:30
        _9 = move _3;                    // scope 2 at src/main.rs:170:28: 170:30
        StorageLive(_10);                // scope 2 at src/main.rs:170:32: 170:43
        StorageLive(_11);                // scope 2 at src/main.rs:170:32: 170:35
        _11 = &(_1.0: std::rc::Rc<Context>); // scope 2 at src/main.rs:170:32: 170:35
        _10 = <Rc<Context> as Clone>::clone(move _11) -> [return: bb1, unwind: bb9]; // scope 2 at src/main.rs:170:32: 170:43
                                         // mir::Constant
                                         // + span: src/main.rs:170:36: 170:41
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> std::rc::Rc<Context> {<std::rc::Rc<Context> as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_11);                // scope 2 at src/main.rs:170:42: 170:43
        StorageLive(_12);                // scope 2 at src/main.rs:170:45: 170:47
        _18 = const false;               // scope 2 at src/main.rs:170:45: 170:47
        _12 = move _5;                   // scope 2 at src/main.rs:170:45: 170:47
        StorageLive(_13);                // scope 2 at src/main.rs:170:49: 170:57
        StorageLive(_14);                // scope 2 at src/main.rs:170:49: 170:57
        _14 = &(_1.1: tokio_core::reactor::Handle); // scope 2 at src/main.rs:170:49: 170:57
        _13 = _14;                       // scope 2 at src/main.rs:170:49: 170:57
        _17 = const false;               // scope 2 at src/main.rs:170:13: 170:58
        _16 = const false;               // scope 2 at src/main.rs:170:13: 170:58
        _7 = Client::process::<With<futures::stream::AndThen<futures::stream::FromErr<WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>>(move _8, move _9, move _10, move _12, move _13) -> [return: bb2, unwind: bb9]; // scope 2 at src/main.rs:170:13: 170:58
                                         // mir::Constant
                                         // + span: src/main.rs:170:20: 170:27
                                         // + literal: Const { ty: for<'r> fn(Client, futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>, std::rc::Rc<Context>, futures::unsync::mpsc::UnboundedReceiver<Notification>, &'r tokio_core::reactor::Handle) -> std::boxed::Box<(dyn futures::Future<Error = errors::Error, Item = ()> + 'static)> {Client::process::<futures::sink::With<futures::stream::AndThen<futures::stream::FromErr<tokio_tungstenite::WebSocketStream<tokio_core::net::TcpStream>, errors::Error>, fn(tungstenite::Message) -> std::result::Result<ClientMessage, errors::Error> {parse}, std::result::Result<ClientMessage, errors::Error>>, ServerMessage, fn(ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {serialize}, std::result::Result<tungstenite::Message, errors::Error>>>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_13);                // scope 2 at src/main.rs:170:57: 170:58
        StorageDead(_12);                // scope 2 at src/main.rs:170:57: 170:58
        StorageDead(_10);                // scope 2 at src/main.rs:170:57: 170:58
        _16 = const false;               // scope 2 at src/main.rs:170:57: 170:58
        StorageDead(_9);                 // scope 2 at src/main.rs:170:57: 170:58
        _17 = const false;               // scope 2 at src/main.rs:170:57: 170:58
        StorageDead(_8);                 // scope 2 at src/main.rs:170:57: 170:58
        StorageLive(_15);                // scope 2 at src/main.rs:170:64: 177:14
        _19 = const false;               // scope 2 at src/main.rs:170:64: 177:14
        (_15.0: std::rc::Rc<Context>) = move (_1.0: std::rc::Rc<Context>); // scope 2 at src/main.rs:170:64: 177:14
        (_15.1: uuid::Uuid) = _6;        // scope 2 at src/main.rs:170:64: 177:14
        _0 = <Box<dyn futures::Future<Error = errors::Error, Item = ()>> as futures::Future>::then::<[closure@src/main.rs:170:64: 177:14], std::result::Result<(), errors::Error>>(move _7, move _15) -> [return: bb3, unwind: bb12]; // scope 2 at src/main.rs:170:13: 177:15
                                         // mir::Constant
                                         // + span: src/main.rs:170:59: 170:63
                                         // + literal: Const { ty: fn(std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, [closure@src/main.rs:170:64: 177:14]) -> futures::Then<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>, std::result::Result<(), errors::Error>, [closure@src/main.rs:170:64: 177:14]> {<std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>> as futures::Future>::then::<[closure@src/main.rs:170:64: 177:14], std::result::Result<(), errors::Error>>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_15);                // scope 2 at src/main.rs:177:14: 177:15
        StorageDead(_7);                 // scope 2 at src/main.rs:177:14: 177:15
        StorageDead(_6);                 // scope 1 at src/main.rs:178:9: 178:10
        StorageDead(_14);                // scope 1 at src/main.rs:178:9: 178:10
        _18 = const false;               // scope 0 at src/main.rs:178:9: 178:10
        StorageDead(_5);                 // scope 0 at src/main.rs:178:9: 178:10
        StorageDead(_4);                 // scope 0 at src/main.rs:178:9: 178:10
        StorageDead(_3);                 // scope 0 at src/main.rs:178:9: 178:10
        drop((_1.1: tokio_core::reactor::Handle)) -> bb7; // scope 0 at src/main.rs:178:9: 178:10
    }

    bb4 (cleanup): {
        switchInt(_17) -> [false: bb12, otherwise: bb10]; // scope 2 at src/main.rs:170:57: 170:58
    }

    bb5 (cleanup): {
        switchInt(_19) -> [false: bb13, otherwise: bb14]; // scope 0 at src/main.rs:178:9: 178:10
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at src/main.rs:168:37: 178:10
    }

    bb7: {
        return;                          // scope 0 at src/main.rs:178:10: 178:10
    }

    bb8 (cleanup): {
        drop(_9) -> bb4;                 // scope 2 at src/main.rs:170:57: 170:58
    }

    bb9 (cleanup): {
        switchInt(_16) -> [false: bb4, otherwise: bb8]; // scope 2 at src/main.rs:170:57: 170:58
    }

    bb10 (cleanup): {
        drop(_8) -> bb12;                // scope 2 at src/main.rs:170:57: 170:58
    }

    bb11 (cleanup): {
        drop(_5) -> bb5;                 // scope 0 at src/main.rs:178:9: 178:10
    }

    bb12 (cleanup): {
        switchInt(_18) -> [false: bb5, otherwise: bb11]; // scope 0 at src/main.rs:178:9: 178:10
    }

    bb13 (cleanup): {
        drop((_1.1: tokio_core::reactor::Handle)) -> bb6; // scope 0 at src/main.rs:178:9: 178:10
    }

    bb14 (cleanup): {
        drop((_1.0: std::rc::Rc<Context>)) -> bb13; // scope 0 at src/main.rs:178:9: 178:10
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_str(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &str) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "channelID") -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb1: {
        switchInt(move _3) -> [false: bb2, otherwise: bb3]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_5) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _5; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb4;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_4) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _4; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb4;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb4: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::deserialize(_1: __D) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {
    debug __deserializer => _1;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _2: __D;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _2 = move _1;                    // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _0 = <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>(move _2, move _3) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: &[&str; 1];              // in scope 0 at src/main.rs:54:10: 54:21
    let _2: &[&str; 1];                  // in scope 0 at src/main.rs:54:10: 54:21
    let _3: [&str; 1];                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &[&str; 1];              // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS::promoted[0]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:400 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::FIELDS#2), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _2 = &(*_4);                     // scope 0 at src/main.rs:54:10: 54:21
        _1 = &(*_2);                     // scope 0 at src/main.rs:54:10: 54:21
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_1);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _1 = [const "channelID"];        // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: &[&str; 1];              // in scope 0 at src/main.rs:54:10: 54:21
    let _2: &[&str; 1];                  // in scope 0 at src/main.rs:54:10: 54:21
    let _3: [&str; 1];                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &[&str; 1];              // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS::promoted[0]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:370 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::FIELDS#1), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _2 = &(*_4);                     // scope 0 at src/main.rs:54:10: 54:21
        _1 = &(*_2);                     // scope 0 at src/main.rs:54:10: 54:21
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_1);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _1 = [const "channelID"];        // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn _IMPL_SERIALIZE_FOR_Update::<impl at src/main.rs:118:10: 118:19>::serialize(_1: &Update, _2: __S) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:118:10: 118:19
    debug __serializer => _2;            // in scope 0 at src/main.rs:118:10: 118:19
    let mut _0: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // return place in scope 0 at src/main.rs:118:10: 118:19
    let mut _3: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _4: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _5: __S;                     // in scope 0 at src/main.rs:118:10: 118:19
    let mut _6: usize;                   // in scope 0 at src/main.rs:118:10: 118:19
    let mut _7: isize;                   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let _8: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
    let _9: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
    let mut _10: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _11: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _12: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _13: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _14: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _15: &uuid::Uuid;            // in scope 0 at src/main.rs:118:10: 118:19
    let _16: &uuid::Uuid;                // in scope 0 at src/main.rs:118:10: 118:19
    let mut _17: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _20: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _21: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _22: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _23: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _24: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _25: &u64;                   // in scope 0 at src/main.rs:118:10: 118:19
    let _26: &u64;                       // in scope 0 at src/main.rs:118:10: 118:19
    let mut _27: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _30: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _31: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _32: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:118:10: 118:19
    let mut _33: bool;                   // in scope 0 at src/main.rs:118:18: 118:19
    scope 1 {
        debug __serde_state => _3;       // in scope 1 at src/main.rs:118:10: 118:19
        let _18: ();                     // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _19: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        let _28: ();                     // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _29: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 4 {
            debug val => _18;            // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 5 {
            debug err => _19;            // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
        scope 6 {
            debug val => _28;            // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 7 {
            debug err => _29;            // in scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }
    scope 2 {
        debug val => _8;                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
    }
    scope 3 {
        debug err => _9;                 // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
    }

    bb0: {
        _33 = const false;               // scope 0 at src/main.rs:118:10: 118:19
        StorageLive(_3);                 // scope 0 at src/main.rs:118:10: 118:19
        StorageLive(_4);                 // scope 0 at src/main.rs:118:10: 118:19
        StorageLive(_5);                 // scope 0 at src/main.rs:118:10: 118:19
        _5 = move _2;                    // scope 0 at src/main.rs:118:10: 118:19
        StorageLive(_6);                 // scope 0 at src/main.rs:118:10: 118:19
        _6 = const 2_usize;              // scope 0 at src/main.rs:118:10: 118:19
        _4 = <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct(move _5, const "Update", move _6) -> bb1; // scope 0 at src/main.rs:118:10: 118:19
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: fn(__S, &'static str, usize) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [85, 112, 100, 97, 116, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [85, 112, 100, 97, 116, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at src/main.rs:118:18: 118:19
        StorageDead(_5);                 // scope 0 at src/main.rs:118:18: 118:19
        _7 = discriminant(_4);           // scope 0 at src/main.rs:118:10: 118:19
        switchInt(move _7) -> [0_isize: bb4, 1_isize: bb2, otherwise: bb3]; // scope 0 at src/main.rs:118:10: 398:9
    }

    bb2: {
        StorageLive(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _9 = move ((_4 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_10);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _11 = move _9;                   // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _10 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _11) -> bb5; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        unreachable;                     // scope 0 at src/main.rs:118:10: 118:19
    }

    bb4: {
        StorageLive(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _8 = move ((_4 as Ok).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct); // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _33 = const true;                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _3 = move _8;                    // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_4);                 // scope 0 at src/main.rs:118:18: 118:19
        StorageLive(_12);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_13);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_14);                // scope 1 at src/main.rs:118:10: 118:19
        _14 = &mut _3;                   // scope 1 at src/main.rs:118:10: 118:19
        _13 = &mut (*_14);               // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_15);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_16);                // scope 1 at src/main.rs:118:10: 118:19
        _16 = &((*_1).0: uuid::Uuid);    // scope 1 at src/main.rs:118:10: 118:19
        _15 = _16;                       // scope 1 at src/main.rs:118:10: 118:19
        _12 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<Uuid>(move _13, const "channelID", move _15) -> [return: bb6, unwind: bb24]; // scope 1 at src/main.rs:118:10: 118:19
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s uuid::Uuid) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb5: {
        StorageDead(_11);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _10; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_10);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_4);                 // scope 0 at src/main.rs:118:18: 118:19
        goto -> bb18;                    // scope 0 at no-location
    }

    bb6: {
        StorageDead(_15);                // scope 1 at src/main.rs:118:18: 118:19
        StorageDead(_13);                // scope 1 at src/main.rs:118:18: 118:19
        _17 = discriminant(_12);         // scope 1 at src/main.rs:118:10: 118:19
        switchInt(move _17) -> [0_isize: bb9, 1_isize: bb7, otherwise: bb8]; // scope 1 at src/main.rs:118:10: 398:9
    }

    bb7: {
        StorageLive(_19);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _19 = move ((_12 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_20);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_21);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _21 = move _19;                  // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _20 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _21) -> [return: bb10, unwind: bb22]; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        unreachable;                     // scope 1 at src/main.rs:118:10: 118:19
    }

    bb9: {
        StorageLive(_18);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_18);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_16);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_14);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_22);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_23);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_24);                // scope 1 at src/main.rs:118:10: 118:19
        _24 = &mut _3;                   // scope 1 at src/main.rs:118:10: 118:19
        _23 = &mut (*_24);               // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_25);                // scope 1 at src/main.rs:118:10: 118:19
        StorageLive(_26);                // scope 1 at src/main.rs:118:10: 118:19
        _26 = &((*_1).1: u64);           // scope 1 at src/main.rs:118:10: 118:19
        _25 = _26;                       // scope 1 at src/main.rs:118:10: 118:19
        _22 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<u64>(move _23, const "version", move _25) -> [return: bb11, unwind: bb24]; // scope 1 at src/main.rs:118:10: 118:19
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s u64) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<u64>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [118, 101, 114, 115, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [127], len: Size { raw: 7 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 7 })
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [118, 101, 114, 115, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [127], len: Size { raw: 7 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 7 }) }
    }

    bb10: {
        StorageDead(_21);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _20; // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_20);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_19);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_16);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_14);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb17;                    // scope 1 at no-location
    }

    bb11: {
        StorageDead(_25);                // scope 1 at src/main.rs:118:18: 118:19
        StorageDead(_23);                // scope 1 at src/main.rs:118:18: 118:19
        _27 = discriminant(_22);         // scope 1 at src/main.rs:118:10: 118:19
        switchInt(move _27) -> [0_isize: bb14, 1_isize: bb12, otherwise: bb13]; // scope 1 at src/main.rs:118:10: 398:9
    }

    bb12: {
        StorageLive(_29);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _29 = move ((_22 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_30);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_31);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _31 = move _29;                  // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _30 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _31) -> [return: bb15, unwind: bb21]; // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        unreachable;                     // scope 1 at src/main.rs:118:10: 118:19
    }

    bb14: {
        StorageLive(_28);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_28);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_24);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_22);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_32);                // scope 1 at src/main.rs:118:10: 118:19
        _33 = const false;               // scope 1 at src/main.rs:118:10: 118:19
        _32 = move _3;                   // scope 1 at src/main.rs:118:10: 118:19
        _0 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::end(move _32) -> [return: bb16, unwind: bb24]; // scope 1 at src/main.rs:118:10: 118:19
                                         // mir::Constant
                                         // + span: src/main.rs:118:10: 118:19
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct) -> std::result::Result<<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Ok, <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::end}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_31);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _30; // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_30);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_29);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_26);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_24);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_22);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb17;                    // scope 1 at no-location
    }

    bb16: {
        StorageDead(_32);                // scope 1 at src/main.rs:118:18: 118:19
        _33 = const false;               // scope 0 at src/main.rs:118:18: 118:19
        StorageDead(_3);                 // scope 0 at src/main.rs:118:18: 118:19
        goto -> bb19;                    // scope 0 at src/main.rs:118:18: 118:19
    }

    bb17: {
        drop(_3) -> bb18;                // scope 0 at src/main.rs:118:18: 118:19
    }

    bb18: {
        _33 = const false;               // scope 0 at src/main.rs:118:18: 118:19
        StorageDead(_3);                 // scope 0 at src/main.rs:118:18: 118:19
        goto -> bb19;                    // scope 0 at src/main.rs:118:18: 118:19
    }

    bb19: {
        return;                          // scope 0 at src/main.rs:118:19: 118:19
    }

    bb20 (cleanup): {
        resume;                          // scope 0 at src/main.rs:118:10: 118:19
    }

    bb21 (cleanup): {
        goto -> bb24;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb22 (cleanup): {
        goto -> bb24;                    // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb23 (cleanup): {
        drop(_3) -> bb20;                // scope 0 at src/main.rs:118:18: 118:19
    }

    bb24 (cleanup): {
        switchInt(_33) -> [false: bb20, otherwise: bb23]; // scope 0 at src/main.rs:118:18: 118:19
    }
}

fn errors::Error(_1: errors::ErrorKind, _2: error_chain::State) -> errors::Error {
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11

    bb0: {
        (_0.0: errors::ErrorKind) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
        (_0.1: error_chain::State) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
    }
}

// MIR FOR CTFE
fn errors::Error(_1: errors::ErrorKind, _2: error_chain::State) -> errors::Error {
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11

    bb0: {
        (_0.0: errors::ErrorKind) = move _1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
        (_0.1: error_chain::State) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:67:9: 74:11
    }
}

fn <impl at src/main.rs:370:1: 446:2>::call::{closure#0}(_1: [closure@src/main.rs:401:32: 444:10], _2: Chunk) -> std::result::Result<hyper::Response, hyper::Error> {
    debug body => _2;                    // in scope 0 at src/main.rs:401:38: 401:42
    debug form_encoded => (_1.0: bool);  // in scope 0 at src/main.rs:394:13: 394:25
    debug cx => (_1.1: std::rc::Rc<Context>); // in scope 0 at src/main.rs:400:13: 400:15
    debug channel_id => (_1.2: uuid::Uuid); // in scope 0 at src/main.rs:387:13: 387:23
    let mut _0: std::result::Result<hyper::Response, hyper::Error>; // return place in scope 0 at src/main.rs:401:44: 401:44
    let _3: u64;                         // in scope 0 at src/main.rs:402:17: 402:24
    let mut _4: usize;                   // in scope 0 at src/main.rs:402:30: 402:40
    let mut _5: &[u8];                   // in scope 0 at src/main.rs:402:30: 402:34
    let _6: &[u8];                       // in scope 0 at src/main.rs:402:30: 402:40
    let mut _7: &hyper::Chunk;           // in scope 0 at src/main.rs:402:30: 402:34
    let mut _8: i64;                     // in scope 0 at src/main.rs:403:17: 403:50
    let mut _9: time::Timespec;          // in scope 0 at src/main.rs:403:17: 403:46
    let mut _10: &time::Tm;              // in scope 0 at src/main.rs:403:17: 403:32
    let _11: time::Tm;                   // in scope 0 at src/main.rs:403:17: 403:32
    let mut _12: bool;                   // in scope 0 at src/main.rs:405:20: 405:33
    let mut _13: bool;                   // in scope 0 at src/main.rs:405:21: 405:33
    let _14: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _15: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let _16: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _17: &[&str];                // in scope 0 at src/main.rs:406:30: 406:48
    let mut _18: &[&str; 1];             // in scope 0 at src/main.rs:406:30: 406:48
    let _19: &[&str; 1];                 // in scope 0 at src/main.rs:406:30: 406:48
    let mut _20: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _21: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _22: hyper::Error;           // in scope 0 at src/main.rs:407:32: 407:56
    let _23: &[u8; 8];                   // in scope 0 at src/main.rs:409:21: 409:27
    let mut _24: bool;                   // in scope 0 at src/main.rs:410:20: 410:45
    let mut _25: bool;                   // in scope 0 at src/main.rs:410:21: 410:45
    let mut _26: &[u8];                  // in scope 0 at src/main.rs:410:21: 410:25
    let _27: &[u8];                      // in scope 0 at src/main.rs:410:21: 410:45
    let mut _28: &hyper::Chunk;          // in scope 0 at src/main.rs:410:21: 410:25
    let mut _29: &[u8];                  // in scope 0 at src/main.rs:410:38: 410:44
    let mut _30: &[u8; 8];               // in scope 0 at src/main.rs:410:38: 410:44
    let _31: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _32: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _34: &[&str];                // in scope 0 at src/main.rs:411:30: 411:40
    let mut _35: &[&str; 1];             // in scope 0 at src/main.rs:411:30: 411:40
    let _36: &[&str; 1];                 // in scope 0 at src/main.rs:411:30: 411:40
    let mut _37: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _38: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _39: hyper::Error;           // in scope 0 at src/main.rs:412:32: 412:56
    let mut _41: std::option::Option<&str>; // in scope 0 at src/main.rs:414:28: 414:70
    let mut _42: std::result::Result<&str, std::str::Utf8Error>; // in scope 0 at src/main.rs:414:28: 414:65
    let mut _43: &[u8];                  // in scope 0 at src/main.rs:414:43: 414:64
    let _44: &[u8];                      // in scope 0 at src/main.rs:414:43: 414:64
    let _45: &[u8];                      // in scope 0 at src/main.rs:414:44: 414:64
    let mut _46: &[u8];                  // in scope 0 at src/main.rs:414:44: 414:48
    let _47: &[u8];                      // in scope 0 at src/main.rs:414:44: 414:48
    let mut _48: &hyper::Chunk;          // in scope 0 at src/main.rs:414:44: 414:48
    let mut _49: std::ops::RangeFrom<usize>; // in scope 0 at src/main.rs:414:49: 414:63
    let mut _50: usize;                  // in scope 0 at src/main.rs:414:49: 414:61
    let mut _51: &[u8];                  // in scope 0 at src/main.rs:414:49: 414:55
    let mut _52: &[u8; 8];               // in scope 0 at src/main.rs:414:49: 414:55
    let mut _53: [closure@src/main.rs:415:31: 415:56]; // in scope 0 at src/main.rs:415:31: 415:56
    let mut _54: isize;                  // in scope 0 at src/main.rs:417:21: 417:31
    let _56: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _57: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _59: &[&str];                // in scope 0 at src/main.rs:419:34: 419:59
    let mut _60: &[&str; 1];             // in scope 0 at src/main.rs:419:34: 419:59
    let _61: &[&str; 1];                 // in scope 0 at src/main.rs:419:34: 419:59
    let mut _62: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _63: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _64: hyper::Error;           // in scope 0 at src/main.rs:420:36: 420:60
    let mut _66: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:424:32: 424:43
    let _67: &Context;                   // in scope 0 at src/main.rs:424:32: 424:43
    let mut _68: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:424:32: 424:34
    let mut _70: std::option::Option<&mut Channel>; // in scope 0 at src/main.rs:425:33: 425:62
    let mut _71: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:425:33: 425:41
    let mut _72: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:425:33: 425:62
    let mut _73: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:425:33: 425:41
    let mut _74: &uuid::Uuid;            // in scope 0 at src/main.rs:425:50: 425:61
    let _75: &uuid::Uuid;                // in scope 0 at src/main.rs:425:50: 425:61
    let mut _76: isize;                  // in scope 0 at src/main.rs:426:17: 426:30
    let _78: ();                         // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
    let mut _79: std::fmt::Arguments;    // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _81: &[&str];                // in scope 0 at src/main.rs:428:30: 428:73
    let mut _82: &[&str; 1];             // in scope 0 at src/main.rs:428:30: 428:73
    let _83: &[&str; 1];                 // in scope 0 at src/main.rs:428:30: 428:73
    let mut _84: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _85: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _86: hyper::Error;           // in scope 0 at src/main.rs:429:32: 429:56
    let mut _87: u64;                    // in scope 0 at src/main.rs:432:39: 432:46
    let mut _89: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:434:29: 434:37
    let _90: &Context;                   // in scope 0 at src/main.rs:434:29: 434:37
    let mut _91: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:434:29: 434:31
    let mut _93: std::option::Option<&mut Client>; // in scope 0 at src/main.rs:435:24: 435:52
    let mut _94: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:435:24: 435:29
    let mut _95: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:435:24: 435:52
    let mut _96: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:435:24: 435:29
    let mut _97: &uuid::Uuid;            // in scope 0 at src/main.rs:435:38: 435:51
    let _98: &uuid::Uuid;                // in scope 0 at src/main.rs:435:38: 435:51
    let _99: ();                         // in scope 0 at src/main.rs:436:13: 441:24
    let mut _100: std::result::Result<(), futures::unsync::mpsc::SendError<Notification>>; // in scope 0 at src/main.rs:436:13: 441:15
    let mut _101: &futures::unsync::mpsc::UnboundedSender<Notification>; // in scope 0 at src/main.rs:436:13: 436:23
    let _102: &futures::unsync::mpsc::UnboundedSender<Notification>; // in scope 0 at src/main.rs:436:13: 436:23
    let mut _103: Notification;          // in scope 0 at src/main.rs:436:29: 441:14
    let mut _104: std::vec::Vec<Update>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:36: 49:66
    let mut _105: std::boxed::Box<[Update]>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
    let mut _106: std::boxed::Box<[Update; 1]>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
    let mut _107: std::boxed::Box<[Update; 1]>; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
    let mut _108: Update;                // in scope 0 at src/main.rs:437:31: 440:18
    let mut _109: uuid::Uuid;            // in scope 0 at src/main.rs:438:33: 438:43
    let mut _110: u64;                   // in scope 0 at src/main.rs:439:30: 439:37
    let mut _111: hyper::Response;       // in scope 0 at src/main.rs:443:16: 443:38
    let mut _119: &[std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    scope 1 {
        debug version => _3;             // in scope 1 at src/main.rs:402:17: 402:24
        let mut _65: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 1 at src/main.rs:424:17: 424:29
        scope 11 {
            debug channels => _65;       // in scope 11 at src/main.rs:424:17: 424:29
            let _69: &mut Channel;       // in scope 11 at src/main.rs:425:17: 425:24
            let _77: &mut Channel;       // in scope 11 at src/main.rs:426:22: 426:29
            let _80: &[std::fmt::ArgumentV1; 0]; // in scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            let mut _115: &[std::fmt::ArgumentV1; 0]; // in scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            scope 12 {
                debug channel => _69;    // in scope 12 at src/main.rs:425:17: 425:24
                let mut _88: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 12 at src/main.rs:434:17: 434:26
                scope 16 {
                    debug uaids => _88;  // in scope 16 at src/main.rs:434:17: 434:26
                    let _92: &mut Client; // in scope 16 at src/main.rs:435:17: 435:21
                    scope 17 {
                        debug uaid => _92; // in scope 17 at src/main.rs:435:17: 435:21
                    }
                }
            }
            scope 13 {
                debug channel => _77;    // in scope 13 at src/main.rs:426:22: 426:29
            }
            scope 14 {
                debug args => _80;       // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                scope 15 {
                    let mut _114: &[&str; 1]; // in scope 15 at src/main.rs:428:30: 428:73
                }
            }
        }
    }
    scope 2 {
        debug args => _16;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 3 {
            let mut _118: &[&str; 1];    // in scope 3 at src/main.rs:406:30: 406:48
        }
    }
    scope 4 {
        debug header => _23;             // in scope 4 at src/main.rs:409:21: 409:27
        let _33: &[std::fmt::ArgumentV1; 0]; // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        let _40: std::option::Option<u64>; // in scope 4 at src/main.rs:414:21: 414:25
        let mut _117: &[std::fmt::ArgumentV1; 0]; // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        scope 5 {
            debug args => _33;           // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            scope 6 {
                let mut _116: &[&str; 1]; // in scope 6 at src/main.rs:411:30: 411:40
            }
        }
        scope 7 {
            debug vers => _40;           // in scope 7 at src/main.rs:414:21: 414:25
            let _55: u64;                // in scope 7 at src/main.rs:417:26: 417:30
            let _58: &[std::fmt::ArgumentV1; 0]; // in scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            let mut _113: &[std::fmt::ArgumentV1; 0]; // in scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
            scope 8 {
                debug vers => _55;       // in scope 8 at src/main.rs:417:26: 417:30
            }
            scope 9 {
                debug args => _58;       // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                scope 10 {
                    let mut _112: &[&str; 1]; // in scope 10 at src/main.rs:419:34: 419:59
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:402:17: 402:24
        StorageLive(_4);                 // scope 0 at src/main.rs:402:30: 402:40
        StorageLive(_5);                 // scope 0 at src/main.rs:402:30: 402:34
        StorageLive(_6);                 // scope 0 at src/main.rs:402:30: 402:40
        StorageLive(_7);                 // scope 0 at src/main.rs:402:30: 402:34
        _7 = &_2;                        // scope 0 at src/main.rs:402:30: 402:34
        _6 = <Chunk as Deref>::deref(move _7) -> [return: bb1, unwind: bb58]; // scope 0 at src/main.rs:402:30: 402:40
                                         // mir::Constant
                                         // + span: src/main.rs:402:30: 402:40
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Chunk) -> &'r <hyper::Chunk as std::ops::Deref>::Target {<hyper::Chunk as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at src/main.rs:402:30: 402:34
        StorageDead(_7);                 // scope 0 at src/main.rs:402:33: 402:34
        _4 = core::slice::<impl [u8]>::len(move _5) -> [return: bb2, unwind: bb58]; // scope 0 at src/main.rs:402:30: 402:40
                                         // mir::Constant
                                         // + span: src/main.rs:402:35: 402:38
                                         // + literal: Const { ty: for<'r> fn(&'r [u8]) -> usize {core::slice::<impl [u8]>::len}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_5);                 // scope 0 at src/main.rs:402:39: 402:40
        StorageDead(_6);                 // scope 0 at src/main.rs:402:44: 402:45
        switchInt(move _4) -> [0_usize: bb3, otherwise: bb6]; // scope 0 at src/main.rs:402:30: 402:45
    }

    bb3: {
        StorageDead(_4);                 // scope 0 at src/main.rs:402:30: 402:45
        StorageLive(_8);                 // scope 0 at src/main.rs:403:17: 403:50
        StorageLive(_9);                 // scope 0 at src/main.rs:403:17: 403:46
        StorageLive(_10);                // scope 0 at src/main.rs:403:17: 403:32
        StorageLive(_11);                // scope 0 at src/main.rs:403:17: 403:32
        _11 = now_utc() -> [return: bb4, unwind: bb58]; // scope 0 at src/main.rs:403:17: 403:32
                                         // mir::Constant
                                         // + span: src/main.rs:403:17: 403:30
                                         // + literal: Const { ty: fn() -> time::Tm {time::now_utc}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        _10 = &_11;                      // scope 0 at src/main.rs:403:17: 403:32
        _9 = Tm::to_timespec(move _10) -> [return: bb5, unwind: bb58]; // scope 0 at src/main.rs:403:17: 403:46
                                         // mir::Constant
                                         // + span: src/main.rs:403:33: 403:44
                                         // + literal: Const { ty: for<'r> fn(&'r time::Tm) -> time::Timespec {time::Tm::to_timespec}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_10);                // scope 0 at src/main.rs:403:45: 403:46
        _8 = (_9.0: i64);                // scope 0 at src/main.rs:403:17: 403:50
        _3 = move _8 as u64 (Misc);      // scope 0 at src/main.rs:403:17: 403:57
        StorageDead(_8);                 // scope 0 at src/main.rs:403:56: 403:57
        StorageDead(_11);                // scope 0 at src/main.rs:404:13: 404:14
        StorageDead(_9);                 // scope 0 at src/main.rs:404:13: 404:14
        goto -> bb28;                    // scope 0 at src/main.rs:402:27: 423:14
    }

    bb6: {
        StorageDead(_4);                 // scope 0 at src/main.rs:402:30: 402:45
        StorageLive(_12);                // scope 0 at src/main.rs:405:20: 405:33
        StorageLive(_13);                // scope 0 at src/main.rs:405:21: 405:33
        _13 = (_1.0: bool);              // scope 0 at src/main.rs:405:21: 405:33
        _12 = Not(move _13);             // scope 0 at src/main.rs:405:20: 405:33
        StorageDead(_13);                // scope 0 at src/main.rs:405:32: 405:33
        switchInt(move _12) -> [false: bb10, otherwise: bb7]; // scope 0 at src/main.rs:405:20: 405:33
    }

    bb7: {
        StorageLive(_14);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_15);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_16);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _119 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[7]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // ty::Const
                                         // + ty: &[std::fmt::ArgumentV1; 0]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[7]))
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + literal: Const { ty: &[std::fmt::ArgumentV1; 0], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[7]) }) }
        _16 = _119;                      // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_17);                // scope 3 at src/main.rs:406:30: 406:48
        StorageLive(_18);                // scope 3 at src/main.rs:406:30: 406:48
        StorageLive(_19);                // scope 3 at src/main.rs:406:30: 406:48
        _118 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[6]; // scope 3 at src/main.rs:406:30: 406:48
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[6]))
                                         // mir::Constant
                                         // + span: src/main.rs:406:30: 406:48
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[6]) }) }
        _19 = _118;                      // scope 3 at src/main.rs:406:30: 406:48
        _18 = _19;                       // scope 3 at src/main.rs:406:30: 406:48
        _17 = move _18 as &[&str] (Pointer(Unsize)); // scope 3 at src/main.rs:406:30: 406:48
        StorageDead(_18);                // scope 3 at src/main.rs:406:47: 406:48
        StorageLive(_20);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_21);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _21 = _16;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _20 = move _21 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_21);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _15 = Arguments::new_v1(move _17, move _20) -> [return: bb8, unwind: bb58]; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_20);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_19);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_16);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _14 = _print(move _15) -> [return: bb9, unwind: bb58]; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_15);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_14);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_22);                // scope 0 at src/main.rs:407:32: 407:56
        discriminant(_22) = 5;           // scope 0 at src/main.rs:407:32: 407:56
        ((_0 as Err).0: hyper::Error) = move _22; // scope 0 at src/main.rs:407:28: 407:57
        discriminant(_0) = 1;            // scope 0 at src/main.rs:407:28: 407:57
        StorageDead(_22);                // scope 0 at src/main.rs:407:56: 407:57
        StorageDead(_12);                // scope 0 at src/main.rs:408:17: 408:18
        goto -> bb52;                    // scope 0 at no-location
    }

    bb10: {
        StorageDead(_12);                // scope 0 at src/main.rs:408:17: 408:18
        StorageLive(_23);                // scope 0 at src/main.rs:409:21: 409:27
        _23 = const b"version=";         // scope 0 at src/main.rs:409:30: 409:41
                                         // ty::Const
                                         // + ty: &[u8; 8]
                                         // + val: Value(Scalar(alloc15))
                                         // mir::Constant
                                         // + span: src/main.rs:409:30: 409:41
                                         // + literal: Const { ty: &[u8; 8], val: Value(Scalar(alloc15)) }
        StorageLive(_24);                // scope 4 at src/main.rs:410:20: 410:45
        StorageLive(_25);                // scope 4 at src/main.rs:410:21: 410:45
        StorageLive(_26);                // scope 4 at src/main.rs:410:21: 410:25
        StorageLive(_27);                // scope 4 at src/main.rs:410:21: 410:45
        StorageLive(_28);                // scope 4 at src/main.rs:410:21: 410:25
        _28 = &_2;                       // scope 4 at src/main.rs:410:21: 410:25
        _27 = <Chunk as Deref>::deref(move _28) -> [return: bb11, unwind: bb58]; // scope 4 at src/main.rs:410:21: 410:45
                                         // mir::Constant
                                         // + span: src/main.rs:410:21: 410:45
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Chunk) -> &'r <hyper::Chunk as std::ops::Deref>::Target {<hyper::Chunk as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        _26 = _27;                       // scope 4 at src/main.rs:410:21: 410:25
        StorageDead(_28);                // scope 4 at src/main.rs:410:24: 410:25
        StorageLive(_29);                // scope 4 at src/main.rs:410:38: 410:44
        StorageLive(_30);                // scope 4 at src/main.rs:410:38: 410:44
        _30 = _23;                       // scope 4 at src/main.rs:410:38: 410:44
        _29 = move _30 as &[u8] (Pointer(Unsize)); // scope 4 at src/main.rs:410:38: 410:44
        StorageDead(_30);                // scope 4 at src/main.rs:410:43: 410:44
        _25 = core::slice::<impl [u8]>::starts_with(move _26, move _29) -> [return: bb12, unwind: bb58]; // scope 4 at src/main.rs:410:21: 410:45
                                         // mir::Constant
                                         // + span: src/main.rs:410:26: 410:37
                                         // + literal: Const { ty: for<'r, 's> fn(&'r [u8], &'s [u8]) -> bool {core::slice::<impl [u8]>::starts_with}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_29);                // scope 4 at src/main.rs:410:44: 410:45
        StorageDead(_26);                // scope 4 at src/main.rs:410:44: 410:45
        _24 = Not(move _25);             // scope 4 at src/main.rs:410:20: 410:45
        StorageDead(_27);                // scope 4 at src/main.rs:410:44: 410:45
        StorageDead(_25);                // scope 4 at src/main.rs:410:44: 410:45
        switchInt(move _24) -> [false: bb16, otherwise: bb13]; // scope 4 at src/main.rs:410:20: 410:45
    }

    bb13: {
        StorageLive(_31);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_32);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_33);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _117 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[5]; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // ty::Const
                                         // + ty: &[std::fmt::ArgumentV1; 0]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[5]))
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + literal: Const { ty: &[std::fmt::ArgumentV1; 0], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[5]) }) }
        _33 = _117;                      // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_34);                // scope 6 at src/main.rs:411:30: 411:40
        StorageLive(_35);                // scope 6 at src/main.rs:411:30: 411:40
        StorageLive(_36);                // scope 6 at src/main.rs:411:30: 411:40
        _116 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[4]; // scope 6 at src/main.rs:411:30: 411:40
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[4]))
                                         // mir::Constant
                                         // + span: src/main.rs:411:30: 411:40
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[4]) }) }
        _36 = _116;                      // scope 6 at src/main.rs:411:30: 411:40
        _35 = _36;                       // scope 6 at src/main.rs:411:30: 411:40
        _34 = move _35 as &[&str] (Pointer(Unsize)); // scope 6 at src/main.rs:411:30: 411:40
        StorageDead(_35);                // scope 6 at src/main.rs:411:39: 411:40
        StorageLive(_37);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_38);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _38 = _33;                       // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _37 = move _38 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_38);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _32 = Arguments::new_v1(move _34, move _37) -> [return: bb14, unwind: bb58]; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        StorageDead(_37);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_34);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_36);                // scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_33);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _31 = _print(move _32) -> [return: bb15, unwind: bb58]; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_32);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_31);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_39);                // scope 4 at src/main.rs:412:32: 412:56
        discriminant(_39) = 5;           // scope 4 at src/main.rs:412:32: 412:56
        ((_0 as Err).0: hyper::Error) = move _39; // scope 4 at src/main.rs:412:28: 412:57
        discriminant(_0) = 1;            // scope 4 at src/main.rs:412:28: 412:57
        StorageDead(_39);                // scope 4 at src/main.rs:412:56: 412:57
        StorageDead(_24);                // scope 4 at src/main.rs:413:17: 413:18
        goto -> bb51;                    // scope 4 at no-location
    }

    bb16: {
        StorageDead(_24);                // scope 4 at src/main.rs:413:17: 413:18
        StorageLive(_40);                // scope 4 at src/main.rs:414:21: 414:25
        StorageLive(_41);                // scope 4 at src/main.rs:414:28: 414:70
        StorageLive(_42);                // scope 4 at src/main.rs:414:28: 414:65
        StorageLive(_43);                // scope 4 at src/main.rs:414:43: 414:64
        StorageLive(_44);                // scope 4 at src/main.rs:414:43: 414:64
        StorageLive(_45);                // scope 4 at src/main.rs:414:44: 414:64
        StorageLive(_46);                // scope 4 at src/main.rs:414:44: 414:48
        StorageLive(_47);                // scope 4 at src/main.rs:414:44: 414:48
        StorageLive(_48);                // scope 4 at src/main.rs:414:44: 414:48
        _48 = &_2;                       // scope 4 at src/main.rs:414:44: 414:48
        _47 = <Chunk as Deref>::deref(move _48) -> [return: bb17, unwind: bb58]; // scope 4 at src/main.rs:414:44: 414:48
                                         // mir::Constant
                                         // + span: src/main.rs:414:44: 414:48
                                         // + literal: Const { ty: for<'r> fn(&'r hyper::Chunk) -> &'r <hyper::Chunk as std::ops::Deref>::Target {<hyper::Chunk as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        _46 = _47;                       // scope 4 at src/main.rs:414:44: 414:48
        StorageDead(_48);                // scope 4 at src/main.rs:414:47: 414:48
        StorageLive(_49);                // scope 4 at src/main.rs:414:49: 414:63
        StorageLive(_50);                // scope 4 at src/main.rs:414:49: 414:61
        StorageLive(_51);                // scope 4 at src/main.rs:414:49: 414:55
        StorageLive(_52);                // scope 4 at src/main.rs:414:49: 414:55
        _52 = _23;                       // scope 4 at src/main.rs:414:49: 414:55
        _51 = move _52 as &[u8] (Pointer(Unsize)); // scope 4 at src/main.rs:414:49: 414:55
        StorageDead(_52);                // scope 4 at src/main.rs:414:54: 414:55
        _50 = core::slice::<impl [u8]>::len(move _51) -> [return: bb18, unwind: bb58]; // scope 4 at src/main.rs:414:49: 414:61
                                         // mir::Constant
                                         // + span: src/main.rs:414:56: 414:59
                                         // + literal: Const { ty: for<'r> fn(&'r [u8]) -> usize {core::slice::<impl [u8]>::len}, val: Value(Scalar(<ZST>)) }
    }

    bb18: {
        StorageDead(_51);                // scope 4 at src/main.rs:414:60: 414:61
        (_49.0: usize) = move _50;       // scope 4 at src/main.rs:414:49: 414:63
        StorageDead(_50);                // scope 4 at src/main.rs:414:62: 414:63
        _45 = <[u8] as std::ops::Index<RangeFrom<usize>>>::index(move _46, move _49) -> [return: bb19, unwind: bb58]; // scope 4 at src/main.rs:414:44: 414:64
                                         // mir::Constant
                                         // + span: src/main.rs:414:44: 414:64
                                         // + literal: Const { ty: for<'r> fn(&'r [u8], std::ops::RangeFrom<usize>) -> &'r <[u8] as std::ops::Index<std::ops::RangeFrom<usize>>>::Output {<[u8] as std::ops::Index<std::ops::RangeFrom<usize>>>::index}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        StorageDead(_49);                // scope 4 at src/main.rs:414:63: 414:64
        StorageDead(_46);                // scope 4 at src/main.rs:414:63: 414:64
        _44 = _45;                       // scope 4 at src/main.rs:414:43: 414:64
        _43 = _44;                       // scope 4 at src/main.rs:414:43: 414:64
        _42 = from_utf8(move _43) -> [return: bb20, unwind: bb58]; // scope 4 at src/main.rs:414:28: 414:65
                                         // mir::Constant
                                         // + span: src/main.rs:414:28: 414:42
                                         // + literal: Const { ty: for<'r> fn(&'r [u8]) -> std::result::Result<&'r str, std::str::Utf8Error> {std::str::from_utf8}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        StorageDead(_43);                // scope 4 at src/main.rs:414:64: 414:65
        _41 = std::result::Result::<&str, Utf8Error>::ok(move _42) -> [return: bb21, unwind: bb58]; // scope 4 at src/main.rs:414:28: 414:70
                                         // mir::Constant
                                         // + span: src/main.rs:414:66: 414:68
                                         // + literal: Const { ty: fn(std::result::Result<&str, std::str::Utf8Error>) -> std::option::Option<&str> {std::result::Result::<&str, std::str::Utf8Error>::ok}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_42);                // scope 4 at src/main.rs:414:69: 414:70
        StorageLive(_53);                // scope 4 at src/main.rs:415:31: 415:56
        _40 = std::option::Option::<&str>::and_then::<u64, [closure@src/main.rs:415:31: 415:56]>(move _41, move _53) -> [return: bb22, unwind: bb58]; // scope 4 at src/main.rs:414:28: 415:57
                                         // mir::Constant
                                         // + span: src/main.rs:415:22: 415:30
                                         // + literal: Const { ty: fn(std::option::Option<&str>, [closure@src/main.rs:415:31: 415:56]) -> std::option::Option<u64> {std::option::Option::<&str>::and_then::<u64, [closure@src/main.rs:415:31: 415:56]>}, val: Value(Scalar(<ZST>)) }
    }

    bb22: {
        StorageDead(_53);                // scope 4 at src/main.rs:415:56: 415:57
        StorageDead(_41);                // scope 4 at src/main.rs:415:56: 415:57
        StorageDead(_47);                // scope 4 at src/main.rs:415:57: 415:58
        StorageDead(_45);                // scope 4 at src/main.rs:415:57: 415:58
        StorageDead(_44);                // scope 4 at src/main.rs:415:57: 415:58
        _54 = discriminant(_40);         // scope 7 at src/main.rs:416:23: 416:27
        switchInt(move _54) -> [0_isize: bb23, 1_isize: bb25, otherwise: bb24]; // scope 7 at src/main.rs:416:17: 416:27
    }

    bb23: {
        StorageLive(_56);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_57);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_58);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _113 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[1]; // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // ty::Const
                                         // + ty: &[std::fmt::ArgumentV1; 0]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1]))
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + literal: Const { ty: &[std::fmt::ArgumentV1; 0], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[1]) }) }
        _58 = _113;                      // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_59);                // scope 10 at src/main.rs:419:34: 419:59
        StorageLive(_60);                // scope 10 at src/main.rs:419:34: 419:59
        StorageLive(_61);                // scope 10 at src/main.rs:419:34: 419:59
        _112 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[0]; // scope 10 at src/main.rs:419:34: 419:59
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:419:34: 419:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _61 = _112;                      // scope 10 at src/main.rs:419:34: 419:59
        _60 = _61;                       // scope 10 at src/main.rs:419:34: 419:59
        _59 = move _60 as &[&str] (Pointer(Unsize)); // scope 10 at src/main.rs:419:34: 419:59
        StorageDead(_60);                // scope 10 at src/main.rs:419:58: 419:59
        StorageLive(_62);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_63);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _63 = _58;                       // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _62 = move _63 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_63);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _57 = Arguments::new_v1(move _59, move _62) -> [return: bb26, unwind: bb58]; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb24: {
        unreachable;                     // scope 7 at src/main.rs:416:23: 416:27
    }

    bb25: {
        StorageLive(_55);                // scope 7 at src/main.rs:417:26: 417:30
        _55 = ((_40 as Some).0: u64);    // scope 7 at src/main.rs:417:26: 417:30
        _3 = _55;                        // scope 8 at src/main.rs:417:35: 417:39
        StorageDead(_55);                // scope 7 at src/main.rs:417:38: 417:39
        StorageDead(_40);                // scope 4 at src/main.rs:423:13: 423:14
        StorageDead(_23);                // scope 0 at src/main.rs:423:13: 423:14
        goto -> bb28;                    // scope 0 at src/main.rs:402:27: 423:14
    }

    bb26: {
        StorageDead(_62);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_59);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_61);                // scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_58);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _56 = _print(move _57) -> [return: bb27, unwind: bb58]; // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        StorageDead(_57);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_56);                // scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_64);                // scope 7 at src/main.rs:420:36: 420:60
        discriminant(_64) = 5;           // scope 7 at src/main.rs:420:36: 420:60
        ((_0 as Err).0: hyper::Error) = move _64; // scope 7 at src/main.rs:420:32: 420:61
        discriminant(_0) = 1;            // scope 7 at src/main.rs:420:32: 420:61
        StorageDead(_64);                // scope 7 at src/main.rs:420:60: 420:61
        StorageDead(_40);                // scope 4 at src/main.rs:423:13: 423:14
        goto -> bb51;                    // scope 4 at no-location
    }

    bb28: {
        StorageLive(_65);                // scope 1 at src/main.rs:424:17: 424:29
        StorageLive(_66);                // scope 1 at src/main.rs:424:32: 424:43
        StorageLive(_67);                // scope 1 at src/main.rs:424:32: 424:43
        StorageLive(_68);                // scope 1 at src/main.rs:424:32: 424:34
        _68 = &(_1.1: std::rc::Rc<Context>); // scope 1 at src/main.rs:424:32: 424:34
        _67 = <Rc<Context> as Deref>::deref(move _68) -> [return: bb29, unwind: bb58]; // scope 1 at src/main.rs:424:32: 424:43
                                         // mir::Constant
                                         // + span: src/main.rs:424:32: 424:43
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb29: {
        StorageDead(_68);                // scope 1 at src/main.rs:424:33: 424:34
        _66 = &((*_67).0: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>); // scope 1 at src/main.rs:424:32: 424:43
        _65 = RefCell::<HashMap<Uuid, Channel>>::borrow_mut(move _66) -> [return: bb30, unwind: bb58]; // scope 1 at src/main.rs:424:32: 424:56
                                         // mir::Constant
                                         // + span: src/main.rs:424:44: 424:54
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Channel>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Channel>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb30: {
        StorageDead(_66);                // scope 1 at src/main.rs:424:55: 424:56
        StorageDead(_67);                // scope 1 at src/main.rs:424:56: 424:57
        StorageLive(_69);                // scope 11 at src/main.rs:425:17: 425:24
        StorageLive(_70);                // scope 11 at src/main.rs:425:33: 425:62
        StorageLive(_71);                // scope 11 at src/main.rs:425:33: 425:41
        StorageLive(_72);                // scope 11 at src/main.rs:425:33: 425:62
        StorageLive(_73);                // scope 11 at src/main.rs:425:33: 425:41
        _73 = &mut _65;                  // scope 11 at src/main.rs:425:33: 425:41
        _72 = <RefMut<HashMap<Uuid, Channel>> as DerefMut>::deref_mut(move _73) -> [return: bb31, unwind: bb57]; // scope 11 at src/main.rs:425:33: 425:62
                                         // mir::Constant
                                         // + span: src/main.rs:425:33: 425:62
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb31: {
        _71 = &mut (*_72);               // scope 11 at src/main.rs:425:33: 425:41
        StorageDead(_73);                // scope 11 at src/main.rs:425:40: 425:41
        StorageLive(_74);                // scope 11 at src/main.rs:425:50: 425:61
        StorageLive(_75);                // scope 11 at src/main.rs:425:50: 425:61
        _75 = &(_1.2: uuid::Uuid);       // scope 11 at src/main.rs:425:50: 425:61
        _74 = _75;                       // scope 11 at src/main.rs:425:50: 425:61
        _70 = HashMap::<Uuid, Channel>::get_mut::<Uuid>(move _71, move _74) -> [return: bb32, unwind: bb57]; // scope 11 at src/main.rs:425:33: 425:62
                                         // mir::Constant
                                         // + span: src/main.rs:425:42: 425:49
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::collections::HashMap<uuid::Uuid, Channel>, &'s uuid::Uuid) -> std::option::Option<&'r mut Channel> {std::collections::HashMap::<uuid::Uuid, Channel>::get_mut::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb32: {
        StorageDead(_74);                // scope 11 at src/main.rs:425:61: 425:62
        StorageDead(_71);                // scope 11 at src/main.rs:425:61: 425:62
        _76 = discriminant(_70);         // scope 11 at src/main.rs:425:33: 425:62
        switchInt(move _76) -> [0_isize: bb33, 1_isize: bb35, otherwise: bb34]; // scope 11 at src/main.rs:425:27: 425:62
    }

    bb33: {
        StorageLive(_78);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
        StorageLive(_79);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_80);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _115 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[3]; // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // ty::Const
                                         // + ty: &[std::fmt::ArgumentV1; 0]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[3]))
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + literal: Const { ty: &[std::fmt::ArgumentV1; 0], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[3]) }) }
        _80 = _115;                      // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_81);                // scope 15 at src/main.rs:428:30: 428:73
        StorageLive(_82);                // scope 15 at src/main.rs:428:30: 428:73
        StorageLive(_83);                // scope 15 at src/main.rs:428:30: 428:73
        _114 = const <Push as tokio_service::Service>::call::{closure#0}::promoted[2]; // scope 15 at src/main.rs:428:30: 428:73
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<Push as tokio_service::Service>::call::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2]))
                                         // mir::Constant
                                         // + span: src/main.rs:428:30: 428:73
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:169 ~ webpush_server[6b79]::{impl#1}::call::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[2]) }) }
        _83 = _114;                      // scope 15 at src/main.rs:428:30: 428:73
        _82 = _83;                       // scope 15 at src/main.rs:428:30: 428:73
        _81 = move _82 as &[&str] (Pointer(Unsize)); // scope 15 at src/main.rs:428:30: 428:73
        StorageDead(_82);                // scope 15 at src/main.rs:428:72: 428:73
        StorageLive(_84);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageLive(_85);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _85 = _80;                       // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _84 = move _85 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        StorageDead(_85);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _79 = Arguments::new_v1(move _81, move _84) -> [return: bb36, unwind: bb57]; // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb34: {
        unreachable;                     // scope 11 at src/main.rs:425:33: 425:62
    }

    bb35: {
        StorageLive(_77);                // scope 11 at src/main.rs:426:22: 426:29
        _77 = move ((_70 as Some).0: &mut Channel); // scope 11 at src/main.rs:426:22: 426:29
        _69 = move _77;                  // scope 13 at src/main.rs:426:34: 426:41
        StorageDead(_77);                // scope 11 at src/main.rs:426:40: 426:41
        StorageDead(_75);                // scope 11 at src/main.rs:431:14: 431:15
        StorageDead(_72);                // scope 11 at src/main.rs:431:14: 431:15
        StorageDead(_70);                // scope 11 at src/main.rs:431:14: 431:15
        StorageLive(_87);                // scope 12 at src/main.rs:432:39: 432:46
        _87 = _3;                        // scope 12 at src/main.rs:432:39: 432:46
        ((*_69).1: u64) = move _87;      // scope 12 at src/main.rs:432:13: 432:46
        StorageDead(_87);                // scope 12 at src/main.rs:432:45: 432:46
        StorageLive(_88);                // scope 12 at src/main.rs:434:17: 434:26
        StorageLive(_89);                // scope 12 at src/main.rs:434:29: 434:37
        StorageLive(_90);                // scope 12 at src/main.rs:434:29: 434:37
        StorageLive(_91);                // scope 12 at src/main.rs:434:29: 434:31
        _91 = &(_1.1: std::rc::Rc<Context>); // scope 12 at src/main.rs:434:29: 434:31
        _90 = <Rc<Context> as Deref>::deref(move _91) -> [return: bb38, unwind: bb57]; // scope 12 at src/main.rs:434:29: 434:37
                                         // mir::Constant
                                         // + span: src/main.rs:434:29: 434:37
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb36: {
        StorageDead(_84);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_81);                // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_83);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        StorageDead(_80);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:60: 97:61
        _78 = _print(move _79) -> [return: bb37, unwind: bb57]; // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:62
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:9: 97:27
                                         // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) {std::io::_print}, val: Value(Scalar(<ZST>)) }
    }

    bb37: {
        StorageDead(_79);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:61: 97:62
        StorageDead(_78);                // scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:62: 97:63
        StorageLive(_86);                // scope 11 at src/main.rs:429:32: 429:56
        discriminant(_86) = 5;           // scope 11 at src/main.rs:429:32: 429:56
        ((_0 as Err).0: hyper::Error) = move _86; // scope 11 at src/main.rs:429:28: 429:57
        discriminant(_0) = 1;            // scope 11 at src/main.rs:429:28: 429:57
        StorageDead(_86);                // scope 11 at src/main.rs:429:56: 429:57
        StorageDead(_75);                // scope 11 at src/main.rs:431:14: 431:15
        StorageDead(_72);                // scope 11 at src/main.rs:431:14: 431:15
        StorageDead(_70);                // scope 11 at src/main.rs:431:14: 431:15
        StorageDead(_69);                // scope 11 at src/main.rs:444:9: 444:10
        drop(_65) -> [return: bb50, unwind: bb58]; // scope 1 at src/main.rs:444:9: 444:10
    }

    bb38: {
        StorageDead(_91);                // scope 12 at src/main.rs:434:30: 434:31
        _89 = &((*_90).1: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>); // scope 12 at src/main.rs:434:29: 434:37
        _88 = RefCell::<HashMap<Uuid, Client>>::borrow_mut(move _89) -> [return: bb39, unwind: bb57]; // scope 12 at src/main.rs:434:29: 434:50
                                         // mir::Constant
                                         // + span: src/main.rs:434:38: 434:48
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Client>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Client>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb39: {
        StorageDead(_89);                // scope 12 at src/main.rs:434:49: 434:50
        StorageDead(_90);                // scope 12 at src/main.rs:434:50: 434:51
        StorageLive(_92);                // scope 16 at src/main.rs:435:17: 435:21
        StorageLive(_93);                // scope 16 at src/main.rs:435:24: 435:52
        StorageLive(_94);                // scope 16 at src/main.rs:435:24: 435:29
        StorageLive(_95);                // scope 16 at src/main.rs:435:24: 435:52
        StorageLive(_96);                // scope 16 at src/main.rs:435:24: 435:29
        _96 = &mut _88;                  // scope 16 at src/main.rs:435:24: 435:29
        _95 = <RefMut<HashMap<Uuid, Client>> as DerefMut>::deref_mut(move _96) -> [return: bb40, unwind: bb56]; // scope 16 at src/main.rs:435:24: 435:52
                                         // mir::Constant
                                         // + span: src/main.rs:435:24: 435:52
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb40: {
        _94 = &mut (*_95);               // scope 16 at src/main.rs:435:24: 435:29
        StorageDead(_96);                // scope 16 at src/main.rs:435:28: 435:29
        StorageLive(_97);                // scope 16 at src/main.rs:435:38: 435:51
        StorageLive(_98);                // scope 16 at src/main.rs:435:38: 435:51
        _98 = &((*_69).0: uuid::Uuid);   // scope 16 at src/main.rs:435:38: 435:51
        _97 = _98;                       // scope 16 at src/main.rs:435:38: 435:51
        _93 = HashMap::<Uuid, Client>::get_mut::<Uuid>(move _94, move _97) -> [return: bb41, unwind: bb56]; // scope 16 at src/main.rs:435:24: 435:52
                                         // mir::Constant
                                         // + span: src/main.rs:435:30: 435:37
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::collections::HashMap<uuid::Uuid, Client>, &'s uuid::Uuid) -> std::option::Option<&'r mut Client> {std::collections::HashMap::<uuid::Uuid, Client>::get_mut::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb41: {
        StorageDead(_97);                // scope 16 at src/main.rs:435:51: 435:52
        StorageDead(_94);                // scope 16 at src/main.rs:435:51: 435:52
        _92 = std::option::Option::<&mut Client>::unwrap(move _93) -> [return: bb42, unwind: bb56]; // scope 16 at src/main.rs:435:24: 435:61
                                         // mir::Constant
                                         // + span: src/main.rs:435:53: 435:59
                                         // + literal: Const { ty: fn(std::option::Option<&mut Client>) -> &mut Client {std::option::Option::<&mut Client>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb42: {
        StorageDead(_93);                // scope 16 at src/main.rs:435:60: 435:61
        StorageDead(_98);                // scope 16 at src/main.rs:435:61: 435:62
        StorageDead(_95);                // scope 16 at src/main.rs:435:61: 435:62
        StorageLive(_99);                // scope 17 at src/main.rs:436:13: 441:24
        StorageLive(_100);               // scope 17 at src/main.rs:436:13: 441:15
        StorageLive(_101);               // scope 17 at src/main.rs:436:13: 436:23
        StorageLive(_102);               // scope 17 at src/main.rs:436:13: 436:23
        _102 = &((*_92).3: futures::unsync::mpsc::UnboundedSender<Notification>); // scope 17 at src/main.rs:436:13: 436:23
        _101 = _102;                     // scope 17 at src/main.rs:436:13: 436:23
        StorageLive(_103);               // scope 17 at src/main.rs:436:29: 441:14
        StorageLive(_104);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:36: 49:66
        StorageLive(_105);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        StorageLive(_106);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        StorageLive(_107);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        _107 = Box([Update; 1]);         // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        StorageLive(_108);               // scope 17 at src/main.rs:437:31: 440:18
        StorageLive(_109);               // scope 17 at src/main.rs:438:33: 438:43
        _109 = (_1.2: uuid::Uuid);       // scope 17 at src/main.rs:438:33: 438:43
        StorageLive(_110);               // scope 17 at src/main.rs:439:30: 439:37
        _110 = _3;                       // scope 17 at src/main.rs:439:30: 439:37
        (_108.0: uuid::Uuid) = move _109; // scope 17 at src/main.rs:437:31: 440:18
        (_108.1: u64) = move _110;       // scope 17 at src/main.rs:437:31: 440:18
        StorageDead(_110);               // scope 17 at src/main.rs:440:17: 440:18
        StorageDead(_109);               // scope 17 at src/main.rs:440:17: 440:18
        (*_107) = [move _108];           // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:56: 49:65
        StorageDead(_108);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:64: 49:65
        _106 = move _107;                // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        _105 = move _106 as std::boxed::Box<[Update]> (Pointer(Unsize)); // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:52: 49:65
        StorageDead(_107);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:64: 49:65
        StorageDead(_106);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:64: 49:65
        _104 = slice::<impl [Update]>::into_vec::<std::alloc::Global>(move _105) -> [return: bb43, unwind: bb56]; // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:36: 49:66
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:36: 49:51
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(std::boxed::Box<[Update]>) -> std::vec::Vec<Update> {std::slice::<impl [Update]>::into_vec::<std::alloc::Global>}, val: Value(Scalar(<ZST>)) }
    }

    bb43: {
        StorageDead(_105);               // scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/macros.rs:49:65: 49:66
        ((_103 as Simple).0: std::vec::Vec<Update>) = move _104; // scope 17 at src/main.rs:436:29: 441:14
        discriminant(_103) = 0;          // scope 17 at src/main.rs:436:29: 441:14
        StorageDead(_104);               // scope 17 at src/main.rs:441:13: 441:14
        _100 = futures::unsync::mpsc::UnboundedSender::<Notification>::send(move _101, move _103) -> [return: bb44, unwind: bb56]; // scope 17 at src/main.rs:436:13: 441:15
                                         // mir::Constant
                                         // + span: src/main.rs:436:24: 436:28
                                         // + literal: Const { ty: for<'r> fn(&'r futures::unsync::mpsc::UnboundedSender<Notification>, Notification) -> std::result::Result<(), futures::unsync::mpsc::SendError<Notification>> {futures::unsync::mpsc::UnboundedSender::<Notification>::send}, val: Value(Scalar(<ZST>)) }
    }

    bb44: {
        StorageDead(_103);               // scope 17 at src/main.rs:441:14: 441:15
        StorageDead(_101);               // scope 17 at src/main.rs:441:14: 441:15
        _99 = std::result::Result::<(), futures::unsync::mpsc::SendError<Notification>>::unwrap(move _100) -> [return: bb45, unwind: bb56]; // scope 17 at src/main.rs:436:13: 441:24
                                         // mir::Constant
                                         // + span: src/main.rs:441:16: 441:22
                                         // + literal: Const { ty: fn(std::result::Result<(), futures::unsync::mpsc::SendError<Notification>>) {std::result::Result::<(), futures::unsync::mpsc::SendError<Notification>>::unwrap}, val: Value(Scalar(<ZST>)) }
    }

    bb45: {
        StorageDead(_100);               // scope 17 at src/main.rs:441:23: 441:24
        StorageDead(_102);               // scope 17 at src/main.rs:441:24: 441:25
        StorageDead(_99);                // scope 17 at src/main.rs:441:24: 441:25
        StorageLive(_111);               // scope 17 at src/main.rs:443:16: 443:38
        _111 = hyper::Response::new() -> [return: bb46, unwind: bb56]; // scope 17 at src/main.rs:443:16: 443:38
                                         // mir::Constant
                                         // + span: src/main.rs:443:16: 443:36
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> hyper::Response {hyper::Response::new}, val: Value(Scalar(<ZST>)) }
    }

    bb46: {
        ((_0 as Ok).0: hyper::Response) = move _111; // scope 17 at src/main.rs:443:13: 443:39
        discriminant(_0) = 0;            // scope 17 at src/main.rs:443:13: 443:39
        StorageDead(_111);               // scope 17 at src/main.rs:443:38: 443:39
        StorageDead(_92);                // scope 16 at src/main.rs:444:9: 444:10
        drop(_88) -> [return: bb47, unwind: bb57]; // scope 12 at src/main.rs:444:9: 444:10
    }

    bb47: {
        StorageDead(_88);                // scope 12 at src/main.rs:444:9: 444:10
        StorageDead(_69);                // scope 11 at src/main.rs:444:9: 444:10
        drop(_65) -> [return: bb48, unwind: bb58]; // scope 1 at src/main.rs:444:9: 444:10
    }

    bb48: {
        StorageDead(_65);                // scope 1 at src/main.rs:444:9: 444:10
        StorageDead(_3);                 // scope 0 at src/main.rs:444:9: 444:10
        drop(_2) -> [return: bb49, unwind: bb59]; // scope 0 at src/main.rs:444:9: 444:10
    }

    bb49: {
        drop(_1) -> bb55;                // scope 0 at src/main.rs:444:9: 444:10
    }

    bb50: {
        StorageDead(_65);                // scope 1 at src/main.rs:444:9: 444:10
        goto -> bb53;                    // scope 1 at no-location
    }

    bb51: {
        StorageDead(_23);                // scope 0 at src/main.rs:423:13: 423:14
        goto -> bb52;                    // scope 0 at no-location
    }

    bb52: {
        goto -> bb53;                    // scope 0 at no-location
    }

    bb53: {
        StorageDead(_3);                 // scope 0 at src/main.rs:444:9: 444:10
        drop(_2) -> [return: bb54, unwind: bb59]; // scope 0 at src/main.rs:444:9: 444:10
    }

    bb54: {
        drop(_1) -> bb55;                // scope 0 at src/main.rs:444:9: 444:10
    }

    bb55: {
        return;                          // scope 0 at src/main.rs:444:10: 444:10
    }

    bb56 (cleanup): {
        drop(_88) -> bb57;               // scope 12 at src/main.rs:444:9: 444:10
    }

    bb57 (cleanup): {
        drop(_65) -> bb58;               // scope 1 at src/main.rs:444:9: 444:10
    }

    bb58 (cleanup): {
        drop(_2) -> bb59;                // scope 0 at src/main.rs:444:9: 444:10
    }

    bb59 (cleanup): {
        drop(_1) -> bb60;                // scope 0 at src/main.rs:444:9: 444:10
    }

    bb60 (cleanup): {
        resume;                          // scope 0 at src/main.rs:401:32: 444:10
    }
}

alloc15 (size: 8, align: 1) {
    76 65 72 73 69 6f 6e 3d                         │ version=
}

promoted[0] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:419:34: 419:59
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:419:34: 419:59

    bb0: {
        _1 = [const "failed to parse version\n"]; // scope 0 at src/main.rs:419:34: 419:59
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 118, 101, 114, 115, 105, 111, 110, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16777215], len: Size { raw: 24 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 24 })
                                         // mir::Constant
                                         // + span: src/main.rs:419:34: 419:59
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 97, 114, 115, 101, 32, 118, 101, 114, 115, 105, 111, 110, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16777215], len: Size { raw: 24 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 24 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:419:34: 419:59
        return;                          // scope 0 at src/main.rs:419:34: 419:59
    }
}

promoted[1] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[ArgumentV1; 0] = {
    let mut _0: &[std::fmt::ArgumentV1; 0]; // return place in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _1: [std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _0 = &_1;                        // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        return;                          // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    }
}

promoted[2] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:428:30: 428:73
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:428:30: 428:73

    bb0: {
        _1 = [const "no channel found for channel id specified\n"]; // scope 0 at src/main.rs:428:30: 428:73
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [110, 111, 32, 99, 104, 97, 110, 110, 101, 108, 32, 102, 111, 117, 110, 100, 32, 102, 111, 114, 32, 99, 104, 97, 110, 110, 101, 108, 32, 105, 100, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4398046511103], len: Size { raw: 42 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 42 })
                                         // mir::Constant
                                         // + span: src/main.rs:428:30: 428:73
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [110, 111, 32, 99, 104, 97, 110, 110, 101, 108, 32, 102, 111, 117, 110, 100, 32, 102, 111, 114, 32, 99, 104, 97, 110, 110, 101, 108, 32, 105, 100, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4398046511103], len: Size { raw: 42 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 42 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:428:30: 428:73
        return;                          // scope 0 at src/main.rs:428:30: 428:73
    }
}

promoted[3] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[ArgumentV1; 0] = {
    let mut _0: &[std::fmt::ArgumentV1; 0]; // return place in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _1: [std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _0 = &_1;                        // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        return;                          // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    }
}

promoted[4] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:411:30: 411:40
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:411:30: 411:40

    bb0: {
        _1 = [const "bad body\n"];       // scope 0 at src/main.rs:411:30: 411:40
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [98, 97, 100, 32, 98, 111, 100, 121, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:411:30: 411:40
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [98, 97, 100, 32, 98, 111, 100, 121, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:411:30: 411:40
        return;                          // scope 0 at src/main.rs:411:30: 411:40
    }
}

promoted[5] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[ArgumentV1; 0] = {
    let mut _0: &[std::fmt::ArgumentV1; 0]; // return place in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _1: [std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _0 = &_1;                        // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        return;                          // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    }
}

promoted[6] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at src/main.rs:406:30: 406:48
    let mut _1: [&str; 1];               // in scope 0 at src/main.rs:406:30: 406:48

    bb0: {
        _1 = [const "bad content type\n"]; // scope 0 at src/main.rs:406:30: 406:48
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [98, 97, 100, 32, 99, 111, 110, 116, 101, 110, 116, 32, 116, 121, 112, 101, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [131071], len: Size { raw: 17 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 17 })
                                         // mir::Constant
                                         // + span: src/main.rs:406:30: 406:48
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [98, 97, 100, 32, 99, 111, 110, 116, 101, 110, 116, 32, 116, 121, 112, 101, 10], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [131071], len: Size { raw: 17 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 17 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:406:30: 406:48
        return;                          // scope 0 at src/main.rs:406:30: 406:48
    }
}

promoted[7] in <impl at src/main.rs:370:1: 446:2>::call::{closure#0}: &[ArgumentV1; 0] = {
    let mut _0: &[std::fmt::ArgumentV1; 0]; // return place in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    let mut _1: [std::fmt::ArgumentV1; 0]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        _0 = &_1;                        // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
        return;                          // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/macros.rs:97:28: 97:61
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::deserialize(_1: __D) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {
    debug __deserializer => _1;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _2: __D;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _2 = move _1;                    // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _0 = <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>(move _2, move _3) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_str(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &str) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "channelID") -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb1: {
        switchInt(move _3) -> [false: bb2, otherwise: bb3]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        StorageLive(_5);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_5) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _5; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_5);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb4;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_4) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _4; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_4);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb4;                     // scope 0 at src/main.rs:54:20: 54:21
    }

    bb4: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn _IMPL_SERIALIZE_FOR_ServerMessage::<impl at src/main.rs:76:10: 76:19>::serialize(_1: &ServerMessage, _2: __S) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {
    debug self => _1;                    // in scope 0 at src/main.rs:76:10: 76:19
    debug __serializer => _2;            // in scope 0 at src/main.rs:76:10: 76:19
    let mut _0: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // return place in scope 0 at src/main.rs:76:10: 76:19
    let mut _3: isize;                   // in scope 0 at src/main.rs:76:10: 76:19
    let _4: &uuid::Uuid;                 // in scope 0 at src/main.rs:76:10: 76:19
    let _5: &u32;                        // in scope 0 at src/main.rs:76:10: 76:19
    let _6: &std::option::Option<bool>;  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _8: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _9: __S;                     // in scope 0 at src/main.rs:76:10: 76:19
    let mut _10: usize;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _11: usize;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _12: usize;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _13: usize;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _14: bool;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _15: &std::option::Option<bool>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _16: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _19: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _20: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _21: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _22: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _23: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _24: &str;                   // in scope 0 at src/main.rs:76:10: 76:19
    let _25: &str;                       // in scope 0 at src/main.rs:76:10: 76:19
    let mut _26: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _29: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _30: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _31: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _32: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _33: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _34: &uuid::Uuid;            // in scope 0 at src/main.rs:76:10: 76:19
    let mut _35: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _38: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _39: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _40: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _41: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _42: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _43: &u32;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _44: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _47: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _48: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _49: bool;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _50: bool;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _51: &std::option::Option<bool>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _52: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _53: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _54: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _55: &std::option::Option<bool>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _56: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _59: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _60: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _61: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let _62: &uuid::Uuid;                // in scope 0 at src/main.rs:76:10: 76:19
    let _63: &u32;                       // in scope 0 at src/main.rs:76:10: 76:19
    let _64: &std::string::String;       // in scope 0 at src/main.rs:76:10: 76:19
    let mut _66: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _67: __S;                    // in scope 0 at src/main.rs:76:10: 76:19
    let mut _68: usize;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _69: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _72: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _73: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _74: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _75: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _76: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _77: &str;                   // in scope 0 at src/main.rs:76:10: 76:19
    let _78: &str;                       // in scope 0 at src/main.rs:76:10: 76:19
    let mut _79: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _82: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _83: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _84: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _85: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _86: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _87: &uuid::Uuid;            // in scope 0 at src/main.rs:76:10: 76:19
    let mut _88: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _91: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _92: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _93: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _94: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _95: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _96: &u32;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _97: isize;                  // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _100: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _101: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _102: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _103: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _104: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _105: &std::string::String;  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _106: isize;                 // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _109: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _110: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _111: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let _112: &uuid::Uuid;               // in scope 0 at src/main.rs:76:10: 76:19
    let _113: &u32;                      // in scope 0 at src/main.rs:76:10: 76:19
    let mut _115: std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _116: __S;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _117: usize;                 // in scope 0 at src/main.rs:76:10: 76:19
    let mut _118: isize;                 // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _121: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _122: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _123: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _124: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _125: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _126: &str;                  // in scope 0 at src/main.rs:76:10: 76:19
    let _127: &str;                      // in scope 0 at src/main.rs:76:10: 76:19
    let mut _128: isize;                 // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _131: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _132: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _133: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _134: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _135: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _136: &uuid::Uuid;           // in scope 0 at src/main.rs:76:10: 76:19
    let mut _137: isize;                 // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _140: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _141: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _142: std::result::Result<(), <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _143: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _144: &mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let mut _145: &u32;                  // in scope 0 at src/main.rs:76:10: 76:19
    let mut _146: isize;                 // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:13: 399:44
    let mut _149: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
    let mut _150: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
    let mut _151: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 0 at src/main.rs:76:10: 76:19
    let _152: &Notification;             // in scope 0 at src/main.rs:76:10: 76:19
    let mut _153: __S;                   // in scope 0 at src/main.rs:76:10: 76:19
    let mut _154: &Notification;         // in scope 0 at src/main.rs:76:10: 76:19
    let mut _155: bool;                  // in scope 0 at src/main.rs:76:18: 76:19
    let mut _156: bool;                  // in scope 0 at src/main.rs:76:18: 76:19
    let mut _157: bool;                  // in scope 0 at src/main.rs:76:18: 76:19
    let mut _158: bool;                  // in scope 0 at src/main.rs:76:18: 76:19
    scope 1 {
        debug uaid => _4;                // in scope 1 at src/main.rs:76:10: 76:19
        debug status => _5;              // in scope 1 at src/main.rs:76:10: 76:19
        debug use_webpush => _6;         // in scope 1 at src/main.rs:76:10: 76:19
        let mut _7: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 1 at src/main.rs:76:10: 76:19
        let _17: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _18: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 2 {
            debug __serde_state => _7;   // in scope 2 at src/main.rs:76:10: 76:19
            let _27: ();                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _28: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _36: ();                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _37: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _45: ();                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _46: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _57: ();                 // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _58: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            scope 5 {
                debug val => _27;        // in scope 5 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 6 {
                debug err => _28;        // in scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 7 {
                debug val => _36;        // in scope 7 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 8 {
                debug err => _37;        // in scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 9 {
                debug val => _45;        // in scope 9 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 10 {
                debug err => _46;        // in scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 11 {
                debug val => _57;        // in scope 11 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 12 {
                debug err => _58;        // in scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
        }
        scope 3 {
            debug val => _17;            // in scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 4 {
            debug err => _18;            // in scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }
    scope 13 {
        debug channel_id => _62;         // in scope 13 at src/main.rs:76:10: 76:19
        debug status => _63;             // in scope 13 at src/main.rs:76:10: 76:19
        debug push_endpoint => _64;      // in scope 13 at src/main.rs:76:10: 76:19
        let mut _65: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 13 at src/main.rs:76:10: 76:19
        let _70: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _71: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 14 {
            debug __serde_state => _65;  // in scope 14 at src/main.rs:76:10: 76:19
            let _80: ();                 // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _81: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _89: ();                 // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _90: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _98: ();                 // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _99: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _107: ();                // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _108: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            scope 17 {
                debug val => _80;        // in scope 17 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 18 {
                debug err => _81;        // in scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 19 {
                debug val => _89;        // in scope 19 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 20 {
                debug err => _90;        // in scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 21 {
                debug val => _98;        // in scope 21 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 22 {
                debug err => _99;        // in scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 23 {
                debug val => _107;       // in scope 23 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 24 {
                debug err => _108;       // in scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
        }
        scope 15 {
            debug val => _70;            // in scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 16 {
            debug err => _71;            // in scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }
    scope 25 {
        debug channel_id => _112;        // in scope 25 at src/main.rs:76:10: 76:19
        debug status => _113;            // in scope 25 at src/main.rs:76:10: 76:19
        let mut _114: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 25 at src/main.rs:76:10: 76:19
        let _119: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct; // in scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        let _120: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        scope 26 {
            debug __serde_state => _114; // in scope 26 at src/main.rs:76:10: 76:19
            let _129: ();                // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _130: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _138: ();                // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _139: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            let _147: ();                // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            let _148: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error; // in scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            scope 29 {
                debug val => _129;       // in scope 29 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 30 {
                debug err => _130;       // in scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 31 {
                debug val => _138;       // in scope 31 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 32 {
                debug err => _139;       // in scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
            scope 33 {
                debug val => _147;       // in scope 33 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
            }
            scope 34 {
                debug err => _148;       // in scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
            }
        }
        scope 27 {
            debug val => _119;           // in scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        }
        scope 28 {
            debug err => _120;           // in scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        }
    }
    scope 35 {
        debug __field0 => _152;          // in scope 35 at src/main.rs:76:10: 76:19
    }

    bb0: {
        _157 = const false;              // scope 0 at src/main.rs:76:10: 76:19
        _156 = const false;              // scope 0 at src/main.rs:76:10: 76:19
        _155 = const false;              // scope 0 at src/main.rs:76:10: 76:19
        _158 = const false;              // scope 0 at src/main.rs:76:10: 76:19
        _3 = discriminant((*_1));        // scope 0 at src/main.rs:76:10: 76:19
        switchInt(move _3) -> [0_isize: bb3, 1_isize: bb37, 2_isize: bb64, 3_isize: bb1, otherwise: bb2]; // scope 0 at src/main.rs:76:10: 76:19
    }

    bb1: {
        StorageLive(_152);               // scope 0 at src/main.rs:76:10: 76:19
        _152 = &(((*_1) as Notification).0: Notification); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_153);               // scope 35 at src/main.rs:76:10: 76:19
        _153 = move _2;                  // scope 35 at src/main.rs:76:10: 76:19
        StorageLive(_154);               // scope 35 at src/main.rs:76:10: 76:19
        _154 = _152;                     // scope 35 at src/main.rs:76:10: 76:19
        _0 = serialize_tagged_newtype::<__S, Notification>(move _153, const "ServerMessage", const "Notification", const "messageType", const "notification", move _154) -> bb86; // scope 35 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r> fn(__S, &'static str, &'static str, &'static str, &'static str, &'r Notification) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Ok, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {_IMPL_DESERIALIZE_FOR_ClientMessage::_serde::private::ser::serialize_tagged_newtype::<__S, Notification>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [78, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [78, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 }) }
    }

    bb2: {
        unreachable;                     // scope 0 at src/main.rs:76:10: 76:19
    }

    bb3: {
        StorageLive(_4);                 // scope 0 at src/main.rs:76:10: 76:19
        _4 = &(((*_1) as Hello).0: uuid::Uuid); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_5);                 // scope 0 at src/main.rs:76:10: 76:19
        _5 = &(((*_1) as Hello).1: u32); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_6);                 // scope 0 at src/main.rs:76:10: 76:19
        _6 = &(((*_1) as Hello).2: std::option::Option<bool>); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_7);                 // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_8);                 // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_9);                 // scope 1 at src/main.rs:76:10: 76:19
        _158 = const true;               // scope 1 at src/main.rs:76:10: 76:19
        _9 = move _2;                    // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_10);                // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_11);                // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_12);                // scope 1 at src/main.rs:76:10: 76:19
        _12 = const 2_usize;             // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_13);                // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_14);                // scope 1 at src/main.rs:76:10: 76:19
        StorageLive(_15);                // scope 1 at src/main.rs:76:10: 76:19
        _15 = _6;                        // scope 1 at src/main.rs:76:10: 76:19
        _14 = std::option::Option::<bool>::is_none(move _15) -> [return: bb4, unwind: bb113]; // scope 1 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<bool>) -> bool {std::option::Option::<bool>::is_none}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_15);                // scope 1 at src/main.rs:76:18: 76:19
        switchInt(move _14) -> [false: bb6, otherwise: bb5]; // scope 1 at src/main.rs:76:10: 76:19
    }

    bb5: {
        _13 = const 0_usize;             // scope 1 at src/main.rs:76:10: 76:19
        goto -> bb7;                     // scope 1 at src/main.rs:76:10: 76:19
    }

    bb6: {
        _13 = const 1_usize;             // scope 1 at src/main.rs:76:10: 76:19
        goto -> bb7;                     // scope 1 at src/main.rs:76:10: 76:19
    }

    bb7: {
        StorageDead(_14);                // scope 1 at src/main.rs:76:18: 76:19
        _11 = Add(move _12, move _13);   // scope 1 at src/main.rs:76:10: 76:19
        StorageDead(_13);                // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_12);                // scope 1 at src/main.rs:76:18: 76:19
        _10 = Add(move _11, const 1_usize); // scope 1 at src/main.rs:76:10: 76:19
        StorageDead(_11);                // scope 1 at src/main.rs:76:18: 76:19
        _158 = const false;              // scope 1 at src/main.rs:76:10: 76:19
        _8 = <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct(move _9, const "ServerMessage", move _10) -> [return: bb8, unwind: bb113]; // scope 1 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(__S, &'static str, usize) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 }) }
    }

    bb8: {
        StorageDead(_10);                // scope 1 at src/main.rs:76:18: 76:19
        _158 = const false;              // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_9);                 // scope 1 at src/main.rs:76:18: 76:19
        _16 = discriminant(_8);          // scope 1 at src/main.rs:76:10: 76:19
        switchInt(move _16) -> [0_isize: bb11, 1_isize: bb9, otherwise: bb10]; // scope 1 at src/main.rs:76:10: 398:9
    }

    bb9: {
        StorageLive(_18);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _18 = move ((_8 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_19);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_20);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _20 = move _18;                  // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _19 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _20) -> bb12; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        unreachable;                     // scope 1 at src/main.rs:76:10: 76:19
    }

    bb11: {
        StorageLive(_17);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _17 = move ((_8 as Ok).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct); // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _157 = const true;               // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _7 = move _17;                   // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_17);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_8);                 // scope 1 at src/main.rs:76:18: 76:19
        StorageLive(_21);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_22);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_23);                // scope 2 at src/main.rs:76:10: 76:19
        _23 = &mut _7;                   // scope 2 at src/main.rs:76:10: 76:19
        _22 = &mut (*_23);               // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_24);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_25);                // scope 2 at src/main.rs:76:10: 76:19
        _25 = const "hello";             // scope 2 at src/main.rs:76:10: 76:19
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) }
        _24 = _25;                       // scope 2 at src/main.rs:76:10: 76:19
        _21 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<str>(move _22, const "messageType", move _24) -> [return: bb13, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s str) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<str>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb12: {
        StorageDead(_20);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _19; // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_19);                // scope 4 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_18);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_8);                 // scope 1 at src/main.rs:76:18: 76:19
        goto -> bb92;                    // scope 1 at no-location
    }

    bb13: {
        StorageDead(_24);                // scope 2 at src/main.rs:76:18: 76:19
        StorageDead(_22);                // scope 2 at src/main.rs:76:18: 76:19
        _26 = discriminant(_21);         // scope 2 at src/main.rs:76:10: 76:19
        switchInt(move _26) -> [0_isize: bb16, 1_isize: bb14, otherwise: bb15]; // scope 2 at src/main.rs:76:10: 398:9
    }

    bb14: {
        StorageLive(_28);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _28 = move ((_21 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_30);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _30 = move _28;                  // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _29 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _30) -> [return: bb17, unwind: bb109]; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        unreachable;                     // scope 2 at src/main.rs:76:10: 76:19
    }

    bb16: {
        StorageLive(_27);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_27);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_25);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_23);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_21);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_31);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_32);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_33);                // scope 2 at src/main.rs:76:10: 76:19
        _33 = &mut _7;                   // scope 2 at src/main.rs:76:10: 76:19
        _32 = &mut (*_33);               // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_34);                // scope 2 at src/main.rs:76:10: 76:19
        _34 = _4;                        // scope 2 at src/main.rs:76:10: 76:19
        _31 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<Uuid>(move _32, const "uaid", move _34) -> [return: bb18, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s uuid::Uuid) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
    }

    bb17: {
        StorageDead(_30);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _29; // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_29);                // scope 6 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_28);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_25);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_23);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_21);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb91;                    // scope 2 at no-location
    }

    bb18: {
        StorageDead(_34);                // scope 2 at src/main.rs:76:18: 76:19
        StorageDead(_32);                // scope 2 at src/main.rs:76:18: 76:19
        _35 = discriminant(_31);         // scope 2 at src/main.rs:76:10: 76:19
        switchInt(move _35) -> [0_isize: bb21, 1_isize: bb19, otherwise: bb20]; // scope 2 at src/main.rs:76:10: 398:9
    }

    bb19: {
        StorageLive(_37);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _37 = move ((_31 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_38);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_39);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _39 = move _37;                  // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _38 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _39) -> [return: bb22, unwind: bb108]; // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        unreachable;                     // scope 2 at src/main.rs:76:10: 76:19
    }

    bb21: {
        StorageLive(_36);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_36);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_33);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_31);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_40);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_41);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_42);                // scope 2 at src/main.rs:76:10: 76:19
        _42 = &mut _7;                   // scope 2 at src/main.rs:76:10: 76:19
        _41 = &mut (*_42);               // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_43);                // scope 2 at src/main.rs:76:10: 76:19
        _43 = _5;                        // scope 2 at src/main.rs:76:10: 76:19
        _40 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<u32>(move _41, const "status", move _43) -> [return: bb23, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s u32) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<u32>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
    }

    bb22: {
        StorageDead(_39);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _38; // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_38);                // scope 8 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_37);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_33);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_31);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb91;                    // scope 2 at no-location
    }

    bb23: {
        StorageDead(_43);                // scope 2 at src/main.rs:76:18: 76:19
        StorageDead(_41);                // scope 2 at src/main.rs:76:18: 76:19
        _44 = discriminant(_40);         // scope 2 at src/main.rs:76:10: 76:19
        switchInt(move _44) -> [0_isize: bb26, 1_isize: bb24, otherwise: bb25]; // scope 2 at src/main.rs:76:10: 398:9
    }

    bb24: {
        StorageLive(_46);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _46 = move ((_40 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_47);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_48);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _48 = move _46;                  // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _47 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _48) -> [return: bb27, unwind: bb107]; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb25: {
        unreachable;                     // scope 2 at src/main.rs:76:10: 76:19
    }

    bb26: {
        StorageLive(_45);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_45);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_42);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_40);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_49);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_50);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_51);                // scope 2 at src/main.rs:76:10: 76:19
        _51 = _6;                        // scope 2 at src/main.rs:76:10: 76:19
        _50 = std::option::Option::<bool>::is_none(move _51) -> [return: bb28, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<bool>) -> bool {std::option::Option::<bool>::is_none}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        StorageDead(_48);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _47; // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_47);                // scope 10 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_46);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_42);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_40);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb91;                    // scope 2 at no-location
    }

    bb28: {
        StorageDead(_51);                // scope 2 at src/main.rs:76:18: 76:19
        _49 = Not(move _50);             // scope 2 at src/main.rs:76:10: 76:19
        StorageDead(_50);                // scope 2 at src/main.rs:76:18: 76:19
        switchInt(move _49) -> [false: bb35, otherwise: bb29]; // scope 2 at src/main.rs:76:10: 76:19
    }

    bb29: {
        StorageLive(_52);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_53);                // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_54);                // scope 2 at src/main.rs:76:10: 76:19
        _54 = &mut _7;                   // scope 2 at src/main.rs:76:10: 76:19
        _53 = &mut (*_54);               // scope 2 at src/main.rs:76:10: 76:19
        StorageLive(_55);                // scope 2 at src/main.rs:76:10: 76:19
        _55 = _6;                        // scope 2 at src/main.rs:76:10: 76:19
        _52 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<std::option::Option<bool>>(move _53, const "use_webpush", move _55) -> [return: bb30, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s std::option::Option<bool>) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<std::option::Option<bool>>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb30: {
        StorageDead(_55);                // scope 2 at src/main.rs:76:18: 76:19
        StorageDead(_53);                // scope 2 at src/main.rs:76:18: 76:19
        _56 = discriminant(_52);         // scope 2 at src/main.rs:76:10: 76:19
        switchInt(move _56) -> [0_isize: bb33, 1_isize: bb31, otherwise: bb32]; // scope 2 at src/main.rs:76:10: 398:9
    }

    bb31: {
        StorageLive(_58);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _58 = move ((_52 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_60);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _60 = move _58;                  // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _59 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _60) -> [return: bb34, unwind: bb106]; // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb32: {
        unreachable;                     // scope 2 at src/main.rs:76:10: 76:19
    }

    bb33: {
        StorageLive(_57);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_57);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_54);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_52);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb35;                    // scope 2 at src/main.rs:76:10: 76:19
    }

    bb34: {
        StorageDead(_60);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _59; // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_59);                // scope 12 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_58);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_54);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_52);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_49);                // scope 2 at src/main.rs:76:18: 76:19
        goto -> bb91;                    // scope 2 at no-location
    }

    bb35: {
        StorageDead(_49);                // scope 2 at src/main.rs:76:18: 76:19
        StorageLive(_61);                // scope 2 at src/main.rs:76:10: 76:19
        _157 = const false;              // scope 2 at src/main.rs:76:10: 76:19
        _61 = move _7;                   // scope 2 at src/main.rs:76:10: 76:19
        _0 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::end(move _61) -> [return: bb36, unwind: bb111]; // scope 2 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct) -> std::result::Result<<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Ok, <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::end}, val: Value(Scalar(<ZST>)) }
    }

    bb36: {
        StorageDead(_61);                // scope 2 at src/main.rs:76:18: 76:19
        _157 = const false;              // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_7);                 // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_6);                 // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_5);                 // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_4);                 // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at src/main.rs:76:18: 76:19
    }

    bb37: {
        StorageLive(_62);                // scope 0 at src/main.rs:76:10: 76:19
        _62 = &(((*_1) as Register).0: uuid::Uuid); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_63);                // scope 0 at src/main.rs:76:10: 76:19
        _63 = &(((*_1) as Register).1: u32); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_64);                // scope 0 at src/main.rs:76:10: 76:19
        _64 = &(((*_1) as Register).2: std::string::String); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_65);                // scope 13 at src/main.rs:76:10: 76:19
        StorageLive(_66);                // scope 13 at src/main.rs:76:10: 76:19
        StorageLive(_67);                // scope 13 at src/main.rs:76:10: 76:19
        _67 = move _2;                   // scope 13 at src/main.rs:76:10: 76:19
        StorageLive(_68);                // scope 13 at src/main.rs:76:10: 76:19
        _68 = const 4_usize;             // scope 13 at src/main.rs:76:10: 76:19
        _66 = <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct(move _67, const "ServerMessage", move _68) -> bb38; // scope 13 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(__S, &'static str, usize) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 }) }
    }

    bb38: {
        StorageDead(_68);                // scope 13 at src/main.rs:76:18: 76:19
        StorageDead(_67);                // scope 13 at src/main.rs:76:18: 76:19
        _69 = discriminant(_66);         // scope 13 at src/main.rs:76:10: 76:19
        switchInt(move _69) -> [0_isize: bb41, 1_isize: bb39, otherwise: bb40]; // scope 13 at src/main.rs:76:10: 398:9
    }

    bb39: {
        StorageLive(_71);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _71 = move ((_66 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_72);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_73);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _73 = move _71;                  // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _72 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _73) -> bb42; // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb40: {
        unreachable;                     // scope 13 at src/main.rs:76:10: 76:19
    }

    bb41: {
        StorageLive(_70);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _70 = move ((_66 as Ok).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct); // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _156 = const true;               // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _65 = move _70;                  // scope 15 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_70);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_66);                // scope 13 at src/main.rs:76:18: 76:19
        StorageLive(_74);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_75);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_76);                // scope 14 at src/main.rs:76:10: 76:19
        _76 = &mut _65;                  // scope 14 at src/main.rs:76:10: 76:19
        _75 = &mut (*_76);               // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_77);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_78);                // scope 14 at src/main.rs:76:10: 76:19
        _78 = const "register";          // scope 14 at src/main.rs:76:10: 76:19
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }) }
        _77 = _78;                       // scope 14 at src/main.rs:76:10: 76:19
        _74 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<str>(move _75, const "messageType", move _77) -> [return: bb43, unwind: bb105]; // scope 14 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s str) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<str>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb42: {
        StorageDead(_73);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _72; // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_72);                // scope 16 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_71);                // scope 13 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_66);                // scope 13 at src/main.rs:76:18: 76:19
        goto -> bb90;                    // scope 13 at no-location
    }

    bb43: {
        StorageDead(_77);                // scope 14 at src/main.rs:76:18: 76:19
        StorageDead(_75);                // scope 14 at src/main.rs:76:18: 76:19
        _79 = discriminant(_74);         // scope 14 at src/main.rs:76:10: 76:19
        switchInt(move _79) -> [0_isize: bb46, 1_isize: bb44, otherwise: bb45]; // scope 14 at src/main.rs:76:10: 398:9
    }

    bb44: {
        StorageLive(_81);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _81 = move ((_74 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_82);                // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_83);                // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _83 = move _81;                  // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _82 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _83) -> [return: bb47, unwind: bb103]; // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb45: {
        unreachable;                     // scope 14 at src/main.rs:76:10: 76:19
    }

    bb46: {
        StorageLive(_80);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_80);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_78);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_76);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_74);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_84);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_85);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_86);                // scope 14 at src/main.rs:76:10: 76:19
        _86 = &mut _65;                  // scope 14 at src/main.rs:76:10: 76:19
        _85 = &mut (*_86);               // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_87);                // scope 14 at src/main.rs:76:10: 76:19
        _87 = _62;                       // scope 14 at src/main.rs:76:10: 76:19
        _84 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<Uuid>(move _85, const "channelID", move _87) -> [return: bb48, unwind: bb105]; // scope 14 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s uuid::Uuid) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb47: {
        StorageDead(_83);                // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _82; // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_82);                // scope 18 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_81);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_78);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_76);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_74);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb89;                    // scope 14 at no-location
    }

    bb48: {
        StorageDead(_87);                // scope 14 at src/main.rs:76:18: 76:19
        StorageDead(_85);                // scope 14 at src/main.rs:76:18: 76:19
        _88 = discriminant(_84);         // scope 14 at src/main.rs:76:10: 76:19
        switchInt(move _88) -> [0_isize: bb51, 1_isize: bb49, otherwise: bb50]; // scope 14 at src/main.rs:76:10: 398:9
    }

    bb49: {
        StorageLive(_90);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _90 = move ((_84 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_91);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_92);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _92 = move _90;                  // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _91 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _92) -> [return: bb52, unwind: bb102]; // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb50: {
        unreachable;                     // scope 14 at src/main.rs:76:10: 76:19
    }

    bb51: {
        StorageLive(_89);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_89);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_86);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_84);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_93);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_94);                // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_95);                // scope 14 at src/main.rs:76:10: 76:19
        _95 = &mut _65;                  // scope 14 at src/main.rs:76:10: 76:19
        _94 = &mut (*_95);               // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_96);                // scope 14 at src/main.rs:76:10: 76:19
        _96 = _63;                       // scope 14 at src/main.rs:76:10: 76:19
        _93 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<u32>(move _94, const "status", move _96) -> [return: bb53, unwind: bb105]; // scope 14 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s u32) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<u32>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
    }

    bb52: {
        StorageDead(_92);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _91; // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_91);                // scope 20 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_90);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_86);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_84);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb89;                    // scope 14 at no-location
    }

    bb53: {
        StorageDead(_96);                // scope 14 at src/main.rs:76:18: 76:19
        StorageDead(_94);                // scope 14 at src/main.rs:76:18: 76:19
        _97 = discriminant(_93);         // scope 14 at src/main.rs:76:10: 76:19
        switchInt(move _97) -> [0_isize: bb56, 1_isize: bb54, otherwise: bb55]; // scope 14 at src/main.rs:76:10: 398:9
    }

    bb54: {
        StorageLive(_99);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _99 = move ((_93 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_100);               // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_101);               // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _101 = move _99;                 // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _100 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _101) -> [return: bb57, unwind: bb101]; // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb55: {
        unreachable;                     // scope 14 at src/main.rs:76:10: 76:19
    }

    bb56: {
        StorageLive(_98);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_98);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_95);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_93);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_102);               // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_103);               // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_104);               // scope 14 at src/main.rs:76:10: 76:19
        _104 = &mut _65;                 // scope 14 at src/main.rs:76:10: 76:19
        _103 = &mut (*_104);             // scope 14 at src/main.rs:76:10: 76:19
        StorageLive(_105);               // scope 14 at src/main.rs:76:10: 76:19
        _105 = _64;                      // scope 14 at src/main.rs:76:10: 76:19
        _102 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<std::string::String>(move _103, const "pushEndpoint", move _105) -> [return: bb58, unwind: bb105]; // scope 14 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s std::string::String) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<std::string::String>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [112, 117, 115, 104, 69, 110, 100, 112, 111, 105, 110, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [112, 117, 115, 104, 69, 110, 100, 112, 111, 105, 110, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [4095], len: Size { raw: 12 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 12 }) }
    }

    bb57: {
        StorageDead(_101);               // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _100; // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_100);               // scope 22 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_99);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_95);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_93);                // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb89;                    // scope 14 at no-location
    }

    bb58: {
        StorageDead(_105);               // scope 14 at src/main.rs:76:18: 76:19
        StorageDead(_103);               // scope 14 at src/main.rs:76:18: 76:19
        _106 = discriminant(_102);       // scope 14 at src/main.rs:76:10: 76:19
        switchInt(move _106) -> [0_isize: bb61, 1_isize: bb59, otherwise: bb60]; // scope 14 at src/main.rs:76:10: 398:9
    }

    bb59: {
        StorageLive(_108);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _108 = move ((_102 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_109);               // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_110);               // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _110 = move _108;                // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _109 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _110) -> [return: bb62, unwind: bb100]; // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb60: {
        unreachable;                     // scope 14 at src/main.rs:76:10: 76:19
    }

    bb61: {
        StorageLive(_107);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_107);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_104);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_102);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_111);               // scope 14 at src/main.rs:76:10: 76:19
        _156 = const false;              // scope 14 at src/main.rs:76:10: 76:19
        _111 = move _65;                 // scope 14 at src/main.rs:76:10: 76:19
        _0 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::end(move _111) -> [return: bb63, unwind: bb105]; // scope 14 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct) -> std::result::Result<<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Ok, <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::end}, val: Value(Scalar(<ZST>)) }
    }

    bb62: {
        StorageDead(_110);               // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _109; // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_109);               // scope 24 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_108);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_104);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_102);               // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb89;                    // scope 14 at no-location
    }

    bb63: {
        StorageDead(_111);               // scope 14 at src/main.rs:76:18: 76:19
        _156 = const false;              // scope 13 at src/main.rs:76:18: 76:19
        StorageDead(_65);                // scope 13 at src/main.rs:76:18: 76:19
        StorageDead(_64);                // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_63);                // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_62);                // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at src/main.rs:76:18: 76:19
    }

    bb64: {
        StorageLive(_112);               // scope 0 at src/main.rs:76:10: 76:19
        _112 = &(((*_1) as Unregister).0: uuid::Uuid); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_113);               // scope 0 at src/main.rs:76:10: 76:19
        _113 = &(((*_1) as Unregister).1: u32); // scope 0 at src/main.rs:76:10: 76:19
        StorageLive(_114);               // scope 25 at src/main.rs:76:10: 76:19
        StorageLive(_115);               // scope 25 at src/main.rs:76:10: 76:19
        StorageLive(_116);               // scope 25 at src/main.rs:76:10: 76:19
        _116 = move _2;                  // scope 25 at src/main.rs:76:10: 76:19
        StorageLive(_117);               // scope 25 at src/main.rs:76:10: 76:19
        _117 = const 3_usize;            // scope 25 at src/main.rs:76:10: 76:19
        _115 = <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct(move _116, const "ServerMessage", move _117) -> bb65; // scope 25 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(__S, &'static str, usize) -> std::result::Result<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error> {<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::serialize_struct}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [83, 101, 114, 118, 101, 114, 77, 101, 115, 115, 97, 103, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 }) }
    }

    bb65: {
        StorageDead(_117);               // scope 25 at src/main.rs:76:18: 76:19
        StorageDead(_116);               // scope 25 at src/main.rs:76:18: 76:19
        _118 = discriminant(_115);       // scope 25 at src/main.rs:76:10: 76:19
        switchInt(move _118) -> [0_isize: bb68, 1_isize: bb66, otherwise: bb67]; // scope 25 at src/main.rs:76:10: 398:9
    }

    bb66: {
        StorageLive(_120);               // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _120 = move ((_115 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_121);               // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_122);               // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _122 = move _120;                // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _121 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _122) -> bb69; // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb67: {
        unreachable;                     // scope 25 at src/main.rs:76:10: 76:19
    }

    bb68: {
        StorageLive(_119);               // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _119 = move ((_115 as Ok).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct); // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        _155 = const true;               // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        _114 = move _119;                // scope 27 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:48: 399:51
        StorageDead(_119);               // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_115);               // scope 25 at src/main.rs:76:18: 76:19
        StorageLive(_123);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_124);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_125);               // scope 26 at src/main.rs:76:10: 76:19
        _125 = &mut _114;                // scope 26 at src/main.rs:76:10: 76:19
        _124 = &mut (*_125);             // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_126);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_127);               // scope 26 at src/main.rs:76:10: 76:19
        _127 = const "unregister";       // scope 26 at src/main.rs:76:10: 76:19
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
        _126 = _127;                     // scope 26 at src/main.rs:76:10: 76:19
        _123 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<str>(move _124, const "messageType", move _126) -> [return: bb70, unwind: bb99]; // scope 26 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s str) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<str>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 101, 115, 115, 97, 103, 101, 84, 121, 112, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb69: {
        StorageDead(_122);               // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _121; // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_121);               // scope 28 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_120);               // scope 25 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_115);               // scope 25 at src/main.rs:76:18: 76:19
        goto -> bb88;                    // scope 25 at no-location
    }

    bb70: {
        StorageDead(_126);               // scope 26 at src/main.rs:76:18: 76:19
        StorageDead(_124);               // scope 26 at src/main.rs:76:18: 76:19
        _128 = discriminant(_123);       // scope 26 at src/main.rs:76:10: 76:19
        switchInt(move _128) -> [0_isize: bb73, 1_isize: bb71, otherwise: bb72]; // scope 26 at src/main.rs:76:10: 398:9
    }

    bb71: {
        StorageLive(_130);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _130 = move ((_123 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_131);               // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_132);               // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _132 = move _130;                // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _131 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _132) -> [return: bb74, unwind: bb97]; // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb72: {
        unreachable;                     // scope 26 at src/main.rs:76:10: 76:19
    }

    bb73: {
        StorageLive(_129);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_129);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_127);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_125);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_123);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_133);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_134);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_135);               // scope 26 at src/main.rs:76:10: 76:19
        _135 = &mut _114;                // scope 26 at src/main.rs:76:10: 76:19
        _134 = &mut (*_135);             // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_136);               // scope 26 at src/main.rs:76:10: 76:19
        _136 = _112;                     // scope 26 at src/main.rs:76:10: 76:19
        _133 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<Uuid>(move _134, const "channelID", move _136) -> [return: bb75, unwind: bb99]; // scope 26 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s uuid::Uuid) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) }
    }

    bb74: {
        StorageDead(_132);               // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _131; // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_131);               // scope 30 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_130);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_127);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_125);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_123);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb87;                    // scope 26 at no-location
    }

    bb75: {
        StorageDead(_136);               // scope 26 at src/main.rs:76:18: 76:19
        StorageDead(_134);               // scope 26 at src/main.rs:76:18: 76:19
        _137 = discriminant(_133);       // scope 26 at src/main.rs:76:10: 76:19
        switchInt(move _137) -> [0_isize: bb78, 1_isize: bb76, otherwise: bb77]; // scope 26 at src/main.rs:76:10: 398:9
    }

    bb76: {
        StorageLive(_139);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _139 = move ((_133 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_140);               // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_141);               // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _141 = move _139;                // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _140 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _141) -> [return: bb79, unwind: bb96]; // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb77: {
        unreachable;                     // scope 26 at src/main.rs:76:10: 76:19
    }

    bb78: {
        StorageLive(_138);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_138);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_135);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_133);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_142);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_143);               // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_144);               // scope 26 at src/main.rs:76:10: 76:19
        _144 = &mut _114;                // scope 26 at src/main.rs:76:10: 76:19
        _143 = &mut (*_144);             // scope 26 at src/main.rs:76:10: 76:19
        StorageLive(_145);               // scope 26 at src/main.rs:76:10: 76:19
        _145 = _113;                     // scope 26 at src/main.rs:76:10: 76:19
        _142 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::serialize_field::<u32>(move _143, const "status", move _145) -> [return: bb80, unwind: bb99]; // scope 26 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct, &'static str, &'s u32) -> std::result::Result<(), <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::serialize_field::<u32>}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 })
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [115, 116, 97, 116, 117, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [63], len: Size { raw: 6 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 6 }) }
    }

    bb79: {
        StorageDead(_141);               // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _140; // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_140);               // scope 32 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_139);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_135);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_133);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb87;                    // scope 26 at no-location
    }

    bb80: {
        StorageDead(_145);               // scope 26 at src/main.rs:76:18: 76:19
        StorageDead(_143);               // scope 26 at src/main.rs:76:18: 76:19
        _146 = discriminant(_142);       // scope 26 at src/main.rs:76:10: 76:19
        switchInt(move _146) -> [0_isize: bb83, 1_isize: bb81, otherwise: bb82]; // scope 26 at src/main.rs:76:10: 398:9
    }

    bb81: {
        StorageLive(_148);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        _148 = move ((_142 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error); // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:400:41: 400:44
        StorageLive(_149);               // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
        StorageLive(_150);               // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _150 = move _148;                // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:80: 401:83
        _149 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from(move _150) -> [return: bb84, unwind: bb95]; // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:84
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:52: 401:79
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) -> <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error as std::convert::From<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error>>::from}, val: Value(Scalar(<ZST>)) }
    }

    bb82: {
        unreachable;                     // scope 26 at src/main.rs:76:10: 76:19
    }

    bb83: {
        StorageLive(_147);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:40: 399:43
        StorageDead(_147);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:399:50: 399:51
        StorageDead(_144);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_142);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageLive(_151);               // scope 26 at src/main.rs:76:10: 76:19
        _155 = const false;              // scope 26 at src/main.rs:76:10: 76:19
        _151 = move _114;                // scope 26 at src/main.rs:76:10: 76:19
        _0 = <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as SerializeStruct>::end(move _151) -> [return: bb85, unwind: bb99]; // scope 26 at src/main.rs:76:10: 76:19
                                         // mir::Constant
                                         // + span: src/main.rs:76:10: 76:19
                                         // + literal: Const { ty: fn(<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct) -> std::result::Result<<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Ok, <<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::Error> {<<__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::SerializeStruct as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::ser::SerializeStruct>::end}, val: Value(Scalar(<ZST>)) }
    }

    bb84: {
        StorageDead(_150);               // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:83: 401:84
        ((_0 as Err).0: <__S as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Serializer>::Error) = move _149; // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        discriminant(_0) = 1;            // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:24: 401:85
        StorageDead(_149);               // scope 34 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:401:84: 401:85
        StorageDead(_148);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:402:13: 402:14
        StorageDead(_144);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        StorageDead(_142);               // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
        goto -> bb87;                    // scope 26 at no-location
    }

    bb85: {
        StorageDead(_151);               // scope 26 at src/main.rs:76:18: 76:19
        _155 = const false;              // scope 25 at src/main.rs:76:18: 76:19
        StorageDead(_114);               // scope 25 at src/main.rs:76:18: 76:19
        StorageDead(_113);               // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_112);               // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at src/main.rs:76:18: 76:19
    }

    bb86: {
        StorageDead(_154);               // scope 35 at src/main.rs:76:18: 76:19
        StorageDead(_153);               // scope 35 at src/main.rs:76:18: 76:19
        StorageDead(_152);               // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at src/main.rs:76:18: 76:19
    }

    bb87: {
        drop(_114) -> bb88;              // scope 25 at src/main.rs:76:18: 76:19
    }

    bb88: {
        _155 = const false;              // scope 25 at src/main.rs:76:18: 76:19
        StorageDead(_114);               // scope 25 at src/main.rs:76:18: 76:19
        StorageDead(_113);               // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_112);               // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at no-location
    }

    bb89: {
        drop(_65) -> bb90;               // scope 13 at src/main.rs:76:18: 76:19
    }

    bb90: {
        _156 = const false;              // scope 13 at src/main.rs:76:18: 76:19
        StorageDead(_65);                // scope 13 at src/main.rs:76:18: 76:19
        StorageDead(_64);                // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_63);                // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_62);                // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at no-location
    }

    bb91: {
        drop(_7) -> bb92;                // scope 1 at src/main.rs:76:18: 76:19
    }

    bb92: {
        _157 = const false;              // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_7);                 // scope 1 at src/main.rs:76:18: 76:19
        StorageDead(_6);                 // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_5);                 // scope 0 at src/main.rs:76:18: 76:19
        StorageDead(_4);                 // scope 0 at src/main.rs:76:18: 76:19
        goto -> bb93;                    // scope 0 at no-location
    }

    bb93: {
        return;                          // scope 0 at src/main.rs:76:19: 76:19
    }

    bb94 (cleanup): {
        resume;                          // scope 0 at src/main.rs:76:10: 76:19
    }

    bb95 (cleanup): {
        goto -> bb99;                    // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb96 (cleanup): {
        goto -> bb99;                    // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb97 (cleanup): {
        goto -> bb99;                    // scope 26 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb98 (cleanup): {
        drop(_114) -> bb94;              // scope 25 at src/main.rs:76:18: 76:19
    }

    bb99 (cleanup): {
        switchInt(_155) -> [false: bb94, otherwise: bb98]; // scope 25 at src/main.rs:76:18: 76:19
    }

    bb100 (cleanup): {
        goto -> bb105;                   // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb101 (cleanup): {
        goto -> bb105;                   // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb102 (cleanup): {
        goto -> bb105;                   // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb103 (cleanup): {
        goto -> bb105;                   // scope 14 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb104 (cleanup): {
        drop(_65) -> bb94;               // scope 13 at src/main.rs:76:18: 76:19
    }

    bb105 (cleanup): {
        switchInt(_156) -> [false: bb94, otherwise: bb104]; // scope 13 at src/main.rs:76:18: 76:19
    }

    bb106 (cleanup): {
        goto -> bb111;                   // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb107 (cleanup): {
        goto -> bb111;                   // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb108 (cleanup): {
        goto -> bb111;                   // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb109 (cleanup): {
        goto -> bb111;                   // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:403:9: 403:10
    }

    bb110 (cleanup): {
        drop(_7) -> bb94;                // scope 1 at src/main.rs:76:18: 76:19
    }

    bb111 (cleanup): {
        switchInt(_157) -> [false: bb94, otherwise: bb110]; // scope 1 at src/main.rs:76:18: 76:19
    }

    bb112 (cleanup): {
        drop(_9) -> bb94;                // scope 1 at src/main.rs:76:18: 76:19
    }

    bb113 (cleanup): {
        switchInt(_158) -> [false: bb94, otherwise: bb112]; // scope 1 at src/main.rs:76:18: 76:19
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:202:9: 206:10>::from(_1: errors::ErrorKind) -> errors::Error {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:203:21: 203:22
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:203:45: 203:49
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:40: 204:41

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:40: 204:41
        _2 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:40: 204:41
        _0 = errors::Error::from_kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:17: 204:42
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:17: 204:39
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:204:41: 204:42
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:205:14: 205:14
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process::{closure#1}::{closure#0}::{closure#0}(_1: [closure@src/main.rs:306:65: 306:80]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:306:68: 306:68

    bb0: {
        _0 = const "recv error";         // scope 0 at src/main.rs:306:68: 306:80
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [114, 101, 99, 118, 32, 101, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:306:68: 306:80
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [114, 101, 99, 118, 32, 101, 114, 114, 111, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
        return;                          // scope 0 at src/main.rs:306:80: 306:80
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:193:13: 199:14>::from(_1: tungstenite::Error) -> errors::Error {
    debug e => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:25: 194:26
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:194:57: 194:61
    let mut _2: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
    let mut _3: tungstenite::Error;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:65: 196:66
        ((_2 as Ws).0: tungstenite::Error) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        discriminant(_2) = 1;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:43: 196:67
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:196:66: 196:67
        _0 = errors::Error::from_kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 197:22
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:195:21: 195:43
                                         // + literal: Const { ty: fn(errors::ErrorKind) -> errors::Error {errors::Error::from_kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:197:21: 197:22
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:198:18: 198:18
    }
}

fn <impl at src/main.rs:232:1: 350:2>::handshake::{closure#0}::{closure#1}(_1: [closure@src/main.rs:267:44: 269:14], _2: T) -> (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>) {
    debug ws => _2;                      // in scope 0 at src/main.rs:267:45: 267:47
    debug client => (_1.0: Client);      // in scope 0 at src/main.rs:251:17: 251:23
    debug rx => (_1.1: futures::unsync::mpsc::UnboundedReceiver<Notification>); // in scope 0 at src/main.rs:250:22: 250:24
    let mut _0: (T, Client, futures::unsync::mpsc::UnboundedReceiver<Notification>); // return place in scope 0 at src/main.rs:267:49: 267:49
    let mut _3: T;                       // in scope 0 at src/main.rs:268:18: 268:20
    let mut _4: Client;                  // in scope 0 at src/main.rs:268:22: 268:28
    let mut _5: futures::unsync::mpsc::UnboundedReceiver<Notification>; // in scope 0 at src/main.rs:268:30: 268:32

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:268:18: 268:20
        _3 = move _2;                    // scope 0 at src/main.rs:268:18: 268:20
        StorageLive(_4);                 // scope 0 at src/main.rs:268:22: 268:28
        _4 = move (_1.0: Client);        // scope 0 at src/main.rs:268:22: 268:28
        StorageLive(_5);                 // scope 0 at src/main.rs:268:30: 268:32
        _5 = move (_1.1: futures::unsync::mpsc::UnboundedReceiver<Notification>); // scope 0 at src/main.rs:268:30: 268:32
        (_0.0: T) = move _3;             // scope 0 at src/main.rs:268:17: 268:33
        (_0.1: Client) = move _4;        // scope 0 at src/main.rs:268:17: 268:33
        (_0.2: futures::unsync::mpsc::UnboundedReceiver<Notification>) = move _5; // scope 0 at src/main.rs:268:17: 268:33
        StorageDead(_5);                 // scope 0 at src/main.rs:268:32: 268:33
        StorageDead(_4);                 // scope 0 at src/main.rs:268:32: 268:33
        StorageDead(_3);                 // scope 0 at src/main.rs:268:32: 268:33
        return;                          // scope 0 at src/main.rs:269:14: 269:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#0}(_1: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], _2: &errors::ErrorKind, _3: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug f => _3;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:13: 352:14
    debug s => (*((*_1).0: &&std::string::String)); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:44: 352:44
    let mut _4: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _7: (&&std::string::String,); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _8: &&std::string::String;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
    let _9: &&std::string::String;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _11: &&std::string::String;  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
    let mut _12: for<'r, 's, 't0> fn(&'r &std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
    let _13: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _14: &[&str];                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
    let mut _15: &[&str; 1];             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
    let _16: &[&str; 1];                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    scope 1 {
        debug arg0 => _9;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
    }
    scope 2 {
        debug args => _13;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        scope 3 {
            let mut _19: &[&str; 1];     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        }
    }

    bb0: {
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        _4 = &mut (*_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        StorageLive(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        _8 = ((*_1).0: &&std::string::String); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        (_7.0: &&std::string::String) = move _8; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_9);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        _9 = (_7.0: &&std::string::String); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        _11 = _9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        StorageLive(_12);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
        _12 = <&std::string::String as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:35: 240:36
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&std::string::String as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<&std::string::String>(move _11, move _12) -> bb1; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b &std::string::String, for<'r, 's, 't0> fn(&'r &std::string::String, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&std::string::String>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_11);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _6 = [move _10];                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _13 = &_6;                       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_14);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        StorageLive(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        StorageLive(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        _19 = const <errors::ErrorKind as std::fmt::Display>::fmt::{closure#0}::promoted[0]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<errors::ErrorKind as std::fmt::Display>::fmt::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:273 ~ webpush_server[6b79]::errors::{impl#17}::fmt::{closure#0}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _16 = _19;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        _15 = _16;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        StorageDead(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:32: 240:33
        StorageLive(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _18 = _13;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _5 = Arguments::new_v1(move _14, move _17) -> bb2; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_14);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_16);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _0 = std::fmt::Formatter::write_fmt(move _4, move _5) -> bb3; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:34: 479:80
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:39: 479:48
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, std::fmt::Arguments<'s>) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_fmt}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:81: 352:81
    }
}

promoted[0] in errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
    let mut _1: [&str; 1];               // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33

    bb0: {
        _1 = [const ""];                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 }) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:240:29: 240:33
    }
}

const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: &[&str; 3];              // in scope 0 at src/main.rs:54:10: 54:21
    let _2: &[&str; 3];                  // in scope 0 at src/main.rs:54:10: 54:21
    let _3: [&str; 3];                   // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: &[&str; 3];              // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _4 = const _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS::promoted[0]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &[&str; 3]
                                         // + val: Unevaluated(_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::FIELDS, [], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:340 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::FIELDS), const_param_did: None }, substs_: Some([]), promoted: Some(promoted[0]) }) }
        _2 = &(*_4);                     // scope 0 at src/main.rs:54:10: 54:21
        _1 = &(*_2);                     // scope 0 at src/main.rs:54:10: 54:21
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_1);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::FIELDS: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _1: [&str; 3];               // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _1 = [const "uaid", const "channelIDs", const "use_webpush"]; // scope 0 at src/main.rs:54:10: 54:21
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
        _0 = &_1;                        // scope 0 at src/main.rs:54:10: 54:21
        return;                          // scope 0 at src/main.rs:54:10: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:113:9: 148:10>::with_chain(_1: E, _2: K) -> errors::Error {
    debug error => _1;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:123:37: 123:42
    debug kind => _2;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:123:47: 123:51
    let mut _0: errors::Error;           // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:124:20: 124:31
    let mut _3: errors::ErrorKind;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:32
    let mut _4: K;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:25
    let mut _5: error_chain::State;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:21: 130:73
    let mut _6: std::boxed::Box<dyn std::error::Error + std::marker::Send>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
    let mut _7: std::boxed::Box<E>;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
    let mut _8: E;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:64: 130:69
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:132:13: 132:14

    bb0: {
        _9 = const false;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:32
        _9 = const true;                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:32
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:32
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:25
        _4 = move _2;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:25
        _3 = <K as Into<errors::ErrorKind>>::into(move _4) -> [return: bb1, unwind: bb7]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:21: 129:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:26: 129:30
                                         // + literal: Const { ty: fn(K) -> errors::ErrorKind {<K as std::convert::Into<errors::ErrorKind>>::into}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:129:31: 129:32
        StorageLive(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:21: 130:73
        StorageLive(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
        StorageLive(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:64: 130:69
        _9 = const false;                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:64: 130:69
        _8 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:64: 130:69
        _7 = Box::<E>::new(move _8) -> [return: bb2, unwind: bb4]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:63
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(E) -> std::boxed::Box<E> {std::boxed::Box::<E>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _6 = move _7 as std::boxed::Box<dyn std::error::Error + std::marker::Send> (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:55: 130:70
        StorageDead(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:69: 130:70
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:69: 130:70
        _5 = error_chain::State::new::<errors::Error>(move _6) -> [return: bb3, unwind: bb4]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:21: 130:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:21: 130:54
                                         // + literal: Const { ty: fn(std::boxed::Box<(dyn std::error::Error + std::marker::Send + 'static)>) -> error_chain::State {error_chain::State::new::<errors::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:130:72: 130:73
        (_0.0: errors::ErrorKind) = move _3; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:128:17: 131:18
        (_0.1: error_chain::State) = move _5; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:128:17: 131:18
        StorageDead(_5);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:131:17: 131:18
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:131:17: 131:18
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:132:14: 132:14
    }

    bb4 (cleanup): {
        drop(_3) -> bb7;                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:131:17: 131:18
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:123:13: 132:14
    }

    bb6 (cleanup): {
        drop(_1) -> bb5;                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:132:13: 132:14
    }

    bb7 (cleanup): {
        switchInt(_9) -> [false: bb5, otherwise: bb6]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:132:13: 132:14
    }
}

fn serialize(_1: ServerMessage) -> std::result::Result<tungstenite::Message, errors::Error> {
    debug message => _1;                 // in scope 0 at src/main.rs:220:14: 220:21
    let mut _0: std::result::Result<tungstenite::Message, errors::Error>; // return place in scope 0 at src/main.rs:220:41: 220:56
    let _2: std::string::String;         // in scope 0 at src/main.rs:221:9: 221:15
    let mut _3: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, errors::Error>, std::string::String>; // in scope 0 at src/main.rs:221:18: 221:86
    let mut _4: std::result::Result<std::string::String, errors::Error>; // in scope 0 at src/main.rs:221:18: 221:85
    let mut _5: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at src/main.rs:221:18: 221:49
    let mut _6: &ServerMessage;          // in scope 0 at src/main.rs:221:40: 221:48
    let _7: &ServerMessage;              // in scope 0 at src/main.rs:221:40: 221:48
    let mut _8: [closure@src/main.rs:221:60: 221:84]; // in scope 0 at src/main.rs:221:60: 221:84
    let mut _9: isize;                   // in scope 0 at src/main.rs:221:85: 221:86
    let _10: std::result::Result<std::convert::Infallible, errors::Error>; // in scope 0 at src/main.rs:221:85: 221:86
    let mut _11: std::result::Result<std::convert::Infallible, errors::Error>; // in scope 0 at src/main.rs:221:85: 221:86
    let _12: std::string::String;        // in scope 0 at src/main.rs:221:18: 221:86
    let mut _13: tungstenite::Message;   // in scope 0 at src/main.rs:222:8: 222:29
    let mut _14: std::string::String;    // in scope 0 at src/main.rs:222:22: 222:28
    scope 1 {
        debug string => _2;              // in scope 1 at src/main.rs:221:9: 221:15
    }
    scope 2 {
        debug residual => _10;           // in scope 2 at src/main.rs:221:85: 221:86
        scope 3 {
        }
    }
    scope 4 {
        debug val => _12;                // in scope 4 at src/main.rs:221:18: 221:86
        scope 5 {
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:221:9: 221:15
        StorageLive(_3);                 // scope 0 at src/main.rs:221:18: 221:86
        StorageLive(_4);                 // scope 0 at src/main.rs:221:18: 221:85
        StorageLive(_5);                 // scope 0 at src/main.rs:221:18: 221:49
        StorageLive(_6);                 // scope 0 at src/main.rs:221:40: 221:48
        StorageLive(_7);                 // scope 0 at src/main.rs:221:40: 221:48
        _7 = &_1;                        // scope 0 at src/main.rs:221:40: 221:48
        _6 = _7;                         // scope 0 at src/main.rs:221:40: 221:48
        _5 = serde_json::to_string::<ServerMessage>(move _6) -> [return: bb1, unwind: bb9]; // scope 0 at src/main.rs:221:18: 221:49
                                         // mir::Constant
                                         // + span: src/main.rs:221:18: 221:39
                                         // + literal: Const { ty: for<'r> fn(&'r ServerMessage) -> std::result::Result<std::string::String, serde_json::Error> {serde_json::to_string::<ServerMessage>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at src/main.rs:221:48: 221:49
        StorageLive(_8);                 // scope 0 at src/main.rs:221:60: 221:84
        _4 = <std::result::Result<std::string::String, serde_json::Error> as errors::ResultExt<std::string::String, serde_json::Error>>::chain_err::<[closure@src/main.rs:221:60: 221:84], &str>(move _5, move _8) -> [return: bb2, unwind: bb9]; // scope 0 at src/main.rs:221:18: 221:85
                                         // mir::Constant
                                         // + span: src/main.rs:221:50: 221:59
                                         // + literal: Const { ty: fn(std::result::Result<std::string::String, serde_json::Error>, [closure@src/main.rs:221:60: 221:84]) -> std::result::Result<std::string::String, errors::Error> {<std::result::Result<std::string::String, serde_json::Error> as errors::ResultExt<std::string::String, serde_json::Error>>::chain_err::<[closure@src/main.rs:221:60: 221:84], &str>}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_8);                 // scope 0 at src/main.rs:221:84: 221:85
        StorageDead(_5);                 // scope 0 at src/main.rs:221:84: 221:85
        _3 = <std::result::Result<std::string::String, errors::Error> as Try>::branch(move _4) -> [return: bb3, unwind: bb9]; // scope 0 at src/main.rs:221:18: 221:86
                                         // mir::Constant
                                         // + span: src/main.rs:221:18: 221:86
                                         // + literal: Const { ty: fn(std::result::Result<std::string::String, errors::Error>) -> std::ops::ControlFlow<<std::result::Result<std::string::String, errors::Error> as std::ops::Try>::Residual, <std::result::Result<std::string::String, errors::Error> as std::ops::Try>::Output> {<std::result::Result<std::string::String, errors::Error> as std::ops::Try>::branch}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_4);                 // scope 0 at src/main.rs:221:85: 221:86
        _9 = discriminant(_3);           // scope 0 at src/main.rs:221:18: 221:86
        switchInt(move _9) -> [0_isize: bb4, 1_isize: bb6, otherwise: bb5]; // scope 0 at src/main.rs:221:18: 221:86
    }

    bb4: {
        StorageLive(_12);                // scope 0 at src/main.rs:221:18: 221:86
        _12 = move ((_3 as Continue).0: std::string::String); // scope 0 at src/main.rs:221:18: 221:86
        _2 = move _12;                   // scope 5 at src/main.rs:221:18: 221:86
        StorageDead(_12);                // scope 0 at src/main.rs:221:85: 221:86
        StorageDead(_7);                 // scope 0 at src/main.rs:221:86: 221:87
        StorageDead(_3);                 // scope 0 at src/main.rs:221:86: 221:87
        StorageLive(_13);                // scope 1 at src/main.rs:222:8: 222:29
        StorageLive(_14);                // scope 1 at src/main.rs:222:22: 222:28
        _14 = move _2;                   // scope 1 at src/main.rs:222:22: 222:28
        ((_13 as Text).0: std::string::String) = move _14; // scope 1 at src/main.rs:222:8: 222:29
        discriminant(_13) = 0;           // scope 1 at src/main.rs:222:8: 222:29
        StorageDead(_14);                // scope 1 at src/main.rs:222:28: 222:29
        ((_0 as Ok).0: tungstenite::Message) = move _13; // scope 1 at src/main.rs:222:5: 222:30
        discriminant(_0) = 0;            // scope 1 at src/main.rs:222:5: 222:30
        StorageDead(_13);                // scope 1 at src/main.rs:222:29: 222:30
        StorageDead(_2);                 // scope 0 at src/main.rs:223:1: 223:2
        drop(_1) -> bb8;                 // scope 0 at src/main.rs:223:1: 223:2
    }

    bb5: {
        unreachable;                     // scope 0 at src/main.rs:221:18: 221:86
    }

    bb6: {
        StorageLive(_10);                // scope 0 at src/main.rs:221:85: 221:86
        _10 = move ((_3 as Break).0: std::result::Result<std::convert::Infallible, errors::Error>); // scope 0 at src/main.rs:221:85: 221:86
        StorageLive(_11);                // scope 3 at src/main.rs:221:85: 221:86
        _11 = move _10;                  // scope 3 at src/main.rs:221:85: 221:86
        _0 = <std::result::Result<tungstenite::Message, errors::Error> as FromResidual<std::result::Result<Infallible, errors::Error>>>::from_residual(move _11) -> [return: bb7, unwind: bb11]; // scope 3 at src/main.rs:221:18: 221:86
                                         // mir::Constant
                                         // + span: src/main.rs:221:85: 221:86
                                         // + literal: Const { ty: fn(std::result::Result<std::convert::Infallible, errors::Error>) -> std::result::Result<tungstenite::Message, errors::Error> {<std::result::Result<tungstenite::Message, errors::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, errors::Error>>>::from_residual}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_11);                // scope 3 at src/main.rs:221:85: 221:86
        StorageDead(_10);                // scope 0 at src/main.rs:221:85: 221:86
        StorageDead(_7);                 // scope 0 at src/main.rs:221:86: 221:87
        StorageDead(_3);                 // scope 0 at src/main.rs:221:86: 221:87
        StorageDead(_2);                 // scope 0 at src/main.rs:223:1: 223:2
        drop(_1) -> bb8;                 // scope 0 at src/main.rs:223:1: 223:2
    }

    bb8: {
        return;                          // scope 0 at src/main.rs:223:2: 223:2
    }

    bb9 (cleanup): {
        drop(_1) -> bb10;                // scope 0 at src/main.rs:223:1: 223:2
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at src/main.rs:220:1: 223:2
    }

    bb11 (cleanup): {
        goto -> bb9;                     // scope 0 at src/main.rs:221:86: 221:87
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_str(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &str) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "uaid") -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
    }

    bb1: {
        switchInt(move _3) -> [false: bb2, otherwise: bb7]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        _4 = <str as PartialEq>::eq(_2, const "channelIDs") -> bb3; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 73, 68, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
    }

    bb3: {
        switchInt(move _4) -> [false: bb4, otherwise: bb8]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        _5 = <str as PartialEq>::eq(_2, const "use_webpush") -> bb5; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 115, 101, 95, 119, 101, 98, 112, 117, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2047], len: Size { raw: 11 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 11 }) }
    }

    bb5: {
        switchInt(move _5) -> [false: bb6, otherwise: bb9]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageLive(_9);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_9) = 3;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _9; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_9);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb10;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb7: {
        StorageLive(_6);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_6) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _6; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_6);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb10;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb8: {
        StorageLive(_7);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_7) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _7; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_7);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb10;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb9: {
        StorageLive(_8);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_8) = 2;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _8; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_8);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb10;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb10: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn main::{closure#0}::{closure#1}::{closure#0}(_1: [closure@src/main.rs:170:64: 177:14], _2: std::result::Result<(), errors::Error>) -> std::result::Result<(), errors::Error> {
    debug res => _2;                     // in scope 0 at src/main.rs:170:70: 170:73
    debug cx2 => (_1.0: std::rc::Rc<Context>); // in scope 0 at src/main.rs:167:13: 167:16
    debug uaid => (_1.1: uuid::Uuid);    // in scope 0 at src/main.rs:169:17: 169:21
    let mut _0: std::result::Result<(), errors::Error>; // return place in scope 0 at src/main.rs:170:75: 170:75
    let mut _3: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:171:21: 171:30
    let mut _4: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:171:33: 171:42
    let _5: &Context;                    // in scope 0 at src/main.rs:171:33: 171:42
    let mut _6: &std::rc::Rc<Context>;   // in scope 0 at src/main.rs:171:33: 171:36
    let mut _8: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:172:36: 172:48
    let _9: &Context;                    // in scope 0 at src/main.rs:172:36: 172:48
    let mut _10: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:172:36: 172:39
    let mut _11: std::vec::IntoIter<uuid::Uuid>; // in scope 0 at src/main.rs:173:27: 173:88
    let mut _12: std::vec::Vec<uuid::Uuid>; // in scope 0 at src/main.rs:173:27: 173:88
    let mut _13: Client;                 // in scope 0 at src/main.rs:173:27: 173:76
    let mut _14: std::option::Option<Client>; // in scope 0 at src/main.rs:173:27: 173:46
    let mut _15: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:173:27: 173:32
    let mut _16: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:173:27: 173:46
    let mut _17: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:173:27: 173:32
    let mut _18: &uuid::Uuid;            // in scope 0 at src/main.rs:173:40: 173:45
    let _19: &uuid::Uuid;                // in scope 0 at src/main.rs:173:40: 173:45
    let mut _20: &str;                   // in scope 0 at src/main.rs:173:54: 173:75
    let _21: &str;                       // in scope 0 at src/main.rs:173:54: 173:75
    let mut _24: std::option::Option<uuid::Uuid>; // in scope 0 at src/main.rs:173:27: 173:88
    let mut _25: &mut std::vec::IntoIter<uuid::Uuid>; // in scope 0 at src/main.rs:173:27: 173:88
    let mut _26: &mut std::vec::IntoIter<uuid::Uuid>; // in scope 0 at src/main.rs:173:27: 173:88
    let mut _27: isize;                  // in scope 0 at src/main.rs:173:21: 173:23
    let mut _29: uuid::Uuid;             // in scope 0 at src/main.rs:173:21: 173:23
    let _31: Channel;                    // in scope 0 at src/main.rs:174:21: 174:83
    let mut _32: std::option::Option<Channel>; // in scope 0 at src/main.rs:174:21: 174:41
    let mut _33: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:174:21: 174:29
    let mut _34: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:174:21: 174:41
    let mut _35: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:174:21: 174:29
    let mut _36: &uuid::Uuid;            // in scope 0 at src/main.rs:174:37: 174:40
    let _37: &uuid::Uuid;                // in scope 0 at src/main.rs:174:37: 174:40
    let mut _38: &str;                   // in scope 0 at src/main.rs:174:49: 174:82
    let _39: &str;                       // in scope 0 at src/main.rs:174:49: 174:82
    let mut _40: bool;                   // in scope 0 at src/main.rs:177:13: 177:14
    scope 1 {
        debug uaids => _3;               // in scope 1 at src/main.rs:171:21: 171:30
        let mut _7: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 1 at src/main.rs:172:21: 172:33
        scope 2 {
            debug channels => _7;        // in scope 2 at src/main.rs:172:21: 172:33
            let mut _22: std::vec::IntoIter<uuid::Uuid>; // in scope 2 at src/main.rs:173:27: 173:88
            scope 3 {
                debug iter => _22;       // in scope 3 at src/main.rs:173:27: 173:88
                let mut _23: uuid::Uuid; // in scope 3 at src/main.rs:173:27: 173:88
                scope 4 {
                    debug __next => _23; // in scope 4 at src/main.rs:173:27: 173:88
                    let _28: uuid::Uuid; // in scope 4 at src/main.rs:173:21: 173:23
                    let _30: uuid::Uuid; // in scope 4 at src/main.rs:173:21: 173:23
                    scope 5 {
                        debug val => _28; // in scope 5 at src/main.rs:173:21: 173:23
                    }
                    scope 6 {
                        debug id => _30; // in scope 6 at src/main.rs:173:21: 173:23
                    }
                }
            }
        }
    }

    bb0: {
        _40 = const false;               // scope 0 at src/main.rs:171:21: 171:30
        _40 = const true;                // scope 0 at src/main.rs:171:21: 171:30
        StorageLive(_3);                 // scope 0 at src/main.rs:171:21: 171:30
        StorageLive(_4);                 // scope 0 at src/main.rs:171:33: 171:42
        StorageLive(_5);                 // scope 0 at src/main.rs:171:33: 171:42
        StorageLive(_6);                 // scope 0 at src/main.rs:171:33: 171:36
        _6 = &(_1.0: std::rc::Rc<Context>); // scope 0 at src/main.rs:171:33: 171:36
        _5 = <Rc<Context> as Deref>::deref(move _6) -> [return: bb1, unwind: bb29]; // scope 0 at src/main.rs:171:33: 171:42
                                         // mir::Constant
                                         // + span: src/main.rs:171:33: 171:42
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_6);                 // scope 0 at src/main.rs:171:35: 171:36
        _4 = &((*_5).1: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>); // scope 0 at src/main.rs:171:33: 171:42
        _3 = RefCell::<HashMap<Uuid, Client>>::borrow_mut(move _4) -> [return: bb2, unwind: bb29]; // scope 0 at src/main.rs:171:33: 171:55
                                         // mir::Constant
                                         // + span: src/main.rs:171:43: 171:53
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Client>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Client>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_4);                 // scope 0 at src/main.rs:171:54: 171:55
        StorageDead(_5);                 // scope 0 at src/main.rs:171:55: 171:56
        StorageLive(_7);                 // scope 1 at src/main.rs:172:21: 172:33
        StorageLive(_8);                 // scope 1 at src/main.rs:172:36: 172:48
        StorageLive(_9);                 // scope 1 at src/main.rs:172:36: 172:48
        StorageLive(_10);                // scope 1 at src/main.rs:172:36: 172:39
        _10 = &(_1.0: std::rc::Rc<Context>); // scope 1 at src/main.rs:172:36: 172:39
        _9 = <Rc<Context> as Deref>::deref(move _10) -> [return: bb3, unwind: bb23]; // scope 1 at src/main.rs:172:36: 172:48
                                         // mir::Constant
                                         // + span: src/main.rs:172:36: 172:48
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_10);                // scope 1 at src/main.rs:172:38: 172:39
        _8 = &((*_9).0: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>); // scope 1 at src/main.rs:172:36: 172:48
        _7 = RefCell::<HashMap<Uuid, Channel>>::borrow_mut(move _8) -> [return: bb4, unwind: bb23]; // scope 1 at src/main.rs:172:36: 172:61
                                         // mir::Constant
                                         // + span: src/main.rs:172:49: 172:59
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Channel>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Channel>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_8);                 // scope 1 at src/main.rs:172:60: 172:61
        StorageDead(_9);                 // scope 1 at src/main.rs:172:61: 172:62
        StorageLive(_11);                // scope 2 at src/main.rs:173:27: 173:88
        StorageLive(_12);                // scope 2 at src/main.rs:173:27: 173:88
        StorageLive(_13);                // scope 2 at src/main.rs:173:27: 173:76
        StorageLive(_14);                // scope 2 at src/main.rs:173:27: 173:46
        StorageLive(_15);                // scope 2 at src/main.rs:173:27: 173:32
        StorageLive(_16);                // scope 2 at src/main.rs:173:27: 173:46
        StorageLive(_17);                // scope 2 at src/main.rs:173:27: 173:32
        _17 = &mut _3;                   // scope 2 at src/main.rs:173:27: 173:32
        _16 = <RefMut<HashMap<Uuid, Client>> as DerefMut>::deref_mut(move _17) -> [return: bb5, unwind: bb22]; // scope 2 at src/main.rs:173:27: 173:46
                                         // mir::Constant
                                         // + span: src/main.rs:173:27: 173:46
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        _15 = &mut (*_16);               // scope 2 at src/main.rs:173:27: 173:32
        StorageDead(_17);                // scope 2 at src/main.rs:173:31: 173:32
        StorageLive(_18);                // scope 2 at src/main.rs:173:40: 173:45
        StorageLive(_19);                // scope 2 at src/main.rs:173:40: 173:45
        _19 = &(_1.1: uuid::Uuid);       // scope 2 at src/main.rs:173:40: 173:45
        _18 = _19;                       // scope 2 at src/main.rs:173:40: 173:45
        _14 = HashMap::<Uuid, Client>::remove::<Uuid>(move _15, move _18) -> [return: bb6, unwind: bb22]; // scope 2 at src/main.rs:173:27: 173:46
                                         // mir::Constant
                                         // + span: src/main.rs:173:33: 173:39
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::collections::HashMap<uuid::Uuid, Client>, &'s uuid::Uuid) -> std::option::Option<Client> {std::collections::HashMap::<uuid::Uuid, Client>::remove::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_18);                // scope 2 at src/main.rs:173:45: 173:46
        StorageDead(_15);                // scope 2 at src/main.rs:173:45: 173:46
        StorageLive(_20);                // scope 2 at src/main.rs:173:54: 173:75
        StorageLive(_21);                // scope 2 at src/main.rs:173:54: 173:75
        _21 = const "uaid not registered"; // scope 2 at src/main.rs:173:54: 173:75
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100, 32, 110, 111, 116, 32, 114, 101, 103, 105, 115, 116, 101, 114, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [524287], len: Size { raw: 19 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 19 })
                                         // mir::Constant
                                         // + span: src/main.rs:173:54: 173:75
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100, 32, 110, 111, 116, 32, 114, 101, 103, 105, 115, 116, 101, 114, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [524287], len: Size { raw: 19 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 19 }) }
        _20 = _21;                       // scope 2 at src/main.rs:173:54: 173:75
        _13 = std::option::Option::<Client>::expect(move _14, move _20) -> [return: bb7, unwind: bb22]; // scope 2 at src/main.rs:173:27: 173:76
                                         // mir::Constant
                                         // + span: src/main.rs:173:47: 173:53
                                         // + literal: Const { ty: for<'r> fn(std::option::Option<Client>, &'r str) -> Client {std::option::Option::<Client>::expect}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        StorageDead(_20);                // scope 2 at src/main.rs:173:75: 173:76
        StorageDead(_14);                // scope 2 at src/main.rs:173:75: 173:76
        _12 = move (_13.2: std::vec::Vec<uuid::Uuid>); // scope 2 at src/main.rs:173:27: 173:88
        _11 = <Vec<Uuid> as IntoIterator>::into_iter(move _12) -> [return: bb8, unwind: bb27]; // scope 2 at src/main.rs:173:27: 173:88
                                         // mir::Constant
                                         // + span: src/main.rs:173:27: 173:88
                                         // + literal: Const { ty: fn(std::vec::Vec<uuid::Uuid>) -> <std::vec::Vec<uuid::Uuid> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<uuid::Uuid> as std::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_12);                // scope 2 at src/main.rs:173:87: 173:88
        StorageLive(_22);                // scope 2 at src/main.rs:173:27: 173:88
        _22 = move _11;                  // scope 2 at src/main.rs:173:27: 173:88
        goto -> bb9;                     // scope 3 at src/main.rs:173:17: 175:18
    }

    bb9: {
        StorageLive(_23);                // scope 3 at src/main.rs:173:27: 173:88
        StorageLive(_24);                // scope 4 at src/main.rs:173:27: 173:88
        StorageLive(_25);                // scope 4 at src/main.rs:173:27: 173:88
        StorageLive(_26);                // scope 4 at src/main.rs:173:27: 173:88
        _26 = &mut _22;                  // scope 4 at src/main.rs:173:27: 173:88
        _25 = &mut (*_26);               // scope 4 at src/main.rs:173:27: 173:88
        _24 = <std::vec::IntoIter<Uuid> as Iterator>::next(move _25) -> [return: bb10, unwind: bb21]; // scope 4 at src/main.rs:173:27: 173:88
                                         // mir::Constant
                                         // + span: src/main.rs:173:27: 173:88
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::vec::IntoIter<uuid::Uuid>) -> std::option::Option<<std::vec::IntoIter<uuid::Uuid> as std::iter::Iterator>::Item> {<std::vec::IntoIter<uuid::Uuid> as std::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_25);                // scope 4 at src/main.rs:173:87: 173:88
        _27 = discriminant(_24);         // scope 4 at src/main.rs:173:27: 173:88
        switchInt(move _27) -> [0_isize: bb11, 1_isize: bb13, otherwise: bb12]; // scope 4 at src/main.rs:173:27: 173:88
    }

    bb11: {
        StorageDead(_26);                // scope 4 at src/main.rs:173:87: 173:88
        StorageDead(_24);                // scope 4 at src/main.rs:173:87: 173:88
        StorageDead(_23);                // scope 3 at src/main.rs:175:17: 175:18
        drop(_22) -> [return: bb17, unwind: bb27]; // scope 2 at src/main.rs:175:17: 175:18
    }

    bb12: {
        unreachable;                     // scope 4 at src/main.rs:173:27: 173:88
    }

    bb13: {
        StorageLive(_28);                // scope 4 at src/main.rs:173:21: 173:23
        _28 = ((_24 as Some).0: uuid::Uuid); // scope 4 at src/main.rs:173:21: 173:23
        StorageLive(_29);                // scope 5 at src/main.rs:173:21: 173:23
        _29 = _28;                       // scope 5 at src/main.rs:173:21: 173:23
        _23 = move _29;                  // scope 5 at src/main.rs:173:21: 173:23
        StorageDead(_29);                // scope 5 at src/main.rs:173:22: 173:23
        StorageDead(_28);                // scope 4 at src/main.rs:173:22: 173:23
        StorageDead(_26);                // scope 4 at src/main.rs:173:87: 173:88
        StorageDead(_24);                // scope 4 at src/main.rs:173:87: 173:88
        StorageLive(_30);                // scope 4 at src/main.rs:173:21: 173:23
        _30 = _23;                       // scope 4 at src/main.rs:173:27: 173:88
        StorageLive(_31);                // scope 6 at src/main.rs:174:21: 174:83
        StorageLive(_32);                // scope 6 at src/main.rs:174:21: 174:41
        StorageLive(_33);                // scope 6 at src/main.rs:174:21: 174:29
        StorageLive(_34);                // scope 6 at src/main.rs:174:21: 174:41
        StorageLive(_35);                // scope 6 at src/main.rs:174:21: 174:29
        _35 = &mut _7;                   // scope 6 at src/main.rs:174:21: 174:29
        _34 = <RefMut<HashMap<Uuid, Channel>> as DerefMut>::deref_mut(move _35) -> [return: bb14, unwind: bb21]; // scope 6 at src/main.rs:174:21: 174:41
                                         // mir::Constant
                                         // + span: src/main.rs:174:21: 174:41
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        _33 = &mut (*_34);               // scope 6 at src/main.rs:174:21: 174:29
        StorageDead(_35);                // scope 6 at src/main.rs:174:28: 174:29
        StorageLive(_36);                // scope 6 at src/main.rs:174:37: 174:40
        StorageLive(_37);                // scope 6 at src/main.rs:174:37: 174:40
        _37 = &_30;                      // scope 6 at src/main.rs:174:37: 174:40
        _36 = _37;                       // scope 6 at src/main.rs:174:37: 174:40
        _32 = HashMap::<Uuid, Channel>::remove::<Uuid>(move _33, move _36) -> [return: bb15, unwind: bb21]; // scope 6 at src/main.rs:174:21: 174:41
                                         // mir::Constant
                                         // + span: src/main.rs:174:30: 174:36
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::collections::HashMap<uuid::Uuid, Channel>, &'s uuid::Uuid) -> std::option::Option<Channel> {std::collections::HashMap::<uuid::Uuid, Channel>::remove::<uuid::Uuid>}, val: Value(Scalar(<ZST>)) }
    }

    bb15: {
        StorageDead(_36);                // scope 6 at src/main.rs:174:40: 174:41
        StorageDead(_33);                // scope 6 at src/main.rs:174:40: 174:41
        StorageLive(_38);                // scope 6 at src/main.rs:174:49: 174:82
        StorageLive(_39);                // scope 6 at src/main.rs:174:49: 174:82
        _39 = const "uaid pointed to missing channel"; // scope 6 at src/main.rs:174:49: 174:82
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100, 32, 112, 111, 105, 110, 116, 101, 100, 32, 116, 111, 32, 109, 105, 115, 115, 105, 110, 103, 32, 99, 104, 97, 110, 110, 101, 108], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2147483647], len: Size { raw: 31 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 31 })
                                         // mir::Constant
                                         // + span: src/main.rs:174:49: 174:82
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 97, 105, 100, 32, 112, 111, 105, 110, 116, 101, 100, 32, 116, 111, 32, 109, 105, 115, 115, 105, 110, 103, 32, 99, 104, 97, 110, 110, 101, 108], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [2147483647], len: Size { raw: 31 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 31 }) }
        _38 = _39;                       // scope 6 at src/main.rs:174:49: 174:82
        _31 = std::option::Option::<Channel>::expect(move _32, move _38) -> [return: bb16, unwind: bb21]; // scope 6 at src/main.rs:174:21: 174:83
                                         // mir::Constant
                                         // + span: src/main.rs:174:42: 174:48
                                         // + literal: Const { ty: for<'r> fn(std::option::Option<Channel>, &'r str) -> Channel {std::option::Option::<Channel>::expect}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_38);                // scope 6 at src/main.rs:174:82: 174:83
        StorageDead(_32);                // scope 6 at src/main.rs:174:82: 174:83
        StorageDead(_39);                // scope 6 at src/main.rs:174:83: 174:84
        StorageDead(_37);                // scope 6 at src/main.rs:174:83: 174:84
        StorageDead(_34);                // scope 6 at src/main.rs:174:83: 174:84
        StorageDead(_31);                // scope 6 at src/main.rs:174:83: 174:84
        StorageDead(_30);                // scope 4 at src/main.rs:175:17: 175:18
        StorageDead(_23);                // scope 3 at src/main.rs:175:17: 175:18
        goto -> bb9;                     // scope 3 at src/main.rs:173:17: 175:18
    }

    bb17: {
        StorageDead(_22);                // scope 2 at src/main.rs:175:17: 175:18
        drop((_13.3: futures::unsync::mpsc::UnboundedSender<Notification>)) -> [return: bb26, unwind: bb22]; // scope 2 at src/main.rs:173:87: 173:88
    }

    bb18: {
        StorageDead(_7);                 // scope 1 at src/main.rs:177:13: 177:14
        drop(_3) -> [return: bb19, unwind: bb29]; // scope 0 at src/main.rs:177:13: 177:14
    }

    bb19: {
        StorageDead(_3);                 // scope 0 at src/main.rs:177:13: 177:14
        drop(_1) -> bb20;                // scope 0 at src/main.rs:177:13: 177:14
    }

    bb20: {
        return;                          // scope 0 at src/main.rs:177:14: 177:14
    }

    bb21 (cleanup): {
        drop(_22) -> bb27;               // scope 2 at src/main.rs:175:17: 175:18
    }

    bb22 (cleanup): {
        drop(_7) -> bb23;                // scope 1 at src/main.rs:177:13: 177:14
    }

    bb23 (cleanup): {
        drop(_3) -> bb29;                // scope 0 at src/main.rs:177:13: 177:14
    }

    bb24 (cleanup): {
        drop(_1) -> bb25;                // scope 0 at src/main.rs:177:13: 177:14
    }

    bb25 (cleanup): {
        resume;                          // scope 0 at src/main.rs:170:64: 177:14
    }

    bb26: {
        StorageDead(_21);                // scope 2 at src/main.rs:173:87: 173:88
        StorageDead(_19);                // scope 2 at src/main.rs:173:87: 173:88
        StorageDead(_16);                // scope 2 at src/main.rs:173:87: 173:88
        StorageDead(_13);                // scope 2 at src/main.rs:173:87: 173:88
        StorageDead(_11);                // scope 2 at src/main.rs:173:87: 173:88
        _40 = const false;               // scope 2 at src/main.rs:176:24: 176:27
        _0 = move _2;                    // scope 2 at src/main.rs:176:24: 176:27
        drop(_7) -> [return: bb18, unwind: bb23]; // scope 1 at src/main.rs:177:13: 177:14
    }

    bb27 (cleanup): {
        drop((_13.3: futures::unsync::mpsc::UnboundedSender<Notification>)) -> bb22; // scope 2 at src/main.rs:173:87: 173:88
    }

    bb28 (cleanup): {
        drop(_2) -> bb24;                // scope 0 at src/main.rs:177:13: 177:14
    }

    bb29 (cleanup): {
        switchInt(_40) -> [false: bb24, otherwise: bb28]; // scope 0 at src/main.rs:177:13: 177:14
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::deserialize(_1: __D) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {
    debug __deserializer => _1;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _2: __D;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _2 = move _1;                    // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _0 = <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>(move _2, move _3) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:303:9: 312:10>::chain_err(_1: std::result::Result<T, E>, _2: F) -> std::result::Result<T, errors::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:304:33: 304:37
    debug callback => _2;                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:304:39: 304:47
    let mut _0: std::result::Result<T, errors::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:304:55: 304:92
    let mut _3: std::result::Result<T, E>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:17: 307:21
    let mut _4: [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:17: 307:21
        _3 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:17: 307:21
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18
        (_4.0: F) = move _2;             // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18
        _0 = std::result::Result::<T, E>::map_err::<errors::Error, [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18]>(move _3, move _4) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:17: 310:19
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:22: 307:29
                                         // + literal: Const { ty: fn(std::result::Result<T, E>, [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18]) -> std::result::Result<T, errors::Error> {std::result::Result::<T, E>::map_err::<errors::Error, [closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:307:30: 310:18]>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:18: 310:19
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:310:18: 310:19
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:311:14: 311:14
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::deserialize(_1: __D) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {
    debug __deserializer => _1;          // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _2: __D;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor; // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        StorageLive(_2);                 // scope 0 at src/main.rs:54:10: 54:21
        _2 = move _1;                    // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_3);                 // scope 0 at src/main.rs:54:10: 54:21
        _0 = <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>(move _2, move _3) -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: fn(__D, _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor) -> std::result::Result<<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Visitor>::Value, <__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::Error> {<__D as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserializer>::deserialize_identifier::<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_3);                 // scope 0 at src/main.rs:54:20: 54:21
        StorageDead(_2);                 // scope 0 at src/main.rs:54:20: 54:21
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn <impl at src/main.rs:370:1: 446:2>::call::{closure#0}::{closure#0}(_1: [closure@src/main.rs:415:31: 415:56], _2: &str) -> std::option::Option<u64> {
    debug s => _2;                       // in scope 0 at src/main.rs:415:32: 415:33
    let mut _0: std::option::Option<u64>; // return place in scope 0 at src/main.rs:415:35: 415:35
    let mut _3: std::result::Result<u64, std::num::ParseIntError>; // in scope 0 at src/main.rs:415:35: 415:51
    let mut _4: &str;                    // in scope 0 at src/main.rs:415:35: 415:36

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:415:35: 415:51
        StorageLive(_4);                 // scope 0 at src/main.rs:415:35: 415:36
        _4 = _2;                         // scope 0 at src/main.rs:415:35: 415:36
        _3 = core::str::<impl str>::parse::<u64>(move _4) -> bb1; // scope 0 at src/main.rs:415:35: 415:51
                                         // mir::Constant
                                         // + span: src/main.rs:415:37: 415:42
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'r> fn(&'r str) -> std::result::Result<u64, <u64 as std::str::FromStr>::Err> {core::str::<impl str>::parse::<u64>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at src/main.rs:415:50: 415:51
        _0 = std::result::Result::<u64, ParseIntError>::ok(move _3) -> bb2; // scope 0 at src/main.rs:415:35: 415:56
                                         // mir::Constant
                                         // + span: src/main.rs:415:52: 415:54
                                         // + literal: Const { ty: fn(std::result::Result<u64, std::num::ParseIntError>) -> std::option::Option<u64> {std::result::Result::<u64, std::num::ParseIntError>::ok}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at src/main.rs:415:55: 415:56
        return;                          // scope 0 at src/main.rs:415:56: 415:56
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:278:9: 282:10>::from(_1: std::string::String) -> errors::ErrorKind {
    debug s => _1;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:279:21: 279:22
    let mut _0: errors::ErrorKind;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:279:35: 279:39
    let mut _2: std::string::String;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:39: 280:40

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:39: 280:40
        _2 = move _1;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:39: 280:40
        ((_0 as Msg).0: std::string::String) = move _2; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:17: 280:41
        discriminant(_0) = 0;            // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:17: 280:41
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:280:40: 280:41
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:281:14: 281:14
    }
}

fn _IMPL_DESERIALIZE_FOR_ClientMessage::<impl at src/main.rs:54:10: 54:21>::deserialize::<impl at src/main.rs:54:10: 54:21>::visit_str(_1: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__FieldVisitor, _2: &str) -> std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl Deserialize<'de> for ClientMessage>::deserialize::__Field, __E> {
    debug self => _1;                    // in scope 0 at src/main.rs:54:10: 54:21
    debug __value => _2;                 // in scope 0 at src/main.rs:54:10: 54:21
    let mut _0: std::result::Result<_IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field, __E>; // return place in scope 0 at src/main.rs:54:10: 54:21
    let mut _3: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _4: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _5: bool;                    // in scope 0 at src/main.rs:54:10: 54:21
    let mut _6: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _7: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _8: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field; // in scope 0 at src/main.rs:54:10: 54:21
    let mut _9: __E;                     // in scope 0 at src/main.rs:54:10: 54:21
    let mut _10: &str;                   // in scope 0 at src/main.rs:54:10: 54:21

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "hello") -> bb1; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [104, 101, 108, 108, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) }
    }

    bb1: {
        switchInt(move _3) -> [false: bb2, otherwise: bb7]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb2: {
        _4 = <str as PartialEq>::eq(_2, const "register") -> bb3; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }) }
    }

    bb3: {
        switchInt(move _4) -> [false: bb4, otherwise: bb8]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb4: {
        _5 = <str as PartialEq>::eq(_2, const "unregister") -> bb5; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r, 's> fn(&'r str, &'s str) -> bool {<str as std::cmp::PartialEq>::eq}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 })
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [117, 110, 114, 101, 103, 105, 115, 116, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1023], len: Size { raw: 10 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 10 }) }
    }

    bb5: {
        switchInt(move _5) -> [false: bb6, otherwise: bb9]; // scope 0 at src/main.rs:54:10: 54:21
    }

    bb6: {
        StorageLive(_9);                 // scope 0 at src/main.rs:54:10: 54:21
        StorageLive(_10);                // scope 0 at src/main.rs:54:10: 54:21
        _10 = _2;                        // scope 0 at src/main.rs:54:10: 54:21
        _9 = <__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::unknown_variant(move _10, const VARIANTS) -> bb10; // scope 0 at src/main.rs:54:10: 54:21
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: for<'r> fn(&'r str, &'static [&'static str]) -> __E {<__E as _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::de::Error>::unknown_variant}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &[&str]
                                         // + val: Unevaluated(VARIANTS, [], None)
                                         // mir::Constant
                                         // + span: src/main.rs:54:10: 54:21
                                         // + literal: Const { ty: &[&str], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:306 ~ webpush_server[6b79]::_IMPL_DESERIALIZE_FOR_ClientMessage::{impl#0}::deserialize::VARIANTS), const_param_did: None }, substs_: Some([]), promoted: None }) }
    }

    bb7: {
        StorageLive(_6);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_6) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _6; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_6);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb11;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb8: {
        StorageLive(_7);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_7) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _7; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_7);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb11;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb9: {
        StorageLive(_8);                 // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_8) = 2;            // scope 0 at src/main.rs:54:10: 54:21
        ((_0 as Ok).0: _IMPL_DESERIALIZE_FOR_ClientMessage::<impl _IMPL_DESERIALIZE_FOR_ClientMessage::_serde::Deserialize<'de> for ClientMessage>::deserialize::__Field) = move _8; // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 0;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_8);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb11;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb10: {
        StorageDead(_10);                // scope 0 at src/main.rs:54:20: 54:21
        ((_0 as Err).0: __E) = move _9;  // scope 0 at src/main.rs:54:10: 54:21
        discriminant(_0) = 1;            // scope 0 at src/main.rs:54:10: 54:21
        StorageDead(_9);                 // scope 0 at src/main.rs:54:20: 54:21
        goto -> bb11;                    // scope 0 at src/main.rs:54:20: 54:21
    }

    bb11: {
        return;                          // scope 0 at src/main.rs:54:21: 54:21
    }
}

fn Push(_1: Rc<Context>) -> Push {
    let mut _0: Push;                    // return place in scope 0 at src/main.rs:368:1: 368:26

    bb0: {
        (_0.0: std::rc::Rc<Context>) = move _1; // scope 0 at src/main.rs:368:1: 368:26
        return;                          // scope 0 at src/main.rs:368:1: 368:26
    }
}

// MIR FOR CTFE
fn Push(_1: Rc<Context>) -> Push {
    let mut _0: Push;                    // return place in scope 0 at src/main.rs:368:1: 368:26

    bb0: {
        (_0.0: std::rc::Rc<Context>) = move _1; // scope 0 at src/main.rs:368:1: 368:26
        return;                          // scope 0 at src/main.rs:368:1: 368:26
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process::{closure#1}::{closure#0}::{closure#1}(_1: [closure@src/main.rs:346:33: 346:62], _2: T) -> Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)> {
    debug ws => _2;                      // in scope 0 at src/main.rs:346:34: 346:36
    debug rx => (_1.0: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // in scope 0 at src/main.rs:302:31: 302:33
    let mut _0: futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>; // return place in scope 0 at src/main.rs:346:38: 346:38
    let mut _3: (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // in scope 0 at src/main.rs:346:53: 346:61
    let mut _4: T;                       // in scope 0 at src/main.rs:346:54: 346:56
    let mut _5: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 0 at src/main.rs:346:58: 346:60

    bb0: {
        StorageLive(_3);                 // scope 0 at src/main.rs:346:53: 346:61
        StorageLive(_4);                 // scope 0 at src/main.rs:346:54: 346:56
        _4 = move _2;                    // scope 0 at src/main.rs:346:54: 346:56
        StorageLive(_5);                 // scope 0 at src/main.rs:346:58: 346:60
        _5 = move (_1.0: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // scope 0 at src/main.rs:346:58: 346:60
        (_3.0: T) = move _4;             // scope 0 at src/main.rs:346:53: 346:61
        (_3.1: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>) = move _5; // scope 0 at src/main.rs:346:53: 346:61
        StorageDead(_5);                 // scope 0 at src/main.rs:346:60: 346:61
        StorageDead(_4);                 // scope 0 at src/main.rs:346:60: 346:61
        ((_0 as Continue).0: (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)) = move _3; // scope 0 at src/main.rs:346:38: 346:62
        discriminant(_0) = 1;            // scope 0 at src/main.rs:346:38: 346:62
        StorageDead(_3);                 // scope 0 at src/main.rs:346:61: 346:62
        return;                          // scope 0 at src/main.rs:346:62: 346:62
    }
}

fn <impl at src/main.rs:232:1: 350:2>::process(_1: Client, _2: T, _3: Rc<Context>, _4: futures::unsync::mpsc::UnboundedReceiver<Notification>, _5: &Handle) -> Box<dyn futures::Future<Error = errors::Error, Item = ()>> {
    debug self => _1;                    // in scope 0 at src/main.rs:273:19: 273:23
    debug ws => _2;                      // in scope 0 at src/main.rs:274:19: 274:21
    debug cx => _3;                      // in scope 0 at src/main.rs:275:19: 275:21
    debug rx => _4;                      // in scope 0 at src/main.rs:276:19: 276:21
    debug handle => _5;                  // in scope 0 at src/main.rs:277:19: 277:25
    let mut _0: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>; // return place in scope 0 at src/main.rs:277:39: 277:51
    let mut _6: std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>>; // in scope 0 at src/main.rs:298:9: 348:12
    let _7: uuid::Uuid;                  // in scope 0 at src/main.rs:282:13: 282:17
    let mut _8: std::slice::Iter<uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:42
    let mut _9: std::slice::Iter<uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:42
    let mut _10: &[uuid::Uuid];          // in scope 0 at src/main.rs:285:19: 285:35
    let _11: &[uuid::Uuid];              // in scope 0 at src/main.rs:285:19: 285:42
    let mut _12: &std::vec::Vec<uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:35
    let mut _15: std::option::Option<&uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:42
    let mut _16: &mut std::slice::Iter<uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:42
    let mut _17: &mut std::slice::Iter<uuid::Uuid>; // in scope 0 at src/main.rs:285:19: 285:42
    let mut _18: isize;                  // in scope 0 at src/main.rs:285:13: 285:15
    let mut _20: &uuid::Uuid;            // in scope 0 at src/main.rs:285:13: 285:15
    let mut _22: bool;                   // in scope 0 at src/main.rs:286:13: 289:27
    let mut _23: bool;                   // in scope 0 at src/main.rs:286:21: 289:25
    let mut _24: &std::option::Option<Channel>; // in scope 0 at src/main.rs:286:21: 289:15
    let _25: std::option::Option<Channel>; // in scope 0 at src/main.rs:286:21: 289:15
    let mut _26: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:286:21: 286:45
    let mut _27: &mut std::collections::HashMap<uuid::Uuid, Channel>; // in scope 0 at src/main.rs:286:21: 289:15
    let mut _28: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:286:21: 286:45
    let mut _29: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:286:21: 286:45
    let mut _30: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>; // in scope 0 at src/main.rs:286:21: 286:32
    let _31: &Context;                   // in scope 0 at src/main.rs:286:21: 286:32
    let mut _32: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:286:21: 286:23
    let mut _33: uuid::Uuid;             // in scope 0 at src/main.rs:286:53: 286:56
    let mut _34: Channel;                // in scope 0 at src/main.rs:286:58: 289:14
    let mut _35: uuid::Uuid;             // in scope 0 at src/main.rs:287:23: 287:32
    let mut _36: bool;                   // in scope 0 at src/main.rs:294:9: 294:74
    let mut _37: bool;                   // in scope 0 at src/main.rs:294:17: 294:72
    let mut _38: &std::option::Option<Client>; // in scope 0 at src/main.rs:294:17: 294:62
    let _39: std::option::Option<Client>; // in scope 0 at src/main.rs:294:17: 294:62
    let mut _40: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:294:17: 294:38
    let mut _41: &mut std::collections::HashMap<uuid::Uuid, Client>; // in scope 0 at src/main.rs:294:17: 294:62
    let mut _42: &mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:294:17: 294:38
    let mut _43: std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:294:17: 294:38
    let mut _44: &std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>; // in scope 0 at src/main.rs:294:17: 294:25
    let _45: &Context;                   // in scope 0 at src/main.rs:294:17: 294:25
    let mut _46: &std::rc::Rc<Context>;  // in scope 0 at src/main.rs:294:17: 294:19
    let mut _47: uuid::Uuid;             // in scope 0 at src/main.rs:294:46: 294:55
    let mut _48: Client;                 // in scope 0 at src/main.rs:294:57: 294:61
    let mut _50: &tokio_core::reactor::Handle; // in scope 0 at src/main.rs:296:22: 296:28
    let mut _52: futures::unsync::mpsc::UnboundedReceiver<Notification>; // in scope 0 at src/main.rs:297:18: 297:20
    let mut _53: [closure@src/main.rs:297:29: 297:41]; // in scope 0 at src/main.rs:297:29: 297:41
    let mut _54: std::boxed::Box<futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>>; // in scope 0 at src/main.rs:298:9: 348:12
    let mut _55: futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>; // in scope 0 at src/main.rs:298:18: 348:11
    let mut _56: (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>); // in scope 0 at src/main.rs:298:26: 298:34
    let mut _57: T;                      // in scope 0 at src/main.rs:298:27: 298:29
    let mut _58: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 0 at src/main.rs:298:31: 298:33
    let mut _59: [closure@src/main.rs:298:36: 348:10]; // in scope 0 at src/main.rs:298:36: 348:10
    let mut _60: bool;                   // in scope 0 at src/main.rs:349:5: 349:6
    let mut _61: bool;                   // in scope 0 at src/main.rs:349:5: 349:6
    let mut _62: bool;                   // in scope 0 at src/main.rs:349:5: 349:6
    let mut _63: bool;                   // in scope 0 at src/main.rs:349:5: 349:6
    let mut _64: bool;                   // in scope 0 at src/main.rs:349:5: 349:6
    scope 1 {
        debug uaid => _7;                // in scope 1 at src/main.rs:282:13: 282:17
        let mut _13: std::slice::Iter<uuid::Uuid>; // in scope 1 at src/main.rs:285:19: 285:42
        let _49: tokio_core::reactor::Handle; // in scope 1 at src/main.rs:296:13: 296:19
        scope 2 {
            debug iter => _13;           // in scope 2 at src/main.rs:285:19: 285:42
            let mut _14: &uuid::Uuid;    // in scope 2 at src/main.rs:285:19: 285:42
            scope 3 {
                debug __next => _14;     // in scope 3 at src/main.rs:285:19: 285:42
                let _19: &uuid::Uuid;    // in scope 3 at src/main.rs:285:13: 285:15
                let _21: &uuid::Uuid;    // in scope 3 at src/main.rs:285:13: 285:15
                scope 4 {
                    debug val => _19;    // in scope 4 at src/main.rs:285:13: 285:15
                }
                scope 5 {
                    debug id => _21;     // in scope 5 at src/main.rs:285:13: 285:15
                }
            }
        }
        scope 6 {
            debug handle => _49;         // in scope 6 at src/main.rs:296:13: 296:19
            let _51: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>; // in scope 6 at src/main.rs:297:13: 297:15
            scope 7 {
                debug rx => _51;         // in scope 7 at src/main.rs:297:13: 297:15
            }
        }
    }

    bb0: {
        _60 = const false;               // scope 0 at src/main.rs:298:9: 348:12
        _63 = const false;               // scope 0 at src/main.rs:298:9: 348:12
        _61 = const false;               // scope 0 at src/main.rs:298:9: 348:12
        _64 = const false;               // scope 0 at src/main.rs:298:9: 348:12
        _62 = const false;               // scope 0 at src/main.rs:298:9: 348:12
        _64 = const true;                // scope 0 at src/main.rs:298:9: 348:12
        _63 = const true;                // scope 0 at src/main.rs:298:9: 348:12
        _62 = const true;                // scope 0 at src/main.rs:298:9: 348:12
        _61 = const true;                // scope 0 at src/main.rs:298:9: 348:12
        StorageLive(_6);                 // scope 0 at src/main.rs:298:9: 348:12
        StorageLive(_7);                 // scope 0 at src/main.rs:282:13: 282:17
        _7 = (_1.0: uuid::Uuid);         // scope 0 at src/main.rs:282:20: 282:29
        StorageLive(_8);                 // scope 1 at src/main.rs:285:19: 285:42
        StorageLive(_9);                 // scope 1 at src/main.rs:285:19: 285:42
        StorageLive(_10);                // scope 1 at src/main.rs:285:19: 285:35
        StorageLive(_11);                // scope 1 at src/main.rs:285:19: 285:42
        StorageLive(_12);                // scope 1 at src/main.rs:285:19: 285:35
        _12 = &(_1.2: std::vec::Vec<uuid::Uuid>); // scope 1 at src/main.rs:285:19: 285:35
        _11 = <Vec<Uuid> as Deref>::deref(move _12) -> [return: bb1, unwind: bb40]; // scope 1 at src/main.rs:285:19: 285:42
                                         // mir::Constant
                                         // + span: src/main.rs:285:19: 285:42
                                         // + literal: Const { ty: for<'r> fn(&'r std::vec::Vec<uuid::Uuid>) -> &'r <std::vec::Vec<uuid::Uuid> as std::ops::Deref>::Target {<std::vec::Vec<uuid::Uuid> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        _10 = _11;                       // scope 1 at src/main.rs:285:19: 285:35
        StorageDead(_12);                // scope 1 at src/main.rs:285:34: 285:35
        _9 = core::slice::<impl [Uuid]>::iter(move _10) -> [return: bb2, unwind: bb40]; // scope 1 at src/main.rs:285:19: 285:42
                                         // mir::Constant
                                         // + span: src/main.rs:285:36: 285:40
                                         // + literal: Const { ty: for<'r> fn(&'r [uuid::Uuid]) -> std::slice::Iter<'r, uuid::Uuid> {core::slice::<impl [uuid::Uuid]>::iter}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_10);                // scope 1 at src/main.rs:285:41: 285:42
        _8 = <std::slice::Iter<Uuid> as IntoIterator>::into_iter(move _9) -> [return: bb3, unwind: bb40]; // scope 1 at src/main.rs:285:19: 285:42
                                         // mir::Constant
                                         // + span: src/main.rs:285:19: 285:42
                                         // + literal: Const { ty: fn(std::slice::Iter<uuid::Uuid>) -> <std::slice::Iter<uuid::Uuid> as std::iter::IntoIterator>::IntoIter {<std::slice::Iter<uuid::Uuid> as std::iter::IntoIterator>::into_iter}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_9);                 // scope 1 at src/main.rs:285:41: 285:42
        StorageLive(_13);                // scope 1 at src/main.rs:285:19: 285:42
        _13 = move _8;                   // scope 1 at src/main.rs:285:19: 285:42
        goto -> bb4;                     // scope 2 at src/main.rs:285:9: 290:10
    }

    bb4: {
        StorageLive(_14);                // scope 2 at src/main.rs:285:19: 285:42
        StorageLive(_15);                // scope 3 at src/main.rs:285:19: 285:42
        StorageLive(_16);                // scope 3 at src/main.rs:285:19: 285:42
        StorageLive(_17);                // scope 3 at src/main.rs:285:19: 285:42
        _17 = &mut _13;                  // scope 3 at src/main.rs:285:19: 285:42
        _16 = &mut (*_17);               // scope 3 at src/main.rs:285:19: 285:42
        _15 = <std::slice::Iter<Uuid> as Iterator>::next(move _16) -> [return: bb5, unwind: bb40]; // scope 3 at src/main.rs:285:19: 285:42
                                         // mir::Constant
                                         // + span: src/main.rs:285:19: 285:42
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::slice::Iter<uuid::Uuid>) -> std::option::Option<<std::slice::Iter<uuid::Uuid> as std::iter::Iterator>::Item> {<std::slice::Iter<uuid::Uuid> as std::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_16);                // scope 3 at src/main.rs:285:41: 285:42
        _18 = discriminant(_15);         // scope 3 at src/main.rs:285:19: 285:42
        switchInt(move _18) -> [0_isize: bb6, 1_isize: bb8, otherwise: bb7]; // scope 3 at src/main.rs:285:19: 285:42
    }

    bb6: {
        StorageDead(_17);                // scope 3 at src/main.rs:285:41: 285:42
        StorageDead(_15);                // scope 3 at src/main.rs:285:41: 285:42
        StorageDead(_14);                // scope 2 at src/main.rs:290:9: 290:10
        StorageDead(_13);                // scope 1 at src/main.rs:290:9: 290:10
        StorageDead(_11);                // scope 1 at src/main.rs:285:41: 285:42
        StorageDead(_8);                 // scope 1 at src/main.rs:285:41: 285:42
        StorageLive(_36);                // scope 1 at src/main.rs:294:9: 294:74
        StorageLive(_37);                // scope 1 at src/main.rs:294:17: 294:72
        StorageLive(_38);                // scope 1 at src/main.rs:294:17: 294:62
        StorageLive(_39);                // scope 1 at src/main.rs:294:17: 294:62
        StorageLive(_40);                // scope 1 at src/main.rs:294:17: 294:38
        StorageLive(_41);                // scope 1 at src/main.rs:294:17: 294:62
        StorageLive(_42);                // scope 1 at src/main.rs:294:17: 294:38
        StorageLive(_43);                // scope 1 at src/main.rs:294:17: 294:38
        StorageLive(_44);                // scope 1 at src/main.rs:294:17: 294:25
        StorageLive(_45);                // scope 1 at src/main.rs:294:17: 294:25
        StorageLive(_46);                // scope 1 at src/main.rs:294:17: 294:19
        _46 = &_3;                       // scope 1 at src/main.rs:294:17: 294:19
        _45 = <Rc<Context> as Deref>::deref(move _46) -> [return: bb17, unwind: bb40]; // scope 1 at src/main.rs:294:17: 294:25
                                         // mir::Constant
                                         // + span: src/main.rs:294:17: 294:25
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb7: {
        unreachable;                     // scope 3 at src/main.rs:285:19: 285:42
    }

    bb8: {
        StorageLive(_19);                // scope 3 at src/main.rs:285:13: 285:15
        _19 = ((_15 as Some).0: &uuid::Uuid); // scope 3 at src/main.rs:285:13: 285:15
        StorageLive(_20);                // scope 4 at src/main.rs:285:13: 285:15
        _20 = _19;                       // scope 4 at src/main.rs:285:13: 285:15
        _14 = move _20;                  // scope 4 at src/main.rs:285:13: 285:15
        StorageDead(_20);                // scope 4 at src/main.rs:285:14: 285:15
        StorageDead(_19);                // scope 3 at src/main.rs:285:14: 285:15
        StorageDead(_17);                // scope 3 at src/main.rs:285:41: 285:42
        StorageDead(_15);                // scope 3 at src/main.rs:285:41: 285:42
        StorageLive(_21);                // scope 3 at src/main.rs:285:13: 285:15
        _21 = _14;                       // scope 3 at src/main.rs:285:19: 285:42
        StorageLive(_22);                // scope 5 at src/main.rs:286:13: 289:27
        StorageLive(_23);                // scope 5 at src/main.rs:286:21: 289:25
        StorageLive(_24);                // scope 5 at src/main.rs:286:21: 289:15
        StorageLive(_25);                // scope 5 at src/main.rs:286:21: 289:15
        StorageLive(_26);                // scope 5 at src/main.rs:286:21: 286:45
        StorageLive(_27);                // scope 5 at src/main.rs:286:21: 289:15
        StorageLive(_28);                // scope 5 at src/main.rs:286:21: 286:45
        StorageLive(_29);                // scope 5 at src/main.rs:286:21: 286:45
        StorageLive(_30);                // scope 5 at src/main.rs:286:21: 286:32
        StorageLive(_31);                // scope 5 at src/main.rs:286:21: 286:32
        StorageLive(_32);                // scope 5 at src/main.rs:286:21: 286:23
        _32 = &_3;                       // scope 5 at src/main.rs:286:21: 286:23
        _31 = <Rc<Context> as Deref>::deref(move _32) -> [return: bb9, unwind: bb40]; // scope 5 at src/main.rs:286:21: 286:32
                                         // mir::Constant
                                         // + span: src/main.rs:286:21: 286:32
                                         // + literal: Const { ty: for<'r> fn(&'r std::rc::Rc<Context>) -> &'r <std::rc::Rc<Context> as std::ops::Deref>::Target {<std::rc::Rc<Context> as std::ops::Deref>::deref}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_32);                // scope 5 at src/main.rs:286:22: 286:23
        _30 = &((*_31).0: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>); // scope 5 at src/main.rs:286:21: 286:32
        _29 = RefCell::<HashMap<Uuid, Channel>>::borrow_mut(move _30) -> [return: bb10, unwind: bb40]; // scope 5 at src/main.rs:286:21: 286:45
                                         // mir::Constant
                                         // + span: src/main.rs:286:33: 286:43
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Channel>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Channel>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Channel>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        _28 = &mut _29;                  // scope 5 at src/main.rs:286:21: 286:45
        _27 = <RefMut<HashMap<Uuid, Channel>> as DerefMut>::deref_mut(move _28) -> [return: bb11, unwind: bb32]; // scope 5 at src/main.rs:286:21: 289:15
                                         // mir::Constant
                                         // + span: src/main.rs:286:21: 289:15
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Channel>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        _26 = &mut (*_27);               // scope 5 at src/main.rs:286:21: 286:45
        StorageDead(_30);                // scope 5 at src/main.rs:286:44: 286:45
        StorageDead(_28);                // scope 5 at src/main.rs:286:44: 286:45
        StorageLive(_33);                // scope 5 at src/main.rs:286:53: 286:56
        _33 = (*_21);                    // scope 5 at src/main.rs:286:53: 286:56
        StorageLive(_34);                // scope 5 at src/main.rs:286:58: 289:14
        StorageLive(_35);                // scope 5 at src/main.rs:287:23: 287:32
        _35 = (_1.0: uuid::Uuid);        // scope 5 at src/main.rs:287:23: 287:32
        (_34.0: uuid::Uuid) = move _35;  // scope 5 at src/main.rs:286:58: 289:14
        (_34.1: u64) = const 0_u64;      // scope 5 at src/main.rs:286:58: 289:14
        StorageDead(_35);                // scope 5 at src/main.rs:289:13: 289:14
        _25 = HashMap::<Uuid, Channel>::insert(move _26, move _33, move _34) -> [return: bb12, unwind: bb32]; // scope 5 at src/main.rs:286:21: 289:15
                                         // mir::Constant
                                         // + span: src/main.rs:286:46: 286:52
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::collections::HashMap<uuid::Uuid, Channel>, uuid::Uuid, Channel) -> std::option::Option<Channel> {std::collections::HashMap::<uuid::Uuid, Channel>::insert}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        _24 = &_25;                      // scope 5 at src/main.rs:286:21: 289:15
        StorageDead(_34);                // scope 5 at src/main.rs:289:14: 289:15
        StorageDead(_33);                // scope 5 at src/main.rs:289:14: 289:15
        StorageDead(_26);                // scope 5 at src/main.rs:289:14: 289:15
        _23 = std::option::Option::<Channel>::is_none(move _24) -> [return: bb13, unwind: bb32]; // scope 5 at src/main.rs:286:21: 289:25
                                         // mir::Constant
                                         // + span: src/main.rs:289:16: 289:23
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<Channel>) -> bool {std::option::Option::<Channel>::is_none}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_24);                // scope 5 at src/main.rs:289:24: 289:25
        _22 = Not(move _23);             // scope 5 at src/main.rs:286:13: 289:27
        drop(_29) -> [return: bb14, unwind: bb40]; // scope 5 at src/main.rs:289:26: 289:27
    }

    bb14: {
        StorageDead(_31);                // scope 5 at src/main.rs:289:26: 289:27
        StorageDead(_29);                // scope 5 at src/main.rs:289:26: 289:27
        StorageDead(_27);                // scope 5 at src/main.rs:289:26: 289:27
        StorageDead(_25);                // scope 5 at src/main.rs:289:26: 289:27
        StorageDead(_23);                // scope 5 at src/main.rs:289:26: 289:27
        switchInt(move _22) -> [false: bb16, otherwise: bb15]; // scope 5 at src/main.rs:286:13: 289:27
    }

    bb15: {
        core::panicking::panic(const "assertion failed: cx.channels.borrow_mut().insert(*id,\\n                                Channel{uaid: self.uaid,\\n                                        current_version: 0,}).is_none()") -> bb40; // scope 5 at src/main.rs:286:13: 289:27
                                         // mir::Constant
                                         // + span: src/main.rs:286:13: 289:27
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 99, 120, 46, 99, 104, 97, 110, 110, 101, 108, 115, 46, 98, 111, 114, 114, 111, 119, 95, 109, 117, 116, 40, 41, 46, 105, 110, 115, 101, 114, 116, 40, 42, 105, 100, 44, 92, 110, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 67, 104, 97, 110, 110, 101, 108, 123, 117, 97, 105, 100, 58, 32, 115, 101, 108, 102, 46, 117, 97, 105, 100, 44, 92, 110, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 117, 114, 114, 101, 110, 116, 95, 118, 101, 114, 115, 105, 111, 110, 58, 32, 48, 44, 125, 41, 46, 105, 115, 95, 110, 111, 110, 101, 40, 41], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 18446744073709551615, 144115188075855871], len: Size { raw: 185 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 185 })
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 99, 120, 46, 99, 104, 97, 110, 110, 101, 108, 115, 46, 98, 111, 114, 114, 111, 119, 95, 109, 117, 116, 40, 41, 46, 105, 110, 115, 101, 114, 116, 40, 42, 105, 100, 44, 92, 110, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 67, 104, 97, 110, 110, 101, 108, 123, 117, 97, 105, 100, 58, 32, 115, 101, 108, 102, 46, 117, 97, 105, 100, 44, 92, 110, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 117, 114, 114, 101, 110, 116, 95, 118, 101, 114, 115, 105, 111, 110, 58, 32, 48, 44, 125, 41, 46, 105, 115, 95, 110, 111, 110, 101, 40, 41], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 18446744073709551615, 144115188075855871], len: Size { raw: 185 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 185 }) }
    }

    bb16: {
        StorageDead(_22);                // scope 5 at src/main.rs:289:26: 289:27
        StorageDead(_21);                // scope 3 at src/main.rs:290:9: 290:10
        StorageDead(_14);                // scope 2 at src/main.rs:290:9: 290:10
        goto -> bb4;                     // scope 2 at src/main.rs:285:9: 290:10
    }

    bb17: {
        StorageDead(_46);                // scope 1 at src/main.rs:294:18: 294:19
        _44 = &((*_45).1: std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>); // scope 1 at src/main.rs:294:17: 294:25
        _43 = RefCell::<HashMap<Uuid, Client>>::borrow_mut(move _44) -> [return: bb18, unwind: bb40]; // scope 1 at src/main.rs:294:17: 294:38
                                         // mir::Constant
                                         // + span: src/main.rs:294:26: 294:36
                                         // + literal: Const { ty: for<'r> fn(&'r std::cell::RefCell<std::collections::HashMap<uuid::Uuid, Client>>) -> std::cell::RefMut<'r, std::collections::HashMap<uuid::Uuid, Client>> {std::cell::RefCell::<std::collections::HashMap<uuid::Uuid, Client>>::borrow_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb18: {
        _42 = &mut _43;                  // scope 1 at src/main.rs:294:17: 294:38
        _41 = <RefMut<HashMap<Uuid, Client>> as DerefMut>::deref_mut(move _42) -> [return: bb19, unwind: bb31]; // scope 1 at src/main.rs:294:17: 294:62
                                         // mir::Constant
                                         // + span: src/main.rs:294:17: 294:62
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>>) -> &'r mut <std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::Deref>::Target {<std::cell::RefMut<std::collections::HashMap<uuid::Uuid, Client>> as std::ops::DerefMut>::deref_mut}, val: Value(Scalar(<ZST>)) }
    }

    bb19: {
        _40 = &mut (*_41);               // scope 1 at src/main.rs:294:17: 294:38
        StorageDead(_44);                // scope 1 at src/main.rs:294:37: 294:38
        StorageDead(_42);                // scope 1 at src/main.rs:294:37: 294:38
        StorageLive(_47);                // scope 1 at src/main.rs:294:46: 294:55
        _47 = (_1.0: uuid::Uuid);        // scope 1 at src/main.rs:294:46: 294:55
        StorageLive(_48);                // scope 1 at src/main.rs:294:57: 294:61
        _64 = const false;               // scope 1 at src/main.rs:294:57: 294:61
        _48 = move _1;                   // scope 1 at src/main.rs:294:57: 294:61
        _39 = HashMap::<Uuid, Client>::insert(move _40, move _47, move _48) -> [return: bb20, unwind: bb31]; // scope 1 at src/main.rs:294:17: 294:62
                                         // mir::Constant
                                         // + span: src/main.rs:294:39: 294:45
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::collections::HashMap<uuid::Uuid, Client>, uuid::Uuid, Client) -> std::option::Option<Client> {std::collections::HashMap::<uuid::Uuid, Client>::insert}, val: Value(Scalar(<ZST>)) }
    }

    bb20: {
        _38 = &_39;                      // scope 1 at src/main.rs:294:17: 294:62
        StorageDead(_48);                // scope 1 at src/main.rs:294:61: 294:62
        StorageDead(_47);                // scope 1 at src/main.rs:294:61: 294:62
        StorageDead(_40);                // scope 1 at src/main.rs:294:61: 294:62
        _37 = std::option::Option::<Client>::is_none(move _38) -> [return: bb21, unwind: bb30]; // scope 1 at src/main.rs:294:17: 294:72
                                         // mir::Constant
                                         // + span: src/main.rs:294:63: 294:70
                                         // + literal: Const { ty: for<'r> fn(&'r std::option::Option<Client>) -> bool {std::option::Option::<Client>::is_none}, val: Value(Scalar(<ZST>)) }
    }

    bb21: {
        StorageDead(_38);                // scope 1 at src/main.rs:294:71: 294:72
        _36 = Not(move _37);             // scope 1 at src/main.rs:294:9: 294:74
        drop(_39) -> [return: bb22, unwind: bb31]; // scope 1 at src/main.rs:294:73: 294:74
    }

    bb22: {
        drop(_43) -> [return: bb23, unwind: bb40]; // scope 1 at src/main.rs:294:73: 294:74
    }

    bb23: {
        StorageDead(_45);                // scope 1 at src/main.rs:294:73: 294:74
        StorageDead(_43);                // scope 1 at src/main.rs:294:73: 294:74
        StorageDead(_41);                // scope 1 at src/main.rs:294:73: 294:74
        StorageDead(_39);                // scope 1 at src/main.rs:294:73: 294:74
        StorageDead(_37);                // scope 1 at src/main.rs:294:73: 294:74
        switchInt(move _36) -> [false: bb25, otherwise: bb24]; // scope 1 at src/main.rs:294:9: 294:74
    }

    bb24: {
        core::panicking::panic(const "assertion failed: cx.uaids.borrow_mut().insert(self.uaid, self).is_none()") -> bb40; // scope 1 at src/main.rs:294:9: 294:74
                                         // mir::Constant
                                         // + span: src/main.rs:294:9: 294:74
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 99, 120, 46, 117, 97, 105, 100, 115, 46, 98, 111, 114, 114, 111, 119, 95, 109, 117, 116, 40, 41, 46, 105, 110, 115, 101, 114, 116, 40, 115, 101, 108, 102, 46, 117, 97, 105, 100, 44, 32, 115, 101, 108, 102, 41, 46, 105, 115, 95, 110, 111, 110, 101, 40, 41], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 511], len: Size { raw: 73 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 73 })
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 99, 120, 46, 117, 97, 105, 100, 115, 46, 98, 111, 114, 114, 111, 119, 95, 109, 117, 116, 40, 41, 46, 105, 110, 115, 101, 114, 116, 40, 115, 101, 108, 102, 46, 117, 97, 105, 100, 44, 32, 115, 101, 108, 102, 41, 46, 105, 115, 95, 110, 111, 110, 101, 40, 41], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [18446744073709551615, 511], len: Size { raw: 73 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 73 }) }
    }

    bb25: {
        StorageDead(_36);                // scope 1 at src/main.rs:294:73: 294:74
        StorageLive(_49);                // scope 1 at src/main.rs:296:13: 296:19
        StorageLive(_50);                // scope 1 at src/main.rs:296:22: 296:28
        _50 = _5;                        // scope 1 at src/main.rs:296:22: 296:28
        _49 = <Handle as Clone>::clone(move _50) -> [return: bb26, unwind: bb40]; // scope 1 at src/main.rs:296:22: 296:36
                                         // mir::Constant
                                         // + span: src/main.rs:296:29: 296:34
                                         // + literal: Const { ty: for<'r> fn(&'r tokio_core::reactor::Handle) -> tokio_core::reactor::Handle {<tokio_core::reactor::Handle as std::clone::Clone>::clone}, val: Value(Scalar(<ZST>)) }
    }

    bb26: {
        _60 = const true;                // scope 1 at src/main.rs:296:35: 296:36
        StorageDead(_50);                // scope 1 at src/main.rs:296:35: 296:36
        StorageLive(_51);                // scope 6 at src/main.rs:297:13: 297:15
        StorageLive(_52);                // scope 6 at src/main.rs:297:18: 297:20
        _61 = const false;               // scope 6 at src/main.rs:297:18: 297:20
        _52 = move _4;                   // scope 6 at src/main.rs:297:18: 297:20
        StorageLive(_53);                // scope 6 at src/main.rs:297:29: 297:41
        _51 = <futures::unsync::mpsc::UnboundedReceiver<Notification> as futures::Stream>::map_err::<errors::Error, [closure@src/main.rs:297:29: 297:41]>(move _52, move _53) -> [return: bb27, unwind: bb38]; // scope 6 at src/main.rs:297:18: 297:42
                                         // mir::Constant
                                         // + span: src/main.rs:297:21: 297:28
                                         // + literal: Const { ty: fn(futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]) -> futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]> {<futures::unsync::mpsc::UnboundedReceiver<Notification> as futures::Stream>::map_err::<errors::Error, [closure@src/main.rs:297:29: 297:41]>}, val: Value(Scalar(<ZST>)) }
    }

    bb27: {
        StorageDead(_53);                // scope 6 at src/main.rs:297:41: 297:42
        StorageDead(_52);                // scope 6 at src/main.rs:297:41: 297:42
        StorageLive(_54);                // scope 7 at src/main.rs:298:9: 348:12
        StorageLive(_55);                // scope 7 at src/main.rs:298:18: 348:11
        StorageLive(_56);                // scope 7 at src/main.rs:298:26: 298:34
        StorageLive(_57);                // scope 7 at src/main.rs:298:27: 298:29
        _63 = const false;               // scope 7 at src/main.rs:298:27: 298:29
        _57 = move _2;                   // scope 7 at src/main.rs:298:27: 298:29
        StorageLive(_58);                // scope 7 at src/main.rs:298:31: 298:33
        _58 = move _51;                  // scope 7 at src/main.rs:298:31: 298:33
        (_56.0: T) = move _57;           // scope 7 at src/main.rs:298:26: 298:34
        (_56.1: futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>) = move _58; // scope 7 at src/main.rs:298:26: 298:34
        StorageDead(_58);                // scope 7 at src/main.rs:298:33: 298:34
        StorageDead(_57);                // scope 7 at src/main.rs:298:33: 298:34
        StorageLive(_59);                // scope 7 at src/main.rs:298:36: 348:10
        _60 = const false;               // scope 7 at src/main.rs:298:36: 348:10
        _62 = const false;               // scope 7 at src/main.rs:298:36: 348:10
        (_59.0: tokio_core::reactor::Handle) = move _49; // scope 7 at src/main.rs:298:36: 348:10
        (_59.1: std::rc::Rc<Context>) = move _3; // scope 7 at src/main.rs:298:36: 348:10
        (_59.2: uuid::Uuid) = _7;        // scope 7 at src/main.rs:298:36: 348:10
        _55 = loop_fn::<(T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>), (), futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, Box<dyn futures::Future<Error = errors::Error, Item = Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>(move _56, move _59) -> [return: bb28, unwind: bb38]; // scope 7 at src/main.rs:298:18: 348:11
                                         // mir::Constant
                                         // + span: src/main.rs:298:18: 298:25
                                         // + literal: Const { ty: fn((T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>), [closure@src/main.rs:298:36: 348:10]) -> futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]> {futures::future::loop_fn::<(T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>), (), futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>}, val: Value(Scalar(<ZST>)) }
    }

    bb28: {
        StorageDead(_59);                // scope 7 at src/main.rs:348:10: 348:11
        StorageDead(_56);                // scope 7 at src/main.rs:348:10: 348:11
        _54 = Box::<LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, Box<dyn futures::Future<Error = errors::Error, Item = Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>>::new(move _55) -> [return: bb29, unwind: bb38]; // scope 7 at src/main.rs:298:9: 348:12
                                         // mir::Constant
                                         // + span: src/main.rs:298:9: 298:17
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>) -> std::boxed::Box<futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>> {std::boxed::Box::<futures::future::LoopFn<futures::Then<StreamNext<T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>>, std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = futures::future::Loop<(), (T, futures::stream::MapErr<futures::unsync::mpsc::UnboundedReceiver<Notification>, [closure@src/main.rs:297:29: 297:41]>)>>>, [closure@src/main.rs:301:42: 347:14]>, [closure@src/main.rs:298:36: 348:10]>>::new}, val: Value(Scalar(<ZST>)) }
    }

    bb29: {
        _6 = move _54 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>> (Pointer(Unsize)); // scope 7 at src/main.rs:298:9: 348:12
        StorageDead(_55);                // scope 7 at src/main.rs:348:11: 348:12
        StorageDead(_54);                // scope 7 at src/main.rs:348:11: 348:12
        StorageDead(_51);                // scope 6 at src/main.rs:349:5: 349:6
        _60 = const false;               // scope 1 at src/main.rs:349:5: 349:6
        StorageDead(_49);                // scope 1 at src/main.rs:349:5: 349:6
        StorageDead(_7);                 // scope 0 at src/main.rs:349:5: 349:6
        _0 = move _6 as std::boxed::Box<dyn futures::Future<Error = errors::Error, Item = ()>> (Pointer(Unsize)); // scope 0 at src/main.rs:298:9: 348:12
        StorageDead(_6);                 // scope 0 at src/main.rs:349:5: 349:6
        return;                          // scope 0 at src/main.rs:349:6: 349:6
    }

    bb30 (cleanup): {
        drop(_39) -> bb31;               // scope 1 at src/main.rs:294:73: 294:74
    }

    bb31 (cleanup): {
        drop(_43) -> bb40;               // scope 1 at src/main.rs:294:73: 294:74
    }

    bb32 (cleanup): {
        drop(_29) -> bb40;               // scope 5 at src/main.rs:289:26: 289:27
    }

    bb33 (cleanup): {
        switchInt(_62) -> [false: bb34, otherwise: bb41]; // scope 0 at src/main.rs:349:5: 349:6
    }

    bb34 (cleanup): {
        switchInt(_63) -> [false: bb35, otherwise: bb42]; // scope 0 at src/main.rs:349:5: 349:6
    }

    bb35 (cleanup): {
        switchInt(_64) -> [false: bb36, otherwise: bb43]; // scope 0 at src/main.rs:349:5: 349:6
    }

    bb36 (cleanup): {
        resume;                          // scope 0 at src/main.rs:273:5: 349:6
    }

    bb37 (cleanup): {
        drop(_49) -> bb40;               // scope 1 at src/main.rs:349:5: 349:6
    }

    bb38 (cleanup): {
        switchInt(_60) -> [false: bb40, otherwise: bb37]; // scope 1 at src/main.rs:349:5: 349:6
    }

    bb39 (cleanup): {
        drop(_4) -> bb33;                // scope 0 at src/main.rs:349:5: 349:6
    }

    bb40 (cleanup): {
        switchInt(_61) -> [false: bb33, otherwise: bb39]; // scope 0 at src/main.rs:349:5: 349:6
    }

    bb41 (cleanup): {
        drop(_3) -> bb34;                // scope 0 at src/main.rs:349:5: 349:6
    }

    bb42 (cleanup): {
        drop(_2) -> bb35;                // scope 0 at src/main.rs:349:5: 349:6
    }

    bb43 (cleanup): {
        drop(_1) -> bb36;                // scope 0 at src/main.rs:349:5: 349:6
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:150:9: 171:10>::description(_1: &errors::Error) -> &str {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:151:28: 151:33
    let mut _0: &str;                    // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:17: 152:37
    let mut _2: &errors::ErrorKind;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:17: 152:23

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:17: 152:23
        _2 = &((*_1).0: errors::ErrorKind); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:17: 152:23
        _0 = errors::ErrorKind::description(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:17: 152:37
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:24: 152:35
                                         // + literal: Const { ty: for<'r> fn(&'r errors::ErrorKind) -> &'r str {errors::ErrorKind::description}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:152:36: 152:37
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:153:14: 153:14
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27>::fmt(_1: &errors::ErrorKind, _2: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    debug f => _2;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _3: (&errors::ErrorKind,);   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _4: &errors::ErrorKind;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _5: isize;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _6: &std::string::String;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
    let mut _8: std::fmt::DebugTuple;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _9: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _10: &str;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _11: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _12: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _13: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
    let mut _15: &&std::string::String;  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
    let _16: &&std::string::String;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
    let _17: &std::string::String;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
    let mut _18: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _19: &tungstenite::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _21: std::fmt::DebugTuple;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _22: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _23: &str;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _24: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _25: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _26: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _27: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _28: &&tungstenite::Error;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _29: &&tungstenite::Error;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _30: &tungstenite::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _31: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _32: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _34: std::fmt::DebugTuple;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _35: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _36: &str;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _37: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _38: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _39: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _40: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _41: &&std::io::Error;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _42: &&std::io::Error;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _43: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _44: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _45: &serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _47: std::fmt::DebugTuple;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _48: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _49: &str;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let _50: &str;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _51: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _52: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    let mut _53: &dyn std::fmt::Debug;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _54: &&serde_json::Error;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _55: &&serde_json::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let _56: &serde_json::Error;         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
    let mut _57: &mut std::fmt::DebugTuple; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    scope 1 {
        debug __self_0 => _6;            // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        let _7: &mut std::fmt::DebugTuple; // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        scope 2 {
            debug debug_trait_builder => _7; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
            scope 3 {
            }
        }
    }
    scope 4 {
        debug __self_0 => _19;           // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        let _20: &mut std::fmt::DebugTuple; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        scope 5 {
            debug debug_trait_builder => _20; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
            scope 6 {
            }
        }
    }
    scope 7 {
        debug __self_0 => _32;           // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        let _33: &mut std::fmt::DebugTuple; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        scope 8 {
            debug debug_trait_builder => _33; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
            scope 9 {
            }
        }
    }
    scope 10 {
        debug __self_0 => _45;           // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        let _46: &mut std::fmt::DebugTuple; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        scope 11 {
            debug debug_trait_builder => _46; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
            scope 12 {
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _4 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        (_3.0: &errors::ErrorKind) = move _4; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageDead(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        _5 = discriminant((*(_3.0: &errors::ErrorKind))); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        switchInt(move _5) -> [0_isize: bb3, 1_isize: bb7, 2_isize: bb11, 3_isize: bb1, otherwise: bb2]; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    }

    bb1: {
        StorageLive(_45);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _45 = &(((*(_3.0: &errors::ErrorKind)) as Json).0: serde_json::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_46);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_47);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_48);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _48 = &mut (*_2);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_49);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_50);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _50 = const "Json";              // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [74, 115, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [74, 115, 111, 110], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [15], len: Size { raw: 4 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 4 }) }
        _49 = _50;                       // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _47 = std::fmt::Formatter::debug_tuple(move _48, move _49) -> bb15; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b, 'r> fn(&'b mut std::fmt::Formatter, &'r str) -> std::fmt::DebugTuple<'b, '_> {std::fmt::Formatter::debug_tuple}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        unreachable;                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
    }

    bb3: {
        StorageLive(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        _6 = &(((*(_3.0: &errors::ErrorKind)) as Msg).0: std::string::String); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        StorageLive(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _9 = &mut (*_2);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_10);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _11 = const "Msg";               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [77, 115, 103], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [7], len: Size { raw: 3 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 3 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [77, 115, 103], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [7], len: Size { raw: 3 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 3 }) }
        _10 = _11;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _8 = std::fmt::Formatter::debug_tuple(move _9, move _10) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'r> fn(&'b mut std::fmt::Formatter, &'r str) -> std::fmt::DebugTuple<'b, '_> {std::fmt::Formatter::debug_tuple}, val: Value(Scalar(<ZST>)) }
    }

    bb4: {
        StorageDead(_10);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_9);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        _7 = &mut _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageDead(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_12);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_13);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _13 = &mut (*_7);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_14);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        StorageLive(_15);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        StorageLive(_16);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        StorageLive(_17);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        _17 = _6;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        _15 = _16;                       // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        _14 = move _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 238:30
        StorageDead(_15);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:238:29: 238:30
        _12 = DebugTuple::field(move _13, move _14) -> bb5; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb5: {
        StorageDead(_14);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_13);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_17);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_16);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_12);                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_18);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _18 = &mut (*_7);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _0 = DebugTuple::finish(move _18) -> bb6; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::fmt::DebugTuple) -> std::result::Result<(), std::fmt::Error> {std::fmt::DebugTuple::finish}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        StorageDead(_18);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_8);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_7);                 // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        goto -> bb18;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
    }

    bb7: {
        StorageLive(_19);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _19 = &(((*(_3.0: &errors::ErrorKind)) as Ws).0: tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_20);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_21);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_22);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _22 = &mut (*_2);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_23);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_24);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _24 = const "Ws";                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [87, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [87, 115], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 }) }
        _23 = _24;                       // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _21 = std::fmt::Formatter::debug_tuple(move _22, move _23) -> bb8; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b, 'r> fn(&'b mut std::fmt::Formatter, &'r str) -> std::fmt::DebugTuple<'b, '_> {std::fmt::Formatter::debug_tuple}, val: Value(Scalar(<ZST>)) }
    }

    bb8: {
        StorageDead(_23);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_22);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        _20 = &mut _21;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageDead(_24);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_25);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_26);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _26 = &mut (*_20);               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_27);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_28);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_29);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_30);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _30 = _19;                       // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _29 = &_30;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _28 = _29;                       // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _27 = move _28 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageDead(_28);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:253:71: 253:72
        _25 = DebugTuple::field(move _26, move _27) -> bb9; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb9: {
        StorageDead(_27);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_26);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_30);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_29);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_25);                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_31);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _31 = &mut (*_20);               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _0 = DebugTuple::finish(move _31) -> bb10; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::fmt::DebugTuple) -> std::result::Result<(), std::fmt::Error> {std::fmt::DebugTuple::finish}, val: Value(Scalar(<ZST>)) }
    }

    bb10: {
        StorageDead(_31);                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_21);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_20);                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_19);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        goto -> bb18;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
    }

    bb11: {
        StorageLive(_32);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _32 = &(((*(_3.0: &errors::ErrorKind)) as Io).0: std::io::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_33);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_34);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_35);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _35 = &mut (*_2);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_36);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_37);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _37 = const "Io";                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [73, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [73, 111], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 2 }) }
        _36 = _37;                       // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _34 = std::fmt::Formatter::debug_tuple(move _35, move _36) -> bb12; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b, 'r> fn(&'b mut std::fmt::Formatter, &'r str) -> std::fmt::DebugTuple<'b, '_> {std::fmt::Formatter::debug_tuple}, val: Value(Scalar(<ZST>)) }
    }

    bb12: {
        StorageDead(_36);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_35);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        _33 = &mut _34;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageDead(_37);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_38);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_39);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _39 = &mut (*_33);               // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_40);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_41);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_42);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_43);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _43 = _32;                       // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _42 = &_43;                      // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _41 = _42;                       // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _40 = move _41 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageDead(_41);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:253:71: 253:72
        _38 = DebugTuple::field(move _39, move _40) -> bb13; // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb13: {
        StorageDead(_40);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_39);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_43);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_42);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_38);                // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_44);                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _44 = &mut (*_33);               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _0 = DebugTuple::finish(move _44) -> bb14; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::fmt::DebugTuple) -> std::result::Result<(), std::fmt::Error> {std::fmt::DebugTuple::finish}, val: Value(Scalar(<ZST>)) }
    }

    bb14: {
        StorageDead(_44);                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_34);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_33);                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_32);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        goto -> bb18;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
    }

    bb15: {
        StorageDead(_49);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_48);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        _46 = &mut _47;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageDead(_50);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_51);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_52);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _52 = &mut (*_46);               // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        StorageLive(_53);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_54);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_55);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageLive(_56);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _56 = _45;                       // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _55 = &_56;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _54 = _55;                       // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        _53 = move _54 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:201:30: 253:72
        StorageDead(_54);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:253:71: 253:72
        _51 = DebugTuple::field(move _52, move _53) -> bb16; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::DebugTuple, &'s (dyn std::fmt::Debug + 's)) -> &'r mut std::fmt::DebugTuple {std::fmt::DebugTuple::field}, val: Value(Scalar(<ZST>)) }
    }

    bb16: {
        StorageDead(_53);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_52);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_56);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_55);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_51);                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageLive(_57);                // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _57 = &mut (*_46);               // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
        _0 = DebugTuple::finish(move _57) -> bb17; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:22: 234:27
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: for<'r> fn(&'r mut std::fmt::DebugTuple) -> std::result::Result<(), std::fmt::Error> {std::fmt::DebugTuple::finish}, val: Value(Scalar(<ZST>)) }
    }

    bb17: {
        StorageDead(_57);                // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_47);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_46);                // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        StorageDead(_45);                // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        goto -> bb18;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
    }

    bb18: {
        StorageDead(_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:26: 234:27
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:234:27: 234:27
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#1}(_1: &[closure@/home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:9: 352:81], _2: &errors::ErrorKind, _3: &mut std::fmt::Formatter) -> std::result::Result<(), std::fmt::Error> {
    debug f => _3;                       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:13: 352:14
    debug err => (*((*_1).0: &&tungstenite::Error)); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:497:26: 497:34
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:44: 352:44
    let mut _4: &mut std::fmt::Formatter; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
    let mut _5: std::fmt::Arguments;     // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _6: [std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _7: (&&tungstenite::Error,); // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _8: &&tungstenite::Error;    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _9: &&tungstenite::Error;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _10: std::fmt::ArgumentV1;   // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _11: &&tungstenite::Error;   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let mut _12: for<'r, 's, 't0> fn(&'r &tungstenite::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    let _13: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _14: &[&str];                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _15: &[&str; 1];             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let _16: &[&str; 1];                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _17: &[std::fmt::ArgumentV1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    let mut _18: &[std::fmt::ArgumentV1; 1]; // in scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
    scope 1 {
        debug arg0 => _9;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
    }
    scope 2 {
        debug args => _13;               // in scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        scope 3 {
            let mut _19: &[&str; 1];     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        }
    }

    bb0: {
        StorageLive(_4);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        _4 = &mut (*_3);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:53: 352:54
        StorageLive(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_6);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_7);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_8);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _8 = ((*_1).0: &&tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        (_7.0: &&tungstenite::Error) = move _8; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_8);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_9);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _9 = (_7.0: &&tungstenite::Error); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_11);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _11 = _9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        StorageLive(_12);                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
        _12 = <&tungstenite::Error as std::fmt::Display>::fmt as for<'r, 's, 't0> fn(&'r &tungstenite::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:39: 255:42
                                         // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &tungstenite::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&tungstenite::Error as std::fmt::Display>::fmt}, val: Value(Scalar(<ZST>)) }
        _10 = ArgumentV1::new::<&tungstenite::Error>(move _11, move _12) -> bb1; // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b> fn(&'b &tungstenite::Error, for<'r, 's, 't0> fn(&'r &tungstenite::Error, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> std::fmt::ArgumentV1<'b> {std::fmt::ArgumentV1::new::<&tungstenite::Error>}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_12);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_11);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _6 = [move _10];                 // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_10);                // scope 1 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_9);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageLive(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _13 = &_6;                       // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_14);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageLive(_16);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _19 = const <errors::ErrorKind as std::fmt::Display>::fmt::{closure#1}::promoted[0]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &[&str; 1]
                                         // + val: Unevaluated(<errors::ErrorKind as std::fmt::Display>::fmt::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0]))
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:274 ~ webpush_server[6b79]::errors::{impl#17}::fmt::{closure#1}), const_param_did: None }, substs_: Some([<closure_kind>, <closure_signature>, <upvars>]), promoted: Some(promoted[0]) }) }
        _16 = _19;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _15 = _16;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        StorageDead(_15);                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:36: 255:37
        StorageLive(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageLive(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _18 = _13;                       // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        _17 = move _18 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
        StorageDead(_18);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _5 = Arguments::new_v1(move _14, move _17) -> bb2; // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:49: 479:79
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: unsafe fn(&[&'static str], &[std::fmt::ArgumentV1]) -> std::fmt::Arguments {std::fmt::Arguments::new_v1}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        StorageDead(_17);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_14);                // scope 3 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_16);                // scope 2 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        StorageDead(_13);                // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:78: 479:79
        _0 = std::fmt::Formatter::write_fmt(move _4, move _5) -> bb3; // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:34: 479:80
                                         // mir::Constant
                                         // + span: /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:39: 479:48
                                         // + literal: Const { ty: for<'r, 's> fn(&'r mut std::fmt::Formatter, std::fmt::Arguments<'s>) -> std::result::Result<(), std::fmt::Error> {std::fmt::Formatter::write_fmt}, val: Value(Scalar(<ZST>)) }
    }

    bb3: {
        StorageDead(_5);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_4);                 // scope 0 at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/macros/mod.rs:479:79: 479:80
        StorageDead(_7);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        StorageDead(_6);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:80: 352:81
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:352:81: 352:81
    }
}

promoted[0] in errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/quick_error.rs:264:9: 283:10>::fmt::{closure#1}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    let mut _1: [&str; 1];               // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37

    bb0: {
        _1 = [const ""];                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 }) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:255:33: 255:37
    }
}

fn serialize::{closure#0}(_1: [closure@src/main.rs:221:60: 221:84]) -> &str {
    let mut _0: &str;                    // return place in scope 0 at src/main.rs:221:63: 221:63

    bb0: {
        _0 = const "failed to serialize"; // scope 0 at src/main.rs:221:63: 221:84
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 115, 101, 114, 105, 97, 108, 105, 122, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [524287], len: Size { raw: 19 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 19 })
                                         // mir::Constant
                                         // + span: src/main.rs:221:63: 221:84
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 115, 101, 114, 105, 97, 108, 105, 122, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [524287], len: Size { raw: 19 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 19 }) }
        return;                          // scope 0 at src/main.rs:221:84: 221:84
    }
}

fn errors::<impl at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:76:9: 110:10>::kind(_1: &errors::Error) -> &errors::ErrorKind {
    debug self => _1;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:95:21: 95:26
    let mut _0: &errors::ErrorKind;      // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:17: 96:28
    let mut _2: &errors::Error;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:17: 96:21

    bb0: {
        StorageLive(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:17: 96:21
        _2 = _1;                         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:17: 96:21
        _0 = errors::Error::kind(move _2) -> bb1; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:17: 96:28
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:22: 96:26
                                         // + literal: Const { ty: for<'r> fn(&'r errors::Error) -> &'r errors::ErrorKind {errors::Error::kind}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageDead(_2);                 // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:96:27: 96:28
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.10.0/src/error_chain.rs:97:14: 97:14
    }
}
